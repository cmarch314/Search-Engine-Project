{"text": "ICS 269 Winter 2 6 Theory Seminar Mar 17 2 6 in CS 253 Tight Approximation Algorithms for Maximum General Assignment Problems Authored by Lisa Fleischer Michel X Goemans Vahab S Mirrokni and Maxim Sviridenko Presented by Matt Nguyen Abstract The authors show that for any separable assignment problem SAP if there exists an B approximation algorithm for solving the single bin case then there is an LP based algorithm that yields an 1 1 e approximation and a local search algorithm with a 1 2 approximation A SAP is defined as follows Given a set of bins and items to pack into bins a value f ij for assigning item j to bin i and a separate packing constraint on each bin defined by a set of subsets of items that fit into bin i find the packing that maximizes the aggregate value ", "_id": "http://www.ics.uci.edu/~theory/269/060317.html", "title": "theory seminar, mar 17, 2006", "html": "<!DOCTYPE html PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html>\n<head>\n<title>Theory Seminar, Mar 17, 2006</title>\n</head>\n<body>\n<a href=\"/~theory/\"><img src=\"/~theory/logo/shortTheory.gif\" width=\"\n521\" height=\"82\" border=\"0\" alt=\"ICS Theory Group\"></a>\n\n<h2>ICS 269, Winter 2006: Theory Seminar</h2>\n\n<h3>Mar 17, 2006, in CS 253</h3>\n\n<h1>Tight Approximation Algorithms for \nMaximum General Assignment Problems</h1>\n\n<h2>Authored by:  Lisa Fleischer, Michel X. Goemans, \nVahab S. Mirrokni, and Maxim Sviridenko</h2>\n\n<h2>Presented by Matt Nguyen</h2>\n\n<p>\nAbstract:\n<p>\nThe authors show that for any separable assignment problem (SAP), if there \nexists an B-approximation algorithm for solving the single bin case, then \nthere is an LP-based algorithm that yields an (1-1/e - \n&epsilon;)-approximation and a local search algorithm with a \n(1/2-&epsilon;)-approximation.\n\nA SAP is defined as follows:  Given a set of bins and items to pack into \nbins, a value <I>f_ij</I> for assigning item <I>j</I> to bin <I>i</I>, and a separate packing \nconstraint on each bin (defined by a set of subsets of items that fit into \nbin <I>i</I>), find the packing that maximizes the aggregate value.\n</body>\n</html>\n", "id": 3524.0}