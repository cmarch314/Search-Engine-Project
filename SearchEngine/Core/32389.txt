{"text": "MINUTES IETF WEBDAV Working Group Meeting Los Angeles CA IETFApril 2 1998 A WEBDAV WG meeting was held at the Los Angeles IETF on April 2 1998 with approximately 45 people in attendance Jim Whitehead chaired the meeting Rohit Khare Del Jensen and Jim Davis were notetakers Final minutes were prepared by Jim Whitehead from these notes The meeting began with a review of the agenda followed by a presentation on WG status by Jim Whitehead The WEBDAV Distributed Authoring Protocol document will be revised based on comments from the second working group last call producing revision 8 and will be sent to the IESG for Last Call and review as soon as the 8 draft is in the Internet Drafts directory A WEBDAV interim working group meeting will take place June 15 17 1998 in Redmond WA to discuss advanced collections functionality versioning and access control Many thanks to Yaron Goland and Microsoft for hosting this meeting Following the WG status report Keith Swenson kswenson netscape com URL http people netscape com kswenson http workflow gave a brief presentation on an HTTP based workflow standardization effort that is just starting up The purpose of this effort is develop an interoperability protocol for invoking and controlling an asynchronous process via HTTP Elements of the protocol include simple process control e g start pause resume and the ability to start external systems such as a backup process A key element of the proposal is that it doesn t have to hold open a connection since the initial design idea is to start a process receiving in return an identifier URL for the process which can then be used in subsequent operations There will be an initial open meeting for interested participants on May 4 5 1998 in Costa Mesa California The group s initial goal is to release a preliminary specification in six months After Keith s presentation the question was asked How is this different from telnet The reply was this protocol does not require an open connection and isn t intended to be a login based protocol The siimilarity between this work and IPP was noted since IPP also uses HTTP and isn t login based Following this question there was brief discussion on the similarity between the notifications being discussed in IPP PIPR and the notifications being discussed for workflow support Jim Davis next led a discussion of the advanced collections requirements document and this discussion lasted for the remainder of the session The goals of the discussion were to generate shared understanding and hopefully consensus on the requirements goals but not to do any design work The presentation began with a review of terminology then launched into a step by step overview of each requirement in the advanced collections requirements draft draft ietf webdav acreq 1 txt The notes below are organized by requirement number A few questions were asked during the discussion which don t neatly fit underneath an existing requirement These are Can one have a reference to a reference Can a reference have more than one target e g this might be useful in the context of content negotiation Requirements related discussion and outcome Agreement represents the rough consensus of the attendees at the meeting and this consensus is provisional pending discussion on the mailing list Requirements for Referential Collection Members 3 1 1 The same resource may be referenced by referential members of multiple collections Agreed 3 1 2 The same resource may be referenced by more than one referential member of the same collection Agreed 3 1 3 It is possible for the same resource to be an internal member of a collection and also to be referenced by one or more referential members of that same collection Agreed Requirement 3 1 3 sparked a discussion on circular references Specifically should WebDAV allow disallow or be silent about circular references It was noted that a reference can point to any other resource including a collection Early WebDAV drafts do exempt servers from having to detect circular refereces 3 1 4 Operations on a referential member do not affect the resource it references Agreed Discussion of 3 1 4 led to one suggested new requirement N 1 Operations on a target do not affect the reference s No consensus was recorded on this new requirement Requirement 3 1 4 also led to a discussion of preserving referential integrity of references Participants asked whether deleting a referenced resource would result in deletion of the reference Similarly for a move would the reference be updated if its destination were moved It was noted that in the general case where the referred to resource is on a different server maintaining referential integrity is impossible However some participants expressed a desire for a reference whose integrity would be guaranteed even if that meant the server would limit the potential destinations of the reference The two kinds of references were called strong integrity enforced and weak no integrity enforcement 3 1 5 For any referential member of a collection it is possible to obtain the URI of the resource it references Agreed 3 1 6 It is possible to add a referential member to a collection Agreed 3 1 7 It is possible to remove a referential member from a collection Agreed 3 1 8 It is possible for a referential member of a collection to carry its own properties distinct from those of the resource it refers to An example of this is the author or who added property Agreed 3 1 9 A referential member of a collection also inherits the properties of the resource it refers to There was wide opposition to this on the following grounds Assuming that the properties are copied when the reference is created it is unclear what access rights to use when doing the PROPFIND Documents and references have different access rights and sometimes one is wider than the other After the properties are copied the owner of the target resource no longer has means to control access on the properties ACAP has had problems with inheritance Referential members are like symbolic links But symbolic links do not in general have the properties of their target Their owner size and date modified all differ In addition If the properties are copied they could be become out of date afterwards In particular one participant vehemently complained that inherit by lookup is out since it requires one server to track another Another participant raised the question isn t this easily excisable since no other requirements build up on it the minimum set of requirements could exclude it safely 3 1 1 A listing of the members of a collection shows both the internal members and the referential members Agreed 3 1 11 Servers are encouraged to maintain referential integrity for referential members as far as possible but are not required to do so No agreement This requirement led to a re opening of the integrity issues of 3 1 4 One participant noted that this requirement is like a should maintain integrity but isn t should too weak to be useful Some applications really care whether referential integrity will be maintained The issue of cross server integrity maintenance was raised and what this implies for the scope of integrity maintenance The discussion led to the following requirement N 2 It is possible to request creation of a referential member that the server will guarentee to have referentially integrity Some ideas on how this might be implemented were raised during the discussion and include using a header to inform the server to create the reference only if it could guarantee the integrity A property can be used to query the integrity maintenance capabilities of the reference There was agreement on this new requirement N 3 It is possible to discover whether or not a referential member has such integrity protection Proposed but no agreement reached Needs discussion N 4 Is is possible to discover whether a resource is the target of such a protected referential member Proposed but no agreement reached Needs discussion 3 1 12 For any member of a collection it is possible to discover whether it is an internal or a referential member Agreed Requirements for Ordered Collections 3 2 1 The ordering mechanism is sufficiently standardized that different applications and servers can operate on the same ordering without private agreement Agreed with change in wording Ordering is sufficiently standardized i e remove the and mechanism due to concern over the word mechanism and its precise meaning and implications 3 2 2 The semantics of an ordering are discoverable Agreed but only after much discussion There was general concern over the meaning of ordering semantics since it can be read pretty broadly There was discussion of proposals to replace semantics with operational characteristics or with ordering methodology but in the end the original wording prevailed However an action item was recorded to discuss the meaning of ordering semantics on the list 3 2 3 When a client requests a listing of the members of a collection it can specify the ordering to be applied and the server will apply that ordering to its response Agreed with the addition that The server may decline to support the requested ordering 3 2 4 It is possible to order the members of a collection in an arbitrary way not necessarily based on property values Agreed with the word arbitrary changed to client specified One way we got into trouble here is that since the ordering might well be stored in a property it s hard to think of an ordering that is NOT based on a property value Also there was much sentiment that DASL should support sorting on property values and that orderings based on property values alone should be left to DASL and not addressed here There were some dissenting comments which noted that this feature should be optional and not required Also some parts of a server may not be able to support ordering 3 2 5 Internal and referential members may by intermixed in the same ordering Agreed 3 2 6 It is possible to impose multiple orderings on the same collection No agreement No one at the meeting was able to propose a scenario that actually requires more than one ordering The scenario in the requirements document was discredited on the claim that the two instructors should instead each create their own collections using referential members and impose the ordering they wished There was general agreement with a proposal to remove 3 2 6 As a result of this change 3 2 4 becomes a labeling issue and there was strong sentiment that 3 2 3 and 3 2 7 should be removed as well since this preserves a model where there are collections with preserved order and DASL capability for sorting Furthermore there was some discussion about whether 3 2 8 should also be removed 3 2 7 An ordering is not required to contain all members of the collection No agreement for the same reasons discussed in 3 2 6 3 2 8 A collection member may belong to the same ordering more than once No agreement for the same reasons discussed in 3 2 6 3 2 9 It is possible to modify an existing ordering efficiently No agreement One participant noted that this seemed strange since it s like a motherhood statement There was significant participant uncertainty from the discussion of 3 2 6 until the end of the session There was insufficient time to discuss the Issues from the advanced collections requirements draft Meeting Adjourned ", "_id": "http://www.ics.uci.edu/~ejw/authoring/la98/minutes.html", "title": "minutes, april, 1998 los angeles ietf webdav working group meeting", "html": "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML//EN\">\n<html>\n  <head>\n    <title>Minutes, April, 1998 Los Angeles IETF WEBDAV Working Group Meeting</title>\n  </head>\n\n  <body>\n<CENTER>\n<h2>MINUTES</h2>\n<h2>IETF WEBDAV Working Group Meeting</h2>\n<h3>Los Angeles, CA IETF<BR>April 2, 1998</h3>      \n</center>\n\n<P>A WEBDAV WG meeting was held at the Los Angeles IETF, on April 2,\n1998, with approximately 45 people in attendance.  Jim Whitehead\nchaired the meeting, Rohit Khare, Del Jensen, and Jim Davis were\nnotetakers. Final minutes were prepared by Jim Whitehead from these\nnotes. The meeting began with a review of the agenda, followed by a\npresentation on WG status by Jim Whitehead. The WEBDAV Distributed\nAuthoring Protocol document will be revised based on comments from the\nsecond working group last call, producing revision -08, and will be\nsent to the IESG for Last Call and review as soon as the -08 draft is\nin the Internet-Drafts directory. A WEBDAV interim working group\nmeeting will take place June 15-17, 1998, in Redmond, WA, to discuss\nadvanced collections functionality, versioning, and access\ncontrol. Many thanks to Yaron Goland and Microsoft for hosting this\nmeeting.\n\n<P>Following the WG status report, Keith Swenson,\n&lt;<A HREF=\"mailto:kswenson@netscape.com\">kswenson@netscape.com</A>&gt;,\n&lt;URL:<A HREF=\"http://people.netscape.com/kswenson/http_workflow\">\nhttp://people.netscape.com/kswenson/http_workflow</A>&gt;, gave a brief\npresentation on an HTTP-based workflow standardization effort that is\njust starting up. The purpose of this effort is develop an\ninteroperability protocol for invoking and controlling an asynchronous\nprocess via HTTP. Elements of the protocol include simple process\ncontrol (e.g., start, pause, resume), and the ability to start\nexternal systems, such as a backup process. A key element of the\nproposal is that it doesn't have to hold open a connection, since the\ninitial design idea is to start a process, receiving in return an\nidentifier URL for the process, which can then be used in subsequent\noperations. There will be an initial open meeting for interested\nparticipants on May 4, 5, 1998, in Costa Mesa, California. The group's\ninitial goal is to release a preliminary specification in six months.\n\n<P>After Keith's presentation, the question was asked, \"How is this\ndifferent from telnet?\" The reply was this protocol does not require\nan open connection, and isn't intended to be a login-based\nprotocol. The siimilarity between this work and IPP was noted, since\nIPP also uses HTTP, and isn't login-based.  Following this question,\nthere was brief discussion on the similarity between the notifications\nbeing discussed in IPP, PIPR, and the notifications being discussed\nfor workflow support.\n\n<P>Jim Davis next led a discussion of the advanced collections\nrequirements document, and this discussion lasted for the remainder of\nthe session. The goals of the discussion were to generate shared\nunderstanding, and hopefully consensus on the requirements (goals),\nbut not to do any design work. The presentation began with a review of\nterminology, then launched into a step by step overview of each\nrequirement in the advanced collections requirements draft,\ndraft-ietf-webdav-acreq-01.txt. The notes below are organized by\nrequirement number.\n\n<P>A few questions were asked during the discussion which don't neatly\nfit underneath an existing requirement.  These are:\n\n<UL>\n<LI>Can one have a reference to a reference?\n<LI>Can a reference have more than one target (e.g., this might be\nuseful in the context of content negotiation)?\n</UL>\n\n<P>Requirements-related discussion and outcome.  Agreement represents\nthe rough consensus of the attendees at the meeting, and this\nconsensus is provisional pending discussion on the mailing list.\n\n<P><B>Requirements for Referential Collection Members:</B>\n\n<P>3.1.1 The same resource may be referenced by referential members of\nmultiple collections.\n\n<P>Agreed.\n\n<P>3.1.2 The same resource may be referenced by more than one referential\nmember of the same collection.\n\n<P>Agreed.\n\n<P>3.1.3 It is possible for the same resource to be an internal member of\na collection and also to be referenced by one or more referential\nmembers of that same collection.\n\n<P>Agreed.\n\n<P>Requirement 3.1.3 sparked a discussion on circular\nreferences. Specifically, should WebDAV allow, disallow, or be silent\nabout circular references? It was noted that a reference can point to\nany other resource, including a collection. Early WebDAV drafts do\nexempt servers from having to detect circular refereces.\n\n<P>3.1.4 Operations on a referential member do not affect the resource\nit references.\n\n<P>Agreed.\n\n<P>Discussion of 3.1.4 led to one suggested new requirement:\n\n<P>N.1 Operations on a target do not affect the reference(s)\n\n<P>No consensus was recorded on this new requirement.\n\n<P>Requirement 3.1.4 also led to a discussion of preserving\nreferential integrity of references. Participants asked whether\ndeleting a referenced resource would result in deletion of the\nreference.  Similarly for a move, would the reference be updated if\nits destination were moved? It was noted that in the general case,\nwhere the referred-to resource is on a different server, maintaining\nreferential integrity is impossible. However, some participants\nexpressed a desire for a reference whose integrity would be\nguaranteed, even if that meant the server would limit the potential\ndestinations of the reference.  The two kinds of references were\ncalled \"strong\" (integrity-enforced) and \"weak\" (no integrity\nenforcement).\n\n<P>3.1.5 For any referential member of a collection, it is possible to\nobtain the URI of the resource it references.\n\n<P>Agreed.\n\n<P>3.1.6 It is possible to add a referential member to a collection.\n\n<P>Agreed.\n\n<P>3.1.7 It is possible to remove a referential member from a collection.\n\n<P>Agreed.\n\n<P>3.1.8 It is possible for a referential member of a collection to\ncarry its own properties, distinct from those of the resource it\nrefers to.\n\n<P>An example of this is the author, or \"who added\" property.\n\n<P>Agreed.\n\n<P>3.1.9 A referential member of a collection also inherits the\nproperties of the resource it refers to.\n\n<P>There was wide opposition to this, on the following grounds:\n\n<OL>\n<LI>Assuming that the properties are copied when the reference is\ncreated, it is unclear what access rights to use when doing the\nPROPFIND.  Documents and references have different access rights, \nand sometimes one is wider than the other.\n\n<LI>After the properties are copied, the owner of the target resource\nno longer has means to control access on the properties.\n\n<LI>ACAP has had problems with 'inheritance'.\n\n<LI>Referential members are like symbolic links.  But symbolic links\ndo not in general have the 'properties' of their target.  Their\nowner, size, and date modified all differ.\n<BR>\n<BR>\nIn addition:<BR>\n<BR>\n<LI>If the properties are copied, they could be become out of date\nafterwards. In particular, one participant vehemently complained\nthat inherit-by-lookup is out since it requires one server to \ntrack another.\n</OL>\n\n<P>Another participant raised the question: isn't this easily\nexcisable -- since no other requirements build up on it, the minimum\nset of requirements could exclude it safely.\n\n<P>3.1.10 A listing of the members of a collection shows both the\ninternal members and the referential members.\n\n<P>Agreed.\n\n<P>3.1.11 Servers are encouraged to maintain referential integrity for\nreferential members as far as possible, but are not required to do so.\n\n<P>No agreement.  This requirement led to a re-opening of the\nintegrity issues of 3.1.4. One participant noted that this requirement\nis like a \"should\" maintain integrity, but isn't should too weak to be\nuseful? Some applications really care whether referential integrity\nwill be maintained. The issue of cross-server integrity maintenance\nwas raised, and what this implies for the scope of integrity\nmaintenance. The discussion led to the following requirement:\n\n<P>N.2 It is possible to request creation of a referential member that\nthe server will guarentee to have referentially integrity.\n\n<P>Some ideas on how this might be implemented were raised during the\ndiscussion, and include using a header to inform the server to create\nthe reference only if it could guarantee the integrity. A property can\nbe used to query the integrity maintenance capabilities of the\nreference.\n\n<P>There was agreement on this new requirement.\n\n<P>N.3 It is possible to discover whether or not a referential member\nhas such 'integrity protection'.\n\n<P>Proposed, but no agreement reached.  Needs discussion.\n\n<P>N.4 Is is possible to discover whether a resource is the target of\nsuch a 'protected referential member'.\n\n<P>Proposed, but no agreement reached.  Needs discussion.\n\n<P>3.1.12 For any member of a collection, it is possible to discover\nwhether it is an internal or a referential member.\n\n<P>Agreed.\n\n<P><B>Requirements for Ordered Collections:</B>\n\n<P>3.2.1 The ordering mechanism is sufficiently standardized that\ndifferent applications and servers can operate on the same ordering\nwithout private agreement.\n\n<P>Agreed, with change in wording: \"Ordering is sufficiently\nstandardized...\" (i.e., remove \"the\" and \"mechanism\"), due to concern\nover the word 'mechanism', and its precise meaning and implications.\n\n<P>3.2.2 The semantics of an ordering are discoverable.\n\n<P>Agreed, but only after much discussion. There was general concern\nover the meaning of \"ordering semantics\", since it can be read pretty\nbroadly. There was discussion of proposals to replace \"semantics\" with\n\"operational characteristics\" or with \"ordering methodology\", but in\nthe end the original wording prevailed. However, an action item was\nrecorded to discuss the meaning of \"ordering semantics\" on the list.\n\n<P>3.2.3 When a client requests a listing of the members of a\ncollection, it can specify the ordering to be applied, and the server\nwill apply that ordering to its response.\n\n<P>Agreed, with the addition that \"The server may decline to support\nthe requested ordering\".\n\n<P>3.2.4 It is possible to order the members of a collection in an\narbitrary way, not necessarily based on property values.\n\n<P>Agreed, with the word \"arbitrary\" changed to \"client-specified\".\nOne way we got into trouble here is that since the ordering might well\nbe stored in a property, it's hard to think of an ordering that is NOT\nbased on a property value.  Also, there was much sentiment that DASL\nshould support sorting on property values, and that orderings based on\nproperty values alone should be left to DASL and not addressed here.\n\n<P>There were some dissenting comments which noted that this feature\nshould be optional, and not required.  Also, some parts of a server\nmay not be able to support ordering.\n\n<P>3.2.5 Internal and referential members may by intermixed in the\nsame ordering.\n\n<P>Agreed.\n\n<P>3.2.6 It is possible to impose multiple orderings on the same\ncollection.\n\n<P>No agreement.  No one at the meeting was able to propose a scenario\nthat actually requires more than one ordering.  The scenario in the\nrequirements document was discredited, on the claim that the two\ninstructors should instead each create their own collections, using\nreferential members, and impose the ordering they wished.\n\n<P>There was general agreement with a proposal to remove 3.2.6. As a\nresult of this change, 3.2.4 becomes a labeling issue, and there was\nstrong sentiment that 3.2.3 and 3.2.7 should be removed as well, since\nthis preserves a model where there are collections with preserved\norder and DASL capability for sorting.  Furthermore, there was some\ndiscussion about whether 3.2.8 should also be removed.\n\n<P>3.2.7 An ordering is not required to contain all members of the\ncollection.\n\n<P>No agreement, for the same reasons discussed in 3.2.6.\n\n<P>3.2.8 A collection member may belong to the same ordering more than once.\n\n<P>No agreement, for the same reasons discussed in 3.2.6.\n\n<P>3.2.9 It is possible to modify an existing ordering efficiently.\n\n<P>No agreement.  One participant noted that this seemed strange,\nsince it's like a \"motherhood\" statement.\n\n<P>There was significant participant uncertainty from the discussion\nof 3.2.6 until the end of the session.\n\n<P>There was insufficient time to discuss the \"Issues\" from the\nadvanced collections requirements draft.\n\n<P>*** Meeting Adjourned ***\n</body>\n</html>", "id": 32389.0}