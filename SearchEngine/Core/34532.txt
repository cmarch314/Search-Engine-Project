{"text": "Search LoginPreferencesHelp GuideAbout Trac WikiTimelineRoadmapBrowse SourceView TicketsSearch wiki TracStandalone Context Navigation Start PageIndexHistory Tracd Tracd is a lightweight standalone Trac web server It can be used in a variety of situations from a test or development server to a multiprocess setup behind another web server used as a load balancer Pros Fewer dependencies You don t need to install apache or any other web server Fast Should be almost as fast as the mod python version and much faster than the CGI even more so since version 12 where the HTTP 1 1 version of the protocol is enabled by default Automatic reloading For development Tracd can be used in auto reload mode which will automatically restart the server whenever you make a change to the code in Trac itself or in a plugin Cons Fewer features Tracd implements a very simple web server and is not as configurable or as scalable as Apache httpd No native HTTPS support sslwrap can be used instead or stunnel a tutorial on how to use stunnel with tracd or Apache with mod proxy Usage examples A single project on port 8 8 http localhost 8 8 tracd p 8 8 path to project Stricly speaking this will make your Trac accessible to everybody from your network rather than localhost only To truly limit it use hostname option tracd hostname localhost p 8 8 path to project With more than one project http localhost 8 8 project1 and http localhost 8 8 project2 tracd p 8 8 path to project1 path to project2 You can t have the last portion of the path identical between the projects since Trac uses that name to keep the URLs of the different projects unique So if you use project1 path to and project2 path to you will only see the second project An alternative way to serve multiple projects is to specify a parent directory in which each subdirectory is a Trac project using the e option The example above could be rewritten tracd p 8 8 e path to To exit the server on Windows be sure to use CTRL BREAK using CTRL C will leave a Python process running in the background Installing as a Windows Service Option 1 To install as a Windows service get the SRVANY utility and run C path to instsrv exe tracd C path to srvany exe reg add HKLM SYSTEM CurrentControlSet Services tracd Parameters v Application d C path to python exe C path to python scripts tracd script py your tracd parameters net start tracd DO NOT use tracd exe Instead register python exe directly with tracd script py as a parameter If you use tracd exe it will spawn the python process without SRVANY s knowledge This python process will survive a net stop tracd If you want tracd to start automatically when you boot Windows do sc config tracd start auto The spacing here is important Once the service is installed it might be simpler to run the Registry Editor rather than use the reg add command documented above Navigate to HKEY LOCAL MACHINE SYSTEM CurrentControlSet Services tracd Parameters Three string parameters are provided AppDirectory C Python26 Application python exe AppParameters scripts tracd script py p 8 8 Note that if the AppDirectory is set as above the paths of the executable and of the script name and parameter values are relative to the directory This makes updating Python a little simpler because the change can be limited here to a single point This is true for the path to the htpasswd file as well despite the documentation calling out the full path to htpasswd however you may not wish to store that file under the Python directory For Windows 7 User srvany exe may not be an option so you can use WINSERV utility and run C path to winserv exe install tracd displayname tracd start auto C path to python exe c path to python scripts tracd script py your tracd parameters net start tracd Option 2 Use WindowsServiceScript available at Trac Hacks Installs removes starts stops etc your Trac service Using Authentication Tracd provides support for both Basic and Digest authentication Digest is considered more secure The examples below use Digest to use Basic authentication replace auth with basic auth in the command line The general format for using authentication is tracd p port auth base project dir password file path realm project path where base project dir the base directory of the project specified as follows when serving multiple projects relative to the project path when serving only a single project s the name of the project directory Don t use an absolute path here as this won t work Note This parameter is case sensitive even for environments on Windows password file path path to the password file realm the realm name can be anything project path path of the project auth in the above means use Digest authentication replace auth with basic auth if you want to use Basic auth Although Basic authentication does not require a realm the command parser does so the second comma is required followed directly by the closing quote for an empty realm name Examples tracd p 8 8 auth project1 path to passwordfile mycompany com path to project1 Of course the password file can be be shared so that it is used for more than one project tracd p 8 8 auth project1 path to passwordfile mycompany com auth project2 path to passwordfile mycompany com path to project1 path to project2 Another way to share the password file is to specify for the project name tracd p 8 8 auth path to users htdigest mycompany com path to project1 path to project2 Basic Authorization Using a htpasswd password file This section describes how to use tracd with Apache htpasswd files To create a htpasswd file use Apache s htpasswd command see below for a method to create these files without using Apache sudo htpasswd c path to env htpasswd username then for additional users sudo htpasswd path to env htpasswd username2 Then to start tracd run something like this tracd p 8 8 basic auth projectdirname fullpath environmentname htpasswd realmname fullpath environmentname For example tracd p 8 8 basic auth testenv srv tracenv testenv htpasswd My Test Env srv tracenv testenv Note You might need to pass m as a parameter to htpasswd on some platforms OpenBSD Digest authentication Using a htdigest password file If you have Apache available you can use the htdigest command to generate the password file Type htdigest to get some usage instructions or read this page from the Apache manual to get precise instructions You ll be prompted for a password to enter for each user that you create For the name of the password file you can use whatever you like but if you use something like users htdigest it will remind you what the file contains As a suggestion put it in your projectname conf folder along with the trac ini file Note that you can start tracd without the auth argument but if you click on the Login link you will get an error Generating Passwords Without Apache Basic Authorization can be accomplished via this online HTTP Password generator Copy the generated password hash line to the htpasswd file on your system You can use this simple Python script to generate a digest password file from optparse import OptionParser The md5 module is deprecated in Python 2 5 try from hashlib import md5 except ImportError from md5 import md5 realm trac build the options usage usage prog options parser OptionParser usage usage parser add option u username action store dest username type string help the username for whom to generate a password parser add option p password action store dest password type string help the password to use parser add option r realm action store dest realm type string help the realm in which to create the digest options args parser parse args check options if options username is None or options password is None parser error You must supply both the username and password if options realm is not None realm options realm Generate the string to enter into the htdigest file kd lambda x md5 join x hexdigest print join options username realm kd options username realm options password Note If you use the above script you must set the realm in the auth argument to trac Example usage assuming you saved the script as trac digest py python trac digest py u username p password c digest txt tracd port 8 auth proj name c digest txt trac c path to proj name Using md5sum It is possible to use md5sum utility to generate digest password file printf user trac password md5sum user htdigest and manually delete from the end and add user trac to the start of line from to file Reference Here s the online help as a reminder tracd help Usage tracd options projenv Options version show program s version number and exit h help show this help message and exit a DIGESTAUTH auth DIGESTAUTH projectdir htdigest file realm basic auth BASICAUTH projectdir htpasswd file realm p PORT port PORT the port number to bind to b HOSTNAME hostname HOSTNAME the host name or IP address to bind to protocol PROTOCOL http scgi ajp q unquote unquote PATH INFO may be needed when using ajp http1 use HTTP 1 protocol version default http11 use HTTP 1 1 protocol version instead of HTTP 1 e PARENTDIR env parent dir PARENTDIR parent directory of the project environments base path BASE PATH the initial portion of the request URL s path r auto reload restart automatically when sources are modified s single env only serve a single project without the project list Tips Serving static content If tracd is the only web server used for the project it can also be used to distribute static content tarballs Doxygen documentation etc This static content should be put in the TRAC ENV htdocs folder and is accessed by URLs like project URL chrome site Example given a TRAC ENV htdocs software 1 tar gz file the corresponding relative URL would be project name chrome site software 1 tar gz which in turn can be written as htdocs software 1 tar gz TracLinks syntax or project name chrome site software 1 tar gz relative link syntax Support for htdocs TracLinks syntax was added in version 1 Using tracd behind a proxy In some situations when you choose to use tracd behind Apache or another web server In this situation you might experience issues with redirects like being redirected to URLs with the wrong host or protocol In this case and only in this case setting the trac use base url for redirect to true can help as this will force Trac to use the value of trac base url for doing the redirects If you re using the AJP protocol to connect with tracd which is possible if you have flup installed then you might experience problems with double quoting Consider adding the unquote parameter See also TracOnWindowsIisAjp TracNginxRecipe Serving a different base path than Tracd supports serving projects with different base urls than project The parameter name to change this is tracd base path some path See also TracInstall TracCgi TracModPython TracGuide Running tracd exe as a Windows service Last modified 3 years ago Last modified on Jan 3 2 12 12 53 27 PM Download in other formats Plain Text Powered by Trac 1 1 By Edgewall Software All content copyright 2 7 2 8 by LUCI http luci ics uci edu ", "_id": "http://djp3-pc2.ics.uci.edu/LUCICodeRepository/nomaticIM/wiki/TracStandalone", "title": "\n      tracstandalone \u2013 nomatic*im\n    ", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n  \n\n\n  <head>\n\t\t<title>\n      TracStandalone \u2013 Nomatic*IM\n    </title><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><link rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search\" /><link rel=\"help\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracStandalone?format=txt\" type=\"text/x-trac-wiki\" title=\"Plain Text\" /><link rel=\"start\" href=\"/LUCICodeRepository/nomaticIM/wiki\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/wiki.css\" type=\"text/css\" /><link rel=\"shortcut icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link rel=\"icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link type=\"application/opensearchdescription+xml\" rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search/opensearch\" title=\"Search Nomatic*IM\" /><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/jquery.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/babel.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/messages/en_US.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/trac.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/search.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/folding.js\"></script><meta name=\"ROBOTS\" content=\"NOINDEX, NOFOLLOW\" /><link rel=\"alternate\" type=\"application/x-wiki\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracStandalone?action=edit\" title=\"Edit this page\" /><script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\"#content\").find(\"h1,h2,h3,h4,h5,h6\").addAnchor(_(\"Link to this section\"));\n        $(\"#content\").find(\".wikianchor\").each(function() {\n          $(this).addAnchor(babel.format(_(\"Link to #%(id)s\"), {id: $(this).attr('id')}));\n        });\n        $(\".foldable\").enableFolding(true, true);\n      });\n    </script>\n\t</head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://luci.ics.uci.edu/#code\"><img src=\"http://luci.ics.uci.edu/blog/archives/LUCIhorzTight.jpg\" alt=\"LUCI Code Repository\" /></a>\n      </div>\n      <form id=\"search\" action=\"/LUCICodeRepository/nomaticIM/search\" method=\"get\">\n        <div>\n          <label for=\"proj-search\">Search:</label>\n          <input type=\"text\" id=\"proj-search\" name=\"q\" size=\"18\" value=\"\" />\n          <input type=\"submit\" value=\"Search\" />\n        </div>\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/login\">Login</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/prefs\">Preferences</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\">Help/Guide</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n    <ul>\n      <li class=\"first active\"><a href=\"/LUCICodeRepository/nomaticIM/wiki\">Wiki</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/timeline\">Timeline</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/roadmap\">Roadmap</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/browser\">Browse Source</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/report\">View Tickets</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/search\">Search</a></li>\n    </ul>\n  </div>\n    <div id=\"main\">\n      <div id=\"pagepath\" class=\"noprint\">\n  <a class=\"pathentry first\" title=\"View WikiStart\" href=\"/LUCICodeRepository/nomaticIM/wiki\">wiki:</a><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracStandalone\" title=\"View TracStandalone\">TracStandalone</a>\n</div>\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/wiki/WikiStart\">Start Page</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/wiki/TitleIndex\">Index</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracStandalone?action=history\">History</a></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"wiki\">\n      <div class=\"wikipage searchable\">\n        \n          <div id=\"wikipage\" class=\"trac-content\"><h1 id=\"Tracd\">Tracd</h1>\n<p>\nTracd is a lightweight standalone Trac web server.\nIt can be used in a variety of situations, from a test or development server to a multiprocess setup behind another web server used as a load balancer.\n</p>\n<h2 id=\"Pros\">Pros</h2>\n<ul><li>Fewer dependencies: You don't need to install apache or any other web-server.\n</li><li>Fast: Should be almost as fast as the <a class=\"wiki\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracModPython\">mod_python</a> version (and much faster than the <a class=\"wiki\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracCgi\">CGI</a>), even more so since version 0.12 where the HTTP/1.1 version of the protocol is enabled by default\n</li><li>Automatic reloading: For development, Tracd can be used in <em>auto_reload</em> mode, which will automatically restart the server whenever you make a change to the code (in Trac itself or in a plugin).\n</li></ul><h2 id=\"Cons\">Cons</h2>\n<ul><li>Fewer features: Tracd implements a very simple web-server and is not as configurable or as scalable as Apache httpd.\n</li><li>No native HTTPS support: <a class=\"ext-link\" href=\"http://www.rickk.com/sslwrap/\"><span class=\"icon\">\u200b</span>sslwrap</a> can be used instead,\nor <a class=\"ext-link\" href=\"http://trac.edgewall.org/wiki/STunnelTracd\"><span class=\"icon\">\u200b</span>stunnel -- a tutorial on how to use stunnel with tracd</a> or Apache with mod_proxy.\n</li></ul><h2 id=\"Usageexamples\">Usage examples</h2>\n<p>\nA single project on port 8080. (<a class=\"ext-link\" href=\"http://localhost:8080/\"><span class=\"icon\">\u200b</span>http://localhost:8080/</a>)\n</p>\n<pre class=\"wiki\"> $ tracd -p 8080 /path/to/project\n</pre><p>\nStricly speaking this will make your Trac accessible to everybody from your network rather than <em>localhost only</em>. To truly limit it use <em>--hostname</em> option.\n</p>\n<pre class=\"wiki\"> $ tracd --hostname=localhost -p 8080 /path/to/project\n</pre><p>\nWith more than one project. (<a class=\"ext-link\" href=\"http://localhost:8080/project1/\"><span class=\"icon\">\u200b</span>http://localhost:8080/project1/</a> and <a class=\"ext-link\" href=\"http://localhost:8080/project2/\"><span class=\"icon\">\u200b</span>http://localhost:8080/project2/</a>)\n</p>\n<pre class=\"wiki\"> $ tracd -p 8080 /path/to/project1 /path/to/project2\n</pre><p>\nYou can't have the last portion of the path identical between the projects since Trac uses that name to keep the URLs of the\ndifferent projects unique. So if you use <tt>/project1/path/to</tt> and <tt>/project2/path/to</tt>, you will only see the second project.\n</p>\n<p>\nAn alternative way to serve multiple projects is to specify a parent directory in which each subdirectory is a Trac project, using the <tt>-e</tt> option. The example above could be rewritten:\n</p>\n<pre class=\"wiki\"> $ tracd -p 8080 -e /path/to\n</pre><p>\nTo exit the server on Windows, be sure to use <tt>CTRL-BREAK</tt> -- using <tt>CTRL-C</tt> will leave a Python process running in the background.\n</p>\n<h2 id=\"InstallingasaWindowsService\">Installing as a Windows Service</h2>\n<h3 id=\"Option1\">Option 1</h3>\n<p>\nTo install as a Windows service, get the <a class=\"ext-link\" href=\"http://www.google.com/search?q=srvany.exe\"><span class=\"icon\">\u200b</span>SRVANY</a> utility and run:\n</p>\n<pre class=\"wiki\"> C:\\path\\to\\instsrv.exe tracd C:\\path\\to\\srvany.exe\n reg add HKLM\\SYSTEM\\CurrentControlSet\\Services\\tracd\\Parameters /v Application /d \"\\\"C:\\path\\to\\python.exe\\\" \\\"C:\\path\\to\\python\\scripts\\tracd-script.py\\\" &lt;your tracd parameters&gt;\"\n net start tracd\n</pre><p>\n<strong>DO NOT</strong> use <tt>tracd.exe</tt>.  Instead register <tt>python.exe</tt> directly with <tt>tracd-script.py</tt> as a parameter.  If you use <tt>tracd.exe</tt>, it will spawn the python process without SRVANY's knowledge.  This python process will survive a <tt>net stop tracd</tt>.\n</p>\n<p>\nIf you want tracd to start automatically when you boot Windows, do:\n</p>\n<pre class=\"wiki\"> sc config tracd start= auto\n</pre><p>\nThe spacing here is important.\n</p>\n<div class=\"wikipage\"><p>\nOnce the service is installed, it might be simpler to run the Registry Editor rather than use the <tt>reg add</tt> command documented above.  Navigate to:<br />\n<tt>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\tracd\\Parameters</tt>\n</p>\n<p>\nThree (string) parameters are provided:\n</p>\n<table class=\"wiki\">\n<tr><td style=\"text-align: left\">AppDirectory </td><td style=\"text-align: left\">C:\\Python26\\ \n</td></tr><tr><td style=\"text-align: left\">Application </td><td style=\"text-align: left\">python.exe \n</td></tr><tr><td style=\"text-align: left\">AppParameters </td><td style=\"text-align: left\">scripts\\tracd-script.py -p 8080 ... \n</td></tr></table>\n<p>\nNote that, if the AppDirectory is set as above, the paths of the executable <em>and</em> of the script name and parameter values are relative to the directory.  This makes updating Python a little simpler because the change can be limited, here, to a single point.\n(This is true for the path to the .htpasswd file, as well, despite the documentation calling out the /full/path/to/htpasswd; however, you may not wish to store that file under the Python directory.)\n</p>\n</div><p>\nFor Windows 7 User, srvany.exe may not be an option, so you can use <a class=\"ext-link\" href=\"http://www.google.com/search?q=winserv.exe\"><span class=\"icon\">\u200b</span>WINSERV</a> utility and run:\n</p>\n<pre class=\"wiki\">\"C:\\path\\to\\winserv.exe\" install tracd -displayname \"tracd\" -start auto \"C:\\path\\to\\python.exe\" c:\\path\\to\\python\\scripts\\tracd-script.py &lt;your tracd parameters&gt;\"\n\nnet start tracd\n</pre><h3 id=\"Option2\">Option 2</h3>\n<p>\nUse <a class=\"ext-link\" href=\"http://trac-hacks.org/wiki/WindowsServiceScript\"><span class=\"icon\">\u200b</span>WindowsServiceScript</a>, available at <a class=\"ext-link\" href=\"http://trac-hacks.org/\"><span class=\"icon\">\u200b</span>Trac Hacks</a>. Installs, removes, starts, stops, etc. your Trac service.\n</p>\n<h2 id=\"UsingAuthentication\">Using Authentication</h2>\n<p>\nTracd provides support for both Basic and Digest authentication. Digest is considered more secure. The examples below use Digest; to use Basic authentication, replace <tt>--auth</tt> with <tt>--basic-auth</tt> in the command line.\n</p>\n<p>\nThe general format for using authentication is:\n</p>\n<pre class=\"wiki\"> $ tracd -p port --auth=\"base_project_dir,password_file_path,realm\" project_path\n</pre><p>\nwhere:\n</p>\n<ul><li><strong>base_project_dir</strong>: the base directory of the project specified as follows:\n<ul><li>when serving multiple projects: <em>relative</em> to the <tt>project_path</tt>\n</li><li>when serving only a single project (<tt>-s</tt>): the name of the project directory\n</li></ul></li></ul><blockquote>\n<p>\nDon't use an absolute path here as this won't work. <em>Note:</em> This parameter is case-sensitive even for environments on Windows.\n</p>\n</blockquote>\n<ul><li><strong>password_file_path</strong>: path to the password file\n</li><li><strong>realm</strong>: the realm name (can be anything)\n</li><li><strong>project_path</strong>: path of the project\n</li></ul><ul><li><strong><tt>--auth</tt></strong> in the above means use Digest authentication, replace <tt>--auth</tt> with <tt>--basic-auth</tt> if you want to use Basic auth.  Although Basic authentication does not require a \"realm\", the command parser does, so the second comma is required, followed directly by the closing quote for an empty realm name.\n</li></ul><p>\nExamples:\n</p>\n<pre class=\"wiki\"> $ tracd -p 8080 \\\n   --auth=\"project1,/path/to/passwordfile,mycompany.com\" /path/to/project1\n</pre><p>\nOf course, the password file can be be shared so that it is used for more than one project:\n</p>\n<pre class=\"wiki\"> $ tracd -p 8080 \\\n   --auth=\"project1,/path/to/passwordfile,mycompany.com\" \\\n   --auth=\"project2,/path/to/passwordfile,mycompany.com\" \\\n   /path/to/project1 /path/to/project2\n</pre><p>\nAnother way to share the password file is to specify \"*\" for the project name:\n</p>\n<pre class=\"wiki\"> $ tracd -p 8080 \\\n   --auth=\"*,/path/to/users.htdigest,mycompany.com\" \\\n   /path/to/project1 /path/to/project2\n</pre><h3 id=\"BasicAuthorization:Usingahtpasswdpasswordfile\">Basic Authorization: Using a htpasswd password file</h3>\n<p>\nThis section describes how to use <tt>tracd</tt> with Apache .htpasswd files.\n</p>\n<p>\nTo create a .htpasswd file use Apache's <tt>htpasswd</tt> command (see <a class=\"wiki\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracStandalone#GeneratingPasswordsWithoutApache\">below</a> for a method to create these files without using Apache):\n</p>\n<pre class=\"wiki\"> $ sudo htpasswd -c /path/to/env/.htpasswd username\n</pre><p>\nthen for additional users:\n</p>\n<pre class=\"wiki\"> $ sudo htpasswd /path/to/env/.htpasswd username2\n</pre><p>\nThen to start <tt>tracd</tt> run something like this:\n</p>\n<pre class=\"wiki\"> $ tracd -p 8080 --basic-auth=\"projectdirname,/fullpath/environmentname/.htpasswd,realmname\" /fullpath/environmentname\n</pre><p>\nFor example:\n</p>\n<pre class=\"wiki\"> $ tracd -p 8080 --basic-auth=\"testenv,/srv/tracenv/testenv/.htpasswd,My Test Env\" /srv/tracenv/testenv\n</pre><p>\n<em>Note:</em> You might need to pass \"-m\" as a parameter to htpasswd on some platforms (OpenBSD).\n</p>\n<h3 id=\"Digestauthentication:Usingahtdigestpasswordfile\">Digest authentication: Using a htdigest password file</h3>\n<p>\nIf you have Apache available, you can use the htdigest command to generate the password file. Type 'htdigest' to get some usage instructions, or read <a class=\"ext-link\" href=\"http://httpd.apache.org/docs/2.0/programs/htdigest.html\"><span class=\"icon\">\u200b</span>this page</a> from the Apache manual to get precise instructions.  You'll be prompted for a password to enter for each user that you create.  For the name of the password file, you can use whatever you like, but if you use something like <tt>users.htdigest</tt> it will remind you what the file contains. As a suggestion, put it in your &lt;projectname&gt;/conf folder along with the <a class=\"wiki\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracIni\">trac.ini</a> file.\n</p>\n<p>\nNote that you can start tracd without the --auth argument, but if you click on the <em>Login</em> link you will get an error.\n</p>\n<h3 id=\"GeneratingPasswordsWithoutApache\">Generating Passwords Without Apache</h3>\n<p>\nBasic Authorization can be accomplished via this <a class=\"ext-link\" href=\"http://www.4webhelp.net/us/password.php\"><span class=\"icon\">\u200b</span>online HTTP Password generator</a>.  Copy the generated password-hash line to the .htpasswd file on your system.\n</p>\n<p>\nYou can use this simple Python script to generate a <strong>digest</strong> password file:\n</p>\n<div class=\"code\"><pre><span class=\"kn\">from</span> <span class=\"nn\">optparse</span> <span class=\"kn\">import</span> OptionParser\n<span class=\"c\"># The md5 module is deprecated in Python 2.5</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">hashlib</span> <span class=\"kn\">import</span> md5\n<span class=\"k\">except</span> <span class=\"ne\">ImportError</span><span class=\"p\">:</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">md5</span> <span class=\"kn\">import</span> md5\nrealm <span class=\"o\">=</span> <span class=\"s\">'trac'</span>\n\n<span class=\"c\"># build the options</span>\nusage <span class=\"o\">=</span> <span class=\"s\">\"usage: %prog [options]\"</span>\nparser <span class=\"o\">=</span> OptionParser<span class=\"p\">(</span>usage<span class=\"o\">=</span>usage<span class=\"p\">)</span>\nparser<span class=\"o\">.</span>add_option<span class=\"p\">(</span><span class=\"s\">\"-u\"</span><span class=\"p\">,</span> <span class=\"s\">\"--username\"</span><span class=\"p\">,</span>action<span class=\"o\">=</span><span class=\"s\">\"store\"</span><span class=\"p\">,</span> dest<span class=\"o\">=</span><span class=\"s\">\"username\"</span><span class=\"p\">,</span> <span class=\"nb\">type</span> <span class=\"o\">=</span> <span class=\"s\">\"string\"</span><span class=\"p\">,</span>\n                  help<span class=\"o\">=</span><span class=\"s\">\"the username for whom to generate a password\"</span><span class=\"p\">)</span>\nparser<span class=\"o\">.</span>add_option<span class=\"p\">(</span><span class=\"s\">\"-p\"</span><span class=\"p\">,</span> <span class=\"s\">\"--password\"</span><span class=\"p\">,</span>action<span class=\"o\">=</span><span class=\"s\">\"store\"</span><span class=\"p\">,</span> dest<span class=\"o\">=</span><span class=\"s\">\"password\"</span><span class=\"p\">,</span> <span class=\"nb\">type</span> <span class=\"o\">=</span> <span class=\"s\">\"string\"</span><span class=\"p\">,</span>\n                  help<span class=\"o\">=</span><span class=\"s\">\"the password to use\"</span><span class=\"p\">)</span>\nparser<span class=\"o\">.</span>add_option<span class=\"p\">(</span><span class=\"s\">\"-r\"</span><span class=\"p\">,</span> <span class=\"s\">\"--realm\"</span><span class=\"p\">,</span>action<span class=\"o\">=</span><span class=\"s\">\"store\"</span><span class=\"p\">,</span> dest<span class=\"o\">=</span><span class=\"s\">\"realm\"</span><span class=\"p\">,</span> <span class=\"nb\">type</span> <span class=\"o\">=</span> <span class=\"s\">\"string\"</span><span class=\"p\">,</span>\n                  help<span class=\"o\">=</span><span class=\"s\">\"the realm in which to create the digest\"</span><span class=\"p\">)</span>\n<span class=\"p\">(</span>options<span class=\"p\">,</span> args<span class=\"p\">)</span> <span class=\"o\">=</span> parser<span class=\"o\">.</span>parse_args<span class=\"p\">()</span>\n\n<span class=\"c\"># check options</span>\n<span class=\"k\">if</span> <span class=\"p\">(</span>options<span class=\"o\">.</span>username <span class=\"ow\">is</span> <span class=\"bp\">None</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"p\">(</span>options<span class=\"o\">.</span>password <span class=\"ow\">is</span> <span class=\"bp\">None</span><span class=\"p\">):</span>\n   parser<span class=\"o\">.</span>error<span class=\"p\">(</span><span class=\"s\">\"You must supply both the username and password\"</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"p\">(</span>options<span class=\"o\">.</span>realm <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"bp\">None</span><span class=\"p\">):</span>\n   realm <span class=\"o\">=</span> options<span class=\"o\">.</span>realm\n   \n<span class=\"c\"># Generate the string to enter into the htdigest file</span>\nkd <span class=\"o\">=</span> <span class=\"k\">lambda</span> x<span class=\"p\">:</span> md5<span class=\"p\">(</span><span class=\"s\">':'</span><span class=\"o\">.</span>join<span class=\"p\">(</span>x<span class=\"p\">))</span><span class=\"o\">.</span>hexdigest<span class=\"p\">()</span>\n<span class=\"k\">print</span> <span class=\"s\">':'</span><span class=\"o\">.</span>join<span class=\"p\">((</span>options<span class=\"o\">.</span>username<span class=\"p\">,</span> realm<span class=\"p\">,</span> kd<span class=\"p\">([</span>options<span class=\"o\">.</span>username<span class=\"p\">,</span> realm<span class=\"p\">,</span> options<span class=\"o\">.</span>password<span class=\"p\">])))</span>\n</pre></div><p>\nNote: If you use the above script you must set the realm in the <tt>--auth</tt> argument to <strong><tt>trac</tt></strong>. Example usage (assuming you saved the script as trac-digest.py):\n</p>\n<pre class=\"wiki\"> $ python trac-digest.py -u username -p password &gt;&gt; c:\\digest.txt\n $ tracd --port 8000 --auth=proj_name,c:\\digest.txt,trac c:\\path\\to\\proj_name\n</pre><h4 id=\"Usingmd5sum\">Using <tt>md5sum</tt></h4>\n<p>\nIt is possible to use <tt>md5sum</tt> utility to generate digest-password file:\n</p>\n<pre class=\"wiki\"> $ printf \"${user}:trac:${password}\" | md5sum - &gt;&gt;user.htdigest\n</pre><p>\nand manually delete \" -\" from the end and add \"${user}:trac:\" to the start of line from 'to-file'.\n</p>\n<h2 id=\"Reference\">Reference</h2>\n<p>\nHere's the online help, as a reminder (<tt>tracd --help</tt>):\n</p>\n<pre class=\"wiki\">Usage: tracd [options] [projenv] ...\n\nOptions:\n  --version             show program's version number and exit\n  -h, --help            show this help message and exit\n  -a DIGESTAUTH, --auth=DIGESTAUTH\n                        [projectdir],[htdigest_file],[realm]\n  --basic-auth=BASICAUTH\n                        [projectdir],[htpasswd_file],[realm]\n  -p PORT, --port=PORT  the port number to bind to\n  -b HOSTNAME, --hostname=HOSTNAME\n                        the host name or IP address to bind to\n  --protocol=PROTOCOL   http|scgi|ajp\n  -q, --unquote         unquote PATH_INFO (may be needed when using ajp)\n  --http10              use HTTP/1.0 protocol version (default)\n  --http11              use HTTP/1.1 protocol version instead of HTTP/1.0\n  -e PARENTDIR, --env-parent-dir=PARENTDIR\n                        parent directory of the project environments\n  --base-path=BASE_PATH\n                        the initial portion of the request URL's \"path\"\n  -r, --auto-reload     restart automatically when sources are modified\n  -s, --single-env      only serve a single project without the project list\n</pre><h2 id=\"Tips\">Tips</h2>\n<h3 id=\"Servingstaticcontent\">Serving static content</h3>\n<p>\nIf <tt>tracd</tt> is the only web server used for the project, \nit can also be used to distribute static content \n(tarballs, Doxygen documentation, etc.)\n</p>\n<p>\nThis static content should be put in the <tt>$TRAC_ENV/htdocs</tt> folder,\nand is accessed by URLs like <tt>&lt;project_URL&gt;/chrome/site/...</tt>.\n</p>\n<p>\nExample: given a <tt>$TRAC_ENV/htdocs/software-0.1.tar.gz</tt> file,\nthe corresponding relative URL would be <tt>/&lt;project_name&gt;/chrome/site/software-0.1.tar.gz</tt>, \nwhich in turn can be written as <tt>htdocs:software-0.1.tar.gz</tt> (<a class=\"wiki\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracLinks\">TracLinks</a> syntax) or <tt>[/&lt;project_name&gt;/chrome/site/software-0.1.tar.gz]</tt> (relative link syntax). \n</p>\n<blockquote>\n<p>\n<em>Support for <tt>htdocs:</tt> <a class=\"wiki\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracLinks\">TracLinks</a> syntax was added in version 0.10</em>\n</p>\n</blockquote>\n<h3 id=\"Usingtracdbehindaproxy\">Using tracd behind a proxy</h3>\n<p>\nIn some situations when you choose to use tracd behind Apache or another web server.\n</p>\n<p>\nIn this situation, you might experience issues with redirects, like being redirected to URLs with the wrong host or protocol. In this case (and only in this case), setting the <tt>[trac] use_base_url_for_redirect</tt> to <tt>true</tt> can help, as this will force Trac to use the value of <tt>[trac] base_url</tt> for doing the redirects.\n</p>\n<p>\nIf you're using the AJP protocol to connect with <tt>tracd</tt> (which is possible if you have flup installed), then you might experience problems with double quoting. Consider adding the <tt>--unquote</tt> parameter.\n</p>\n<p>\nSee also <a class=\"ext-link\" href=\"http://trac.edgewall.org/intertrac/TracOnWindowsIisAjp\" title=\"TracOnWindowsIisAjp in Trac project trac\"><span class=\"icon\">\u200b</span>TracOnWindowsIisAjp</a>, <a class=\"ext-link\" href=\"http://trac.edgewall.org/intertrac/TracNginxRecipe\" title=\"TracNginxRecipe in Trac project trac\"><span class=\"icon\">\u200b</span>TracNginxRecipe</a>.\n</p>\n<h3 id=\"Servingadifferentbasepaththan\">Serving a different base path than /</h3>\n<p>\nTracd supports serving projects with different base urls than /&lt;project&gt;. The parameter name to change this is\n</p>\n<pre class=\"wiki\"> $ tracd --base-path=/some/path\n</pre><hr />\n<p>\nSee also: <a class=\"wiki\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracInstall\">TracInstall</a>, <a class=\"wiki\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracCgi\">TracCgi</a>, <a class=\"wiki\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracModPython\">TracModPython</a>, <a class=\"wiki\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\">TracGuide</a>, <a class=\"ext-link\" href=\"http://trac.edgewall.org/intertrac/TracOnWindowsStandalone%23RunningTracdasservice\" title=\"TracOnWindowsStandalone#RunningTracdasservice in Trac project trac\"><span class=\"icon\">\u200b</span>Running tracd.exe as a Windows service</a>\n</p>\n</div>\n          \n          <div class=\"trac-modifiedby\">\n            <span><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracStandalone?action=diff&amp;version=3\" title=\"Version 3 by trac\">Last modified</a> <a class=\"timeline\" href=\"/LUCICodeRepository/nomaticIM/timeline?from=2012-01-03T12%3A53%3A27-08%3A00&amp;precision=second\" title=\"See timeline at Jan 3, 2012, 12:53:27 PM\">3 years ago</a></span>\n            <span class=\"trac-print\">Last modified on Jan 3, 2012, 12:53:27 PM</span>\n          </div>\n        \n        \n      </div>\n      \n    <div id=\"attachments\">\n    </div>\n\n          <div class=\"buttons\">\n              <form method=\"get\" action=\"/LUCICodeRepository/nomaticIM/wiki/TracStandalone\" id=\"modifypage\">\n                <div>\n                  <input type=\"hidden\" name=\"action\" value=\"edit\" />\n                      <input type=\"submit\" value=\"Edit this page\" />\n                </div>\n              </form>\n                <form method=\"get\" action=\"/LUCICodeRepository/nomaticIM/attachment/wiki/TracStandalone/\" id=\"attachfile\">\n  <div>\n    <input type=\"hidden\" name=\"action\" value=\"new\" />\n    <input type=\"submit\" name=\"attachfilebutton\" value=\"Attach file\" />\n  </div>\n</form>\n          </div>\n    </div>\n    <script type=\"text/javascript\">\n        jQuery.loadStyleSheet(\"/LUCICodeRepository/nomaticIM/pygments/trac.css\", \"text/css\");\n    </script>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"last first\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracStandalone?format=txt\">Plain Text</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/LUCICodeRepository/nomaticIM/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/LUCICodeRepository/nomaticIM/about\"><strong>Trac 1.0.1</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">All content copyright 2007-2008 by LUCI <br /><a href=\"http://luci.ics.uci.edu/\">http://luci.ics.uci.edu/</a></p>\n    </div>\n\t\t<div id=\"sitefooter\">\n\t\t\t<script src=\"http://www.google-analytics.com/urchin.js\" type=\"text/javascript\">\n\t\t\t</script>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t\t_uacct = \"UA-338915-2\";\n\t\t\t\turchinTracker();\n\t\t\t</script>\n\t\t</div>\n\t</body>\n</html>", "id": 34532.0}