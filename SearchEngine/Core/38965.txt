{"text": "Navigation Up Table of Contents Bibliography Index Title Page CGAL all furthest neighbors 2 DefinitionThe function all furthest neighbors 2 computes all furthest neighbors for the vertices of a convex polygon P i e for each vertex v of P a vertex fv of P such that the distance between v and fv is maximized include CGAL all furthest neighbors 2 h template class RandomAccessIterator class OutputIterator class Traits OutputIterator all furthest neighbors 2 RandomAccessIterator points begin RandomAccessIterator points end OutputIterator o Traits t Default traits computes all furthest neighbors for the vertices of the convex polygon described by the range points begin points end writes their indices relative to points begin to o1 and returns the past the end iterator of this sequence Precondition The points denoted by the non empty range points begin points end form the boundary of a convex polygon P oriented clock or counterclockwise The geometric types and operations to be used for the computation are specified by the traits class parameter t This parameter can be omitted if RandomAccessIterator refers to a point type from a Kernel In this case the kernel is used as default traits class Requirement If t is specified explicitly Traits is a model for AllFurthestNeighborsTraits 2 Value type of RandomAccessIterator is Traits Point 2 or if t is not specified explicitly K Point 2 where K is a model for Kernel OutputIterator accepts int as value type See AlsoAllFurthestNeighborsTraits 2 CGAL monotone matrix search ImplementationThe implementation uses monotone matrix search AKM 87 Its runtime complexity is linear in the number of vertices of P ExampleThe following code generates a random convex polygon p with ten vertices computes all furthest neighbors and writes the sequence of their indices relative to points begin to cout e g a sequence of 4788911224 means the furthest neighbor of points begin is points begin 4 the furthest neighbor of points begin 1 is points begin 7 etc include CGAL Cartesian h include CGAL Polygon 2 h include CGAL point generators 2 h include CGAL random convex set 2 h include CGAL all furthest neighbors 2 h include CGAL IO Ostream iterator h include iostream include vector typedef double FT struct Kernel public CGAL Cartesian FT typedef Kernel Point 2 Point typedef std vector int Index cont typedef CGAL Polygon 2 Kernel Polygon typedef CGAL Random points in square 2 Point Generator typedef CGAL Ostream iterator int std ostream Oiterator int main generate random convex polygon Polygon p CGAL random convex set 2 1 std back inserter p Generator 1 compute all furthest neighbors CGAL all furthest neighbors 2 p vertices begin p vertices end Oiterator std cout std cout std endl return Footnotes 1 i e the furthest neighbor of points begin i is points begin i th number written to o Next AllFurthestNeighborsTraits 2 Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Optimisation_ref/Function_all_furthest_neighbors_2.html", "title": "all_furthest_neighbors_2", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Optimisation_ref/spec_all_furthest_neighbors.tex' -->\n<html> <head>  \n<title>all_furthest_neighbors_2</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_1196\"></A>\n\n<A NAME=\"Cross_link_anchor_1197\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_1235\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Function.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_CGAL::all_furthest_neighbors_2\"></A>\n<h2><I>CGAL::all_furthest_neighbors_2</I></h2>\n\n\n  \n   \n     \n     \n<A NAME=\"Index_anchor_1236\"></A> \n\n   \n\n  \n<A NAME=\"Index_anchor_1237\"></A> \n\n  \n   \n     \n     \n<A NAME=\"Index_anchor_1238\"></A>\n<P>\n\n<H3>Definition</H3>The function <I><A HREF=\"Function_all_furthest_neighbors_2.html#Cross_link_anchor_1197\">all_furthest_neighbors_2</A></I> computes all furthest\n  neighbors for the vertices of a convex polygon <MATH><I>P</I></MATH>, i.e. for each\n  vertex <MATH><I>v</I></MATH> of <MATH><I>P</I></MATH> a vertex <MATH><I>f<SUB>v</SUB></I></MATH> of <MATH><I>P</I></MATH> such that the distance\n  between <MATH><I>v</I></MATH> and <MATH><I>f<SUB>v</SUB></I></MATH> is maximized.\n<P>\n\n<I>#include &lt;<A HREF=\"../../../include/CGAL/all_furthest_neighbors_2.h\">CGAL/all_furthest_neighbors_2.h</A>&gt;</I>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    template &lt; class RandomAccessIterator, class OutputIterator, class Traits &gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_OutputIterator_all_furthest_neighbors_26_RandomAccessIterator_points_begin+_RandomAccessIterator_points_end+_OutputIterator_o+_Traits_t_=_Default_traits9;\"></A>\nOutputIterator\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP COLSPAN=2><I>\n    <A HREF=\"Function_all_furthest_neighbors_2.html#Cross_link_anchor_1197\">all_furthest_neighbors_2</A> ( </I></TD></TR><TR><TD WIDTH=50 NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    RandomAccessIterator points_begin,<BR>\n\nRandomAccessIterator points_end,<BR>\n\nOutputIterator o,<BR>\n\nTraits t = Default_traits)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        \n    \n        </TR>\n        </TABLE>\n<P>\n\ncomputes all furthest neighbors for the vertices of the convex\n  polygon described by the range [<I>points_begin</I>,\n  <I>points_end</I>), writes their indices (relative to\n  <I>points_begin</I>) to <I>o</I><A HREF=\"#Footnote_1\"><SUP>1</SUP></A> and returns the past-the-end iterator\n  of this sequence.\n<P>\n\n<BR>\n\n<EM>Precondition: </EM>The points denoted by the non-empty range\n  [<I>points_begin</I>, <I>points_end</I>) form the boundary of a convex\n  polygon <MATH><I>P</I></MATH> (oriented clock- or counterclockwise).\n<P>\n\nThe geometric types and operations to be used for the computation\n  are specified by the traits class parameter <I>t</I>. This parameter\n  can be omitted if <I>RandomAccessIterator</I> refers to a point type\n  from a <I><A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A></I>. In this case, the kernel is used as default\n  traits class.\n<P>\n\n<BR>\n\n<EM>Requirement: </EM><OL>\n  <LI>If <I>t</I> is specified explicitly, <I>Traits</I> is a model\n    for <I><A HREF=\"Concept_AllFurthestNeighborsTraits_2.html#Cross_link_anchor_1198\">AllFurthestNeighborsTraits_2</A></I>.\n  <LI>Value type of <I>RandomAccessIterator</I> is\n    <I>Traits::<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A></I> or - if <I>t</I> is not specified explicitly\n    - <I>K::<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A></I> where <I>K</I> is a model for <I><A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A></I>.\n  <LI><I>OutputIterator</I> accepts <I>int</I> as value type.\n  </OL>\n<P>\n\n<H3>See Also</H3><I><A HREF=\"Concept_AllFurthestNeighborsTraits_2.html#Cross_link_anchor_1198\">AllFurthestNeighborsTraits_2</A></I><BR>\n\n<I><A HREF=\"Function_monotone_matrix_search.html#Cross_link_anchor_1206\">CGAL::monotone_matrix_search</A></I>\n<P>\n\n<H3>Implementation</H3>The implementation uses monotone matrix\n  search[<A HREF=\"../biblio.html#Biblio_akmsw-gamsa-87\">AKM<MATH><I><SUP>+</SUP></I></MATH>87</A>]. Its runtime complexity is linear in the\n  number of vertices of <MATH><I>P</I></MATH>.\n<P>\n\n<H3>Example</H3>The following code generates a random convex polygon\n  <I>p</I> with ten vertices, computes all furthest neighbors and\n  writes the sequence of their indices (relative to\n  <I>points_begin</I>) to <I>cout</I> (e.g. a sequence of\n  <I>4788911224</I> means the furthest neighbor of\n  <I>points_begin[0]</I> is <I>points_begin[4]</I>, the furthest\n  neighbor of <I>points_begin[1]</I> is <I>points_begin[7]</I> etc.).\n<P>\n\n<pre class=\"ExampleCode\">#include &lt;CGAL/<A HREF=\"../Kernel_23_ref/Class_Cartesian.html#Cross_link_anchor_6\">Cartesian</A>.h&gt;\n#include &lt;CGAL/<A HREF=\"../Polygon_ref/Class_Polygon_2.html#Cross_link_anchor_672\">Polygon_2</A>.h&gt;\n#include &lt;CGAL/point_generators_2.h&gt;\n#include &lt;CGAL/<A HREF=\"../Generator_ref/Function_random_convex_set_2.html#Cross_link_anchor_1684\">random_convex_set_2</A>.h&gt;\n#include &lt;CGAL/<A HREF=\"Function_all_furthest_neighbors_2.html#Cross_link_anchor_1197\">all_furthest_neighbors_2</A>.h&gt;\n#include &lt;CGAL/IO/<A HREF=\"../IOstream_ref/Class_Ostream_iterator.html#Cross_link_anchor_1742\">Ostream_iterator</A>.h&gt;\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\ntypedef double                                    FT;\n\nstruct <A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A> : public <A HREF=\"../Kernel_23_ref/Class_Cartesian.html#Cross_link_anchor_5\">CGAL::Cartesian</A>&lt;FT&gt; {};\n\ntypedef <A HREF=\"../Kernel_23_ref/Concept_Kernel--Point_2.html#Cross_link_anchor_459\">Kernel::Point_2</A>                           Point;\ntypedef std::vector&lt;int&gt;                          Index_cont;\ntypedef <A HREF=\"../Polygon_ref/Class_Polygon_2.html#Cross_link_anchor_671\">CGAL::Polygon_2</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;                   Polygon;\ntypedef <A HREF=\"../Generator_ref/Class_Random_points_in_square_2.html#Cross_link_anchor_1699\">CGAL::Random_points_in_square_2</A>&lt;Point&gt;    Generator;\ntypedef <A HREF=\"../IOstream_ref/Class_Ostream_iterator.html#Cross_link_anchor_1741\">CGAL::Ostream_iterator</A>&lt;int,std::ostream&gt;  Oiterator;\n\nint main()\n{\n  // generate random convex polygon:\n  Polygon p;\n  <A HREF=\"../Generator_ref/Function_random_convex_set_2.html#Cross_link_anchor_1683\">CGAL::random_convex_set_2</A>(10, std::back_inserter(p), Generator(1));\n\n  // compute all furthest neighbors:\n  <A HREF=\"Function_all_furthest_neighbors_2.html#Cross_link_anchor_1196\">CGAL::all_furthest_neighbors_2</A>(p.vertices_begin(), p.vertices_end(),\n                                 Oiterator(std::cout));\n  std::cout &lt;&lt; std::endl;\n\n  return 0;\n} \n</pre>\n<P>\n\n<HR><H3>Footnotes</H3>\n<P>\n\n<TABLE><TR><TD VALIGN=TOP>\n</TD></TR><TR><TD VALIGN=TOP>\n        <A NAME=\"Footnote_1\">&nbsp;<SUP>1</SUP>&nbsp;</A></TD><TD VALIGN=TOP>\ni.e. the furthest neighbor\n    of <I>points_begin[</I>i<I>]</I> is <I>points_begin[</I><MATH><I>i</I></MATH>-th number\n    written to <I>o</I><I>]</I>\n\n</TD></TR></TABLE>\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Concept_AllFurthestNeighborsTraits_2.html\"><I>AllFurthestNeighborsTraits_2</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_52!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 38965.0}