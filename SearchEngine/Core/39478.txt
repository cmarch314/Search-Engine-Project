{"text": "Navigation Up Table of Contents Bibliography Index Title Page CGAL Iso cuboid 3 Kernel DefinitionAn object s of the data type Iso cuboid 3 Kernel is a cuboid in the Euclidean space 3 with edges parallel to the x y and z axis of the coordinate system Although they are represented in a canonical form by only two vertices namely the lexicographically smallest and largest vertex with respect to Cartesian xyz coordinates we provide functions for accessing the other vertices as well Iso oriented cuboids and bounding boxes are quite similar The difference however is that bounding boxes have always double coordinates whereas the coordinate type of an iso oriented cuboid is chosen by the user Creation Iso cuboid 3 Kernel c Point 3 Kernel p Point 3 Kernel q introduces an iso oriented cuboid c with diagonal opposite vertices p and q Note that the object is brought in the canonical form Iso cuboid 3 Kernel c Point 3 Kernel left Point 3 Kernel right Point 3 Kernel bottom Point 3 Kernel top Point 3 Kernel far Point 3 Kernel close introduces an iso oriented cuboid c whose minimal x coordinate is the one of left the maximal x coordinate is the one of right the minimal y coordinate is the one of bottom the maximal y coordinate is the one of top the minimal z coordinate is the one of far the maximal z coordinate is the one of close Iso cuboid 3 Kernel c Kernel RT min hx Kernel RT min hy Kernel RT min hz Kernel RT max hx Kernel RT max hy Kernel RT max hz Kernel RT hw RT 1 introduces an iso oriented cuboid c with diagonal opposite vertices min hx hw min hy hw min hz hw and max hx hw max hy hw max hz hw Precondition hw Operations bool c operator c2 Test for equality two iso oriented cuboid are equal iff their lower left and their upper right vertices are equal bool c operator c2 Test for inequality Point 3 Kernel c vertex int i returns the i th vertex modulo 8 of c starting with the lower left vertex Point 3 Kernel c operator int i returns vertex i as indicated in the figure below Point 3 Kernel c min returns the smallest vertex of c vertex Point 3 Kernel c max returns the largest vertex of c vertex 7 Kernel FT c xmin returns smallest Cartesian x coordinate in c Kernel FT c ymin returns smallest Cartesian y coordinate in c Kernel FT c zmin returns smallest Cartesian z coordinate in c Kernel FT c xmax returns largest Cartesian x coordinate in c Kernel FT c ymax returns largest Cartesian y coordinate in c Kernel FT c zmax returns largest Cartesian z coordinate in c Kernel FT c min coord int i returns i th Cartesian coordinate of the smallest vertex of c Precondition i 2 Kernel FT c max coord int i returns i th Cartesian coordinate of the largest vertex of c Precondition i 2 Predicates bool c is degenerate c is degenerate if all vertices are collinear Bounded side c bounded side Point 3 Kernel p returns either ON UNBOUNDED SIDE ON BOUNDED SIDE or the constant ON BOUNDARY depending on where point p is bool c has on boundary Point 3 Kernel p bool c has on bounded side Point 3 Kernel p bool c has on unbounded side Point 3 Kernel p Miscellaneous Kernel FT c volume returns the volume of c Bbox c bbox returns a bounding box containing c Iso cuboid 3 Kernel c transform Aff transformation 3 Kernel t returns the iso oriented cuboid obtained by applying t on the smallest and the largest of c Precondition The angle at a rotation must be a multiple of 2 otherwise the resulting cuboid does not have the same size Note that rotating about an arbitrary angle can even result in a degenerate iso oriented cuboid See AlsoKernel IsoCuboid 3 Next Line 3 Kernel Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Kernel_23_ref/Class_Iso_cuboid_3.html", "title": "iso_cuboid_3&lt;kernel&gt;", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Kernel_23_ref/Iso_cuboid_3.tex' -->\n<html> <head>  \n<title>Iso_cuboid_3&lt;Kernel&gt;</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_main.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_67\"></A>\n\n<A NAME=\"Cross_link_anchor_68\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_55\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Class.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_CGAL::Iso_cuboid_3<Kernel>\"></A>\n<h2><I>CGAL::Iso_cuboid_3&lt;Kernel&gt;</I></h2>\n<P>\n\n<H3>Definition</H3>An object <MATH><I>s</I></MATH> of the data type <I><A HREF=\"Class_Iso_cuboid_3.html#Cross_link_anchor_68\">Iso_cuboid_3</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;</I> is a\ncuboid in the Euclidean space <MATH><I> <IMG BORDER=0 WIDTH=12 HEIGHT=12 ALIGN=BOTTOM SRC=\"cc_mathbb_E.gif\"> <SUP>3</SUP></I></MATH> with edges <A HREF=\"Function_parallel.html#Cross_link_anchor_249\">parallel</A> to the <MATH><I>x</I></MATH>,\n<MATH><I>y</I></MATH> and <MATH><I>z</I></MATH> axis of the coordinate system.\n<P>\n\nAlthough they are represented in a canonical form by only two\nvertices, namely the lexicographically smallest and largest vertex\nwith respect to <A HREF=\"Class_Cartesian.html#Cross_link_anchor_6\">Cartesian</A> <MATH><I>xyz</I></MATH> coordinates, we provide\nfunctions for ``accessing'' the other vertices as well.\n<P>\n\nIso-oriented cuboids and bounding boxes are quite similar. The\ndifference however is that bounding boxes have always double coordinates, \nwhereas the coordinate type of an iso-oriented cuboid is chosen by\nthe user.\n<P>\n\n<H3>Creation</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Iso_cuboid_3.html#Cross_link_anchor_68\">Iso_cuboid_3</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; c (  <A HREF=\"Class_Point_3.html#Cross_link_anchor_74\">Point_3</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; p,  <A HREF=\"Class_Point_3.html#Cross_link_anchor_74\">Point_3</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; q);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    introduces an iso-oriented cuboid <I>c</I> with diagonal\n             <A HREF=\"Function_opposite.html#Cross_link_anchor_243\">opposite</A> vertices <MATH><I>p</I></MATH> and <MATH><I>q</I></MATH>. Note that the object is \n             brought in the canonical form.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    <A HREF=\"Class_Iso_cuboid_3.html#Cross_link_anchor_68\">Iso_cuboid_3</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; c ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n     <A HREF=\"Class_Point_3.html#Cross_link_anchor_74\">Point_3</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; left,<BR>\n\n<A HREF=\"Class_Point_3.html#Cross_link_anchor_74\">Point_3</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; right,<BR>\n\n<A HREF=\"Class_Point_3.html#Cross_link_anchor_74\">Point_3</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; bottom,<BR>\n\n<A HREF=\"Class_Point_3.html#Cross_link_anchor_74\">Point_3</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; top,<BR>\n\n<A HREF=\"Class_Point_3.html#Cross_link_anchor_74\">Point_3</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; far,<BR>\n\n<A HREF=\"Class_Point_3.html#Cross_link_anchor_74\">Point_3</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; close);</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    introduces an iso-oriented cuboid <I>c</I> whose\n             minimal <MATH><I>x</I></MATH> coordinate is the one of <I>left</I>, the\n             maximal <MATH><I>x</I></MATH> coordinate is the one of <I>right</I>, the\n             minimal <MATH><I>y</I></MATH> coordinate is the one of <I>bottom</I>, the\n             maximal <MATH><I>y</I></MATH> coordinate is the one of <I>top</I>, the\n             minimal <MATH><I>z</I></MATH> coordinate is the one of <I>far</I>, the\n             maximal <MATH><I>z</I></MATH> coordinate is the one of <I>close</I>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    <A HREF=\"Class_Iso_cuboid_3.html#Cross_link_anchor_68\">Iso_cuboid_3</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; c ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n     <A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::RT min_hx,<BR>\n\n<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::RT min_hy,<BR>\n\n<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::RT min_hz,<BR>\n\n<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::RT max_hx,<BR>\n\n<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::RT max_hy,<BR>\n\n<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::RT max_hz,<BR>\n\n<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::RT hw = RT(1));</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    introduces an iso-oriented cuboid <I>c</I> with diagonal\n             <A HREF=\"Function_opposite.html#Cross_link_anchor_243\">opposite</A> vertices \n             (<I>min_hx/hw</I>, <I>min_hy/hw</I>, <I>min_hz/hw</I>) and\n             (<I>max_hx/hw</I>, <I>max_hy/hw</I>, <I>max_hz/hw</I>).<BR>\n\n<EM>Precondition: </EM><I>hw</I> <MATH><I> <IMG BORDER=0 WIDTH=11 HEIGHT=27 ALIGN=MIDDLE SRC=\"cc_neq.gif\"> </I></MATH> 0.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Operations</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    bool<A NAME=\"Function_bool_operator==6const_Iso_cuboid_36Kernel9__c29_const;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.operator== (  c2)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Test for equality: two iso-oriented cuboid are equal, iff their\n        lower left and their upper right vertices are equal.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    bool<A NAME=\"Function_bool_operator!=6const_Iso_cuboid_36Kernel9__c29_const;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.operator!= (  c2)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Test for inequality.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Point_36Kernel9_vertex6int_i9_const;\"></A>\n<A HREF=\"Class_Point_3.html#Cross_link_anchor_74\">Point_3</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    c.vertex ( int i)\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the i'th vertex modulo 8  of <I>c</I>.\n        starting with the lower left vertex.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Class_Point_3.html#Cross_link_anchor_74\">Point_3</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;<A NAME=\"Function_Point_36Kernel9_operator696int_i9_const;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.operator[] ( int i)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns  <I>vertex(i)</I>, as indicated in the figure below:\n       \n        </TD></TR>\n        </TABLE>\n<P>\n\n<center>\n<img border=0 src=\"fig/IsoCuboid.gif\" align=center alt=\"vertex order of\n  an iso-cuboid\">\n</center>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Point_36Kernel9_min69_const;\"></A>\n<A HREF=\"Class_Point_3.html#Cross_link_anchor_74\">Point_3</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    c.<A HREF=\"../NumberTypeSupport_ref/Function_min.html#Cross_link_anchor_1394\">min</A> ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the smallest vertex of <I>c</I> (= <I>vertex(0)</I>).\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Point_36Kernel9_max69_const;\"></A>\n<A HREF=\"Class_Point_3.html#Cross_link_anchor_74\">Point_3</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    c.<A HREF=\"../NumberTypeSupport_ref/Function_max.html#Cross_link_anchor_1392\">max</A> ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the largest vertex of <I>c</I> (= <I>vertex(7)</I>).\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Kernel::FT_xmin69_const;\"></A>\n<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::FT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    c.xmin ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns smallest \n<!-- REMOVE_LINKS_BEGIN -->\nCartesian\n<!-- REMOVE_LINKS_END -->\n\n                              <MATH><I>x</I></MATH>-coordinate in <I>c</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Kernel::FT_ymin69_const;\"></A>\n<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::FT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    c.ymin ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns smallest \n<!-- REMOVE_LINKS_BEGIN -->\nCartesian\n<!-- REMOVE_LINKS_END -->\n \n                              <MATH><I>y</I></MATH>-coordinate in <I>c</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Kernel::FT_zmin69_const;\"></A>\n<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::FT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    c.zmin ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns smallest \n<!-- REMOVE_LINKS_BEGIN -->\nCartesian\n<!-- REMOVE_LINKS_END -->\n \n                              <MATH><I>z</I></MATH>-coordinate in <I>c</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Kernel::FT_xmax69_const;\"></A>\n<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::FT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    c.xmax ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns largest \n<!-- REMOVE_LINKS_BEGIN -->\nCartesian\n<!-- REMOVE_LINKS_END -->\n \n                              <MATH><I>x</I></MATH>-coordinate in <I>c</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Kernel::FT_ymax69_const;\"></A>\n<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::FT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    c.ymax ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns largest \n<!-- REMOVE_LINKS_BEGIN -->\nCartesian\n<!-- REMOVE_LINKS_END -->\n \n                              <MATH><I>y</I></MATH>-coordinate in <I>c</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Kernel::FT_zmax69_const;\"></A>\n<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::FT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    c.zmax ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns largest \n<!-- REMOVE_LINKS_BEGIN -->\nCartesian\n<!-- REMOVE_LINKS_END -->\n \n                              <MATH><I>z</I></MATH>-coordinate in <I>c</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Kernel::FT_min_coord6int_i9_const;\"></A>\n<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::FT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.min_coord ( int i)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns <MATH><I>i</I></MATH>-th \n<!-- REMOVE_LINKS_BEGIN -->\nCartesian\n<!-- REMOVE_LINKS_END -->\n coordinate of\n          the smallest vertex of <I>c</I>.<BR>\n\n<EM>Precondition: </EM><MATH><I>0  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> 2</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Kernel::FT_max_coord6int_i9_const;\"></A>\n<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::FT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.max_coord ( int i)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns <MATH><I>i</I></MATH>-th \n<!-- REMOVE_LINKS_BEGIN -->\nCartesian\n<!-- REMOVE_LINKS_END -->\n coordinate of\n          the largest vertex of <I>c</I>.<BR>\n\n<EM>Precondition: </EM><MATH><I>0  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> 2</I></MATH>.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Predicates</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_is_degenerate69_const;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    c.is_degenerate ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    <I>c</I> is degenerate, if all vertices\n        are <A HREF=\"Function_collinear.html#Cross_link_anchor_167\">collinear</A>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Bounded_side_bounded_side6const_Point_36Kernel9__p9_const;\"></A>\n<A HREF=\"Enum_Bounded_side.html#Cross_link_anchor_99\">Bounded_side</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.bounded_side (  <A HREF=\"Class_Point_3.html#Cross_link_anchor_74\">Point_3</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; p)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns either <I><A HREF=\"Enum_Bounded_side#Enum_Bounded_side\">ON_UNBOUNDED_SIDE</A></I>,\n        <I><A HREF=\"Enum_Bounded_side#Enum_Bounded_side\">ON_BOUNDED_SIDE</A></I>, or the constant\n        <I><A HREF=\"Enum_Bounded_side#Enum_Bounded_side\">ON_BOUNDARY</A></I>, \n        depending on where point <MATH><I>p</I></MATH> is.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_has_on_boundary6const_Point_36Kernel9__p9_const;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.has_on_boundary (  <A HREF=\"Class_Point_3.html#Cross_link_anchor_74\">Point_3</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; p)\n        </I></NOBR>\n        \n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_has_on_bounded_side6const_Point_36Kernel9__p9_const;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.has_on_bounded_side (  <A HREF=\"Class_Point_3.html#Cross_link_anchor_74\">Point_3</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; p)\n        </I></NOBR>\n        \n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_has_on_unbounded_side6const_Point_36Kernel9__p9_const;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.has_on_unbounded_side (  <A HREF=\"Class_Point_3.html#Cross_link_anchor_74\">Point_3</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; p)\n        </I></NOBR>\n        \n    \n        </TR>\n        </TABLE>\n<P>\n\n<H3>Miscellaneous</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Kernel::FT_volume69_const;\"></A>\n<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::FT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    c.<A HREF=\"Function_volume.html#Cross_link_anchor_269\">volume</A> ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the <A HREF=\"Function_volume.html#Cross_link_anchor_269\">volume</A> of <I>c</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Bbox_bbox69_const;\"></A>\nBbox\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    c.bbox ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns a bounding box containing <I>c</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Iso_cuboid_36Kernel9_transform6const_Aff_transformation_36Kernel9__t9_const;\"></A>\n<A HREF=\"Class_Iso_cuboid_3.html#Cross_link_anchor_68\">Iso_cuboid_3</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.transform (  <A HREF=\"Class_Aff_transformation_3.html#Cross_link_anchor_64\">Aff_transformation_3</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; t)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the iso-oriented cuboid obtained by applying <MATH><I>t</I></MATH> on \n        the smallest and the largest of <I>c</I>.<BR>\n\n<EM>Precondition: </EM>The <A HREF=\"Function_angle.html#Cross_link_anchor_153\">angle</A> at a rotation must be a multiple of <MATH><I><IMG BORDER=0 WIDTH=9 HEIGHT=8 ALIGN=BOTTOM SRC=\"cc_pi.gif\">/2</I></MATH>,\n        otherwise the resulting cuboid does not have the same size.\n        Note that rotating about an arbitrary <A HREF=\"Function_angle.html#Cross_link_anchor_153\">angle</A> can even result in\n        a degenerate iso-oriented cuboid.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>See Also</H3><I><A HREF=\"Concept_Kernel--IsoCuboid_3.html#Cross_link_anchor_432\">Kernel::IsoCuboid_3</A></I><BR>\n\n\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Class_Line_3.html\"><I>Line_3&lt;Kernel&gt;</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_7!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 39478.0}