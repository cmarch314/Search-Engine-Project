{"text": "Navigation Up Table of Contents Bibliography Index Title Page TriangulationTraits 2 Definition The concept TriangulationTraits 2 describes the set of requirements to be fulfilled by any class used to instantiate the first template parameter of the class Triangulation 2 Traits Tds This concept provides the types of the geometric primitives used in the triangulation and some function object types for the required predicates on those primitives Types TriangulationTraits 2 Point 2 The point type TriangulationTraits 2 Segment 2 The segment type TriangulationTraits 2 Triangle 2 The triangle type TriangulationTraits 2 Construct segment 2 A constructor object for Segment 2 Provides Segment 2 operator Point 2 p Point 2 q which constructs a segment from two points TriangulationTraits 2 Construct triangle 2 A constructor object for Triangle 2 Provides Triangle 2 operator Point 2 p Point 2 q Point 2 r which constructs a triangle from three points TriangulationTraits 2 Compare x 2 Predicate object Provides the operator Comparison result operator Point p Point q which returns SMALLER EQUAL or LARGER accordingto the x ordering of points p and q TriangulationTraits 2 Compare y 2 Predicate object Provides the operator Comparison result operator Point p Point q which returns SMALLER EQUAL or LARGER according to the y ordering of points p and q TriangulationTraits 2 Orientation 2 Predicate object Provides the operator Orientation operator Point p Point q Point r which returns LEFT TURN RIGHT TURN or COLLINEAR depending on r being with respect to the oriented line pq on the left side on the right side or on the line TriangulationTraits 2 Side of oriented circle 2 Predicate object Must provide the operator Oriented side operator Point p Point q Point r Point s which takes four points p q r s as arguments and returns ON POSITIVE SIDE ON NEGATIVE SIDE or ON ORIENTED BOUNDARY according to the position of points s with respect to the oriented circle through through p q and r This type is required only if the function side of oriented circle Face handle f Point p is called TriangulationTraits 2 Construct circumcenter 2 Constructor object Provides the operator Point operator Point p Point q Point r which returns the circumcenter of the three points p q anf r This type is required only if the function Point circumcenter Face handle f is called Creation Only a default constructor copy constructor and an assignement operator are required Note that further constructors can be provided TriangulationTraits 2 traits default constructor TriangulationTraits 2 traits gtr Copy constructor TriangulationTraits 2 traits gtr Assignment operator Predicate functions The following functions give access to the predicate and constructor objects Construct segment 2 traits construct segment 2 object Construct triangle 2 traits construct triangle 2 object Comparison x 2 traits compare x 2 object Comparison y 2 traits compare y 2 object Orientation 2 traits orientation 2 object Side of oriented circle 2 traits side of oriented circle 2 object Required only if side of oriented circle is called called Construct circumcenter 2 traits construct circumcenter 2 object Required only if circumcenter is called Has ModelsAll the CGAL Kernels CGAL Triangulation euclidean traits 2 K CGAL Triangulation euclidean traits xy 3 K CGAL Triangulation euclidean traits yz 3 K CGAL Triangulation euclidean traits zx 3 K See AlsoCGAL Triangulation 2 Traits Tds Next TriangulationVertexBase 2 Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Triangulation_2_ref/Concept_TriangulationTraits_2.html", "title": "triangulationtraits_2", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Triangulation_2_ref/TriangulationTraits_2.tex' -->\n<html> <head>  \n<title>TriangulationTraits_2</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_936\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_894\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Concept.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_TriangulationTraits_2\"></A>\n<h2><I>TriangulationTraits_2</I></h2>\n<P>\n\n<H3>Definition</H3>\n<P>\n\nThe concept <I><A HREF=\"Concept_TriangulationTraits_2.html#Cross_link_anchor_936\">TriangulationTraits_2</A></I> describes \n the set of requirements to be\nfulfilled\nby any class used to instantiate the first template parameter of the class \n<I><A HREF=\"Class_Triangulation_2.html#Cross_link_anchor_939\">Triangulation_2</A>&lt;Traits,Tds&gt;</I>.\nThis concept provides the types of the geometric primitives used in the\ntriangulation and some function object types\nfor the required predicates on those primitives.\n<P>\n\n<H3>Types</H3>\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_TriangulationTraits_2.html#Cross_link_anchor_936\">TriangulationTraits_2</A>::<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    The  point type.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_TriangulationTraits_2.html#Cross_link_anchor_936\">TriangulationTraits_2</A>::<A HREF=\"../Kernel_23_ref/Class_Segment_2.html#Cross_link_anchor_56\">Segment_2</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    The segment  type.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_TriangulationTraits_2.html#Cross_link_anchor_936\">TriangulationTraits_2</A>::<A HREF=\"../Kernel_23_ref/Class_Triangle_2.html#Cross_link_anchor_58\">Triangle_2</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    The triangle type.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_TriangulationTraits_2.html#Cross_link_anchor_936\">TriangulationTraits_2</A>::Construct_segment_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    A constructor object for\n<I><A HREF=\"../Kernel_23_ref/Class_Segment_2.html#Cross_link_anchor_56\">Segment_2</A></I>. Provides&nbsp;:<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Class_Segment_2.html#Cross_link_anchor_56\">Segment_2</A> operator()(<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p,<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> q)</I>,<BR>\n\nwhich constructs a  segment from two points.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_TriangulationTraits_2.html#Cross_link_anchor_936\">TriangulationTraits_2</A>::Construct_triangle_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    A constructor object for\n<I><A HREF=\"../Kernel_23_ref/Class_Triangle_2.html#Cross_link_anchor_58\">Triangle_2</A></I>. Provides&nbsp;:<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Class_Triangle_2.html#Cross_link_anchor_58\">Triangle_2</A> operator()(<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p,<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> q,<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> r )</I>,<BR>\n\nwhich constructs a triangle from three points.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_TriangulationTraits_2.html#Cross_link_anchor_936\">TriangulationTraits_2</A>::Compare_x_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Predicate object. Provides\nthe operator&nbsp;:<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Enum_Comparison_result.html#Cross_link_anchor_104\">Comparison_result</A> operator()(Point p, Point q)</I><BR>\n\nwhich returns \n<I><A HREF=\"../Kernel_23_ref/Enum_Comparison_result#Enum_Comparison_result\">SMALLER</A>, <A HREF=\"../Kernel_23_ref/Enum_Comparison_result#Enum_Comparison_result\">EQUAL</A></I> or <I> <A HREF=\"../Kernel_23_ref/Enum_Comparison_result#Enum_Comparison_result\">LARGER</A></I>\n accordingto the\n<MATH><I>x</I></MATH>-ordering of points <I>p</I> and <I>q</I>.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_TriangulationTraits_2.html#Cross_link_anchor_936\">TriangulationTraits_2</A>::Compare_y_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Predicate object. Provides\nthe operator&nbsp;:<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Enum_Comparison_result.html#Cross_link_anchor_104\">Comparison_result</A> operator()(Point p, Point q)</I><BR>\n\nwhich returns \n(<I><A HREF=\"../Kernel_23_ref/Enum_Comparison_result#Enum_Comparison_result\">SMALLER</A>, <A HREF=\"../Kernel_23_ref/Enum_Comparison_result#Enum_Comparison_result\">EQUAL</A></I> or <I> <A HREF=\"../Kernel_23_ref/Enum_Comparison_result#Enum_Comparison_result\">LARGER</A></I>)\naccording to the\n<MATH><I>y</I></MATH>-ordering of points <I>p</I> and <I>q</I>.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_TriangulationTraits_2.html#Cross_link_anchor_936\">TriangulationTraits_2</A>::Orientation_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Predicate object. Provides\nthe  operator&nbsp;:<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Enum_Orientation.html#Cross_link_anchor_114\">Orientation</A> operator()(Point p, Point q, Point r)</I><BR>\n\nwhich returns <I><A HREF=\"../Kernel_23_ref/Constant_LEFT_TURN.html#Cross_link_anchor_127\">LEFT_TURN</A></I>, <I><A HREF=\"../Kernel_23_ref/Constant_RIGHT_TURN.html#Cross_link_anchor_129\">RIGHT_TURN</A></I> or <I><A HREF=\"../Kernel_23_ref/Constant_COLLINEAR.html#Cross_link_anchor_125\">COLLINEAR</A></I>\ndepending on <MATH><I>r</I></MATH> being, with respect to\nthe oriented line <I>pq</I>, \non the left side , on the right side or on the line.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_TriangulationTraits_2.html#Cross_link_anchor_936\">TriangulationTraits_2</A>::Side_of_oriented_circle_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Predicate object. Must\nprovide the operator\n<I><A HREF=\"../Kernel_23_ref/Enum_Oriented_side.html#Cross_link_anchor_116\">Oriented_side</A> operator()(Point p, Point q, Point r, Point s)</I>\nwhich takes four points <MATH><I>p, q, r, s</I></MATH> as arguments and returns\n<I><A HREF=\"../Kernel_23_ref/Enum_Oriented_side#Enum_Oriented_side\">ON_POSITIVE_SIDE</A></I>, <I><A HREF=\"../Kernel_23_ref/Enum_Oriented_side#Enum_Oriented_side\">ON_NEGATIVE_SIDE</A></I> or, \n<I><A HREF=\"../Kernel_23_ref/Enum_Oriented_side#Enum_Oriented_side\">ON_ORIENTED_BOUNDARY</A></I> according to the position of points <I>s</I>\nwith respect to the oriented circle through  through <MATH><I>p,q</I></MATH>\nand <MATH><I>r</I></MATH>.\n This type is required only if the function \n<I><A HREF=\"../Kernel_23_ref/Function_side_of_oriented_circle.html#Cross_link_anchor_261\">side_of_oriented_circle</A>(Face_handle f, Point p)</I> is\ncalled.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_TriangulationTraits_2.html#Cross_link_anchor_936\">TriangulationTraits_2</A>::Construct_circumcenter_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Constructor object. Provides\nthe operator&nbsp;:<BR>\n\n<I> Point operator()(Point p, Point q, Point r)</I><BR>\n\nwhich returns\nthe  <A HREF=\"../Kernel_23_ref/Function_circumcenter.html#Cross_link_anchor_165\">circumcenter</A> of the three points  <I>p, q</I> anf <I>r</I>.\nThis type is required only if  the function \n<I>Point <A HREF=\"../Kernel_23_ref/Function_circumcenter.html#Cross_link_anchor_165\">circumcenter</A>(Face_handle  f)</I>is called.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Creation</H3>  Only a default constructor, copy constructor\n and an assignement operator are required. \nNote that further constructors\ncan be provided. \n\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_TriangulationTraits_2.html#Cross_link_anchor_936\">TriangulationTraits_2</A> traits;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    default constructor.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_TriangulationTraits_2.html#Cross_link_anchor_936\">TriangulationTraits_2</A> traits (  gtr);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Copy constructor\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A HREF=\"Concept_TriangulationTraits_2.html#Cross_link_anchor_936\">TriangulationTraits_2</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     traits =  gtr<A NAME=\"Function_TriangulationTraits_2_operator=6TriangulationTraits_2_gtr9;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Assignment operator.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Predicate functions</H3>\n\nThe following functions give access to the  predicate \nand constructor objects.\n\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Construct_segment_2_construct_segment_2_object69;\"></A>\nConstruct_segment_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.construct_segment_2_object ()\n        </I></NOBR>\n        \n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Construct_triangle_2_construct_triangle_2_object69;\"></A>\nConstruct_triangle_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.construct_triangle_2_object ()\n        </I></NOBR>\n        \n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Comparison_x_2_compare_x_2_object69;\"></A>\nComparison_x_2\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.compare_x_2_object ()\n        </I></NOBR>\n        \n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Comparison_y_2_compare_y_2_object69;\"></A>\nComparison_y_2\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.compare_y_2_object ()\n        </I></NOBR>\n        \n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Orientation_2_orientation_2_object69;\"></A>\nOrientation_2\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.orientation_2_object ()\n        </I></NOBR>\n        \n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Side_of_oriented_circle_2_side_of_oriented_circle_2_object69;\"></A>\nSide_of_oriented_circle_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.side_of_oriented_circle_2_object ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Required only\nif <I><A HREF=\"../Kernel_23_ref/Function_side_of_oriented_circle.html#Cross_link_anchor_261\">side_of_oriented_circle</A></I> is called\ncalled.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Construct_circumcenter_2_construct_circumcenter_2_object69;\"></A>\nConstruct_circumcenter_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.construct_circumcenter_2_object ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Required only if <I><A HREF=\"../Kernel_23_ref/Function_circumcenter.html#Cross_link_anchor_165\">circumcenter</A></I> is called.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Has Models</H3>All the CGAL Kernels<BR>\n\n<I><A HREF=\"Class_Triangulation_euclidean_traits_2.html#Cross_link_anchor_942\">CGAL::Triangulation_euclidean_traits_2</A>&lt;K&gt;</I><BR>\n\n<I><A HREF=\"Class_Triangulation_euclidean_traits_xy_3.html#Cross_link_anchor_944\">CGAL::Triangulation_euclidean_traits_xy_3</A>&lt;K&gt;</I><BR>\n\n<I>CGAL::Triangulation_euclidean_traits_yz_3&lt;K&gt;</I><BR>\n\n<I>CGAL::Triangulation_euclidean_traits_zx_3&lt;K&gt;</I><BR>\n\n\n<P>\n\n<H3>See Also</H3><I><A HREF=\"Class_Triangulation_2.html#Cross_link_anchor_938\">CGAL::Triangulation_2</A>&lt;Traits,Tds&gt;</I>\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Concept_TriangulationVertexBase_2.html\"><I>TriangulationVertexBase_2</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_32!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 39081.0}