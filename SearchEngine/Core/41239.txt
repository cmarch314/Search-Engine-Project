{"text": " Home Trees Indices Help Package CHEM Package CombiCDB Module SynthesisGenerator Class SynthesisGenerator hide private frames no frames Class SynthesisGenerator Given a set of starting reactant molecules and reagent objects which can perform reactions on appropriate reactants randomly apply the reagents to the reactants in sequence and parallel to generate a product that could conceivably be synthesized with such components Furthermore provide the ordered list of reactants reagents and intermediate products to yield the synthesized product Instance Methods hide private init self maxSteps maxTries MAX TRIES Initialization constructor call self reactantSmilesList reagentList Primary execution method expects a list of molecules as the starting reactants and a list of BaseReagent objects that can be applied to the reactants generateSynthesis self reactantSmilesList reagentList depth Same as primary execution method but this one returns actual molecule objects instead of SMILES strings generateReactionStep self reactantList reagentList requiredReactants None Generate a single reaction step instead of an entire synthesis pathway betterReactionSteps self reactionSteps1 reactionSteps2 Decide which reaction sequence synthesis provides a better problem example retrieveSyntheses self synthesisRequest synthesisCount 1 Retrieve syntheses from the database based upon the synthesisRequest preGenerateSyntheses self synthesisRequest synthesisCount 1 Generates a synthesis based upon the synthesisRequest and then persists it into the database for rapid retrieval later clearSynthesisCache self synthesisRequest maxAcceptable maxDesired Look for pre generated cached syntheses in the database that match the synthesisRequest Static Methods hide private atomCount mol Return number of atoms in the molecule including hydrogens selectBestProduct productList Given a list of product molecules select the one that is best to carry over or to use as the final target Class Variables hide private maxSteps CHEM DB rdb search NameRxnPatternMatchingModel Sea maxTries CHEM DB rdb search NameRxnPatternMatchingModel Sea objectCache CHEM DB rdb search NameRxnPatternMatchingModel Method Details hide private init self maxSteps maxTries MAX TRIES Constructor Initialization constructor Parameters to specify call self reactantSmilesList reagentList Call operator Primary execution method expects a list of molecules as the starting reactants and a list of BaseReagent objects that can be applied to the reactants Result follows reactionSteps structure of CHEM Web cgibin reaction PathwayWeb py which is just a list of 3 ples each consisting of 1 List of reactant SMILES strings 2 A BaseReagent object 3 List of product SMILES strings generated by applying the reagent to the reactants Assuming these represent a sequential reaction pathway the final product s would be the product of the last 1 index 3 ple The length of the reactionSteps results i e number of steps in the synthesis pathway is determined by how many sequential steps can be found up to the maxSteps class attribute To get results containing actual reactant and product molecule objects possibly including additional reaction notes such as warning messages use the generateSynthesis method directly generateReactionStep self reactantList reagentList requiredReactants None Generate a single reaction step instead of an entire synthesis pathway Just randomly go through the reagent list and try applying them to the reactants until a viable product is found If additional requiredReactants are specified only return reaction steps that are among the reactants betterReactionSteps self reactionSteps1 reactionSteps2 Decide which reaction sequence synthesis provides a better problem example Factors considered include the longer sequence and which ones yields the least number of multi product unfocused steps selectBestProduct productList Static Method Given a list of product molecules select the one that is best to carry over or to use as the final target Return one with most carbons but prefer lower warning level retrieveSyntheses self synthesisRequest synthesisCount 1 Retrieve syntheses from the database based upon the synthesisRequest Many could match the criteria so just randomly select several up to the synthesisCount If not enough exist then generate some on the fly right now preGenerateSyntheses self synthesisRequest synthesisCount 1 Generates a synthesis based upon the synthesisRequest and then persists it into the database for rapid retrieval later Return these as a list as well just in case they are needed for immediate use clearSynthesisCache self synthesisRequest maxAcceptable maxDesired Look for pre generated cached syntheses in the database that match the synthesisRequest If there are more than the maxAcceptable delete all of the oldest ones until maxDesired or less remains Class Variable Details hide private maxSteps Value None maxTries Value None objectCache Value None Home Trees Indices Help Generated by Epydoc 3 beta1 on Thu Nov 8 17 49 27 2 7 http epydoc sourceforge net", "_id": "http://www.ics.uci.edu/~dock/CHEM_docs/CHEM.CombiCDB.SynthesisGenerator.SynthesisGenerator-class.html", "title": "chem.combicdb.synthesisgenerator.synthesisgenerator", "html": "<?xml version=\"1.0\" encoding=\"ascii\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n          \"DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n  <title>CHEM.CombiCDB.SynthesisGenerator.SynthesisGenerator</title>\n  <link rel=\"stylesheet\" href=\"epydoc.css\" type=\"text/css\" />\n  <script type=\"text/javascript\" src=\"epydoc.js\"></script>\n</head>\n\n<body bgcolor=\"white\" text=\"black\" link=\"blue\" vlink=\"#204080\"\n      alink=\"#204080\">\n<!-- ==================== NAVIGATION BAR ==================== -->\n<table class=\"navbar\" border=\"0\" width=\"100%\" cellpadding=\"0\"\n       bgcolor=\"#a0c0ff\" cellspacing=\"0\">\n  <tr valign=\"middle\">\n  <!-- Home link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"CHEM-module.html\">Home</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Tree link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"module-tree.html\">Trees</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Index link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"identifier-index.html\">Indices</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Help link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"help.html\">Help</a>&nbsp;&nbsp;&nbsp;</th>\n\n      <th class=\"navbar\" width=\"100%\"></th>\n  </tr>\n</table>\n<table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n  <tr valign=\"top\">\n    <td width=\"100%\">\n      <span class=\"breadcrumbs\">\n        <a href=\"CHEM-module.html\">Package&nbsp;CHEM</a> ::\n        <a href=\"CHEM.CombiCDB-module.html\">Package&nbsp;CombiCDB</a> ::\n        <a href=\"CHEM.CombiCDB.SynthesisGenerator-module.html\">Module&nbsp;SynthesisGenerator</a> ::\n        Class&nbsp;SynthesisGenerator\n      </span>\n    </td>\n    <td>\n      <table cellpadding=\"0\" cellspacing=\"0\">\n        <!-- hide/show private -->\n        <tr><td align=\"right\"><span class=\"options\">[<a href=\"javascript:void(0);\" class=\"privatelink\"\n    onclick=\"toggle_private();\">hide&nbsp;private</a>]</span></td></tr>\n        <tr><td align=\"right\"><span class=\"options\"\n            >[<a href=\"frames.html\" target=\"_top\">frames</a\n            >]&nbsp;|&nbsp;<a href=\"CHEM.CombiCDB.SynthesisGenerator.SynthesisGenerator-class.html\"\n            target=\"_top\">no&nbsp;frames</a>]</span></td></tr>\n      </table>\n    </td>\n  </tr>\n</table>\n<!-- ==================== CLASS DESCRIPTION ==================== -->\n<h1 class=\"epydoc\">Class SynthesisGenerator</h1><br /><br />\n<p>Given a set of starting reactant molecules and reagent objects which \n  can perform reactions on appropriate reactants, randomly apply the \n  reagents to the reactants in sequence (and parallel) to generate a \n  product that could conceivably be synthesized with such components.</p>\n  Furthermore, provide the ordered list of reactants, reagents, and \n  intermediate products to yield the synthesized product.<br /><br />\n\n<!-- ==================== INSTANCE METHODS ==================== -->\n<a name=\"section-InstanceMethods\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Instance Methods</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-InstanceMethods\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.CombiCDB.SynthesisGenerator.SynthesisGenerator-class.html#__init__\" class=\"summary-sig-name\">__init__</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">maxSteps</span>=<span class=\"summary-sig-default\">0</span>,\n        <span class=\"summary-sig-arg\">maxTries</span>=<span class=\"summary-sig-default\">MAX_TRIES</span>)</span><br />\n      Initialization constructor.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.CombiCDB.SynthesisGenerator.SynthesisGenerator-class.html#__call__\" class=\"summary-sig-name\">__call__</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">reactantSmilesList</span>,\n        <span class=\"summary-sig-arg\">reagentList</span>)</span><br />\n      Primary execution method, expects a list of molecules as the\nstarting reactants and a list of BaseReagent objects that can be applied\nto the reactants.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"generateSynthesis\"></a><span class=\"summary-sig-name\">generateSynthesis</span>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">reactantSmilesList</span>,\n        <span class=\"summary-sig-arg\">reagentList</span>,\n        <span class=\"summary-sig-arg\">depth</span>=<span class=\"summary-sig-default\">0</span>)</span><br />\n      Same as primary execution method, but this one returns actual \n      molecule objects instead of SMILES strings.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.CombiCDB.SynthesisGenerator.SynthesisGenerator-class.html#generateReactionStep\" class=\"summary-sig-name\">generateReactionStep</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">reactantList</span>,\n        <span class=\"summary-sig-arg\">reagentList</span>,\n        <span class=\"summary-sig-arg\">requiredReactants</span>=<span class=\"summary-sig-default\">None</span>)</span><br />\n      Generate a single reaction step, instead of an entire synthesis \n      pathway.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.CombiCDB.SynthesisGenerator.SynthesisGenerator-class.html#betterReactionSteps\" class=\"summary-sig-name\">betterReactionSteps</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">reactionSteps1</span>,\n        <span class=\"summary-sig-arg\">reactionSteps2</span>)</span><br />\n      Decide which reaction sequence / synthesis provides a better \n      problem example.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.CombiCDB.SynthesisGenerator.SynthesisGenerator-class.html#retrieveSyntheses\" class=\"summary-sig-name\">retrieveSyntheses</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">synthesisRequest</span>,\n        <span class=\"summary-sig-arg\">synthesisCount</span>=<span class=\"summary-sig-default\">1</span>)</span><br />\n      Retrieve syntheses from the database based upon the \n      synthesisRequest.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.CombiCDB.SynthesisGenerator.SynthesisGenerator-class.html#preGenerateSyntheses\" class=\"summary-sig-name\">preGenerateSyntheses</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">synthesisRequest</span>,\n        <span class=\"summary-sig-arg\">synthesisCount</span>=<span class=\"summary-sig-default\">1</span>)</span><br />\n      Generates a synthesis based upon the synthesisRequest, and then \n      persists it into the database for rapid retrieval later.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.CombiCDB.SynthesisGenerator.SynthesisGenerator-class.html#clearSynthesisCache\" class=\"summary-sig-name\">clearSynthesisCache</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">synthesisRequest</span>,\n        <span class=\"summary-sig-arg\">maxAcceptable</span>=<span class=\"summary-sig-default\">0</span>,\n        <span class=\"summary-sig-arg\">maxDesired</span>=<span class=\"summary-sig-default\">0</span>)</span><br />\n      Look for pre-generated cached syntheses in the database that match\n      the synthesisRequest.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n</table>\n<!-- ==================== STATIC METHODS ==================== -->\n<a name=\"section-StaticMethods\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Static Methods</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-StaticMethods\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"atomCount\"></a><span class=\"summary-sig-name\">atomCount</span>(<span class=\"summary-sig-arg\">mol</span>)</span><br />\n      Return number of atoms in the molecule, including hydrogens</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.CombiCDB.SynthesisGenerator.SynthesisGenerator-class.html#selectBestProduct\" class=\"summary-sig-name\">selectBestProduct</a>(<span class=\"summary-sig-arg\">productList</span>)</span><br />\n      Given a list of product molecules, select the one that is best to \n      carry over or to use as the final target.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n</table>\n<!-- ==================== CLASS VARIABLES ==================== -->\n<a name=\"section-ClassVariables\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Class Variables</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-ClassVariables\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a href=\"CHEM.CombiCDB.SynthesisGenerator.SynthesisGenerator-class.html#maxSteps\" class=\"summary-name\">maxSteps</a> = <code title=\"None\">&lt;CHEM.DB.rdb.search.NameRxnPatternMatchingModel.Sea<code class=\"variable-ellipsis\">...</code></code>\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a href=\"CHEM.CombiCDB.SynthesisGenerator.SynthesisGenerator-class.html#maxTries\" class=\"summary-name\">maxTries</a> = <code title=\"None\">&lt;CHEM.DB.rdb.search.NameRxnPatternMatchingModel.Sea<code class=\"variable-ellipsis\">...</code></code>\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a href=\"CHEM.CombiCDB.SynthesisGenerator.SynthesisGenerator-class.html#objectCache\" class=\"summary-name\">objectCache</a> = <code title=\"None\">&lt;CHEM.DB.rdb.search.NameRxnPatternMatchingModel.<code class=\"variable-ellipsis\">...</code></code>\n    </td>\n  </tr>\n</table>\n<!-- ==================== METHOD DETAILS ==================== -->\n<a name=\"section-MethodDetails\"></a>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Method Details</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-MethodDetails\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n</table>\n<a name=\"__init__\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">__init__</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">maxSteps</span>=<span class=\"sig-default\">0</span>,\n        <span class=\"sig-arg\">maxTries</span>=<span class=\"sig-default\">MAX_TRIES</span>)</span>\n    <br /><em class=\"fname\">(Constructor)</em>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Initialization constructor.  Parameters to specify\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"__call__\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">__call__</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">reactantSmilesList</span>,\n        <span class=\"sig-arg\">reagentList</span>)</span>\n    <br /><em class=\"fname\">(Call operator)</em>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <pre class=\"literalblock\">\nPrimary execution method, expects a list of molecules as the\nstarting reactants and a list of BaseReagent objects that can be applied\nto the reactants.\n\nResult follows reactionSteps structure of CHEM/Web/cgibin/reaction/PathwayWeb.py\nwhich is just a list of 3-ples, each consisting of:\n    (1) List of reactant SMILES strings\n    (2) A BaseReagent object\n    (3) List of product SMILES strings generated by applying the reagent to the reactants\nAssuming these represent a sequential reaction pathway, the final product(s)\nwould be the product of the last (-1 index) 3-ple.\n\nThe length of the reactionSteps results (i.e., number of steps in the synthesis\npathway), is determined by how many sequential steps can be found, \nup to the maxSteps class attribute.\n\nTo get results containing actual reactant and product molecule objects,\npossibly including additional reaction notes such as warning messages,\nuse the generateSynthesis method directly.\n\n</pre>\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"generateReactionStep\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">generateReactionStep</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">reactantList</span>,\n        <span class=\"sig-arg\">reagentList</span>,\n        <span class=\"sig-arg\">requiredReactants</span>=<span class=\"sig-default\">None</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Generate a single reaction step, instead of an entire synthesis \n  pathway. Just randomly go through the reagent list and try applying them \n  to the reactants until a viable product is found.  If additional \n  requiredReactants are specified, only return reaction steps that are \n  among the reactants.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"betterReactionSteps\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">betterReactionSteps</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">reactionSteps1</span>,\n        <span class=\"sig-arg\">reactionSteps2</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Decide which reaction sequence / synthesis provides a better problem \n  example. Factors considered include the longer sequence and which ones \n  yields the least number of multi-product (unfocused) steps\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"selectBestProduct\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">selectBestProduct</span>(<span class=\"sig-arg\">productList</span>)</span>\n    <br /><em class=\"fname\">Static Method</em>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <p>Given a list of product molecules, select the one that is best to \n  carry over or to use as the final target.</p>\n  Return one with most carbons but prefer lower warning_level\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"retrieveSyntheses\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">retrieveSyntheses</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">synthesisRequest</span>,\n        <span class=\"sig-arg\">synthesisCount</span>=<span class=\"sig-default\">1</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Retrieve syntheses from the database based upon the synthesisRequest. \n  Many could match the criteria, so just randomly select several up to the \n  synthesisCount.  If not enough exist, then generate some on the fly right\n  now.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"preGenerateSyntheses\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">preGenerateSyntheses</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">synthesisRequest</span>,\n        <span class=\"sig-arg\">synthesisCount</span>=<span class=\"sig-default\">1</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Generates a synthesis based upon the synthesisRequest, and then \n  persists it into the database for rapid retrieval later. Return these as \n  a list as well, just in case they are needed for immediate use.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"clearSynthesisCache\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">clearSynthesisCache</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">synthesisRequest</span>,\n        <span class=\"sig-arg\">maxAcceptable</span>=<span class=\"sig-default\">0</span>,\n        <span class=\"sig-arg\">maxDesired</span>=<span class=\"sig-default\">0</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Look for pre-generated cached syntheses in the database that match the\n  synthesisRequest. If there are more than the maxAcceptable, delete all of\n  the oldest ones until maxDesired or less remains.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<br />\n<!-- ==================== CLASS VARIABLE DETAILS ==================== -->\n<a name=\"section-ClassVariableDetails\"></a>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Class Variable Details</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-ClassVariableDetails\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n</table>\n<a name=\"maxSteps\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <h3 class=\"epydoc\">maxSteps</h3>\n  \n  <dl class=\"fields\">\n  </dl>\n  <dl class=\"fields\">\n    <dt>Value:</dt>\n      <dd><table><tr><td><pre class=\"variable\">\nNone\n</pre></td></tr></table>\n</dd>\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"maxTries\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <h3 class=\"epydoc\">maxTries</h3>\n  \n  <dl class=\"fields\">\n  </dl>\n  <dl class=\"fields\">\n    <dt>Value:</dt>\n      <dd><table><tr><td><pre class=\"variable\">\nNone\n</pre></td></tr></table>\n</dd>\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"objectCache\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <h3 class=\"epydoc\">objectCache</h3>\n  \n  <dl class=\"fields\">\n  </dl>\n  <dl class=\"fields\">\n    <dt>Value:</dt>\n      <dd><table><tr><td><pre class=\"variable\">\nNone\n</pre></td></tr></table>\n</dd>\n  </dl>\n</td></tr></table>\n</div>\n<br />\n<!-- ==================== NAVIGATION BAR ==================== -->\n<table class=\"navbar\" border=\"0\" width=\"100%\" cellpadding=\"0\"\n       bgcolor=\"#a0c0ff\" cellspacing=\"0\">\n  <tr valign=\"middle\">\n  <!-- Home link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"CHEM-module.html\">Home</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Tree link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"module-tree.html\">Trees</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Index link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"identifier-index.html\">Indices</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Help link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"help.html\">Help</a>&nbsp;&nbsp;&nbsp;</th>\n\n      <th class=\"navbar\" width=\"100%\"></th>\n  </tr>\n</table>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%%\">\n  <tr>\n    <td align=\"left\" class=\"footer\">\n    Generated by Epydoc 3.0beta1 on Thu Nov  8 17:49:27 2007\n    </td>\n    <td align=\"right\" class=\"footer\">\n      <a href=\"http://epydoc.sourceforge.net\">http://epydoc.sourceforge.net</a>\n    </td>\n  </tr>\n</table>\n\n<script type=\"text/javascript\">\n  <!--\n  // Private objects are initially displayed (because if\n  // javascript is turned off then we want them to be\n  // visible); but by default, we want to hide them.  So hide\n  // them unless we have a cookie that says to show them.\n  checkCookie()\n  // -->\n</script>\n  \n</body>\n</html>\n", "id": 41239.0}