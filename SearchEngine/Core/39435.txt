{"text": "Navigation Up Table of Contents Bibliography Index Title Page OptimalConvexPartitionTraits 2 Definition Requirements of a traits class to be used with the function optimal convex partition 2 that computes an optimal convex partition of a polygon Generalizes PartitionTraits 2 Types In addition to the types listed with the concept PartitionTraits 2 the following types are required OptimalConvexPartitionTraits 2 Segment 2 A segment type OptimalConvexPartitionTraits 2 Ray 2 A ray type OptimalConvexPartitionTraits 2 Object 2 A general object type that can be either a point or a segment OptimalConvexPartitionTraits 2 Construct segment 2 Function object type that provides Segment 2 operator Point 2 p Point 2 q which constructs and returns the segment defined by the points p and q OptimalConvexPartitionTraits 2 Construct ray 2 Function object type that provides Ray 2 operator Point 2 p Point 2 q which constructs and returns the ray from point p through point q OptimalConvexPartitionTraits 2 Collinear are ordered along line 2 Predicate object type that determines orderings of Point 2s on a line Must provide bool operator Point 2 p Point 2 q Point 2 r that returns true iff q lies between p and r and p q and r statisfy the precondition that they are collinear OptimalConvexPartitionTraits 2 Are stritcly ordered along line 2 Predicate object type that determines orderings of Point 2s Must provide bool operator Point 2 p Point 2 q Point 2 r that returns true iff the three points are collinear and q lies strictly between p and r Note that false should be returned if q p or q r OptimalConvexPartitionTraits 2 Intersect 2 Function object type that provides Object 2 operator Segment 2 s1 Segment 2 s2 that returns the intersection of two segments which may be either a segment or a point OptimalConvexPartitionTraits 2 Assign 2 Function object type that provides bool operator Segment 2 s1 Object 2 o that returns true if o is a segment and assigns the value of o to s1 returns false otherwise Creation Only a copy constructor is required OptimalConvexPartitionTraits 2 traits tr Operations In addition to the functions required by PartitionTraits 2 the following functions that create instances of the above function object types must exist Collinear are ordered along line 2 traits collinear are ordered along line 2 object Construct segment 2 traits construct segment 2 object Construct ray 2 traits construct ray 2 object Are strictly ordered along line 2 traits are strictly ordered along line 2 object Has Models CGAL Partition traits 2 R See Also CGAL convex partition is valid 2 CGAL Partition is valid traits 2 Traits PolygonIsValid Next PartitionTraits 2 Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Partition_2_ref/Concept_OptimalConvexPartitionTraits_2.html", "title": "optimalconvexpartitiontraits_2", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Partition_2_ref/OptimalConvexPartitionTraits_2.tex' -->\n<html> <head>  \n<title>OptimalConvexPartitionTraits_2</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_681\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_663\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Concept.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_OptimalConvexPartitionTraits_2\"></A>\n<h2><I>OptimalConvexPartitionTraits_2</I></h2>\n\n\n\n   \n     \n     \n<A NAME=\"Index_anchor_664\"></A>\n<P>\n\n<H3>Definition</H3>\n<P>\n\nRequirements of a traits class to be\nused with the function <I><A HREF=\"Function_optimal_convex_partition_2.html#Cross_link_anchor_706\">optimal_convex_partition_2</A></I> that computes\nan optimal convex partition of a polygon.\n<P>\n\n<H3>Generalizes</H3>\n<P>\n\n<I><A HREF=\"Concept_PartitionTraits_2.html#Cross_link_anchor_682\">PartitionTraits_2</A></I>\n<A NAME=\"Index_anchor_665\"></A>\n<P>\n\n<H3>Types</H3>\n<P>\n\n<A NAME=\"Index_anchor_666\"></A> \n\nIn addition to the types listed with the concept <A HREF=\"Concept_PartitionTraits_2.html#Cross_link_anchor_682\">PartitionTraits_2</A>, the\nfollowing types are required:\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_OptimalConvexPartitionTraits_2.html#Cross_link_anchor_681\">OptimalConvexPartitionTraits_2</A>::<A HREF=\"../Kernel_23_ref/Class_Segment_2.html#Cross_link_anchor_56\">Segment_2</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    A segment type\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_OptimalConvexPartitionTraits_2.html#Cross_link_anchor_681\">OptimalConvexPartitionTraits_2</A>::<A HREF=\"../Kernel_23_ref/Class_Ray_2.html#Cross_link_anchor_54\">Ray_2</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    A ray type\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_OptimalConvexPartitionTraits_2.html#Cross_link_anchor_681\">OptimalConvexPartitionTraits_2</A>::Object_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    A general object type that can be either a point or a segment\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_OptimalConvexPartitionTraits_2.html#Cross_link_anchor_681\">OptimalConvexPartitionTraits_2</A>::Construct_segment_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Function object type that provides\n<I><A HREF=\"../Kernel_23_ref/Class_Segment_2.html#Cross_link_anchor_56\">Segment_2</A> operator()(<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p, <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> q)</I>, which constructs and\nreturns the segment defined by the points <MATH><I>p</I></MATH> and <MATH><I>q</I></MATH>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_OptimalConvexPartitionTraits_2.html#Cross_link_anchor_681\">OptimalConvexPartitionTraits_2</A>::Construct_ray_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Function object type that provides\n<I><A HREF=\"../Kernel_23_ref/Class_Ray_2.html#Cross_link_anchor_54\">Ray_2</A> operator()(<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p, <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> q)</I>, which constructs and returns\nthe ray from point <MATH><I>p</I></MATH> through point <MATH><I>q</I></MATH>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_OptimalConvexPartitionTraits_2.html#Cross_link_anchor_681\">OptimalConvexPartitionTraits_2</A>::Collinear_are_ordered_along_line_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Predicate object type that\ndetermines orderings of <I><A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A></I>s on a line.  Must provide\n<I>bool operator()(<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p, <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> q, <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> r)</I> that \nreturns <I>true</I>, iff <I>q</I> lies between <I>p</I>\nand <I>r</I> and <I>p</I>, <I>q</I>, and <I>r</I> statisfy the precondition\nthat they are <A HREF=\"../Kernel_23_ref/Function_collinear.html#Cross_link_anchor_167\">collinear</A>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_OptimalConvexPartitionTraits_2.html#Cross_link_anchor_681\">OptimalConvexPartitionTraits_2</A>::Are_stritcly_ordered_along_line_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Predicate object type that\ndetermines orderings of <I><A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A></I>s.  Must provide\n<I>bool operator()(<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p, <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> q, <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> r)</I> that \nreturns <I>true</I>, iff the three points are <A HREF=\"../Kernel_23_ref/Function_collinear.html#Cross_link_anchor_167\">collinear</A> and \n<I>q</I> lies strictly between <I>p</I>\nand <I>r</I>.  Note that <I>false</I> should be returned if\n<I>q==p</I> or <I>q==r</I>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_OptimalConvexPartitionTraits_2.html#Cross_link_anchor_681\">OptimalConvexPartitionTraits_2</A>::Intersect_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Function object type that provides\n<I>Object_2 operator()(<A HREF=\"../Kernel_23_ref/Class_Segment_2.html#Cross_link_anchor_56\">Segment_2</A> s1, <A HREF=\"../Kernel_23_ref/Class_Segment_2.html#Cross_link_anchor_56\">Segment_2</A> s2)</I> that returns\nthe <A HREF=\"../Kernel_23_ref/Function_intersection.html#Cross_link_anchor_221\">intersection</A> of two segments (which may be either a segment or\na point).\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_OptimalConvexPartitionTraits_2.html#Cross_link_anchor_681\">OptimalConvexPartitionTraits_2</A>::Assign_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Function object type that provides\n<I>bool operator()(<A HREF=\"../Kernel_23_ref/Class_Segment_2.html#Cross_link_anchor_56\">Segment_2</A> s1, Object_2 o)</I> that returns \n<I>true</I> if <I>o</I> is a segment and assigns the value of <I>o</I>\nto <I>s1</I>; returns <I>false</I> otherwise.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Creation</H3>\n<P>\n\nOnly a copy constructor is required.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_OptimalConvexPartitionTraits_2.html#Cross_link_anchor_681\">OptimalConvexPartitionTraits_2</A> traits (  &amp; tr);\n        </I></NOBR>\n        </TD></TR>\n<P>\n\n</TABLE>\n<P>\n\n<H3>Operations</H3>\n<P>\n\n<A NAME=\"Index_anchor_667\"></A> \n\nIn addition to the functions required by <A HREF=\"Concept_PartitionTraits_2.html#Cross_link_anchor_682\">PartitionTraits_2</A>, the following\nfunctions that create instances of the above function object types\nmust exist:\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Collinear_are_ordered_along_line_2_collinear_are_ordered_along_line_2_object69_const;\"></A>\nCollinear_are_ordered_along_line_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.collinear_are_ordered_along_line_2_object ()\n        </I></NOBR>\n        \n    \n        </TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Construct_segment_2_construct_segment_2_object69_const;\"></A>\nConstruct_segment_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.construct_segment_2_object ()\n        </I></NOBR>\n        \n    \n        </TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Construct_ray_2_construct_ray_2_object69_const;\"></A>\nConstruct_ray_2\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.construct_ray_2_object ()\n        </I></NOBR>\n        \n    \n        </TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Are_strictly_ordered_along_line_2_are_strictly_ordered_along_line_2_object69_const;\"></A>\nAre_strictly_ordered_along_line_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.are_strictly_ordered_along_line_2_object ()\n        </I></NOBR>\n        \n    \n        </TR>\n        </TABLE>\n<P>\n\n<H3>Has Models</H3>\n<P>\n\n<I><A HREF=\"Class_Partition_traits_2.html#Cross_link_anchor_689\">CGAL::Partition_traits_2</A>&lt;R&gt;</I>\n<P>\n\n<H3>See Also</H3>\n<P>\n\n<I><A HREF=\"Function_convex_partition_is_valid_2.html#Cross_link_anchor_699\">CGAL::convex_partition_is_valid_2</A></I><BR>\n\n<I><A HREF=\"Class_Partition_is_valid_traits_2.html#Cross_link_anchor_687\">CGAL::Partition_is_valid_traits_2</A>&lt;Traits, <A HREF=\"FunctionObjectConcept_PolygonIsValid.html#Cross_link_anchor_686\">PolygonIsValid</A>&gt;</I>\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Concept_PartitionTraits_2.html\"><I>PartitionTraits_2</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_10!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 39435.0}