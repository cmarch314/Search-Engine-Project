{"text": "Navigation Up Table of Contents Bibliography Index Title Page RegularTriangulationTraits 3 DefinitionThe concept RegularTriangulationTraits 3 is the first template parameter of the class Regular triangulation 3 It defines the geometric objects points segments forming the triangulation together with a few geometric predicates and constructions on these objects RefinesTriangulationTraits 3 In addition to the requirements described for the traits class of Triangulation 3 the geometric traits class of Regular triangulation 3 must fulfill the following requirements It must provide definitions for the power tests We use here the same notation as in Section To simplify notation p will often denote in the sequel either the point p 3 or the weighted point p w p wp RegularTriangulationTraits 3 Weighted point 3 The weighted point type RegularTriangulationTraits 3 Power test 3 A predicate object which must provide the following function operators Oriented side operator Weighted point 3 p Weighted point 3 q Weighted point 3 r Weighted point 3 s Weighted point 3 t which performs the following Let z p q r s w be the power sphere of the weighted points p q r s Returns ON ORIENTED BOUNDARY if t is orthogonal to z p q r s w ON NEGATIVE SIDE if t lies outside the oriented sphere of center z p q r s and radius sqrt wz p q r s 2 wt2 which is equivalent to t w z p q r s w ON POSITIVE SIDE if t lies inside this oriented sphere Precondition p q r s are not coplanar Note that with this definition if all the points have a weight equal to then power test p q r s t side of oriented sphere p q r s t Oriented side operator Weighted point 3 p Weighted point 3 q Weighted point 3 r Weighted point 3 t which has an definition analogous to the previous method for coplanar points with the power circle z p q r w Precondition p q r are not collinear and p q r t are coplanar If all the points have a weight equal to then power test p q r s t side of oriented circle p q r s t Oriented side operator Weighted point 3 p Weighted point 3 q Weighted point 3 t which is the same for collinear points where z p q w is the power segment of p and q Precondition p and q have different Bare points and p q t are collinear If all points have a weight equal to then power test p q t gives the same answer as the kernel predicate s p q has on t would give where s p q denotes the segment with endpoints p and q Oriented side operator Weighted point 3 p Weighted point 3 q which is the same for equal points that is when p and q have equal coordinates then it returns the comparison of the weights ON POSITIVE SIDE when q is heavier than p Precondition p and q have equal Bare points The following predicate is required if a call to nearest power vertex or nearest power vertex in cell is issued RegularTriangulationTraits 3 Compare power distance 3 A predicate object that must provide the function operator Comparison result operator Point 3 p Weighted point 3 q Weighted point 3 r which compares the power distance between p and q to the power distance between p and r Operations The following function gives access to the predicate object Power test 3 traits power test 3 object Has Models CGAL Regular triangulation euclidean traits 3 CGAL Regular triangulation filtered traits 3 Next Regular triangulation euclidean traits 3 R Weight Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Triangulation_3_ref/Concept_RegularTriangulationTraits_3.html", "title": "regulartriangulationtraits_3", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Triangulation_3_ref/RegularTriangulationTraits_3.tex' -->\n<html> <head>  \n<title>RegularTriangulationTraits_3</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_981\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_922\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Concept.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_RegularTriangulationTraits_3\"></A>\n<h2><I>RegularTriangulationTraits_3</I></h2>\n<P>\n\n<H3>Definition</H3>The concept <I><A HREF=\"Concept_RegularTriangulationTraits_3.html#Cross_link_anchor_981\">RegularTriangulationTraits_3</A></I> is the first template parameter of the class\n<I><A HREF=\"Class_Regular_triangulation_3.html#Cross_link_anchor_978\">Regular_triangulation_3</A></I>. It defines the geometric objects (points,\nsegments...) forming the triangulation together with a few geometric\npredicates and constructions on these objects.\n<P>\n\n<H3>Refines</H3><I><A HREF=\"Concept_TriangulationTraits_3.html#Cross_link_anchor_979\">TriangulationTraits_3</A></I>\n<P>\n\nIn addition to the requirements described for the traits class of\n<I><A HREF=\"Class_Triangulation_3.html#Cross_link_anchor_972\">Triangulation_3</A></I>, the geometric traits class of\n<I><A HREF=\"Class_Regular_triangulation_3.html#Cross_link_anchor_978\">Regular_triangulation_3</A></I> must fulfill the following requirements.\nIt must provide definitions for the <I>power tests</I>.\n<P>\n\nWe use here the same notation as in\nSection&nbsp;<A HREF=\"../Triangulation_3/Chapter_main.html#Triangulation3-sec-class-Regulartriangulation\"><IMG SRC=\"cc_ref_up_arrow.gif\" ALT=\"reference\" WIDTH=\"10\" HEIGHT=\"10\"></A>. \nTo simplify notation, <MATH><I>p</I></MATH> will often denote in the sequel either the\npoint <MATH><I>p <IMG BORDER=0 WIDTH=9 HEIGHT=21 ALIGN=MIDDLE SRC=\"cc_in.gif\">  <IMG BORDER=0 WIDTH=13 HEIGHT=12 ALIGN=BOTTOM SRC=\"cc_mathbb_R.gif\"> <SUP>3</SUP></I></MATH> or the weighted point <MATH><I>p<SUP>(w)</SUP>=(p,w<SUB>p</SUB>)</I></MATH>.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_RegularTriangulationTraits_3.html#Cross_link_anchor_981\">RegularTriangulationTraits_3</A>::Weighted_point_3\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    The weighted point type.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_RegularTriangulationTraits_3.html#Cross_link_anchor_981\">RegularTriangulationTraits_3</A>::Power_test_3\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    A predicate object which must provide the following function operators:<BR>\n\n<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Enum_Oriented_side.html#Cross_link_anchor_116\">Oriented_side</A> operator()( Weighted_point_3 p, \t\t\t    Weighted_point_3 q, \t\t\t    Weighted_point_3 r, \t\t\t    Weighted_point_3 s, \t\t\t    Weighted_point_3 t)</I>,<BR>\n\nwhich performs the following:<BR>\n\nLet <MATH><I>z(p,q,r,s)<SUP>(w)</SUP></I></MATH> be the power sphere of the weighted points \n<MATH><I>(p,q,r,s)</I></MATH>. Returns<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Enum_Oriented_side#Enum_Oriented_side\">ON_ORIENTED_BOUNDARY</A></I> if <I>t</I> is orthogonal to\n<MATH><I>z(p,q,r,s)<SUP>(w)</SUP></I></MATH>,<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Enum_Oriented_side#Enum_Oriented_side\">ON_NEGATIVE_SIDE</A></I> if <I>t</I> lies outside the oriented sphere of\ncenter <MATH><I>z(p,q,r,s)</I></MATH> and radius <MATH><I><A HREF=\"../NumberTypeSupport_ref/Function_sqrt.html#Cross_link_anchor_1414\">sqrt</A>( w<SUB>z(p,q,r,s)</SUB><SUP>2</SUP> + w<SUB>t</SUB><SUP>2</SUP> )</I></MATH>\n(which is equivalent to <MATH><I><IMG BORDER=0 WIDTH=12 HEIGHT=12 ALIGN=BOTTOM SRC=\"cc_Pi.gif\">(t<SUP>(w)</SUP>,z(p,q,r,s)<SUP>(w)</SUP> &gt;0</I></MATH>)),<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Enum_Oriented_side#Enum_Oriented_side\">ON_POSITIVE_SIDE</A></I> if <I>t</I> lies inside this oriented sphere.<BR>\n\n<EM>Precondition: </EM><I>p, q, r, s</I> are not <A HREF=\"../Kernel_23_ref/Function_coplanar.html#Cross_link_anchor_197\">coplanar</A>.\nNote that with this definition, if all the points have a weight equal\nto 0, then\n<I>power_test(p,q,r,s,t)</I> = <I><A HREF=\"../Kernel_23_ref/Function_side_of_oriented_sphere.html#Cross_link_anchor_263\">side_of_oriented_sphere</A>(p,q,r,s,t)</I>.<BR>\n\n<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Enum_Oriented_side.html#Cross_link_anchor_116\">Oriented_side</A> operator()( Weighted_point_3 p, \t\t\t    Weighted_point_3 q, \t\t\t    Weighted_point_3 r, \t\t\t    Weighted_point_3 t)</I>,<BR>\n\nwhich has an\ndefinition analogous to the previous method, for <A HREF=\"../Kernel_23_ref/Function_coplanar.html#Cross_link_anchor_197\">coplanar</A> points,\nwith the power circle <MATH><I>z(p,q,r)<SUP>(w)</SUP></I></MATH>.<BR>\n\n<EM>Precondition: </EM><I>p, q, r</I> are not <A HREF=\"../Kernel_23_ref/Function_collinear.html#Cross_link_anchor_167\">collinear</A> and <I>p, q, r, t</I> are\n<A HREF=\"../Kernel_23_ref/Function_coplanar.html#Cross_link_anchor_197\">coplanar</A>.\nIf all the points have a weight equal to 0, then\n<I>power_test(p,q,r,s,t)</I> = <I><A HREF=\"../Kernel_23_ref/Function_side_of_oriented_circle.html#Cross_link_anchor_261\">side_of_oriented_circle</A>(p,q,r,s,t)</I>.<BR>\n\n<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Enum_Oriented_side.html#Cross_link_anchor_116\">Oriented_side</A> operator()( Weighted_point_3 p, \t\t\t    Weighted_point_3 q, \t\t\t    Weighted_point_3 t)</I>,<BR>\n\nwhich is the same for <A HREF=\"../Kernel_23_ref/Function_collinear.html#Cross_link_anchor_167\">collinear</A> points, where <MATH><I>z(p,q)<SUP>(w)</SUP></I></MATH> is the\npower segment of <I>p</I> and <I>q</I>.<BR>\n\n<EM>Precondition: </EM><I>p</I> and <I>q</I> have different Bare_points, and\n<I>p, q, t</I> are <A HREF=\"../Kernel_23_ref/Function_collinear.html#Cross_link_anchor_167\">collinear</A>.\nIf all points have a weight equal to 0, then\n<I>power_test(p,q,t)</I> gives the same answer as the kernel predicate\n<I>s(p,q).has_on(t)</I> would give, where  <I>s(p,q)</I> denotes the\nsegment with endpoints <I>p</I> and <I>q</I>.<BR>\n\n<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Enum_Oriented_side.html#Cross_link_anchor_116\">Oriented_side</A> operator()( Weighted_point_3 p, Weighted_point_3 q)</I>,<BR>\n\nwhich is the same for equal points, that is when <I>p</I> and <I>q</I>\nhave equal coordinates, then it returns the comparison of the weights\n(<I><A HREF=\"../Kernel_23_ref/Enum_Oriented_side#Enum_Oriented_side\">ON_POSITIVE_SIDE</A></I> when <I>q</I> is heavier than <I>p</I>).<BR>\n\n<EM>Precondition: </EM><I>p</I> and <I>q</I> have equal Bare_points.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\nThe following predicate is required if  a call to\n<I>nearest_power_vertex</I>\nor <I>nearest_power_vertex_in_cell</I> is issued:\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_RegularTriangulationTraits_3.html#Cross_link_anchor_981\">RegularTriangulationTraits_3</A>::Compare_power_distance_3\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    A predicate object that must provide the function operator<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Enum_Comparison_result.html#Cross_link_anchor_104\">Comparison_result</A> operator()(<A HREF=\"../Kernel_23_ref/Class_Point_3.html#Cross_link_anchor_74\">Point_3</A> p, Weighted_point_3 q,  Weighted_point_3 r)</I>,<BR>\n\nwhich compares the power distance between <I>p</I> and <I>q</I> \nto the power distance\nbetween <I>p</I> and <I>r</I>.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Operations</H3>\n<P>\n\nThe following function gives access to the predicate object:\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Power_test_3_power_test_3_object69;\"></A>\nPower_test_3\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.power_test_3_object ()\n        </I></NOBR>\n        \n    \n        </TR>\n        </TABLE>\n<P>\n\n<H3>Has Models</H3>\n<P>\n\n<I><A HREF=\"Class_Regular_triangulation_euclidean_traits_3.html#Cross_link_anchor_982\">CGAL::Regular_triangulation_euclidean_traits_3</A></I><BR>\n\n<I><A HREF=\"Class_Regular_triangulation_filtered_traits_3.html#Cross_link_anchor_984\">CGAL::Regular_triangulation_filtered_traits_3</A></I>.\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Class_Regular_triangulation_euclidean_traits_3.html\"><I>Regular_triangulation_euclidean_traits_3&lt;R,Weight&gt;</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_36!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 38126.0}