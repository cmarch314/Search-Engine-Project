{"text": "Index of willmlam teaching cs175 w12 Mancala NameLast modifiedSizeDescriptionParent Directory AILearning jar29 Feb 2 12 17 48 7 7K Group9RL jar29 Feb 2 12 17 48 6 8K KalahGameState java29 Feb 2 12 17 52 3 8K KalahPieGameState java29 Feb 2 12 17 52 4 8K MancalaFramework zip29 Feb 2 12 17 52 11K MancalaGameState java29 Feb 2 12 17 52 2 1K MancalaGameState txt18 Jan 2 12 18 24 1 5K MancalaPlayer java29 Feb 2 12 17 52 665 OwareGameState java29 Feb 2 12 17 52 5 K Team8 jar29 Feb 2 12 17 48 5 2K TermGame java29 Feb 2 12 17 52 4 5K group1 jar29 Feb 2 12 17 48 5 3K group1 data txt27 Feb 2 12 12 4 161 interactive Player java29 Feb 2 12 17 52 1 K random Player java29 Feb 2 12 17 52 1 7K Changelog 2 29 2 12 Tiny change to TermGame so that a gs copy is passed into the getMove method of a player for safety reasons 2 24 2 12 Added an actionsBeforeDeletion method for use when a player class is no longer going to be used More details on its usage and reason in TermGame java 2 8 2 12 Fixed a bug where the second player could keep making pie moves as long as it never makes a different move Thanks to a student for pointing this out 1 26 2 12 Changed to feature added yesterday to have the method take in the game state instead This should allow for more flexibility by providing the entire final state as information 1 25 2 12 Added a method to MancalaPlayer which allows it to do something after the game ends This can be used to provide feedback to the player for learning purposes 1 23 2 12 Fixed a bug in KalahGameState where a grab was not occuring when it lands on the first bucket after the opponent s 1 21 2 12 Modified the interactive Player class so it works in Eclipse 1 18 2 12 Added a version of Kalah using the pie rule KalahPieGameState Removed winner fields from GameState classes 1 14 2 12 Initial release About the Mancala Game Framework This framework was adapted for Mancala by William Lam for the Winter 2 12 offering of CS 175 taught by Max Welling The code was originally designed for Connect Four provided by Alex Ihler Classes Interfaces MancalaGameState abstract KalahGameState OwareGameState KalahPieGameState Use one of the subclasses to decide on the Mancala variant MancalaPlayer interface random Player interactive Player Implement the MancalaPlayer interface to create your AI routine The name of your class should be formatted as YourClassName Player TermGame TermGame provides an example of how to use MancalaGameState and MancalaPlayer It uses reflection to instantiate the state and player classes based on command line parameters We will use a similar main class to this to run the tournament The command line parameter format is java TermGame GameType StartingStones Player Class Player1Class Ex java TermGame Kalah 4 interactive random Set player as the interactive player and player 1 as the random player playing the Kalah variant with 4 starting stones in each bucket Note that for Oware repeated states are possible in the game tree Since we cannot assume that two players will make a consensus to end the game we will leave this decision up to the user interface running the game It should detect a sequence of repeated states and end the main execution loop if so About the competition For the competition we will run a program using the KalahPieGameState class that uses your AI player classes and any of their dependencies only It will stop the execution of your player class without warning and thus count as a forfeit if it does not make a move within the time limit You will be responsible of keeping track of the time within your implementation We will use a machine running Java 6 and your agent should use no more than 1GB memory and a single thread Time limit 5 seconds per move Tournament format Double round robin allowing players to take turns going first We will then run the tournament as many times as we have time resources for The hope is that learning agents will play differently as we run more tournaments The rankings will then be determined by the number of wins across all tournaments ", "_id": "http://www.ics.uci.edu/~willmlam/teaching/cs175_w12/Mancala/", "title": "index of /~willmlam/teaching/cs175_w12/mancala", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n<html>\n <head>\n  <title>Index of /~willmlam/teaching/cs175_w12/Mancala</title>\n </head>\n <body>\n<h1>Index of /~willmlam/teaching/cs175_w12/Mancala</h1>\n<table><tr><th><img src=\"/icons/blank.gif\" alt=\"[ICO]\"></th><th><a href=\"?C=N;O=D\">Name</a></th><th><a href=\"?C=M;O=A\">Last modified</a></th><th><a href=\"?C=S;O=A\">Size</a></th><th><a href=\"?C=D;O=A\">Description</a></th></tr><tr><th colspan=\"5\"><hr></th></tr>\n<tr><td valign=\"top\"><img src=\"/icons/back.gif\" alt=\"[DIR]\"></td><td><a href=\"/~willmlam/teaching/cs175_w12/\">Parent Directory</a></td><td>&nbsp;</td><td align=\"right\">  - </td><td>&nbsp;</td></tr>\n<tr><td valign=\"top\"><img src=\"/icons/unknown.gif\" alt=\"[   ]\"></td><td><a href=\"AILearning.jar\">AILearning.jar</a></td><td align=\"right\">29-Feb-2012 17:48  </td><td align=\"right\">7.7K</td><td>&nbsp;</td></tr>\n<tr><td valign=\"top\"><img src=\"/icons/unknown.gif\" alt=\"[   ]\"></td><td><a href=\"Group9RL.jar\">Group9RL.jar</a></td><td align=\"right\">29-Feb-2012 17:48  </td><td align=\"right\">6.8K</td><td>&nbsp;</td></tr>\n<tr><td valign=\"top\"><img src=\"/icons/text.gif\" alt=\"[TXT]\"></td><td><a href=\"KalahGameState.java\">KalahGameState.java</a></td><td align=\"right\">29-Feb-2012 17:52  </td><td align=\"right\">3.8K</td><td>&nbsp;</td></tr>\n<tr><td valign=\"top\"><img src=\"/icons/text.gif\" alt=\"[TXT]\"></td><td><a href=\"KalahPieGameState.java\">KalahPieGameState.java</a></td><td align=\"right\">29-Feb-2012 17:52  </td><td align=\"right\">4.8K</td><td>&nbsp;</td></tr>\n<tr><td valign=\"top\"><img src=\"/icons/compressed.gif\" alt=\"[   ]\"></td><td><a href=\"MancalaFramework.zip\">MancalaFramework.zip</a></td><td align=\"right\">29-Feb-2012 17:52  </td><td align=\"right\"> 11K</td><td>&nbsp;</td></tr>\n<tr><td valign=\"top\"><img src=\"/icons/text.gif\" alt=\"[TXT]\"></td><td><a href=\"MancalaGameState.java\">MancalaGameState.java</a></td><td align=\"right\">29-Feb-2012 17:52  </td><td align=\"right\">2.1K</td><td>&nbsp;</td></tr>\n<tr><td valign=\"top\"><img src=\"/icons/text.gif\" alt=\"[TXT]\"></td><td><a href=\"MancalaGameState.txt\">MancalaGameState.txt</a></td><td align=\"right\">18-Jan-2012 18:24  </td><td align=\"right\">1.5K</td><td>&nbsp;</td></tr>\n<tr><td valign=\"top\"><img src=\"/icons/text.gif\" alt=\"[TXT]\"></td><td><a href=\"MancalaPlayer.java\">MancalaPlayer.java</a></td><td align=\"right\">29-Feb-2012 17:52  </td><td align=\"right\">665 </td><td>&nbsp;</td></tr>\n<tr><td valign=\"top\"><img src=\"/icons/text.gif\" alt=\"[TXT]\"></td><td><a href=\"OwareGameState.java\">OwareGameState.java</a></td><td align=\"right\">29-Feb-2012 17:52  </td><td align=\"right\">5.0K</td><td>&nbsp;</td></tr>\n<tr><td valign=\"top\"><img src=\"/icons/unknown.gif\" alt=\"[   ]\"></td><td><a href=\"Team8.jar\">Team8.jar</a></td><td align=\"right\">29-Feb-2012 17:48  </td><td align=\"right\">5.2K</td><td>&nbsp;</td></tr>\n<tr><td valign=\"top\"><img src=\"/icons/unknown.gif\" alt=\"[   ]\"></td><td><a href=\"TermGame.java\">TermGame.java</a></td><td align=\"right\">29-Feb-2012 17:52  </td><td align=\"right\">4.5K</td><td>&nbsp;</td></tr>\n<tr><td valign=\"top\"><img src=\"/icons/unknown.gif\" alt=\"[   ]\"></td><td><a href=\"group1.jar\">group1.jar</a></td><td align=\"right\">29-Feb-2012 17:48  </td><td align=\"right\">5.3K</td><td>&nbsp;</td></tr>\n<tr><td valign=\"top\"><img src=\"/icons/text.gif\" alt=\"[TXT]\"></td><td><a href=\"group10_data.txt\">group10_data.txt</a></td><td align=\"right\">27-Feb-2012 12:04  </td><td align=\"right\">161 </td><td>&nbsp;</td></tr>\n<tr><td valign=\"top\"><img src=\"/icons/text.gif\" alt=\"[TXT]\"></td><td><a href=\"interactive_Player.java\">interactive_Player.java</a></td><td align=\"right\">29-Feb-2012 17:52  </td><td align=\"right\">1.0K</td><td>&nbsp;</td></tr>\n<tr><td valign=\"top\"><img src=\"/icons/text.gif\" alt=\"[TXT]\"></td><td><a href=\"random_Player.java\">random_Player.java</a></td><td align=\"right\">29-Feb-2012 17:52  </td><td align=\"right\">1.7K</td><td>&nbsp;</td></tr>\n<tr><th colspan=\"5\"><hr></th></tr>\n</table>\n<h3>Changelog</h3>\n\n<ul>\n<li>02/29/2012: Tiny change to TermGame so that a gs.copy() is passed into the getMove() method of a player for safety reasons.</li>\n<li>02/24/2012: Added an actionsBeforeDeletion() method for use when a player class is no longer going to be used. More details on its usage and reason in TermGame.java</li>\n<li>02/08/2012: Fixed a bug where the second player could keep making pie moves as long as it never makes a different move. (Thanks to a student for pointing this out!)</li>\n<li>01/26/2012: Changed to feature added yesterday to have the method take in the game state instead. This should allow for more flexibility by providing the entire final state as information.</li>\n<li>01/25/2012: Added a method to MancalaPlayer which allows it to do something after the game ends. This can be used to provide feedback to the player for learning purposes.</li>\n<li>01/23/2012: Fixed a bug in KalahGameState where a grab was not occuring when it lands on the first bucket after the opponent's.</li>\n<li>01/21/2012: Modified the interactive_Player class so it works in Eclipse.</li>\n<li>01/18/2012: Added a version of Kalah using the pie rule (KalahPieGameState).\nRemoved \"winner\" fields from GameState classes.</li>\n<li>01/14/2012: Initial release.</li>\n</ul>\n\n<h3>About the Mancala Game Framework</h3>\n\n<p>This framework was adapted for Mancala by William Lam for the Winter 2012 \noffering of CS 175, taught by Max Welling. The code was originally designed \nfor Connect Four, provided by Alex Ihler.</p>\n\n<h3>Classes/Interfaces</h3>\n\n<pre><code>MancalaGameState (abstract)\n|- KalahGameState\n|- OwareGameState\n|- KalahPieGameState\n</code></pre>\n\n<p>Use one of the subclasses to decide on the Mancala variant.</p>\n\n<pre><code>MancalaPlayer (interface)\n|- random_Player\n|- interactive_Player\n</code></pre>\n\n<p>Implement the MancalaPlayer interface to create your AI routine. The \nname of your class should be formatted as YourClassName_Player.</p>\n\n<pre><code>TermGame\n</code></pre>\n\n<p>TermGame provides an example of how to use MancalaGameState and \nMancalaPlayer. It uses reflection to instantiate the state and player classes \nbased on command line parameters. We will use a similar main class to \nthis to run the tournament.</p>\n\n<pre><code>The command-line parameter format is: \njava TermGame &lt;GameType&gt; &lt;StartingStones&gt; &lt;Player0Class&gt; &lt;Player1Class&gt;\n\nEx: java TermGame Kalah 4 interactive random\nSet player 0 as the interactive player and player 1 as the random player, \nplaying the Kalah variant with 4 starting stones in each bucket.\n</code></pre>\n\n<p>Note that for Oware, repeated states are possible in the game tree. Since \nwe cannot assume that two players will make a consensus to end the game, \nwe will leave this decision up to the user interface running the game. (It \nshould detect a sequence of repeated states and end the main execution loop, \nif so.)</p>\n\n<h3>About the competition</h3>\n\n<p>For the competition, we will run a program using the <em>KalahPieGameState</em> class \nthat uses your AI player classes (and any of their dependencies) only.  It \nwill stop the execution of your player class without warning (and thus count \nas a forfeit) if it does not make a move within the time limit. You will be \nresponsible of keeping track of the time within your implementation.</p>\n\n<p>We will use a machine running Java 6 and your agent should use no more than \n1GB memory and a single thread.</p>\n\n<p>Time limit: 5 seconds per move</p>\n\n<p>Tournament format: Double round-robin \n(allowing players to take turns going first)</p>\n\n<p>We will then run the tournament as many times as we have time/resources for. \nThe hope is that learning agents will play differently as we \nrun more tournaments. The rankings will then be determined by the number of \nwins across all tournaments.</p>\n</body></html>\n", "id": 16662.0}