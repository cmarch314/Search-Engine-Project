{"text": "Search LoginPreferencesHelp GuideAbout Trac WikiTimelineRoadmapBrowse SourceView TicketsSearch Context Navigation BlameRevision Log source nomatic tags NomaticIM 5 buddy bots src twisted internet unix py View diff against View revision Visit trunk Last change on this file was 712 checked in by cbaker 7 years ago First draft of nomatic buddy bots oscar bot is functional if you give it good authentication credentials jabber bot is just an example from the web File size 9 8 KB Line 1 test case name twisted test test unix 23 Copyright c 2 1 2 4 Twisted Matrix Laboratories 4 See LICENSE for details 567 Various asynchronous TCP IP classes 89End users shouldn t use this module directly use the reactor APIs instead 1 11Maintainer U Itamar Shtull Trauring mailto twisted itamarst org 12 1314 System imports15import os stat socket16from errno import 17from zope interface import implements implementsOnly implementedBy1819if not hasattr socket AF UNIX 2 raise ImportError UNIX sockets not supported on this platform 2122 Twisted imports23from twisted internet import base tcp udp error interfaces protocol address defer24from twisted internet error import CannotListenError25from twisted python import lockfile log reflect failure262728class Server tcp Server 29 def init self sock protocol client server sessionno 3 tcp Server init self sock protocol client None server sessionno 3132 def getHost self 33 return address UNIXAddress self socket getsockname 3435 def getPeer self 36 return address UNIXAddress self hostname 373839class Port tcp Port 4 addressFamily socket AF UNIX41 socketType socket SOCK STREAM4243 transport Server44 lockFile None4546 def init self fileName factory backlog 5 mode 666 reactor None wantPID 47 tcp Port init self fileName factory backlog reactor reactor 48 self mode mode49 self wantPID wantPID5 51 def repr self 52 if hasattr self socket 53 return s on r self factory class self port 54 else 55 return s not listening self factory class 5657 def buildAddr self name 58 return address UNIXAddress name 596 def startListening self 61 Create and bind my socket and begin listening on it 6263 This is called on unserialization and must be called after creating a64 server to begin listening on the specified port 65 66 log msg s starting on r self factory class repr self port 67 if self wantPID 68 self lockFile lockfile FilesystemLock self port lock 69 if not self lockFile lock 7 raise CannotListenError None self port Cannot acquire lock 71 else 72 if not self lockFile clean 73 try 74 This is a best attempt at cleaning up75 left over unix sockets on the filesystem 76 If it fails there s not much else we can77 do The bind below will fail with an78 exception that actually propegates 79 if stat S ISSOCK os stat self port st mode 8 os remove self port 81 except 82 pass8384 self factory doStart 85 try 86 skt self createInternetSocket 87 skt bind self port 88 except socket error le 89 raise CannotListenError None self port le 9 else 91 Make the socket readable and writable to the world 92 try 93 os chmod self port self mode 94 except probably not a visible filesystem name95 pass96 skt listen self backlog 97 self connected True98 self socket skt99 self fileno self socket fileno1 self numberAccepts 1 1 1 self startReading 1 21 3 def connectionLost self reason 1 4 os unlink self port 1 5 if self lockFile is not None 1 6 self lockFile unlock 1 7 tcp Port connectionLost self reason 1 81 9 def getHost self 11 Returns a UNIXAddress 111112 This indicates the server s address 113 114 return address UNIXAddress self socket getsockname 115116117class Client tcp BaseClient 118 A client for Unix sockets 119 addressFamily socket AF UNIX12 socketType socket SOCK STREAM121122 def init self filename connector reactor None checkPID 123 self connector connector124 self realAddress self addr filename125 if checkPID and not lockfile isLocked filename lock 126 self finishInit None None error BadFileError filename reactor 127 self finishInit self doConnect self createInternetSocket 128 None reactor 12913 def getPeer self 131 return address UNIXAddress self addr 132133 def getHost self 134 return address UNIXAddress None 135136137class Connector base BaseConnector 138 def init self address factory timeout reactor checkPID 139 base BaseConnector init self factory timeout reactor 14 self address address141 self checkPID checkPID142143 def makeTransport self 144 return Client self address self self reactor self checkPID 145146 def getDestination self 147 return address UNIXAddress self address 14814915 class DatagramPort udp Port 151 Datagram UNIX port listening for packets 152153 implements interfaces IUNIXDatagramTransport 154155 addressFamily socket AF UNIX156157 def init self addr proto maxPacketSize 8192 mode 666 reactor None 158 Initialize with address to listen on 159 16 udp Port init self addr proto maxPacketSize maxPacketSize reactor reactor 161 self mode mode162163164 def repr self 165 if hasattr self socket 166 return s on r self protocol class self port 167 else 168 return s not listening self protocol class 16917 171 def bindSocket self 172 log msg s starting on s self protocol class repr self port 173 try 174 skt self createInternetSocket XXX haha misnamed method175 if self port 176 skt bind self port 177 except socket error le 178 raise error CannotListenError None self port le 179 if self port 18 try 181 os chmod self port self mode 182 except probably not a visible filesystem name183 pass184 self connected 1185 self socket skt186 self fileno self socket fileno187188 def write self datagram address 189 Write a datagram 19 try 191 return self socket sendto datagram address 192 except socket error se 193 no se args 194 if no EINTR 195 return self write datagram address 196 elif no EMSGSIZE 197 raise error MessageLengthError message too long 198 elif no EAGAIN 199 oh well drop the data The only difference from UDP2 is that UDP won t ever notice 2 1 TODO add TCP like buffering2 2 pass2 3 else 2 4 raise2 52 6 def connectionLost self reason None 2 7 Cleans up my socket 2 8 2 9 log msg Port s Closed repr self port 21 base BasePort connectionLost self reason 211 if hasattr self protocol 212 we won t have attribute in ConnectedPort in cases213 where there was an error in connection process214 self protocol doStop 215 self connected 216 self socket close 217 del self socket218 del self fileno219 if hasattr self d 22 self d callback None 221 del self d222223 def setLogStr self 224 self logstr reflect qual self protocol class UDP 225226 def getHost self 227 return address UNIXAddress self socket getsockname 22822923 class ConnectedDatagramPort DatagramPort 231 A connected datagram UNIX socket 232233 implementsOnly interfaces IUNIXDatagramConnectedTransport 234 implementedBy base BasePort 235236 def init self addr proto maxPacketSize 8192 mode 666 bindAddress None reactor None 237 assert isinstance proto protocol ConnectedDatagramProtocol 238 DatagramPort init self bindAddress proto maxPacketSize mode reactor 239 self remoteaddr addr24 241 def startListening self 242 try 243 self bindSocket 244 self socket connect self remoteaddr 245 self connectToProtocol 246 except 247 self connectionFailed failure Failure 248249 def connectionFailed self reason 25 self loseConnection 251 self protocol connectionFailed reason 252 del self protocol253254 def doRead self 255 Called when my socket is ready for reading 256 read 257 while read self maxThroughput 258 try 259 data addr self socket recvfrom self maxPacketSize 26 read len data 261 self protocol datagramReceived data 262 except socket error se 263 no se args 264 if no in EAGAIN EINTR EWOULDBLOCK 265 return266 if no ECONNREFUSED 267 self protocol connectionRefused 268 else 269 raise27 except 271 log deferr 272273 def write self data 274 Write a datagram 275 try 276 return self socket send data 277 except socket error se 278 no se args 279 if no EINTR 28 return self write data 281 elif no EMSGSIZE 282 raise error MessageLengthError message too long 283 elif no ECONNREFUSED 284 self protocol connectionRefused 285 elif no EAGAIN 286 oh well drop the data The only difference from UDP287 is that UDP won t ever notice 288 TODO add TCP like buffering289 pass29 else 291 raise292293 def getPeer self 294 return address UNIXAddress self remoteaddr Note See TracBrowser for help on using the repository browser Download in other formats Plain Text Original Format Powered by Trac 1 1 By Edgewall Software All content copyright 2 7 2 8 by LUCI http luci ics uci edu ", "_id": "http://djp3-pc2.ics.uci.edu/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/unix.py", "title": "\n      unix.py in nomatic/tags/nomaticim-0.0.5/buddy_bots/src/twisted/internet\n     \u2013 nomatic*im\n    ", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n  \n\n\n  <head>\n\t\t<title>\n      unix.py in nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet\n     \u2013 Nomatic*IM\n    </title><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><link rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search\" /><link rel=\"help\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/unix.py?format=txt\" type=\"text/plain\" title=\"Plain Text\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/unix.py\" type=\"application/x-python; charset=iso-8859-15\" title=\"Original Format\" /><link rel=\"start\" href=\"/LUCICodeRepository/nomaticIM/wiki\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/code.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/pygments/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/browser.css\" type=\"text/css\" /><link rel=\"shortcut icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link rel=\"icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link type=\"application/opensearchdescription+xml\" rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search/opensearch\" title=\"Search Nomatic*IM\" /><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/jquery.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/babel.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/messages/en_US.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/trac.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/search.js\"></script><script type=\"text/javascript\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/folding.js\"></script><script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\".trac-toggledeleted\").show().click(function() {\n                  $(this).siblings().find(\".trac-deleted\").toggle();\n                  return false;\n        }).click();\n        $(\"#jumploc input\").hide();\n        $(\"#jumploc select\").change(function () {\n          this.parentNode.parentNode.submit();\n        });\n          $('#preview table.code').enableCollapsibleColumns($('#preview table.code thead th.content'));\n      });\n    </script>\n\t</head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://luci.ics.uci.edu/#code\"><img src=\"http://luci.ics.uci.edu/blog/archives/LUCIhorzTight.jpg\" alt=\"LUCI Code Repository\" /></a>\n      </div>\n      <form id=\"search\" action=\"/LUCICodeRepository/nomaticIM/search\" method=\"get\">\n        <div>\n          <label for=\"proj-search\">Search:</label>\n          <input type=\"text\" id=\"proj-search\" name=\"q\" size=\"18\" value=\"\" />\n          <input type=\"submit\" value=\"Search\" />\n        </div>\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/login\">Login</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/prefs\">Preferences</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\">Help/Guide</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/wiki\">Wiki</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/timeline\">Timeline</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/roadmap\">Roadmap</a></li><li class=\"active\"><a href=\"/LUCICodeRepository/nomaticIM/browser\">Browse Source</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/report\">View Tickets</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/search\">Search</a></li>\n    </ul>\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/buddy_bots/twisted/internet/unix.py?annotate=blame\" title=\"Annotate each line with the last changed revision (this can be time consuming...)\">Blame</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/log/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/unix.py\">Revision Log</a></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"browser\">\n        <h1>\n          \n<a class=\"pathentry first\" href=\"/LUCICodeRepository/nomaticIM/browser?order=name\" title=\"Go to repository root\">source:</a>\n<a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic?order=name\" title=\"View nomatic\">nomatic</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags?order=name\" title=\"View tags\">tags</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5?order=name\" title=\"View NomaticIM-0.0.5\">NomaticIM-0.0.5</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots?order=name\" title=\"View buddy_bots\">buddy_bots</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src?order=name\" title=\"View src\">src</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted?order=name\" title=\"View twisted\">twisted</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet?order=name\" title=\"View internet\">internet</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/unix.py?order=name\" title=\"View unix.py\">unix.py</a>\n<br style=\"clear: both\" />\n\n        </h1>\n        <div id=\"diffrev\">\n          <form action=\"/LUCICodeRepository/nomaticIM/changeset\" method=\"get\">\n            <div>\n              <label title=\"Show the diff against a specific revision\">\n                View diff against: <input type=\"text\" name=\"old\" size=\"6\" />\n                <input type=\"hidden\" name=\"old_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/unix.py\" />\n                <input type=\"hidden\" name=\"new\" />\n                <input type=\"hidden\" name=\"new_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/unix.py\" />\n              </label>\n            </div>\n          </form>\n        </div>\n        <div id=\"jumprev\">\n          <form action=\"\" method=\"get\">\n            <div>\n              <label for=\"rev\">\n                View revision:</label>\n              <input type=\"text\" id=\"rev\" name=\"rev\" size=\"6\" />\n            </div>\n          </form>\n        </div>\n        <div id=\"jumploc\">\n          <form action=\"\" method=\"get\">\n            <div class=\"buttons\">\n              <label for=\"preselected\">Visit:</label>\n              <select id=\"preselected\" name=\"preselected\">\n                <option selected=\"selected\"></option>\n                <optgroup label=\"branches\">\n                  <option value=\"/LUCICodeRepository/nomaticIM/browser/trunk\">trunk</option>\n                </optgroup>\n              </select>\n              <input type=\"submit\" value=\"Go!\" title=\"Jump to the chosen preselected path\" />\n            </div>\n          </form>\n        </div>\n        <div class=\"trac-tags\">\n        </div>\n      <table id=\"info\" summary=\"Revision info\">\n        <tr>\n          <th>\n                <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/nomatic/trunk/buddy_bots/twisted/internet/unix.py\" title=\"View differences\">Last change</a>\n                  on this file was\n                  <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/\" title=\"View changeset 712\">712</a>,\n                  checked in by cbaker, <a class=\"timeline\" href=\"/LUCICodeRepository/nomaticIM/timeline?from=2008-02-16T08%3A16%3A53-08%3A00&amp;precision=second\" title=\"See timeline at Feb 16, 2008, 8:16:53 AM\">7 years ago</a>\n          </th>\n        </tr>\n        <tr>\n          <td class=\"message searchable\">\n              <p>\nFirst draft of nomatic buddy bots. oscar_bot is functional if you give it good authentication credentials, jabber_bot is just an example from the web <br />\n</p>\n          </td>\n        </tr>\n        <tr><td colspan=\"2\">\n            <strong>File size:</strong>\n            <span title=\"10014 bytes\">9.8 KB</span>\n          </td></tr>\n      </table>\n      <div id=\"preview\" class=\"searchable\">\n        \n  <table class=\"code\"><thead><tr><th class=\"lineno\" title=\"Line numbers\">Line</th><th class=\"content\">\u00a0</th></tr></thead><tbody><tr><th id=\"L1\"><a href=\"#L1\">1</a></th><td><span class=\"c\"># -*- test-case-name: twisted.test.test_unix -*-</span></td></tr><tr><th id=\"L2\"><a href=\"#L2\">2</a></th><td></td></tr><tr><th id=\"L3\"><a href=\"#L3\">3</a></th><td><span class=\"c\"># Copyright (c) 2001-2004 Twisted Matrix Laboratories.</span></td></tr><tr><th id=\"L4\"><a href=\"#L4\">4</a></th><td><span class=\"c\"># See LICENSE for details.</span></td></tr><tr><th id=\"L5\"><a href=\"#L5\">5</a></th><td></td></tr><tr><th id=\"L6\"><a href=\"#L6\">6</a></th><td></td></tr><tr><th id=\"L7\"><a href=\"#L7\">7</a></th><td><span class=\"sd\">\"\"\"Various asynchronous TCP/IP classes.</span></td></tr><tr><th id=\"L8\"><a href=\"#L8\">8</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L9\"><a href=\"#L9\">9</a></th><td><span class=\"sd\">End users shouldn't use this module directly - use the reactor APIs instead.</span></td></tr><tr><th id=\"L10\"><a href=\"#L10\">10</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L11\"><a href=\"#L11\">11</a></th><td><span class=\"sd\">Maintainer: U{Itamar Shtull-Trauring&lt;mailto:twisted@itamarst.org&gt;}</span></td></tr><tr><th id=\"L12\"><a href=\"#L12\">12</a></th><td><span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L13\"><a href=\"#L13\">13</a></th><td></td></tr><tr><th id=\"L14\"><a href=\"#L14\">14</a></th><td><span class=\"c\"># System imports</span></td></tr><tr><th id=\"L15\"><a href=\"#L15\">15</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">os</span><span class=\"o\">,</span>\u00a0<span class=\"nn\">stat</span><span class=\"o\">,</span>\u00a0<span class=\"nn\">socket</span></td></tr><tr><th id=\"L16\"><a href=\"#L16\">16</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">errno</span>\u00a0<span class=\"kn\">import</span>\u00a0<span class=\"o\">*</span></td></tr><tr><th id=\"L17\"><a href=\"#L17\">17</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">zope.interface</span>\u00a0<span class=\"kn\">import</span>\u00a0implements<span class=\"p\">,</span>\u00a0implementsOnly<span class=\"p\">,</span>\u00a0implementedBy</td></tr><tr><th id=\"L18\"><a href=\"#L18\">18</a></th><td></td></tr><tr><th id=\"L19\"><a href=\"#L19\">19</a></th><td><span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"nb\">hasattr</span><span class=\"p\">(</span>socket<span class=\"p\">,</span>\u00a0<span class=\"s\">'AF_UNIX'</span><span class=\"p\">):</span></td></tr><tr><th id=\"L20\"><a href=\"#L20\">20</a></th><td>\u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">ImportError</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"UNIX sockets not supported on this platform\"</span></td></tr><tr><th id=\"L21\"><a href=\"#L21\">21</a></th><td></td></tr><tr><th id=\"L22\"><a href=\"#L22\">22</a></th><td><span class=\"c\"># Twisted imports</span></td></tr><tr><th id=\"L23\"><a href=\"#L23\">23</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet</span>\u00a0<span class=\"kn\">import</span>\u00a0base<span class=\"p\">,</span>\u00a0tcp<span class=\"p\">,</span>\u00a0udp<span class=\"p\">,</span>\u00a0error<span class=\"p\">,</span>\u00a0interfaces<span class=\"p\">,</span>\u00a0protocol<span class=\"p\">,</span>\u00a0address<span class=\"p\">,</span>\u00a0defer</td></tr><tr><th id=\"L24\"><a href=\"#L24\">24</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet.error</span>\u00a0<span class=\"kn\">import</span>\u00a0CannotListenError</td></tr><tr><th id=\"L25\"><a href=\"#L25\">25</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.python</span>\u00a0<span class=\"kn\">import</span>\u00a0lockfile<span class=\"p\">,</span>\u00a0log<span class=\"p\">,</span>\u00a0reflect<span class=\"p\">,</span>\u00a0failure</td></tr><tr><th id=\"L26\"><a href=\"#L26\">26</a></th><td></td></tr><tr><th id=\"L27\"><a href=\"#L27\">27</a></th><td></td></tr><tr><th id=\"L28\"><a href=\"#L28\">28</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">Server</span><span class=\"p\">(</span>tcp<span class=\"o\">.</span>Server<span class=\"p\">):</span></td></tr><tr><th id=\"L29\"><a href=\"#L29\">29</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0sock<span class=\"p\">,</span>\u00a0protocol<span class=\"p\">,</span>\u00a0client<span class=\"p\">,</span>\u00a0server<span class=\"p\">,</span>\u00a0sessionno<span class=\"p\">):</span></td></tr><tr><th id=\"L30\"><a href=\"#L30\">30</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 tcp<span class=\"o\">.</span>Server<span class=\"o\">.</span>__init__<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0sock<span class=\"p\">,</span>\u00a0protocol<span class=\"p\">,</span>\u00a0<span class=\"p\">(</span>client<span class=\"p\">,</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">),</span>\u00a0server<span class=\"p\">,</span>\u00a0sessionno<span class=\"p\">)</span></td></tr><tr><th id=\"L31\"><a href=\"#L31\">31</a></th><td></td></tr><tr><th id=\"L32\"><a href=\"#L32\">32</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getHost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L33\"><a href=\"#L33\">33</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0address<span class=\"o\">.</span>UNIXAddress<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>getsockname<span class=\"p\">())</span></td></tr><tr><th id=\"L34\"><a href=\"#L34\">34</a></th><td></td></tr><tr><th id=\"L35\"><a href=\"#L35\">35</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getPeer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L36\"><a href=\"#L36\">36</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0address<span class=\"o\">.</span>UNIXAddress<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>hostname<span class=\"p\">)</span></td></tr><tr><th id=\"L37\"><a href=\"#L37\">37</a></th><td></td></tr><tr><th id=\"L38\"><a href=\"#L38\">38</a></th><td></td></tr><tr><th id=\"L39\"><a href=\"#L39\">39</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">Port</span><span class=\"p\">(</span>tcp<span class=\"o\">.</span>Port<span class=\"p\">):</span></td></tr><tr><th id=\"L40\"><a href=\"#L40\">40</a></th><td>\u00a0 \u00a0 addressFamily <span class=\"o\">=</span>\u00a0socket<span class=\"o\">.</span>AF_UNIX</td></tr><tr><th id=\"L41\"><a href=\"#L41\">41</a></th><td>\u00a0 \u00a0 socketType <span class=\"o\">=</span>\u00a0socket<span class=\"o\">.</span>SOCK_STREAM</td></tr><tr><th id=\"L42\"><a href=\"#L42\">42</a></th><td></td></tr><tr><th id=\"L43\"><a href=\"#L43\">43</a></th><td>\u00a0 \u00a0 transport <span class=\"o\">=</span>\u00a0Server</td></tr><tr><th id=\"L44\"><a href=\"#L44\">44</a></th><td>\u00a0 \u00a0 lockFile <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L45\"><a href=\"#L45\">45</a></th><td></td></tr><tr><th id=\"L46\"><a href=\"#L46\">46</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0fileName<span class=\"p\">,</span>\u00a0factory<span class=\"p\">,</span>\u00a0backlog<span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span>\u00a0mode<span class=\"o\">=</span><span class=\"mo\">0666</span><span class=\"p\">,</span>\u00a0reactor<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\u00a0wantPID <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span><span class=\"p\">):</span></td></tr><tr><th id=\"L47\"><a href=\"#L47\">47</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 tcp<span class=\"o\">.</span>Port<span class=\"o\">.</span>__init__<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0fileName<span class=\"p\">,</span>\u00a0factory<span class=\"p\">,</span>\u00a0backlog<span class=\"p\">,</span>\u00a0reactor<span class=\"o\">=</span>reactor<span class=\"p\">)</span></td></tr><tr><th id=\"L48\"><a href=\"#L48\">48</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>mode <span class=\"o\">=</span>\u00a0mode</td></tr><tr><th id=\"L49\"><a href=\"#L49\">49</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>wantPID <span class=\"o\">=</span>\u00a0wantPID</td></tr><tr><th id=\"L50\"><a href=\"#L50\">50</a></th><td></td></tr><tr><th id=\"L51\"><a href=\"#L51\">51</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L52\"><a href=\"#L52\">52</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'socket'</span><span class=\"p\">):</span></td></tr><tr><th id=\"L53\"><a href=\"#L53\">53</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"s\">'&lt;</span><span class=\"si\">%s</span><span class=\"s\">\u00a0on </span><span class=\"si\">%r</span><span class=\"s\">&gt;'</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>factory<span class=\"o\">.</span>__class__<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>port<span class=\"p\">)</span></td></tr><tr><th id=\"L54\"><a href=\"#L54\">54</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L55\"><a href=\"#L55\">55</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"s\">'&lt;</span><span class=\"si\">%s</span><span class=\"s\">\u00a0(not listening)&gt;'</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>factory<span class=\"o\">.</span>__class__<span class=\"p\">,)</span></td></tr><tr><th id=\"L56\"><a href=\"#L56\">56</a></th><td></td></tr><tr><th id=\"L57\"><a href=\"#L57\">57</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_buildAddr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0name<span class=\"p\">):</span></td></tr><tr><th id=\"L58\"><a href=\"#L58\">58</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0address<span class=\"o\">.</span>UNIXAddress<span class=\"p\">(</span>name<span class=\"p\">)</span></td></tr><tr><th id=\"L59\"><a href=\"#L59\">59</a></th><td></td></tr><tr><th id=\"L60\"><a href=\"#L60\">60</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">startListening</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L61\"><a href=\"#L61\">61</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Create and bind my socket, and begin listening on it.</span></td></tr><tr><th id=\"L62\"><a href=\"#L62\">62</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L63\"><a href=\"#L63\">63</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This is called on unserialization, and must be called after creating a</span></td></tr><tr><th id=\"L64\"><a href=\"#L64\">64</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 server to begin listening on the specified port.</span></td></tr><tr><th id=\"L65\"><a href=\"#L65\">65</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L66\"><a href=\"#L66\">66</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 log<span class=\"o\">.</span>msg<span class=\"p\">(</span><span class=\"s\">\"</span><span class=\"si\">%s</span><span class=\"s\">\u00a0starting on </span><span class=\"si\">%r</span><span class=\"s\">\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>factory<span class=\"o\">.</span>__class__<span class=\"p\">,</span>\u00a0<span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>port<span class=\"p\">)))</span></td></tr><tr><th id=\"L67\"><a href=\"#L67\">67</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>wantPID<span class=\"p\">:</span></td></tr><tr><th id=\"L68\"><a href=\"#L68\">68</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>lockFile <span class=\"o\">=</span>\u00a0lockfile<span class=\"o\">.</span>FilesystemLock<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>port <span class=\"o\">+</span>\u00a0<span class=\"s\">\".lock\"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L69\"><a href=\"#L69\">69</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>lockFile<span class=\"o\">.</span>lock<span class=\"p\">():</span></td></tr><tr><th id=\"L70\"><a href=\"#L70\">70</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0CannotListenError<span class=\"p\">,</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">None</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>port<span class=\"p\">,</span>\u00a0<span class=\"s\">\"Cannot acquire lock\"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L71\"><a href=\"#L71\">71</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L72\"><a href=\"#L72\">72</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>lockFile<span class=\"o\">.</span>clean<span class=\"p\">:</span></td></tr><tr><th id=\"L73\"><a href=\"#L73\">73</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L74\"><a href=\"#L74\">74</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># This is a best-attempt at cleaning up</span></td></tr><tr><th id=\"L75\"><a href=\"#L75\">75</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># left-over unix sockets on the filesystem.</span></td></tr><tr><th id=\"L76\"><a href=\"#L76\">76</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># If it fails, there's not much else we can</span></td></tr><tr><th id=\"L77\"><a href=\"#L77\">77</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># do.\u00a0 The bind() below will fail with an</span></td></tr><tr><th id=\"L78\"><a href=\"#L78\">78</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># exception that actually propegates.</span></td></tr><tr><th id=\"L79\"><a href=\"#L79\">79</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0stat<span class=\"o\">.</span>S_ISSOCK<span class=\"p\">(</span>os<span class=\"o\">.</span>stat<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>port<span class=\"p\">)</span><span class=\"o\">.</span>st_mode<span class=\"p\">):</span></td></tr><tr><th id=\"L80\"><a href=\"#L80\">80</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>remove<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>port<span class=\"p\">)</span></td></tr><tr><th id=\"L81\"><a href=\"#L81\">81</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span><span class=\"p\">:</span></td></tr><tr><th id=\"L82\"><a href=\"#L82\">82</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L83\"><a href=\"#L83\">83</a></th><td></td></tr><tr><th id=\"L84\"><a href=\"#L84\">84</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>factory<span class=\"o\">.</span>doStart<span class=\"p\">()</span></td></tr><tr><th id=\"L85\"><a href=\"#L85\">85</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L86\"><a href=\"#L86\">86</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 skt <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>createInternetSocket<span class=\"p\">()</span></td></tr><tr><th id=\"L87\"><a href=\"#L87\">87</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 skt<span class=\"o\">.</span>bind<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>port<span class=\"p\">)</span></td></tr><tr><th id=\"L88\"><a href=\"#L88\">88</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0socket<span class=\"o\">.</span>error<span class=\"p\">,</span>\u00a0le<span class=\"p\">:</span></td></tr><tr><th id=\"L89\"><a href=\"#L89\">89</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0CannotListenError<span class=\"p\">,</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">None</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>port<span class=\"p\">,</span>\u00a0le<span class=\"p\">)</span></td></tr><tr><th id=\"L90\"><a href=\"#L90\">90</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L91\"><a href=\"#L91\">91</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Make the socket readable and writable to the world.</span></td></tr><tr><th id=\"L92\"><a href=\"#L92\">92</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L93\"><a href=\"#L93\">93</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>chmod<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>port<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>mode<span class=\"p\">)</span></td></tr><tr><th id=\"L94\"><a href=\"#L94\">94</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span><span class=\"p\">:</span>\u00a0<span class=\"c\"># probably not a visible filesystem name</span></td></tr><tr><th id=\"L95\"><a href=\"#L95\">95</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L96\"><a href=\"#L96\">96</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 skt<span class=\"o\">.</span>listen<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>backlog<span class=\"p\">)</span></td></tr><tr><th id=\"L97\"><a href=\"#L97\">97</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>connected <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L98\"><a href=\"#L98\">98</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socket <span class=\"o\">=</span>\u00a0skt</td></tr><tr><th id=\"L99\"><a href=\"#L99\">99</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>fileno <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>fileno</td></tr><tr><th id=\"L100\"><a href=\"#L100\">100</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>numberAccepts <span class=\"o\">=</span>\u00a0<span class=\"mi\">100</span></td></tr><tr><th id=\"L101\"><a href=\"#L101\">101</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>startReading<span class=\"p\">()</span></td></tr><tr><th id=\"L102\"><a href=\"#L102\">102</a></th><td></td></tr><tr><th id=\"L103\"><a href=\"#L103\">103</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectionLost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reason<span class=\"p\">):</span></td></tr><tr><th id=\"L104\"><a href=\"#L104\">104</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>unlink<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>port<span class=\"p\">)</span></td></tr><tr><th id=\"L105\"><a href=\"#L105\">105</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>lockFile <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L106\"><a href=\"#L106\">106</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>lockFile<span class=\"o\">.</span>unlock<span class=\"p\">()</span></td></tr><tr><th id=\"L107\"><a href=\"#L107\">107</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 tcp<span class=\"o\">.</span>Port<span class=\"o\">.</span>connectionLost<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reason<span class=\"p\">)</span></td></tr><tr><th id=\"L108\"><a href=\"#L108\">108</a></th><td></td></tr><tr><th id=\"L109\"><a href=\"#L109\">109</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getHost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L110\"><a href=\"#L110\">110</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Returns a UNIXAddress.</span></td></tr><tr><th id=\"L111\"><a href=\"#L111\">111</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L112\"><a href=\"#L112\">112</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This indicates the server's address.</span></td></tr><tr><th id=\"L113\"><a href=\"#L113\">113</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L114\"><a href=\"#L114\">114</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0address<span class=\"o\">.</span>UNIXAddress<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>getsockname<span class=\"p\">())</span></td></tr><tr><th id=\"L115\"><a href=\"#L115\">115</a></th><td></td></tr><tr><th id=\"L116\"><a href=\"#L116\">116</a></th><td></td></tr><tr><th id=\"L117\"><a href=\"#L117\">117</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">Client</span><span class=\"p\">(</span>tcp<span class=\"o\">.</span>BaseClient<span class=\"p\">):</span></td></tr><tr><th id=\"L118\"><a href=\"#L118\">118</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"A client for Unix sockets.\"\"\"</span></td></tr><tr><th id=\"L119\"><a href=\"#L119\">119</a></th><td>\u00a0 \u00a0 addressFamily <span class=\"o\">=</span>\u00a0socket<span class=\"o\">.</span>AF_UNIX</td></tr><tr><th id=\"L120\"><a href=\"#L120\">120</a></th><td>\u00a0 \u00a0 socketType <span class=\"o\">=</span>\u00a0socket<span class=\"o\">.</span>SOCK_STREAM</td></tr><tr><th id=\"L121\"><a href=\"#L121\">121</a></th><td></td></tr><tr><th id=\"L122\"><a href=\"#L122\">122</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0filename<span class=\"p\">,</span>\u00a0connector<span class=\"p\">,</span>\u00a0reactor<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\u00a0checkPID <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span><span class=\"p\">):</span></td></tr><tr><th id=\"L123\"><a href=\"#L123\">123</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>connector <span class=\"o\">=</span>\u00a0connector</td></tr><tr><th id=\"L124\"><a href=\"#L124\">124</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>realAddress <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>addr <span class=\"o\">=</span>\u00a0filename</td></tr><tr><th id=\"L125\"><a href=\"#L125\">125</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0checkPID <span class=\"ow\">and</span>\u00a0<span class=\"ow\">not</span>\u00a0lockfile<span class=\"o\">.</span>isLocked<span class=\"p\">(</span>filename <span class=\"o\">+</span>\u00a0<span class=\"s\">\".lock\"</span><span class=\"p\">):</span></td></tr><tr><th id=\"L126\"><a href=\"#L126\">126</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_finishInit<span class=\"p\">(</span><span class=\"bp\">None</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">,</span>\u00a0error<span class=\"o\">.</span>BadFileError<span class=\"p\">(</span>filename<span class=\"p\">),</span>\u00a0reactor<span class=\"p\">)</span></td></tr><tr><th id=\"L127\"><a href=\"#L127\">127</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_finishInit<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>doConnect<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>createInternetSocket<span class=\"p\">(),</span></td></tr><tr><th id=\"L128\"><a href=\"#L128\">128</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"bp\">None</span><span class=\"p\">,</span>\u00a0reactor<span class=\"p\">)</span></td></tr><tr><th id=\"L129\"><a href=\"#L129\">129</a></th><td></td></tr><tr><th id=\"L130\"><a href=\"#L130\">130</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getPeer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L131\"><a href=\"#L131\">131</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0address<span class=\"o\">.</span>UNIXAddress<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>addr<span class=\"p\">)</span></td></tr><tr><th id=\"L132\"><a href=\"#L132\">132</a></th><td></td></tr><tr><th id=\"L133\"><a href=\"#L133\">133</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getHost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L134\"><a href=\"#L134\">134</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0address<span class=\"o\">.</span>UNIXAddress<span class=\"p\">(</span><span class=\"bp\">None</span><span class=\"p\">)</span></td></tr><tr><th id=\"L135\"><a href=\"#L135\">135</a></th><td></td></tr><tr><th id=\"L136\"><a href=\"#L136\">136</a></th><td></td></tr><tr><th id=\"L137\"><a href=\"#L137\">137</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">Connector</span><span class=\"p\">(</span>base<span class=\"o\">.</span>BaseConnector<span class=\"p\">):</span></td></tr><tr><th id=\"L138\"><a href=\"#L138\">138</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0address<span class=\"p\">,</span>\u00a0factory<span class=\"p\">,</span>\u00a0timeout<span class=\"p\">,</span>\u00a0reactor<span class=\"p\">,</span>\u00a0checkPID<span class=\"p\">):</span></td></tr><tr><th id=\"L139\"><a href=\"#L139\">139</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 base<span class=\"o\">.</span>BaseConnector<span class=\"o\">.</span>__init__<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0factory<span class=\"p\">,</span>\u00a0timeout<span class=\"p\">,</span>\u00a0reactor<span class=\"p\">)</span></td></tr><tr><th id=\"L140\"><a href=\"#L140\">140</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>address <span class=\"o\">=</span>\u00a0address</td></tr><tr><th id=\"L141\"><a href=\"#L141\">141</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>checkPID <span class=\"o\">=</span>\u00a0checkPID</td></tr><tr><th id=\"L142\"><a href=\"#L142\">142</a></th><td></td></tr><tr><th id=\"L143\"><a href=\"#L143\">143</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_makeTransport</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L144\"><a href=\"#L144\">144</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0Client<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>address<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>reactor<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>checkPID<span class=\"p\">)</span></td></tr><tr><th id=\"L145\"><a href=\"#L145\">145</a></th><td></td></tr><tr><th id=\"L146\"><a href=\"#L146\">146</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getDestination</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L147\"><a href=\"#L147\">147</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0address<span class=\"o\">.</span>UNIXAddress<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>address<span class=\"p\">)</span></td></tr><tr><th id=\"L148\"><a href=\"#L148\">148</a></th><td></td></tr><tr><th id=\"L149\"><a href=\"#L149\">149</a></th><td></td></tr><tr><th id=\"L150\"><a href=\"#L150\">150</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">DatagramPort</span><span class=\"p\">(</span>udp<span class=\"o\">.</span>Port<span class=\"p\">):</span></td></tr><tr><th id=\"L151\"><a href=\"#L151\">151</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Datagram UNIX port, listening for packets.\"\"\"</span></td></tr><tr><th id=\"L152\"><a href=\"#L152\">152</a></th><td></td></tr><tr><th id=\"L153\"><a href=\"#L153\">153</a></th><td>\u00a0 \u00a0 implements<span class=\"p\">(</span>interfaces<span class=\"o\">.</span>IUNIXDatagramTransport<span class=\"p\">)</span></td></tr><tr><th id=\"L154\"><a href=\"#L154\">154</a></th><td></td></tr><tr><th id=\"L155\"><a href=\"#L155\">155</a></th><td>\u00a0 \u00a0 addressFamily <span class=\"o\">=</span>\u00a0socket<span class=\"o\">.</span>AF_UNIX</td></tr><tr><th id=\"L156\"><a href=\"#L156\">156</a></th><td></td></tr><tr><th id=\"L157\"><a href=\"#L157\">157</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0addr<span class=\"p\">,</span>\u00a0proto<span class=\"p\">,</span>\u00a0maxPacketSize<span class=\"o\">=</span><span class=\"mi\">8192</span><span class=\"p\">,</span>\u00a0mode<span class=\"o\">=</span><span class=\"mo\">0666</span><span class=\"p\">,</span>\u00a0reactor<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L158\"><a href=\"#L158\">158</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Initialize with address to listen on.</span></td></tr><tr><th id=\"L159\"><a href=\"#L159\">159</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L160\"><a href=\"#L160\">160</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 udp<span class=\"o\">.</span>Port<span class=\"o\">.</span>__init__<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0addr<span class=\"p\">,</span>\u00a0proto<span class=\"p\">,</span>\u00a0maxPacketSize<span class=\"o\">=</span>maxPacketSize<span class=\"p\">,</span>\u00a0reactor<span class=\"o\">=</span>reactor<span class=\"p\">)</span></td></tr><tr><th id=\"L161\"><a href=\"#L161\">161</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>mode <span class=\"o\">=</span>\u00a0mode</td></tr><tr><th id=\"L162\"><a href=\"#L162\">162</a></th><td></td></tr><tr><th id=\"L163\"><a href=\"#L163\">163</a></th><td></td></tr><tr><th id=\"L164\"><a href=\"#L164\">164</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L165\"><a href=\"#L165\">165</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'socket'</span><span class=\"p\">):</span></td></tr><tr><th id=\"L166\"><a href=\"#L166\">166</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"s\">'&lt;</span><span class=\"si\">%s</span><span class=\"s\">\u00a0on </span><span class=\"si\">%r</span><span class=\"s\">&gt;'</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>protocol<span class=\"o\">.</span>__class__<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>port<span class=\"p\">)</span></td></tr><tr><th id=\"L167\"><a href=\"#L167\">167</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L168\"><a href=\"#L168\">168</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"s\">'&lt;</span><span class=\"si\">%s</span><span class=\"s\">\u00a0(not listening)&gt;'</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>protocol<span class=\"o\">.</span>__class__<span class=\"p\">,)</span></td></tr><tr><th id=\"L169\"><a href=\"#L169\">169</a></th><td></td></tr><tr><th id=\"L170\"><a href=\"#L170\">170</a></th><td></td></tr><tr><th id=\"L171\"><a href=\"#L171\">171</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_bindSocket</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L172\"><a href=\"#L172\">172</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 log<span class=\"o\">.</span>msg<span class=\"p\">(</span><span class=\"s\">\"</span><span class=\"si\">%s</span><span class=\"s\">\u00a0starting on </span><span class=\"si\">%s</span><span class=\"s\">\"</span><span class=\"o\">%</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>protocol<span class=\"o\">.</span>__class__<span class=\"p\">,</span>\u00a0<span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>port<span class=\"p\">)))</span></td></tr><tr><th id=\"L173\"><a href=\"#L173\">173</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L174\"><a href=\"#L174\">174</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 skt <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>createInternetSocket<span class=\"p\">()</span>\u00a0<span class=\"c\"># XXX: haha misnamed method</span></td></tr><tr><th id=\"L175\"><a href=\"#L175\">175</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>port<span class=\"p\">:</span></td></tr><tr><th id=\"L176\"><a href=\"#L176\">176</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 skt<span class=\"o\">.</span>bind<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>port<span class=\"p\">)</span></td></tr><tr><th id=\"L177\"><a href=\"#L177\">177</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0socket<span class=\"o\">.</span>error<span class=\"p\">,</span>\u00a0le<span class=\"p\">:</span></td></tr><tr><th id=\"L178\"><a href=\"#L178\">178</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0error<span class=\"o\">.</span>CannotListenError<span class=\"p\">,</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">None</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>port<span class=\"p\">,</span>\u00a0le<span class=\"p\">)</span></td></tr><tr><th id=\"L179\"><a href=\"#L179\">179</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>port<span class=\"p\">:</span></td></tr><tr><th id=\"L180\"><a href=\"#L180\">180</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L181\"><a href=\"#L181\">181</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>chmod<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>port<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>mode<span class=\"p\">)</span></td></tr><tr><th id=\"L182\"><a href=\"#L182\">182</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span><span class=\"p\">:</span>\u00a0<span class=\"c\"># probably not a visible filesystem name</span></td></tr><tr><th id=\"L183\"><a href=\"#L183\">183</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L184\"><a href=\"#L184\">184</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>connected <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L185\"><a href=\"#L185\">185</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socket <span class=\"o\">=</span>\u00a0skt</td></tr><tr><th id=\"L186\"><a href=\"#L186\">186</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>fileno <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>fileno</td></tr><tr><th id=\"L187\"><a href=\"#L187\">187</a></th><td></td></tr><tr><th id=\"L188\"><a href=\"#L188\">188</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">write</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0datagram<span class=\"p\">,</span>\u00a0address<span class=\"p\">):</span></td></tr><tr><th id=\"L189\"><a href=\"#L189\">189</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Write a datagram.\"\"\"</span></td></tr><tr><th id=\"L190\"><a href=\"#L190\">190</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L191\"><a href=\"#L191\">191</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>sendto<span class=\"p\">(</span>datagram<span class=\"p\">,</span>\u00a0address<span class=\"p\">)</span></td></tr><tr><th id=\"L192\"><a href=\"#L192\">192</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0socket<span class=\"o\">.</span>error<span class=\"p\">,</span>\u00a0se<span class=\"p\">:</span></td></tr><tr><th id=\"L193\"><a href=\"#L193\">193</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 no <span class=\"o\">=</span>\u00a0se<span class=\"o\">.</span>args<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span></td></tr><tr><th id=\"L194\"><a href=\"#L194\">194</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0no <span class=\"o\">==</span>\u00a0EINTR<span class=\"p\">:</span></td></tr><tr><th id=\"L195\"><a href=\"#L195\">195</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>write<span class=\"p\">(</span>datagram<span class=\"p\">,</span>\u00a0address<span class=\"p\">)</span></td></tr><tr><th id=\"L196\"><a href=\"#L196\">196</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0no <span class=\"o\">==</span>\u00a0EMSGSIZE<span class=\"p\">:</span></td></tr><tr><th id=\"L197\"><a href=\"#L197\">197</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0error<span class=\"o\">.</span>MessageLengthError<span class=\"p\">,</span>\u00a0<span class=\"s\">\"message too long\"</span></td></tr><tr><th id=\"L198\"><a href=\"#L198\">198</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0no <span class=\"o\">==</span>\u00a0EAGAIN<span class=\"p\">:</span></td></tr><tr><th id=\"L199\"><a href=\"#L199\">199</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># oh, well, drop the data. The only difference from UDP</span></td></tr><tr><th id=\"L200\"><a href=\"#L200\">200</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># is that UDP won't ever notice.</span></td></tr><tr><th id=\"L201\"><a href=\"#L201\">201</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># TODO: add TCP-like buffering</span></td></tr><tr><th id=\"L202\"><a href=\"#L202\">202</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L203\"><a href=\"#L203\">203</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L204\"><a href=\"#L204\">204</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span></td></tr><tr><th id=\"L205\"><a href=\"#L205\">205</a></th><td></td></tr><tr><th id=\"L206\"><a href=\"#L206\">206</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectionLost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reason<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L207\"><a href=\"#L207\">207</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Cleans up my socket.</span></td></tr><tr><th id=\"L208\"><a href=\"#L208\">208</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L209\"><a href=\"#L209\">209</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 log<span class=\"o\">.</span>msg<span class=\"p\">(</span><span class=\"s\">'(Port </span><span class=\"si\">%s</span><span class=\"s\">\u00a0Closed)'</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>port<span class=\"p\">))</span></td></tr><tr><th id=\"L210\"><a href=\"#L210\">210</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 base<span class=\"o\">.</span>BasePort<span class=\"o\">.</span>connectionLost<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reason<span class=\"p\">)</span></td></tr><tr><th id=\"L211\"><a href=\"#L211\">211</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"protocol\"</span><span class=\"p\">):</span></td></tr><tr><th id=\"L212\"><a href=\"#L212\">212</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># we won't have attribute in ConnectedPort, in cases</span></td></tr><tr><th id=\"L213\"><a href=\"#L213\">213</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># where there was an error in connection process</span></td></tr><tr><th id=\"L214\"><a href=\"#L214\">214</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>protocol<span class=\"o\">.</span>doStop<span class=\"p\">()</span></td></tr><tr><th id=\"L215\"><a href=\"#L215\">215</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>connected <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L216\"><a href=\"#L216\">216</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>close<span class=\"p\">()</span></td></tr><tr><th id=\"L217\"><a href=\"#L217\">217</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>socket</td></tr><tr><th id=\"L218\"><a href=\"#L218\">218</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>fileno</td></tr><tr><th id=\"L219\"><a href=\"#L219\">219</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"d\"</span><span class=\"p\">):</span></td></tr><tr><th id=\"L220\"><a href=\"#L220\">220</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>d<span class=\"o\">.</span>callback<span class=\"p\">(</span><span class=\"bp\">None</span><span class=\"p\">)</span></td></tr><tr><th id=\"L221\"><a href=\"#L221\">221</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>d</td></tr><tr><th id=\"L222\"><a href=\"#L222\">222</a></th><td></td></tr><tr><th id=\"L223\"><a href=\"#L223\">223</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">setLogStr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L224\"><a href=\"#L224\">224</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>logstr <span class=\"o\">=</span>\u00a0reflect<span class=\"o\">.</span>qual<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>protocol<span class=\"o\">.</span>__class__<span class=\"p\">)</span>\u00a0<span class=\"o\">+</span>\u00a0<span class=\"s\">\" (UDP)\"</span></td></tr><tr><th id=\"L225\"><a href=\"#L225\">225</a></th><td></td></tr><tr><th id=\"L226\"><a href=\"#L226\">226</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getHost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L227\"><a href=\"#L227\">227</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0address<span class=\"o\">.</span>UNIXAddress<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>getsockname<span class=\"p\">())</span></td></tr><tr><th id=\"L228\"><a href=\"#L228\">228</a></th><td></td></tr><tr><th id=\"L229\"><a href=\"#L229\">229</a></th><td></td></tr><tr><th id=\"L230\"><a href=\"#L230\">230</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">ConnectedDatagramPort</span><span class=\"p\">(</span>DatagramPort<span class=\"p\">):</span></td></tr><tr><th id=\"L231\"><a href=\"#L231\">231</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"A connected datagram UNIX socket.\"\"\"</span></td></tr><tr><th id=\"L232\"><a href=\"#L232\">232</a></th><td></td></tr><tr><th id=\"L233\"><a href=\"#L233\">233</a></th><td>\u00a0 \u00a0 implementsOnly<span class=\"p\">(</span>interfaces<span class=\"o\">.</span>IUNIXDatagramConnectedTransport<span class=\"p\">,</span></td></tr><tr><th id=\"L234\"><a href=\"#L234\">234</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"o\">*</span><span class=\"p\">(</span>implementedBy<span class=\"p\">(</span>base<span class=\"o\">.</span>BasePort<span class=\"p\">)))</span></td></tr><tr><th id=\"L235\"><a href=\"#L235\">235</a></th><td></td></tr><tr><th id=\"L236\"><a href=\"#L236\">236</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0addr<span class=\"p\">,</span>\u00a0proto<span class=\"p\">,</span>\u00a0maxPacketSize<span class=\"o\">=</span><span class=\"mi\">8192</span><span class=\"p\">,</span>\u00a0mode<span class=\"o\">=</span><span class=\"mo\">0666</span><span class=\"p\">,</span>\u00a0bindAddress<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\u00a0reactor<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L237\"><a href=\"#L237\">237</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">assert</span>\u00a0<span class=\"nb\">isinstance</span><span class=\"p\">(</span>proto<span class=\"p\">,</span>\u00a0protocol<span class=\"o\">.</span>ConnectedDatagramProtocol<span class=\"p\">)</span></td></tr><tr><th id=\"L238\"><a href=\"#L238\">238</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 DatagramPort<span class=\"o\">.</span>__init__<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0bindAddress<span class=\"p\">,</span>\u00a0proto<span class=\"p\">,</span>\u00a0maxPacketSize<span class=\"p\">,</span>\u00a0mode<span class=\"p\">,</span>\u00a0reactor<span class=\"p\">)</span></td></tr><tr><th id=\"L239\"><a href=\"#L239\">239</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>remoteaddr <span class=\"o\">=</span>\u00a0addr</td></tr><tr><th id=\"L240\"><a href=\"#L240\">240</a></th><td></td></tr><tr><th id=\"L241\"><a href=\"#L241\">241</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">startListening</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L242\"><a href=\"#L242\">242</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L243\"><a href=\"#L243\">243</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_bindSocket<span class=\"p\">()</span></td></tr><tr><th id=\"L244\"><a href=\"#L244\">244</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>connect<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>remoteaddr<span class=\"p\">)</span></td></tr><tr><th id=\"L245\"><a href=\"#L245\">245</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_connectToProtocol<span class=\"p\">()</span></td></tr><tr><th id=\"L246\"><a href=\"#L246\">246</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span><span class=\"p\">:</span></td></tr><tr><th id=\"L247\"><a href=\"#L247\">247</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>connectionFailed<span class=\"p\">(</span>failure<span class=\"o\">.</span>Failure<span class=\"p\">())</span></td></tr><tr><th id=\"L248\"><a href=\"#L248\">248</a></th><td></td></tr><tr><th id=\"L249\"><a href=\"#L249\">249</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectionFailed</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reason<span class=\"p\">):</span></td></tr><tr><th id=\"L250\"><a href=\"#L250\">250</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>loseConnection<span class=\"p\">()</span></td></tr><tr><th id=\"L251\"><a href=\"#L251\">251</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>protocol<span class=\"o\">.</span>connectionFailed<span class=\"p\">(</span>reason<span class=\"p\">)</span></td></tr><tr><th id=\"L252\"><a href=\"#L252\">252</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>protocol</td></tr><tr><th id=\"L253\"><a href=\"#L253\">253</a></th><td></td></tr><tr><th id=\"L254\"><a href=\"#L254\">254</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">doRead</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L255\"><a href=\"#L255\">255</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Called when my socket is ready for reading.\"\"\"</span></td></tr><tr><th id=\"L256\"><a href=\"#L256\">256</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 read <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L257\"><a href=\"#L257\">257</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">while</span>\u00a0read <span class=\"o\">&lt;</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>maxThroughput<span class=\"p\">:</span></td></tr><tr><th id=\"L258\"><a href=\"#L258\">258</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L259\"><a href=\"#L259\">259</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 data<span class=\"p\">,</span>\u00a0addr <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>recvfrom<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>maxPacketSize<span class=\"p\">)</span></td></tr><tr><th id=\"L260\"><a href=\"#L260\">260</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 read <span class=\"o\">+=</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L261\"><a href=\"#L261\">261</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>protocol<span class=\"o\">.</span>datagramReceived<span class=\"p\">(</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L262\"><a href=\"#L262\">262</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0socket<span class=\"o\">.</span>error<span class=\"p\">,</span>\u00a0se<span class=\"p\">:</span></td></tr><tr><th id=\"L263\"><a href=\"#L263\">263</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 no <span class=\"o\">=</span>\u00a0se<span class=\"o\">.</span>args<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span></td></tr><tr><th id=\"L264\"><a href=\"#L264\">264</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0no <span class=\"ow\">in</span>\u00a0<span class=\"p\">(</span>EAGAIN<span class=\"p\">,</span>\u00a0EINTR<span class=\"p\">,</span>\u00a0EWOULDBLOCK<span class=\"p\">):</span></td></tr><tr><th id=\"L265\"><a href=\"#L265\">265</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span></td></tr><tr><th id=\"L266\"><a href=\"#L266\">266</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0no <span class=\"o\">==</span>\u00a0ECONNREFUSED<span class=\"p\">:</span></td></tr><tr><th id=\"L267\"><a href=\"#L267\">267</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>protocol<span class=\"o\">.</span>connectionRefused<span class=\"p\">()</span></td></tr><tr><th id=\"L268\"><a href=\"#L268\">268</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L269\"><a href=\"#L269\">269</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span></td></tr><tr><th id=\"L270\"><a href=\"#L270\">270</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span><span class=\"p\">:</span></td></tr><tr><th id=\"L271\"><a href=\"#L271\">271</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log<span class=\"o\">.</span>deferr<span class=\"p\">()</span></td></tr><tr><th id=\"L272\"><a href=\"#L272\">272</a></th><td></td></tr><tr><th id=\"L273\"><a href=\"#L273\">273</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">write</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0data<span class=\"p\">):</span></td></tr><tr><th id=\"L274\"><a href=\"#L274\">274</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Write a datagram.\"\"\"</span></td></tr><tr><th id=\"L275\"><a href=\"#L275\">275</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L276\"><a href=\"#L276\">276</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>send<span class=\"p\">(</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L277\"><a href=\"#L277\">277</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0socket<span class=\"o\">.</span>error<span class=\"p\">,</span>\u00a0se<span class=\"p\">:</span></td></tr><tr><th id=\"L278\"><a href=\"#L278\">278</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 no <span class=\"o\">=</span>\u00a0se<span class=\"o\">.</span>args<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span></td></tr><tr><th id=\"L279\"><a href=\"#L279\">279</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0no <span class=\"o\">==</span>\u00a0EINTR<span class=\"p\">:</span></td></tr><tr><th id=\"L280\"><a href=\"#L280\">280</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>write<span class=\"p\">(</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L281\"><a href=\"#L281\">281</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0no <span class=\"o\">==</span>\u00a0EMSGSIZE<span class=\"p\">:</span></td></tr><tr><th id=\"L282\"><a href=\"#L282\">282</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0error<span class=\"o\">.</span>MessageLengthError<span class=\"p\">,</span>\u00a0<span class=\"s\">\"message too long\"</span></td></tr><tr><th id=\"L283\"><a href=\"#L283\">283</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0no <span class=\"o\">==</span>\u00a0ECONNREFUSED<span class=\"p\">:</span></td></tr><tr><th id=\"L284\"><a href=\"#L284\">284</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>protocol<span class=\"o\">.</span>connectionRefused<span class=\"p\">()</span></td></tr><tr><th id=\"L285\"><a href=\"#L285\">285</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0no <span class=\"o\">==</span>\u00a0EAGAIN<span class=\"p\">:</span></td></tr><tr><th id=\"L286\"><a href=\"#L286\">286</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># oh, well, drop the data. The only difference from UDP</span></td></tr><tr><th id=\"L287\"><a href=\"#L287\">287</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># is that UDP won't ever notice.</span></td></tr><tr><th id=\"L288\"><a href=\"#L288\">288</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># TODO: add TCP-like buffering</span></td></tr><tr><th id=\"L289\"><a href=\"#L289\">289</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L290\"><a href=\"#L290\">290</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L291\"><a href=\"#L291\">291</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span></td></tr><tr><th id=\"L292\"><a href=\"#L292\">292</a></th><td></td></tr><tr><th id=\"L293\"><a href=\"#L293\">293</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getPeer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L294\"><a href=\"#L294\">294</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0address<span class=\"o\">.</span>UNIXAddress<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>remoteaddr<span class=\"p\">)</span></td></tr></tbody></table>\n\n      </div>\n      <div id=\"anydiff\">\n        <form action=\"/LUCICodeRepository/nomaticIM/diff\" method=\"get\">\n          <div class=\"buttons\">\n            <input type=\"hidden\" name=\"new_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/unix.py\" />\n            <input type=\"hidden\" name=\"old_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/unix.py\" />\n            <input type=\"hidden\" name=\"new_rev\" />\n            <input type=\"hidden\" name=\"old_rev\" />\n            <input type=\"submit\" value=\"View changes...\" title=\"Select paths and revs for Diff\" />\n          </div>\n        </form>\n      </div>\n      <div id=\"help\"><strong>Note:</strong> See <a href=\"/LUCICodeRepository/nomaticIM/wiki/TracBrowser\">TracBrowser</a>\n        for help on using the repository browser.</div>\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"first\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/unix.py?format=txt\">Plain Text</a>\n        </li><li class=\"last\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/unix.py\">Original Format</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/LUCICodeRepository/nomaticIM/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/LUCICodeRepository/nomaticIM/about\"><strong>Trac 1.0.1</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">All content copyright 2007-2008 by LUCI <br /><a href=\"http://luci.ics.uci.edu/\">http://luci.ics.uci.edu/</a></p>\n    </div>\n\t\t<div id=\"sitefooter\">\n\t\t\t<script src=\"http://www.google-analytics.com/urchin.js\" type=\"text/javascript\">\n\t\t\t</script>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t\t_uacct = \"UA-338915-2\";\n\t\t\t\turchinTracker();\n\t\t\t</script>\n\t\t</div>\n\t</body>\n</html>", "id": 44215.0}