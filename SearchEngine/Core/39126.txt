{"text": "Navigation Up Table of Contents Bibliography Index Title Page TriangulationDSCellBase 3 Definition At the base level see Sections and a cell stores handles to its four vertices and to its four neighbor cells The vertices and neighbors are indexed 1 2 and 3 Neighbor i lies opposite to vertex i Since the Triangulation data structure is the class which defines the handle types the cell base class has to be somehow parameterized by the Triangulation data structure But since it is itself parameterized by the cell and vertex base classes there is a cycle in the definition of these classes In order to break the cycle the base classes for vertex and cell which are given as arguments for the Triangulation data structure use void as Triangulation data structure parameter and the Triangulation data structure then uses a rebind like mechanism similar to the one specified in std allocator in order to put itself as parameter to the vertex and cell classes The rebound base classes so obtained are the classes which are used as base classes for the final vertex and cell classes More information can be found in Section Types The concept TriangulationDSCellBase 3 has to provide the following types template typename TDS2 TriangulationDSCellBase 3 struct Rebind TDS This nested template class has to define a type Other which is the rebound cell that is the one whose Triangulation data structure will be the actually used one The Other type will be the real base class of Triangulation data structure 3 Cell typedef TriangulationDataStructure 3 Triangulation data structure typedef TriangulationDataStructure 3 Vertex handle Vertex handle typedef TriangulationDataStructure 3 Cell handle Cell handle Creation TriangulationDSCellBase 3 c Default constructor TriangulationDSCellBase 3 c Vertex handle v Vertex handle v1 Vertex handle v2 Vertex handle v3 Initializes the vertices with v v1 v2 v3 Neighbors are initialized to the default constructed handle TriangulationDSCellBase 3 c Vertex handle v Vertex handle v1 Vertex handle v2 Vertex handle v3 Cell handle n Cell handle n1 Cell handle n2 Cell handle n3 Initializes the vertices with v v1 v2 v3 and the neighbors with n n1 n2 n3 Access Functions Vertex handle c vertex int i Returns the vertex i of c Precondition i 1 2 3 int c vertex index Vertex handle v Returns the index of v Precondition v is a vertex of c bool c has vertex Vertex handle v True iff v is a vertex of c bool c has vertex Vertex handle v int i Returns true if v is a vertex of c and computes its index i in c Cell handle c neighbor int i Returns the neighbor i of c Precondition i 1 2 3 int c cell index Cell handle n Returns the index of cell n in c Precondition n is a neighbor of c bool c has neighbor Cell handle n Returns true if n is a neighbor of c bool c has neighbor Cell handle n int i Returns true if n is a neighbor of c and computes its index i in c Setting void c set vertex int i Vertex handle v Sets vertex i to v Precondition i 1 2 3 void c set vertices Sets the vertices to the default constructed handle void c set vertices Vertex handle v Vertex handle v1 Vertex handle v2 Vertex handle v3 Sets the vertices void c set neighbor int i Cell handle n Sets neighbor i to n Precondition i 1 2 3 void c set neighbors Sets the neighbors to the default constructed handle void c set neighbors Cell handle n Cell handle n1 Cell handle n2 Cell handle n3 Sets the neighbors Checking bool c is valid bool verbose false Performs any desired geometric test on a cell When verbose is set to true messages are printed to give a precise indication of the kind of invalidity encountered Various void c for compact container void c for compact container These member functions are required by Triangulation data structure 3 because it uses Compact container to store its cells See the documentation of Compact container for the exact requirements I O istream istream is c Inputs the possible non combinatorial information given by the cell ostream ostream os c Outputs the possible non combinatorial information given by the cell Has Models CGAL Triangulation ds cell base 3 CGAL Triangulation cell base 3 CGAL Triangulation cell base with info 3 See Also TriangulationDSVertexBase 3 TriangulationVertexBase 3 TriangulationHierarchyVertexBase 3 TriangulationCellBase 3 Next TriangulationDSVertexBase 3 Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/TriangulationDS_3_ref/Concept_TriangulationDSCellBase_3.html", "title": "triangulationdscellbase_3", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './TriangulationDS_3_ref/TriangulationDSCellBase_3.tex' -->\n<html> <head>  \n<title>TriangulationDSCellBase_3</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_1005\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_938\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Concept.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_TriangulationDSCellBase_3\"></A>\n<h2><I>TriangulationDSCellBase_3</I></h2>\n<P>\n\n<H3>Definition</H3>\n<P>\n\nAt the base level \n(see Sections&nbsp;<A HREF=\"../Triangulation_3/Chapter_main.html#Triangulation3-sec-design\"><IMG SRC=\"cc_ref_up_arrow.gif\" ALT=\"reference\" WIDTH=\"10\" HEIGHT=\"10\"></A> and&nbsp;<A HREF=\"../TriangulationDS_3/Chapter_main.html#TDS3-sec-design\"><IMG SRC=\"cc_ref_up_arrow.gif\" ALT=\"reference\" WIDTH=\"10\" HEIGHT=\"10\"></A>),\na cell stores handles to its four vertices and to its four neighbor cells. \nThe vertices and neighbors are indexed 0, 1, 2 and 3. Neighbor <MATH><I>i</I></MATH>\nlies <A HREF=\"../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243\">opposite</A> to vertex <MATH><I>i</I></MATH>.\n<P>\n\nSince the Triangulation data structure is the class which defines the handle\ntypes, the cell base class has to be somehow parameterized by the Triangulation\ndata structure.  But since it is itself parameterized by the cell and vertex\nbase classes, there is a cycle in the definition of these classes.  In order\nto break the cycle, the base classes for vertex and cell which are given as\narguments for the Triangulation data structure use <I>void</I> as Triangulation\ndata structure parameter, and the Triangulation data structure then uses a\n<I>rebind</I>-like mechanism (similar to the one specified in\n<I>std::allocator</I>) in order to put itself as parameter to the vertex and\ncell classes.  The <I>rebound</I> base classes so obtained are the classes\nwhich are used as base classes for the final vertex and cell classes.\nMore information can be found in Section&nbsp;<A HREF=\"../TriangulationDS_3/Chapter_main.html#TDS3-sec-design\"><IMG SRC=\"cc_ref_up_arrow.gif\" ALT=\"reference\" WIDTH=\"10\" HEIGHT=\"10\"></A>.\n<P>\n\n<H3>Types</H3>\nThe concept <I><A HREF=\"Concept_TriangulationDSCellBase_3.html#Cross_link_anchor_1005\">TriangulationDSCellBase_3</A></I> has to provide the following types.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    template &lt;typename TDS2&gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_TriangulationDSCellBase_3.html#Cross_link_anchor_1005\">TriangulationDSCellBase_3</A>:: struct Rebind_TDS;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    This nested template class has to define a type <I>Other</I> which is the\n<I>rebound</I> cell, that is, the one whose <I>Triangulation_data_structure</I>\nwill be the actually used one.  The <I>Other</I> type will be the real base\nclass of <I><A HREF=\"Class_Triangulation_data_structure_3.html#Cross_link_anchor_1008\">Triangulation_data_structure_3</A>::Cell</I>.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Triangulation_data_structure\"></A>\n<A NAME=\"Typedef_Triangulation_data_structure\"></A>\ntypedef <A HREF=\"Concept_TriangulationDataStructure_3.html#Cross_link_anchor_1002\">TriangulationDataStructure_3</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    Triangulation_data_structure;\n        </I></NOBR>\n        \n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Vertex_handle\"></A>\n<A NAME=\"Typedef_Vertex_handle\"></A>\ntypedef <A HREF=\"Concept_TriangulationDataStructure_3.html#Cross_link_anchor_1002\">TriangulationDataStructure_3</A>::Vertex_handle\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    Vertex_handle;\n        </I></NOBR>\n        </TD>\n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Cell_handle\"></A>\n<A NAME=\"Typedef_Cell_handle\"></A>\ntypedef <A HREF=\"Concept_TriangulationDataStructure_3.html#Cross_link_anchor_1002\">TriangulationDataStructure_3</A>::Cell_handle\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    Cell_handle;\n        </I></NOBR>\n        </TD>\n    \n        </TR>\n        </TABLE>\n<P>\n\n<H3>Creation</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_TriangulationDSCellBase_3.html#Cross_link_anchor_1005\">TriangulationDSCellBase_3</A> c;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Default constructor\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    <A HREF=\"Concept_TriangulationDSCellBase_3.html#Cross_link_anchor_1005\">TriangulationDSCellBase_3</A> c ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    Vertex_handle v0,<BR>\n\nVertex_handle v1,<BR>\n\nVertex_handle v2,<BR>\n\nVertex_handle v3);</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Initializes the vertices with <I>v0, v1, v2, v3</I>. Neighbors are\ninitialized to the default constructed handle.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    <A HREF=\"Concept_TriangulationDSCellBase_3.html#Cross_link_anchor_1005\">TriangulationDSCellBase_3</A> c ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    Vertex_handle v0,<BR>\n\nVertex_handle v1,<BR>\n\nVertex_handle v2,<BR>\n\nVertex_handle v3,<BR>\n\nCell_handle n0,<BR>\n\nCell_handle n1,<BR>\n\nCell_handle n2,<BR>\n\nCell_handle n3);</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Initializes the vertices with <I>v0, v1, v2, v3</I> and the neighbors with\n<I>n0, n1, n2, n3</I>.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Access Functions</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Vertex_handle_vertex6int_i9_const;\"></A>\nVertex_handle\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    c.vertex ( int i)\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns the vertex <I>i</I> of <I>c</I>.<BR>\n\n<EM>Precondition: </EM><MATH><I>i  <IMG BORDER=0 WIDTH=9 HEIGHT=21 ALIGN=MIDDLE SRC=\"cc_in.gif\"> {0, 1, 2, 3}</I></MATH>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_int_vertex_index6Vertex_handle_v9_const;\"></A>\nint\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.vertex_index ( Vertex_handle v)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns the index of <I>v</I>.<BR>\n\n<EM>Precondition: </EM><I>v</I> is a vertex of <I>c</I>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_has_vertex6Vertex_handle_v9;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.has_vertex ( Vertex_handle v)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    True iff <I>v</I> is a vertex of <I>c</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_has_vertex6Vertex_handle_v+_int___i9_const;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.has_vertex ( Vertex_handle v,  int &amp; i)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns <I>true</I> if <I>v</I> is a vertex of <I>c</I>, and\ncomputes its index <I>i</I> in <I>c</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Cell_handle_neighbor6int_i9_const;\"></A>\nCell_handle\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.neighbor ( int i)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns  the neighbor <I>i</I> of <I>c</I>.<BR>\n\n<EM>Precondition: </EM><MATH><I>i  <IMG BORDER=0 WIDTH=9 HEIGHT=21 ALIGN=MIDDLE SRC=\"cc_in.gif\"> {0, 1, 2, 3}</I></MATH>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_int_cell_index6Cell_handle_n9_const;\"></A>\nint\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.cell_index ( Cell_handle n)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns the index of cell <I>n</I> in <I>c</I>.<BR>\n\n<EM>Precondition: </EM><I>n</I> is a neighbor of <I>c</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_has_neighbor6Cell_handle_n9;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.has_neighbor ( Cell_handle n)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns <I>true</I> if <I>n</I> is a neighbor of <I>c</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_has_neighbor6Cell_handle_n+_int___i9_const;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.has_neighbor ( Cell_handle n,  int &amp; i)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns <I>true</I> if <I>n</I> is a neighbor of <I>c</I>,  and\ncomputes its index <I>i</I> in <I>c</I>.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Setting</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_set_vertex6int_i+_Vertex_handle_v9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.set_vertex ( int i,  Vertex_handle v)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Sets vertex <I>i</I> to <I>v</I>.<BR>\n\n<EM>Precondition: </EM><MATH><I>i  <IMG BORDER=0 WIDTH=9 HEIGHT=21 ALIGN=MIDDLE SRC=\"cc_in.gif\"> {0, 1, 2, 3}</I></MATH>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_set_vertices69;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    c.set_vertices ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Sets the vertices to the default constructed handle.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_set_vertices6_Vertex_handle_v0+_Vertex_handle_v1+_Vertex_handle_v2+_Vertex_handle_v39;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    c.set_vertices ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    Vertex_handle v0,<BR>\n\nVertex_handle v1,<BR>\n\nVertex_handle v2,<BR>\n\nVertex_handle v3)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Sets the vertices.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_set_neighbor6int_i+_Cell_handle_n9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.set_neighbor ( int i,  Cell_handle n)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Sets neighbor <I>i</I> to <I>n</I>.<BR>\n\n<EM>Precondition: </EM><MATH><I>i  <IMG BORDER=0 WIDTH=9 HEIGHT=21 ALIGN=MIDDLE SRC=\"cc_in.gif\"> {0, 1, 2, 3}</I></MATH>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_set_neighbors69;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    c.set_neighbors ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Sets the neighbors to the default constructed handle.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_set_neighbors6Cell_handle_n0+_Cell_handle_n1+_Cell_handle_n2+_Cell_handle_n39;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    c.set_neighbors ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    Cell_handle n0,<BR>\n\nCell_handle n1,<BR>\n\nCell_handle n2,<BR>\n\nCell_handle n3)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Sets the neighbors.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Checking</H3>\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_is_valid6bool_verbose_=_false9_const;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.is_valid ( bool verbose = false)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Performs any desired geometric test on a cell.<BR>\n\nWhen <I>verbose</I> is set to <I>true</I>, messages are printed to give\na precise indication of the kind of invalidity encountered.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Various</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_*_for_compact_container69_const;\"></A>\nvoid *\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.for_compact_container ()\n        </I></NOBR>\n        \n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_*___for_compact_container69;\"></A>\nvoid * &amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.for_compact_container ()\n        </I></NOBR>\n        \n    \n        </TR>\n        </TABLE>\n\n These member functions are required by <I><A HREF=\"Class_Triangulation_data_structure_3.html#Cross_link_anchor_1008\">Triangulation_data_structure_3</A></I>\n  because it uses <I><A HREF=\"../STL_Extension_ref/Class_Compact_container.html#Cross_link_anchor_1440\">Compact_container</A></I> to store its cells.  See the\n  documentation of <I><A HREF=\"../STL_Extension_ref/Class_Compact_container.html#Cross_link_anchor_1440\">Compact_container</A></I> for the exact requirements.\n<P>\n\n<H3>I/O</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    istream&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n     istream&amp; is &gt;&gt;  &amp; c<A NAME=\"Function_istream__operator99_6istream__is+_TriangulationDSCellBase_3___c9;\"></A>\n\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Inputs the possible non combinatorial information given by the cell.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    ostream&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     ostream&amp; os &lt;&lt;  c<A NAME=\"Function_ostream__operator66_6ostream__os+_const_TriangulationDSCellBase_3___c9;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Outputs the possible non combinatorial information given by the cell.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Has Models</H3>\n<P>\n\n<I><A HREF=\"Class_Triangulation_ds_cell_base_3.html#Cross_link_anchor_1009\">CGAL::Triangulation_ds_cell_base_3</A></I><BR>\n\n<I><A HREF=\"../Triangulation_3_ref/Class_Triangulation_cell_base_3.html#Cross_link_anchor_989\">CGAL::Triangulation_cell_base_3</A></I><BR>\n\n<I><A HREF=\"../Triangulation_3_ref/Class_Triangulation_cell_base_with_info_3.html#Cross_link_anchor_991\">CGAL::Triangulation_cell_base_with_info_3</A></I>\n<P>\n\n<H3>See Also</H3>\n<P>\n\n<I><A HREF=\"Concept_TriangulationDSVertexBase_3.html#Cross_link_anchor_1006\">TriangulationDSVertexBase_3</A></I><BR>\n\n<I><A HREF=\"../Triangulation_3_ref/Concept_TriangulationVertexBase_3.html#Cross_link_anchor_987\">TriangulationVertexBase_3</A></I><BR>\n\n<I><A HREF=\"../Triangulation_3_ref/Concept_TriangulationHierarchyVertexBase_3.html#Cross_link_anchor_988\">TriangulationHierarchyVertexBase_3</A></I><BR>\n\n<I><A HREF=\"../Triangulation_3_ref/Concept_TriangulationCellBase_3.html#Cross_link_anchor_986\">TriangulationCellBase_3</A></I>\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Concept_TriangulationDSVertexBase_3.html\"><I>TriangulationDSVertexBase_3</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_38!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 39126.0}