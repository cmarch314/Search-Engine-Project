{"text": "View Javadoc 1 package swirl workspace 2 3 import java io IOException 4 import java util HashMap 5 6 import javax jmdns JmDNS 7 import javax jmdns ServiceInfo 8 import javax jmdns ServiceListener 9 1 import org apache commons logging Log 11 import org apache commons logging LogFactory 12 13 14 DOCUMENT ME 15 16 author bpillet 17 18 public class JmDNSPeerFinder implements ServiceListener 19 PeerFinder 2 21 time out 2s in get service info 22 public static final int TIME OUT 2 23 24 remembers services that have registered with the network 25 private HashMap cachedServices new HashMap 26 27 the JmDNS module 28 private JmDNS rendezvous 29 3 the logger for this class 31 private Log log LogFactory getLog this getClass 32 33 manager to pass peer joined left messages on to 34 private PeerManager manager 35 36 37 Creates a new finder for Rendezvous messages 38 39 param jmdns a JmDNS implementation 4 param man the peerManager to add peers to 41 42 public JmDNSPeerFinder final JmDNS jmdns final PeerManager man 43 44 this rendezvous jmdns 45 this manager man 46 47 48 49 Add a service to the network 5 51 param jmdns the jmdns to add the service to 52 param type the type of the service to add 53 param name the service s name 54 55 public void addService final JmDNS jmdns final String type 56 final String name 57 58 if log isDebugEnabled 59 6 log debug addService type name name 61 62 63 if type equals PeerManager SWIRL TYPE 64 65 if log isDebugEnabled 66 67 log debug trying to add peer 68 69 7 try 71 72 ServiceInfo si jmdns getServiceInfo type name TIME OUT 73 74 if log isDebugEnabled 75 76 log debug adding Peer name si si 77 78 79 Peer peer new JmDNSPeer this si 8 81 manager addPeer peer 82 cachedServices put name peer getUniqueID 83 84 catch Exception e 85 86 log error problem adding peer e 87 88 89 9 91 92 Register s peers with the network 93 94 param info the serviceinfo for the peer 95 96 public void registerService final ServiceInfo info 97 98 try 99 1 rendezvous registerService info 1 1 1 2 catch IOException e 1 3 1 4 log error trouble registering peer e 1 5 1 6 1 7 1 8 1 9 Remove a service from the network 11 111 param jmdns the jmdns to remove the service from 112 param type the type of the service to remove 113 param name the service s name 114 115 public void removeService final JmDNS jmdns final String type 116 final String name 117 118 if log isDebugEnabled 119 12 log debug removeService type name name 121 122 123 if type equals PeerManager SWIRL TYPE 124 125 try 126 127 ServiceInfo si jmdns getServiceInfo type name TimeOut 128 ServiceInfo si new ServiceInfo type name 129 log debug removing Peer name si si 13 Peer peer new JmDNSPeer this si 131 manager removePeer String cachedServices get name 132 cachedServices remove name 133 134 catch Exception e 135 136 log error problem removing peer e 137 138 139 14 141 142 Implemented for ServiceListener interface 143 144 param jmdns the component to resolve against 145 param type the Service type to resolve 146 param name the service name to resolve 147 148 public void resolveService final JmDNS jmdns final String type 149 final String name 15 151 log info Resolved name jmdns jmdns type type 152 153 154 155 Implemented for ServiceListener interface 156 157 param jmdns the component to resolve against 158 param type the Service type to resolve 159 param name the service name to resolve 16 param info the serviceInfo for the service 161 162 public void resolveService final JmDNS jmdns final String type 163 final String name final ServiceInfo info 164 165 log info Resolved with props info 166 167 168 169 Register with the network and start listening for other Swirl Servers 17 171 public void start 172 173 if log isDebugEnabled 174 175 log debug starting 176 177 178 try 179 18 listen for other non Swirl services 181 rendezvous registerServiceType PeerManager SWIRL TYPE 182 183 listen for service announcements from peers 184 rendezvous addServiceListener PeerManager SWIRL TYPE this 185 186 catch Exception ex 187 188 log error Trouble starting JmDNSPeerFinder ex 189 19 191 if log isDebugEnabled 192 193 log debug started 194 195 196 197 198 Removes this servicelistener from the network and closes its connections 199 2 public void stop 2 1 2 2 if log isDebugEnabled 2 3 2 4 log debug stopping 2 5 2 6 2 7 rendezvous removeServiceListener this 2 8 rendezvous close 2 9 21 if log isDebugEnabled 211 212 log debug stopped 213 214 215 216 217 unregister s peers with the network 218 219 param info the serviceinfo for the peer 22 221 public void unregisterService final ServiceInfo info 222 223 rendezvous unregisterService info 224 225 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.20/xref/swirl/workspace/JmDNSPeerFinder.html", "title": "jmdnspeerfinder xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>JmDNSPeerFinder xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../stylesheet.css\" />\n</head>\n<body>\n<div id=\"overview\"><a href=\"../../../apidocs/swirl/workspace/JmDNSPeerFinder.html\">View Javadoc</a></div><pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <strong>package</strong> <a href=\"../../swirl/workspace/package-summary.html\">swirl.workspace</a>;\n<a name=\"2\" href=\"#2\">2</a>   \n<a name=\"3\" href=\"#3\">3</a>   <strong>import</strong> java.io.IOException;\n<a name=\"4\" href=\"#4\">4</a>   <strong>import</strong> java.util.HashMap;\n<a name=\"5\" href=\"#5\">5</a>   \n<a name=\"6\" href=\"#6\">6</a>   <strong>import</strong> javax.jmdns.JmDNS;\n<a name=\"7\" href=\"#7\">7</a>   <strong>import</strong> javax.jmdns.ServiceInfo;\n<a name=\"8\" href=\"#8\">8</a>   <strong>import</strong> javax.jmdns.ServiceListener;\n<a name=\"9\" href=\"#9\">9</a>   \n<a name=\"10\" href=\"#10\">10</a>  <strong>import</strong> org.apache.commons.logging.Log;\n<a name=\"11\" href=\"#11\">11</a>  <strong>import</strong> org.apache.commons.logging.LogFactory;\n<a name=\"12\" href=\"#12\">12</a>  \n<a name=\"13\" href=\"#13\">13</a>  <em>/**<em>*</em></em>\n<a name=\"14\" href=\"#14\">14</a>  <em> * DOCUMENT ME!</em>\n<a name=\"15\" href=\"#15\">15</a>  <em> *</em>\n<a name=\"16\" href=\"#16\">16</a>  <em> * @author bpillet</em>\n<a name=\"17\" href=\"#17\">17</a>  <em> */</em>\n<a name=\"18\" href=\"#18\">18</a>  <strong>public</strong> <strong>class</strong> <a href=\"../../swirl/workspace/JmDNSPeerFinder.html\">JmDNSPeerFinder</a> implements ServiceListener,\n<a name=\"19\" href=\"#19\">19</a>                                          <a href=\"../../swirl/workspace/PeerFinder.html\">PeerFinder</a>\n<a name=\"20\" href=\"#20\">20</a>  {\n<a name=\"21\" href=\"#21\">21</a>      <em>/**<em>* time out 2s in get service info */</em></em>\n<a name=\"22\" href=\"#22\">22</a>      <strong>public</strong> <strong>static</strong> <strong>final</strong> <strong>int</strong> TIME_OUT = 2000;\n<a name=\"23\" href=\"#23\">23</a>  \n<a name=\"24\" href=\"#24\">24</a>      <em>/**<em>* remembers services that have registered with the network */</em></em>\n<a name=\"25\" href=\"#25\">25</a>      <strong>private</strong> HashMap cachedServices = <strong>new</strong> HashMap();\n<a name=\"26\" href=\"#26\">26</a>  \n<a name=\"27\" href=\"#27\">27</a>      <em>/**<em>* the <a href=\"../../javax/jmdns/JmDNS.html\">JmDNS</a> module */</em></em>\n<a name=\"28\" href=\"#28\">28</a>      <strong>private</strong> <a href=\"../../javax/jmdns/JmDNS.html\">JmDNS</a> rendezvous;\n<a name=\"29\" href=\"#29\">29</a>  \n<a name=\"30\" href=\"#30\">30</a>      <em>/**<em>* the logger for this class */</em></em>\n<a name=\"31\" href=\"#31\">31</a>      <strong>private</strong> Log log = LogFactory.getLog(<strong>this</strong>.getClass());\n<a name=\"32\" href=\"#32\">32</a>  \n<a name=\"33\" href=\"#33\">33</a>      <em>/**<em>* manager to pass peer joined/left messages on to */</em></em>\n<a name=\"34\" href=\"#34\">34</a>      <strong>private</strong> <a href=\"../../swirl/workspace/PeerManager.html\">PeerManager</a> manager;\n<a name=\"35\" href=\"#35\">35</a>  \n<a name=\"36\" href=\"#36\">36</a>      <em>/**<em>*</em></em>\n<a name=\"37\" href=\"#37\">37</a>  <em>     * Creates a new finder for Rendezvous messages</em>\n<a name=\"38\" href=\"#38\">38</a>  <em>     *</em>\n<a name=\"39\" href=\"#39\">39</a>  <em>     * @param jmdns a JmDNS implementation</em>\n<a name=\"40\" href=\"#40\">40</a>  <em>     * @param man the peerManager to add peers to</em>\n<a name=\"41\" href=\"#41\">41</a>  <em>     */</em>\n<a name=\"42\" href=\"#42\">42</a>      <strong>public</strong> <a href=\"../../swirl/workspace/JmDNSPeerFinder.html\">JmDNSPeerFinder</a>(<strong>final</strong> <a href=\"../../javax/jmdns/JmDNS.html\">JmDNS</a> jmdns, <strong>final</strong> <a href=\"../../swirl/workspace/PeerManager.html\">PeerManager</a> man)\n<a name=\"43\" href=\"#43\">43</a>      {\n<a name=\"44\" href=\"#44\">44</a>          <strong>this</strong>.rendezvous = jmdns;\n<a name=\"45\" href=\"#45\">45</a>          <strong>this</strong>.manager = man;\n<a name=\"46\" href=\"#46\">46</a>      }\n<a name=\"47\" href=\"#47\">47</a>  \n<a name=\"48\" href=\"#48\">48</a>      <em>/**<em>*</em></em>\n<a name=\"49\" href=\"#49\">49</a>  <em>     * Add a service to the network</em>\n<a name=\"50\" href=\"#50\">50</a>  <em>     *</em>\n<a name=\"51\" href=\"#51\">51</a>  <em>     * @param jmdns the jmdns to add the service to</em>\n<a name=\"52\" href=\"#52\">52</a>  <em>     * @param type the type of the service to add</em>\n<a name=\"53\" href=\"#53\">53</a>  <em>     * @param name the service's name</em>\n<a name=\"54\" href=\"#54\">54</a>  <em>     */</em>\n<a name=\"55\" href=\"#55\">55</a>      <strong>public</strong> <strong>void</strong> addService(<strong>final</strong> <a href=\"../../javax/jmdns/JmDNS.html\">JmDNS</a> jmdns, <strong>final</strong> String type,\n<a name=\"56\" href=\"#56\">56</a>                             <strong>final</strong> String name)\n<a name=\"57\" href=\"#57\">57</a>      {\n<a name=\"58\" href=\"#58\">58</a>          <strong>if</strong>(log.isDebugEnabled())\n<a name=\"59\" href=\"#59\">59</a>          {\n<a name=\"60\" href=\"#60\">60</a>              log.debug(<span class=\"string\">\"addService: \"</span> + type + <span class=\"string\">\" name: \"</span> + name);\n<a name=\"61\" href=\"#61\">61</a>          }\n<a name=\"62\" href=\"#62\">62</a>  \n<a name=\"63\" href=\"#63\">63</a>          <strong>if</strong>(type.equals(PeerManager.SWIRL_TYPE))\n<a name=\"64\" href=\"#64\">64</a>          {\n<a name=\"65\" href=\"#65\">65</a>          \t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"66\" href=\"#66\">66</a>  \t        {\n<a name=\"67\" href=\"#67\">67</a>          \t\tlog.debug(<span class=\"string\">\"trying to add peer\"</span>);\n<a name=\"68\" href=\"#68\">68</a>  \t        }\n<a name=\"69\" href=\"#69\">69</a>  \n<a name=\"70\" href=\"#70\">70</a>              <strong>try</strong>\n<a name=\"71\" href=\"#71\">71</a>              {\n<a name=\"72\" href=\"#72\">72</a>                  <a href=\"../../javax/jmdns/ServiceInfo.html\">ServiceInfo</a> si = jmdns.getServiceInfo(type, name, TIME_OUT);\n<a name=\"73\" href=\"#73\">73</a>  \n<a name=\"74\" href=\"#74\">74</a>                  <strong>if</strong>(log.isDebugEnabled())\n<a name=\"75\" href=\"#75\">75</a>                  {\n<a name=\"76\" href=\"#76\">76</a>                      log.debug(<span class=\"string\">\"adding Peer \"</span> + name + <span class=\"string\">\" si: \"</span> + si);\n<a name=\"77\" href=\"#77\">77</a>                  }\n<a name=\"78\" href=\"#78\">78</a>  \n<a name=\"79\" href=\"#79\">79</a>                  <a href=\"../../swirl/workspace/Peer.html\">Peer</a> peer = <strong>new</strong> <a href=\"../../swirl/workspace/JmDNSPeer.html\">JmDNSPeer</a>(<strong>this</strong>, si);\n<a name=\"80\" href=\"#80\">80</a>  \n<a name=\"81\" href=\"#81\">81</a>                  manager.addPeer(peer);\n<a name=\"82\" href=\"#82\">82</a>                  cachedServices.put(name, peer.getUniqueID());\n<a name=\"83\" href=\"#83\">83</a>              }\n<a name=\"84\" href=\"#84\">84</a>              <strong>catch</strong>(Exception e)\n<a name=\"85\" href=\"#85\">85</a>              {\n<a name=\"86\" href=\"#86\">86</a>                  log.error(<span class=\"string\">\"problem adding peer\"</span>, e);\n<a name=\"87\" href=\"#87\">87</a>              }\n<a name=\"88\" href=\"#88\">88</a>          }\n<a name=\"89\" href=\"#89\">89</a>      }\n<a name=\"90\" href=\"#90\">90</a>  \n<a name=\"91\" href=\"#91\">91</a>      <em>/**<em>*</em></em>\n<a name=\"92\" href=\"#92\">92</a>  <em>     * Register's peers with the network</em>\n<a name=\"93\" href=\"#93\">93</a>  <em>     *</em>\n<a name=\"94\" href=\"#94\">94</a>  <em>     * @param info the serviceinfo for the peer</em>\n<a name=\"95\" href=\"#95\">95</a>  <em>     */</em>\n<a name=\"96\" href=\"#96\">96</a>      <strong>public</strong> <strong>void</strong> registerService(<strong>final</strong> <a href=\"../../javax/jmdns/ServiceInfo.html\">ServiceInfo</a> info)\n<a name=\"97\" href=\"#97\">97</a>      {\n<a name=\"98\" href=\"#98\">98</a>          <strong>try</strong>\n<a name=\"99\" href=\"#99\">99</a>          {\n<a name=\"100\" href=\"#100\">100</a>             rendezvous.registerService(info);\n<a name=\"101\" href=\"#101\">101</a>         }\n<a name=\"102\" href=\"#102\">102</a>         <strong>catch</strong>(IOException e)\n<a name=\"103\" href=\"#103\">103</a>         {\n<a name=\"104\" href=\"#104\">104</a>             log.error(<span class=\"string\">\"trouble registering peer\"</span>, e);\n<a name=\"105\" href=\"#105\">105</a>         }\n<a name=\"106\" href=\"#106\">106</a>     }\n<a name=\"107\" href=\"#107\">107</a> \n<a name=\"108\" href=\"#108\">108</a>     <em>/**<em>*</em></em>\n<a name=\"109\" href=\"#109\">109</a> <em>     * Remove a service from the network</em>\n<a name=\"110\" href=\"#110\">110</a> <em>     *</em>\n<a name=\"111\" href=\"#111\">111</a> <em>     * @param jmdns the jmdns to remove the service from</em>\n<a name=\"112\" href=\"#112\">112</a> <em>     * @param type the type of the service to remove</em>\n<a name=\"113\" href=\"#113\">113</a> <em>     * @param name the service's name</em>\n<a name=\"114\" href=\"#114\">114</a> <em>     */</em>\n<a name=\"115\" href=\"#115\">115</a>     <strong>public</strong> <strong>void</strong> removeService(<strong>final</strong> <a href=\"../../javax/jmdns/JmDNS.html\">JmDNS</a> jmdns, <strong>final</strong> String type,\n<a name=\"116\" href=\"#116\">116</a>                               <strong>final</strong> String name)\n<a name=\"117\" href=\"#117\">117</a>     {\n<a name=\"118\" href=\"#118\">118</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"119\" href=\"#119\">119</a>         {\n<a name=\"120\" href=\"#120\">120</a>             log.debug(<span class=\"string\">\"removeService: \"</span> + type + <span class=\"string\">\" name: \"</span> + name);\n<a name=\"121\" href=\"#121\">121</a>         }\n<a name=\"122\" href=\"#122\">122</a> \n<a name=\"123\" href=\"#123\">123</a>         <strong>if</strong>(type.equals(PeerManager.SWIRL_TYPE))\n<a name=\"124\" href=\"#124\">124</a>         {\n<a name=\"125\" href=\"#125\">125</a>             <strong>try</strong>\n<a name=\"126\" href=\"#126\">126</a>             {\n<a name=\"127\" href=\"#127\">127</a>                 <em class=\"comment\">//ServiceInfo si = jmdns.getServiceInfo(type, name, TimeOut);</em>\n<a name=\"128\" href=\"#128\">128</a>                 <em class=\"comment\">//ServiceInfo si = new ServiceInfo(type, name, 0, \"\");</em>\n<a name=\"129\" href=\"#129\">129</a>                 <em class=\"comment\">//log.debug(\"removing Peer \" + name + \" si: \" + si);</em>\n<a name=\"130\" href=\"#130\">130</a>                 <em class=\"comment\">//Peer peer = new JmDNSPeer(this, si);</em>\n<a name=\"131\" href=\"#131\">131</a>                 manager.removePeer((String)cachedServices.get(name));\n<a name=\"132\" href=\"#132\">132</a>                 cachedServices.remove(name);\n<a name=\"133\" href=\"#133\">133</a>             }\n<a name=\"134\" href=\"#134\">134</a>             <strong>catch</strong>(Exception e)\n<a name=\"135\" href=\"#135\">135</a>             {\n<a name=\"136\" href=\"#136\">136</a>                 log.error(<span class=\"string\">\"problem removing peer\"</span>, e);\n<a name=\"137\" href=\"#137\">137</a>             }\n<a name=\"138\" href=\"#138\">138</a>         }\n<a name=\"139\" href=\"#139\">139</a>     }\n<a name=\"140\" href=\"#140\">140</a> \n<a name=\"141\" href=\"#141\">141</a>     <em>/**<em>*</em></em>\n<a name=\"142\" href=\"#142\">142</a> <em>     * Implemented for ServiceListener interface</em>\n<a name=\"143\" href=\"#143\">143</a> <em>     *</em>\n<a name=\"144\" href=\"#144\">144</a> <em>     * @param jmdns the component to resolve against</em>\n<a name=\"145\" href=\"#145\">145</a> <em>     * @param type the Service type to resolve</em>\n<a name=\"146\" href=\"#146\">146</a> <em>     * @param name the service name to resolve</em>\n<a name=\"147\" href=\"#147\">147</a> <em>     */</em>\n<a name=\"148\" href=\"#148\">148</a>     <strong>public</strong> <strong>void</strong> resolveService(<strong>final</strong> <a href=\"../../javax/jmdns/JmDNS.html\">JmDNS</a> jmdns, <strong>final</strong> String type,\n<a name=\"149\" href=\"#149\">149</a>                                <strong>final</strong> String name)\n<a name=\"150\" href=\"#150\">150</a>     {\n<a name=\"151\" href=\"#151\">151</a>         log.info(<span class=\"string\">\"Resolved: \"</span> + name + <span class=\"string\">\" jmdns: \"</span> + jmdns + <span class=\"string\">\" type: \"</span> + type);\n<a name=\"152\" href=\"#152\">152</a>     }\n<a name=\"153\" href=\"#153\">153</a> \n<a name=\"154\" href=\"#154\">154</a>     <em>/**<em>*</em></em>\n<a name=\"155\" href=\"#155\">155</a> <em>     * Implemented for ServiceListener interface</em>\n<a name=\"156\" href=\"#156\">156</a> <em>     *</em>\n<a name=\"157\" href=\"#157\">157</a> <em>     * @param jmdns the component to resolve against</em>\n<a name=\"158\" href=\"#158\">158</a> <em>     * @param type the Service type to resolve</em>\n<a name=\"159\" href=\"#159\">159</a> <em>     * @param name the service name to resolve</em>\n<a name=\"160\" href=\"#160\">160</a> <em>     * @param info the serviceInfo for the service</em>\n<a name=\"161\" href=\"#161\">161</a> <em>     */</em>\n<a name=\"162\" href=\"#162\">162</a>     <strong>public</strong> <strong>void</strong> resolveService(<strong>final</strong> <a href=\"../../javax/jmdns/JmDNS.html\">JmDNS</a> jmdns, <strong>final</strong> String type,\n<a name=\"163\" href=\"#163\">163</a>                                <strong>final</strong> String name, <strong>final</strong> <a href=\"../../javax/jmdns/ServiceInfo.html\">ServiceInfo</a> info)\n<a name=\"164\" href=\"#164\">164</a>     {\n<a name=\"165\" href=\"#165\">165</a>         log.info(<span class=\"string\">\"Resolved with props: \"</span> + info);\n<a name=\"166\" href=\"#166\">166</a>     }\n<a name=\"167\" href=\"#167\">167</a> \n<a name=\"168\" href=\"#168\">168</a>     <em>/**<em>*</em></em>\n<a name=\"169\" href=\"#169\">169</a> <em>     * Register with the network and start listening for other Swirl Servers</em>\n<a name=\"170\" href=\"#170\">170</a> <em>     */</em>\n<a name=\"171\" href=\"#171\">171</a>     <strong>public</strong> <strong>void</strong> start()\n<a name=\"172\" href=\"#172\">172</a>     {\n<a name=\"173\" href=\"#173\">173</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"174\" href=\"#174\">174</a>         {\n<a name=\"175\" href=\"#175\">175</a>             log.debug(<span class=\"string\">\"starting\"</span>);\n<a name=\"176\" href=\"#176\">176</a>         }\n<a name=\"177\" href=\"#177\">177</a> \n<a name=\"178\" href=\"#178\">178</a>         <strong>try</strong>\n<a name=\"179\" href=\"#179\">179</a>         {\n<a name=\"180\" href=\"#180\">180</a>             <em class=\"comment\">// listen for other non-Swirl services</em>\n<a name=\"181\" href=\"#181\">181</a>             rendezvous.registerServiceType(PeerManager.SWIRL_TYPE);\n<a name=\"182\" href=\"#182\">182</a> \n<a name=\"183\" href=\"#183\">183</a>             <em class=\"comment\">// listen for service announcements from peers</em>\n<a name=\"184\" href=\"#184\">184</a>             rendezvous.addServiceListener(PeerManager.SWIRL_TYPE, <strong>this</strong>);\n<a name=\"185\" href=\"#185\">185</a>         }\n<a name=\"186\" href=\"#186\">186</a>         <strong>catch</strong>(Exception ex)\n<a name=\"187\" href=\"#187\">187</a>         {\n<a name=\"188\" href=\"#188\">188</a>             log.error(<span class=\"string\">\"Trouble starting JmDNSPeerFinder\"</span>, ex);\n<a name=\"189\" href=\"#189\">189</a>         }\n<a name=\"190\" href=\"#190\">190</a> \n<a name=\"191\" href=\"#191\">191</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"192\" href=\"#192\">192</a>         {\n<a name=\"193\" href=\"#193\">193</a>             log.debug(<span class=\"string\">\"started\"</span>);\n<a name=\"194\" href=\"#194\">194</a>         }\n<a name=\"195\" href=\"#195\">195</a>     }\n<a name=\"196\" href=\"#196\">196</a> \n<a name=\"197\" href=\"#197\">197</a>     <em>/**<em>*</em></em>\n<a name=\"198\" href=\"#198\">198</a> <em>     * Removes this servicelistener from the network and closes its connections</em>\n<a name=\"199\" href=\"#199\">199</a> <em>     */</em>\n<a name=\"200\" href=\"#200\">200</a>     <strong>public</strong> <strong>void</strong> stop()\n<a name=\"201\" href=\"#201\">201</a>     {\n<a name=\"202\" href=\"#202\">202</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"203\" href=\"#203\">203</a>         {\n<a name=\"204\" href=\"#204\">204</a>             log.debug(<span class=\"string\">\"stopping\"</span>);\n<a name=\"205\" href=\"#205\">205</a>         }\n<a name=\"206\" href=\"#206\">206</a> \n<a name=\"207\" href=\"#207\">207</a>         rendezvous.removeServiceListener(<strong>this</strong>);\n<a name=\"208\" href=\"#208\">208</a>         rendezvous.close();\n<a name=\"209\" href=\"#209\">209</a> \n<a name=\"210\" href=\"#210\">210</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"211\" href=\"#211\">211</a>         {\n<a name=\"212\" href=\"#212\">212</a>             log.debug(<span class=\"string\">\"stopped\"</span>);\n<a name=\"213\" href=\"#213\">213</a>         }\n<a name=\"214\" href=\"#214\">214</a>     }\n<a name=\"215\" href=\"#215\">215</a> \n<a name=\"216\" href=\"#216\">216</a>     <em>/**<em>*</em></em>\n<a name=\"217\" href=\"#217\">217</a> <em>     * unregister's peers with the network</em>\n<a name=\"218\" href=\"#218\">218</a> <em>     *</em>\n<a name=\"219\" href=\"#219\">219</a> <em>     * @param info the serviceinfo for the peer</em>\n<a name=\"220\" href=\"#220\">220</a> <em>     */</em>\n<a name=\"221\" href=\"#221\">221</a>     <strong>public</strong> <strong>void</strong> unregisterService(<strong>final</strong> <a href=\"../../javax/jmdns/ServiceInfo.html\">ServiceInfo</a> info)\n<a name=\"222\" href=\"#222\">222</a>     {\n<a name=\"223\" href=\"#223\">223</a>         rendezvous.unregisterService(info);\n<a name=\"224\" href=\"#224\">224</a>     }\n<a name=\"225\" href=\"#225\">225</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 32836.0}