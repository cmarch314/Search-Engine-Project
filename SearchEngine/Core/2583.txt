{"text": "David Eppstein Publications Dynamic graph algorithms Maintenance of a minimum spanning forest in a dynamic plane graph D Eppstein G F Italiano R Tamassia R E Tarjan J Westbrook and M Yung 1st ACM SIAM Symp Discrete Algorithms San Francisco 199 pp 1 11 J Algorithms 13 1 33 54 1992 special issue for 1st Symp Discrete Algorithms Corrigendum J Algorithms 15 173 1993 The complement of a minimum spanning tree is a maximum spanning tree in the dual graph By applying this fact we can use a modified form of Sleator and Tarjan s dynamic tree data structure to update the MST in logarithmic time per update BibTeX Citations CiteSeer ACM DL Offline algorithms for dynamic minimum spanning tree problems D Eppstein 2nd Worksh Algorithms and Data Structures Ottawa Canada 1991 Lecture Notes in Comp Sci 519 1991 pp 392 399 Tech Rep 92 4 ICS UCI 1992 J Algorithms 17 237 25 1994 Given a sequence of edge insertions and deletions in a graph finds the corresponding sequence of minimum spanning tree changes in logarithmic time per update Similarly solves the planar geometric version of the problem using a novel mixed MST formulation in which part of the input is a graph and part is a point set in time O log2 n for the Euclidean metric and O log n log log n for the rectilinear metric BibTeX Citations CiteSeer ACM DL JA Asymptotic speed ups in constructive solid geometry D Eppstein Tech Rep 92 87 ICS UCI 1992 Algorithmica 13 462 471 1995 Finds boundary representations of CSG objects Uses techniques from dynamic graph algorithms including a tree partitioning technique of Frederickson and a new data structure for maintaining the value of a Boolean expression with changing variables in time O log n log log n per update BibTeX Citations Sparsification A technique for speeding up dynamic graph algorithms D Eppstein Z Galil G F Italiano and A Nissenzweig 33rd IEEE Symp Foundations of Comp Sci Pittsburgh 1992 pp 6 69 Tech Rep RC 19272 839 7 IBM 1993 Tech Rep CS96 11 Univ Ca Foscari di Venezia Oct 1996 J ACM 44 5 669 696 1997 Uses a divide and conquer on the edge set of a graph together with the idea of replacing subgraphs by sparser certificates to make various dynamic algorithms as fast on dense graphs as they are on sparse graphs Applications include random generation of spanning trees as well as finding the k minimum weight spanning trees for a given parameter k BibTeX Citations MIT hypertext bibliography ACM DL Improved sparsification D Eppstein Z Galil and G F Italiano Tech Rep 93 2 ICS UCI 1993 Saves a log factor over dynamic graph algorithms in Sparsification and their applications by dividing vertices instead of edges Merged into the journal version of Sparsification BibTeX Citations CiteSeer Separator based sparsification for dynamic planar graph algorithms D Eppstein Z Galil G F Italiano and T Spencer 25th ACM Symp Theory of Computing San Diego 1993 pp 2 8 217 Replaces portions of a hierarchical separator decomposition with smaller certificates to achieve fast update times for various dynamic planar graph problems Applications include finding the k best spanning trees of a planar graph BibTeX Citations MIT hypertext bibliography Separator based sparsification I planarity testing and minimum spanning trees D Eppstein Z Galil G F Italiano and T Spencer J Comp Sys Sci 52 3 27 1996 special issue for 25th STOC First half of journal version of Separator based sparsification for dynamic planar graph algorithms Citations ACM DL Separator based sparsification II edge and vertex connectivity D Eppstein Z Galil G F Italiano and T Spencer Tech Rep CS96 13 Univ Ca Foscari di Venezia Oct 1996 SIAM J Computing 28 1 341 381 1999 Second half of journal version of Separator based sparsification for dynamic planar graph algorithms Citations ACM DL Faster circle packing with application to nonobtuse triangulation D Eppstein Tech Rep 94 33 ICS UCI 1994 Int J Comp Geom Appl 7 5 485 491 1997 Speeds up a triangulation algorithm of Bern et al Linear Size Nonobtuse Triangulation of Polygons by finding a collection of disjoint circles which connect up the holes in a non simple polygon The method is to use a minimum spanning tree to find a collection of overlapping circles then shrink them one by one to reduce the number of overlaps using Sleator and Tarjan s dynamic tree data structure to keep track of the connectivity of the shrunken circles BibTeX Citations Clustering for faster network simplex pivots D Eppstein Tech Rep 93 19 ICS UCI 1993 5th ACM SIAM Symp Discrete Algorithms Arlington 1994 pp 16 166 Networks 35 3 173 18 2 Speeds up the worst case time per pivot for various versions of the network simplex algorithm for minimum cost flow problems Uses techniques from dynamic graph algorithms as well as some simple geometric data structures BibTeX CiteSeer Dynamic connectivity in digital images D Eppstein Tech Rep 96 13 ICS UCI 1996 Inf Proc Lett 62 121 126 1997 Any algorithm that maintains the connected components of a bitmap image must take Omega log n log log n time per change to the image The problem can be solved in O log n time per change using dynamic planar graph techniques We discuss applications to computer Go and other games BibTeX Citations MIT hypertext bibliography CiteSeer ACM DL Dynamic graph algorithms D Eppstein Z Galil and G F Italiano Tech Rep CS96 11 Univ Ca Foscari di Venezia Oct 1996 Algorithms and Theoretical Computing Handbook M J Atallah ed CRC Press 1999 chapter 8 2nd ed CRC Press 2 1 Vol I General Concepts and Techniques chapter 9 pp 9 1 9 28 BibTeX Citations CiteSeer Guest editor s forward to special issue on dynamic graph algorithms D Eppstein Algorithmica 22 3 233 234 1998 Graphs for dynamic geometry D Eppstein Invited talk Worksh Dynamic Graph Algorithms Victoria Canada 2 This talk surveys work on computational geometry algorithms that use dynamic graph data structures and the different kinds of geometric graph arising in this work Dynamic generators of topologically embedded graphs D Eppstein arXiv cs DS 2 7 82 14th ACM SIAM Symp Discrete Algorithms Baltimore 2 3 pp 599 6 8 We describe a decomposition of graphs embedded on 2 dimensional manifolds into three subgraphs a spanning tree a dual spanning tree and a set of leftover edges with cardinality determined by the genus of the manifold This tree cotree decomposition allows us to find efficient data structures for dynamic graphs allowing updates that change the surface better constants in bounded genus graph separators and efficient algorithms for tree decomposition of bounded genus bounded diameter graphs BibTeX SODA talk slides Citations All maximal independent sets and dynamic dominance for sparse graphs D Eppstein arXiv cs DS 4 7 36 16th ACM SIAM Symp Discrete Algorithms Vancouver 2 5 pp 451 459 ACM Trans Algorithms 5 4 A38 2 9 We show how to apply reverse search to list all maximal independent sets in bounded degree graphs in constant time per set in graphs from minor closed families in linear time per set and in sparse graphs in subquadratic time per set The latter two results rely on new data structures for maintaining a dynamic vertex set in a graph and quickly testing whether the set dominates all other vertices SODA 5 talk slides BibTeX The h index of a graph and its application to dynamic subgraph statistics D Eppstein and E S Spiro arXiv 9 4 3741 Algorithms and Data Structures Symposium WADS Banff Canada Lecture Notes in Comp Sci 5664 2 9 pp 278 289 J Graph Algorithms and Applications 16 2 543 567 2 12 We define the h index of a graph to be the maximum h such that the graph has h vertices each of which has degree at least h We show that the h index and a partition of the graph into high and low degree vertices may be maintained in constant time per update Based on this technique we show how to maintain the number of triangles in a dynamic graph in time O h per update this problem is motivated by Markov Chain Monte Caro simulation of the Exponential Random Graph Model used for simulation of social networks We also prove bounds on the h index for scale free graphs and investigate the behavior of the h index on a corpus of real social networks talk slides Extended dynamic subgraph statistics using h index parameterized data structures D Eppstein M T Goodrich D Strash and L Trott Proc 4th Int Conf on Combinatorial Optimization and Applications COCOA 2 1 Hawaii 2 1 Lecture Notes in Comp Sci 65 8 2 1 pp 128 141 Springer Verlag arXiv 1 9 783 Theor Comput Sci 447 44 52 2 12 special issue for COCOA 2 1 An earlier paper with Spiro at WADS 2 9 provided dynamic graph algorithms for counting how many copies of each possible type of subgraph there are in a larger undirected graph when the subgraphs have at most three vertices This paper extends the method to directed graphs and to larger numbers of vertices per subgraph Graph Theory Publications David Eppstein Theory Group Inf Comp Sci UC Irvine Semi automatically filtered from a common source file ", "_id": "http://www.ics.uci.edu/~eppstein/pubs/graph-dyn.html", "title": "david eppstein - publications", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<html><head>\n<title>David Eppstein - Publications</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body bgcolor=\"#ffffff\" text=\"#000000\">\n<h1>David Eppstein - Publications</h1>\n<hr><p>\n<h2>\nDynamic graph algorithms\n</h2>\n<ul>\n<li><b>Maintenance of a minimum spanning forest in a dynamic plane graph</b>.<br>\nD. Eppstein, \n<a href=\"http://www.info.uniroma2.it/~italiano/\">G.F. Italiano</a>, \n<a href=\"http://www.cs.brown.edu/people/rt/home.html\">R. Tamassia</a>, \n<a href=\"http://www.cs.Princeton.EDU/~ret/\">R.E. Tarjan</a>,\nJ. Westbrook,\nand M. Yung.<br>\n<a href=\"http://portal.acm.org/citation.cfm?id=320177\">\n<i>1st ACM-SIAM Symp. Discrete Algorithms,</i>\nSan Francisco, 1990, pp. 1-11</a>.<br>\n<i>J. Algorithms</i> 13(1):33-54, 1992\n(special issue for 1st Symp. Discrete Algorithms).<br>\nCorrigendum, <i>J. Algorithms</i> 15:173, 1993.\n<p>\nThe complement of a\n<a href=\"mst.html\">minimum spanning tree</a> is a maximum spanning tree in\nthe dual graph.  By applying this fact we can use a modified form of\nSleator and Tarjan's dynamic tree data structure to update the MST in\nlogarithmic time per update.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Maintenance of a minimum spanning forest in a dynamic planar graph\">BibTeX</a> --\n<a href=\"http://fano.ics.uci.edu/cites/Document/Maintenance-of-a-minimum-spanning-forest-in-a-dynamic-planar-graph.html\">Citations</a> --\n<a href=\"http://citeseer.ist.psu.edu/eppstein92maintenance.html\">CiteSeer</a> --\n<a href=\"http://portal.acm.org/citation.cfm?id=139668\">ACM DL</a>)\n<p>\n<li><b>Offline algorithms for dynamic minimum spanning tree problems</b>.<br>\nD. Eppstein.<br>\n<i>2nd Worksh. Algorithms and Data Structures,</i> Ottawa, Canada, 1991.<br>\n<i>Lecture Notes in Comp. Sci.</i> 519, 1991, pp. 392-399.<br>\n<a href=\"Epp-TR-92-04.pdf\">Tech. Rep. 92-04</a>, ICS, UCI, 1992.<br>\n<a href=\"http://dx.doi.org/10.1006/jagm.1994.1033\">\n<i>J. Algorithms</i> 17:237-250, 1994</a>.\n<p>\nGiven a sequence of edge insertions and deletions in a graph,\nfinds the corresponding sequence of minimum spanning tree changes,\nin logarithmic time per update.\nSimilarly solves the planar geometric version of the problem\n(using a novel \"mixed MST\" formulation in which part of the input\nis a graph and part is a point set) in time\nO(log<sup>2</sup> <i>n</i>) for the Euclidean metric and\nO(log <i>n</i> log log <i>n</i>) for the rectilinear metric.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Offline algorithms for dynamic minimum spanning tree problems\">BibTeX</a> --\n<a href=\"http://fano.ics.uci.edu/cites/Document/Offline-algorithms-for-dynamic-minimum-spanning-tree-problems.html\">Citations</a> --\n<a href=\"http://citeseer.ist.psu.edu/eppstein94offline.html\">CiteSeer</a> --\n<a href=\"http://portal.acm.org/citation.cfm?id=185278\">ACM DL (JA)</a>)\n<p>\n<li><b>Asymptotic speed-ups in constructive solid geometry</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-92-87.pdf\">Tech. Rep. 92-87</a>, ICS, UCI, 1992.<br>\n<i>Algorithmica</i> 13:462-471, 1995.\n<p>\nFinds boundary representations of CSG objects.\nUses techniques from dynamic graph algorithms,\nincluding a tree partitioning technique of Frederickson\nand a new data structure for maintaining the value\nof a Boolean expression with changing variables\nin time O(log <i>n</i> / log log <i>n</i>) per update.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Asymptotic speed-ups in constructive solid geometry\">BibTeX</a> --\n<a href=\"http://fano.ics.uci.edu/cites/Document/Asymptotic-speed-ups-in-constructive-solid-geometry.html\">Citations</a>)\n<p>\n<li><b>Sparsification--A technique for speeding up dynamic graph algorithms</b>.<br>\nD. Eppstein,\n<a href=\"http://www.cs.columbia.edu/~galil/\">Z. Galil</a>, \n<a href=\"http://www.info.uniroma2.it/~italiano/\">\nG.F. Italiano</a>, and A. Nissenzweig.<br>\n<i>33rd IEEE Symp. Foundations of Comp. Sci.,</i> Pittsburgh, 1992, pp. 60-69.<br>\nTech. Rep. RC 19272 (83907), IBM, 1993.<br>\nTech. Rep. CS96-11, Univ. Ca' Foscari di Venezia, Oct. 1996.<br>\n<a href=\"http://doi.acm.org/10.1145/265910.265914\"><i>J. ACM</i> 44(5):669-696, 1997</a>.\n<p>\nUses a divide and conquer on the edge set of a graph, together with the\nidea of replacing subgraphs by sparser certificates, to make various\ndynamic algorithms as fast on dense graphs as they are on sparse graphs.\nApplications include random generation of spanning trees\nas well as finding the <i>k</i>\n<a href=\"mst.html\">minimum weight spanning trees</a>\nfor a given parameter <i>k.</i>\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Sparsification --- A technique for speeding up dynamic graph algorithms\">BibTeX</a> --\n<a href=\"http://fano.ics.uci.edu/cites/Document/Sparsification-A-technique-for-speeding-up-dynamic-graph-algorithms.html\">Citations</a> --\n<a href=\"http://theory.lcs.mit.edu/~dmjones/FOCS/References/eppsteingin1992:60.html\">MIT hypertext bibliography</a> --\n<a href=\"http://portal.acm.org/citation.cfm?id=265914\">ACM DL</a>)\n<p>\n<li><b>Improved sparsification</b>.<br>\nD. Eppstein,\n<a href=\"http://www.cs.columbia.edu/~galil/\">Z. Galil</a>, and \n<a href=\"http://www.info.uniroma2.it/~italiano/\">\nG.F. Italiano</a>.<br>\n<a href=\"EppGalIta-TR-93-20.pdf\">Tech. Rep. 93-20</a>, ICS, UCI, 1993.\n<p>\nSaves a log factor over dynamic graph algorithms in\n\"<a href=\"p-sparsification.html\">Sparsification</a>\"\nand their applications, by dividing vertices instead of edges.\nMerged into the journal version of \"Sparsification\".\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Improved sparsification\">BibTeX</a> --\n<a href=\"http://fano.ics.uci.edu/cites/Document/Improved-sparsification.html\">Citations</a> --\n<a href=\"http://citeseer.ist.psu.edu/eppstein93improved.html\">CiteSeer</a>)\n<p>\n<li><b>Separator based sparsification for dynamic planar graph algorithms</b>.<br>\nD. Eppstein,\n<a href=\"http://www.cs.columbia.edu/~galil/\">Z. Galil</a>, \n<a href=\"http://www.info.uniroma2.it/~italiano/\">\nG.F. Italiano</a>, and T. Spencer.<br>\n<a href=\"http://portal.acm.org/citation.cfm?id=167159\"><i>25th ACM Symp. Theory of Computing,</i> San Diego, 1993, pp. 208-217.</a>\n<p>\nReplaces portions of a hierarchical separator decomposition with smaller\ncertificates to achieve fast update times for various dynamic planar graph problems.  Applications include finding the <i>k</i>\n<a href=\"mst.html\">best spanning trees</a> of a planar graph.\n<p>\n(<a href=\"/~eppstein/bibs/eppstein.html#Separator based sparsification for dynamic planar graph algorithms\">BibTeX</a> --\n<a href=\"http://fano.ics.uci.edu/cites/Document/Separator-based-sparsification-for-dynamic-planar-graph-algorithms.html\">Citations</a> --\n<a href=\"http://theory.lcs.mit.edu/~dmjones/STOC/References/eppsteingis1993:208.html\">MIT hypertext bibliography</a>)\n<p>\n<li><b>Separator based sparsification I:\nplanarity testing and minimum spanning trees</b>.<br>\nD. Eppstein,\n<a href=\"http://www.cs.columbia.edu/~galil/\">Z. Galil</a>, \n<a href=\"http://www.info.uniroma2.it/~italiano/\">\nG.F. Italiano</a>, and T. Spencer.<br>\n<a href=\"http://dx.doi.org/10.1006/jcss.1996.0002\">\n<i>J. Comp. Sys. Sci.</i> 52:3-27, 1996\n(special issue for 25th STOC)</a>.\n<p>\nFirst half of journal version of\n<a href=\"p-egis.html\">Separator based sparsification for dynamic planar graph algorithms</a>.\n<p>\n(<a href=\"http://fano.ics.uci.edu/cites/Document/Separator-based-sparsification-I-planarity-testing-and-minimum-spanning-trees.html\">Citations</a> --\n<a href=\"http://portal.acm.org/citation.cfm?id=227486\">ACM DL</a>)\n<p>\n<li><b>Separator based sparsification II: edge and vertex connectivity</b>.<br>\nD. Eppstein,\n<a href=\"http://www.cs.columbia.edu/~galil/\">Z. Galil</a>, \n<a href=\"http://www.info.uniroma2.it/~italiano/\">\nG.F. Italiano</a>, and T. Spencer.<br>\nTech. Rep. CS96-13, Univ. Ca' Foscari di Venezia, Oct. 1996.<br>\n<a href=\"http://dx.doi.org/10.1137/S0097539794269072\"><i>SIAM\nJ. Computing</i> 28(1):341-381, 1999</a>.\n<p>\nSecond half of journal version of\n<a href=\"p-egis.html\">Separator based sparsification for dynamic planar graph algorithms</a>.\n<p>\n(<a href=\"http://fano.ics.uci.edu/cites/Document/Separator-based-sparsification-II-edge-and-vertex-connectivity.html\">Citations</a> --\n<a href=\"http://portal.acm.org/citation.cfm?id=298566\">ACM DL</a>)\n<p>\n<li><b>Faster circle packing with application to nonobtuse triangulation</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-94-33.pdf\">Tech. Rep. 94-33</a>, ICS, UCI 1994.<br>\n<i>Int. J. Comp. Geom. &amp; Appl.</i> 7(5):485-491, 1997.\n<p>\nSpeeds up a triangulation algorithm of Bern et al.\n[\"<a href=\"http://www.nas.nasa.gov/Pubs/TechReports/RNRreports/jruppert/RNR-94-003/RNR-94-003.html\">Linear-Size\nNonobtuse Triangulation of Polygons</a>\"] by finding a\ncollection of disjoint circles\nwhich connect up the holes in a non-simple polygon.\nThe method is to use a\n<a href=\"mst.html\">minimum spanning tree</a> to find a collection of\noverlapping circles, then shrink them one by one to reduce the number of\noverlaps, using Sleator and\nTarjan's dynamic tree data structure to keep track of the\nconnectivity of the shrunken circles.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Faster circle packing with application to nonobtuse triangulation\">BibTeX</a> --\n<a href=\"http://fano.ics.uci.edu/cites/Document/Faster-circle-packing-with-application-to-nonobtuse-triangulation.html\">Citations</a>)\n<p>\n<li><b>Clustering for faster network simplex pivots</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-93-19.pdf\">Tech. Rep. 93-19</a>, ICS, UCI, 1993.<br>\n<a href=\"http://portal.acm.org/citation.cfm?id=314490\">\n<i>5th ACM-SIAM Symp. Discrete Algorithms,</i>\nArlington, 1994, pp. 160-166</a>.<br>\n<i>Networks</i> 35(3):173-180, 2000.\n<p>\nSpeeds up the worst case time per pivot for various versions of\nthe network simplex algorithm for minimum cost flow problems.\nUses techniques from dynamic graph algorithms as well as some simple\ngeometric data structures.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Clustering for faster network simplex pivots\">BibTeX</a> --\n<a href=\"http://citeseer.ist.psu.edu/eppstein93clustering.html\">CiteSeer</a>)\n<p>\n<li><b>Dynamic connectivity in digital images</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-TR-96-13.pdf\">Tech. Rep. 96-13</a>, ICS, UCI, 1996.<br>\n<i>Inf. Proc. Lett.</i> 62:121-126, 1997.\n<p>\nAny algorithm that maintains the connected components\nof a bitmap image must take Omega(log <i>n</i> / log log <i>n</i>)\ntime per change to the image.  The problem can be solved in \nO(log <i>n</i>) time per change using dynamic planar graph techniques.\nWe discuss applications to computer Go and other games.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Dynamic connectivity in digital images\">BibTeX</a> --\n<a href=\"http://fano.ics.uci.edu/cites/Document/Dynamic-connectivity-in-digital-images.html\">Citations</a> --\n<a href=\"http://theory.lcs.mit.edu/~dmjones/hbp/ipl/References/eppstein1997:121.html\">MIT hypertext bibliography</a> --\n<a href=\"http://citeseer.ist.psu.edu/eppstein96dynamic.html\">CiteSeer</a> --\n<a href=\"http://portal.acm.org/citation.cfm?id=259717\">ACM DL</a>)\n<p>\n<li><b>Dynamic graph algorithms</b>.<br>\nD. Eppstein,\n<a href=\"http://www.cs.columbia.edu/~galil/\">Z. Galil</a>, \nand <a href=\"http://www.info.uniroma2.it/~italiano/\">G.F. Italiano</a>.<br>\nTech. Rep. CS96-11, Univ. Ca' Foscari di Venezia, Oct. 1996.<br>\n<a href=\"http://www.info.uniroma2.it/~italiano/Papers/dyn-survey.ps\">\n<i>Algorithms and Theoretical Computing Handbook,</i>\nM. J. Atallah, ed., CRC Press, 1999, chapter 8</a>.<br>\n2nd. ed., CRC Press, 2010, Vol. I: General Concepts and Techniques, chapter 9, pp. 9-1 - 9-28.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Dynamic graph algorithms\">BibTeX</a> --\n<a href=\"http://fano.ics.uci.edu/cites/Document/Dynamic-graph-algorithms.html\">Citations</a> --\n<a href=\"http://citeseer.ist.psu.edu/eppstein99dynamic.html\">CiteSeer</a>)\n<p>\n<li><b>Guest editor's forward to special issue on dynamic graph algorithms</b>.<br>\nD. Eppstein.<br>\n<i>Algorithmica</i> 22(3):233-234, 1998.\n<p>\n<li><b>Graphs for dynamic geometry</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-UVic-00.pdf\">Invited talk</a>,\nWorksh. Dynamic Graph Algorithms, Victoria, Canada, 2000.\n<p>\nThis talk surveys work on computational geometry algorithms that use\n<a href=\"graph-dyn.html\">dynamic graph</a> data structures, and the\ndifferent kinds of geometric graph arising in\nthis work.\n<p>\n<li><b>Dynamic generators of topologically embedded graphs</b>.<br>\nD. Eppstein.<br>\n<a href=\"http://arxiv.org/abs/cs.DS/0207082\">arXiv:cs.DS/0207082</a>.<br>\n<a href=\"http://portal.acm.org/citation.cfm?id=644208\">\n<i>14th ACM-SIAM Symp. Discrete Algorithms,</i>\nBaltimore, 2003, pp. 599-608</a>.\n<p>\nWe describe a decomposition of graphs embedded on 2-dimensional\nmanifolds into three subgraphs: a spanning tree, a dual spanning tree,\nand a set of leftover edges with cardinality determined by the genus of\nthe manifold.  This tree-cotree decomposition allows us to find\nefficient data structures for\n<a href=\"graph-dyn.html\">dynamic graphs</a> (allowing updates\nthat change the surface), better constants in bounded-genus graph\nseparators, and efficient algorithms for tree-decomposition of\nbounded-genus bounded-diameter graphs.\n<p>\n(<a href=\"http://www.ics.uci.edu/~eppstein/bibs/eppstein.html#Dynamic generators of topologically embedded graphs\">BibTeX</a> --\n<a href=\"Epp-SODA-03.pdf\">SODA talk slides</a> --\n<a href=\"http://fano.ics.uci.edu/cites/Document/Dynamic-generators-of-topologically-embedded-graphs.html\">Citations</a>)\n<p>\n<li><b>All maximal independent sets and dynamic dominance for sparse\ngraphs.</b><br>\nD. Eppstein.<br>\n<a href=\"http://arxiv.org/abs/cs.DS/0407036\">arXiv:cs.DS/0407036</a>.<br>\n<i>16th ACM-SIAM Symp. Discrete Algorithms,</i>\nVancouver, 2005, pp. 451-459.<br>\n<a href=\"http://dx.doi.org/10.1145/1597036.1597042\"><i>ACM Trans. Algorithms</i> 5(4):A38, 2009</a>.\n<p>\nWe show how to apply reverse search to list all maximal independent sets\nin bounded-degree graphs in constant time per set, in graphs from minor\nclosed families in linear time per set, and in sparse graphs\nin subquadratic time per set.  The latter two results rely on new\ndata structures for maintaining a dynamic vertex set in a graph\nand quickly testing whether the set dominates all other vertices.\n<p>\n(<a href=\"Epp-SODA-05-talk.pdf\">SODA05 talk slides</a> --\n<a href=\"http://www.ics.uci.edu/~eppstein/bibs/eppstein.html#All maximal independent sets and dynamic dominance for sparse graphs\">BibTeX</a>)\n<p>\n<li><b>The h-index of a graph and its application to dynamic subgraph statistics</b>.<br>\nD. Eppstein and\n<a href=\"http://www.socsci.uci.edu/~sgsa/2008/2008-emma.html\">E. S. Spiro</a>.<br>\n<a href=\"http://arxiv.org/abs/0904.3741\">arXiv:0904.3741</a>.<br>\nAlgorithms and Data Structures Symposium (WADS), Banff, Canada.<br>\n<i>Lecture Notes in Comp. Sci.</i> 5664, 2009, pp. 278-289.<br>\n<a href=\"http://dx.doi.org/10.7155/jgaa.00273\"><i>J. Graph\nAlgorithms and Applications</i> 16(2):543-567, 2012</a>.\n<p>\nWe define the h-index of a graph to be the maximum h such that the graph\nhas h vertices each of which has degree at least h. We show that the\nh-index, and a partition of the graph into high and low degree vertices,\nmay be maintained in constant time per update. Based on this technique,\nwe show how to maintain the number of triangles in a dynamic graph in\ntime O(h) per update; this problem is motivated by Markov Chain Monte\nCaro simulation of the Exponential Random Graph Model used for\nsimulation of social networks. We also prove\nbounds on the h-index for scale-free graphs and investigate the behavior\nof the h-index on a corpus of real social networks.\n<p>\n(<a href=\"WADS09-talks/subgraphs.pdf\">talk slides</a>)\n<p>\n<li><b>Extended dynamic subgraph statistics using <i>h</i>-index parameterized\ndata structures</b>.<br>\nD. Eppstein,\n<a href=\"http://www.ics.uci.edu/~goodrich/\">M. T. Goodrich</a>,\n<a href=\"http://www.ics.uci.edu/~dstrash/\">D. Strash</a>, and\n<a href=\"http://www.ics.uci.edu/~ltrott/\">L. Trott</a>.<br>\n<i>Proc. 4th Int. Conf. on Combinatorial Optimization and Applications\n(COCOA 2010)</i>, Hawaii, 2010.<br>\n<a href=\"http://dx.doi.org/10.1007/978-3-642-17458-2_12\"><i>Lecture Notes in\nComp. Sci.</i> 6508, 2010, pp. 128-141, Springer-Verlag</a>.<br>\n<a href=\"http://arxiv.org/abs/1009.0783\">arXiv:1009.0783</a>.<br>\n<a href=\"http://dx.doi.org/10.1016/j.tcs.2011.11.034\"><i>Theor. Comput. Sci.</i>\n447: 44-52, 2012</a> (special issue for COCOA 2010).\n<p>\nAn earlier paper with Spiro at WADS 2009 provided dynamic graph\nalgorithms for counting how many copies of each possible type of\nsubgraph there are in a larger undirected graph, when the subgraphs have\nat most three vertices. This paper extends the method to directed graphs\nand to larger numbers of vertices per subgraph.\n<p>\n</ul>\n\n<hr><p>\n<a href=\"graph.html\">Graph Theory</a> --\n<a href=\"/~eppstein/pubs/\">Publications</a> --\n<a href=\"/~eppstein/\">David Eppstein</a> --\n<a href=\"/~theory/\">Theory Group</a> --\n<a href=\"/\">Inf. &amp; Comp. Sci.</a> --\n<a href=\"http://www.uci.edu/\">UC Irvine</a>\n<p>\n<small>Semi-automatically <a href=\"filter.html\">filtered</a>\nfrom a common source file.</small>\n</body></html>\n", "id": 2583.0}