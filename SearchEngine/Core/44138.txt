{"text": "Search LoginPreferencesHelp GuideAbout Trac WikiTimelineRoadmapBrowse SourceView TicketsSearch Context Navigation BlameRevision Log source nomatic tags NomaticIM 5 buddy bots src twisted internet tcp py View diff against View revision Visit trunk Last change on this file was 712 checked in by cbaker 7 years ago First draft of nomatic buddy bots oscar bot is functional if you give it good authentication credentials jabber bot is just an example from the web File size 3 6 KB Line 1 test case name twisted test test tcp 2 Copyright c 2 1 2 4 Twisted Matrix Laboratories 3 See LICENSE for details 4567 Various asynchronous TCP IP classes 89End users shouldn t use this module directly use the reactor APIs instead 1 11Maintainer U Itamar Shtull Trauring mailto twisted itamarst org 12 131415 System Imports16import os17import stat18import types19import exceptions2 import socket21import sys22import select23import operator24import warnings2526try 27 import fcntl28except ImportError 29 fcntl None3 from zope interface import implements classImplements3132try 33 from OpenSSL import SSL34except ImportError 35 SSL None3637from twisted python runtime import platform platformType38394 if platformType win32 41 no such thing as WSAEPERM or error code 1 1 according to winsock h or MSDN42 EPERM object 43 from errno import WSAEINVAL as EINVAL44 from errno import WSAEWOULDBLOCK as EWOULDBLOCK45 from errno import WSAEINPROGRESS as EINPROGRESS46 from errno import WSAEALREADY as EALREADY47 from errno import WSAECONNRESET as ECONNRESET48 from errno import WSAEISCONN as EISCONN49 from errno import WSAENOTCONN as ENOTCONN5 from errno import WSAEINTR as EINTR51 from errno import WSAENOBUFS as ENOBUFS52 from errno import WSAEMFILE as EMFILE53 No such thing as WSAENFILE either 54 ENFILE object 55 Nor ENOMEM56 ENOMEM object 57 EAGAIN EWOULDBLOCK58 from errno import WSAECONNRESET as ECONNABORTED59else 6 from errno import EPERM61 from errno import EINVAL62 from errno import EWOULDBLOCK63 from errno import EINPROGRESS64 from errno import EALREADY65 from errno import ECONNRESET66 from errno import EISCONN67 from errno import ENOTCONN68 from errno import EINTR69 from errno import ENOBUFS7 from errno import EMFILE71 from errno import ENFILE72 from errno import ENOMEM73 from errno import EAGAIN74 from errno import ECONNABORTED7576from errno import errorcode7778 Twisted Imports79from twisted internet import protocol defer base address8 from twisted persisted import styles81from twisted python import log failure reflect82from twisted python util import unsignedID83from twisted internet error import CannotListenError8485 Sibling Imports86import abstract87import main88import interfaces89import error9 91class SocketCloser 92 socketShutdownMethod shutdown 9394 def closeSocket self 95 socket close doesn t really close if there s another reference96 to it in the TCP IP stack e g if it was was inherited by a97 subprocess And we really do want to close the connection So we98 use shutdown instead and then close in order to release the99 filedescriptor 1 skt self socket1 1 try 1 2 getattr skt self socketShutdownMethod 2 1 3 except socket error 1 4 pass1 5 try 1 6 skt close 1 7 except socket error 1 8 pass1 911 class TLSMixin 111 socketShutdownMethod sock shutdown 112113 writeBlockedOnRead 114 readBlockedOnWrite 115 userWantRead userWantWrite True116 117 def getPeerCertificate self 118 return self socket get peer certificate 11912 def doRead self 121 if self writeBlockedOnRead 122 self writeBlockedOnRead 123 self resetReadWrite 124 try 125 return Connection doRead self 126 except SSL ZeroReturnError 127 return main CONNECTION DONE128 except SSL WantReadError 129 return13 except SSL WantWriteError 131 self readBlockedOnWrite 1132 Connection startWriting self 133 Connection stopReading self 134 return135 except SSL SysCallError retval desc 136 if retval 1 and desc Unexpected EOF 137 or retval 138 return main CONNECTION LOST139 log err 14 return main CONNECTION LOST141 except SSL Error e 142 return e143144 def doWrite self 145 Retry disconnecting146 if self disconnected 147 return self postLoseConnection 148 if self writeDisconnected 149 return self closeWriteConnection 15 151 if self readBlockedOnWrite 152 self readBlockedOnWrite 153 self resetReadWrite 154 return Connection doWrite self 155156 def writeSomeData self data 157 try 158 return Connection writeSomeData self data 159 except SSL WantWriteError 16 return 161 except SSL WantReadError 162 self writeBlockedOnRead 1163 Connection stopWriting self 164 Connection startReading self 165 return 166 except SSL ZeroReturnError 167 return main CONNECTION LOST168 except SSL SysCallError e 169 if e 1 and data 17 errors when writing empty strings are expected171 and can be ignored172 return 173 else 174 return main CONNECTION LOST175 except SSL Error e 176 return e177178 def postLoseConnection self 179 Gets called after loseConnection after buffered data is sent 18 181 We try to send an SSL shutdown alert but if it doesn t work retry182 when the socket is writable 183 184 self disconnected 1185 if hasattr self socket set shutdown 186 self socket set shutdown SSL RECEIVED SHUTDOWN 187 return self sendCloseAlert 188189 first False19 def sendCloseAlert self 191 Okay THIS is a bit complicated 192 193 Basically the issue is OpenSSL seems to not actually return194 errors from SSL shutdown Therefore the only way to195 determine if the close notification has been sent is by 196 SSL shutdown returning done However it will not claim it s197 done until it s both sent and received a shutdown notification 198199 I don t actually want to wait for a received shutdown2 notification though so I have to set RECEIVED SHUTDOWN2 1 before calling shutdown Then it ll return True once it s2 2 SENT the shutdown 2 32 4 However RECEIVED SHUTDOWN can t be left set because then2 5 reads will fail breaking half close 2 62 7 Also since shutdown doesn t report errors an empty write call is2 8 done first to try to detect if the connection has gone away 2 9 NOT an SSL write call because that fails once you ve called21 shutdown 211 try 212 os write self socket fileno 213 except OSError se 214 if se args in EINTR EWOULDBLOCK ENOBUFS 215 return 216 Write error socket gone217 return main CONNECTION LOST218219 try 22 if hasattr self socket set shutdown 221 laststate self socket get shutdown 222 self socket set shutdown laststate SSL RECEIVED SHUTDOWN 223 done self socket shutdown 224 if not laststate SSL RECEIVED SHUTDOWN 225 self socket set shutdown SSL SENT SHUTDOWN 226 else 227 warnings warn SSL connection shutdown possibly unreliable 228 please upgrade to ver XX category UserWarning 229 self socket shutdown 23 done True231 except SSL Error e 232 return e233234 if done 235 self stopWriting 236 Note that this is tested for by identity below 237 return main CONNECTION DONE238 else 239 self startWriting 24 return None241242 def closeWriteConnection self 243 result self sendCloseAlert 244 245 if result is main CONNECTION DONE 246 return Connection closeWriteConnection self 247 248 return result24925 def startReading self 251 self userWantRead True252 if not self readBlockedOnWrite 253 return Connection startReading self 254255 def stopReading self 256 self userWantRead False257 if not self writeBlockedOnRead 258 return Connection stopReading self 25926 def startWriting self 261 self userWantWrite True262 if not self writeBlockedOnRead 263 return Connection startWriting self 264265 def stopWriting self 266 self userWantWrite False267 if not self readBlockedOnWrite 268 return Connection stopWriting self 26927 def resetReadWrite self 271 After changing readBlockedOnWrite or writeBlockedOnRead 272 call this to reset the state to what the user requested 273 if self userWantWrite 274 self startWriting 275 else 276 self stopWriting 277 278 if self userWantRead 279 self startReading 28 else 281 self stopReading 282283def getTLSClass klass existing 284 if klass not in existing 285 class TLSConnection TLSMixin klass 286 implements interfaces ISSLTransport 287 existing klass TLSConnection288 return existing klass 28929 class Connection abstract FileDescriptor SocketCloser 291 I am the superclass of all socket based FileDescriptors 292293 This is an abstract superclass of all objects which represent a TCP IP294 connection based socket 295 296297 implements interfaces ITCPTransport interfaces ISystemHandle 298299 TLS 3 3 1 def init self skt protocol reactor None 3 2 abstract FileDescriptor init self reactor reactor 3 3 self socket skt3 4 self socket setblocking 3 5 self fileno skt fileno3 6 self protocol protocol3 73 8 if SSL 3 931 def startTLS self ctx 311 assert not self TLS312 error False313 if self dataBuffer or self tempDataBuffer 314 self dataBuffer join self tempDataBuffer 315 self tempDataBuffer 316 self tempDataLen 317 written self writeSomeData buffer self dataBuffer self offset 318 offset self offset319 dataLen len self dataBuffer 32 self offset 321 self dataBuffer 322 if isinstance written Exception or offset written dataLen 323 error True324325326 self stopReading 327 self stopWriting 328 self startTLS 329 self socket SSL Connection ctx getContext self socket 33 self fileno self socket fileno331 self startReading 332 if error 333 warnings warn startTLS with unwritten buffered data currently doesn t work right See issue 686 Closing connection category RuntimeWarning stacklevel 2 334 self loseConnection 335 return336337 def startTLS self 338 self TLS 1339 self class getTLSClass self class 34 341 def getHandle self 342 Return the socket for this connection 343 return self socket344 345 def doRead self 346 Calls self protocol dataReceived with all available data 347348 This reads up to self bufferSize bytes of data from its socket then349 calls self dataReceived data to process it If the connection is not35 lost through an error in the physical recv this function will return351 the result of the dataReceived call 352 353 try 354 data self socket recv self bufferSize 355 except socket error se 356 if se args EWOULDBLOCK 357 return358 else 359 return main CONNECTION LOST36 if not data 361 return main CONNECTION DONE362 return self protocol dataReceived data 363364 def writeSomeData self data 365 Connection writeSomeData data of bytes written CONNECTION LOST366 This writes as much data as possible to the socket and returns either367 the number of bytes read which is positive or a connection error code368 which is negative 369 37 try 371 Limit length of buffer to try to send because some OSes are too372 stupid to do so themselves ahem windows 373 return self socket send buffer data self SEND LIMIT 374 except socket error se 375 if se args EINTR 376 return self writeSomeData data 377 elif se args in EWOULDBLOCK ENOBUFS 378 return 379 else 38 return main CONNECTION LOST381382 def closeWriteConnection self 383 try 384 getattr self socket self socketShutdownMethod 1 385 except socket error 386 pass387 p interfaces IHalfCloseableProtocol self protocol None 388 if p 389 try 39 p writeConnectionLost 391 except 392 f failure Failure 393 log err 394 self connectionLost f 395396 def readConnectionLost self reason 397 p interfaces IHalfCloseableProtocol self protocol None 398 if p 399 try 4 p readConnectionLost 4 1 except 4 2 log err 4 3 self connectionLost failure Failure 4 4 else 4 5 self connectionLost reason 4 6 4 7 def connectionLost self reason 4 8 See abstract FileDescriptor connectionLost 4 9 41 abstract FileDescriptor connectionLost self reason 411 self closeSocket 412 protocol self protocol413 del self protocol414 del self socket415 del self fileno416 protocol connectionLost reason 417418 logstr Uninitialized 41942 def logPrefix self 421 Return the prefix to log with when I own the logging thread 422 423 return self logstr424425 def getTcpNoDelay self 426 return operator truth self socket getsockopt socket IPPROTO TCP socket TCP NODELAY 427428 def setTcpNoDelay self enabled 429 self socket setsockopt socket IPPROTO TCP socket TCP NODELAY enabled 43 431 def getTcpKeepAlive self 432 return operator truth self socket getsockopt socket SOL SOCKET 433 socket SO KEEPALIVE 434435 def setTcpKeepAlive self enabled 436 self socket setsockopt socket SOL SOCKET socket SO KEEPALIVE enabled 437438if SSL 439 classImplements Connection interfaces ITLSTransport 44 441class BaseClient Connection 442 A base class for client TCP and similiar sockets 443 444 addressFamily socket AF INET445 socketType socket SOCK STREAM446447 def finishInit self whenDone skt error reactor 448 Called by base classes to continue to next stage of initialization 449 if whenDone 45 Connection init self skt None reactor 451 self doWrite self doConnect452 self doRead self doConnect453 reactor callLater whenDone 454 else 455 reactor callLater self failIfNotConnected error 456457 def startTLS self ctx client 1 458 holder Connection startTLS self ctx 459 if client 46 self socket set connect state 461 else 462 self socket set accept state 463 return holder464465 def stopConnecting self 466 Stop attempt to connect 467 self failIfNotConnected error UserError 468469 def failIfNotConnected self err 47 471 Generic method called when the attemps to connect failed It basically472 cleans everything it can call connectionFailed stop read and write 473 delete socket related members 474 475 if self connected or self disconnected or 476 not hasattr self connector 477 return478 479 self connector connectionFailed failure Failure err 48 if hasattr self reactor 481 this doesn t happen if we failed in init 482 self stopReading 483 self stopWriting 484 del self connector485486 try 487 self closeSocket 488 except AttributeError 489 pass49 else 491 del self socket self fileno492493 def createInternetSocket self 494 internal Create a non blocking socket using495 self addressFamily self socketType 496 497 s socket socket self addressFamily self socketType 498 s setblocking 499 if fcntl and hasattr fcntl FD CLOEXEC 5 old fcntl fcntl s fileno fcntl F GETFD 5 1 fcntl fcntl s fileno fcntl F SETFD old fcntl FD CLOEXEC 5 2 return s5 35 4 def resolveAddress self 5 5 if abstract isIPAddress self addr 5 6 self setRealAddress self addr 5 7 else 5 8 d self reactor resolve self addr 5 9 d addCallbacks self setRealAddress self failIfNotConnected 51 511 def setRealAddress self address 512 self realAddress address self addr 1 513 self doConnect 514515 def doConnect self 516 I connect the socket 517518 Then call the protocol s makeConnection and start waiting for data 519 52 if not hasattr self connector 521 this happens when connection failed but doConnect522 was scheduled via a callLater in self finishInit523 return524525 err self socket getsockopt socket SOL SOCKET socket SO ERROR 526 if err 527 self failIfNotConnected error getConnectError err os strerror err 528 return52953 531 doConnect gets called twice The first time we actually need to532 start the connection attempt The second time we don t really533 want to SO ERROR above will have taken care of any errors and if534 it reported none the mere fact that doConnect was called again is535 sufficient to indicate that the connection has succeeded but it536 is not particularly detrimental to do so This should get537 cleaned up some day though 538 try 539 connectResult self socket connect ex self realAddress 54 except socket error se 541 connectResult se args 542 if connectResult 543 if connectResult EISCONN 544 pass545 on Windows EINVAL means sometimes that we should keep trying 546 http msdn microsoft com library default asp url library en us winsock winsock connect 2 asp547 elif connectResult in EWOULDBLOCK EINPROGRESS EALREADY or548 connectResult EINVAL and platformType win32 549 self startReading 55 self startWriting 551 return552 else 553 self failIfNotConnected error getConnectError connectResult os strerror connectResult 554 return555556 If I have reached this point without raising or returning that means557 that the socket is connected 558 del self doWrite559 del self doRead56 we first stop and then start to reset any references to the old doRead561 self stopReading 562 self stopWriting 563 self connectDone 564565 def connectDone self 566 self protocol self connector buildProtocol self getPeer 567 self connected 1568 self protocol makeConnection self 569 self logstr self protocol class name client 57 self startReading 571572 def connectionLost self reason 573 if not self connected 574 self failIfNotConnected error ConnectError string reason 575 else 576 Connection connectionLost self reason 577 self connector connectionLost reason 57857958 class Client BaseClient 581 A TCP client 582583 def init self host port bindAddress connector reactor None 584 BaseClient init is invoked later585 self connector connector586 self addr host port 587588 whenDone self resolveAddress589 err None59 skt None591592 try 593 skt self createInternetSocket 594 except socket error se 595 err error ConnectBindError se se 1 596 whenDone None597 if whenDone and bindAddress is not None 598 try 599 skt bind bindAddress 6 except socket error se 6 1 err error ConnectBindError se se 1 6 2 whenDone None6 3 self finishInit whenDone skt err reactor 6 46 5 def getHost self 6 6 Returns an IPv4Address 6 76 8 This indicates the address from which I am connecting 6 9 61 return address IPv4Address TCP self socket getsockname INET 611612 def getPeer self 613 Returns an IPv4Address 614615 This indicates the address that I am connected to 616 617 return address IPv4Address TCP self addr INET 618619 def repr self 62 s s to s at x self class self addr unsignedID self 621 return s622623624class Server Connection 625 Serverside socket stream connection class 626627 I am a serverside network connection transport a socket which came from an628 accept on a server 629 63 631 def init self sock protocol client server sessionno 632 Server sock protocol client server sessionno 633634 Initialize me with a socket a protocol a descriptor for my peer a635 tuple of host port describing the other end of the connection an636 instance of Port and a session number 637 638 Connection init self sock protocol 639 self server server64 self client client641 self sessionno sessionno642 self hostname client 643 self logstr s s s self protocol class name sessionno self hostname 644 self repstr s s on s self protocol class name self sessionno self server port 645 self startReading 646 self connected 1647648 def repr self 649 A string representation of this connection 65 651 return self repstr652653 def startTLS self ctx server 1 654 holder Connection startTLS self ctx 655 if server 656 self socket set accept state 657 else 658 self socket set connect state 659 return holder66 661 def getHost self 662 Returns an IPv4Address 663664 This indicates the server s address 665 666 return address IPv4Address TCP self socket getsockname INET 667668 def getPeer self 669 Returns an IPv4Address 67 671 This indicates the client s address 672 673 return address IPv4Address TCP self client INET 674675class Port base BasePort SocketCloser 676 I am a TCP server port listening for connections 677678 When a connection is accepted I will call my factory s buildProtocol with679 the incoming connection as an argument according to the specification68 described in twisted internet interfaces IProtocolFactory 681682 If you wish to change the sort of transport that will be used my683 transport attribute will be called with the signature expected for684 Server init so it can be replaced 685 686687 implements interfaces IListeningPort 688689 addressFamily socket AF INET69 socketType socket SOCK STREAM691692 transport Server693 sessionno 694 interface 695 backlog 5 696697 Actual port number being listened on only set to a non None698 value when we are actually listening 699 realPortNumber None7 7 1 def init self port factory backlog 5 interface reactor None 7 2 Initialize with a numeric port to listen on 7 3 7 4 base BasePort init self reactor reactor 7 5 self port port7 6 self factory factory7 7 self backlog backlog7 8 self interface interface7 971 def repr self 711 if self realPortNumber is not None 712 return s of s on s self class self factory class 713 self realPortNumber 714 else 715 return s of s not listening self class self factory class 716717 def createInternetSocket self 718 s base BasePort createInternetSocket self 719 if platformType posix and sys platform cygwin 72 s setsockopt socket SOL SOCKET socket SO REUSEADDR 1 721 return s722723 def startListening self 724 Create and bind my socket and begin listening on it 725726 This is called on unserialization and must be called after creating a727 server to begin listening on the specified port 728 729 try 73 skt self createInternetSocket 731 skt bind self interface self port 732 except socket error le 733 raise CannotListenError self interface self port le 734735 Make sure that if we listened on port we update that to736 reflect what the OS actually assigned us 737 self realPortNumber skt getsockname 1 738739 log msg s starting on s self factory class self realPortNumber 74 741 The order of the next 6 lines is kind of bizarre If no one742 can explain it perhaps we should re arrange them 743 self factory doStart 744 skt listen self backlog 745 self connected 1746 self socket skt747 self fileno self socket fileno748 self numberAccepts 1 74975 self startReading 751752 def buildAddr self host port 753 return address ServerFactoryIPv4Address TCP host port 754755 def doRead self 756 Called when my socket is ready for reading 757758 This accepts a connection and calls self protocol to handle the759 wire level protocol 76 761 try 762 if platformType posix 763 numAccepts self numberAccepts764 else 765 win32 event loop breaks if we do more than one accept 766 in an iteration of the event loop 767 numAccepts 1768 for i in range numAccepts 769 we need this so we can deal with a factory s buildProtocol77 calling our loseConnection771 if self disconnecting 772 return773 try 774 skt addr self socket accept 775 except socket error e 776 if e args in EWOULDBLOCK EAGAIN 777 self numberAccepts i778 break779 elif e args EPERM 78 Netfilter on Linux may have rejected the781 connection but we get told to try to accept 782 anyway 783 continue784 elif e args in EMFILE ENOBUFS ENFILE ENOMEM ECONNABORTED 785786 Linux gives EMFILE when a process is not allowed787 to allocate any more file descriptors BSD and788 Win32 give WSA ENOBUFS Linux can also give789 ENFILE if the system is out of inodes or ENOMEM79 if there is insufficient memory to allocate a new791 dentry ECONNABORTED is documented as possible on792 both Linux and Windows but it is not clear793 whether there are actually any circumstances under794 which it can happen one might expect it to be795 possible if a client sends a FIN or RST after the796 server sends a SYN ACK but before application code797 calls accept 2 however at least on Linux this798 seems to be short circuited by syncookies 7998 log msg Could not accept new connection s 8 1 errorcode e args 8 2 break8 3 raise8 48 5 protocol self factory buildProtocol self buildAddr addr 8 6 if protocol is None 8 7 skt close 8 8 continue8 9 s self sessionno81 self sessionno s 1811 transport self transport skt protocol addr self s 812 transport self preMakeConnection transport 813 protocol makeConnection transport 814 else 815 self numberAccepts self numberAccepts 2 816 except 817 Note that in TLS mode this will possibly catch SSL Errors818 raised by self socket accept 819 82 There is no except SSL Error above because SSL may be821 None if there is no SSL support In any case all the822 except SSL Error suite would probably do is log deferr 823 and return so handling it here works just as well 824 log deferr 825826 def preMakeConnection self transport 827 return transport828829 def loseConnection self connDone failure Failure main CONNECTION DONE 83 Stop accepting connections on this port 831832 This will shut down my socket and call self connectionLost 833 It returns a deferred which will fire successfully when the834 port is actually closed 835 836 self disconnecting 1837 self stopReading 838 if self connected 839 self deferred defer Deferred 84 self reactor callLater self connectionLost connDone 841 return self deferred842843 stopListening loseConnection844845 def connectionLost self reason 846 Cleans up my socket 847 848 log msg Port s Closed self realPortNumber 849 self realPortNumber None85 base BasePort connectionLost self reason 851 self connected 852 self closeSocket 853 del self socket854 del self fileno855 self factory doStop 856 if hasattr self deferred 857 self deferred callback None 858 del self deferred85986 def logPrefix self 861 Returns the name of my class to prefix log entries with 862 863 return reflect qual self factory class 864865 def getHost self 866 Returns an IPv4Address 867868 This indicates the server s address 869 87 return address IPv4Address TCP self socket getsockname INET 871872class Connector base BaseConnector 873 def init self host port factory timeout bindAddress reactor None 874 self host host875 if isinstance port types StringTypes 876 try 877 port socket getservbyname port tcp 878 except socket error e 879 raise error ServiceNameUnknownError string s r e port 88 self port port881 self bindAddress bindAddress882 base BaseConnector init self factory timeout reactor 883884 def makeTransport self 885 return Client self host self port self bindAddress self self reactor 886887 def getDestination self 888 return address IPv4Address TCP self host self port INET Note See TracBrowser for help on using the repository browser Download in other formats Plain Text Original Format Powered by Trac 1 1 By Edgewall Software All content copyright 2 7 2 8 by LUCI http luci ics uci edu ", "_id": "http://djp3-pc2.ics.uci.edu/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/tcp.py", "title": "\n      tcp.py in nomatic/tags/nomaticim-0.0.5/buddy_bots/src/twisted/internet\n     \u2013 nomatic*im\n    ", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n  \n\n\n  <head>\n\t\t<title>\n      tcp.py in nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet\n     \u2013 Nomatic*IM\n    </title><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><link rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search\" /><link rel=\"help\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/tcp.py?format=txt\" type=\"text/plain\" title=\"Plain Text\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/tcp.py\" type=\"application/x-python; charset=iso-8859-15\" title=\"Original Format\" /><link rel=\"start\" href=\"/LUCICodeRepository/nomaticIM/wiki\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/code.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/pygments/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/browser.css\" type=\"text/css\" /><link rel=\"shortcut icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link rel=\"icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link type=\"application/opensearchdescription+xml\" rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search/opensearch\" title=\"Search Nomatic*IM\" /><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/jquery.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/babel.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/messages/en_US.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/trac.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/search.js\"></script><script type=\"text/javascript\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/folding.js\"></script><script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\".trac-toggledeleted\").show().click(function() {\n                  $(this).siblings().find(\".trac-deleted\").toggle();\n                  return false;\n        }).click();\n        $(\"#jumploc input\").hide();\n        $(\"#jumploc select\").change(function () {\n          this.parentNode.parentNode.submit();\n        });\n          $('#preview table.code').enableCollapsibleColumns($('#preview table.code thead th.content'));\n      });\n    </script>\n\t</head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://luci.ics.uci.edu/#code\"><img src=\"http://luci.ics.uci.edu/blog/archives/LUCIhorzTight.jpg\" alt=\"LUCI Code Repository\" /></a>\n      </div>\n      <form id=\"search\" action=\"/LUCICodeRepository/nomaticIM/search\" method=\"get\">\n        <div>\n          <label for=\"proj-search\">Search:</label>\n          <input type=\"text\" id=\"proj-search\" name=\"q\" size=\"18\" value=\"\" />\n          <input type=\"submit\" value=\"Search\" />\n        </div>\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/login\">Login</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/prefs\">Preferences</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\">Help/Guide</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/wiki\">Wiki</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/timeline\">Timeline</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/roadmap\">Roadmap</a></li><li class=\"active\"><a href=\"/LUCICodeRepository/nomaticIM/browser\">Browse Source</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/report\">View Tickets</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/search\">Search</a></li>\n    </ul>\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/buddy_bots/twisted/internet/tcp.py?annotate=blame\" title=\"Annotate each line with the last changed revision (this can be time consuming...)\">Blame</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/log/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/tcp.py\">Revision Log</a></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"browser\">\n        <h1>\n          \n<a class=\"pathentry first\" href=\"/LUCICodeRepository/nomaticIM/browser?order=name\" title=\"Go to repository root\">source:</a>\n<a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic?order=name\" title=\"View nomatic\">nomatic</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags?order=name\" title=\"View tags\">tags</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5?order=name\" title=\"View NomaticIM-0.0.5\">NomaticIM-0.0.5</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots?order=name\" title=\"View buddy_bots\">buddy_bots</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src?order=name\" title=\"View src\">src</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted?order=name\" title=\"View twisted\">twisted</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet?order=name\" title=\"View internet\">internet</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/tcp.py?order=name\" title=\"View tcp.py\">tcp.py</a>\n<br style=\"clear: both\" />\n\n        </h1>\n        <div id=\"diffrev\">\n          <form action=\"/LUCICodeRepository/nomaticIM/changeset\" method=\"get\">\n            <div>\n              <label title=\"Show the diff against a specific revision\">\n                View diff against: <input type=\"text\" name=\"old\" size=\"6\" />\n                <input type=\"hidden\" name=\"old_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/tcp.py\" />\n                <input type=\"hidden\" name=\"new\" />\n                <input type=\"hidden\" name=\"new_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/tcp.py\" />\n              </label>\n            </div>\n          </form>\n        </div>\n        <div id=\"jumprev\">\n          <form action=\"\" method=\"get\">\n            <div>\n              <label for=\"rev\">\n                View revision:</label>\n              <input type=\"text\" id=\"rev\" name=\"rev\" size=\"6\" />\n            </div>\n          </form>\n        </div>\n        <div id=\"jumploc\">\n          <form action=\"\" method=\"get\">\n            <div class=\"buttons\">\n              <label for=\"preselected\">Visit:</label>\n              <select id=\"preselected\" name=\"preselected\">\n                <option selected=\"selected\"></option>\n                <optgroup label=\"branches\">\n                  <option value=\"/LUCICodeRepository/nomaticIM/browser/trunk\">trunk</option>\n                </optgroup>\n              </select>\n              <input type=\"submit\" value=\"Go!\" title=\"Jump to the chosen preselected path\" />\n            </div>\n          </form>\n        </div>\n        <div class=\"trac-tags\">\n        </div>\n      <table id=\"info\" summary=\"Revision info\">\n        <tr>\n          <th>\n                <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/nomatic/trunk/buddy_bots/twisted/internet/tcp.py\" title=\"View differences\">Last change</a>\n                  on this file was\n                  <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/\" title=\"View changeset 712\">712</a>,\n                  checked in by cbaker, <a class=\"timeline\" href=\"/LUCICodeRepository/nomaticIM/timeline?from=2008-02-16T08%3A16%3A53-08%3A00&amp;precision=second\" title=\"See timeline at Feb 16, 2008, 8:16:53 AM\">7 years ago</a>\n          </th>\n        </tr>\n        <tr>\n          <td class=\"message searchable\">\n              <p>\nFirst draft of nomatic buddy bots. oscar_bot is functional if you give it good authentication credentials, jabber_bot is just an example from the web <br />\n</p>\n          </td>\n        </tr>\n        <tr><td colspan=\"2\">\n            <strong>File size:</strong>\n            <span title=\"31318 bytes\">30.6 KB</span>\n          </td></tr>\n      </table>\n      <div id=\"preview\" class=\"searchable\">\n        \n  <table class=\"code\"><thead><tr><th class=\"lineno\" title=\"Line numbers\">Line</th><th class=\"content\">\u00a0</th></tr></thead><tbody><tr><th id=\"L1\"><a href=\"#L1\">1</a></th><td><span class=\"c\"># -*- test-case-name: twisted.test.test_tcp -*-</span></td></tr><tr><th id=\"L2\"><a href=\"#L2\">2</a></th><td><span class=\"c\"># Copyright (c) 2001-2004 Twisted Matrix Laboratories.</span></td></tr><tr><th id=\"L3\"><a href=\"#L3\">3</a></th><td><span class=\"c\"># See LICENSE for details.</span></td></tr><tr><th id=\"L4\"><a href=\"#L4\">4</a></th><td></td></tr><tr><th id=\"L5\"><a href=\"#L5\">5</a></th><td></td></tr><tr><th id=\"L6\"><a href=\"#L6\">6</a></th><td></td></tr><tr><th id=\"L7\"><a href=\"#L7\">7</a></th><td><span class=\"sd\">\"\"\"Various asynchronous TCP/IP classes.</span></td></tr><tr><th id=\"L8\"><a href=\"#L8\">8</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L9\"><a href=\"#L9\">9</a></th><td><span class=\"sd\">End users shouldn't use this module directly - use the reactor APIs instead.</span></td></tr><tr><th id=\"L10\"><a href=\"#L10\">10</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L11\"><a href=\"#L11\">11</a></th><td><span class=\"sd\">Maintainer: U{Itamar Shtull-Trauring&lt;mailto:twisted@itamarst.org&gt;}</span></td></tr><tr><th id=\"L12\"><a href=\"#L12\">12</a></th><td><span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L13\"><a href=\"#L13\">13</a></th><td></td></tr><tr><th id=\"L14\"><a href=\"#L14\">14</a></th><td></td></tr><tr><th id=\"L15\"><a href=\"#L15\">15</a></th><td><span class=\"c\"># System Imports</span></td></tr><tr><th id=\"L16\"><a href=\"#L16\">16</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">os</span></td></tr><tr><th id=\"L17\"><a href=\"#L17\">17</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">stat</span></td></tr><tr><th id=\"L18\"><a href=\"#L18\">18</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">types</span></td></tr><tr><th id=\"L19\"><a href=\"#L19\">19</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">exceptions</span></td></tr><tr><th id=\"L20\"><a href=\"#L20\">20</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">socket</span></td></tr><tr><th id=\"L21\"><a href=\"#L21\">21</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">sys</span></td></tr><tr><th id=\"L22\"><a href=\"#L22\">22</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">select</span></td></tr><tr><th id=\"L23\"><a href=\"#L23\">23</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">operator</span></td></tr><tr><th id=\"L24\"><a href=\"#L24\">24</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">warnings</span></td></tr><tr><th id=\"L25\"><a href=\"#L25\">25</a></th><td></td></tr><tr><th id=\"L26\"><a href=\"#L26\">26</a></th><td><span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L27\"><a href=\"#L27\">27</a></th><td>\u00a0 \u00a0 <span class=\"kn\">import</span>\u00a0<span class=\"nn\">fcntl</span></td></tr><tr><th id=\"L28\"><a href=\"#L28\">28</a></th><td><span class=\"k\">except</span>\u00a0<span class=\"ne\">ImportError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L29\"><a href=\"#L29\">29</a></th><td>\u00a0 \u00a0 fcntl <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L30\"><a href=\"#L30\">30</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">zope.interface</span>\u00a0<span class=\"kn\">import</span>\u00a0implements<span class=\"p\">,</span>\u00a0classImplements</td></tr><tr><th id=\"L31\"><a href=\"#L31\">31</a></th><td></td></tr><tr><th id=\"L32\"><a href=\"#L32\">32</a></th><td><span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L33\"><a href=\"#L33\">33</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">OpenSSL</span>\u00a0<span class=\"kn\">import</span>\u00a0SSL</td></tr><tr><th id=\"L34\"><a href=\"#L34\">34</a></th><td><span class=\"k\">except</span>\u00a0<span class=\"ne\">ImportError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L35\"><a href=\"#L35\">35</a></th><td>\u00a0 \u00a0 SSL <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L36\"><a href=\"#L36\">36</a></th><td></td></tr><tr><th id=\"L37\"><a href=\"#L37\">37</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.python.runtime</span>\u00a0<span class=\"kn\">import</span>\u00a0platform<span class=\"p\">,</span>\u00a0platformType</td></tr><tr><th id=\"L38\"><a href=\"#L38\">38</a></th><td></td></tr><tr><th id=\"L39\"><a href=\"#L39\">39</a></th><td></td></tr><tr><th id=\"L40\"><a href=\"#L40\">40</a></th><td><span class=\"k\">if</span>\u00a0platformType <span class=\"o\">==</span>\u00a0<span class=\"s\">'win32'</span><span class=\"p\">:</span></td></tr><tr><th id=\"L41\"><a href=\"#L41\">41</a></th><td>\u00a0 \u00a0 <span class=\"c\"># no such thing as WSAEPERM or error code 10001 according to winsock.h or MSDN</span></td></tr><tr><th id=\"L42\"><a href=\"#L42\">42</a></th><td>\u00a0 \u00a0 EPERM <span class=\"o\">=</span>\u00a0<span class=\"nb\">object</span><span class=\"p\">()</span></td></tr><tr><th id=\"L43\"><a href=\"#L43\">43</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">errno</span>\u00a0<span class=\"kn\">import</span>\u00a0WSAEINVAL <span class=\"k\">as</span>\u00a0EINVAL</td></tr><tr><th id=\"L44\"><a href=\"#L44\">44</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">errno</span>\u00a0<span class=\"kn\">import</span>\u00a0WSAEWOULDBLOCK <span class=\"k\">as</span>\u00a0EWOULDBLOCK</td></tr><tr><th id=\"L45\"><a href=\"#L45\">45</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">errno</span>\u00a0<span class=\"kn\">import</span>\u00a0WSAEINPROGRESS <span class=\"k\">as</span>\u00a0EINPROGRESS</td></tr><tr><th id=\"L46\"><a href=\"#L46\">46</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">errno</span>\u00a0<span class=\"kn\">import</span>\u00a0WSAEALREADY <span class=\"k\">as</span>\u00a0EALREADY</td></tr><tr><th id=\"L47\"><a href=\"#L47\">47</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">errno</span>\u00a0<span class=\"kn\">import</span>\u00a0WSAECONNRESET <span class=\"k\">as</span>\u00a0ECONNRESET</td></tr><tr><th id=\"L48\"><a href=\"#L48\">48</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">errno</span>\u00a0<span class=\"kn\">import</span>\u00a0WSAEISCONN <span class=\"k\">as</span>\u00a0EISCONN</td></tr><tr><th id=\"L49\"><a href=\"#L49\">49</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">errno</span>\u00a0<span class=\"kn\">import</span>\u00a0WSAENOTCONN <span class=\"k\">as</span>\u00a0ENOTCONN</td></tr><tr><th id=\"L50\"><a href=\"#L50\">50</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">errno</span>\u00a0<span class=\"kn\">import</span>\u00a0WSAEINTR <span class=\"k\">as</span>\u00a0EINTR</td></tr><tr><th id=\"L51\"><a href=\"#L51\">51</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">errno</span>\u00a0<span class=\"kn\">import</span>\u00a0WSAENOBUFS <span class=\"k\">as</span>\u00a0ENOBUFS</td></tr><tr><th id=\"L52\"><a href=\"#L52\">52</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">errno</span>\u00a0<span class=\"kn\">import</span>\u00a0WSAEMFILE <span class=\"k\">as</span>\u00a0EMFILE</td></tr><tr><th id=\"L53\"><a href=\"#L53\">53</a></th><td>\u00a0 \u00a0 <span class=\"c\"># No such thing as WSAENFILE, either.</span></td></tr><tr><th id=\"L54\"><a href=\"#L54\">54</a></th><td>\u00a0 \u00a0 ENFILE <span class=\"o\">=</span>\u00a0<span class=\"nb\">object</span><span class=\"p\">()</span></td></tr><tr><th id=\"L55\"><a href=\"#L55\">55</a></th><td>\u00a0 \u00a0 <span class=\"c\"># Nor ENOMEM</span></td></tr><tr><th id=\"L56\"><a href=\"#L56\">56</a></th><td>\u00a0 \u00a0 ENOMEM <span class=\"o\">=</span>\u00a0<span class=\"nb\">object</span><span class=\"p\">()</span></td></tr><tr><th id=\"L57\"><a href=\"#L57\">57</a></th><td>\u00a0 \u00a0 EAGAIN <span class=\"o\">=</span>\u00a0EWOULDBLOCK</td></tr><tr><th id=\"L58\"><a href=\"#L58\">58</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">errno</span>\u00a0<span class=\"kn\">import</span>\u00a0WSAECONNRESET <span class=\"k\">as</span>\u00a0ECONNABORTED</td></tr><tr><th id=\"L59\"><a href=\"#L59\">59</a></th><td><span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L60\"><a href=\"#L60\">60</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">errno</span>\u00a0<span class=\"kn\">import</span>\u00a0EPERM</td></tr><tr><th id=\"L61\"><a href=\"#L61\">61</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">errno</span>\u00a0<span class=\"kn\">import</span>\u00a0EINVAL</td></tr><tr><th id=\"L62\"><a href=\"#L62\">62</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">errno</span>\u00a0<span class=\"kn\">import</span>\u00a0EWOULDBLOCK</td></tr><tr><th id=\"L63\"><a href=\"#L63\">63</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">errno</span>\u00a0<span class=\"kn\">import</span>\u00a0EINPROGRESS</td></tr><tr><th id=\"L64\"><a href=\"#L64\">64</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">errno</span>\u00a0<span class=\"kn\">import</span>\u00a0EALREADY</td></tr><tr><th id=\"L65\"><a href=\"#L65\">65</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">errno</span>\u00a0<span class=\"kn\">import</span>\u00a0ECONNRESET</td></tr><tr><th id=\"L66\"><a href=\"#L66\">66</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">errno</span>\u00a0<span class=\"kn\">import</span>\u00a0EISCONN</td></tr><tr><th id=\"L67\"><a href=\"#L67\">67</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">errno</span>\u00a0<span class=\"kn\">import</span>\u00a0ENOTCONN</td></tr><tr><th id=\"L68\"><a href=\"#L68\">68</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">errno</span>\u00a0<span class=\"kn\">import</span>\u00a0EINTR</td></tr><tr><th id=\"L69\"><a href=\"#L69\">69</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">errno</span>\u00a0<span class=\"kn\">import</span>\u00a0ENOBUFS</td></tr><tr><th id=\"L70\"><a href=\"#L70\">70</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">errno</span>\u00a0<span class=\"kn\">import</span>\u00a0EMFILE</td></tr><tr><th id=\"L71\"><a href=\"#L71\">71</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">errno</span>\u00a0<span class=\"kn\">import</span>\u00a0ENFILE</td></tr><tr><th id=\"L72\"><a href=\"#L72\">72</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">errno</span>\u00a0<span class=\"kn\">import</span>\u00a0ENOMEM</td></tr><tr><th id=\"L73\"><a href=\"#L73\">73</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">errno</span>\u00a0<span class=\"kn\">import</span>\u00a0EAGAIN</td></tr><tr><th id=\"L74\"><a href=\"#L74\">74</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">errno</span>\u00a0<span class=\"kn\">import</span>\u00a0ECONNABORTED</td></tr><tr><th id=\"L75\"><a href=\"#L75\">75</a></th><td></td></tr><tr><th id=\"L76\"><a href=\"#L76\">76</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">errno</span>\u00a0<span class=\"kn\">import</span>\u00a0errorcode</td></tr><tr><th id=\"L77\"><a href=\"#L77\">77</a></th><td></td></tr><tr><th id=\"L78\"><a href=\"#L78\">78</a></th><td><span class=\"c\"># Twisted Imports</span></td></tr><tr><th id=\"L79\"><a href=\"#L79\">79</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet</span>\u00a0<span class=\"kn\">import</span>\u00a0protocol<span class=\"p\">,</span>\u00a0defer<span class=\"p\">,</span>\u00a0base<span class=\"p\">,</span>\u00a0address</td></tr><tr><th id=\"L80\"><a href=\"#L80\">80</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.persisted</span>\u00a0<span class=\"kn\">import</span>\u00a0styles</td></tr><tr><th id=\"L81\"><a href=\"#L81\">81</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.python</span>\u00a0<span class=\"kn\">import</span>\u00a0log<span class=\"p\">,</span>\u00a0failure<span class=\"p\">,</span>\u00a0reflect</td></tr><tr><th id=\"L82\"><a href=\"#L82\">82</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.python.util</span>\u00a0<span class=\"kn\">import</span>\u00a0unsignedID</td></tr><tr><th id=\"L83\"><a href=\"#L83\">83</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet.error</span>\u00a0<span class=\"kn\">import</span>\u00a0CannotListenError</td></tr><tr><th id=\"L84\"><a href=\"#L84\">84</a></th><td></td></tr><tr><th id=\"L85\"><a href=\"#L85\">85</a></th><td><span class=\"c\"># Sibling Imports</span></td></tr><tr><th id=\"L86\"><a href=\"#L86\">86</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">abstract</span></td></tr><tr><th id=\"L87\"><a href=\"#L87\">87</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">main</span></td></tr><tr><th id=\"L88\"><a href=\"#L88\">88</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">interfaces</span></td></tr><tr><th id=\"L89\"><a href=\"#L89\">89</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">error</span></td></tr><tr><th id=\"L90\"><a href=\"#L90\">90</a></th><td></td></tr><tr><th id=\"L91\"><a href=\"#L91\">91</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">_SocketCloser</span><span class=\"p\">:</span></td></tr><tr><th id=\"L92\"><a href=\"#L92\">92</a></th><td>\u00a0 \u00a0 _socketShutdownMethod <span class=\"o\">=</span>\u00a0<span class=\"s\">'shutdown'</span></td></tr><tr><th id=\"L93\"><a href=\"#L93\">93</a></th><td></td></tr><tr><th id=\"L94\"><a href=\"#L94\">94</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_closeSocket</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L95\"><a href=\"#L95\">95</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># socket.close() doesn't *really* close if there's another reference</span></td></tr><tr><th id=\"L96\"><a href=\"#L96\">96</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># to it in the TCP/IP stack, e.g. if it was was inherited by a</span></td></tr><tr><th id=\"L97\"><a href=\"#L97\">97</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># subprocess. And we really do want to close the connection. So we</span></td></tr><tr><th id=\"L98\"><a href=\"#L98\">98</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># use shutdown() instead, and then close() in order to release the</span></td></tr><tr><th id=\"L99\"><a href=\"#L99\">99</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># filedescriptor.</span></td></tr><tr><th id=\"L100\"><a href=\"#L100\">100</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 skt <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>socket</td></tr><tr><th id=\"L101\"><a href=\"#L101\">101</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L102\"><a href=\"#L102\">102</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">getattr</span><span class=\"p\">(</span>skt<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_socketShutdownMethod<span class=\"p\">)(</span><span class=\"mi\">2</span><span class=\"p\">)</span></td></tr><tr><th id=\"L103\"><a href=\"#L103\">103</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0socket<span class=\"o\">.</span>error<span class=\"p\">:</span></td></tr><tr><th id=\"L104\"><a href=\"#L104\">104</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L105\"><a href=\"#L105\">105</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L106\"><a href=\"#L106\">106</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 skt<span class=\"o\">.</span>close<span class=\"p\">()</span></td></tr><tr><th id=\"L107\"><a href=\"#L107\">107</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0socket<span class=\"o\">.</span>error<span class=\"p\">:</span></td></tr><tr><th id=\"L108\"><a href=\"#L108\">108</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L109\"><a href=\"#L109\">109</a></th><td></td></tr><tr><th id=\"L110\"><a href=\"#L110\">110</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">_TLSMixin</span><span class=\"p\">:</span></td></tr><tr><th id=\"L111\"><a href=\"#L111\">111</a></th><td>\u00a0 \u00a0 _socketShutdownMethod <span class=\"o\">=</span>\u00a0<span class=\"s\">'sock_shutdown'</span></td></tr><tr><th id=\"L112\"><a href=\"#L112\">112</a></th><td></td></tr><tr><th id=\"L113\"><a href=\"#L113\">113</a></th><td>\u00a0 \u00a0 writeBlockedOnRead <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L114\"><a href=\"#L114\">114</a></th><td>\u00a0 \u00a0 readBlockedOnWrite <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L115\"><a href=\"#L115\">115</a></th><td>\u00a0 \u00a0 _userWantRead <span class=\"o\">=</span>\u00a0_userWantWrite <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L116\"><a href=\"#L116\">116</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L117\"><a href=\"#L117\">117</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getPeerCertificate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L118\"><a href=\"#L118\">118</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>get_peer_certificate<span class=\"p\">()</span></td></tr><tr><th id=\"L119\"><a href=\"#L119\">119</a></th><td></td></tr><tr><th id=\"L120\"><a href=\"#L120\">120</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">doRead</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L121\"><a href=\"#L121\">121</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>writeBlockedOnRead<span class=\"p\">:</span></td></tr><tr><th id=\"L122\"><a href=\"#L122\">122</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>writeBlockedOnRead <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L123\"><a href=\"#L123\">123</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_resetReadWrite<span class=\"p\">()</span></td></tr><tr><th id=\"L124\"><a href=\"#L124\">124</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L125\"><a href=\"#L125\">125</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0Connection<span class=\"o\">.</span>doRead<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L126\"><a href=\"#L126\">126</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0SSL<span class=\"o\">.</span>ZeroReturnError<span class=\"p\">:</span></td></tr><tr><th id=\"L127\"><a href=\"#L127\">127</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0main<span class=\"o\">.</span>CONNECTION_DONE</td></tr><tr><th id=\"L128\"><a href=\"#L128\">128</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0SSL<span class=\"o\">.</span>WantReadError<span class=\"p\">:</span></td></tr><tr><th id=\"L129\"><a href=\"#L129\">129</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span></td></tr><tr><th id=\"L130\"><a href=\"#L130\">130</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0SSL<span class=\"o\">.</span>WantWriteError<span class=\"p\">:</span></td></tr><tr><th id=\"L131\"><a href=\"#L131\">131</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>readBlockedOnWrite <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L132\"><a href=\"#L132\">132</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Connection<span class=\"o\">.</span>startWriting<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L133\"><a href=\"#L133\">133</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Connection<span class=\"o\">.</span>stopReading<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L134\"><a href=\"#L134\">134</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span></td></tr><tr><th id=\"L135\"><a href=\"#L135\">135</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0SSL<span class=\"o\">.</span>SysCallError<span class=\"p\">,</span>\u00a0<span class=\"p\">(</span>retval<span class=\"p\">,</span>\u00a0desc<span class=\"p\">):</span></td></tr><tr><th id=\"L136\"><a href=\"#L136\">136</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"p\">((</span>retval <span class=\"o\">==</span>\u00a0<span class=\"o\">-</span><span class=\"mi\">1</span>\u00a0<span class=\"ow\">and</span>\u00a0desc <span class=\"o\">==</span>\u00a0<span class=\"s\">'Unexpected EOF'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L137\"><a href=\"#L137\">137</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"ow\">or</span>\u00a0retval <span class=\"o\">&gt;</span>\u00a0<span class=\"mi\">0</span><span class=\"p\">):</span></td></tr><tr><th id=\"L138\"><a href=\"#L138\">138</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0main<span class=\"o\">.</span>CONNECTION_LOST</td></tr><tr><th id=\"L139\"><a href=\"#L139\">139</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log<span class=\"o\">.</span>err<span class=\"p\">()</span></td></tr><tr><th id=\"L140\"><a href=\"#L140\">140</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0main<span class=\"o\">.</span>CONNECTION_LOST</td></tr><tr><th id=\"L141\"><a href=\"#L141\">141</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0SSL<span class=\"o\">.</span>Error<span class=\"p\">,</span>\u00a0e<span class=\"p\">:</span></td></tr><tr><th id=\"L142\"><a href=\"#L142\">142</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0e</td></tr><tr><th id=\"L143\"><a href=\"#L143\">143</a></th><td></td></tr><tr><th id=\"L144\"><a href=\"#L144\">144</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">doWrite</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L145\"><a href=\"#L145\">145</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Retry disconnecting</span></td></tr><tr><th id=\"L146\"><a href=\"#L146\">146</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>disconnected<span class=\"p\">:</span></td></tr><tr><th id=\"L147\"><a href=\"#L147\">147</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_postLoseConnection<span class=\"p\">()</span></td></tr><tr><th id=\"L148\"><a href=\"#L148\">148</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_writeDisconnected<span class=\"p\">:</span></td></tr><tr><th id=\"L149\"><a href=\"#L149\">149</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_closeWriteConnection<span class=\"p\">()</span></td></tr><tr><th id=\"L150\"><a href=\"#L150\">150</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 </td></tr><tr><th id=\"L151\"><a href=\"#L151\">151</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>readBlockedOnWrite<span class=\"p\">:</span></td></tr><tr><th id=\"L152\"><a href=\"#L152\">152</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>readBlockedOnWrite <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L153\"><a href=\"#L153\">153</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_resetReadWrite<span class=\"p\">()</span></td></tr><tr><th id=\"L154\"><a href=\"#L154\">154</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0Connection<span class=\"o\">.</span>doWrite<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L155\"><a href=\"#L155\">155</a></th><td></td></tr><tr><th id=\"L156\"><a href=\"#L156\">156</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">writeSomeData</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0data<span class=\"p\">):</span></td></tr><tr><th id=\"L157\"><a href=\"#L157\">157</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L158\"><a href=\"#L158\">158</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0Connection<span class=\"o\">.</span>writeSomeData<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0data<span class=\"p\">)</span></td></tr><tr><th id=\"L159\"><a href=\"#L159\">159</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0SSL<span class=\"o\">.</span>WantWriteError<span class=\"p\">:</span></td></tr><tr><th id=\"L160\"><a href=\"#L160\">160</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L161\"><a href=\"#L161\">161</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0SSL<span class=\"o\">.</span>WantReadError<span class=\"p\">:</span></td></tr><tr><th id=\"L162\"><a href=\"#L162\">162</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>writeBlockedOnRead <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L163\"><a href=\"#L163\">163</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Connection<span class=\"o\">.</span>stopWriting<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L164\"><a href=\"#L164\">164</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Connection<span class=\"o\">.</span>startReading<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L165\"><a href=\"#L165\">165</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L166\"><a href=\"#L166\">166</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0SSL<span class=\"o\">.</span>ZeroReturnError<span class=\"p\">:</span></td></tr><tr><th id=\"L167\"><a href=\"#L167\">167</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0main<span class=\"o\">.</span>CONNECTION_LOST</td></tr><tr><th id=\"L168\"><a href=\"#L168\">168</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0SSL<span class=\"o\">.</span>SysCallError<span class=\"p\">,</span>\u00a0e<span class=\"p\">:</span></td></tr><tr><th id=\"L169\"><a href=\"#L169\">169</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0e<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\u00a0<span class=\"o\">==</span>\u00a0<span class=\"o\">-</span><span class=\"mi\">1</span>\u00a0<span class=\"ow\">and</span>\u00a0data <span class=\"o\">==</span>\u00a0<span class=\"s\">\"\"</span><span class=\"p\">:</span></td></tr><tr><th id=\"L170\"><a href=\"#L170\">170</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># errors when writing empty strings are expected</span></td></tr><tr><th id=\"L171\"><a href=\"#L171\">171</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># and can be ignored</span></td></tr><tr><th id=\"L172\"><a href=\"#L172\">172</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L173\"><a href=\"#L173\">173</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L174\"><a href=\"#L174\">174</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0main<span class=\"o\">.</span>CONNECTION_LOST</td></tr><tr><th id=\"L175\"><a href=\"#L175\">175</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0SSL<span class=\"o\">.</span>Error<span class=\"p\">,</span>\u00a0e<span class=\"p\">:</span></td></tr><tr><th id=\"L176\"><a href=\"#L176\">176</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0e</td></tr><tr><th id=\"L177\"><a href=\"#L177\">177</a></th><td></td></tr><tr><th id=\"L178\"><a href=\"#L178\">178</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_postLoseConnection</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L179\"><a href=\"#L179\">179</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Gets called after loseConnection(), after buffered data is sent.</span></td></tr><tr><th id=\"L180\"><a href=\"#L180\">180</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L181\"><a href=\"#L181\">181</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 We try to send an SSL shutdown alert, but if it doesn't work, retry</span></td></tr><tr><th id=\"L182\"><a href=\"#L182\">182</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 when the socket is writable.</span></td></tr><tr><th id=\"L183\"><a href=\"#L183\">183</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L184\"><a href=\"#L184\">184</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>disconnected<span class=\"o\">=</span><span class=\"mi\">1</span></td></tr><tr><th id=\"L185\"><a href=\"#L185\">185</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"p\">,</span>\u00a0<span class=\"s\">'set_shutdown'</span><span class=\"p\">):</span></td></tr><tr><th id=\"L186\"><a href=\"#L186\">186</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>set_shutdown<span class=\"p\">(</span>SSL<span class=\"o\">.</span>RECEIVED_SHUTDOWN<span class=\"p\">)</span></td></tr><tr><th id=\"L187\"><a href=\"#L187\">187</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_sendCloseAlert<span class=\"p\">()</span></td></tr><tr><th id=\"L188\"><a href=\"#L188\">188</a></th><td></td></tr><tr><th id=\"L189\"><a href=\"#L189\">189</a></th><td>\u00a0 \u00a0 _first<span class=\"o\">=</span><span class=\"bp\">False</span></td></tr><tr><th id=\"L190\"><a href=\"#L190\">190</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_sendCloseAlert</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L191\"><a href=\"#L191\">191</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Okay, *THIS* is a bit complicated.</span></td></tr><tr><th id=\"L192\"><a href=\"#L192\">192</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 </td></tr><tr><th id=\"L193\"><a href=\"#L193\">193</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Basically, the issue is, OpenSSL seems to not actually return</span></td></tr><tr><th id=\"L194\"><a href=\"#L194\">194</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># errors from SSL_shutdown. Therefore, the only way to</span></td></tr><tr><th id=\"L195\"><a href=\"#L195\">195</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># determine if the close notification has been sent is by </span></td></tr><tr><th id=\"L196\"><a href=\"#L196\">196</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># SSL_shutdown returning \"done\". However, it will not claim it's</span></td></tr><tr><th id=\"L197\"><a href=\"#L197\">197</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># done until it's both sent *and* received a shutdown notification.</span></td></tr><tr><th id=\"L198\"><a href=\"#L198\">198</a></th><td></td></tr><tr><th id=\"L199\"><a href=\"#L199\">199</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># I don't actually want to wait for a received shutdown</span></td></tr><tr><th id=\"L200\"><a href=\"#L200\">200</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># notification, though, so, I have to set RECEIVED_SHUTDOWN</span></td></tr><tr><th id=\"L201\"><a href=\"#L201\">201</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># before calling shutdown. Then, it'll return True once it's</span></td></tr><tr><th id=\"L202\"><a href=\"#L202\">202</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># *SENT* the shutdown.</span></td></tr><tr><th id=\"L203\"><a href=\"#L203\">203</a></th><td></td></tr><tr><th id=\"L204\"><a href=\"#L204\">204</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># However, RECEIVED_SHUTDOWN can't be left set, because then</span></td></tr><tr><th id=\"L205\"><a href=\"#L205\">205</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># reads will fail, breaking half close.</span></td></tr><tr><th id=\"L206\"><a href=\"#L206\">206</a></th><td></td></tr><tr><th id=\"L207\"><a href=\"#L207\">207</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Also, since shutdown doesn't report errors, an empty write call is</span></td></tr><tr><th id=\"L208\"><a href=\"#L208\">208</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># done first, to try to detect if the connection has gone away.</span></td></tr><tr><th id=\"L209\"><a href=\"#L209\">209</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># (*NOT* an SSL_write call, because that fails once you've called</span></td></tr><tr><th id=\"L210\"><a href=\"#L210\">210</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># shutdown)</span></td></tr><tr><th id=\"L211\"><a href=\"#L211\">211</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L212\"><a href=\"#L212\">212</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>fileno<span class=\"p\">(),</span>\u00a0<span class=\"s\">''</span><span class=\"p\">)</span></td></tr><tr><th id=\"L213\"><a href=\"#L213\">213</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">OSError</span><span class=\"p\">,</span>\u00a0se<span class=\"p\">:</span></td></tr><tr><th id=\"L214\"><a href=\"#L214\">214</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0se<span class=\"o\">.</span>args<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\u00a0<span class=\"ow\">in</span>\u00a0<span class=\"p\">(</span>EINTR<span class=\"p\">,</span>\u00a0EWOULDBLOCK<span class=\"p\">,</span>\u00a0ENOBUFS<span class=\"p\">):</span></td></tr><tr><th id=\"L215\"><a href=\"#L215\">215</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L216\"><a href=\"#L216\">216</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Write error, socket gone</span></td></tr><tr><th id=\"L217\"><a href=\"#L217\">217</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0main<span class=\"o\">.</span>CONNECTION_LOST</td></tr><tr><th id=\"L218\"><a href=\"#L218\">218</a></th><td></td></tr><tr><th id=\"L219\"><a href=\"#L219\">219</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L220\"><a href=\"#L220\">220</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"p\">,</span>\u00a0<span class=\"s\">'set_shutdown'</span><span class=\"p\">):</span></td></tr><tr><th id=\"L221\"><a href=\"#L221\">221</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 laststate <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>get_shutdown<span class=\"p\">()</span></td></tr><tr><th id=\"L222\"><a href=\"#L222\">222</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>set_shutdown<span class=\"p\">(</span>laststate <span class=\"o\">|</span>\u00a0SSL<span class=\"o\">.</span>RECEIVED_SHUTDOWN<span class=\"p\">)</span></td></tr><tr><th id=\"L223\"><a href=\"#L223\">223</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 done <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>shutdown<span class=\"p\">()</span></td></tr><tr><th id=\"L224\"><a href=\"#L224\">224</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"p\">(</span>laststate <span class=\"o\">&amp;</span>\u00a0SSL<span class=\"o\">.</span>RECEIVED_SHUTDOWN<span class=\"p\">):</span></td></tr><tr><th id=\"L225\"><a href=\"#L225\">225</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>set_shutdown<span class=\"p\">(</span>SSL<span class=\"o\">.</span>SENT_SHUTDOWN<span class=\"p\">)</span></td></tr><tr><th id=\"L226\"><a href=\"#L226\">226</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L227\"><a href=\"#L227\">227</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\">#warnings.warn(\"SSL connection shutdown possibly unreliable, \"</span></td></tr><tr><th id=\"L228\"><a href=\"#L228\">228</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\">#\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"please upgrade to ver 0.XX\", category=UserWarning)</span></td></tr><tr><th id=\"L229\"><a href=\"#L229\">229</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>shutdown<span class=\"p\">()</span></td></tr><tr><th id=\"L230\"><a href=\"#L230\">230</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 done <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L231\"><a href=\"#L231\">231</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0SSL<span class=\"o\">.</span>Error<span class=\"p\">,</span>\u00a0e<span class=\"p\">:</span></td></tr><tr><th id=\"L232\"><a href=\"#L232\">232</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0e</td></tr><tr><th id=\"L233\"><a href=\"#L233\">233</a></th><td></td></tr><tr><th id=\"L234\"><a href=\"#L234\">234</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0done<span class=\"p\">:</span></td></tr><tr><th id=\"L235\"><a href=\"#L235\">235</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>stopWriting<span class=\"p\">()</span></td></tr><tr><th id=\"L236\"><a href=\"#L236\">236</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Note that this is tested for by identity below.</span></td></tr><tr><th id=\"L237\"><a href=\"#L237\">237</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0main<span class=\"o\">.</span>CONNECTION_DONE</td></tr><tr><th id=\"L238\"><a href=\"#L238\">238</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L239\"><a href=\"#L239\">239</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>startWriting<span class=\"p\">()</span></td></tr><tr><th id=\"L240\"><a href=\"#L240\">240</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L241\"><a href=\"#L241\">241</a></th><td></td></tr><tr><th id=\"L242\"><a href=\"#L242\">242</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_closeWriteConnection</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L243\"><a href=\"#L243\">243</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 result <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_sendCloseAlert<span class=\"p\">()</span></td></tr><tr><th id=\"L244\"><a href=\"#L244\">244</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 </td></tr><tr><th id=\"L245\"><a href=\"#L245\">245</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0result <span class=\"ow\">is</span>\u00a0main<span class=\"o\">.</span>CONNECTION_DONE<span class=\"p\">:</span></td></tr><tr><th id=\"L246\"><a href=\"#L246\">246</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0Connection<span class=\"o\">.</span>_closeWriteConnection<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L247\"><a href=\"#L247\">247</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 </td></tr><tr><th id=\"L248\"><a href=\"#L248\">248</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0result</td></tr><tr><th id=\"L249\"><a href=\"#L249\">249</a></th><td></td></tr><tr><th id=\"L250\"><a href=\"#L250\">250</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">startReading</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L251\"><a href=\"#L251\">251</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_userWantRead <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L252\"><a href=\"#L252\">252</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>readBlockedOnWrite<span class=\"p\">:</span></td></tr><tr><th id=\"L253\"><a href=\"#L253\">253</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0Connection<span class=\"o\">.</span>startReading<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L254\"><a href=\"#L254\">254</a></th><td></td></tr><tr><th id=\"L255\"><a href=\"#L255\">255</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">stopReading</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L256\"><a href=\"#L256\">256</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_userWantRead <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L257\"><a href=\"#L257\">257</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>writeBlockedOnRead<span class=\"p\">:</span></td></tr><tr><th id=\"L258\"><a href=\"#L258\">258</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0Connection<span class=\"o\">.</span>stopReading<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L259\"><a href=\"#L259\">259</a></th><td></td></tr><tr><th id=\"L260\"><a href=\"#L260\">260</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">startWriting</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L261\"><a href=\"#L261\">261</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_userWantWrite <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L262\"><a href=\"#L262\">262</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>writeBlockedOnRead<span class=\"p\">:</span></td></tr><tr><th id=\"L263\"><a href=\"#L263\">263</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0Connection<span class=\"o\">.</span>startWriting<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L264\"><a href=\"#L264\">264</a></th><td></td></tr><tr><th id=\"L265\"><a href=\"#L265\">265</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">stopWriting</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L266\"><a href=\"#L266\">266</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_userWantWrite <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L267\"><a href=\"#L267\">267</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>readBlockedOnWrite<span class=\"p\">:</span></td></tr><tr><th id=\"L268\"><a href=\"#L268\">268</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0Connection<span class=\"o\">.</span>stopWriting<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L269\"><a href=\"#L269\">269</a></th><td></td></tr><tr><th id=\"L270\"><a href=\"#L270\">270</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_resetReadWrite</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L271\"><a href=\"#L271\">271</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># After changing readBlockedOnWrite or writeBlockedOnRead,</span></td></tr><tr><th id=\"L272\"><a href=\"#L272\">272</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># call this to reset the state to what the user requested.</span></td></tr><tr><th id=\"L273\"><a href=\"#L273\">273</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_userWantWrite<span class=\"p\">:</span></td></tr><tr><th id=\"L274\"><a href=\"#L274\">274</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>startWriting<span class=\"p\">()</span></td></tr><tr><th id=\"L275\"><a href=\"#L275\">275</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L276\"><a href=\"#L276\">276</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>stopWriting<span class=\"p\">()</span></td></tr><tr><th id=\"L277\"><a href=\"#L277\">277</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 </td></tr><tr><th id=\"L278\"><a href=\"#L278\">278</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_userWantRead<span class=\"p\">:</span></td></tr><tr><th id=\"L279\"><a href=\"#L279\">279</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>startReading<span class=\"p\">()</span></td></tr><tr><th id=\"L280\"><a href=\"#L280\">280</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L281\"><a href=\"#L281\">281</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>stopReading<span class=\"p\">()</span></td></tr><tr><th id=\"L282\"><a href=\"#L282\">282</a></th><td></td></tr><tr><th id=\"L283\"><a href=\"#L283\">283</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">_getTLSClass</span><span class=\"p\">(</span>klass<span class=\"p\">,</span>\u00a0_existing<span class=\"o\">=</span><span class=\"p\">{}):</span></td></tr><tr><th id=\"L284\"><a href=\"#L284\">284</a></th><td>\u00a0 \u00a0 <span class=\"k\">if</span>\u00a0klass <span class=\"ow\">not</span>\u00a0<span class=\"ow\">in</span>\u00a0_existing<span class=\"p\">:</span></td></tr><tr><th id=\"L285\"><a href=\"#L285\">285</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">class</span>\u00a0<span class=\"nc\">TLSConnection</span><span class=\"p\">(</span>_TLSMixin<span class=\"p\">,</span>\u00a0klass<span class=\"p\">):</span></td></tr><tr><th id=\"L286\"><a href=\"#L286\">286</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 implements<span class=\"p\">(</span>interfaces<span class=\"o\">.</span>ISSLTransport<span class=\"p\">)</span></td></tr><tr><th id=\"L287\"><a href=\"#L287\">287</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 _existing<span class=\"p\">[</span>klass<span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0TLSConnection</td></tr><tr><th id=\"L288\"><a href=\"#L288\">288</a></th><td>\u00a0 \u00a0 <span class=\"k\">return</span>\u00a0_existing<span class=\"p\">[</span>klass<span class=\"p\">]</span></td></tr><tr><th id=\"L289\"><a href=\"#L289\">289</a></th><td></td></tr><tr><th id=\"L290\"><a href=\"#L290\">290</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">Connection</span><span class=\"p\">(</span>abstract<span class=\"o\">.</span>FileDescriptor<span class=\"p\">,</span>\u00a0_SocketCloser<span class=\"p\">):</span></td></tr><tr><th id=\"L291\"><a href=\"#L291\">291</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"I am the superclass of all socket-based FileDescriptors.</span></td></tr><tr><th id=\"L292\"><a href=\"#L292\">292</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L293\"><a href=\"#L293\">293</a></th><td><span class=\"sd\">\u00a0 \u00a0 This is an abstract superclass of all objects which represent a TCP/IP</span></td></tr><tr><th id=\"L294\"><a href=\"#L294\">294</a></th><td><span class=\"sd\">\u00a0 \u00a0 connection based socket.</span></td></tr><tr><th id=\"L295\"><a href=\"#L295\">295</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L296\"><a href=\"#L296\">296</a></th><td></td></tr><tr><th id=\"L297\"><a href=\"#L297\">297</a></th><td>\u00a0 \u00a0 implements<span class=\"p\">(</span>interfaces<span class=\"o\">.</span>ITCPTransport<span class=\"p\">,</span>\u00a0interfaces<span class=\"o\">.</span>ISystemHandle<span class=\"p\">)</span></td></tr><tr><th id=\"L298\"><a href=\"#L298\">298</a></th><td></td></tr><tr><th id=\"L299\"><a href=\"#L299\">299</a></th><td>\u00a0 \u00a0 TLS <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L300\"><a href=\"#L300\">300</a></th><td></td></tr><tr><th id=\"L301\"><a href=\"#L301\">301</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0skt<span class=\"p\">,</span>\u00a0protocol<span class=\"p\">,</span>\u00a0reactor<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L302\"><a href=\"#L302\">302</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 abstract<span class=\"o\">.</span>FileDescriptor<span class=\"o\">.</span>__init__<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reactor<span class=\"o\">=</span>reactor<span class=\"p\">)</span></td></tr><tr><th id=\"L303\"><a href=\"#L303\">303</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socket <span class=\"o\">=</span>\u00a0skt</td></tr><tr><th id=\"L304\"><a href=\"#L304\">304</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>setblocking<span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span></td></tr><tr><th id=\"L305\"><a href=\"#L305\">305</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>fileno <span class=\"o\">=</span>\u00a0skt<span class=\"o\">.</span>fileno</td></tr><tr><th id=\"L306\"><a href=\"#L306\">306</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>protocol <span class=\"o\">=</span>\u00a0protocol</td></tr><tr><th id=\"L307\"><a href=\"#L307\">307</a></th><td></td></tr><tr><th id=\"L308\"><a href=\"#L308\">308</a></th><td>\u00a0 \u00a0 <span class=\"k\">if</span>\u00a0SSL<span class=\"p\">:</span></td></tr><tr><th id=\"L309\"><a href=\"#L309\">309</a></th><td></td></tr><tr><th id=\"L310\"><a href=\"#L310\">310</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">startTLS</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0ctx<span class=\"p\">):</span></td></tr><tr><th id=\"L311\"><a href=\"#L311\">311</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">assert</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>TLS</td></tr><tr><th id=\"L312\"><a href=\"#L312\">312</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 error<span class=\"o\">=</span><span class=\"bp\">False</span></td></tr><tr><th id=\"L313\"><a href=\"#L313\">313</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>dataBuffer <span class=\"ow\">or</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_tempDataBuffer<span class=\"p\">:</span></td></tr><tr><th id=\"L314\"><a href=\"#L314\">314</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>dataBuffer <span class=\"o\">+=</span>\u00a0<span class=\"s\">\"\"</span><span class=\"o\">.</span>join<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>_tempDataBuffer<span class=\"p\">)</span></td></tr><tr><th id=\"L315\"><a href=\"#L315\">315</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_tempDataBuffer <span class=\"o\">=</span>\u00a0<span class=\"p\">[]</span></td></tr><tr><th id=\"L316\"><a href=\"#L316\">316</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_tempDataLen <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L317\"><a href=\"#L317\">317</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 written <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>writeSomeData<span class=\"p\">(</span><span class=\"nb\">buffer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>dataBuffer<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>offset<span class=\"p\">))</span></td></tr><tr><th id=\"L318\"><a href=\"#L318\">318</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 offset <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>offset</td></tr><tr><th id=\"L319\"><a href=\"#L319\">319</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 dataLen <span class=\"o\">=</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>dataBuffer<span class=\"p\">)</span></td></tr><tr><th id=\"L320\"><a href=\"#L320\">320</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>offset <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L321\"><a href=\"#L321\">321</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>dataBuffer <span class=\"o\">=</span>\u00a0<span class=\"s\">\"\"</span></td></tr><tr><th id=\"L322\"><a href=\"#L322\">322</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">isinstance</span><span class=\"p\">(</span>written<span class=\"p\">,</span>\u00a0<span class=\"ne\">Exception</span><span class=\"p\">)</span>\u00a0<span class=\"ow\">or</span>\u00a0<span class=\"p\">(</span>offset <span class=\"o\">+</span>\u00a0written <span class=\"o\">!=</span>\u00a0dataLen<span class=\"p\">):</span></td></tr><tr><th id=\"L323\"><a href=\"#L323\">323</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 error<span class=\"o\">=</span><span class=\"bp\">True</span></td></tr><tr><th id=\"L324\"><a href=\"#L324\">324</a></th><td></td></tr><tr><th id=\"L325\"><a href=\"#L325\">325</a></th><td></td></tr><tr><th id=\"L326\"><a href=\"#L326\">326</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>stopReading<span class=\"p\">()</span></td></tr><tr><th id=\"L327\"><a href=\"#L327\">327</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>stopWriting<span class=\"p\">()</span></td></tr><tr><th id=\"L328\"><a href=\"#L328\">328</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_startTLS<span class=\"p\">()</span></td></tr><tr><th id=\"L329\"><a href=\"#L329\">329</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socket <span class=\"o\">=</span>\u00a0SSL<span class=\"o\">.</span>Connection<span class=\"p\">(</span>ctx<span class=\"o\">.</span>getContext<span class=\"p\">(),</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"p\">)</span></td></tr><tr><th id=\"L330\"><a href=\"#L330\">330</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>fileno <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>fileno</td></tr><tr><th id=\"L331\"><a href=\"#L331\">331</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>startReading<span class=\"p\">()</span></td></tr><tr><th id=\"L332\"><a href=\"#L332\">332</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0error<span class=\"p\">:</span></td></tr><tr><th id=\"L333\"><a href=\"#L333\">333</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 warnings<span class=\"o\">.</span>warn<span class=\"p\">(</span><span class=\"s\">\"startTLS with unwritten buffered data currently doesn't work right. See issue #686. Closing connection.\"</span><span class=\"p\">,</span>\u00a0category<span class=\"o\">=</span><span class=\"ne\">RuntimeWarning</span><span class=\"p\">,</span>\u00a0stacklevel<span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span></td></tr><tr><th id=\"L334\"><a href=\"#L334\">334</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>loseConnection<span class=\"p\">()</span></td></tr><tr><th id=\"L335\"><a href=\"#L335\">335</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span></td></tr><tr><th id=\"L336\"><a href=\"#L336\">336</a></th><td></td></tr><tr><th id=\"L337\"><a href=\"#L337\">337</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_startTLS</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L338\"><a href=\"#L338\">338</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>TLS <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L339\"><a href=\"#L339\">339</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>__class__ <span class=\"o\">=</span>\u00a0_getTLSClass<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>__class__<span class=\"p\">)</span></td></tr><tr><th id=\"L340\"><a href=\"#L340\">340</a></th><td></td></tr><tr><th id=\"L341\"><a href=\"#L341\">341</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getHandle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L342\"><a href=\"#L342\">342</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Return the socket for this connection.\"\"\"</span></td></tr><tr><th id=\"L343\"><a href=\"#L343\">343</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>socket</td></tr><tr><th id=\"L344\"><a href=\"#L344\">344</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L345\"><a href=\"#L345\">345</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">doRead</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L346\"><a href=\"#L346\">346</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Calls self.protocol.dataReceived with all available data.</span></td></tr><tr><th id=\"L347\"><a href=\"#L347\">347</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L348\"><a href=\"#L348\">348</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This reads up to self.bufferSize bytes of data from its socket, then</span></td></tr><tr><th id=\"L349\"><a href=\"#L349\">349</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 calls self.dataReceived(data) to process it.\u00a0 If the connection is not</span></td></tr><tr><th id=\"L350\"><a href=\"#L350\">350</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 lost through an error in the physical recv(), this function will return</span></td></tr><tr><th id=\"L351\"><a href=\"#L351\">351</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 the result of the dataReceived call.</span></td></tr><tr><th id=\"L352\"><a href=\"#L352\">352</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L353\"><a href=\"#L353\">353</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L354\"><a href=\"#L354\">354</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 data <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>recv<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>bufferSize<span class=\"p\">)</span></td></tr><tr><th id=\"L355\"><a href=\"#L355\">355</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0socket<span class=\"o\">.</span>error<span class=\"p\">,</span>\u00a0se<span class=\"p\">:</span></td></tr><tr><th id=\"L356\"><a href=\"#L356\">356</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0se<span class=\"o\">.</span>args<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\u00a0<span class=\"o\">==</span>\u00a0EWOULDBLOCK<span class=\"p\">:</span></td></tr><tr><th id=\"L357\"><a href=\"#L357\">357</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span></td></tr><tr><th id=\"L358\"><a href=\"#L358\">358</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L359\"><a href=\"#L359\">359</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0main<span class=\"o\">.</span>CONNECTION_LOST</td></tr><tr><th id=\"L360\"><a href=\"#L360\">360</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0data<span class=\"p\">:</span></td></tr><tr><th id=\"L361\"><a href=\"#L361\">361</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0main<span class=\"o\">.</span>CONNECTION_DONE</td></tr><tr><th id=\"L362\"><a href=\"#L362\">362</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>protocol<span class=\"o\">.</span>dataReceived<span class=\"p\">(</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L363\"><a href=\"#L363\">363</a></th><td></td></tr><tr><th id=\"L364\"><a href=\"#L364\">364</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">writeSomeData</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0data<span class=\"p\">):</span></td></tr><tr><th id=\"L365\"><a href=\"#L365\">365</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Connection.writeSomeData(data) -&gt; #of bytes written | CONNECTION_LOST</span></td></tr><tr><th id=\"L366\"><a href=\"#L366\">366</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This writes as much data as possible to the socket and returns either</span></td></tr><tr><th id=\"L367\"><a href=\"#L367\">367</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 the number of bytes read (which is positive) or a connection error code</span></td></tr><tr><th id=\"L368\"><a href=\"#L368\">368</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 (which is negative)</span></td></tr><tr><th id=\"L369\"><a href=\"#L369\">369</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L370\"><a href=\"#L370\">370</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L371\"><a href=\"#L371\">371</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Limit length of buffer to try to send, because some OSes are too</span></td></tr><tr><th id=\"L372\"><a href=\"#L372\">372</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># stupid to do so themselves (ahem windows)</span></td></tr><tr><th id=\"L373\"><a href=\"#L373\">373</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>send<span class=\"p\">(</span><span class=\"nb\">buffer</span><span class=\"p\">(</span>data<span class=\"p\">,</span>\u00a0<span class=\"mi\">0</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>SEND_LIMIT<span class=\"p\">))</span></td></tr><tr><th id=\"L374\"><a href=\"#L374\">374</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0socket<span class=\"o\">.</span>error<span class=\"p\">,</span>\u00a0se<span class=\"p\">:</span></td></tr><tr><th id=\"L375\"><a href=\"#L375\">375</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0se<span class=\"o\">.</span>args<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\u00a0<span class=\"o\">==</span>\u00a0EINTR<span class=\"p\">:</span></td></tr><tr><th id=\"L376\"><a href=\"#L376\">376</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>writeSomeData<span class=\"p\">(</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L377\"><a href=\"#L377\">377</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0se<span class=\"o\">.</span>args<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\u00a0<span class=\"ow\">in</span>\u00a0<span class=\"p\">(</span>EWOULDBLOCK<span class=\"p\">,</span>\u00a0ENOBUFS<span class=\"p\">):</span></td></tr><tr><th id=\"L378\"><a href=\"#L378\">378</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L379\"><a href=\"#L379\">379</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L380\"><a href=\"#L380\">380</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0main<span class=\"o\">.</span>CONNECTION_LOST</td></tr><tr><th id=\"L381\"><a href=\"#L381\">381</a></th><td></td></tr><tr><th id=\"L382\"><a href=\"#L382\">382</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_closeWriteConnection</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L383\"><a href=\"#L383\">383</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L384\"><a href=\"#L384\">384</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_socketShutdownMethod<span class=\"p\">)(</span><span class=\"mi\">1</span><span class=\"p\">)</span></td></tr><tr><th id=\"L385\"><a href=\"#L385\">385</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0socket<span class=\"o\">.</span>error<span class=\"p\">:</span></td></tr><tr><th id=\"L386\"><a href=\"#L386\">386</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L387\"><a href=\"#L387\">387</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 p <span class=\"o\">=</span>\u00a0interfaces<span class=\"o\">.</span>IHalfCloseableProtocol<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>protocol<span class=\"p\">,</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">)</span></td></tr><tr><th id=\"L388\"><a href=\"#L388\">388</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0p<span class=\"p\">:</span></td></tr><tr><th id=\"L389\"><a href=\"#L389\">389</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L390\"><a href=\"#L390\">390</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 p<span class=\"o\">.</span>writeConnectionLost<span class=\"p\">()</span></td></tr><tr><th id=\"L391\"><a href=\"#L391\">391</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span><span class=\"p\">:</span></td></tr><tr><th id=\"L392\"><a href=\"#L392\">392</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 f <span class=\"o\">=</span>\u00a0failure<span class=\"o\">.</span>Failure<span class=\"p\">()</span></td></tr><tr><th id=\"L393\"><a href=\"#L393\">393</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log<span class=\"o\">.</span>err<span class=\"p\">()</span></td></tr><tr><th id=\"L394\"><a href=\"#L394\">394</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>connectionLost<span class=\"p\">(</span>f<span class=\"p\">)</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 </td></tr><tr><th id=\"L395\"><a href=\"#L395\">395</a></th><td></td></tr><tr><th id=\"L396\"><a href=\"#L396\">396</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">readConnectionLost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reason<span class=\"p\">):</span></td></tr><tr><th id=\"L397\"><a href=\"#L397\">397</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 p <span class=\"o\">=</span>\u00a0interfaces<span class=\"o\">.</span>IHalfCloseableProtocol<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>protocol<span class=\"p\">,</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">)</span></td></tr><tr><th id=\"L398\"><a href=\"#L398\">398</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0p<span class=\"p\">:</span></td></tr><tr><th id=\"L399\"><a href=\"#L399\">399</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L400\"><a href=\"#L400\">400</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 p<span class=\"o\">.</span>readConnectionLost<span class=\"p\">()</span></td></tr><tr><th id=\"L401\"><a href=\"#L401\">401</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span><span class=\"p\">:</span></td></tr><tr><th id=\"L402\"><a href=\"#L402\">402</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log<span class=\"o\">.</span>err<span class=\"p\">()</span></td></tr><tr><th id=\"L403\"><a href=\"#L403\">403</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>connectionLost<span class=\"p\">(</span>failure<span class=\"o\">.</span>Failure<span class=\"p\">())</span></td></tr><tr><th id=\"L404\"><a href=\"#L404\">404</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L405\"><a href=\"#L405\">405</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>connectionLost<span class=\"p\">(</span>reason<span class=\"p\">)</span></td></tr><tr><th id=\"L406\"><a href=\"#L406\">406</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L407\"><a href=\"#L407\">407</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectionLost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reason<span class=\"p\">):</span></td></tr><tr><th id=\"L408\"><a href=\"#L408\">408</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"See abstract.FileDescriptor.connectionLost().</span></td></tr><tr><th id=\"L409\"><a href=\"#L409\">409</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L410\"><a href=\"#L410\">410</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 abstract<span class=\"o\">.</span>FileDescriptor<span class=\"o\">.</span>connectionLost<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reason<span class=\"p\">)</span></td></tr><tr><th id=\"L411\"><a href=\"#L411\">411</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_closeSocket<span class=\"p\">()</span></td></tr><tr><th id=\"L412\"><a href=\"#L412\">412</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 protocol <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>protocol</td></tr><tr><th id=\"L413\"><a href=\"#L413\">413</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>protocol</td></tr><tr><th id=\"L414\"><a href=\"#L414\">414</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>socket</td></tr><tr><th id=\"L415\"><a href=\"#L415\">415</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>fileno</td></tr><tr><th id=\"L416\"><a href=\"#L416\">416</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 protocol<span class=\"o\">.</span>connectionLost<span class=\"p\">(</span>reason<span class=\"p\">)</span></td></tr><tr><th id=\"L417\"><a href=\"#L417\">417</a></th><td></td></tr><tr><th id=\"L418\"><a href=\"#L418\">418</a></th><td>\u00a0 \u00a0 logstr <span class=\"o\">=</span>\u00a0<span class=\"s\">\"Uninitialized\"</span></td></tr><tr><th id=\"L419\"><a href=\"#L419\">419</a></th><td></td></tr><tr><th id=\"L420\"><a href=\"#L420\">420</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">logPrefix</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L421\"><a href=\"#L421\">421</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Return the prefix to log with when I own the logging thread.</span></td></tr><tr><th id=\"L422\"><a href=\"#L422\">422</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L423\"><a href=\"#L423\">423</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>logstr</td></tr><tr><th id=\"L424\"><a href=\"#L424\">424</a></th><td></td></tr><tr><th id=\"L425\"><a href=\"#L425\">425</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getTcpNoDelay</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L426\"><a href=\"#L426\">426</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0operator<span class=\"o\">.</span>truth<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>getsockopt<span class=\"p\">(</span>socket<span class=\"o\">.</span>IPPROTO_TCP<span class=\"p\">,</span>\u00a0socket<span class=\"o\">.</span>TCP_NODELAY<span class=\"p\">))</span></td></tr><tr><th id=\"L427\"><a href=\"#L427\">427</a></th><td></td></tr><tr><th id=\"L428\"><a href=\"#L428\">428</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">setTcpNoDelay</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0enabled<span class=\"p\">):</span></td></tr><tr><th id=\"L429\"><a href=\"#L429\">429</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>setsockopt<span class=\"p\">(</span>socket<span class=\"o\">.</span>IPPROTO_TCP<span class=\"p\">,</span>\u00a0socket<span class=\"o\">.</span>TCP_NODELAY<span class=\"p\">,</span>\u00a0enabled<span class=\"p\">)</span></td></tr><tr><th id=\"L430\"><a href=\"#L430\">430</a></th><td></td></tr><tr><th id=\"L431\"><a href=\"#L431\">431</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getTcpKeepAlive</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L432\"><a href=\"#L432\">432</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0operator<span class=\"o\">.</span>truth<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>getsockopt<span class=\"p\">(</span>socket<span class=\"o\">.</span>SOL_SOCKET<span class=\"p\">,</span></td></tr><tr><th id=\"L433\"><a href=\"#L433\">433</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0socket<span class=\"o\">.</span>SO_KEEPALIVE<span class=\"p\">))</span></td></tr><tr><th id=\"L434\"><a href=\"#L434\">434</a></th><td></td></tr><tr><th id=\"L435\"><a href=\"#L435\">435</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">setTcpKeepAlive</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0enabled<span class=\"p\">):</span></td></tr><tr><th id=\"L436\"><a href=\"#L436\">436</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>setsockopt<span class=\"p\">(</span>socket<span class=\"o\">.</span>SOL_SOCKET<span class=\"p\">,</span>\u00a0socket<span class=\"o\">.</span>SO_KEEPALIVE<span class=\"p\">,</span>\u00a0enabled<span class=\"p\">)</span></td></tr><tr><th id=\"L437\"><a href=\"#L437\">437</a></th><td></td></tr><tr><th id=\"L438\"><a href=\"#L438\">438</a></th><td><span class=\"k\">if</span>\u00a0SSL<span class=\"p\">:</span></td></tr><tr><th id=\"L439\"><a href=\"#L439\">439</a></th><td>\u00a0 \u00a0 classImplements<span class=\"p\">(</span>Connection<span class=\"p\">,</span>\u00a0interfaces<span class=\"o\">.</span>ITLSTransport<span class=\"p\">)</span></td></tr><tr><th id=\"L440\"><a href=\"#L440\">440</a></th><td></td></tr><tr><th id=\"L441\"><a href=\"#L441\">441</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">BaseClient</span><span class=\"p\">(</span>Connection<span class=\"p\">):</span></td></tr><tr><th id=\"L442\"><a href=\"#L442\">442</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"A base class for client TCP (and similiar) sockets.</span></td></tr><tr><th id=\"L443\"><a href=\"#L443\">443</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L444\"><a href=\"#L444\">444</a></th><td>\u00a0 \u00a0 addressFamily <span class=\"o\">=</span>\u00a0socket<span class=\"o\">.</span>AF_INET</td></tr><tr><th id=\"L445\"><a href=\"#L445\">445</a></th><td>\u00a0 \u00a0 socketType <span class=\"o\">=</span>\u00a0socket<span class=\"o\">.</span>SOCK_STREAM</td></tr><tr><th id=\"L446\"><a href=\"#L446\">446</a></th><td></td></tr><tr><th id=\"L447\"><a href=\"#L447\">447</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_finishInit</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0whenDone<span class=\"p\">,</span>\u00a0skt<span class=\"p\">,</span>\u00a0error<span class=\"p\">,</span>\u00a0reactor<span class=\"p\">):</span></td></tr><tr><th id=\"L448\"><a href=\"#L448\">448</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Called by base classes to continue to next stage of initialization.\"\"\"</span></td></tr><tr><th id=\"L449\"><a href=\"#L449\">449</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0whenDone<span class=\"p\">:</span></td></tr><tr><th id=\"L450\"><a href=\"#L450\">450</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Connection<span class=\"o\">.</span>__init__<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0skt<span class=\"p\">,</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">,</span>\u00a0reactor<span class=\"p\">)</span></td></tr><tr><th id=\"L451\"><a href=\"#L451\">451</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>doWrite <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>doConnect</td></tr><tr><th id=\"L452\"><a href=\"#L452\">452</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>doRead <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>doConnect</td></tr><tr><th id=\"L453\"><a href=\"#L453\">453</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 reactor<span class=\"o\">.</span>callLater<span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span>\u00a0whenDone<span class=\"p\">)</span></td></tr><tr><th id=\"L454\"><a href=\"#L454\">454</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L455\"><a href=\"#L455\">455</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 reactor<span class=\"o\">.</span>callLater<span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>failIfNotConnected<span class=\"p\">,</span>\u00a0error<span class=\"p\">)</span></td></tr><tr><th id=\"L456\"><a href=\"#L456\">456</a></th><td></td></tr><tr><th id=\"L457\"><a href=\"#L457\">457</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">startTLS</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0ctx<span class=\"p\">,</span>\u00a0client<span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span></td></tr><tr><th id=\"L458\"><a href=\"#L458\">458</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 holder <span class=\"o\">=</span>\u00a0Connection<span class=\"o\">.</span>startTLS<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0ctx<span class=\"p\">)</span></td></tr><tr><th id=\"L459\"><a href=\"#L459\">459</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0client<span class=\"p\">:</span></td></tr><tr><th id=\"L460\"><a href=\"#L460\">460</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>set_connect_state<span class=\"p\">()</span></td></tr><tr><th id=\"L461\"><a href=\"#L461\">461</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L462\"><a href=\"#L462\">462</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>set_accept_state<span class=\"p\">()</span></td></tr><tr><th id=\"L463\"><a href=\"#L463\">463</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0holder</td></tr><tr><th id=\"L464\"><a href=\"#L464\">464</a></th><td></td></tr><tr><th id=\"L465\"><a href=\"#L465\">465</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">stopConnecting</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L466\"><a href=\"#L466\">466</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Stop attempt to connect.\"\"\"</span></td></tr><tr><th id=\"L467\"><a href=\"#L467\">467</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>failIfNotConnected<span class=\"p\">(</span>error<span class=\"o\">.</span>UserError<span class=\"p\">())</span></td></tr><tr><th id=\"L468\"><a href=\"#L468\">468</a></th><td></td></tr><tr><th id=\"L469\"><a href=\"#L469\">469</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">failIfNotConnected</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0err<span class=\"p\">):</span></td></tr><tr><th id=\"L470\"><a href=\"#L470\">470</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L471\"><a href=\"#L471\">471</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Generic method called when the attemps to connect failed. It basically</span></td></tr><tr><th id=\"L472\"><a href=\"#L472\">472</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 cleans everything it can: call connectionFailed, stop read and write,</span></td></tr><tr><th id=\"L473\"><a href=\"#L473\">473</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 delete socket related members.</span></td></tr><tr><th id=\"L474\"><a href=\"#L474\">474</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L475\"><a href=\"#L475\">475</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>connected <span class=\"ow\">or</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>disconnected <span class=\"ow\">or</span>\u00a0</td></tr><tr><th id=\"L476\"><a href=\"#L476\">476</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"ow\">not</span>\u00a0<span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"connector\"</span><span class=\"p\">)):</span></td></tr><tr><th id=\"L477\"><a href=\"#L477\">477</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span></td></tr><tr><th id=\"L478\"><a href=\"#L478\">478</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 </td></tr><tr><th id=\"L479\"><a href=\"#L479\">479</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>connector<span class=\"o\">.</span>connectionFailed<span class=\"p\">(</span>failure<span class=\"o\">.</span>Failure<span class=\"p\">(</span>err<span class=\"p\">))</span></td></tr><tr><th id=\"L480\"><a href=\"#L480\">480</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"reactor\"</span><span class=\"p\">):</span></td></tr><tr><th id=\"L481\"><a href=\"#L481\">481</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># this doesn't happen if we failed in __init__</span></td></tr><tr><th id=\"L482\"><a href=\"#L482\">482</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>stopReading<span class=\"p\">()</span></td></tr><tr><th id=\"L483\"><a href=\"#L483\">483</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>stopWriting<span class=\"p\">()</span></td></tr><tr><th id=\"L484\"><a href=\"#L484\">484</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>connector</td></tr><tr><th id=\"L485\"><a href=\"#L485\">485</a></th><td></td></tr><tr><th id=\"L486\"><a href=\"#L486\">486</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L487\"><a href=\"#L487\">487</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_closeSocket<span class=\"p\">()</span></td></tr><tr><th id=\"L488\"><a href=\"#L488\">488</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">AttributeError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L489\"><a href=\"#L489\">489</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L490\"><a href=\"#L490\">490</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L491\"><a href=\"#L491\">491</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>fileno</td></tr><tr><th id=\"L492\"><a href=\"#L492\">492</a></th><td></td></tr><tr><th id=\"L493\"><a href=\"#L493\">493</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">createInternetSocket</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L494\"><a href=\"#L494\">494</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"(internal) Create a non-blocking socket using</span></td></tr><tr><th id=\"L495\"><a href=\"#L495\">495</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 self.addressFamily, self.socketType.</span></td></tr><tr><th id=\"L496\"><a href=\"#L496\">496</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L497\"><a href=\"#L497\">497</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 s <span class=\"o\">=</span>\u00a0socket<span class=\"o\">.</span>socket<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>addressFamily<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>socketType<span class=\"p\">)</span></td></tr><tr><th id=\"L498\"><a href=\"#L498\">498</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 s<span class=\"o\">.</span>setblocking<span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span></td></tr><tr><th id=\"L499\"><a href=\"#L499\">499</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0fcntl <span class=\"ow\">and</span>\u00a0<span class=\"nb\">hasattr</span><span class=\"p\">(</span>fcntl<span class=\"p\">,</span>\u00a0<span class=\"s\">'FD_CLOEXEC'</span><span class=\"p\">):</span></td></tr><tr><th id=\"L500\"><a href=\"#L500\">500</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 old <span class=\"o\">=</span>\u00a0fcntl<span class=\"o\">.</span>fcntl<span class=\"p\">(</span>s<span class=\"o\">.</span>fileno<span class=\"p\">(),</span>\u00a0fcntl<span class=\"o\">.</span>F_GETFD<span class=\"p\">)</span></td></tr><tr><th id=\"L501\"><a href=\"#L501\">501</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fcntl<span class=\"o\">.</span>fcntl<span class=\"p\">(</span>s<span class=\"o\">.</span>fileno<span class=\"p\">(),</span>\u00a0fcntl<span class=\"o\">.</span>F_SETFD<span class=\"p\">,</span>\u00a0old <span class=\"o\">|</span>\u00a0fcntl<span class=\"o\">.</span>FD_CLOEXEC<span class=\"p\">)</span></td></tr><tr><th id=\"L502\"><a href=\"#L502\">502</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0s</td></tr><tr><th id=\"L503\"><a href=\"#L503\">503</a></th><td></td></tr><tr><th id=\"L504\"><a href=\"#L504\">504</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">resolveAddress</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L505\"><a href=\"#L505\">505</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0abstract<span class=\"o\">.</span>isIPAddress<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>addr<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]):</span></td></tr><tr><th id=\"L506\"><a href=\"#L506\">506</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_setRealAddress<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>addr<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span></td></tr><tr><th id=\"L507\"><a href=\"#L507\">507</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L508\"><a href=\"#L508\">508</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 d <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>reactor<span class=\"o\">.</span>resolve<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>addr<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span></td></tr><tr><th id=\"L509\"><a href=\"#L509\">509</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 d<span class=\"o\">.</span>addCallbacks<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>_setRealAddress<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>failIfNotConnected<span class=\"p\">)</span></td></tr><tr><th id=\"L510\"><a href=\"#L510\">510</a></th><td></td></tr><tr><th id=\"L511\"><a href=\"#L511\">511</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_setRealAddress</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0address<span class=\"p\">):</span></td></tr><tr><th id=\"L512\"><a href=\"#L512\">512</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>realAddress <span class=\"o\">=</span>\u00a0<span class=\"p\">(</span>address<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>addr<span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span></td></tr><tr><th id=\"L513\"><a href=\"#L513\">513</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>doConnect<span class=\"p\">()</span></td></tr><tr><th id=\"L514\"><a href=\"#L514\">514</a></th><td></td></tr><tr><th id=\"L515\"><a href=\"#L515\">515</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">doConnect</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L516\"><a href=\"#L516\">516</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"I connect the socket.</span></td></tr><tr><th id=\"L517\"><a href=\"#L517\">517</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L518\"><a href=\"#L518\">518</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Then, call the protocol's makeConnection, and start waiting for data.</span></td></tr><tr><th id=\"L519\"><a href=\"#L519\">519</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L520\"><a href=\"#L520\">520</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"connector\"</span><span class=\"p\">):</span></td></tr><tr><th id=\"L521\"><a href=\"#L521\">521</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># this happens when connection failed but doConnect</span></td></tr><tr><th id=\"L522\"><a href=\"#L522\">522</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># was scheduled via a callLater in self._finishInit</span></td></tr><tr><th id=\"L523\"><a href=\"#L523\">523</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span></td></tr><tr><th id=\"L524\"><a href=\"#L524\">524</a></th><td></td></tr><tr><th id=\"L525\"><a href=\"#L525\">525</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 err <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>getsockopt<span class=\"p\">(</span>socket<span class=\"o\">.</span>SOL_SOCKET<span class=\"p\">,</span>\u00a0socket<span class=\"o\">.</span>SO_ERROR<span class=\"p\">)</span></td></tr><tr><th id=\"L526\"><a href=\"#L526\">526</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0err<span class=\"p\">:</span></td></tr><tr><th id=\"L527\"><a href=\"#L527\">527</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>failIfNotConnected<span class=\"p\">(</span>error<span class=\"o\">.</span>getConnectError<span class=\"p\">((</span>err<span class=\"p\">,</span>\u00a0os<span class=\"o\">.</span>strerror<span class=\"p\">(</span>err<span class=\"p\">))))</span></td></tr><tr><th id=\"L528\"><a href=\"#L528\">528</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span></td></tr><tr><th id=\"L529\"><a href=\"#L529\">529</a></th><td></td></tr><tr><th id=\"L530\"><a href=\"#L530\">530</a></th><td></td></tr><tr><th id=\"L531\"><a href=\"#L531\">531</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># doConnect gets called twice.\u00a0 The first time we actually need to</span></td></tr><tr><th id=\"L532\"><a href=\"#L532\">532</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># start the connection attempt.\u00a0 The second time we don't really</span></td></tr><tr><th id=\"L533\"><a href=\"#L533\">533</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># want to (SO_ERROR above will have taken care of any errors, and if</span></td></tr><tr><th id=\"L534\"><a href=\"#L534\">534</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># it reported none, the mere fact that doConnect was called again is</span></td></tr><tr><th id=\"L535\"><a href=\"#L535\">535</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># sufficient to indicate that the connection has succeeded), but it</span></td></tr><tr><th id=\"L536\"><a href=\"#L536\">536</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># is not /particularly/ detrimental to do so.\u00a0 This should get</span></td></tr><tr><th id=\"L537\"><a href=\"#L537\">537</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># cleaned up some day, though.</span></td></tr><tr><th id=\"L538\"><a href=\"#L538\">538</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L539\"><a href=\"#L539\">539</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 connectResult <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>connect_ex<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>realAddress<span class=\"p\">)</span></td></tr><tr><th id=\"L540\"><a href=\"#L540\">540</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0socket<span class=\"o\">.</span>error<span class=\"p\">,</span>\u00a0se<span class=\"p\">:</span></td></tr><tr><th id=\"L541\"><a href=\"#L541\">541</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 connectResult <span class=\"o\">=</span>\u00a0se<span class=\"o\">.</span>args<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span></td></tr><tr><th id=\"L542\"><a href=\"#L542\">542</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0connectResult<span class=\"p\">:</span></td></tr><tr><th id=\"L543\"><a href=\"#L543\">543</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0connectResult <span class=\"o\">==</span>\u00a0EISCONN<span class=\"p\">:</span></td></tr><tr><th id=\"L544\"><a href=\"#L544\">544</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L545\"><a href=\"#L545\">545</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># on Windows EINVAL means sometimes that we should keep trying:</span></td></tr><tr><th id=\"L546\"><a href=\"#L546\">546</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winsock/winsock/connect_2.asp</span></td></tr><tr><th id=\"L547\"><a href=\"#L547\">547</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0<span class=\"p\">((</span>connectResult <span class=\"ow\">in</span>\u00a0<span class=\"p\">(</span>EWOULDBLOCK<span class=\"p\">,</span>\u00a0EINPROGRESS<span class=\"p\">,</span>\u00a0EALREADY<span class=\"p\">))</span>\u00a0<span class=\"ow\">or</span></td></tr><tr><th id=\"L548\"><a href=\"#L548\">548</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"p\">(</span>connectResult <span class=\"o\">==</span>\u00a0EINVAL <span class=\"ow\">and</span>\u00a0platformType <span class=\"o\">==</span>\u00a0<span class=\"s\">\"win32\"</span><span class=\"p\">)):</span></td></tr><tr><th id=\"L549\"><a href=\"#L549\">549</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>startReading<span class=\"p\">()</span></td></tr><tr><th id=\"L550\"><a href=\"#L550\">550</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>startWriting<span class=\"p\">()</span></td></tr><tr><th id=\"L551\"><a href=\"#L551\">551</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span></td></tr><tr><th id=\"L552\"><a href=\"#L552\">552</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L553\"><a href=\"#L553\">553</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>failIfNotConnected<span class=\"p\">(</span>error<span class=\"o\">.</span>getConnectError<span class=\"p\">((</span>connectResult<span class=\"p\">,</span>\u00a0os<span class=\"o\">.</span>strerror<span class=\"p\">(</span>connectResult<span class=\"p\">))))</span></td></tr><tr><th id=\"L554\"><a href=\"#L554\">554</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span></td></tr><tr><th id=\"L555\"><a href=\"#L555\">555</a></th><td></td></tr><tr><th id=\"L556\"><a href=\"#L556\">556</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># If I have reached this point without raising or returning, that means</span></td></tr><tr><th id=\"L557\"><a href=\"#L557\">557</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># that the socket is connected.</span></td></tr><tr><th id=\"L558\"><a href=\"#L558\">558</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>doWrite</td></tr><tr><th id=\"L559\"><a href=\"#L559\">559</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>doRead</td></tr><tr><th id=\"L560\"><a href=\"#L560\">560</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># we first stop and then start, to reset any references to the old doRead</span></td></tr><tr><th id=\"L561\"><a href=\"#L561\">561</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>stopReading<span class=\"p\">()</span></td></tr><tr><th id=\"L562\"><a href=\"#L562\">562</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>stopWriting<span class=\"p\">()</span></td></tr><tr><th id=\"L563\"><a href=\"#L563\">563</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_connectDone<span class=\"p\">()</span></td></tr><tr><th id=\"L564\"><a href=\"#L564\">564</a></th><td></td></tr><tr><th id=\"L565\"><a href=\"#L565\">565</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_connectDone</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L566\"><a href=\"#L566\">566</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>protocol <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>connector<span class=\"o\">.</span>buildProtocol<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>getPeer<span class=\"p\">())</span></td></tr><tr><th id=\"L567\"><a href=\"#L567\">567</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>connected <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L568\"><a href=\"#L568\">568</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>protocol<span class=\"o\">.</span>makeConnection<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L569\"><a href=\"#L569\">569</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>logstr <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>protocol<span class=\"o\">.</span>__class__<span class=\"o\">.</span>__name__<span class=\"o\">+</span><span class=\"s\">\",client\"</span></td></tr><tr><th id=\"L570\"><a href=\"#L570\">570</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>startReading<span class=\"p\">()</span></td></tr><tr><th id=\"L571\"><a href=\"#L571\">571</a></th><td></td></tr><tr><th id=\"L572\"><a href=\"#L572\">572</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectionLost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reason<span class=\"p\">):</span></td></tr><tr><th id=\"L573\"><a href=\"#L573\">573</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>connected<span class=\"p\">:</span></td></tr><tr><th id=\"L574\"><a href=\"#L574\">574</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>failIfNotConnected<span class=\"p\">(</span>error<span class=\"o\">.</span>ConnectError<span class=\"p\">(</span>string<span class=\"o\">=</span>reason<span class=\"p\">))</span></td></tr><tr><th id=\"L575\"><a href=\"#L575\">575</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L576\"><a href=\"#L576\">576</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Connection<span class=\"o\">.</span>connectionLost<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reason<span class=\"p\">)</span></td></tr><tr><th id=\"L577\"><a href=\"#L577\">577</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>connector<span class=\"o\">.</span>connectionLost<span class=\"p\">(</span>reason<span class=\"p\">)</span></td></tr><tr><th id=\"L578\"><a href=\"#L578\">578</a></th><td></td></tr><tr><th id=\"L579\"><a href=\"#L579\">579</a></th><td></td></tr><tr><th id=\"L580\"><a href=\"#L580\">580</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">Client</span><span class=\"p\">(</span>BaseClient<span class=\"p\">):</span></td></tr><tr><th id=\"L581\"><a href=\"#L581\">581</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"A TCP client.\"\"\"</span></td></tr><tr><th id=\"L582\"><a href=\"#L582\">582</a></th><td></td></tr><tr><th id=\"L583\"><a href=\"#L583\">583</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0host<span class=\"p\">,</span>\u00a0port<span class=\"p\">,</span>\u00a0bindAddress<span class=\"p\">,</span>\u00a0connector<span class=\"p\">,</span>\u00a0reactor<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L584\"><a href=\"#L584\">584</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># BaseClient.__init__ is invoked later</span></td></tr><tr><th id=\"L585\"><a href=\"#L585\">585</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>connector <span class=\"o\">=</span>\u00a0connector</td></tr><tr><th id=\"L586\"><a href=\"#L586\">586</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>addr <span class=\"o\">=</span>\u00a0<span class=\"p\">(</span>host<span class=\"p\">,</span>\u00a0port<span class=\"p\">)</span></td></tr><tr><th id=\"L587\"><a href=\"#L587\">587</a></th><td></td></tr><tr><th id=\"L588\"><a href=\"#L588\">588</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 whenDone <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>resolveAddress</td></tr><tr><th id=\"L589\"><a href=\"#L589\">589</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 err <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L590\"><a href=\"#L590\">590</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 skt <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L591\"><a href=\"#L591\">591</a></th><td></td></tr><tr><th id=\"L592\"><a href=\"#L592\">592</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L593\"><a href=\"#L593\">593</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 skt <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>createInternetSocket<span class=\"p\">()</span></td></tr><tr><th id=\"L594\"><a href=\"#L594\">594</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0socket<span class=\"o\">.</span>error<span class=\"p\">,</span>\u00a0se<span class=\"p\">:</span></td></tr><tr><th id=\"L595\"><a href=\"#L595\">595</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 err <span class=\"o\">=</span>\u00a0error<span class=\"o\">.</span>ConnectBindError<span class=\"p\">(</span>se<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span>\u00a0se<span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span></td></tr><tr><th id=\"L596\"><a href=\"#L596\">596</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 whenDone <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L597\"><a href=\"#L597\">597</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0whenDone <span class=\"ow\">and</span>\u00a0bindAddress <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L598\"><a href=\"#L598\">598</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L599\"><a href=\"#L599\">599</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 skt<span class=\"o\">.</span>bind<span class=\"p\">(</span>bindAddress<span class=\"p\">)</span></td></tr><tr><th id=\"L600\"><a href=\"#L600\">600</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0socket<span class=\"o\">.</span>error<span class=\"p\">,</span>\u00a0se<span class=\"p\">:</span></td></tr><tr><th id=\"L601\"><a href=\"#L601\">601</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 err <span class=\"o\">=</span>\u00a0error<span class=\"o\">.</span>ConnectBindError<span class=\"p\">(</span>se<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span>\u00a0se<span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span></td></tr><tr><th id=\"L602\"><a href=\"#L602\">602</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 whenDone <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L603\"><a href=\"#L603\">603</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_finishInit<span class=\"p\">(</span>whenDone<span class=\"p\">,</span>\u00a0skt<span class=\"p\">,</span>\u00a0err<span class=\"p\">,</span>\u00a0reactor<span class=\"p\">)</span></td></tr><tr><th id=\"L604\"><a href=\"#L604\">604</a></th><td></td></tr><tr><th id=\"L605\"><a href=\"#L605\">605</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getHost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L606\"><a href=\"#L606\">606</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Returns an IPv4Address.</span></td></tr><tr><th id=\"L607\"><a href=\"#L607\">607</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L608\"><a href=\"#L608\">608</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This indicates the address from which I am connecting.</span></td></tr><tr><th id=\"L609\"><a href=\"#L609\">609</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L610\"><a href=\"#L610\">610</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0address<span class=\"o\">.</span>IPv4Address<span class=\"p\">(</span><span class=\"s\">'TCP'</span><span class=\"p\">,</span>\u00a0<span class=\"o\">*</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>getsockname<span class=\"p\">()</span>\u00a0<span class=\"o\">+</span>\u00a0<span class=\"p\">(</span><span class=\"s\">'INET'</span><span class=\"p\">,)))</span></td></tr><tr><th id=\"L611\"><a href=\"#L611\">611</a></th><td></td></tr><tr><th id=\"L612\"><a href=\"#L612\">612</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getPeer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L613\"><a href=\"#L613\">613</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Returns an IPv4Address.</span></td></tr><tr><th id=\"L614\"><a href=\"#L614\">614</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L615\"><a href=\"#L615\">615</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This indicates the address that I am connected to.</span></td></tr><tr><th id=\"L616\"><a href=\"#L616\">616</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L617\"><a href=\"#L617\">617</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0address<span class=\"o\">.</span>IPv4Address<span class=\"p\">(</span><span class=\"s\">'TCP'</span><span class=\"p\">,</span>\u00a0<span class=\"o\">*</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>addr <span class=\"o\">+</span>\u00a0<span class=\"p\">(</span><span class=\"s\">'INET'</span><span class=\"p\">,)))</span></td></tr><tr><th id=\"L618\"><a href=\"#L618\">618</a></th><td></td></tr><tr><th id=\"L619\"><a href=\"#L619\">619</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L620\"><a href=\"#L620\">620</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 s <span class=\"o\">=</span>\u00a0<span class=\"s\">'&lt;</span><span class=\"si\">%s</span><span class=\"s\">\u00a0to </span><span class=\"si\">%s</span><span class=\"s\">\u00a0at </span><span class=\"si\">%x</span><span class=\"s\">&gt;'</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>__class__<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>addr<span class=\"p\">,</span>\u00a0unsignedID<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">))</span></td></tr><tr><th id=\"L621\"><a href=\"#L621\">621</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0s</td></tr><tr><th id=\"L622\"><a href=\"#L622\">622</a></th><td></td></tr><tr><th id=\"L623\"><a href=\"#L623\">623</a></th><td></td></tr><tr><th id=\"L624\"><a href=\"#L624\">624</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">Server</span><span class=\"p\">(</span>Connection<span class=\"p\">):</span></td></tr><tr><th id=\"L625\"><a href=\"#L625\">625</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Serverside socket-stream connection class.</span></td></tr><tr><th id=\"L626\"><a href=\"#L626\">626</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L627\"><a href=\"#L627\">627</a></th><td><span class=\"sd\">\u00a0 \u00a0 I am a serverside network connection transport; a socket which came from an</span></td></tr><tr><th id=\"L628\"><a href=\"#L628\">628</a></th><td><span class=\"sd\">\u00a0 \u00a0 accept() on a server.</span></td></tr><tr><th id=\"L629\"><a href=\"#L629\">629</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L630\"><a href=\"#L630\">630</a></th><td></td></tr><tr><th id=\"L631\"><a href=\"#L631\">631</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0sock<span class=\"p\">,</span>\u00a0protocol<span class=\"p\">,</span>\u00a0client<span class=\"p\">,</span>\u00a0server<span class=\"p\">,</span>\u00a0sessionno<span class=\"p\">):</span></td></tr><tr><th id=\"L632\"><a href=\"#L632\">632</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Server(sock, protocol, client, server, sessionno)</span></td></tr><tr><th id=\"L633\"><a href=\"#L633\">633</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L634\"><a href=\"#L634\">634</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Initialize me with a socket, a protocol, a descriptor for my peer (a</span></td></tr><tr><th id=\"L635\"><a href=\"#L635\">635</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 tuple of host, port describing the other end of the connection), an</span></td></tr><tr><th id=\"L636\"><a href=\"#L636\">636</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 instance of Port, and a session number.</span></td></tr><tr><th id=\"L637\"><a href=\"#L637\">637</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L638\"><a href=\"#L638\">638</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 Connection<span class=\"o\">.</span>__init__<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0sock<span class=\"p\">,</span>\u00a0protocol<span class=\"p\">)</span></td></tr><tr><th id=\"L639\"><a href=\"#L639\">639</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>server <span class=\"o\">=</span>\u00a0server</td></tr><tr><th id=\"L640\"><a href=\"#L640\">640</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>client <span class=\"o\">=</span>\u00a0client</td></tr><tr><th id=\"L641\"><a href=\"#L641\">641</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>sessionno <span class=\"o\">=</span>\u00a0sessionno</td></tr><tr><th id=\"L642\"><a href=\"#L642\">642</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>hostname <span class=\"o\">=</span>\u00a0client<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span></td></tr><tr><th id=\"L643\"><a href=\"#L643\">643</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>logstr <span class=\"o\">=</span>\u00a0<span class=\"s\">\"</span><span class=\"si\">%s</span><span class=\"s\">,</span><span class=\"si\">%s</span><span class=\"s\">,</span><span class=\"si\">%s</span><span class=\"s\">\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>protocol<span class=\"o\">.</span>__class__<span class=\"o\">.</span>__name__<span class=\"p\">,</span>\u00a0sessionno<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>hostname<span class=\"p\">)</span></td></tr><tr><th id=\"L644\"><a href=\"#L644\">644</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>repstr <span class=\"o\">=</span>\u00a0<span class=\"s\">\"&lt;</span><span class=\"si\">%s</span><span class=\"s\">\u00a0#</span><span class=\"si\">%s</span><span class=\"s\">\u00a0on </span><span class=\"si\">%s</span><span class=\"s\">&gt;\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>protocol<span class=\"o\">.</span>__class__<span class=\"o\">.</span>__name__<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>sessionno<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>server<span class=\"o\">.</span>port<span class=\"p\">)</span></td></tr><tr><th id=\"L645\"><a href=\"#L645\">645</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>startReading<span class=\"p\">()</span></td></tr><tr><th id=\"L646\"><a href=\"#L646\">646</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>connected <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L647\"><a href=\"#L647\">647</a></th><td></td></tr><tr><th id=\"L648\"><a href=\"#L648\">648</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L649\"><a href=\"#L649\">649</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"A string representation of this connection.</span></td></tr><tr><th id=\"L650\"><a href=\"#L650\">650</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L651\"><a href=\"#L651\">651</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>repstr</td></tr><tr><th id=\"L652\"><a href=\"#L652\">652</a></th><td></td></tr><tr><th id=\"L653\"><a href=\"#L653\">653</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">startTLS</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0ctx<span class=\"p\">,</span>\u00a0server<span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span></td></tr><tr><th id=\"L654\"><a href=\"#L654\">654</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 holder <span class=\"o\">=</span>\u00a0Connection<span class=\"o\">.</span>startTLS<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0ctx<span class=\"p\">)</span></td></tr><tr><th id=\"L655\"><a href=\"#L655\">655</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0server<span class=\"p\">:</span></td></tr><tr><th id=\"L656\"><a href=\"#L656\">656</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>set_accept_state<span class=\"p\">()</span></td></tr><tr><th id=\"L657\"><a href=\"#L657\">657</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L658\"><a href=\"#L658\">658</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>set_connect_state<span class=\"p\">()</span></td></tr><tr><th id=\"L659\"><a href=\"#L659\">659</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0holder</td></tr><tr><th id=\"L660\"><a href=\"#L660\">660</a></th><td></td></tr><tr><th id=\"L661\"><a href=\"#L661\">661</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getHost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L662\"><a href=\"#L662\">662</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Returns an IPv4Address.</span></td></tr><tr><th id=\"L663\"><a href=\"#L663\">663</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L664\"><a href=\"#L664\">664</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This indicates the server's address.</span></td></tr><tr><th id=\"L665\"><a href=\"#L665\">665</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L666\"><a href=\"#L666\">666</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0address<span class=\"o\">.</span>IPv4Address<span class=\"p\">(</span><span class=\"s\">'TCP'</span><span class=\"p\">,</span>\u00a0<span class=\"o\">*</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>getsockname<span class=\"p\">()</span>\u00a0<span class=\"o\">+</span>\u00a0<span class=\"p\">(</span><span class=\"s\">'INET'</span><span class=\"p\">,)))</span></td></tr><tr><th id=\"L667\"><a href=\"#L667\">667</a></th><td></td></tr><tr><th id=\"L668\"><a href=\"#L668\">668</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getPeer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L669\"><a href=\"#L669\">669</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Returns an IPv4Address.</span></td></tr><tr><th id=\"L670\"><a href=\"#L670\">670</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L671\"><a href=\"#L671\">671</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This indicates the client's address.</span></td></tr><tr><th id=\"L672\"><a href=\"#L672\">672</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L673\"><a href=\"#L673\">673</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0address<span class=\"o\">.</span>IPv4Address<span class=\"p\">(</span><span class=\"s\">'TCP'</span><span class=\"p\">,</span>\u00a0<span class=\"o\">*</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>client <span class=\"o\">+</span>\u00a0<span class=\"p\">(</span><span class=\"s\">'INET'</span><span class=\"p\">,)))</span></td></tr><tr><th id=\"L674\"><a href=\"#L674\">674</a></th><td></td></tr><tr><th id=\"L675\"><a href=\"#L675\">675</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">Port</span><span class=\"p\">(</span>base<span class=\"o\">.</span>BasePort<span class=\"p\">,</span>\u00a0_SocketCloser<span class=\"p\">):</span></td></tr><tr><th id=\"L676\"><a href=\"#L676\">676</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"I am a TCP server port, listening for connections.</span></td></tr><tr><th id=\"L677\"><a href=\"#L677\">677</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L678\"><a href=\"#L678\">678</a></th><td><span class=\"sd\">\u00a0 \u00a0 When a connection is accepted, I will call my factory's buildProtocol with</span></td></tr><tr><th id=\"L679\"><a href=\"#L679\">679</a></th><td><span class=\"sd\">\u00a0 \u00a0 the incoming connection as an argument, according to the specification</span></td></tr><tr><th id=\"L680\"><a href=\"#L680\">680</a></th><td><span class=\"sd\">\u00a0 \u00a0 described in twisted.internet.interfaces.IProtocolFactory.</span></td></tr><tr><th id=\"L681\"><a href=\"#L681\">681</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L682\"><a href=\"#L682\">682</a></th><td><span class=\"sd\">\u00a0 \u00a0 If you wish to change the sort of transport that will be used, my</span></td></tr><tr><th id=\"L683\"><a href=\"#L683\">683</a></th><td><span class=\"sd\">\u00a0 \u00a0 `transport' attribute will be called with the signature expected for</span></td></tr><tr><th id=\"L684\"><a href=\"#L684\">684</a></th><td><span class=\"sd\">\u00a0 \u00a0 Server.__init__, so it can be replaced.</span></td></tr><tr><th id=\"L685\"><a href=\"#L685\">685</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L686\"><a href=\"#L686\">686</a></th><td></td></tr><tr><th id=\"L687\"><a href=\"#L687\">687</a></th><td>\u00a0 \u00a0 implements<span class=\"p\">(</span>interfaces<span class=\"o\">.</span>IListeningPort<span class=\"p\">)</span></td></tr><tr><th id=\"L688\"><a href=\"#L688\">688</a></th><td></td></tr><tr><th id=\"L689\"><a href=\"#L689\">689</a></th><td>\u00a0 \u00a0 addressFamily <span class=\"o\">=</span>\u00a0socket<span class=\"o\">.</span>AF_INET</td></tr><tr><th id=\"L690\"><a href=\"#L690\">690</a></th><td>\u00a0 \u00a0 socketType <span class=\"o\">=</span>\u00a0socket<span class=\"o\">.</span>SOCK_STREAM</td></tr><tr><th id=\"L691\"><a href=\"#L691\">691</a></th><td></td></tr><tr><th id=\"L692\"><a href=\"#L692\">692</a></th><td>\u00a0 \u00a0 transport <span class=\"o\">=</span>\u00a0Server</td></tr><tr><th id=\"L693\"><a href=\"#L693\">693</a></th><td>\u00a0 \u00a0 sessionno <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L694\"><a href=\"#L694\">694</a></th><td>\u00a0 \u00a0 interface <span class=\"o\">=</span>\u00a0<span class=\"s\">''</span></td></tr><tr><th id=\"L695\"><a href=\"#L695\">695</a></th><td>\u00a0 \u00a0 backlog <span class=\"o\">=</span>\u00a0<span class=\"mi\">50</span></td></tr><tr><th id=\"L696\"><a href=\"#L696\">696</a></th><td></td></tr><tr><th id=\"L697\"><a href=\"#L697\">697</a></th><td>\u00a0 \u00a0 <span class=\"c\"># Actual port number being listened on, only set to a non-None</span></td></tr><tr><th id=\"L698\"><a href=\"#L698\">698</a></th><td>\u00a0 \u00a0 <span class=\"c\"># value when we are actually listening.</span></td></tr><tr><th id=\"L699\"><a href=\"#L699\">699</a></th><td>\u00a0 \u00a0 _realPortNumber <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L700\"><a href=\"#L700\">700</a></th><td></td></tr><tr><th id=\"L701\"><a href=\"#L701\">701</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0port<span class=\"p\">,</span>\u00a0factory<span class=\"p\">,</span>\u00a0backlog<span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span>\u00a0interface<span class=\"o\">=</span><span class=\"s\">''</span><span class=\"p\">,</span>\u00a0reactor<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L702\"><a href=\"#L702\">702</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Initialize with a numeric port to listen on.</span></td></tr><tr><th id=\"L703\"><a href=\"#L703\">703</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L704\"><a href=\"#L704\">704</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 base<span class=\"o\">.</span>BasePort<span class=\"o\">.</span>__init__<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reactor<span class=\"o\">=</span>reactor<span class=\"p\">)</span></td></tr><tr><th id=\"L705\"><a href=\"#L705\">705</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>port <span class=\"o\">=</span>\u00a0port</td></tr><tr><th id=\"L706\"><a href=\"#L706\">706</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>factory <span class=\"o\">=</span>\u00a0factory</td></tr><tr><th id=\"L707\"><a href=\"#L707\">707</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>backlog <span class=\"o\">=</span>\u00a0backlog</td></tr><tr><th id=\"L708\"><a href=\"#L708\">708</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>interface <span class=\"o\">=</span>\u00a0interface</td></tr><tr><th id=\"L709\"><a href=\"#L709\">709</a></th><td></td></tr><tr><th id=\"L710\"><a href=\"#L710\">710</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L711\"><a href=\"#L711\">711</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_realPortNumber <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L712\"><a href=\"#L712\">712</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"s\">\"&lt;</span><span class=\"si\">%s</span><span class=\"s\">\u00a0of </span><span class=\"si\">%s</span><span class=\"s\">\u00a0on </span><span class=\"si\">%s</span><span class=\"s\">&gt;\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>__class__<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>factory<span class=\"o\">.</span>__class__<span class=\"p\">,</span></td></tr><tr><th id=\"L713\"><a href=\"#L713\">713</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_realPortNumber<span class=\"p\">)</span></td></tr><tr><th id=\"L714\"><a href=\"#L714\">714</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L715\"><a href=\"#L715\">715</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"s\">\"&lt;</span><span class=\"si\">%s</span><span class=\"s\">\u00a0of </span><span class=\"si\">%s</span><span class=\"s\">\u00a0(not listening)&gt;\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>__class__<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>factory<span class=\"o\">.</span>__class__<span class=\"p\">)</span></td></tr><tr><th id=\"L716\"><a href=\"#L716\">716</a></th><td></td></tr><tr><th id=\"L717\"><a href=\"#L717\">717</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">createInternetSocket</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L718\"><a href=\"#L718\">718</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 s <span class=\"o\">=</span>\u00a0base<span class=\"o\">.</span>BasePort<span class=\"o\">.</span>createInternetSocket<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L719\"><a href=\"#L719\">719</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0platformType <span class=\"o\">==</span>\u00a0<span class=\"s\">\"posix\"</span>\u00a0<span class=\"ow\">and</span>\u00a0sys<span class=\"o\">.</span>platform <span class=\"o\">!=</span>\u00a0<span class=\"s\">\"cygwin\"</span><span class=\"p\">:</span></td></tr><tr><th id=\"L720\"><a href=\"#L720\">720</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 s<span class=\"o\">.</span>setsockopt<span class=\"p\">(</span>socket<span class=\"o\">.</span>SOL_SOCKET<span class=\"p\">,</span>\u00a0socket<span class=\"o\">.</span>SO_REUSEADDR<span class=\"p\">,</span>\u00a0<span class=\"mi\">1</span><span class=\"p\">)</span></td></tr><tr><th id=\"L721\"><a href=\"#L721\">721</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0s</td></tr><tr><th id=\"L722\"><a href=\"#L722\">722</a></th><td></td></tr><tr><th id=\"L723\"><a href=\"#L723\">723</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">startListening</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L724\"><a href=\"#L724\">724</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Create and bind my socket, and begin listening on it.</span></td></tr><tr><th id=\"L725\"><a href=\"#L725\">725</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L726\"><a href=\"#L726\">726</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This is called on unserialization, and must be called after creating a</span></td></tr><tr><th id=\"L727\"><a href=\"#L727\">727</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 server to begin listening on the specified port.</span></td></tr><tr><th id=\"L728\"><a href=\"#L728\">728</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L729\"><a href=\"#L729\">729</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L730\"><a href=\"#L730\">730</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 skt <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>createInternetSocket<span class=\"p\">()</span></td></tr><tr><th id=\"L731\"><a href=\"#L731\">731</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 skt<span class=\"o\">.</span>bind<span class=\"p\">((</span><span class=\"bp\">self</span><span class=\"o\">.</span>interface<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>port<span class=\"p\">))</span></td></tr><tr><th id=\"L732\"><a href=\"#L732\">732</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0socket<span class=\"o\">.</span>error<span class=\"p\">,</span>\u00a0le<span class=\"p\">:</span></td></tr><tr><th id=\"L733\"><a href=\"#L733\">733</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0CannotListenError<span class=\"p\">,</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>interface<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>port<span class=\"p\">,</span>\u00a0le<span class=\"p\">)</span></td></tr><tr><th id=\"L734\"><a href=\"#L734\">734</a></th><td></td></tr><tr><th id=\"L735\"><a href=\"#L735\">735</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Make sure that if we listened on port 0, we update that to</span></td></tr><tr><th id=\"L736\"><a href=\"#L736\">736</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># reflect what the OS actually assigned us.</span></td></tr><tr><th id=\"L737\"><a href=\"#L737\">737</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_realPortNumber <span class=\"o\">=</span>\u00a0skt<span class=\"o\">.</span>getsockname<span class=\"p\">()[</span><span class=\"mi\">1</span><span class=\"p\">]</span></td></tr><tr><th id=\"L738\"><a href=\"#L738\">738</a></th><td></td></tr><tr><th id=\"L739\"><a href=\"#L739\">739</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 log<span class=\"o\">.</span>msg<span class=\"p\">(</span><span class=\"s\">\"</span><span class=\"si\">%s</span><span class=\"s\">\u00a0starting on </span><span class=\"si\">%s</span><span class=\"s\">\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>factory<span class=\"o\">.</span>__class__<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_realPortNumber<span class=\"p\">))</span></td></tr><tr><th id=\"L740\"><a href=\"#L740\">740</a></th><td></td></tr><tr><th id=\"L741\"><a href=\"#L741\">741</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># The order of the next 6 lines is kind of bizarre.\u00a0 If no one</span></td></tr><tr><th id=\"L742\"><a href=\"#L742\">742</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># can explain it, perhaps we should re-arrange them.</span></td></tr><tr><th id=\"L743\"><a href=\"#L743\">743</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>factory<span class=\"o\">.</span>doStart<span class=\"p\">()</span></td></tr><tr><th id=\"L744\"><a href=\"#L744\">744</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 skt<span class=\"o\">.</span>listen<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>backlog<span class=\"p\">)</span></td></tr><tr><th id=\"L745\"><a href=\"#L745\">745</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>connected <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L746\"><a href=\"#L746\">746</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socket <span class=\"o\">=</span>\u00a0skt</td></tr><tr><th id=\"L747\"><a href=\"#L747\">747</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>fileno <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>fileno</td></tr><tr><th id=\"L748\"><a href=\"#L748\">748</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>numberAccepts <span class=\"o\">=</span>\u00a0<span class=\"mi\">100</span></td></tr><tr><th id=\"L749\"><a href=\"#L749\">749</a></th><td></td></tr><tr><th id=\"L750\"><a href=\"#L750\">750</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>startReading<span class=\"p\">()</span></td></tr><tr><th id=\"L751\"><a href=\"#L751\">751</a></th><td></td></tr><tr><th id=\"L752\"><a href=\"#L752\">752</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_buildAddr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"p\">(</span>host<span class=\"p\">,</span>\u00a0port<span class=\"p\">)):</span></td></tr><tr><th id=\"L753\"><a href=\"#L753\">753</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0address<span class=\"o\">.</span>_ServerFactoryIPv4Address<span class=\"p\">(</span><span class=\"s\">'TCP'</span><span class=\"p\">,</span>\u00a0host<span class=\"p\">,</span>\u00a0port<span class=\"p\">)</span></td></tr><tr><th id=\"L754\"><a href=\"#L754\">754</a></th><td></td></tr><tr><th id=\"L755\"><a href=\"#L755\">755</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">doRead</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L756\"><a href=\"#L756\">756</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Called when my socket is ready for reading.</span></td></tr><tr><th id=\"L757\"><a href=\"#L757\">757</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L758\"><a href=\"#L758\">758</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This accepts a connection and calls self.protocol() to handle the</span></td></tr><tr><th id=\"L759\"><a href=\"#L759\">759</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 wire-level protocol.</span></td></tr><tr><th id=\"L760\"><a href=\"#L760\">760</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L761\"><a href=\"#L761\">761</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L762\"><a href=\"#L762\">762</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0platformType <span class=\"o\">==</span>\u00a0<span class=\"s\">\"posix\"</span><span class=\"p\">:</span></td></tr><tr><th id=\"L763\"><a href=\"#L763\">763</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 numAccepts <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>numberAccepts</td></tr><tr><th id=\"L764\"><a href=\"#L764\">764</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L765\"><a href=\"#L765\">765</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># win32 event loop breaks if we do more than one accept()</span></td></tr><tr><th id=\"L766\"><a href=\"#L766\">766</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># in an iteration of the event loop.</span></td></tr><tr><th id=\"L767\"><a href=\"#L767\">767</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 numAccepts <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L768\"><a href=\"#L768\">768</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0i <span class=\"ow\">in</span>\u00a0<span class=\"nb\">range</span><span class=\"p\">(</span>numAccepts<span class=\"p\">):</span></td></tr><tr><th id=\"L769\"><a href=\"#L769\">769</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># we need this so we can deal with a factory's buildProtocol</span></td></tr><tr><th id=\"L770\"><a href=\"#L770\">770</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># calling our loseConnection</span></td></tr><tr><th id=\"L771\"><a href=\"#L771\">771</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>disconnecting<span class=\"p\">:</span></td></tr><tr><th id=\"L772\"><a href=\"#L772\">772</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span></td></tr><tr><th id=\"L773\"><a href=\"#L773\">773</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L774\"><a href=\"#L774\">774</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 skt<span class=\"p\">,</span>\u00a0addr <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>accept<span class=\"p\">()</span></td></tr><tr><th id=\"L775\"><a href=\"#L775\">775</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0socket<span class=\"o\">.</span>error<span class=\"p\">,</span>\u00a0e<span class=\"p\">:</span></td></tr><tr><th id=\"L776\"><a href=\"#L776\">776</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0e<span class=\"o\">.</span>args<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\u00a0<span class=\"ow\">in</span>\u00a0<span class=\"p\">(</span>EWOULDBLOCK<span class=\"p\">,</span>\u00a0EAGAIN<span class=\"p\">):</span></td></tr><tr><th id=\"L777\"><a href=\"#L777\">777</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>numberAccepts <span class=\"o\">=</span>\u00a0i</td></tr><tr><th id=\"L778\"><a href=\"#L778\">778</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">break</span></td></tr><tr><th id=\"L779\"><a href=\"#L779\">779</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0e<span class=\"o\">.</span>args<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\u00a0<span class=\"o\">==</span>\u00a0EPERM<span class=\"p\">:</span></td></tr><tr><th id=\"L780\"><a href=\"#L780\">780</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Netfilter on Linux may have rejected the</span></td></tr><tr><th id=\"L781\"><a href=\"#L781\">781</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># connection, but we get told to try to accept()</span></td></tr><tr><th id=\"L782\"><a href=\"#L782\">782</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># anyway.</span></td></tr><tr><th id=\"L783\"><a href=\"#L783\">783</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">continue</span></td></tr><tr><th id=\"L784\"><a href=\"#L784\">784</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0e<span class=\"o\">.</span>args<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\u00a0<span class=\"ow\">in</span>\u00a0<span class=\"p\">(</span>EMFILE<span class=\"p\">,</span>\u00a0ENOBUFS<span class=\"p\">,</span>\u00a0ENFILE<span class=\"p\">,</span>\u00a0ENOMEM<span class=\"p\">,</span>\u00a0ECONNABORTED<span class=\"p\">):</span></td></tr><tr><th id=\"L785\"><a href=\"#L785\">785</a></th><td></td></tr><tr><th id=\"L786\"><a href=\"#L786\">786</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Linux gives EMFILE when a process is not allowed</span></td></tr><tr><th id=\"L787\"><a href=\"#L787\">787</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># to allocate any more file descriptors.\u00a0 *BSD and</span></td></tr><tr><th id=\"L788\"><a href=\"#L788\">788</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Win32 give (WSA)ENOBUFS.\u00a0 Linux can also give</span></td></tr><tr><th id=\"L789\"><a href=\"#L789\">789</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># ENFILE if the system is out of inodes, or ENOMEM</span></td></tr><tr><th id=\"L790\"><a href=\"#L790\">790</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># if there is insufficient memory to allocate a new</span></td></tr><tr><th id=\"L791\"><a href=\"#L791\">791</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># dentry.\u00a0 ECONNABORTED is documented as possible on</span></td></tr><tr><th id=\"L792\"><a href=\"#L792\">792</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># both Linux and Windows, but it is not clear</span></td></tr><tr><th id=\"L793\"><a href=\"#L793\">793</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># whether there are actually any circumstances under</span></td></tr><tr><th id=\"L794\"><a href=\"#L794\">794</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># which it can happen (one might expect it to be</span></td></tr><tr><th id=\"L795\"><a href=\"#L795\">795</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># possible if a client sends a FIN or RST after the</span></td></tr><tr><th id=\"L796\"><a href=\"#L796\">796</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># server sends a SYN|ACK but before application code</span></td></tr><tr><th id=\"L797\"><a href=\"#L797\">797</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># calls accept(2), however at least on Linux this</span></td></tr><tr><th id=\"L798\"><a href=\"#L798\">798</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># _seems_ to be short-circuited by syncookies.</span></td></tr><tr><th id=\"L799\"><a href=\"#L799\">799</a></th><td></td></tr><tr><th id=\"L800\"><a href=\"#L800\">800</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log<span class=\"o\">.</span>msg<span class=\"p\">(</span><span class=\"s\">\"Could not accept new connection (</span><span class=\"si\">%s</span><span class=\"s\">)\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span></td></tr><tr><th id=\"L801\"><a href=\"#L801\">801</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 errorcode<span class=\"p\">[</span>e<span class=\"o\">.</span>args<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]],))</span></td></tr><tr><th id=\"L802\"><a href=\"#L802\">802</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">break</span></td></tr><tr><th id=\"L803\"><a href=\"#L803\">803</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span></td></tr><tr><th id=\"L804\"><a href=\"#L804\">804</a></th><td></td></tr><tr><th id=\"L805\"><a href=\"#L805\">805</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 protocol <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>factory<span class=\"o\">.</span>buildProtocol<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>_buildAddr<span class=\"p\">(</span>addr<span class=\"p\">))</span></td></tr><tr><th id=\"L806\"><a href=\"#L806\">806</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0protocol <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L807\"><a href=\"#L807\">807</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 skt<span class=\"o\">.</span>close<span class=\"p\">()</span></td></tr><tr><th id=\"L808\"><a href=\"#L808\">808</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">continue</span></td></tr><tr><th id=\"L809\"><a href=\"#L809\">809</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 s <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>sessionno</td></tr><tr><th id=\"L810\"><a href=\"#L810\">810</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>sessionno <span class=\"o\">=</span>\u00a0s<span class=\"o\">+</span><span class=\"mi\">1</span></td></tr><tr><th id=\"L811\"><a href=\"#L811\">811</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 transport <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>transport<span class=\"p\">(</span>skt<span class=\"p\">,</span>\u00a0protocol<span class=\"p\">,</span>\u00a0addr<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0s<span class=\"p\">)</span></td></tr><tr><th id=\"L812\"><a href=\"#L812\">812</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 transport <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_preMakeConnection<span class=\"p\">(</span>transport<span class=\"p\">)</span></td></tr><tr><th id=\"L813\"><a href=\"#L813\">813</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 protocol<span class=\"o\">.</span>makeConnection<span class=\"p\">(</span>transport<span class=\"p\">)</span></td></tr><tr><th id=\"L814\"><a href=\"#L814\">814</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L815\"><a href=\"#L815\">815</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>numberAccepts <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>numberAccepts<span class=\"o\">+</span><span class=\"mi\">20</span></td></tr><tr><th id=\"L816\"><a href=\"#L816\">816</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span><span class=\"p\">:</span></td></tr><tr><th id=\"L817\"><a href=\"#L817\">817</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Note that in TLS mode, this will possibly catch SSL.Errors</span></td></tr><tr><th id=\"L818\"><a href=\"#L818\">818</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># raised by self.socket.accept()</span></td></tr><tr><th id=\"L819\"><a href=\"#L819\">819</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\">#</span></td></tr><tr><th id=\"L820\"><a href=\"#L820\">820</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># There is no \"except SSL.Error:\" above because SSL may be</span></td></tr><tr><th id=\"L821\"><a href=\"#L821\">821</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># None if there is no SSL support.\u00a0 In any case, all the</span></td></tr><tr><th id=\"L822\"><a href=\"#L822\">822</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># \"except SSL.Error:\" suite would probably do is log.deferr()</span></td></tr><tr><th id=\"L823\"><a href=\"#L823\">823</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># and return, so handling it here works just as well.</span></td></tr><tr><th id=\"L824\"><a href=\"#L824\">824</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log<span class=\"o\">.</span>deferr<span class=\"p\">()</span></td></tr><tr><th id=\"L825\"><a href=\"#L825\">825</a></th><td></td></tr><tr><th id=\"L826\"><a href=\"#L826\">826</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_preMakeConnection</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0transport<span class=\"p\">):</span></td></tr><tr><th id=\"L827\"><a href=\"#L827\">827</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0transport</td></tr><tr><th id=\"L828\"><a href=\"#L828\">828</a></th><td></td></tr><tr><th id=\"L829\"><a href=\"#L829\">829</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">loseConnection</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0connDone<span class=\"o\">=</span>failure<span class=\"o\">.</span>Failure<span class=\"p\">(</span>main<span class=\"o\">.</span>CONNECTION_DONE<span class=\"p\">)):</span></td></tr><tr><th id=\"L830\"><a href=\"#L830\">830</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Stop accepting connections on this port.</span></td></tr><tr><th id=\"L831\"><a href=\"#L831\">831</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L832\"><a href=\"#L832\">832</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This will shut down my socket and call self.connectionLost().</span></td></tr><tr><th id=\"L833\"><a href=\"#L833\">833</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 It returns a deferred which will fire successfully when the</span></td></tr><tr><th id=\"L834\"><a href=\"#L834\">834</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 port is actually closed.</span></td></tr><tr><th id=\"L835\"><a href=\"#L835\">835</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L836\"><a href=\"#L836\">836</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>disconnecting <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L837\"><a href=\"#L837\">837</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>stopReading<span class=\"p\">()</span></td></tr><tr><th id=\"L838\"><a href=\"#L838\">838</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>connected<span class=\"p\">:</span></td></tr><tr><th id=\"L839\"><a href=\"#L839\">839</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>deferred <span class=\"o\">=</span>\u00a0defer<span class=\"o\">.</span>Deferred<span class=\"p\">()</span></td></tr><tr><th id=\"L840\"><a href=\"#L840\">840</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>reactor<span class=\"o\">.</span>callLater<span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>connectionLost<span class=\"p\">,</span>\u00a0connDone<span class=\"p\">)</span></td></tr><tr><th id=\"L841\"><a href=\"#L841\">841</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>deferred</td></tr><tr><th id=\"L842\"><a href=\"#L842\">842</a></th><td></td></tr><tr><th id=\"L843\"><a href=\"#L843\">843</a></th><td>\u00a0 \u00a0 stopListening <span class=\"o\">=</span>\u00a0loseConnection</td></tr><tr><th id=\"L844\"><a href=\"#L844\">844</a></th><td></td></tr><tr><th id=\"L845\"><a href=\"#L845\">845</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectionLost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reason<span class=\"p\">):</span></td></tr><tr><th id=\"L846\"><a href=\"#L846\">846</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Cleans up my socket.</span></td></tr><tr><th id=\"L847\"><a href=\"#L847\">847</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L848\"><a href=\"#L848\">848</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 log<span class=\"o\">.</span>msg<span class=\"p\">(</span><span class=\"s\">'(Port </span><span class=\"si\">%s</span><span class=\"s\">\u00a0Closed)'</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_realPortNumber<span class=\"p\">)</span></td></tr><tr><th id=\"L849\"><a href=\"#L849\">849</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_realPortNumber <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L850\"><a href=\"#L850\">850</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 base<span class=\"o\">.</span>BasePort<span class=\"o\">.</span>connectionLost<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reason<span class=\"p\">)</span></td></tr><tr><th id=\"L851\"><a href=\"#L851\">851</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>connected <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L852\"><a href=\"#L852\">852</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_closeSocket<span class=\"p\">()</span></td></tr><tr><th id=\"L853\"><a href=\"#L853\">853</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>socket</td></tr><tr><th id=\"L854\"><a href=\"#L854\">854</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>fileno</td></tr><tr><th id=\"L855\"><a href=\"#L855\">855</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>factory<span class=\"o\">.</span>doStop<span class=\"p\">()</span></td></tr><tr><th id=\"L856\"><a href=\"#L856\">856</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"deferred\"</span><span class=\"p\">):</span></td></tr><tr><th id=\"L857\"><a href=\"#L857\">857</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>deferred<span class=\"o\">.</span>callback<span class=\"p\">(</span><span class=\"bp\">None</span><span class=\"p\">)</span></td></tr><tr><th id=\"L858\"><a href=\"#L858\">858</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>deferred</td></tr><tr><th id=\"L859\"><a href=\"#L859\">859</a></th><td></td></tr><tr><th id=\"L860\"><a href=\"#L860\">860</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">logPrefix</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L861\"><a href=\"#L861\">861</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Returns the name of my class, to prefix log entries with.</span></td></tr><tr><th id=\"L862\"><a href=\"#L862\">862</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L863\"><a href=\"#L863\">863</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0reflect<span class=\"o\">.</span>qual<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>factory<span class=\"o\">.</span>__class__<span class=\"p\">)</span></td></tr><tr><th id=\"L864\"><a href=\"#L864\">864</a></th><td></td></tr><tr><th id=\"L865\"><a href=\"#L865\">865</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getHost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L866\"><a href=\"#L866\">866</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Returns an IPv4Address.</span></td></tr><tr><th id=\"L867\"><a href=\"#L867\">867</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L868\"><a href=\"#L868\">868</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This indicates the server's address.</span></td></tr><tr><th id=\"L869\"><a href=\"#L869\">869</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L870\"><a href=\"#L870\">870</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0address<span class=\"o\">.</span>IPv4Address<span class=\"p\">(</span><span class=\"s\">'TCP'</span><span class=\"p\">,</span>\u00a0<span class=\"o\">*</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>socket<span class=\"o\">.</span>getsockname<span class=\"p\">()</span>\u00a0<span class=\"o\">+</span>\u00a0<span class=\"p\">(</span><span class=\"s\">'INET'</span><span class=\"p\">,)))</span></td></tr><tr><th id=\"L871\"><a href=\"#L871\">871</a></th><td></td></tr><tr><th id=\"L872\"><a href=\"#L872\">872</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">Connector</span><span class=\"p\">(</span>base<span class=\"o\">.</span>BaseConnector<span class=\"p\">):</span></td></tr><tr><th id=\"L873\"><a href=\"#L873\">873</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0host<span class=\"p\">,</span>\u00a0port<span class=\"p\">,</span>\u00a0factory<span class=\"p\">,</span>\u00a0timeout<span class=\"p\">,</span>\u00a0bindAddress<span class=\"p\">,</span>\u00a0reactor<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L874\"><a href=\"#L874\">874</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>host <span class=\"o\">=</span>\u00a0host</td></tr><tr><th id=\"L875\"><a href=\"#L875\">875</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">isinstance</span><span class=\"p\">(</span>port<span class=\"p\">,</span>\u00a0types<span class=\"o\">.</span>StringTypes<span class=\"p\">):</span></td></tr><tr><th id=\"L876\"><a href=\"#L876\">876</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L877\"><a href=\"#L877\">877</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 port <span class=\"o\">=</span>\u00a0socket<span class=\"o\">.</span>getservbyname<span class=\"p\">(</span>port<span class=\"p\">,</span>\u00a0<span class=\"s\">'tcp'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L878\"><a href=\"#L878\">878</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0socket<span class=\"o\">.</span>error<span class=\"p\">,</span>\u00a0e<span class=\"p\">:</span></td></tr><tr><th id=\"L879\"><a href=\"#L879\">879</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0error<span class=\"o\">.</span>ServiceNameUnknownError<span class=\"p\">(</span>string<span class=\"o\">=</span><span class=\"s\">\"</span><span class=\"si\">%s</span><span class=\"s\">\u00a0(</span><span class=\"si\">%r</span><span class=\"s\">)\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span>e<span class=\"p\">,</span>\u00a0port<span class=\"p\">))</span></td></tr><tr><th id=\"L880\"><a href=\"#L880\">880</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>port <span class=\"o\">=</span>\u00a0port</td></tr><tr><th id=\"L881\"><a href=\"#L881\">881</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>bindAddress <span class=\"o\">=</span>\u00a0bindAddress</td></tr><tr><th id=\"L882\"><a href=\"#L882\">882</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 base<span class=\"o\">.</span>BaseConnector<span class=\"o\">.</span>__init__<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0factory<span class=\"p\">,</span>\u00a0timeout<span class=\"p\">,</span>\u00a0reactor<span class=\"p\">)</span></td></tr><tr><th id=\"L883\"><a href=\"#L883\">883</a></th><td></td></tr><tr><th id=\"L884\"><a href=\"#L884\">884</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_makeTransport</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L885\"><a href=\"#L885\">885</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0Client<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>host<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>port<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>bindAddress<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>reactor<span class=\"p\">)</span></td></tr><tr><th id=\"L886\"><a href=\"#L886\">886</a></th><td></td></tr><tr><th id=\"L887\"><a href=\"#L887\">887</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getDestination</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L888\"><a href=\"#L888\">888</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0address<span class=\"o\">.</span>IPv4Address<span class=\"p\">(</span><span class=\"s\">'TCP'</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>host<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>port<span class=\"p\">,</span>\u00a0<span class=\"s\">'INET'</span><span class=\"p\">)</span></td></tr></tbody></table>\n\n      </div>\n      <div id=\"anydiff\">\n        <form action=\"/LUCICodeRepository/nomaticIM/diff\" method=\"get\">\n          <div class=\"buttons\">\n            <input type=\"hidden\" name=\"new_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/tcp.py\" />\n            <input type=\"hidden\" name=\"old_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/tcp.py\" />\n            <input type=\"hidden\" name=\"new_rev\" />\n            <input type=\"hidden\" name=\"old_rev\" />\n            <input type=\"submit\" value=\"View changes...\" title=\"Select paths and revs for Diff\" />\n          </div>\n        </form>\n      </div>\n      <div id=\"help\"><strong>Note:</strong> See <a href=\"/LUCICodeRepository/nomaticIM/wiki/TracBrowser\">TracBrowser</a>\n        for help on using the repository browser.</div>\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"first\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/tcp.py?format=txt\">Plain Text</a>\n        </li><li class=\"last\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/tcp.py\">Original Format</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/LUCICodeRepository/nomaticIM/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/LUCICodeRepository/nomaticIM/about\"><strong>Trac 1.0.1</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">All content copyright 2007-2008 by LUCI <br /><a href=\"http://luci.ics.uci.edu/\">http://luci.ics.uci.edu/</a></p>\n    </div>\n\t\t<div id=\"sitefooter\">\n\t\t\t<script src=\"http://www.google-analytics.com/urchin.js\" type=\"text/javascript\">\n\t\t\t</script>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t\t_uacct = \"UA-338915-2\";\n\t\t\t\turchinTracker();\n\t\t\t</script>\n\t\t</div>\n\t</body>\n</html>", "id": 44138.0}