{"text": "Search LoginPreferencesHelp GuideAbout Trac WikiTimelineRoadmapBrowse SourceView TicketsSearch Context Navigation Previous ChangesetNext Changeset Changeset 336 View differences inlineside by side Show lines around each change Show the changes in full context Ignore Blank lines Case changes White space changes Timestamp Jun 27 2 7 3 58 24 PM 8 years ago Author skaufman1Message Implemented Database split much more cleanly implemented Database entropy and made Instance final Location nomatic trunk service edu uci ics luci nomatic service Files 3 edited Database java modified 2 diffs Instance java modified 1 diff test DatabaseTest java modified 4 diffs Legend UnmodifiedAddedRemoved nomatic trunk service edu uci ics luci nomatic service Database java r335 r336 22 33import edu uci ics luci nomatic service Attribute 4 import java util ArrayList 5 import java util List 4import java lang reflect 5import java util 66 77public class Database extends ArrayList Instance 99 private static final long serialVersionUID 674833362 347219276L 1 1 11 public Attribute getBestAttribute 12 13 return Attribute ACTIVE PROCESS 14 15 16 17 Returns the entropy of the database for the given attribute 18 19 public double entropy Attribute att 2 21 Map Object Integer freqs new TreeMap Object Integer 22 double dataEntropy 23 24 Calculate the frequency of each of the values in the given attribute 25 for Instance i this 26 if freqs containsKey getByAttribute att i 27 freqs put getByAttribute att i freqs get getByAttribute att i 1 28 else 29 freqs put getByAttribute att i 1 3 31 32 for int freq freqs values 33 dataEntropy freq this size log2 freq this size 34 35 return dataEntropy 36 37 38 def gain data attr target attr 39 4 Calculates the information gain reduction in entropy that would 41 result by splitting the data on the chosen attribute attr 42 43 val freq 44 subset entropy 45 46 Calculate the frequency of each of the values in the target attribute 47 for record in data 48 if val freq has key record attr 49 val freq record attr 1 5 else 51 val freq record attr 1 52 53 Calculate the sum of the entropy for each subset of records weighted 54 by their probability of occuring in the training set 55 for val in val freq keys 56 val prob val freq val sum val freq values 57 data subset record for record in data if record attr val 58 subset entropy val prob entropy data subset target attr 59 6 Subtract the entropy of the chosen attribute from the entropy of the 61 whole data set with respect to the target attribute and return it 62 return entropy data target attr subset entropy 63 1164 public double positiveProportion Attribute att Object leftOfSplit 1265 13 int posCount 14 List Integer split split att leftOfSplit 15 for int i split 16 if i 1 17 posCount 18 19 return double posCount split size 66 Database split split att leftOfSplit 67 return double split 1 size split size 2 68 2169 227 public double negativeProportion Attribute att Object leftOfSplit 2371 24 int negCount 25 List Integer split split att leftOfSplit 26 for int i split 27 if i 1 28 negCount 29 3 return double negCount split size 72 Database split split att leftOfSplit 73 return double split size split 1 size 3174 3275 33 public List Integer split Attribute att Object leftOfSplit 76 public double entropy Attribute att Object leftOfSplit 3477 35 return Database split this att leftOfSplit 78 double proPos positiveProportion Attribute DAY OF THE WEEK 2 79 double proNeg negativeProportion Attribute DAY OF THE WEEK 2 8 return proPos log2 proPos proNeg log2 proNeg 3681 3782 38 public static List Integer split List Instance database Attribute att Object leftOfSplit 83 private static double log2 double d 84 return Math log d Math log 2 85 86 87 public Database split Attribute att Object splitVal 3988 4 switch att 41 case DAY OF THE WEEK 42 return splitByDayOfTheWeek database Integer leftOfSplit intValue 43 case MINUTES SINCE MIDNIGHT 44 return splitByMinutesSinceMidnight database Integer leftOfSplit intValue 45 case IP ADDRESS 46 return splitByIPAddress database String leftOfSplit 47 case DNS 48 return splitByDNS database String leftOfSplit 49 case PLACE 5 return splitByPlace database String leftOfSplit 51 case ACTIVITY 52 return splitByActivity database String leftOfSplit 53 case OTHER 54 return splitByOther database String leftOfSplit 55 case WIFI MAC ADDRESS 56 return splitByWifiMACAddress database String leftOfSplit 57 case WIFI SSID 58 return splitByWifiSSID database String leftOfSplit 59 case NETWORK LOAD 6 return splitByNetworkLoad database Double leftOfSplit 61 case ACTIVE PROCESS 62 return splitByActiveProcess database String leftOfSplit 63 case SINGLE DISPLAY 64 return splitBySingleDisplay database Boolean leftOfSplit 65 default 66 throw new IllegalArgumentException Unknown attribute att given 89 Database left new Database 9 Database right new Database 91 92 for Instance i this 93 getByAttribute att i compareTo splitVal left right add i 94 95 return new Database left right 96 97 98 private Comparable getByAttribute Attribute att Instance i 99 1 try 1 1 Method getter getGetterForAttribute att 1 2 return Comparable getter invoke i Object null 1 3 1 4 catch Exception e 1 5 TODO Handle this 1 6 return null 671 7 681 8 691 9 7 private static List Integer splitByDayOfTheWeek List Instance fll int leftOfSplit 11 private Method getGetterForAttribute Attribute att 71111 72 ArrayList Integer tuple new ArrayList Integer fll size 73 for Instance fl fll 74 tuple add fl getDayOfTheWeek compareTo leftOfSplit 1 1 75 return tuple 112 try 113 switch att 114 case DAY OF THE WEEK 115 return Instance class getDeclaredMethod getDayOfTheWeek 116 case MINUTES SINCE MIDNIGHT 117 return Instance class getDeclaredMethod getMinutesSinceMidnight 118 case IP ADDRESS 119 return Instance class getDeclaredMethod getIpAddress 12 case DNS 121 return Instance class getDeclaredMethod getDns 122 case PLACE 123 return Instance class getDeclaredMethod getPlace 124 case ACTIVITY 125 return Instance class getDeclaredMethod getActivity 126 case OTHER 127 return Instance class getDeclaredMethod getOther 128 case WIFI MAC ADDRESS 129 return Instance class getDeclaredMethod getWifiMACAddress 13 case WIFI SSID 131 return Instance class getDeclaredMethod getWifiSSID 132 case NETWORK LOAD 133 return Instance class getDeclaredMethod getNetworkLoad 134 case ACTIVE PROCESS 135 return Instance class getDeclaredMethod getActiveProcess 136 case SINGLE DISPLAY 137 return Instance class getDeclaredMethod getSingleDisplay 138 default 139 throw new IllegalArgumentException Unknown attribute att given 14 141 142 catch NoSuchMethodException e 143 TODO Actually handle this somehow 144 return null 145 76146 77 78 private static List Integer splitByMinutesSinceMidnight List Instance fll int leftOfSplit 79 8 ArrayList Integer tuple new ArrayList Integer fll size 81 for Instance fl fll 82 tuple add fl getMinutesSinceMidnight compareTo leftOfSplit 1 1 83 return tuple 84 85 86 private static List Integer splitByIPAddress List Instance fll String leftOfSplit 87 88 ArrayList Integer tuple new ArrayList Integer fll size 89 for Instance fl fll 9 tuple add fl getIpAddress compareTo leftOfSplit 1 1 91 return tuple 92 93 94 private static List Integer splitByDNS List Instance fll String leftOfSplit 95 96 ArrayList Integer tuple new ArrayList Integer fll size 97 for Instance fl fll 98 tuple add fl getDns compareTo leftOfSplit 1 1 99 return tuple 1 1 1 1 2 private static List Integer splitByPlace List Instance fll String leftOfSplit 1 3 1 4 ArrayList Integer tuple new ArrayList Integer fll size 1 5 for Instance fl fll 1 6 tuple add fl getPlace compareTo leftOfSplit 1 1 1 7 return tuple 1 8 1 9 11 private static List Integer splitByActivity List Instance fll String leftOfSplit 111 112 ArrayList Integer tuple new ArrayList Integer fll size 113 for Instance fl fll 114 tuple add fl getActivity compareTo leftOfSplit 1 1 115 return tuple 116 117 118 private static List Integer splitByOther List Instance fll String leftOfSplit 119 12 ArrayList Integer tuple new ArrayList Integer fll size 121 for Instance fl fll 122 tuple add fl getOther compareTo leftOfSplit 1 1 123 return tuple 124 125 126 private static List Integer splitByWifiMACAddress List Instance fll String leftOfSplit 127 128 ArrayList Integer tuple new ArrayList Integer fll size 129 for Instance fl fll 13 tuple add fl getWifiMACAddress compareTo leftOfSplit 1 1 131 return tuple 132 133 134 private static List Integer splitByWifiSSID List Instance fll String leftOfSplit 135 136 ArrayList Integer tuple new ArrayList Integer fll size 137 for Instance fl fll 138 tuple add fl getWifiSSID compareTo leftOfSplit 1 1 139 return tuple 14 141 142 private static List Integer splitByNetworkLoad List Instance fll Double leftOfSplit 143 144 ArrayList Integer tuple new ArrayList Integer fll size 145 for Instance fl fll 146 tuple add fl getNetworkLoad compareTo leftOfSplit 1 1 147 return tuple 148 149 15 private static List Integer splitByActiveProcess List Instance fll String leftOfSplit 151 152 ArrayList Integer tuple new ArrayList Integer fll size 153 for Instance fl fll 154 tuple add fl getActiveProcess compareTo leftOfSplit 1 1 155 return tuple 156 157 158 private static List Integer splitBySingleDisplay List Instance fll Boolean leftOfSplit 159 16 ArrayList Integer tuple new ArrayList Integer fll size 161 for Instance fl fll 162 tuple add fl getSingleDisplay compareTo leftOfSplit 1 1 163 return tuple 164 165 166147 nomatic trunk service edu uci ics luci nomatic service Instance java r334 r336 44import java lang reflect 55 6 public class Instance implements Cloneable 6public final class Instance implements Cloneable 77 88 private Integer dayOfTheWeek nomatic trunk service edu uci ics luci nomatic service test DatabaseTest java r335 r336 22 33import static org junit Assert assertEquals 4 import java util Arrays 5 import java util List 4import static org junit Assert assertTrue 65import org junit Test 76import edu uci ics luci nomatic service 414 4241 Test 43 public void testInstanceSplit throws Exception 42 public void testEntropy throws Exception 4443 4544 Instance i1 new Instance 127 1 244 244 244 At home 5857 d add i3 5958 6 assertEquals List Integer Arrays asList new Integer 1 1 1 61 d split Attribute DAY OF THE WEEK 62 assertEquals List Integer Arrays asList new Integer 1 1 1 63 d split Attribute DAY OF THE WEEK 1 64 assertEquals List Integer Arrays asList new Integer 1 1 1 65 d split Attribute DAY OF THE WEEK 2 66 assertEquals List Integer Arrays asList new Integer 1 1 1 67 d split Attribute DAY OF THE WEEK 3 68 assertEquals List Integer Arrays asList new Integer 1 1 1 69 d split Attribute DAY OF THE WEEK 4 59 double e d entropy Attribute DAY OF THE WEEK 2 6 assertTrue e 9182959 61 assertTrue 9182958 e 62 63 64 public static double log2 double d 65 return Math log d Math log 2 7 66 7167 7268 Test 73 public void testStaticSplit throws Exception 69 public void testSplit throws Exception 747 7571 Instance i1 new Instance 127 1 244 244 244 At home 8278 dancing with Nick 16 cb c9 e3 41 UCInet Mobile 1 8379 firefox false 84 List Instance database List Instance Arrays asList new Instance i1 i2 i3 858 86 assertEquals List Integer Arrays asList new Integer 1 1 1 87 Database split database Attribute DAY OF THE WEEK 88 assertEquals List Integer Arrays asList new Integer 1 1 1 89 Database split database Attribute DAY OF THE WEEK 1 9 assertEquals List Integer Arrays asList new Integer 1 1 1 91 Database split database Attribute DAY OF THE WEEK 2 92 assertEquals List Integer Arrays asList new Integer 1 1 1 93 Database split database Attribute DAY OF THE WEEK 3 94 assertEquals List Integer Arrays asList new Integer 1 1 1 95 Database split database Attribute DAY OF THE WEEK 4 81 Database d new Database 82 d add i1 83 d add i2 84 d add i3 85 86 Database splitByMinutes d split Attribute MINUTES SINCE MIDNIGHT 15 87 assertTrue splitByMinutes contains i1 88 assertTrue splitByMinutes contains i2 89 assertTrue splitByMinutes 1 contains i3 969 97 9891 Note See TracChangeset for help on using the changeset viewer Download in other formats Unified Diff Zip Archive Powered by Trac 1 1 By Edgewall Software All content copyright 2 7 2 8 by LUCI http luci ics uci edu ", "_id": "http://djp3-pc2.ics.uci.edu/LUCICodeRepository/nomaticIM/changeset/336", "title": "\n      changeset 336 \u2013 nomatic*im\n    ", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n  \n\n\n  <head>\n\t\t<title>\n      Changeset 336 \u2013 Nomatic*IM\n    </title><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><link rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search\" /><link rel=\"prev\" href=\"/LUCICodeRepository/nomaticIM/changeset/335\" title=\"Changeset 335\" /><link rel=\"last\" href=\"/LUCICodeRepository/nomaticIM/changeset/1312\" title=\"Changeset 1312\" /><link rel=\"help\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\" /><link rel=\"alternate\" href=\"?format=diff&amp;new=336\" type=\"text/plain\" class=\"diff\" title=\"Unified Diff\" /><link rel=\"alternate\" href=\"?format=zip&amp;new=336\" type=\"application/zip\" class=\"zip\" title=\"Zip Archive\" /><link rel=\"next\" href=\"/LUCICodeRepository/nomaticIM/changeset/337\" title=\"Changeset 337\" /><link rel=\"start\" href=\"/LUCICodeRepository/nomaticIM/wiki\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/changeset.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/diff.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/code.css\" type=\"text/css\" /><link rel=\"first\" href=\"/LUCICodeRepository/nomaticIM/changeset/1\" title=\"Changeset 1\" /><link rel=\"shortcut icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link rel=\"icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link type=\"application/opensearchdescription+xml\" rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search/opensearch\" title=\"Search Nomatic*IM\" /><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/jquery.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/babel.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/messages/en_US.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/trac.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/search.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/diff.js\"></script><script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\".trac-toggledeleted\").show().click(function() {\n                  $(this).siblings().find(\".trac-deleted\").toggle();\n                  return false;\n        }).click();\n        $(\"#content\").find(\"li.entry h2 a\").parent().addAnchor(_(\"Link to this diff\"));\n      });\n    </script>\n\t</head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://luci.ics.uci.edu/#code\"><img src=\"http://luci.ics.uci.edu/blog/archives/LUCIhorzTight.jpg\" alt=\"LUCI Code Repository\" /></a>\n      </div>\n      <form id=\"search\" action=\"/LUCICodeRepository/nomaticIM/search\" method=\"get\">\n        <div>\n          <label for=\"proj-search\">Search:</label>\n          <input type=\"text\" id=\"proj-search\" name=\"q\" size=\"18\" value=\"\" />\n          <input type=\"submit\" value=\"Search\" />\n        </div>\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/login\">Login</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/prefs\">Preferences</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\">Help/Guide</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/wiki\">Wiki</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/timeline\">Timeline</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/roadmap\">Roadmap</a></li><li class=\"active\"><a href=\"/LUCICodeRepository/nomaticIM/browser\">Browse Source</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/report\">View Tickets</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/search\">Search</a></li>\n    </ul>\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><span>&larr; <a class=\"prev\" href=\"/LUCICodeRepository/nomaticIM/changeset/335\" title=\"Changeset 335\">Previous Changeset</a></span></li><li class=\"last\"><span><a class=\"next\" href=\"/LUCICodeRepository/nomaticIM/changeset/337\" title=\"Changeset 337\">Next Changeset</a> &rarr;</span></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"changeset\">\n      <div id=\"title\">\n            <h1>Changeset 336</h1>\n      </div>\n      <form id=\"prefs\" action=\"\">\n        <div>\n          \n  <label for=\"style\">View differences</label>\n  <select id=\"style\" name=\"style\">\n    <option selected=\"selected\" value=\"inline\">inline</option>\n    <option value=\"sidebyside\">side by side</option>\n  </select>\n  <div class=\"field\">\n    <label><input type=\"radio\" name=\"contextall\" value=\"0\" checked=\"checked\" />\n             Show</label>\n      <label><input type=\"text\" name=\"contextlines\" id=\"contextlines\" size=\"2\" maxlength=\"3\" value=\"2\" />\n             lines around each change</label><br />\n    <label><input type=\"radio\" name=\"contextall\" value=\"1\" />\n           Show the changes in full context</label>\n  </div>\n  <fieldset id=\"ignore\">\n    <legend>Ignore:</legend>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignoreblanklines\" name=\"ignoreblanklines\" />\n      <label for=\"ignoreblanklines\">Blank lines</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorecase\" name=\"ignorecase\" />\n      <label for=\"ignorecase\">Case changes</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorewhitespace\" name=\"ignorewhitespace\" />\n      <label for=\"ignorewhitespace\">White space changes</label>\n    </div>\n  </fieldset>\n  <div class=\"buttons\">\n    <input type=\"submit\" name=\"update\" value=\"Update\" />\n  </div>\n\n        </div>\n      </form>\n      <dl id=\"overview\">\n          <dt class=\"property time\">Timestamp:</dt>\n          <dd class=\"time\">\n             Jun 27, 2007, 3:58:24 PM\n             (<a class=\"timeline\" href=\"/LUCICodeRepository/nomaticIM/timeline?from=2007-06-27T15%3A58%3A24-07%3A00&amp;precision=second\" title=\"See timeline at Jun 27, 2007, 3:58:24 PM\">8 years</a> ago)\n          </dd>\n          <dt class=\"property author\">Author:</dt>\n          <dd class=\"author\">skaufman1</dd>\n          <dt class=\"property message\">Message:</dt>\n          <dd class=\"message searchable\">\n            \n            \n              <p>\nImplemented Database.split much more cleanly, implemented Database.entropy, and made Instance final.<br />\n</p>\n\n            \n            \n          </dd>\n          <dt class=\"property location\">Location:</dt>\n          <dd class=\"searchable\"><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service?rev=336\">nomatic/trunk/service/edu/uci/ics/luci/nomatic/service</a></dd>\n        <dt class=\"property files\">\n          Files:\n        </dt>\n        <dd class=\"files\">\n          <div class=\"legend\" id=\"file-legend\">\n            <dl>\n              <dt class=\"mod\"></dt><dd>3 edited</dd>\n            </dl>\n          </div>\n          <br />\n          <ul>\n            <li>\n          <div class=\"mod\"> </div>\n            <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/Database.java?rev=336\">\n              Database.java\n            </a>\n          <span class=\"comment\">(modified)</span>\n              (<a title=\"Show differences\" href=\"#file0\">2 diffs</a>)\n            </li><li>\n          <div class=\"mod\"> </div>\n            <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/Instance.java?rev=336\">\n              Instance.java\n            </a>\n          <span class=\"comment\">(modified)</span>\n              (<a title=\"Show differences\" href=\"#file1\">1 diff</a>)\n            </li><li>\n          <div class=\"mod\"> </div>\n            <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/test/DatabaseTest.java?rev=336\">\n              test/DatabaseTest.java\n            </a>\n          <span class=\"comment\">(modified)</span>\n              (<a title=\"Show differences\" href=\"#file2\">4 diffs</a>)\n            </li>\n          </ul>\n        </dd>\n      </dl>\n      <div class=\"diff\">\n        <div class=\"legend\" id=\"diff-legend\">\n          <h3>Legend:</h3>\n          <dl>\n            <dt class=\"unmod\"></dt><dd>Unmodified</dd>\n            <dt class=\"add\"></dt><dd>Added</dd>\n            <dt class=\"rem\"></dt><dd>Removed</dd>\n          </dl>\n        </div>\n        <div class=\"diff\">\n  <ul class=\"entries\">\n      <li class=\"entry\">\n        <h2 id=\"file0\">\n          <a href=\"/LUCICodeRepository/nomaticIM/changeset/336/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/Database.java\" title=\"Show the changeset 336 restricted to nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/Database.java\">nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/Database.java</a>\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"Revision 335\">\n                    <a title=\"Show revision 335 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/Database.java?rev=335#L2\">\n                      r335</a>\n                  </th>\n                  <th title=\"Revision 336\">\n                    <a title=\"Show revision 336 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/Database.java?rev=336#L2\">\n                      r336</a>\n                  </th>\n                  <td>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>2</th><th>2</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>3</th><th>3</th><td class=\"l\"><span>import edu.uci.ics.luci.nomatic.service.Attribute;</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>4</th><th>\u00a0</th><td class=\"l\"><span>import java.<del>util.ArrayList</del>;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>5</th><th>\u00a0</th><td class=\"l\"><span>import java.util.<del>List</del>;</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>4</th><td class=\"r\"><span>import java.<ins>lang.reflect.*</ins>;</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>5</th><td class=\"r\"><span>import java.util.<ins>*</ins>;</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>6</th><th>6</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>7</th><th>7</th><td class=\"l\"><span>public class Database extends ArrayList&lt;Instance&gt; {</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/Database.java?rev=335#L9\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/Database.java?rev=336#L9\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>9</th><th>9</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; private static final long serialVersionUID = -6748333620347219276L;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>10</th><th>10</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>11</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; public Attribute getBestAttribute()</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>12</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>13</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return Attribute.ACTIVE_PROCESS;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>14</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>15</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>16</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; /*</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>17</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* Returns the entropy of the database for the given attribute.</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>18</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*/</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>19</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; public double entropy(Attribute att)</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>20</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>21</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Map&lt;Object,Integer&gt; freqs = new TreeMap&lt;Object,Integer&gt;();</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>22</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; double dataEntropy = 0.0;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>23</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>24</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Calculate the frequency of each of the values in the given attribute</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>25</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (Instance i : this) {</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>26</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (freqs.containsKey(getByAttribute(att, i)))</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>27</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; freqs.put(getByAttribute(att, i), freqs.get(getByAttribute(att, i)) + 1);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>28</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>29</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; freqs.put(getByAttribute(att, i), 1);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>30</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>31</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>32</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (int freq : freqs.values())</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>33</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dataEntropy += (-freq/this.size()) * log2(freq/this.size());</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>34</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>35</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return dataEntropy;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>36</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>37</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>38</th><td class=\"r\"><ins>//&nbsp; &nbsp; &nbsp; def gain(data, attr, target_attr):</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>39</th><td class=\"r\"><ins>//&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"\"\"</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>40</th><td class=\"r\"><ins>//&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Calculates the information gain (reduction in entropy) that would</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>41</th><td class=\"r\"><ins>//&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; result by splitting the data on the chosen attribute (attr).</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>42</th><td class=\"r\"><ins>//&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"\"\"</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>43</th><td class=\"r\"><ins>//&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; val_freq&nbsp; &nbsp; &nbsp; &nbsp;= {}</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>44</th><td class=\"r\"><ins>//&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; subset_entropy = 0.0</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>45</th><td class=\"r\"><ins>//</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>46</th><td class=\"r\"><ins>//&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # Calculate the frequency of each of the values in the target attribute</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>47</th><td class=\"r\"><ins>//&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for record in data:</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>48</th><td class=\"r\"><ins>//&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (val_freq.has_key(record[attr])):</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>49</th><td class=\"r\"><ins>//&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; val_freq[record[attr]] += 1.0</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>50</th><td class=\"r\"><ins>//&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else:</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>51</th><td class=\"r\"><ins>//&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; val_freq[record[attr]]&nbsp; = 1.0</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>52</th><td class=\"r\"><ins>//</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>53</th><td class=\"r\"><ins>//&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # Calculate the sum of the entropy for each subset of records weighted</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>54</th><td class=\"r\"><ins>//&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # by their probability of occuring in the training set.</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>55</th><td class=\"r\"><ins>//&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for val in val_freq.keys():</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>56</th><td class=\"r\"><ins>//&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; val_prob&nbsp; &nbsp; &nbsp; &nbsp; = val_freq[val] / sum(val_freq.values())</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>57</th><td class=\"r\"><ins>//&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data_subset&nbsp; &nbsp; &nbsp;= [record for record in data if record[attr] == val]</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>58</th><td class=\"r\"><ins>//&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; subset_entropy += val_prob * entropy(data_subset, target_attr)</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>59</th><td class=\"r\"><ins>//</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>60</th><td class=\"r\"><ins>//&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # Subtract the entropy of the chosen attribute from the entropy of the</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>61</th><td class=\"r\"><ins>//&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # whole data set with respect to the target attribute (and return it)</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>62</th><td class=\"r\"><ins>//&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return (entropy(data, target_attr) - subset_entropy)</ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>63</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>11</th><th>64</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public double positiveProportion(Attribute att, Object leftOfSplit)</span>\u00a0</td>\n                  </tr><tr>\n                          <th>12</th><th>65</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>13</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int posCount = 0;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>14</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; List&lt;Integer&gt; split = split(att, leftOfSplit);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>15</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (int i : split) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>16</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (i == 1)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>17</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; posCount++;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>18</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>19</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return (double) posCount / split.size();</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>66</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Database[] split = split(att, leftOfSplit);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>67</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return (double) split[1].size() / split[0].size();</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>20</th><th>68</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>21</th><th>69</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>22</th><th>70</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public double negativeProportion(Attribute att, Object leftOfSplit)</span>\u00a0</td>\n                  </tr><tr>\n                          <th>23</th><th>71</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>24</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int negCount = 0;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>25</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; List&lt;Integer&gt; split = split(att, leftOfSplit);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>26</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (int i : split) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>27</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (i == -1)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>28</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; negCount++;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>29</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>30</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return (double) negCount / split.size();</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>72</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Database[] split = split(att, leftOfSplit);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>73</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return (double) split[0].size() / split[1].size();</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>31</th><th>74</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>32</th><th>75</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>33</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public <del>List&lt;Integer&gt; split</del>(Attribute att, Object leftOfSplit)</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>76</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public <ins>double entropy</ins>(Attribute att, Object leftOfSplit)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>34</th><th>77</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>35</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return Database.split(this, att, leftOfSplit);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>78</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; double proPos = positiveProportion(Attribute.DAY_OF_THE_WEEK, 2);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>79</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; double proNeg = negativeProportion(Attribute.DAY_OF_THE_WEEK, 2);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>80</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return -proPos*log2(proPos) - proNeg*log2(proNeg);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>36</th><th>81</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>37</th><th>82</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>38</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public static List&lt;Integer&gt; split(List&lt;Instance&gt; database, Attribute att, Object leftOfSplit)</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>83</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; private static double log2(double d) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>84</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return Math.log(d)/Math.log(2.0);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>85</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>86</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>87</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public Database[] split(Attribute att, Object splitVal)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>39</th><th>88</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>40</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; switch (att) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>41</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case DAY_OF_THE_WEEK:</span>\u00a0</td>\n                      </tr><tr>\n                        <th>42</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return splitByDayOfTheWeek(database, ((Integer)leftOfSplit).intValue());</span>\u00a0</td>\n                      </tr><tr>\n                        <th>43</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case MINUTES_SINCE_MIDNIGHT:</span>\u00a0</td>\n                      </tr><tr>\n                        <th>44</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return splitByMinutesSinceMidnight(database, ((Integer)leftOfSplit).intValue());</span>\u00a0</td>\n                      </tr><tr>\n                        <th>45</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case IP_ADDRESS:</span>\u00a0</td>\n                      </tr><tr>\n                        <th>46</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return splitByIPAddress(database, (String)leftOfSplit);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>47</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case DNS:</span>\u00a0</td>\n                      </tr><tr>\n                        <th>48</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return splitByDNS(database, (String)leftOfSplit);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>49</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case PLACE:</span>\u00a0</td>\n                      </tr><tr>\n                        <th>50</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return splitByPlace(database, (String)leftOfSplit);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>51</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case ACTIVITY:</span>\u00a0</td>\n                      </tr><tr>\n                        <th>52</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return splitByActivity(database, (String)leftOfSplit);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>53</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case OTHER:</span>\u00a0</td>\n                      </tr><tr>\n                        <th>54</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return splitByOther(database, (String)leftOfSplit);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>55</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case WIFI_MAC_ADDRESS:</span>\u00a0</td>\n                      </tr><tr>\n                        <th>56</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return splitByWifiMACAddress(database, (String)leftOfSplit);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>57</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case WIFI_SSID:</span>\u00a0</td>\n                      </tr><tr>\n                        <th>58</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return splitByWifiSSID(database, (String)leftOfSplit);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>59</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case NETWORK_LOAD:</span>\u00a0</td>\n                      </tr><tr>\n                        <th>60</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return splitByNetworkLoad(database, (Double)leftOfSplit);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>61</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case ACTIVE_PROCESS:</span>\u00a0</td>\n                      </tr><tr>\n                        <th>62</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return splitByActiveProcess(database, (String)leftOfSplit);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>63</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case SINGLE_DISPLAY:</span>\u00a0</td>\n                      </tr><tr>\n                        <th>64</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return splitBySingleDisplay(database, (Boolean)leftOfSplit);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>65</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; default:</span>\u00a0</td>\n                      </tr><tr>\n                        <th>66</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; throw new IllegalArgumentException(\"Unknown attribute (\" + att + \") given.\");</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>89</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Database left = new Database();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>90</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Database right = new Database();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>91</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>92</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (Instance i : this)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>93</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (getByAttribute(att, i).compareTo(splitVal) &lt;= 0 ? left : right).add(i);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>94</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>95</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return new Database[] { left, right };</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>96</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>97</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>98</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; private Comparable getByAttribute(Attribute att, Instance i)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>99</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>100</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>101</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Method getter = getGetterForAttribute(att);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>102</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return (Comparable) getter.invoke(i, (Object[])null);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>103</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>104</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; catch (Exception e) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>105</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // TODO: Handle this</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>106</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return null;</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>67</th><th>107</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>68</th><th>108</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>69</th><th>109</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>70</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; private <del>static List&lt;Integer&gt; splitByDayOfTheWeek(List&lt;Instance&gt; fll, int leftOfSpli</del>t)</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>110</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; private <ins>Method getGetterForAttribute(Attribute at</ins>t)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>71</th><th>111</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>72</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ArrayList&lt;Integer&gt; tuple = new ArrayList&lt;Integer&gt;(fll.size());</span>\u00a0</td>\n                      </tr><tr>\n                        <th>73</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (Instance fl : fll)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>74</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tuple.add(fl.getDayOfTheWeek().compareTo(leftOfSplit) &lt;= 0 ? -1 : 1);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>75</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return tuple;</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>112</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>113</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; switch (att) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>114</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case DAY_OF_THE_WEEK:</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>115</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return Instance.class.getDeclaredMethod(\"getDayOfTheWeek\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>116</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case MINUTES_SINCE_MIDNIGHT:</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>117</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return Instance.class.getDeclaredMethod(\"getMinutesSinceMidnight\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>118</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case IP_ADDRESS:</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>119</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return Instance.class.getDeclaredMethod(\"getIpAddress\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>120</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case DNS:</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>121</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return Instance.class.getDeclaredMethod(\"getDns\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>122</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case PLACE:</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>123</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return Instance.class.getDeclaredMethod(\"getPlace\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>124</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case ACTIVITY:</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>125</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return Instance.class.getDeclaredMethod(\"getActivity\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>126</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case OTHER:</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>127</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return Instance.class.getDeclaredMethod(\"getOther\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>128</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case WIFI_MAC_ADDRESS:</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>129</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return Instance.class.getDeclaredMethod(\"getWifiMACAddress\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>130</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case WIFI_SSID:</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>131</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return Instance.class.getDeclaredMethod(\"getWifiSSID\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>132</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case NETWORK_LOAD:</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>133</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return Instance.class.getDeclaredMethod(\"getNetworkLoad\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>134</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case ACTIVE_PROCESS:</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>135</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return Instance.class.getDeclaredMethod(\"getActiveProcess\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>136</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case SINGLE_DISPLAY:</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>137</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return Instance.class.getDeclaredMethod(\"getSingleDisplay\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>138</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; default:</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>139</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; throw new IllegalArgumentException(\"Unknown attribute (\" + att + \") given.\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>140</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>141</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>142</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; catch (NoSuchMethodException e) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>143</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // TODO: Actually handle this somehow</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>144</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return null;</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>145</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>76</th><th>146</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"first\">\n                          <th>77</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; </del>\u00a0</td>\n                  </tr><tr>\n                          <th>78</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; private static List&lt;Integer&gt; splitByMinutesSinceMidnight(List&lt;Instance&gt; fll, int leftOfSplit)</del>\u00a0</td>\n                  </tr><tr>\n                          <th>79</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; {</del>\u00a0</td>\n                  </tr><tr>\n                          <th>80</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ArrayList&lt;Integer&gt; tuple = new ArrayList&lt;Integer&gt;(fll.size());</del>\u00a0</td>\n                  </tr><tr>\n                          <th>81</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (Instance fl : fll)</del>\u00a0</td>\n                  </tr><tr>\n                          <th>82</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tuple.add(fl.getMinutesSinceMidnight().compareTo(leftOfSplit) &lt;= 0 ? -1 : 1);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>83</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return tuple;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>84</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; }</del>\u00a0</td>\n                  </tr><tr>\n                          <th>85</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; </del>\u00a0</td>\n                  </tr><tr>\n                          <th>86</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; private static List&lt;Integer&gt; splitByIPAddress(List&lt;Instance&gt; fll, String leftOfSplit)</del>\u00a0</td>\n                  </tr><tr>\n                          <th>87</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; {</del>\u00a0</td>\n                  </tr><tr>\n                          <th>88</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ArrayList&lt;Integer&gt; tuple = new ArrayList&lt;Integer&gt;(fll.size());</del>\u00a0</td>\n                  </tr><tr>\n                          <th>89</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (Instance fl : fll)</del>\u00a0</td>\n                  </tr><tr>\n                          <th>90</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tuple.add(fl.getIpAddress().compareTo(leftOfSplit) &lt;= 0 ? -1 : 1);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>91</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return tuple;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>92</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; }</del>\u00a0</td>\n                  </tr><tr>\n                          <th>93</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; </del>\u00a0</td>\n                  </tr><tr>\n                          <th>94</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; private static List&lt;Integer&gt; splitByDNS(List&lt;Instance&gt; fll, String leftOfSplit)</del>\u00a0</td>\n                  </tr><tr>\n                          <th>95</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; {</del>\u00a0</td>\n                  </tr><tr>\n                          <th>96</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ArrayList&lt;Integer&gt; tuple = new ArrayList&lt;Integer&gt;(fll.size());</del>\u00a0</td>\n                  </tr><tr>\n                          <th>97</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (Instance fl : fll)</del>\u00a0</td>\n                  </tr><tr>\n                          <th>98</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tuple.add(fl.getDns().compareTo(leftOfSplit) &lt;= 0 ? -1 : 1);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>99</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return tuple;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>100</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; }</del>\u00a0</td>\n                  </tr><tr>\n                          <th>101</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; </del>\u00a0</td>\n                  </tr><tr>\n                          <th>102</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; private static List&lt;Integer&gt; splitByPlace(List&lt;Instance&gt; fll, String leftOfSplit)</del>\u00a0</td>\n                  </tr><tr>\n                          <th>103</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; {</del>\u00a0</td>\n                  </tr><tr>\n                          <th>104</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ArrayList&lt;Integer&gt; tuple = new ArrayList&lt;Integer&gt;(fll.size());</del>\u00a0</td>\n                  </tr><tr>\n                          <th>105</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (Instance fl : fll)</del>\u00a0</td>\n                  </tr><tr>\n                          <th>106</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tuple.add(fl.getPlace().compareTo(leftOfSplit) &lt;= 0 ? -1 : 1);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>107</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return tuple;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>108</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; }</del>\u00a0</td>\n                  </tr><tr>\n                          <th>109</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; </del>\u00a0</td>\n                  </tr><tr>\n                          <th>110</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; private static List&lt;Integer&gt; splitByActivity(List&lt;Instance&gt; fll, String leftOfSplit)</del>\u00a0</td>\n                  </tr><tr>\n                          <th>111</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; {</del>\u00a0</td>\n                  </tr><tr>\n                          <th>112</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ArrayList&lt;Integer&gt; tuple = new ArrayList&lt;Integer&gt;(fll.size());</del>\u00a0</td>\n                  </tr><tr>\n                          <th>113</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (Instance fl : fll)</del>\u00a0</td>\n                  </tr><tr>\n                          <th>114</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tuple.add(fl.getActivity().compareTo(leftOfSplit) &lt;= 0 ? -1 : 1);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>115</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return tuple;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>116</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; }</del>\u00a0</td>\n                  </tr><tr>\n                          <th>117</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; </del>\u00a0</td>\n                  </tr><tr>\n                          <th>118</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; private static List&lt;Integer&gt; splitByOther(List&lt;Instance&gt; fll, String leftOfSplit)</del>\u00a0</td>\n                  </tr><tr>\n                          <th>119</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; {</del>\u00a0</td>\n                  </tr><tr>\n                          <th>120</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ArrayList&lt;Integer&gt; tuple = new ArrayList&lt;Integer&gt;(fll.size());</del>\u00a0</td>\n                  </tr><tr>\n                          <th>121</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (Instance fl : fll)</del>\u00a0</td>\n                  </tr><tr>\n                          <th>122</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tuple.add(fl.getOther().compareTo(leftOfSplit) &lt;= 0 ? -1 : 1);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>123</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return tuple;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>124</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; }</del>\u00a0</td>\n                  </tr><tr>\n                          <th>125</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; </del>\u00a0</td>\n                  </tr><tr>\n                          <th>126</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; private static List&lt;Integer&gt; splitByWifiMACAddress(List&lt;Instance&gt; fll, String leftOfSplit)</del>\u00a0</td>\n                  </tr><tr>\n                          <th>127</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; {</del>\u00a0</td>\n                  </tr><tr>\n                          <th>128</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ArrayList&lt;Integer&gt; tuple = new ArrayList&lt;Integer&gt;(fll.size());</del>\u00a0</td>\n                  </tr><tr>\n                          <th>129</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (Instance fl : fll)</del>\u00a0</td>\n                  </tr><tr>\n                          <th>130</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tuple.add(fl.getWifiMACAddress().compareTo(leftOfSplit) &lt;= 0 ? -1 : 1);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>131</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return tuple;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>132</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; }</del>\u00a0</td>\n                  </tr><tr>\n                          <th>133</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; </del>\u00a0</td>\n                  </tr><tr>\n                          <th>134</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; private static List&lt;Integer&gt; splitByWifiSSID(List&lt;Instance&gt; fll, String leftOfSplit)</del>\u00a0</td>\n                  </tr><tr>\n                          <th>135</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; {</del>\u00a0</td>\n                  </tr><tr>\n                          <th>136</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ArrayList&lt;Integer&gt; tuple = new ArrayList&lt;Integer&gt;(fll.size());</del>\u00a0</td>\n                  </tr><tr>\n                          <th>137</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (Instance fl : fll)</del>\u00a0</td>\n                  </tr><tr>\n                          <th>138</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tuple.add(fl.getWifiSSID().compareTo(leftOfSplit) &lt;= 0 ? -1 : 1);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>139</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return tuple;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>140</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; }</del>\u00a0</td>\n                  </tr><tr>\n                          <th>141</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; </del>\u00a0</td>\n                  </tr><tr>\n                          <th>142</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; private static List&lt;Integer&gt; splitByNetworkLoad(List&lt;Instance&gt; fll, Double leftOfSplit)</del>\u00a0</td>\n                  </tr><tr>\n                          <th>143</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; {</del>\u00a0</td>\n                  </tr><tr>\n                          <th>144</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ArrayList&lt;Integer&gt; tuple = new ArrayList&lt;Integer&gt;(fll.size());</del>\u00a0</td>\n                  </tr><tr>\n                          <th>145</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (Instance fl : fll)</del>\u00a0</td>\n                  </tr><tr>\n                          <th>146</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tuple.add(fl.getNetworkLoad().compareTo(leftOfSplit) &lt;= 0 ? -1 : 1);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>147</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return tuple;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>148</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; }</del>\u00a0</td>\n                  </tr><tr>\n                          <th>149</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; </del>\u00a0</td>\n                  </tr><tr>\n                          <th>150</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; private static List&lt;Integer&gt; splitByActiveProcess(List&lt;Instance&gt; fll, String leftOfSplit)</del>\u00a0</td>\n                  </tr><tr>\n                          <th>151</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; { </del>\u00a0</td>\n                  </tr><tr>\n                          <th>152</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ArrayList&lt;Integer&gt; tuple = new ArrayList&lt;Integer&gt;(fll.size());</del>\u00a0</td>\n                  </tr><tr>\n                          <th>153</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (Instance fl : fll)</del>\u00a0</td>\n                  </tr><tr>\n                          <th>154</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tuple.add(fl.getActiveProcess().compareTo(leftOfSplit) &lt;= 0 ? -1 : 1);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>155</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return tuple;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>156</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; }</del>\u00a0</td>\n                  </tr><tr>\n                          <th>157</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; </del>\u00a0</td>\n                  </tr><tr>\n                          <th>158</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; private static List&lt;Integer&gt; splitBySingleDisplay(List&lt;Instance&gt; fll, Boolean leftOfSplit)</del>\u00a0</td>\n                  </tr><tr>\n                          <th>159</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; {</del>\u00a0</td>\n                  </tr><tr>\n                          <th>160</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ArrayList&lt;Integer&gt; tuple = new ArrayList&lt;Integer&gt;(fll.size());</del>\u00a0</td>\n                  </tr><tr>\n                          <th>161</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (Instance fl : fll)</del>\u00a0</td>\n                  </tr><tr>\n                          <th>162</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tuple.add(fl.getSingleDisplay().compareTo(leftOfSplit) &lt;= 0 ? -1 : 1);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>163</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return tuple;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>164</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; }</del>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>165</th><th>\u00a0</th><td class=\"l\"><del></del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>166</th><th>147</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n      <li class=\"entry\">\n        <h2 id=\"file1\">\n          <a href=\"/LUCICodeRepository/nomaticIM/changeset/336/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/Instance.java\" title=\"Show the changeset 336 restricted to nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/Instance.java\">nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/Instance.java</a>\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"Revision 334\">\n                    <a title=\"Show revision 334 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/Instance.java?rev=334#L4\">\n                      r334</a>\n                  </th>\n                  <th title=\"Revision 336\">\n                    <a title=\"Show revision 336 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/Instance.java?rev=336#L4\">\n                      r336</a>\n                  </th>\n                  <td>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>4</th><th>4</th><td class=\"l\"><span>import java.lang.reflect.*;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>5</th><th>5</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>6</th><th>\u00a0</th><td class=\"l\"><span>public <del></del>class Instance implements Cloneable</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>6</th><td class=\"r\"><span>public <ins>final </ins>class Instance implements Cloneable</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>7</th><th>7</th><td class=\"l\"><span>{&nbsp; &nbsp; &nbsp; &nbsp;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>8</th><th>8</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; private Integer dayOfTheWeek;</span>\u00a0</td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n      <li class=\"entry\">\n        <h2 id=\"file2\">\n          <a href=\"/LUCICodeRepository/nomaticIM/changeset/336/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/test/DatabaseTest.java\" title=\"Show the changeset 336 restricted to nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/test/DatabaseTest.java\">nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/test/DatabaseTest.java</a>\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"Revision 335\">\n                    <a title=\"Show revision 335 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/test/DatabaseTest.java?rev=335#L2\">\n                      r335</a>\n                  </th>\n                  <th title=\"Revision 336\">\n                    <a title=\"Show revision 336 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/test/DatabaseTest.java?rev=336#L2\">\n                      r336</a>\n                  </th>\n                  <td>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>2</th><th>2</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>3</th><th>3</th><td class=\"l\"><span>import static org.junit.Assert.assertEquals;</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>4</th><th>\u00a0</th><td class=\"l\"><span>import java.util.Arrays;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>5</th><th>\u00a0</th><td class=\"l\"><span>import java.util.List;</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>4</th><td class=\"r\"><span>import static org.junit.Assert.assertTrue;</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>6</th><th>5</th><td class=\"l\"><span>import org.junit.Test;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>7</th><th>6</th><td class=\"l\"><span>import edu.uci.ics.luci.nomatic.service.*;</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/test/DatabaseTest.java?rev=335#L41\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/test/DatabaseTest.java?rev=336#L40\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>41</th><th>40</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>42</th><th>41</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; @Test</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>43</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public void test<del>InstanceSplit</del>() throws Exception</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>42</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public void test<ins>Entropy</ins>() throws Exception</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>44</th><th>43</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                  </tr><tr>\n                          <th>45</th><th>44</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Instance i1 = new Instance(0, 0, \"127.0.0.1\", \"244.244.244.0\", \"At home\",</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/test/DatabaseTest.java?rev=335#L58\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/test/DatabaseTest.java?rev=336#L57\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>58</th><th>57</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; d.add(i3);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>59</th><th>58</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>60</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; assertEquals((List&lt;Integer&gt;) Arrays.asList(new Integer[] { -1, -1, 1 }),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>61</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; d.split(Attribute.DAY_OF_THE_WEEK, 0));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>62</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; assertEquals((List&lt;Integer&gt;) Arrays.asList(new Integer[] {-1, -1, 1 }),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>63</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; d.split(Attribute.DAY_OF_THE_WEEK, 1));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>64</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; assertEquals((List&lt;Integer&gt;) Arrays.asList(new Integer[] { -1, -1, 1 }),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>65</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; d.split(Attribute.DAY_OF_THE_WEEK, 2));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>66</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; assertEquals((List&lt;Integer&gt;) Arrays.asList(new Integer[] { -1, -1, -1 }),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>67</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; d.split(Attribute.DAY_OF_THE_WEEK, 3));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>68</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; assertEquals((List&lt;Integer&gt;) Arrays.asList(new Integer[] { -1, -1, -1 }),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>69</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; d.split(Attribute.DAY_OF_THE_WEEK, 4));</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>59</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; double e = d.entropy(Attribute.DAY_OF_THE_WEEK, 2);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>60</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; assertTrue(e &lt; 0.9182959);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>61</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; assertTrue(0.9182958 &lt; e);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>62</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>63</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>64</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public static double log2(double d) {</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>65</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return Math.log(d)/Math.log(2.0);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>70</th><th>66</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>71</th><th>67</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>72</th><th>68</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; @Test</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>73</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public void testS<del>taticS</del>plit() throws Exception</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>69</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public void testS<ins></ins>plit() throws Exception</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>74</th><th>70</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                  </tr><tr>\n                          <th>75</th><th>71</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Instance i1 = new Instance(0, 0, \"127.0.0.1\", \"244.244.244.0\", \"At home\",</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/test/DatabaseTest.java?rev=335#L82\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/test/DatabaseTest.java?rev=336#L78\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>82</th><th>78</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"dancing\", \"with Nick\", \"00:16:cb:c9:e3:41\", \"UCInet Mobile\", 0.1,</span>\u00a0</td>\n                  </tr><tr>\n                          <th>83</th><th>79</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"firefox\", false);</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"last first\">\n                          <th>84</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; List&lt;Instance&gt; database = (List&lt;Instance&gt;) Arrays.asList(new Instance[] { i1, i2, i3 });</del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>85</th><th>80</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>86</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; assertEquals((List&lt;Integer&gt;) Arrays.asList(new Integer[] { -1, -1, 1 }),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>87</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Database.split(database, Attribute.DAY_OF_THE_WEEK, 0));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>88</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; assertEquals((List&lt;Integer&gt;) Arrays.asList(new Integer[] {-1, -1, 1 }),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>89</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Database.split(database, Attribute.DAY_OF_THE_WEEK, 1));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>90</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; assertEquals((List&lt;Integer&gt;) Arrays.asList(new Integer[] { -1, -1, 1 }),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>91</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Database.split(database, Attribute.DAY_OF_THE_WEEK, 2));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>92</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; assertEquals((List&lt;Integer&gt;) Arrays.asList(new Integer[] { -1, -1, -1 }),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>93</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Database.split(database, Attribute.DAY_OF_THE_WEEK, 3));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>94</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; assertEquals((List&lt;Integer&gt;) Arrays.asList(new Integer[] { -1, -1, -1 }),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>95</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Database.split(database, Attribute.DAY_OF_THE_WEEK, 4));</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>81</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Database d = new Database();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>82</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; d.add(i1);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>83</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; d.add(i2);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>84</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; d.add(i3);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>85</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>86</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Database[] splitByMinutes = d.split(Attribute.MINUTES_SINCE_MIDNIGHT, 15);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>87</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; assertTrue(splitByMinutes[0].contains(i1));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>88</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; assertTrue(splitByMinutes[0].contains(i2));</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>89</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; assertTrue(splitByMinutes[1].contains(i3));</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>96</th><th>90</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"last first\">\n                          <th>97</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; </del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>98</th><th>91</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n  </ul>\n</div>\n        <div id=\"help\"><strong>Note:</strong> See <a href=\"/LUCICodeRepository/nomaticIM/wiki/TracChangeset\">TracChangeset</a>\n          for help on using the changeset viewer.</div>\n      </div>\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"first\">\n          <a rel=\"nofollow\" href=\"?format=diff&amp;new=336\" class=\"diff\">Unified Diff</a>\n        </li><li class=\"last\">\n          <a rel=\"nofollow\" href=\"?format=zip&amp;new=336\" class=\"zip\">Zip Archive</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/LUCICodeRepository/nomaticIM/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/LUCICodeRepository/nomaticIM/about\"><strong>Trac 1.0.1</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">All content copyright 2007-2008 by LUCI <br /><a href=\"http://luci.ics.uci.edu/\">http://luci.ics.uci.edu/</a></p>\n    </div>\n\t\t<div id=\"sitefooter\">\n\t\t\t<script src=\"http://www.google-analytics.com/urchin.js\" type=\"text/javascript\">\n\t\t\t</script>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t\t_uacct = \"UA-338915-2\";\n\t\t\t\turchinTracker();\n\t\t\t</script>\n\t\t</div>\n\t</body>\n</html>", "id": 46700.0}