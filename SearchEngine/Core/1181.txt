{"text": "Sample Programs ICS 46 Data Structure Implementation and Analysis The following is a list of zipped Eclipse project files more might be added during the quarter Please feel free to download unzip run and study these programs both their code and their run time behavior Programmers gain tremendous insight into all facets of programming by studying the code of other programmers especially those with more experience and I am happy to improve my code based on your observations nothing is perfect A good programmer typically makes elegant use of the required language features resulting in smaller more elegant code All downloadable projects are listed alphabetically you can also search this page for keywords All are zip files so unzip them first Most project files require the Download standard course library which contains a variety of useful functions and classes If you followed the Eclipse installation instructions you should have already created the courselib folder in your workspace and populated it with these modules Download Backtracking Problem Solving These programs use generalized recursive backtracking to search an implicit solution tree See the backtrack exceptions and solver files which contain the tools to solve any problem use the problem template file to build any new application and see how it compares with the examples below The n queens files contain code to determine how to place N queens on a chessboard so that none can attack another The satifiy files contains code to determine how to assign true and false values to variables in a formula to satisfy it make it evaluated to true The sudoku files contain code that reads a Sudoku puzzle from a file and determines how to assign 1 9 values to the empty cells in a Sudoku puzzle to satisfy its constraints Download Testing Binary Search Trees Empirically on Integers This programs builds any number of binary search trees of any size from a random permutation of integers It computes and displays a histogram of the number of tree of each height and the average number of probest to access all values Download Testing Hashing Empirically on Strings These programs test a hashing function on std string the first uses chaining computing a histogram of the number of values stored in each bin size and the average number of probes to access all values the second uses open hashing with either linear or quadratic probing computing a histogram of the number of values requiring N probes the average number of probes to access all values for a variety of increasingt load factors Use the supplied hash function or your ownn testing its ability to distribute the values among the bins for random strings Download Testing Sorting Empirically You must have Java installed to run this program Run this Java program on a PC by double clicking the double click me bat file see its contents and mimic their use on other operating systems You can choose rechoose an array size decide how to populate it with values and run various O N 2 and O N Log N sorting functions specifying how many times to repeat the process we can also run a radix sort It will print the timings for the chosen sorting algorithm and the average Note that the clock is accurate to about 1 millisecond antthing taking less time registers as seconds Download State Space Search These programs just one now use a generalized state space searching to solve various problems involving applying operators See the solver file which contains the tools to solve any problem both using breadth first and best first searching use the problem template file to build any new application and see how it compares with the examples below The water jugs files contain code to determine how to achieve one distribution of water in jugs given a starting distribution Examine the State how close function for a pure best first solution and an A solution it typically examines some number of states between pure best first and breadth first but guarantees an optimal solution Download X cross Reference This program produces a cross reference list of all the words separated by spaces in a text file It uses the map priority queue and stack classes from the ITC The download includes a small data file on which to test the program ", "_id": "http://www.ics.uci.edu/~pattis/ICS-46/programs.html", "title": "sample programs", "html": "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML//EN\">\r\n<html>\r\n\r\n<head>\r\n  <title>Sample Programs</title>\r\n</head>\r\n\r\n<body BGCOLOR=\"white\">\r\n\r\n<center>\r\n<h1>Sample Programs</h1>\r\n<p>\r\n<h2>ICS-46: Data Structure Implementation and Analysis</h2><p>\r\n</center>\r\n\r\n<hr align=\"left\" width=\"100%\">\r\n<p>\r\nThe following is a list of zipped Eclipse project files (more might be added\r\n  during the quarter).\r\nPlease feel free to download, unzip, run, and study these programs (both their\r\n  code and their run-time behavior).\r\nProgrammers gain tremendous insight into all facets of programming by studying\r\n  the code of other programmers (especially those with more experience; and I\r\n  am happy to improve my code based on your observations -nothing is perfect).\r\nA good programmer typically makes elegant use of the required language\r\n  features, resulting in smaller, more elegant code.\r\n<p>\r\nAll downloadable projects are listed alphabetically; you can also search this\r\n  page for keywords.\r\nAll are zip files, so unzip them first.\r\nMost project files require the\r\n  Download: <a href=\"../common/online.html\">standard course library</a>\r\n  which contains a variety of useful functions and classes.\r\nIf you followed the Eclipse installation instructions, you should have already\r\n  created the <b>courselib</b> folder in your workspace and populated it with\r\n  these modules.\r\n<p>\r\n\r\n<hr align=\"left\" width=\"33%\">\r\n<p>\r\n\r\n\r\nDownload: <a href=\"programs/backtracking.zip\">Backtracking Problem Solving</a><br>\r\nThese programs use generalized (recursive) backtracking to search an implicit\r\n  solution tree.\r\nSee the <b>backtrack_exceptions</b> and <b>solver</b> files, which contain\r\n  the tools to solve any problem; use the <b>problem_template</b> file to\r\n  build any new application (and see how it compares with the examples below).\r\nThe <b>n_queens</b> files contain code to determine how to place N queens on\r\n  a chessboard so that none can attack another).\r\nThe <b>satifiy</b> files contains code to determine how to assign <b>true</b>\r\n  and <b>false</b> values to variables in a formula to satisfy it -make it\r\n  evaluated to true.\r\nThe <b>sudoku</b> files contain code that reads a Sudoku puzzle from a file\r\n and determines how to assign 1-9 values to the empty cells in a Sudoku puzzle\r\n to satisfy its constraints.\r\n<p>\r\n\r\nDownload: <a href=\"programs/btempirical.zip\">\r\n  Testing <b>Binary Search Trees Empirically</b> on Integers</a><br>\r\nThis programs builds any number of binary search trees (of any size) from a\r\n  random permutation of integers.\r\nIt computes and displays a histogram of the number of tree of each height and\r\n  the average number of probest to access all values.\r\n<p>\r\n\r\nDownload: <a href=\"programs/hashingempirical.zip\">\r\n  Testing <b>Hashing Empirically</b> on Strings</a><br>\r\nThese programs test a hashing function (on <b>std::string</b>):\r\n  the first uses <b>chaining</b>, computing a histogram of the number of values\r\n    stored in each bin size and the average number of probes to access all\r\n   values;\r\n  the second uses <b>open hashing</b> (with either <b>linear</b> or\r\n    <b>quadratic</b> probing), computing a histogram of the number of values\r\n    requiring N probes the average number of probes to access all values\r\n   (for a variety of increasingt <b>load factors</b>).\r\nUse the supplied hash function or your ownn, testing its ability to distribute\r\n  the values among the bins for random strings.\r\n<p>\r\n\r\nDownload: <a href=\"programs/sortingdemo.zip\">\r\n  Testing <b>Sorting Empirically</b></a><br>\r\nYou must have Java installed to run this program.\r\nRun this Java program on a PC by double-clicking the <b>double click me.bat</b>\r\n  file (see its contents and mimic their use on other operating systems).\r\nYou can choose (rechoose) an array size, decide how to populate it with values,\r\n  and run various O(N^2) and O(N Log N) sorting functions (specifying how many\r\n  times to repeat the process): we can also run a radix sort.\r\nIt will print the timings for the chosen sorting algorithm, and the average.\r\nNote that the clock is accurate to about 1 millisecond: antthing taking less\r\n  time registers as <b>0.0</b> seconds.\r\n<p>\r\n\r\nDownload: <a href=\"programs/statespacesearch.zip\">State Space Search</a><br>\r\nThese programs (just one now) use a generalized state-space searching to solve\r\n  various problems involving applying operators.\r\nSee the <b>solver</b> file, which contains the tools to solve any problem (both\r\n  using <b>breadth-first</b> and <b>best-first</b> searching); use\r\n  the <b>problem_template</b> file to build any new application (and see how it\r\n  compares with the examples below).\r\nThe <b>water_jugs</b> files contain code to determine how to achieve one\r\n  distribution of water in jugs, given a starting distribution.\r\nExamine the <b>State::how_close</b> function for a pure <b>best_first</b>\r\n  solution and an <b>A*</b> solution: it typically examines some number of\r\n  states between pure <b>best-first</b> and <b>breadth-first</b>) but\r\n  guarantees an optimal solution.\r\n<p>\r\n\r\nDownload: <a href=\"programs/cross_reference.zip\">X (cross) Reference</a><br>\r\nThis program produces a cross-reference list of all the words (separated by\r\n  spaces) in a text file.\r\nIt uses the map, priority queue, and stack classes from the ITC.\r\nThe download includes a small data file on which to test the program.\r\n<!---\r\nThe download includes a complete copy of Mark Twain's \"Tom Sawyer\"\r\n  and the correct output for this input.\r\n--->\r\n<p>\r\n\r\n<hr align=\"left\" width=\"100%\">\r\n</body>\r\n</html>\r\n", "id": 1181.0}