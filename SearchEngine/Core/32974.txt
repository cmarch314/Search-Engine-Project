{"text": "View Javadoc 1 2 Created on Aug 25 2 4 3 4 package swirl workspace 5 6 import java io IOException 7 import java util HashMap 8 9 import javax servlet ServletContext 1 import javax servlet http HttpServletRequest 11 12 import org apache commons httpclient HostConfiguration 13 import org apache commons httpclient HttpClient 14 import org apache commons httpclient HttpException 15 import org apache commons logging Log 16 import org apache commons logging LogFactory 17 import org apache webdav lib methods DepthSupport 18 import org apache webdav lib methods PropFindMethod 19 2 import swirl workspace common NetUtils 21 22 23 DOCUMENT ME 24 25 author bpillet 26 27 public class LookupCodec implements HostPathCodec 28 29 lookup table for request paths to peers 3 private HashMap urlToHost 31 32 the client s request 33 private HttpServletRequest request 34 35 the logger for this class 36 private Log log LogFactory getLog this getClass 37 38 the application level scope that holds the lookup table 39 private ServletContext context 4 41 42 Constructor that looks for a lookup table in the application s context 43 that maintains href to peer mappings 44 45 param req the request from the client 46 param cont the context for the application 47 48 public LookupCodec final HttpServletRequest req final ServletContext cont 49 5 this context cont 51 this request req 52 urlToHost HashMap context getAttribute urlToHostMapping 53 54 if urlToHost null 55 56 urlToHost new HashMap 57 context setAttribute urlToHostMapping urlToHost 58 do a propfind to populate the urlToHostMapping 59 PropFindMethod propfind new PropFindMethod swirl DepthSupport DEPTH INFINITY 6 HttpClient client new HttpClient 61 HostConfiguration hostConf new HostConfiguration 62 hostConf setHost PeerManager getLocalAddress getHostAddress App PORT 63 try 64 int status client executeMethod hostConf propfind 65 if log isDebugEnabled 66 67 log debug status status 68 69 catch HttpException e 7 log error e e 71 catch IOException e 72 log error e e 73 74 75 76 if log isDebugEnabled 77 78 log debug urlToHost urlToHost 79 8 81 82 83 Retrieves the host from an application level lookup table If it is not 84 in the table returns 85 86 return the host the client is proxied to 87 88 public String decodeHost 89 9 if log isDebugEnabled 91 92 log debug decodeHost urlToHost get request getServletPath 93 94 95 String es NetUtils encodeLastElement request getServletPath 96 String es NetUtils encodeEachElement request getServletPath 97 if urlToHost containsKey es 98 99 return String urlToHost get es 1 1 1 else 1 2 1 3 return 1 4 1 5 1 6 1 7 1 8 Adds slide to the front of the client s requested path 1 9 11 return the path on the proxied host 111 112 public String decodePath 113 114 if log isDebugEnabled 115 116 log debug decodePath SwirlCommand SLIDE 117 request getServletPath 118 119 12 return SwirlCommand SLIDE request getServletPath 121 122 123 124 Adds the host to an application level lookup table on the server 125 126 param href the href to mangle 127 param encodeHost the host to encode 128 129 return the mangled href which isn t changed in this implementation 13 131 public String encodeHostInPath final String href final String encodeHost 132 133 String ret href substring SwirlCommand SLIDE length 134 135 if log isDebugEnabled 136 137 log debug href without slide path ret 138 139 14 if ret length 141 142 log debug setting ret to host encodeHost 143 urlToHost put ret encodeHost 144 145 146 ret SwirlCommand SWIRL ret 147 148 if log isDebugEnabled 149 15 log debug modifyHref urlToHost urlToHost 151 152 153 if log isDebugEnabled 154 155 log debug modifyHref href r nencodeHost encodeHost 156 r nret ret 157 158 159 return ret 16 161 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.20/xref/swirl/workspace/LookupCodec.html", "title": "lookupcodec xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>LookupCodec xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../stylesheet.css\" />\n</head>\n<body>\n<div id=\"overview\"><a href=\"../../../apidocs/swirl/workspace/LookupCodec.html\">View Javadoc</a></div><pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <em class=\"comment\">/*</em>\n<a name=\"2\" href=\"#2\">2</a>   <em class=\"comment\"> * Created on Aug 25, 2004</em>\n<a name=\"3\" href=\"#3\">3</a>   <em class=\"comment\"> */</em>\n<a name=\"4\" href=\"#4\">4</a>   <strong>package</strong> <a href=\"../../swirl/workspace/package-summary.html\">swirl.workspace</a>;\n<a name=\"5\" href=\"#5\">5</a>   \n<a name=\"6\" href=\"#6\">6</a>   <strong>import</strong> java.io.IOException;\n<a name=\"7\" href=\"#7\">7</a>   <strong>import</strong> java.util.HashMap;\n<a name=\"8\" href=\"#8\">8</a>   \n<a name=\"9\" href=\"#9\">9</a>   <strong>import</strong> javax.servlet.ServletContext;\n<a name=\"10\" href=\"#10\">10</a>  <strong>import</strong> javax.servlet.http.HttpServletRequest;\n<a name=\"11\" href=\"#11\">11</a>  \n<a name=\"12\" href=\"#12\">12</a>  <strong>import</strong> org.apache.commons.httpclient.HostConfiguration;\n<a name=\"13\" href=\"#13\">13</a>  <strong>import</strong> org.apache.commons.httpclient.HttpClient;\n<a name=\"14\" href=\"#14\">14</a>  <strong>import</strong> org.apache.commons.httpclient.HttpException;\n<a name=\"15\" href=\"#15\">15</a>  <strong>import</strong> org.apache.commons.logging.Log;\n<a name=\"16\" href=\"#16\">16</a>  <strong>import</strong> org.apache.commons.logging.LogFactory;\n<a name=\"17\" href=\"#17\">17</a>  <strong>import</strong> org.apache.webdav.lib.methods.DepthSupport;\n<a name=\"18\" href=\"#18\">18</a>  <strong>import</strong> org.apache.webdav.lib.methods.PropFindMethod;\n<a name=\"19\" href=\"#19\">19</a>  \n<a name=\"20\" href=\"#20\">20</a>  <strong>import</strong> swirl.workspace.common.NetUtils;\n<a name=\"21\" href=\"#21\">21</a>  \n<a name=\"22\" href=\"#22\">22</a>  <em>/**<em>*</em></em>\n<a name=\"23\" href=\"#23\">23</a>  <em> * DOCUMENT ME!</em>\n<a name=\"24\" href=\"#24\">24</a>  <em> *</em>\n<a name=\"25\" href=\"#25\">25</a>  <em> * @author bpillet</em>\n<a name=\"26\" href=\"#26\">26</a>  <em> */</em>\n<a name=\"27\" href=\"#27\">27</a>  <strong>public</strong> <strong>class</strong> <a href=\"../../swirl/workspace/LookupCodec.html\">LookupCodec</a> implements <a href=\"../../swirl/workspace/HostPathCodec.html\">HostPathCodec</a>\n<a name=\"28\" href=\"#28\">28</a>  {\n<a name=\"29\" href=\"#29\">29</a>      <em>/**<em>* lookup table for request paths to peers */</em></em>\n<a name=\"30\" href=\"#30\">30</a>      <strong>private</strong> HashMap urlToHost;\n<a name=\"31\" href=\"#31\">31</a>  \n<a name=\"32\" href=\"#32\">32</a>      <em>/**<em>* the client's request */</em></em>\n<a name=\"33\" href=\"#33\">33</a>      <strong>private</strong> HttpServletRequest request;\n<a name=\"34\" href=\"#34\">34</a>  \n<a name=\"35\" href=\"#35\">35</a>      <em>/**<em>* the logger for this class */</em></em>\n<a name=\"36\" href=\"#36\">36</a>      <strong>private</strong> Log log = LogFactory.getLog(<strong>this</strong>.getClass());\n<a name=\"37\" href=\"#37\">37</a>  \n<a name=\"38\" href=\"#38\">38</a>      <em>/**<em>* the application level scope that holds the lookup table */</em></em>\n<a name=\"39\" href=\"#39\">39</a>      <strong>private</strong> ServletContext context;\n<a name=\"40\" href=\"#40\">40</a>  \n<a name=\"41\" href=\"#41\">41</a>      <em>/**<em>*</em></em>\n<a name=\"42\" href=\"#42\">42</a>  <em>     * Constructor that looks for a lookup table in the application's context</em>\n<a name=\"43\" href=\"#43\">43</a>  <em>     * that maintains href to peer mappings</em>\n<a name=\"44\" href=\"#44\">44</a>  <em>     *</em>\n<a name=\"45\" href=\"#45\">45</a>  <em>     * @param req the request from the client</em>\n<a name=\"46\" href=\"#46\">46</a>  <em>     * @param cont the context for the application</em>\n<a name=\"47\" href=\"#47\">47</a>  <em>     */</em>\n<a name=\"48\" href=\"#48\">48</a>      <strong>public</strong> <a href=\"../../swirl/workspace/LookupCodec.html\">LookupCodec</a>(<strong>final</strong> HttpServletRequest req, <strong>final</strong> ServletContext cont)\n<a name=\"49\" href=\"#49\">49</a>      {\n<a name=\"50\" href=\"#50\">50</a>          <strong>this</strong>.context = cont;\n<a name=\"51\" href=\"#51\">51</a>          <strong>this</strong>.request = req;\n<a name=\"52\" href=\"#52\">52</a>          urlToHost = (HashMap)context.getAttribute(<span class=\"string\">\"urlToHostMapping\"</span>);\n<a name=\"53\" href=\"#53\">53</a>  \n<a name=\"54\" href=\"#54\">54</a>          <strong>if</strong>(urlToHost == <strong>null</strong>)\n<a name=\"55\" href=\"#55\">55</a>          {\n<a name=\"56\" href=\"#56\">56</a>              urlToHost = <strong>new</strong> HashMap();\n<a name=\"57\" href=\"#57\">57</a>              context.setAttribute(<span class=\"string\">\"urlToHostMapping\"</span>, urlToHost);\n<a name=\"58\" href=\"#58\">58</a>              <em class=\"comment\">// do a propfind to populate the urlToHostMapping</em>\n<a name=\"59\" href=\"#59\">59</a>              PropFindMethod propfind = <strong>new</strong> PropFindMethod(<span class=\"string\">\"/swirl\"</span>, DepthSupport.DEPTH_INFINITY);\n<a name=\"60\" href=\"#60\">60</a>              HttpClient client = <strong>new</strong> HttpClient();\n<a name=\"61\" href=\"#61\">61</a>              HostConfiguration hostConf = <strong>new</strong> HostConfiguration();\n<a name=\"62\" href=\"#62\">62</a>              hostConf.setHost(PeerManager.getLocalAddress().getHostAddress(), App.PORT);\n<a name=\"63\" href=\"#63\">63</a>              <strong>try</strong> {\n<a name=\"64\" href=\"#64\">64</a>  \t\t\t\t<strong>int</strong> status = client.executeMethod(hostConf, propfind);\n<a name=\"65\" href=\"#65\">65</a>  \t\t\t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"66\" href=\"#66\">66</a>  \t\t        {\n<a name=\"67\" href=\"#67\">67</a>  \t\t\t\t\tlog.debug(<span class=\"string\">\"status: \"</span> + status);\n<a name=\"68\" href=\"#68\">68</a>  \t\t        }\n<a name=\"69\" href=\"#69\">69</a>  \t\t\t} <strong>catch</strong> (HttpException e) {\n<a name=\"70\" href=\"#70\">70</a>  \t\t\t\tlog.error(e, e);\n<a name=\"71\" href=\"#71\">71</a>  \t\t\t} <strong>catch</strong> (IOException e) {\n<a name=\"72\" href=\"#72\">72</a>  \t\t\t\tlog.error(e, e);\n<a name=\"73\" href=\"#73\">73</a>  \t\t\t}\n<a name=\"74\" href=\"#74\">74</a>          }\n<a name=\"75\" href=\"#75\">75</a>  \n<a name=\"76\" href=\"#76\">76</a>          <strong>if</strong>(log.isDebugEnabled())\n<a name=\"77\" href=\"#77\">77</a>          {\n<a name=\"78\" href=\"#78\">78</a>              log.debug(<span class=\"string\">\"urlToHost: \"</span> + urlToHost);\n<a name=\"79\" href=\"#79\">79</a>          }\n<a name=\"80\" href=\"#80\">80</a>      }\n<a name=\"81\" href=\"#81\">81</a>  \n<a name=\"82\" href=\"#82\">82</a>      <em>/**<em>*</em></em>\n<a name=\"83\" href=\"#83\">83</a>  <em>     * Retrieves the host from an application level lookup table.  If it is not</em>\n<a name=\"84\" href=\"#84\">84</a>  <em>     * in the table, returns \"\"</em>\n<a name=\"85\" href=\"#85\">85</a>  <em>     *</em>\n<a name=\"86\" href=\"#86\">86</a>  <em>     * @return the host the client is proxied to</em>\n<a name=\"87\" href=\"#87\">87</a>  <em>     */</em>\n<a name=\"88\" href=\"#88\">88</a>      <strong>public</strong> String decodeHost()\n<a name=\"89\" href=\"#89\">89</a>      {\n<a name=\"90\" href=\"#90\">90</a>          <strong>if</strong>(log.isDebugEnabled())\n<a name=\"91\" href=\"#91\">91</a>          {\n<a name=\"92\" href=\"#92\">92</a>              log.debug(<span class=\"string\">\"decodeHost: \"</span> + urlToHost.get(request.getServletPath()));\n<a name=\"93\" href=\"#93\">93</a>          }\n<a name=\"94\" href=\"#94\">94</a>  \n<a name=\"95\" href=\"#95\">95</a>          <em class=\"comment\">// String es = NetUtils.encodeLastElement(request.getServletPath());</em>\n<a name=\"96\" href=\"#96\">96</a>          String es = NetUtils.encodeEachElement(request.getServletPath());\n<a name=\"97\" href=\"#97\">97</a>          <strong>if</strong>(urlToHost.containsKey(es))\n<a name=\"98\" href=\"#98\">98</a>          {\n<a name=\"99\" href=\"#99\">99</a>              <strong>return</strong> (String)urlToHost.get(es);\n<a name=\"100\" href=\"#100\">100</a>         }\n<a name=\"101\" href=\"#101\">101</a>         <strong>else</strong>\n<a name=\"102\" href=\"#102\">102</a>         {\n<a name=\"103\" href=\"#103\">103</a>             <strong>return</strong> <span class=\"string\">\"\"</span>;\n<a name=\"104\" href=\"#104\">104</a>         }\n<a name=\"105\" href=\"#105\">105</a>     }\n<a name=\"106\" href=\"#106\">106</a> \n<a name=\"107\" href=\"#107\">107</a>     <em>/**<em>*</em></em>\n<a name=\"108\" href=\"#108\">108</a> <em>     * Adds /slide to the front of the client's requested path</em>\n<a name=\"109\" href=\"#109\">109</a> <em>     *</em>\n<a name=\"110\" href=\"#110\">110</a> <em>     * @return the path on the proxied host</em>\n<a name=\"111\" href=\"#111\">111</a> <em>     */</em>\n<a name=\"112\" href=\"#112\">112</a>     <strong>public</strong> String decodePath()\n<a name=\"113\" href=\"#113\">113</a>     {\n<a name=\"114\" href=\"#114\">114</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"115\" href=\"#115\">115</a>         {\n<a name=\"116\" href=\"#116\">116</a>             log.debug(<span class=\"string\">\"decodePath: \"</span> + SwirlCommand.SLIDE\n<a name=\"117\" href=\"#117\">117</a>                       + request.getServletPath());\n<a name=\"118\" href=\"#118\">118</a>         }\n<a name=\"119\" href=\"#119\">119</a> \n<a name=\"120\" href=\"#120\">120</a>         <strong>return</strong> SwirlCommand.SLIDE + request.getServletPath();\n<a name=\"121\" href=\"#121\">121</a>     }\n<a name=\"122\" href=\"#122\">122</a> \n<a name=\"123\" href=\"#123\">123</a>     <em>/**<em>*</em></em>\n<a name=\"124\" href=\"#124\">124</a> <em>     * Adds the host to an application level lookup table on the server</em>\n<a name=\"125\" href=\"#125\">125</a> <em>     *</em>\n<a name=\"126\" href=\"#126\">126</a> <em>     * @param href the href to mangle</em>\n<a name=\"127\" href=\"#127\">127</a> <em>     * @param encodeHost the host to encode</em>\n<a name=\"128\" href=\"#128\">128</a> <em>     *</em>\n<a name=\"129\" href=\"#129\">129</a> <em>     * @return the mangled href (which isn't changed in this implementation)</em>\n<a name=\"130\" href=\"#130\">130</a> <em>     */</em>\n<a name=\"131\" href=\"#131\">131</a>     <strong>public</strong> String encodeHostInPath(<strong>final</strong> String href, <strong>final</strong> String encodeHost)\n<a name=\"132\" href=\"#132\">132</a>     {\n<a name=\"133\" href=\"#133\">133</a>         String ret = href.substring(SwirlCommand.SLIDE.length());\n<a name=\"134\" href=\"#134\">134</a> \n<a name=\"135\" href=\"#135\">135</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"136\" href=\"#136\">136</a>         {\n<a name=\"137\" href=\"#137\">137</a>             log.debug(<span class=\"string\">\"href without slide path: *\"</span> + ret + <span class=\"string\">\"*\"</span>);\n<a name=\"138\" href=\"#138\">138</a>         }\n<a name=\"139\" href=\"#139\">139</a> \n<a name=\"140\" href=\"#140\">140</a>         <strong>if</strong>(ret.length() > 0)\n<a name=\"141\" href=\"#141\">141</a>         {\n<a name=\"142\" href=\"#142\">142</a>             log.debug(<span class=\"string\">\"setting \"</span> + ret + <span class=\"string\">\" to host \"</span> + encodeHost);\n<a name=\"143\" href=\"#143\">143</a>             urlToHost.put(ret, encodeHost);\n<a name=\"144\" href=\"#144\">144</a>         }\n<a name=\"145\" href=\"#145\">145</a> \n<a name=\"146\" href=\"#146\">146</a>         ret = SwirlCommand.SWIRL + ret;\n<a name=\"147\" href=\"#147\">147</a> \n<a name=\"148\" href=\"#148\">148</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"149\" href=\"#149\">149</a>         {\n<a name=\"150\" href=\"#150\">150</a>             log.debug(<span class=\"string\">\"modifyHref: urlToHost: \"</span> + urlToHost);\n<a name=\"151\" href=\"#151\">151</a>         }\n<a name=\"152\" href=\"#152\">152</a> \n<a name=\"153\" href=\"#153\">153</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"154\" href=\"#154\">154</a>         {\n<a name=\"155\" href=\"#155\">155</a>             log.debug(<span class=\"string\">\"modifyHref: \"</span> + href + <span class=\"string\">\"\\r\\nencodeHost: \"</span> + encodeHost\n<a name=\"156\" href=\"#156\">156</a>                       + <span class=\"string\">\"\\r\\nret: \"</span> + ret);\n<a name=\"157\" href=\"#157\">157</a>         }\n<a name=\"158\" href=\"#158\">158</a> \n<a name=\"159\" href=\"#159\">159</a>         <strong>return</strong> ret;\n<a name=\"160\" href=\"#160\">160</a>     }\n<a name=\"161\" href=\"#161\">161</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 32974.0}