{"text": "OEChem Python Theory Manual Version 1 3 1 Previous 26 2 1 The OpenEye Charge Up 26 2 The OpenEye Valence Next 27 SMARTS Pattern Matching 26 2 2 The OpenEye Hydrogen Count Model OpenEye s hydrogen count valence model is used by OEChem when neither hydrogen counts nor valence are specified The typical uses are reading molecules from PDB or XYZ format files without explicit hydrogens This functionality is invoked by OEAssignImplicitHydrogens which must always be followed by a call to OEAssignFormalCharges This valence model is unique in that it only partially updates hydrogen counts assuming the unfilled valences will be corrected by OpenEye s charge valence model above In MDL s model for example a neutral sodium atom is assumed to have one implicit hydrogen i e sodium hydride instead of sodium metal In OpenEye s hydrogen count valence model a disconnected sodium atom is assumed to be a Sodium cation Na When reading from PDB files this is a very reasonable assumption Note that although the OpenEye hydrogen count valence model often sets charge and protonation states to physiological conditions it is neither intended to be a pKa nor ionization state predictor Instead it is a normalization Much like many registry system and the MDL valence model will convert C O O to C O O for registration purposes this valence model converts the opposite direction to C O O Carbon is always assumed to be four valent and therefore neutral Nitrogens that are conjugated have double bonds or have neighbors that have double bonds in their Kekul representations are assumed three valence and neutral whilst all other nitrogens are assumed to be four valent with a 1 formal charge Oxygens are assumed to be two valent and neutral unless they have a single bond to an atom that s doubly bonded to oxygen in which case it s assumed to be one valent with a 1 formal charge Sulphur is assumed to always be two valent All other elements are assumed to have no implicit hydrogens and the formal charge as specified by the OpenEye charge model This models all disconnected halgens as halide anions and when disconnected the metals listed above as cations These rules are sufficient to reasonably protonate proteins read from PDB files However as described above these rules are not intended to be a comprehensive rule based pKa predictor Users interested in predicting physiological ionization and protonation disassociation state enumeration should contact OpenEye Scientific Software about our tools for exactly this task OEChem Python Theory Manual Version 1 3 1 Previous 26 2 1 The OpenEye Charge Up 26 2 The OpenEye Valence Next 27 SMARTS Pattern Matching Documentation released on July 3 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/oechem/pyprog/node242.html", "title": "26.2.2 the openeye hydrogen count model", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<html>\n<head>\n<title>26.2.2 The OpenEye Hydrogen Count Model</title>\n<META NAME=\"description\" CONTENT=\"26.2.2 The OpenEye Hydrogen Count Model\">\n<META NAME=\"keywords\" CONTENT=\"pyprog\">\n<META NAME=\"resource-type\" CONTENT=\"document\">\n<META NAME=\"distribution\" CONTENT=\"global\">\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n<link rel=\"STYLESHEET\" href=\"pyprog.css\">\n<link rel=\"first\" href=\"pyprog.html\">\n<link rel=\"contents\" href=\"contents.html\" title=\"Contents\">\n\n<LINK REL=\"previous\" HREF=\"node241.html\">\n<LINK REL=\"up\" HREF=\"node240.html\">\n<LINK REL=\"next\" HREF=\"node243.html\">\n</head>\n<body>\n<DIV CLASS=\"navigation\">\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node241.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node240.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node243.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - Python Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"genindex.html\"><img src=\"../icons/index.gif\"\n  border=\"0\" alt=\"Index\"></A></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node241.html\">26.2.1 The OpenEye Charge</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node240.html\">26.2 The OpenEye Valence</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node243.html\">27. SMARTS Pattern Matching</A>\n<br><hr>\n</DIV>\n<!--End of Navigation Panel-->\n\n<H2><A NAME=\"SECTION0028220000000000000000\">\n26.2.2 The OpenEye Hydrogen Count Model</A>\n</H2>\n\n<P>\nOpenEye's hydrogen count valence model is used by OEChem when neither hydrogen\ncounts nor valence are specified.  The typical uses are reading molecules from\nPDB or XYZ format files without explicit hydrogens.  This functionality is\ninvoked by OEAssignImplicitHydrogens, which must always be followed by a call\nto OEAssignFormalCharges.  This valence model is unique in that it only\npartially updates hydrogen counts, assuming the unfilled valences will be\ncorrected by OpenEye&#213;s charge valence model above.  In MDL&#213;s model for example,\na neutral sodium atom is assumed to have one implicit hydrogen, i.e. sodium\nhydride instead of sodium metal.  In OpenEye&#213;s hydrogen count valence model, a\ndisconnected sodium atom is assumed to be a Sodium cation, [Na+].  When reading\nfrom PDB files, this is a very reasonable assumption.\n\n<P>\nNote that although the OpenEye hydrogen count valence model often sets charge\nand protonation states to physiological conditions, it is neither intended to\nbe a pKa nor ionization state predictor.  Instead, it is a normalization.  Much\nlike many registry system (and the MDL valence model) will convert C(=O)[O-] to\nC(=O)O for registration purposes, this valence model converts the opposite\ndirection to C(=O)[O-].\n\n<P>\n\n<UL>\n<LI>Carbon is always assumed to be four valent, and therefore neutral.\n\n<P>\n</LI>\n<LI>Nitrogens that are conjugated (have double bonds, or have neighbors that\nhave double bonds, in their Kekul&#233; representations) are assumed three\nvalence and neutral, whilst all other nitrogens are assumed to be four\nvalent, with a +1 formal charge.\n\n<P>\n</LI>\n<LI>Oxygens are assumed to be two valent and neutral, unless they have a\nsingle bond to an atom that&#213;s doubly bonded to oxygen, in which case it&#213;s\nassumed to be one valent, with a -1 formal charge.\n\n<P>\n</LI>\n<LI>Sulphur is assumed to always be two valent.\n\n<P>\n</LI>\n</UL>\n\n<P>\nAll other elements are assumed to have no implicit hydrogens, and the formal\ncharge as specified by the OpenEye charge model.  This models all disconnected\nhalgens as halide anions, and when disconnected the metals listed above as\ncations.\n\n<P>\nThese rules are sufficient to reasonably protonate proteins read from PDB\nfiles.  However, as described above, these rules are not intended to be a\ncomprehensive rule-based pKa predictor.  Users interested in predicting\nphysiological ionization, and protonation/disassociation state enumeration\nshould contact OpenEye Scientific Software about our tools for exactly this\ntask.\n\n<P>\n\n<DIV CLASS=\"navigation\">\n<p><hr>\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node241.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node240.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node243.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - Python Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"genindex.html\"><img src=\"../icons/index.gif\"\n  border=\"0\" alt=\"Index\"></A></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node241.html\">26.2.1 The OpenEye Charge</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node240.html\">26.2 The OpenEye Valence</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node243.html\">27. SMARTS Pattern Matching</A>\n<hr>\n<span class=\"release-info\">Documentation released on July 30, 2004.</span>\n</DIV>\n<!--End of Navigation Panel-->\n\n</BODY>\n</HTML>\n", "id": 37760.0}