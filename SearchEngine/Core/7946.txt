{"text": "Research Projects News Notes CV Notes Notes on Testing Verifying Behavior Date 3 Jun 2 14 S i a mple Application NumberTranslator https bitbucket org vpalepu 191b Q How do you test verify behaviors think about or in terms of behaviors actually verify behaviors Q How do you think about behaviors what do i mean by that old school testing demo https bitbucket org vpalepu 191b Introducing BDD by Dan North Test method names should be sentences An expressive test name is helpful when a test fails Behaviour is a more useful word than test Emphasize behavior over testingDetermine the next most important behaviorThink what should the system should do Not is the system right It is all about templates A simple sentence template keeps test methods focused The class should do something Story Behavior Templates As a X I want Y so that Z Given some initial context the givens When an event occurs then ensure some outcomes Q So are we really verifying behaviors with BDD what do i mean by that State vs Interactions Most testing that we do is state based or value based testing The issue with state based testing is that sometimes you can arrive at the right state with the wrong steps or interactions Process over ResultsThe basic idea behind BDD is to think in terms of behaviors you still might be doing the same old state or value based testing So BDD does not force test to Behaviors in terms of the actual interactions Mocking testing interactions Mocks enable us to test interactions Mocks are not Stubs or Fakes or Dummies Martin Fowler Mocks Aren t Stubs http martinfowler com articles mocksArentStubs html Dummy objects are passed around but never actually used Usually they are just used to fill parameter lists Fake objects actually have working implementations but usually take some shortcut which makes them not suitable for production an in memory database is a good example Stubs provide canned answers to calls made during the test usually not responding at all to anything outside what s programmed in for the test Stubs may also record information about calls such as an email gateway stub that remembers the messages it sent or maybe only how many messages it sent Mocks are what we are talking about here objects pre programmed with expectations which form a specification of the calls they are expected to receive the calls they are expected to receive Here calls refers to method calls In the context of interactive applications like GUIs or Games these method calls often represent interactions Mocks keep track of all the method calls that are made being made check them against a specification and flag errors if the specifications and reality do not match up Fun Reads Mock Roles not Objects Freeman Pryce Mackinnon Walnes OOPSLA 2 4 Mocks Aren t Stubs Martin Fowler martinfowler com articles mocksArentStubs html Introducing BDD Dan North dannorth net introducing bdd expect run verify Goodbye http monkeyisland pl 2 8 2 1 deathwish Mockito Tutorials http docs mockito googlecode com hg latest org mockito Mockito html Other Notes Mockito cannot mock final classes String Integer ScannerLast stub always winsMockito uses a verify what you want philosophy for mocking unlike most other mocking frameworks that use the expect run verify philosophy for mocking more expect run verify Goodbye http monkeyisland pl 2 8 2 1 deathwish Tags notes testing software behavior Related Posts 11 Jan 2 15 Part of Winning Team UCI Data Science Hackathon28 Dec 2 14 Having Fun with Java Bytecode11 Dec 2 14 PL241 Compiler home bitbucket com Linkedin Instagram medium stackoverflow gist github com archives Background Photo Credit Sudha Palepu", "_id": "http://www.ics.uci.edu/~vpalepu/2014/06/03/Notes-Testing-Software-Behavior.html", "title": "notes on testing/verifying behavior", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en-us\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" />\n  <meta name=\"author\" content=\"Vijay Krishna Palepu\" />\n  <link rel=\"shortcut icon\" href=\"http://www.ics.uci.edu/~vpalepu/images/favicon.gif\" />\n  <title>Notes on Testing/Verifying Behavior</title>\n  \n  <!-- <link rel=\"stylesheet\" href=\"http://www.ics.uci.edu/~vpalepu/css/bootstrap.min.css\" type=\"text/css\" /> -->\n  <!-- <link rel=\"stylesheet\" href=\"http://www.ics.uci.edu/~vpalepu/css/bootstrap-theme.min.css\" type=\"text/css\" /> -->\n  <link rel=\"stylesheet\" href=\"http://www.ics.uci.edu/~vpalepu/css/screen.css\" type=\"text/css\" />\n  <!-- syntax highlighting CSS -->\n  <link rel=\"stylesheet\" href=\"http://www.ics.uci.edu/~vpalepu/css/syntax.css\" type=\"text/css\" />\n  <link href='http://fonts.googleapis.com/css?family=Andada' rel='stylesheet' type='text/css'>\n  <!-- <link rel=\"stylesheet\" href=\"http://www.ics.uci.edu/~vpalepu/css/pygments.css\" type=\"text/css\" > -->\n</head>\n<body >   \n  <!-- <img id=\"hover1\" class=\"pos\" src=\"http://www.ics.uci.edu/~vpalepu/images/brain.png\"> -->\n  <div class=\"container\">\n\n    <div class=\"plain stretch\">\n      \n      <span class=\"regular\">\n        \n          <a href=\"http://www.ics.uci.edu/~vpalepu/research.html\" style=\"margin:20px;margin-left:0\">Research</a>\n        \n\n        \n          <a href=\"http://www.ics.uci.edu/~vpalepu/projects.html\" style=\"margin:20px\">Projects</a>\n        \n        \n        \n          <a href=\"http://www.ics.uci.edu/~vpalepu/news.html\" style=\"margin:20px\">News</a>\n        \n\n        \n          <a href=\"http://www.ics.uci.edu/~vpalepu/blog.html\" style=\"margin:20px\">Notes</a>\n        \n\n        \n          <a href=\"http://www.ics.uci.edu/~vpalepu/cv.html\" style=\"margin:20px\">CV</a>\n        \n      </span>\n      <!-- <hr class=\"thinblue\" /> -->\n      <br>\n    </div>\n\n    <div class=\"plain stretch\" style=\"padding-bottom:5px\">  \n      \n        <span class=\"huge\">\n          <a href=\"http://www.ics.uci.edu/~vpalepu/index.html\" class=\"icon-home\"></a> /\n          \n            <a href=\"http://www.ics.uci.edu/~vpalepu/blog.html\">Notes</a> / Notes on Testing/Verifying Behavior\n          \n        </span>\n                 \n\n    </div>\n\n<!--     <div class=\"plain stretch\" >\n      <span class=\"huge\"> \n      \n        Vijay Krishna <a href=\"http://www.ics.uci.edu/~vpalepu/index.html\"><b>Palepu</b></a>\n      \n        \n      </span>\n      <small>\n        vpalepu [at] uci [dot] edu &bull;\n        5243 Bren Hall,\n        <a href=\"http://www.spideruci.org\" target=\"_blank\">Spider Lab</a>,\n        <a href=\"http://www.uci.edu/\" target=\"_blank\">University of California, Irvine</a>, CA 92697-3440\n\n      </small>      \n\n      \n\n\n\n    \n\n    \n      \n        <hr class=\"thinblue\" />\n\n        \n          <a href=\"http://www.ics.uci.edu/~vpalepu/research.html\" style=\"margin:20px;margin-left:0\">Research</a>\n        \n\n        \n          <a href=\"http://www.ics.uci.edu/~vpalepu/projects.html\" style=\"margin:20px\">Projects</a>\n        \n        \n        \n          <a href=\"http://www.ics.uci.edu/~vpalepu/news.html\" style=\"margin:20px\">News</a>\n        \n\n        \n          <a href=\"http://www.ics.uci.edu/~vpalepu/blog.html\" style=\"margin:20px\">Notes</a>\n        \n\n        <a href=\"http://www.ics.uci.edu/~vpalepu/cv.html\" style=\"margin:20px\">CV</a>\n            \n    \n\n    </div> -->\n    \n    <title>Notes on Testing/Verifying Behavior</title>\n<div class=\"plain stretch\">\n<!-- <p>\n\t\n    <a href=\"http://www.ics.uci.edu/~vpalepu/index.html\" class=\"icon-home\"></a> /  \n\t\t<a href=\"http://www.ics.uci.edu/~vpalepu/blog.html\">Notes</a> /\n    Notes on Testing/Verifying Behavior\n\t\t<br/> \n\t\n</p> -->\n\n<div id=\"post\"> \n  <span class=\"tags\">\n    Date: 03 Jun 2014\n  </span>\n  \n  <p><strong>S(i|a)mple Application: NumberTranslator:</strong>\n<a href=\"https://bitbucket.org/vpalepu/191b\">https://bitbucket.org/vpalepu/191b</a></p>\n\n<h4 id=\"q-how-do-you-testverify-behaviors\">Q. How do you test/verify behaviors?</h4>\n\n<ol>\n  <li>think about or in terms of behaviors.</li>\n  <li>actually verify behaviors.</li>\n</ol>\n\n<h4 id=\"q-how-do-you-think-about-behaviors\">Q. How do you think about behaviors?</h4>\n<p>(what do i mean by that?)</p>\n\n<p><strong>old school testing demo:</strong> <a href=\"https://bitbucket.org/vpalepu/191b\">https://bitbucket.org/vpalepu/191b</a></p>\n\n<h3 id=\"introducing-bdd-by-dan-north\">\u201cIntroducing BDD\u201d by Dan North.</h3>\n<ul>\n  <li>Test method names should be sentences\n    <ul>\n      <li>An expressive test name is helpful when a test fails</li>\n    </ul>\n  </li>\n  <li>\u201cBehaviour\u201d is a more useful word than \u201ctest\u201d\n    <ul>\n      <li>Emphasize behavior over testing</li>\n      <li>Determine the next most important behavior</li>\n      <li>Think: \u201cwhat should the system should do?\u201d; </li>\n      <li>Not: \u201cis the system right?\u201d </li>\n    </ul>\n  </li>\n  <li>It is all about templates\n    <ul>\n      <li>A simple sentence template keeps test methods focused\n        <ul>\n          <li>The class should do something</li>\n        </ul>\n      </li>\n      <li>\n        <p>Story/Behavior Templates:</p>\n\n        <p>As a [X]\n  I want [Y]\n  so that [Z]</p>\n\n        <p>Given [some initial context (the givens)],\n  When [an event occurs],\n  then [ensure some outcomes].</p>\n      </li>\n    </ul>\n  </li>\n</ul>\n\n<h4 id=\"q-so-are-we-really-verifying-behaviors-with-bdd\">Q. So are we really verifying behaviors with BDD?</h4>\n<p>(what do i mean by that?)</p>\n\n<h5 id=\"state-vs-interactions\">State vs Interactions</h5>\n<ul>\n  <li>Most testing that we do is state based or value based testing. The issue with state based testing is that sometimes you can arrive at the right state with the wrong steps or interactions.</li>\n  <li>Process over Results</li>\n  <li>The basic idea behind BDD is to <em>think</em> in terms of behaviors; you still might be doing the same old state or value based testing. \n    <ul>\n      <li>So, BDD does not <em>force</em> test to Behaviors in terms of the actual interactions.</li>\n    </ul>\n  </li>\n</ul>\n\n<h4 id=\"mocking---testing-interactions\">Mocking - testing interactions.</h4>\n\n<ul>\n  <li>Mocks enable us to test interactions.</li>\n  <li>Mocks are not Stubs or Fakes or Dummies.</li>\n</ul>\n\n<h3 id=\"martin-fowler---mocks-arent-stubs\">Martin Fowler - \u201cMocks Aren\u2019t Stubs\u201d</h3>\n<p><a href=\"http://martinfowler.com/articles/mocksArentStubs.html\">http://martinfowler.com/articles/mocksArentStubs.html</a></p>\n\n<ul>\n  <li><em>Dummy</em> objects are passed around but never actually used. Usually they are just used to fill parameter lists.</li>\n  <li><em>Fake</em> objects actually have working implementations, but usually take some shortcut which makes them not suitable for production (an in memory database is a good example).</li>\n  <li><em>Stubs</em> provide canned answers to calls made during the test, usually not responding at all to anything outside what\u2019s programmed in for the test. Stubs may also record information about calls, such as an email gateway stub that remembers the messages it \u2018sent\u2019, or maybe only how many messages it \u2018sent\u2019.</li>\n  <li>\n    <p><em>Mocks</em> are what we are talking about here: objects pre-programmed with expectations which form a specification of the calls they are expected to receive.</p>\n  </li>\n  <li>\u201cthe calls they are expected to receive.\u201d. Here calls refers to method calls.</li>\n  <li>In the context of interactive applications like GUIs or Games, these method calls often represent interactions.</li>\n  <li>Mocks keep track of all the method calls that are made/being made; check them against a specification, and flag errors if the specifications and reality do not match up.</li>\n</ul>\n\n<h4 id=\"fun-reads\">Fun Reads:</h4>\n\n<ul>\n  <li>\u201cMock Roles, not Objects\u201d, Freeman, Pryce, Mackinnon, Walnes, OOPSLA 2004.</li>\n  <li>\u201cMocks Aren\u2019t Stubs\u201d, Martin Fowler, <a href=\"http://martinfowler.com/articles/mocksArentStubs.html\">martinfowler.com/articles/mocksArentStubs.html</a></li>\n  <li>\u201cIntroducing BDD\u201d, Dan North, <a href=\"http://dannorth.net/introducing-bdd/\">dannorth.net/introducing-bdd</a></li>\n  <li>\u201cexpect-run-verify\u2026 Goodbye!\u201d, <a href=\"http://monkeyisland.pl/2008/02/01/deathwish/\">http://monkeyisland.pl/2008/02/01/deathwish/</a></li>\n  <li>Mockito Tutorials: <a href=\"http://docs.mockito.googlecode.com/hg/latest/org/mockito/Mockito.html\">http://docs.mockito.googlecode.com/hg/latest/org/mockito/Mockito.html</a></li>\n</ul>\n\n<p>Other Notes:</p>\n\n<ul>\n  <li>Mockito cannot mock final classes \u2026 String, Integer, Scanner</li>\n  <li>Last stub always wins</li>\n  <li>Mockito uses a \u201cverify what you want\u201d philosophy for mocking, unlike most other mocking frameworks that use the \u201cexpect-run-verify\u201d philosophy for mocking. more: \u201cexpect-run-verify\u2026 Goodbye!\u201d, <a href=\"http://monkeyisland.pl/2008/02/01/deathwish/\">http://monkeyisland.pl/2008/02/01/deathwish/</a>.</li>\n</ul>\n \n</div>\n\n<div style=\"margin-bottom: 10px\">\n\t<br>\n\t<b class=\"label\">Tags:</b>\n\t\n\t\t<span class=\"tags\">notes</span>\n\t\t\n\t\t\t<span> </span>\n\t\t\n\t\n\t\t<span class=\"tags\">testing</span>\n\t\t\n\t\t\t<span> </span>\n\t\t\n\t\n\t\t<span class=\"tags\">software-behavior</span>\n\t\t\n\t\n</div>\n</div>\n\n<div class=\"plain stretch\">\n  <h2>Related Posts</h2>\n  <ul class=\"posts\">\n    \n      <li><span>11 Jan 2015</span> &raquo; <a href=\"http://www.ics.uci.edu/~vpalepu/2015/01/11/Won-Data-Science-Hackathon.html\">Part of Winning Team @ UCI Data Science Hackathon</a></li>\n    \n      <li><span>28 Dec 2014</span> &raquo; <a href=\"http://www.ics.uci.edu/~vpalepu/2014/12/28/Having-Fun-with-Java-Bytecode.html\">Having Fun with Java Bytecode</a></li>\n    \n      <li><span>11 Dec 2014</span> &raquo; <a href=\"http://www.ics.uci.edu/~vpalepu/2014/12/11/PL241-Compiler.html\">PL241-Compiler</a></li>\n    \n  </ul>\n</div>\n\n    <div class=\"plain stretch\" style=\"background:rgba(255, 255, 255, 0.85)\">  \n      <small>\n        <a href=\"http://www.ics.uci.edu/~vpalepu/index.html\">home</a> &bull;\n        <a href=\"https://bitbucket.com/vpalepu\">@<b>bitbucket</b>.com</a> &bull;\n        <a href=\"http://www.linkedin.com/in/palepuvijaykrishna\" target=\"_blank\">@Linked<b>in</b></a> &bull;\n        <a href=\"http://instagram.com/vpalepu\" target=\"_blank\">@Instagram</a> &bull;\n        <a href=\"https://medium.com/@vkrishnapalepu\" target=\"_blank\">@medium</a> &bull;\n        <a href=\"http://stackoverflow.com/users/1481262/vijay\">@stack<b>overflow</b></a> &bull;\n        <a href=\"https://gist.github.com/VijayKrishna\">@<b>gist</b>.github.com</a>  &bull;\n        <a href=\"http://www.ics.uci.edu/~vpalepu/archives.html\"><b>arch</b>ives</a>\n        &bull;\n        Background Photo Credit: <a href=\"http://sudhapalepu.wordpress.com/\" target=\"_blank\">Sudha Palepu</a>\n      </small>\n    </div>    \n  </div>\n  </div> <!-- end of main -->\n  <!-- <div class=\"header\"></div> -->\n</body>\n</html>\n", "id": 7946.0}