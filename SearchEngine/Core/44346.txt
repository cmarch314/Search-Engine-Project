{"text": "Search LoginPreferencesHelp GuideAbout Trac WikiTimelineRoadmapBrowse SourceView TicketsSearch Context Navigation BlameRevision Log source nomatic tags NomaticIM 5 buddy bots src twisted python zipstream py View diff against View revision Visit trunk Last change on this file was 712 checked in by cbaker 7 years ago First draft of nomatic buddy bots oscar bot is functional if you give it good authentication credentials jabber bot is just an example from the web File size 8 8 KB Line 1 An extremely asynch approach to unzipping files This allows you2to unzip a little bit of a file at a time which means it can3integrate nicely with a reactor 45 67from future import generators89import zipfile1 import os path11import binascii12import zlib13import struct1415class ChunkingZipFile zipfile ZipFile 16 A ZipFile object which with readfile also gives you access17 to a filelike object for each entry 18 19 def readfile self name 2 Return file like object for name 21 if self mode not in r a 22 raise RuntimeError read requires mode r or a 23 if not self fp 24 raise RuntimeError 25 Attempt to read ZIP archive that was already closed 26 zinfo self getinfo name 2728 self fp seek zinfo header offset 293 Skip the file header 31 fheader self fp read 3 32 if fheader 4 zipfile stringFileHeader 33 raise zipfile BadZipfile Bad magic number for file header 3435 fheader struct unpack zipfile structFileHeader fheader 36 fname self fp read fheader zipfile FH FILENAME LENGTH 37 if fheader zipfile FH EXTRA FIELD LENGTH 38 self fp read fheader zipfile FH EXTRA FIELD LENGTH 394 if fname zinfo orig filename 41 raise zipfile BadZipfile 42 File name in directory s and header s differ 43 zinfo orig filename fname 4445 if zinfo compress type zipfile ZIP STORED 46 return ZipFileEntry self fp zinfo compress size 47 elif zinfo compress type zipfile ZIP DEFLATED 48 if not zlib 49 raise RuntimeError 5 De compression requires the missing zlib module 51 return DeflatedZipFileEntry self fp zinfo compress size 52 else 53 raise zipfile BadZipfile 54 Unsupported compression method d for file s 55 zinfo compress type name 56 57 def read self name 58 Return file bytes as a string for name 59 f self readfile name 6 zinfo self getinfo name 61 bytes f read 62 crc binascii crc32 bytes 63 if crc zinfo CRC 64 raise zipfile BadZipfile Bad CRC 32 for file s name65 return bytes 666768class ZipFileEntry 69 File like object used to read an uncompressed entry in a ZipFile 7 71 def init self fp length 72 self fp fp73 self readBytes 74 self length length75 self finished 76 77 def tell self 78 return self readBytes79 8 def read self n None 81 if n is None 82 n self length self readBytes83 if n or self finished 84 return 85 86 data self fp read min n self length self readBytes 87 self readBytes len data 88 if self readBytes self length or len data n 89 self finished 19 return data9192 def close self 93 self finished 194 del self fp959697class DeflatedZipFileEntry 98 File like object used to read a deflated entry in a ZipFile 99 1 def init self fp length 1 1 self fp fp1 2 self returnedBytes 1 3 self readBytes 1 4 self decomp zlib decompressobj 15 1 5 self buffer 1 6 self length length1 7 self finished 1 8 1 9 def tell self 11 return self returnedBytes111 112 def read self n None 113 if self finished 114 return 115 if n is None 116 result self buffer 117 result append self decomp decompress self fp read self length self readBytes 118 result append self decomp decompress Z 119 result append self decomp flush 12 self buffer 121 self finished 1122 result join result 123 self returnedBytes len result 124 return result125 else 126 while len self buffer n 127 data self fp read min n 1 24 self length self readBytes 128 self readBytes len data 129 if not data 13 result self buffer self decomp decompress Z self decomp flush 131 self finished 1132 self buffer 133 self returnedBytes len result 134 return result135 else 136 self buffer self decomp decompress data 137 result self buffer n 138 self buffer self buffer n 139 self returnedBytes len result 14 return result141 142 def close self 143 self finished 1144 del self fp145146147def unzip filename directory overwrite 148 Unzip the file149 param filename the name of the zip file15 param directory the directory into which the files will be151 extracted152 param overwrite if on overwrite files when they exist You can153 still get an error if you try to create a directory over a file154 with the same name or vice versa 155 156 for i in unzipIter filename directory overwrite 157 pass158159DIR BIT 1616 def unzipIter filename directory overwrite 161 Return a generator for the zipfile This implementation will162 yield after every file 163164 The value it yields is the number of files left to unzip 165 166 zf zipfile ZipFile filename r 167 names zf namelist 168 if not os path exists directory os makedirs directory 169 remaining countZipFileEntries filename 17 for entry in names 171 remaining remaining 1172 isdir zf getinfo entry external attr DIR BIT173 f os path join directory entry 174 if isdir 175 overwrite flag only applies to files176 if not os path exists f os makedirs f 177 else 178 create the directory the file will be in first 179 since we can t guarantee it exists18 fdir os path split f 181 if not os path exists fdir 182 os makedirs f 183 if overwrite or not os path exists f 184 outfile file f wb 185 outfile write zf read entry 186 outfile close 187 yield remaining188189def countZipFileChunks filename chunksize 19 Predict the number of chunks that will be extracted from the191 entire zipfile given chunksize blocks 192 193 totalchunks 194 zf ChunkingZipFile filename 195 for info in zf infolist 196 totalchunks totalchunks countFileChunks info chunksize 197 return totalchunks198199def countFileChunks zipinfo chunksize 2 size zipinfo file size2 1 count size chunksize2 2 if size chunksize 2 3 count count 12 4 each file counts as at least one chunk2 5 return count or 12 6 2 7def countZipFileEntries filename 2 8 zf zipfile ZipFile filename 2 9 return len zf namelist 21 211def unzipIterChunky filename directory overwrite 212 chunksize 4 96 213 Return a generator for the zipfile This implementation will214 yield after every chunksize uncompressed bytes or at the end of a215 file whichever comes first 216217 The value it yields is the number of chunks left to unzip 218 219 czf ChunkingZipFile filename r 22 if not os path exists directory os makedirs directory 221 remaining countZipFileChunks filename chunksize 222 names czf namelist 223 infos czf infolist 224 225 for entry info in zip names infos 226 isdir info external attr DIR BIT227 f os path join directory entry 228 if isdir 229 overwrite flag only applies to files23 if not os path exists f os makedirs f 231 remaining remaining 1232 assert remaining 233 yield remaining234 else 235 create the directory the file will be in first 236 since we can t guarantee it exists237 fdir os path split f 238 if not os path exists fdir 239 os makedirs f 24 if overwrite or not os path exists f 241 outfile file f wb 242 fp czf readfile entry 243 if info file size 244 remaining remaining 1245 assert remaining 246 yield remaining247 fread fp read248 ftell fp tell249 owrite outfile write25 size info file size251 while ftell size 252 hunk fread chunksize 253 owrite hunk 254 remaining remaining 1255 assert remaining 256 yield remaining257 outfile close 258 else 259 remaining remaining countFileChunks info chunksize 26 assert remaining 261 yield remaining Note See TracBrowser for help on using the repository browser Download in other formats Plain Text Original Format Powered by Trac 1 1 By Edgewall Software All content copyright 2 7 2 8 by LUCI http luci ics uci edu ", "_id": "http://djp3-pc2.ics.uci.edu/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/zipstream.py", "title": "\n      zipstream.py in nomatic/tags/nomaticim-0.0.5/buddy_bots/src/twisted/python\n     \u2013 nomatic*im\n    ", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n  \n\n\n  <head>\n\t\t<title>\n      zipstream.py in nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python\n     \u2013 Nomatic*IM\n    </title><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><link rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search\" /><link rel=\"help\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/zipstream.py?format=txt\" type=\"text/plain\" title=\"Plain Text\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/zipstream.py\" type=\"application/x-python; charset=iso-8859-15\" title=\"Original Format\" /><link rel=\"start\" href=\"/LUCICodeRepository/nomaticIM/wiki\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/code.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/pygments/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/browser.css\" type=\"text/css\" /><link rel=\"shortcut icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link rel=\"icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link type=\"application/opensearchdescription+xml\" rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search/opensearch\" title=\"Search Nomatic*IM\" /><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/jquery.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/babel.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/messages/en_US.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/trac.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/search.js\"></script><script type=\"text/javascript\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/folding.js\"></script><script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\".trac-toggledeleted\").show().click(function() {\n                  $(this).siblings().find(\".trac-deleted\").toggle();\n                  return false;\n        }).click();\n        $(\"#jumploc input\").hide();\n        $(\"#jumploc select\").change(function () {\n          this.parentNode.parentNode.submit();\n        });\n          $('#preview table.code').enableCollapsibleColumns($('#preview table.code thead th.content'));\n      });\n    </script>\n\t</head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://luci.ics.uci.edu/#code\"><img src=\"http://luci.ics.uci.edu/blog/archives/LUCIhorzTight.jpg\" alt=\"LUCI Code Repository\" /></a>\n      </div>\n      <form id=\"search\" action=\"/LUCICodeRepository/nomaticIM/search\" method=\"get\">\n        <div>\n          <label for=\"proj-search\">Search:</label>\n          <input type=\"text\" id=\"proj-search\" name=\"q\" size=\"18\" value=\"\" />\n          <input type=\"submit\" value=\"Search\" />\n        </div>\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/login\">Login</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/prefs\">Preferences</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\">Help/Guide</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/wiki\">Wiki</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/timeline\">Timeline</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/roadmap\">Roadmap</a></li><li class=\"active\"><a href=\"/LUCICodeRepository/nomaticIM/browser\">Browse Source</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/report\">View Tickets</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/search\">Search</a></li>\n    </ul>\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/buddy_bots/twisted/python/zipstream.py?annotate=blame\" title=\"Annotate each line with the last changed revision (this can be time consuming...)\">Blame</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/log/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/zipstream.py\">Revision Log</a></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"browser\">\n        <h1>\n          \n<a class=\"pathentry first\" href=\"/LUCICodeRepository/nomaticIM/browser?order=name\" title=\"Go to repository root\">source:</a>\n<a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic?order=name\" title=\"View nomatic\">nomatic</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags?order=name\" title=\"View tags\">tags</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5?order=name\" title=\"View NomaticIM-0.0.5\">NomaticIM-0.0.5</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots?order=name\" title=\"View buddy_bots\">buddy_bots</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src?order=name\" title=\"View src\">src</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted?order=name\" title=\"View twisted\">twisted</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python?order=name\" title=\"View python\">python</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/zipstream.py?order=name\" title=\"View zipstream.py\">zipstream.py</a>\n<br style=\"clear: both\" />\n\n        </h1>\n        <div id=\"diffrev\">\n          <form action=\"/LUCICodeRepository/nomaticIM/changeset\" method=\"get\">\n            <div>\n              <label title=\"Show the diff against a specific revision\">\n                View diff against: <input type=\"text\" name=\"old\" size=\"6\" />\n                <input type=\"hidden\" name=\"old_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/zipstream.py\" />\n                <input type=\"hidden\" name=\"new\" />\n                <input type=\"hidden\" name=\"new_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/zipstream.py\" />\n              </label>\n            </div>\n          </form>\n        </div>\n        <div id=\"jumprev\">\n          <form action=\"\" method=\"get\">\n            <div>\n              <label for=\"rev\">\n                View revision:</label>\n              <input type=\"text\" id=\"rev\" name=\"rev\" size=\"6\" />\n            </div>\n          </form>\n        </div>\n        <div id=\"jumploc\">\n          <form action=\"\" method=\"get\">\n            <div class=\"buttons\">\n              <label for=\"preselected\">Visit:</label>\n              <select id=\"preselected\" name=\"preselected\">\n                <option selected=\"selected\"></option>\n                <optgroup label=\"branches\">\n                  <option value=\"/LUCICodeRepository/nomaticIM/browser/trunk\">trunk</option>\n                </optgroup>\n              </select>\n              <input type=\"submit\" value=\"Go!\" title=\"Jump to the chosen preselected path\" />\n            </div>\n          </form>\n        </div>\n        <div class=\"trac-tags\">\n        </div>\n      <table id=\"info\" summary=\"Revision info\">\n        <tr>\n          <th>\n                <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/nomatic/trunk/buddy_bots/twisted/python/zipstream.py\" title=\"View differences\">Last change</a>\n                  on this file was\n                  <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/\" title=\"View changeset 712\">712</a>,\n                  checked in by cbaker, <a class=\"timeline\" href=\"/LUCICodeRepository/nomaticIM/timeline?from=2008-02-16T08%3A16%3A53-08%3A00&amp;precision=second\" title=\"See timeline at Feb 16, 2008, 8:16:53 AM\">7 years ago</a>\n          </th>\n        </tr>\n        <tr>\n          <td class=\"message searchable\">\n              <p>\nFirst draft of nomatic buddy bots. oscar_bot is functional if you give it good authentication credentials, jabber_bot is just an example from the web <br />\n</p>\n          </td>\n        </tr>\n        <tr><td colspan=\"2\">\n            <strong>File size:</strong>\n            <span title=\"8977 bytes\">8.8 KB</span>\n          </td></tr>\n      </table>\n      <div id=\"preview\" class=\"searchable\">\n        \n  <table class=\"code\"><thead><tr><th class=\"lineno\" title=\"Line numbers\">Line</th><th class=\"content\">\u00a0</th></tr></thead><tbody><tr><th id=\"L1\"><a href=\"#L1\">1</a></th><td><span class=\"sd\">\"\"\"An extremely asynch approach to unzipping files.\u00a0 This allows you</span></td></tr><tr><th id=\"L2\"><a href=\"#L2\">2</a></th><td><span class=\"sd\">to unzip a little bit of a file at a time, which means it can</span></td></tr><tr><th id=\"L3\"><a href=\"#L3\">3</a></th><td><span class=\"sd\">integrate nicely with a reactor.</span></td></tr><tr><th id=\"L4\"><a href=\"#L4\">4</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L5\"><a href=\"#L5\">5</a></th><td><span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L6\"><a href=\"#L6\">6</a></th><td></td></tr><tr><th id=\"L7\"><a href=\"#L7\">7</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">__future__</span>\u00a0<span class=\"kn\">import</span>\u00a0generators</td></tr><tr><th id=\"L8\"><a href=\"#L8\">8</a></th><td></td></tr><tr><th id=\"L9\"><a href=\"#L9\">9</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">zipfile</span></td></tr><tr><th id=\"L10\"><a href=\"#L10\">10</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">os.path</span></td></tr><tr><th id=\"L11\"><a href=\"#L11\">11</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">binascii</span></td></tr><tr><th id=\"L12\"><a href=\"#L12\">12</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">zlib</span></td></tr><tr><th id=\"L13\"><a href=\"#L13\">13</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">struct</span></td></tr><tr><th id=\"L14\"><a href=\"#L14\">14</a></th><td></td></tr><tr><th id=\"L15\"><a href=\"#L15\">15</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">ChunkingZipFile</span><span class=\"p\">(</span>zipfile<span class=\"o\">.</span>ZipFile<span class=\"p\">):</span></td></tr><tr><th id=\"L16\"><a href=\"#L16\">16</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"A ZipFile object which, with readfile(), also gives you access</span></td></tr><tr><th id=\"L17\"><a href=\"#L17\">17</a></th><td><span class=\"sd\">\u00a0 \u00a0 to a filelike object for each entry.</span></td></tr><tr><th id=\"L18\"><a href=\"#L18\">18</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L19\"><a href=\"#L19\">19</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">readfile</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0name<span class=\"p\">):</span></td></tr><tr><th id=\"L20\"><a href=\"#L20\">20</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Return file-like object for name.\"\"\"</span></td></tr><tr><th id=\"L21\"><a href=\"#L21\">21</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>mode <span class=\"ow\">not</span>\u00a0<span class=\"ow\">in</span>\u00a0<span class=\"p\">(</span><span class=\"s\">\"r\"</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"a\"</span><span class=\"p\">):</span></td></tr><tr><th id=\"L22\"><a href=\"#L22\">22</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">RuntimeError</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'read() requires mode \"r\" or \"a\"'</span></td></tr><tr><th id=\"L23\"><a href=\"#L23\">23</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>fp<span class=\"p\">:</span></td></tr><tr><th id=\"L24\"><a href=\"#L24\">24</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">RuntimeError</span><span class=\"p\">,</span>\u00a0\\</td></tr><tr><th id=\"L25\"><a href=\"#L25\">25</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">\"Attempt to read ZIP archive that was already closed\"</span></td></tr><tr><th id=\"L26\"><a href=\"#L26\">26</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 zinfo <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>getinfo<span class=\"p\">(</span>name<span class=\"p\">)</span></td></tr><tr><th id=\"L27\"><a href=\"#L27\">27</a></th><td></td></tr><tr><th id=\"L28\"><a href=\"#L28\">28</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>fp<span class=\"o\">.</span>seek<span class=\"p\">(</span>zinfo<span class=\"o\">.</span>header_offset<span class=\"p\">,</span>\u00a0<span class=\"mi\">0</span><span class=\"p\">)</span></td></tr><tr><th id=\"L29\"><a href=\"#L29\">29</a></th><td></td></tr><tr><th id=\"L30\"><a href=\"#L30\">30</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Skip the file header:</span></td></tr><tr><th id=\"L31\"><a href=\"#L31\">31</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 fheader <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>fp<span class=\"o\">.</span>read<span class=\"p\">(</span><span class=\"mi\">30</span><span class=\"p\">)</span></td></tr><tr><th id=\"L32\"><a href=\"#L32\">32</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0fheader<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">4</span><span class=\"p\">]</span>\u00a0<span class=\"o\">!=</span>\u00a0zipfile<span class=\"o\">.</span>stringFileHeader<span class=\"p\">:</span></td></tr><tr><th id=\"L33\"><a href=\"#L33\">33</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0zipfile<span class=\"o\">.</span>BadZipfile<span class=\"p\">,</span>\u00a0<span class=\"s\">\"Bad magic number for file header\"</span></td></tr><tr><th id=\"L34\"><a href=\"#L34\">34</a></th><td></td></tr><tr><th id=\"L35\"><a href=\"#L35\">35</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 fheader <span class=\"o\">=</span>\u00a0struct<span class=\"o\">.</span>unpack<span class=\"p\">(</span>zipfile<span class=\"o\">.</span>structFileHeader<span class=\"p\">,</span>\u00a0fheader<span class=\"p\">)</span></td></tr><tr><th id=\"L36\"><a href=\"#L36\">36</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 fname <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>fp<span class=\"o\">.</span>read<span class=\"p\">(</span>fheader<span class=\"p\">[</span>zipfile<span class=\"o\">.</span>_FH_FILENAME_LENGTH<span class=\"p\">])</span></td></tr><tr><th id=\"L37\"><a href=\"#L37\">37</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0fheader<span class=\"p\">[</span>zipfile<span class=\"o\">.</span>_FH_EXTRA_FIELD_LENGTH<span class=\"p\">]:</span></td></tr><tr><th id=\"L38\"><a href=\"#L38\">38</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>fp<span class=\"o\">.</span>read<span class=\"p\">(</span>fheader<span class=\"p\">[</span>zipfile<span class=\"o\">.</span>_FH_EXTRA_FIELD_LENGTH<span class=\"p\">])</span></td></tr><tr><th id=\"L39\"><a href=\"#L39\">39</a></th><td></td></tr><tr><th id=\"L40\"><a href=\"#L40\">40</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0fname <span class=\"o\">!=</span>\u00a0zinfo<span class=\"o\">.</span>orig_filename<span class=\"p\">:</span></td></tr><tr><th id=\"L41\"><a href=\"#L41\">41</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0zipfile<span class=\"o\">.</span>BadZipfile<span class=\"p\">,</span>\u00a0\\</td></tr><tr><th id=\"L42\"><a href=\"#L42\">42</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">'File name in directory \"</span><span class=\"si\">%s</span><span class=\"s\">\" and header \"</span><span class=\"si\">%s</span><span class=\"s\">\" differ.'</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span></td></tr><tr><th id=\"L43\"><a href=\"#L43\">43</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 zinfo<span class=\"o\">.</span>orig_filename<span class=\"p\">,</span>\u00a0fname<span class=\"p\">)</span></td></tr><tr><th id=\"L44\"><a href=\"#L44\">44</a></th><td></td></tr><tr><th id=\"L45\"><a href=\"#L45\">45</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0zinfo<span class=\"o\">.</span>compress_type <span class=\"o\">==</span>\u00a0zipfile<span class=\"o\">.</span>ZIP_STORED<span class=\"p\">:</span></td></tr><tr><th id=\"L46\"><a href=\"#L46\">46</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0ZipFileEntry<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>fp<span class=\"p\">,</span>\u00a0zinfo<span class=\"o\">.</span>compress_size<span class=\"p\">)</span></td></tr><tr><th id=\"L47\"><a href=\"#L47\">47</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0zinfo<span class=\"o\">.</span>compress_type <span class=\"o\">==</span>\u00a0zipfile<span class=\"o\">.</span>ZIP_DEFLATED<span class=\"p\">:</span></td></tr><tr><th id=\"L48\"><a href=\"#L48\">48</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0zlib<span class=\"p\">:</span></td></tr><tr><th id=\"L49\"><a href=\"#L49\">49</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">RuntimeError</span><span class=\"p\">,</span>\u00a0\\</td></tr><tr><th id=\"L50\"><a href=\"#L50\">50</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">\"De-compression requires the (missing) zlib module\"</span></td></tr><tr><th id=\"L51\"><a href=\"#L51\">51</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0DeflatedZipFileEntry<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>fp<span class=\"p\">,</span>\u00a0zinfo<span class=\"o\">.</span>compress_size<span class=\"p\">)</span></td></tr><tr><th id=\"L52\"><a href=\"#L52\">52</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L53\"><a href=\"#L53\">53</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0zipfile<span class=\"o\">.</span>BadZipfile<span class=\"p\">,</span>\u00a0\\</td></tr><tr><th id=\"L54\"><a href=\"#L54\">54</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">\"Unsupported compression method </span><span class=\"si\">%d</span><span class=\"s\">\u00a0for file </span><span class=\"si\">%s</span><span class=\"s\">\"</span>\u00a0<span class=\"o\">%</span>\u00a0\\</td></tr><tr><th id=\"L55\"><a href=\"#L55\">55</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"p\">(</span>zinfo<span class=\"o\">.</span>compress_type<span class=\"p\">,</span>\u00a0name<span class=\"p\">)</span></td></tr><tr><th id=\"L56\"><a href=\"#L56\">56</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L57\"><a href=\"#L57\">57</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">read</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0name<span class=\"p\">):</span></td></tr><tr><th id=\"L58\"><a href=\"#L58\">58</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Return file bytes (as a string) for name.\"\"\"</span></td></tr><tr><th id=\"L59\"><a href=\"#L59\">59</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 f <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>readfile<span class=\"p\">(</span>name<span class=\"p\">)</span></td></tr><tr><th id=\"L60\"><a href=\"#L60\">60</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 zinfo <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>getinfo<span class=\"p\">(</span>name<span class=\"p\">)</span></td></tr><tr><th id=\"L61\"><a href=\"#L61\">61</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">bytes</span>\u00a0<span class=\"o\">=</span>\u00a0f<span class=\"o\">.</span>read<span class=\"p\">()</span></td></tr><tr><th id=\"L62\"><a href=\"#L62\">62</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 crc <span class=\"o\">=</span>\u00a0binascii<span class=\"o\">.</span>crc32<span class=\"p\">(</span><span class=\"nb\">bytes</span><span class=\"p\">)</span></td></tr><tr><th id=\"L63\"><a href=\"#L63\">63</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0crc <span class=\"o\">!=</span>\u00a0zinfo<span class=\"o\">.</span>CRC<span class=\"p\">:</span></td></tr><tr><th id=\"L64\"><a href=\"#L64\">64</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0zipfile<span class=\"o\">.</span>BadZipfile<span class=\"p\">,</span>\u00a0<span class=\"s\">\"Bad CRC-32 for file </span><span class=\"si\">%s</span><span class=\"s\">\"</span>\u00a0<span class=\"o\">%</span>\u00a0name</td></tr><tr><th id=\"L65\"><a href=\"#L65\">65</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"nb\">bytes</span>\u00a0 \u00a0 \u00a0 \u00a0 </td></tr><tr><th id=\"L66\"><a href=\"#L66\">66</a></th><td></td></tr><tr><th id=\"L67\"><a href=\"#L67\">67</a></th><td></td></tr><tr><th id=\"L68\"><a href=\"#L68\">68</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">ZipFileEntry</span><span class=\"p\">:</span></td></tr><tr><th id=\"L69\"><a href=\"#L69\">69</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"File-like object used to read an uncompressed entry in a ZipFile\"\"\"</span></td></tr><tr><th id=\"L70\"><a href=\"#L70\">70</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L71\"><a href=\"#L71\">71</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0fp<span class=\"p\">,</span>\u00a0length<span class=\"p\">):</span></td></tr><tr><th id=\"L72\"><a href=\"#L72\">72</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>fp <span class=\"o\">=</span>\u00a0fp</td></tr><tr><th id=\"L73\"><a href=\"#L73\">73</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>readBytes <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L74\"><a href=\"#L74\">74</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>length <span class=\"o\">=</span>\u00a0length</td></tr><tr><th id=\"L75\"><a href=\"#L75\">75</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>finished <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L76\"><a href=\"#L76\">76</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 </td></tr><tr><th id=\"L77\"><a href=\"#L77\">77</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">tell</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L78\"><a href=\"#L78\">78</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>readBytes</td></tr><tr><th id=\"L79\"><a href=\"#L79\">79</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L80\"><a href=\"#L80\">80</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">read</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0n<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L81\"><a href=\"#L81\">81</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0n <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L82\"><a href=\"#L82\">82</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 n <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>length <span class=\"o\">-</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>readBytes</td></tr><tr><th id=\"L83\"><a href=\"#L83\">83</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0n <span class=\"o\">==</span>\u00a0<span class=\"mi\">0</span>\u00a0<span class=\"ow\">or</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>finished<span class=\"p\">:</span></td></tr><tr><th id=\"L84\"><a href=\"#L84\">84</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"s\">''</span></td></tr><tr><th id=\"L85\"><a href=\"#L85\">85</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 </td></tr><tr><th id=\"L86\"><a href=\"#L86\">86</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 data <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>fp<span class=\"o\">.</span>read<span class=\"p\">(</span><span class=\"nb\">min</span><span class=\"p\">(</span>n<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>length <span class=\"o\">-</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>readBytes<span class=\"p\">))</span></td></tr><tr><th id=\"L87\"><a href=\"#L87\">87</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>readBytes <span class=\"o\">+=</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L88\"><a href=\"#L88\">88</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>readBytes <span class=\"o\">==</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>length <span class=\"ow\">or</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span>data<span class=\"p\">)</span>\u00a0<span class=\"o\">&lt;</span>\u00a0 n<span class=\"p\">:</span></td></tr><tr><th id=\"L89\"><a href=\"#L89\">89</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>finished <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L90\"><a href=\"#L90\">90</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0data</td></tr><tr><th id=\"L91\"><a href=\"#L91\">91</a></th><td></td></tr><tr><th id=\"L92\"><a href=\"#L92\">92</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">close</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L93\"><a href=\"#L93\">93</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>finished <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L94\"><a href=\"#L94\">94</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>fp</td></tr><tr><th id=\"L95\"><a href=\"#L95\">95</a></th><td></td></tr><tr><th id=\"L96\"><a href=\"#L96\">96</a></th><td></td></tr><tr><th id=\"L97\"><a href=\"#L97\">97</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">DeflatedZipFileEntry</span><span class=\"p\">:</span></td></tr><tr><th id=\"L98\"><a href=\"#L98\">98</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"File-like object used to read a deflated entry in a ZipFile\"\"\"</span></td></tr><tr><th id=\"L99\"><a href=\"#L99\">99</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L100\"><a href=\"#L100\">100</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0fp<span class=\"p\">,</span>\u00a0length<span class=\"p\">):</span></td></tr><tr><th id=\"L101\"><a href=\"#L101\">101</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>fp <span class=\"o\">=</span>\u00a0fp</td></tr><tr><th id=\"L102\"><a href=\"#L102\">102</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>returnedBytes <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L103\"><a href=\"#L103\">103</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>readBytes <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L104\"><a href=\"#L104\">104</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>decomp <span class=\"o\">=</span>\u00a0zlib<span class=\"o\">.</span>decompressobj<span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">15</span><span class=\"p\">)</span></td></tr><tr><th id=\"L105\"><a href=\"#L105\">105</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>buffer <span class=\"o\">=</span>\u00a0<span class=\"s\">\"\"</span></td></tr><tr><th id=\"L106\"><a href=\"#L106\">106</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>length <span class=\"o\">=</span>\u00a0length</td></tr><tr><th id=\"L107\"><a href=\"#L107\">107</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>finished <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L108\"><a href=\"#L108\">108</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 </td></tr><tr><th id=\"L109\"><a href=\"#L109\">109</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">tell</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L110\"><a href=\"#L110\">110</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>returnedBytes</td></tr><tr><th id=\"L111\"><a href=\"#L111\">111</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L112\"><a href=\"#L112\">112</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">read</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0n<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L113\"><a href=\"#L113\">113</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>finished<span class=\"p\">:</span></td></tr><tr><th id=\"L114\"><a href=\"#L114\">114</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"s\">\"\"</span></td></tr><tr><th id=\"L115\"><a href=\"#L115\">115</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0n <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L116\"><a href=\"#L116\">116</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 result <span class=\"o\">=</span>\u00a0<span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span>buffer<span class=\"p\">,]</span></td></tr><tr><th id=\"L117\"><a href=\"#L117\">117</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 result<span class=\"o\">.</span>append<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>decomp<span class=\"o\">.</span>decompress<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>fp<span class=\"o\">.</span>read<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>length <span class=\"o\">-</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>readBytes<span class=\"p\">)))</span></td></tr><tr><th id=\"L118\"><a href=\"#L118\">118</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 result<span class=\"o\">.</span>append<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>decomp<span class=\"o\">.</span>decompress<span class=\"p\">(</span><span class=\"s\">\"Z\"</span><span class=\"p\">))</span></td></tr><tr><th id=\"L119\"><a href=\"#L119\">119</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 result<span class=\"o\">.</span>append<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>decomp<span class=\"o\">.</span>flush<span class=\"p\">())</span></td></tr><tr><th id=\"L120\"><a href=\"#L120\">120</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>buffer <span class=\"o\">=</span>\u00a0<span class=\"s\">\"\"</span></td></tr><tr><th id=\"L121\"><a href=\"#L121\">121</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>finished <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L122\"><a href=\"#L122\">122</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 result <span class=\"o\">=</span>\u00a0<span class=\"s\">\"\"</span><span class=\"o\">.</span>join<span class=\"p\">(</span>result<span class=\"p\">)</span></td></tr><tr><th id=\"L123\"><a href=\"#L123\">123</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>returnedBytes <span class=\"o\">+=</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span>result<span class=\"p\">)</span></td></tr><tr><th id=\"L124\"><a href=\"#L124\">124</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0result</td></tr><tr><th id=\"L125\"><a href=\"#L125\">125</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L126\"><a href=\"#L126\">126</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">while</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>buffer<span class=\"p\">)</span>\u00a0<span class=\"o\">&lt;</span>\u00a0n<span class=\"p\">:</span></td></tr><tr><th id=\"L127\"><a href=\"#L127\">127</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 data <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>fp<span class=\"o\">.</span>read<span class=\"p\">(</span><span class=\"nb\">min</span><span class=\"p\">(</span>n<span class=\"p\">,</span>\u00a0<span class=\"mi\">1024</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>length <span class=\"o\">-</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>readBytes<span class=\"p\">))</span></td></tr><tr><th id=\"L128\"><a href=\"#L128\">128</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>readBytes <span class=\"o\">+=</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L129\"><a href=\"#L129\">129</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0data<span class=\"p\">:</span></td></tr><tr><th id=\"L130\"><a href=\"#L130\">130</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 result <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>buffer <span class=\"o\">+</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>decomp<span class=\"o\">.</span>decompress<span class=\"p\">(</span><span class=\"s\">\"Z\"</span><span class=\"p\">)</span>\u00a0<span class=\"o\">+</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>decomp<span class=\"o\">.</span>flush<span class=\"p\">()</span></td></tr><tr><th id=\"L131\"><a href=\"#L131\">131</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>finished <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L132\"><a href=\"#L132\">132</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>buffer <span class=\"o\">=</span>\u00a0<span class=\"s\">\"\"</span></td></tr><tr><th id=\"L133\"><a href=\"#L133\">133</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>returnedBytes <span class=\"o\">+=</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span>result<span class=\"p\">)</span></td></tr><tr><th id=\"L134\"><a href=\"#L134\">134</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0result</td></tr><tr><th id=\"L135\"><a href=\"#L135\">135</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L136\"><a href=\"#L136\">136</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>buffer <span class=\"o\">+=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>decomp<span class=\"o\">.</span>decompress<span class=\"p\">(</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L137\"><a href=\"#L137\">137</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 result <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>buffer<span class=\"p\">[:</span>n<span class=\"p\">]</span></td></tr><tr><th id=\"L138\"><a href=\"#L138\">138</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>buffer <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>buffer<span class=\"p\">[</span>n<span class=\"p\">:]</span></td></tr><tr><th id=\"L139\"><a href=\"#L139\">139</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>returnedBytes <span class=\"o\">+=</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span>result<span class=\"p\">)</span></td></tr><tr><th id=\"L140\"><a href=\"#L140\">140</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0result</td></tr><tr><th id=\"L141\"><a href=\"#L141\">141</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L142\"><a href=\"#L142\">142</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">close</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L143\"><a href=\"#L143\">143</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>finished <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L144\"><a href=\"#L144\">144</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>fp</td></tr><tr><th id=\"L145\"><a href=\"#L145\">145</a></th><td></td></tr><tr><th id=\"L146\"><a href=\"#L146\">146</a></th><td></td></tr><tr><th id=\"L147\"><a href=\"#L147\">147</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">unzip</span><span class=\"p\">(</span>filename<span class=\"p\">,</span>\u00a0directory<span class=\"o\">=</span><span class=\"s\">\".\"</span><span class=\"p\">,</span>\u00a0overwrite<span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span></td></tr><tr><th id=\"L148\"><a href=\"#L148\">148</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Unzip the file</span></td></tr><tr><th id=\"L149\"><a href=\"#L149\">149</a></th><td><span class=\"sd\">\u00a0 \u00a0 @param filename: the name of the zip file</span></td></tr><tr><th id=\"L150\"><a href=\"#L150\">150</a></th><td><span class=\"sd\">\u00a0 \u00a0 @param directory: the directory into which the files will be</span></td></tr><tr><th id=\"L151\"><a href=\"#L151\">151</a></th><td><span class=\"sd\">\u00a0 \u00a0 extracted</span></td></tr><tr><th id=\"L152\"><a href=\"#L152\">152</a></th><td><span class=\"sd\">\u00a0 \u00a0 @param overwrite: if on, overwrite files when they exist.\u00a0 You can</span></td></tr><tr><th id=\"L153\"><a href=\"#L153\">153</a></th><td><span class=\"sd\">\u00a0 \u00a0 still get an error if you try to create a directory over a file</span></td></tr><tr><th id=\"L154\"><a href=\"#L154\">154</a></th><td><span class=\"sd\">\u00a0 \u00a0 with the same name or vice-versa.</span></td></tr><tr><th id=\"L155\"><a href=\"#L155\">155</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L156\"><a href=\"#L156\">156</a></th><td>\u00a0 \u00a0 <span class=\"k\">for</span>\u00a0i <span class=\"ow\">in</span>\u00a0unzipIter<span class=\"p\">(</span>filename<span class=\"p\">,</span>\u00a0directory<span class=\"p\">,</span>\u00a0overwrite<span class=\"p\">):</span></td></tr><tr><th id=\"L157\"><a href=\"#L157\">157</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L158\"><a href=\"#L158\">158</a></th><td></td></tr><tr><th id=\"L159\"><a href=\"#L159\">159</a></th><td>DIR_BIT<span class=\"o\">=</span><span class=\"mi\">16</span></td></tr><tr><th id=\"L160\"><a href=\"#L160\">160</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">unzipIter</span><span class=\"p\">(</span>filename<span class=\"p\">,</span>\u00a0directory<span class=\"o\">=</span><span class=\"s\">'.'</span><span class=\"p\">,</span>\u00a0overwrite<span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span></td></tr><tr><th id=\"L161\"><a href=\"#L161\">161</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Return a generator for the zipfile.\u00a0 This implementation will</span></td></tr><tr><th id=\"L162\"><a href=\"#L162\">162</a></th><td><span class=\"sd\">\u00a0 \u00a0 yield after every file.</span></td></tr><tr><th id=\"L163\"><a href=\"#L163\">163</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L164\"><a href=\"#L164\">164</a></th><td><span class=\"sd\">\u00a0 \u00a0 The value it yields is the number of files left to unzip.</span></td></tr><tr><th id=\"L165\"><a href=\"#L165\">165</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L166\"><a href=\"#L166\">166</a></th><td>\u00a0 \u00a0 zf<span class=\"o\">=</span>zipfile<span class=\"o\">.</span>ZipFile<span class=\"p\">(</span>filename<span class=\"p\">,</span>\u00a0<span class=\"s\">'r'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L167\"><a href=\"#L167\">167</a></th><td>\u00a0 \u00a0 names<span class=\"o\">=</span>zf<span class=\"o\">.</span>namelist<span class=\"p\">()</span></td></tr><tr><th id=\"L168\"><a href=\"#L168\">168</a></th><td>\u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0os<span class=\"o\">.</span>path<span class=\"o\">.</span>exists<span class=\"p\">(</span>directory<span class=\"p\">):</span>\u00a0os<span class=\"o\">.</span>makedirs<span class=\"p\">(</span>directory<span class=\"p\">)</span></td></tr><tr><th id=\"L169\"><a href=\"#L169\">169</a></th><td>\u00a0 \u00a0 remaining<span class=\"o\">=</span>countZipFileEntries<span class=\"p\">(</span>filename<span class=\"p\">)</span></td></tr><tr><th id=\"L170\"><a href=\"#L170\">170</a></th><td>\u00a0 \u00a0 <span class=\"k\">for</span>\u00a0entry <span class=\"ow\">in</span>\u00a0names<span class=\"p\">:</span></td></tr><tr><th id=\"L171\"><a href=\"#L171\">171</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 remaining<span class=\"o\">=</span>remaining <span class=\"o\">-</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L172\"><a href=\"#L172\">172</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 isdir<span class=\"o\">=</span>zf<span class=\"o\">.</span>getinfo<span class=\"p\">(</span>entry<span class=\"p\">)</span><span class=\"o\">.</span>external_attr <span class=\"o\">&amp;</span>\u00a0DIR_BIT</td></tr><tr><th id=\"L173\"><a href=\"#L173\">173</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 f<span class=\"o\">=</span>os<span class=\"o\">.</span>path<span class=\"o\">.</span>join<span class=\"p\">(</span>directory<span class=\"p\">,</span>\u00a0entry<span class=\"p\">)</span></td></tr><tr><th id=\"L174\"><a href=\"#L174\">174</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0isdir<span class=\"p\">:</span></td></tr><tr><th id=\"L175\"><a href=\"#L175\">175</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># overwrite flag only applies to files</span></td></tr><tr><th id=\"L176\"><a href=\"#L176\">176</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0os<span class=\"o\">.</span>path<span class=\"o\">.</span>exists<span class=\"p\">(</span>f<span class=\"p\">):</span>\u00a0os<span class=\"o\">.</span>makedirs<span class=\"p\">(</span>f<span class=\"p\">)</span></td></tr><tr><th id=\"L177\"><a href=\"#L177\">177</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L178\"><a href=\"#L178\">178</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># create the directory the file will be in first,</span></td></tr><tr><th id=\"L179\"><a href=\"#L179\">179</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># since we can't guarantee it exists</span></td></tr><tr><th id=\"L180\"><a href=\"#L180\">180</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fdir<span class=\"o\">=</span>os<span class=\"o\">.</span>path<span class=\"o\">.</span>split<span class=\"p\">(</span>f<span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span></td></tr><tr><th id=\"L181\"><a href=\"#L181\">181</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0os<span class=\"o\">.</span>path<span class=\"o\">.</span>exists<span class=\"p\">(</span>fdir<span class=\"p\">):</span></td></tr><tr><th id=\"L182\"><a href=\"#L182\">182</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>makedirs<span class=\"p\">(</span>f<span class=\"p\">)</span></td></tr><tr><th id=\"L183\"><a href=\"#L183\">183</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0overwrite <span class=\"ow\">or</span>\u00a0<span class=\"ow\">not</span>\u00a0os<span class=\"o\">.</span>path<span class=\"o\">.</span>exists<span class=\"p\">(</span>f<span class=\"p\">):</span></td></tr><tr><th id=\"L184\"><a href=\"#L184\">184</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 outfile<span class=\"o\">=</span><span class=\"nb\">file</span><span class=\"p\">(</span>f<span class=\"p\">,</span>\u00a0<span class=\"s\">'wb'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L185\"><a href=\"#L185\">185</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 outfile<span class=\"o\">.</span>write<span class=\"p\">(</span>zf<span class=\"o\">.</span>read<span class=\"p\">(</span>entry<span class=\"p\">))</span></td></tr><tr><th id=\"L186\"><a href=\"#L186\">186</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 outfile<span class=\"o\">.</span>close<span class=\"p\">()</span></td></tr><tr><th id=\"L187\"><a href=\"#L187\">187</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">yield</span>\u00a0remaining</td></tr><tr><th id=\"L188\"><a href=\"#L188\">188</a></th><td></td></tr><tr><th id=\"L189\"><a href=\"#L189\">189</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">countZipFileChunks</span><span class=\"p\">(</span>filename<span class=\"p\">,</span>\u00a0chunksize<span class=\"p\">):</span></td></tr><tr><th id=\"L190\"><a href=\"#L190\">190</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Predict the number of chunks that will be extracted from the</span></td></tr><tr><th id=\"L191\"><a href=\"#L191\">191</a></th><td><span class=\"sd\">\u00a0 \u00a0 entire zipfile, given chunksize blocks.</span></td></tr><tr><th id=\"L192\"><a href=\"#L192\">192</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L193\"><a href=\"#L193\">193</a></th><td>\u00a0 \u00a0 totalchunks<span class=\"o\">=</span><span class=\"mi\">0</span></td></tr><tr><th id=\"L194\"><a href=\"#L194\">194</a></th><td>\u00a0 \u00a0 zf<span class=\"o\">=</span>ChunkingZipFile<span class=\"p\">(</span>filename<span class=\"p\">)</span></td></tr><tr><th id=\"L195\"><a href=\"#L195\">195</a></th><td>\u00a0 \u00a0 <span class=\"k\">for</span>\u00a0info <span class=\"ow\">in</span>\u00a0zf<span class=\"o\">.</span>infolist<span class=\"p\">():</span></td></tr><tr><th id=\"L196\"><a href=\"#L196\">196</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 totalchunks<span class=\"o\">=</span>totalchunks<span class=\"o\">+</span>countFileChunks<span class=\"p\">(</span>info<span class=\"p\">,</span>\u00a0chunksize<span class=\"p\">)</span></td></tr><tr><th id=\"L197\"><a href=\"#L197\">197</a></th><td>\u00a0 \u00a0 <span class=\"k\">return</span>\u00a0totalchunks</td></tr><tr><th id=\"L198\"><a href=\"#L198\">198</a></th><td></td></tr><tr><th id=\"L199\"><a href=\"#L199\">199</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">countFileChunks</span><span class=\"p\">(</span>zipinfo<span class=\"p\">,</span>\u00a0chunksize<span class=\"p\">):</span></td></tr><tr><th id=\"L200\"><a href=\"#L200\">200</a></th><td>\u00a0 \u00a0 size<span class=\"o\">=</span>zipinfo<span class=\"o\">.</span>file_size</td></tr><tr><th id=\"L201\"><a href=\"#L201\">201</a></th><td>\u00a0 \u00a0 count<span class=\"o\">=</span>size<span class=\"o\">/</span>chunksize</td></tr><tr><th id=\"L202\"><a href=\"#L202\">202</a></th><td>\u00a0 \u00a0 <span class=\"k\">if</span>\u00a0size<span class=\"o\">%</span>chunksize <span class=\"o\">&gt;</span>\u00a0<span class=\"mi\">0</span><span class=\"p\">:</span></td></tr><tr><th id=\"L203\"><a href=\"#L203\">203</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 count<span class=\"o\">=</span>count<span class=\"o\">+</span><span class=\"mi\">1</span></td></tr><tr><th id=\"L204\"><a href=\"#L204\">204</a></th><td>\u00a0 \u00a0 <span class=\"c\"># each file counts as at least one chunk</span></td></tr><tr><th id=\"L205\"><a href=\"#L205\">205</a></th><td>\u00a0 \u00a0 <span class=\"k\">return</span>\u00a0count <span class=\"ow\">or</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L206\"><a href=\"#L206\">206</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L207\"><a href=\"#L207\">207</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">countZipFileEntries</span><span class=\"p\">(</span>filename<span class=\"p\">):</span></td></tr><tr><th id=\"L208\"><a href=\"#L208\">208</a></th><td>\u00a0 \u00a0 zf<span class=\"o\">=</span>zipfile<span class=\"o\">.</span>ZipFile<span class=\"p\">(</span>filename<span class=\"p\">)</span></td></tr><tr><th id=\"L209\"><a href=\"#L209\">209</a></th><td>\u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span>zf<span class=\"o\">.</span>namelist<span class=\"p\">())</span></td></tr><tr><th id=\"L210\"><a href=\"#L210\">210</a></th><td></td></tr><tr><th id=\"L211\"><a href=\"#L211\">211</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">unzipIterChunky</span><span class=\"p\">(</span>filename<span class=\"p\">,</span>\u00a0directory<span class=\"o\">=</span><span class=\"s\">'.'</span><span class=\"p\">,</span>\u00a0overwrite<span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span></td></tr><tr><th id=\"L212\"><a href=\"#L212\">212</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 chunksize<span class=\"o\">=</span><span class=\"mi\">4096</span><span class=\"p\">):</span></td></tr><tr><th id=\"L213\"><a href=\"#L213\">213</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Return a generator for the zipfile.\u00a0 This implementation will</span></td></tr><tr><th id=\"L214\"><a href=\"#L214\">214</a></th><td><span class=\"sd\">\u00a0 \u00a0 yield after every chunksize uncompressed bytes, or at the end of a</span></td></tr><tr><th id=\"L215\"><a href=\"#L215\">215</a></th><td><span class=\"sd\">\u00a0 \u00a0 file, whichever comes first.</span></td></tr><tr><th id=\"L216\"><a href=\"#L216\">216</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L217\"><a href=\"#L217\">217</a></th><td><span class=\"sd\">\u00a0 \u00a0 The value it yields is the number of chunks left to unzip.</span></td></tr><tr><th id=\"L218\"><a href=\"#L218\">218</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L219\"><a href=\"#L219\">219</a></th><td>\u00a0 \u00a0 czf<span class=\"o\">=</span>ChunkingZipFile<span class=\"p\">(</span>filename<span class=\"p\">,</span>\u00a0<span class=\"s\">'r'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L220\"><a href=\"#L220\">220</a></th><td>\u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0os<span class=\"o\">.</span>path<span class=\"o\">.</span>exists<span class=\"p\">(</span>directory<span class=\"p\">):</span>\u00a0os<span class=\"o\">.</span>makedirs<span class=\"p\">(</span>directory<span class=\"p\">)</span></td></tr><tr><th id=\"L221\"><a href=\"#L221\">221</a></th><td>\u00a0 \u00a0 remaining<span class=\"o\">=</span>countZipFileChunks<span class=\"p\">(</span>filename<span class=\"p\">,</span>\u00a0chunksize<span class=\"p\">)</span></td></tr><tr><th id=\"L222\"><a href=\"#L222\">222</a></th><td>\u00a0 \u00a0 names<span class=\"o\">=</span>czf<span class=\"o\">.</span>namelist<span class=\"p\">()</span></td></tr><tr><th id=\"L223\"><a href=\"#L223\">223</a></th><td>\u00a0 \u00a0 infos<span class=\"o\">=</span>czf<span class=\"o\">.</span>infolist<span class=\"p\">()</span></td></tr><tr><th id=\"L224\"><a href=\"#L224\">224</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L225\"><a href=\"#L225\">225</a></th><td>\u00a0 \u00a0 <span class=\"k\">for</span>\u00a0entry<span class=\"p\">,</span>\u00a0info <span class=\"ow\">in</span>\u00a0<span class=\"nb\">zip</span><span class=\"p\">(</span>names<span class=\"p\">,</span>\u00a0infos<span class=\"p\">):</span></td></tr><tr><th id=\"L226\"><a href=\"#L226\">226</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 isdir<span class=\"o\">=</span>info<span class=\"o\">.</span>external_attr <span class=\"o\">&amp;</span>\u00a0DIR_BIT</td></tr><tr><th id=\"L227\"><a href=\"#L227\">227</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 f<span class=\"o\">=</span>os<span class=\"o\">.</span>path<span class=\"o\">.</span>join<span class=\"p\">(</span>directory<span class=\"p\">,</span>\u00a0entry<span class=\"p\">)</span></td></tr><tr><th id=\"L228\"><a href=\"#L228\">228</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0isdir<span class=\"p\">:</span></td></tr><tr><th id=\"L229\"><a href=\"#L229\">229</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># overwrite flag only applies to files</span></td></tr><tr><th id=\"L230\"><a href=\"#L230\">230</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0os<span class=\"o\">.</span>path<span class=\"o\">.</span>exists<span class=\"p\">(</span>f<span class=\"p\">):</span>\u00a0os<span class=\"o\">.</span>makedirs<span class=\"p\">(</span>f<span class=\"p\">)</span></td></tr><tr><th id=\"L231\"><a href=\"#L231\">231</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 remaining<span class=\"o\">=</span>remaining<span class=\"o\">-</span><span class=\"mi\">1</span></td></tr><tr><th id=\"L232\"><a href=\"#L232\">232</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">assert</span>\u00a0remaining<span class=\"o\">&gt;=</span><span class=\"mi\">0</span></td></tr><tr><th id=\"L233\"><a href=\"#L233\">233</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">yield</span>\u00a0remaining</td></tr><tr><th id=\"L234\"><a href=\"#L234\">234</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L235\"><a href=\"#L235\">235</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># create the directory the file will be in first,</span></td></tr><tr><th id=\"L236\"><a href=\"#L236\">236</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># since we can't guarantee it exists</span></td></tr><tr><th id=\"L237\"><a href=\"#L237\">237</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fdir<span class=\"o\">=</span>os<span class=\"o\">.</span>path<span class=\"o\">.</span>split<span class=\"p\">(</span>f<span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span></td></tr><tr><th id=\"L238\"><a href=\"#L238\">238</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0os<span class=\"o\">.</span>path<span class=\"o\">.</span>exists<span class=\"p\">(</span>fdir<span class=\"p\">):</span></td></tr><tr><th id=\"L239\"><a href=\"#L239\">239</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>makedirs<span class=\"p\">(</span>f<span class=\"p\">)</span></td></tr><tr><th id=\"L240\"><a href=\"#L240\">240</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0overwrite <span class=\"ow\">or</span>\u00a0<span class=\"ow\">not</span>\u00a0os<span class=\"o\">.</span>path<span class=\"o\">.</span>exists<span class=\"p\">(</span>f<span class=\"p\">):</span></td></tr><tr><th id=\"L241\"><a href=\"#L241\">241</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 outfile<span class=\"o\">=</span><span class=\"nb\">file</span><span class=\"p\">(</span>f<span class=\"p\">,</span>\u00a0<span class=\"s\">'wb'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L242\"><a href=\"#L242\">242</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fp<span class=\"o\">=</span>czf<span class=\"o\">.</span>readfile<span class=\"p\">(</span>entry<span class=\"p\">)</span></td></tr><tr><th id=\"L243\"><a href=\"#L243\">243</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0info<span class=\"o\">.</span>file_size<span class=\"o\">==</span><span class=\"mi\">0</span><span class=\"p\">:</span></td></tr><tr><th id=\"L244\"><a href=\"#L244\">244</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 remaining<span class=\"o\">=</span>remaining<span class=\"o\">-</span><span class=\"mi\">1</span></td></tr><tr><th id=\"L245\"><a href=\"#L245\">245</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">assert</span>\u00a0remaining<span class=\"o\">&gt;=</span><span class=\"mi\">0</span></td></tr><tr><th id=\"L246\"><a href=\"#L246\">246</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">yield</span>\u00a0remaining</td></tr><tr><th id=\"L247\"><a href=\"#L247\">247</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fread<span class=\"o\">=</span>fp<span class=\"o\">.</span>read</td></tr><tr><th id=\"L248\"><a href=\"#L248\">248</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ftell<span class=\"o\">=</span>fp<span class=\"o\">.</span>tell</td></tr><tr><th id=\"L249\"><a href=\"#L249\">249</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 owrite<span class=\"o\">=</span>outfile<span class=\"o\">.</span>write</td></tr><tr><th id=\"L250\"><a href=\"#L250\">250</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 size<span class=\"o\">=</span>info<span class=\"o\">.</span>file_size</td></tr><tr><th id=\"L251\"><a href=\"#L251\">251</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">while</span>\u00a0ftell<span class=\"p\">()</span>\u00a0<span class=\"o\">&lt;</span>\u00a0size<span class=\"p\">:</span></td></tr><tr><th id=\"L252\"><a href=\"#L252\">252</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 hunk<span class=\"o\">=</span>fread<span class=\"p\">(</span>chunksize<span class=\"p\">)</span></td></tr><tr><th id=\"L253\"><a href=\"#L253\">253</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 owrite<span class=\"p\">(</span>hunk<span class=\"p\">)</span></td></tr><tr><th id=\"L254\"><a href=\"#L254\">254</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 remaining<span class=\"o\">=</span>remaining<span class=\"o\">-</span><span class=\"mi\">1</span></td></tr><tr><th id=\"L255\"><a href=\"#L255\">255</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">assert</span>\u00a0remaining<span class=\"o\">&gt;=</span><span class=\"mi\">0</span></td></tr><tr><th id=\"L256\"><a href=\"#L256\">256</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">yield</span>\u00a0remaining</td></tr><tr><th id=\"L257\"><a href=\"#L257\">257</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 outfile<span class=\"o\">.</span>close<span class=\"p\">()</span></td></tr><tr><th id=\"L258\"><a href=\"#L258\">258</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L259\"><a href=\"#L259\">259</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 remaining<span class=\"o\">=</span>remaining<span class=\"o\">-</span>countFileChunks<span class=\"p\">(</span>info<span class=\"p\">,</span>\u00a0chunksize<span class=\"p\">)</span></td></tr><tr><th id=\"L260\"><a href=\"#L260\">260</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">assert</span>\u00a0remaining<span class=\"o\">&gt;=</span><span class=\"mi\">0</span></td></tr><tr><th id=\"L261\"><a href=\"#L261\">261</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">yield</span>\u00a0remaining</td></tr></tbody></table>\n\n      </div>\n      <div id=\"anydiff\">\n        <form action=\"/LUCICodeRepository/nomaticIM/diff\" method=\"get\">\n          <div class=\"buttons\">\n            <input type=\"hidden\" name=\"new_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/zipstream.py\" />\n            <input type=\"hidden\" name=\"old_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/zipstream.py\" />\n            <input type=\"hidden\" name=\"new_rev\" />\n            <input type=\"hidden\" name=\"old_rev\" />\n            <input type=\"submit\" value=\"View changes...\" title=\"Select paths and revs for Diff\" />\n          </div>\n        </form>\n      </div>\n      <div id=\"help\"><strong>Note:</strong> See <a href=\"/LUCICodeRepository/nomaticIM/wiki/TracBrowser\">TracBrowser</a>\n        for help on using the repository browser.</div>\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"first\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/zipstream.py?format=txt\">Plain Text</a>\n        </li><li class=\"last\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/zipstream.py\">Original Format</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/LUCICodeRepository/nomaticIM/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/LUCICodeRepository/nomaticIM/about\"><strong>Trac 1.0.1</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">All content copyright 2007-2008 by LUCI <br /><a href=\"http://luci.ics.uci.edu/\">http://luci.ics.uci.edu/</a></p>\n    </div>\n\t\t<div id=\"sitefooter\">\n\t\t\t<script src=\"http://www.google-analytics.com/urchin.js\" type=\"text/javascript\">\n\t\t\t</script>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t\t_uacct = \"UA-338915-2\";\n\t\t\t\turchinTracker();\n\t\t\t</script>\n\t\t</div>\n\t</body>\n</html>", "id": 44346.0}