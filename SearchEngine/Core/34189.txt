{"text": "View Javadoc 1 2 Created on Apr 9 2 5 3 4 5 package edu uci isr impromptu security 6 7 import java awt BorderLayout 8 import java awt Dimension 9 import java awt FlowLayout 1 import java util Date 11 import java util Enumeration 12 import java util Vector 13 14 import javax swing BorderFactory 15 import javax swing JButton 16 import javax swing JCheckBox 17 import javax swing JDialog 18 import javax swing JLabel 19 import javax swing JList 2 import javax swing JPanel 21 import javax swing JScrollPane 22 import javax swing JTextField 23 import javax swing border EtchedBorder 24 25 import org apache commons httpclient Credentials 26 import org apache commons httpclient UsernamePasswordCredentials 27 import org apache slide authenticate CredentialsToken 28 import org apache slide common NamespaceAccessToken 29 import org apache slide common SlideToken 3 import org apache slide common SlideTokenImpl 31 import org apache slide content Content 32 import org apache slide content NodeProperty 33 import org apache slide content NodeRevisionDescriptor 34 import org apache slide content NodeRevisionDescriptors 35 import org apache slide content RevisionDescriptorNotFoundException 36 import org apache slide structure ObjectAlreadyExistsException 37 import org apache slide structure Structure 38 import org apache slide structure SubjectNode 39 import org apache slide webdav util PropertyHelper 4 import org apache webdav lib BaseProperty 41 import org apache webdav lib Constants 42 import org apache webdav lib PropertyName 43 import org apache webdav lib ResponseEntity 44 import org apache webdav lib WebdavResource 45 import org apache webdav lib methods DepthSupport 46 import org mortbay http HttpContext 47 import org w3c dom Element 48 import org w3c dom NodeList 49 5 import edu uci isr impromptu common Utils 51 52 53 This class controls how user authentication should be done 54 It controls what password is for me 55 It also controls whether me will blindly accept any requests 56 or it will reject certain users For accepted users it 57 controls what their passwords should be 58 59 author Jie Ren 6 61 public class UserManager 62 63 JPanel panel new JPanel new BorderLayout 64 JPanel panelMe new JPanel new FlowLayout 65 JTextField textMyPassword new JTextField 66 JPanel panelOthersGroup new JPanel new BorderLayout 67 JPanel panelOthers new JPanel new BorderLayout 68 JCheckBox buttonAlwaysAllowOthers new JCheckBox Always allow other users 69 JButton buttonChangeMyPassword new JButton Change My Password 7 JButton buttonChangeOtherPassword new JButton Change Others Password 71 JButton buttonDisallowOther new JButton Disallow other 72 JList listOthers new JList 73 JScrollPane paneOthers new JScrollPane listOthers 74 JDialog f new JDialog 75 76 HttpContext context 77 SlideUserRealm realm 78 boolean alwaysAllowOthers true 79 8 81 The WebDAV connection 82 83 private WebdavResource impromptuServer 84 85 86 Create a user manager 87 param uraa the Jetty realm 88 param impromptuServer the Slide connection 89 9 public UserManager SlideUserRealm uraa WebdavResource impromptuServer 91 this impromptuServer impromptuServer 92 93 retrieve an HttpContext 94 create the GUI 95 panelMe setBorder BorderFactory createTitledBorder 96 BorderFactory createEtchedBorder EtchedBorder LOWERED 97 Me 98 panelMe add new JLabel Input New Password BorderLayout WEST 99 textMyPassword setPreferredSize new Dimension 1 2 1 panelMe add textMyPassword BorderLayout CENTER 1 1 panelMe add buttonChangeMyPassword BorderLayout EAST 1 2 panel add panelMe BorderLayout NORTH 1 3 1 4 panelOthersGroup setBorder BorderFactory createTitledBorder 1 5 BorderFactory createEtchedBorder EtchedBorder LOWERED 1 6 Others 1 7 panelOthersGroup add buttonAlwaysAllowOthers BorderLayout NORTH 1 8 JPanel actionsOthers new JPanel new FlowLayout 1 9 actionsOthers add buttonChangeOtherPassword 11 actionsOthers add buttonDisallowOther 111 panelOthers add actionsOthers BorderLayout SOUTH 112 panelOthers add paneOthers BorderLayout CENTER 113 panelOthersGroup add panelOthers BorderLayout CENTER 114 115 panel add panelOthersGroup BorderLayout CENTER 116 117 TODO security architecture method permission abstract mapping and aggregation arch level 118 f getContentPane setLayout new FlowLayout 119 f getContentPane add panel 12 f setSize new Dimension 44 33 121 f setTitle User Manager 122 123 buttonAlwaysAllowOthers setSelected alwaysAllowOthers 124 this realm uraa 125 if this impromptuServer null realm null 126 127 if listOthers getSelectedIndex 1 128 buttonChangeOtherPassword setEnabled false 129 buttonDisallowOther setEnabled false 13 131 132 133 134 Display the user manager 135 136 public void show 137 f setVisible true 138 139 14 141 The property that stores the members of a role in Slide 142 143 private final static String ROLE MEMBER PROPERTY group member set 144 145 146 Add a slide user from the client side 147 param server the remote WebDAV resource 148 param userName the name of the new user 149 param roleName the role of the new user 15 return true if added successfully false otherwise 151 152 public static boolean addASlideUserFromClient WebdavResource server 153 String userName String roleName 154 155 The begin tag for a member in the role definition 156 157 String memberBeginTag D href xmlns D DAV 158 159 The end tag for a member in the role definition 16 161 String memberEndTag D href 162 163 The name of the property storing the password for a user 164 165 String passwordProperty password 166 167 The href tag used for each member of a role 168 169 String tagHref href 17 171 boolean result false 172 try 173 Create a user 174 String userPath SecurityUtils getUserPathForClient userName 175 result server mkcolMethod userPath 176 if result 177 set default password 178 PropertyName passwordPropertyName new PropertyName 179 Constants SLIDE passwordProperty 18 result server proppatchMethod userPath passwordPropertyName 181 DEFAULT PASSWORD OPAQUE true 182 183 184 Get memebers of the role 185 String rolePath SecurityUtils getRolePathForClient roleName 186 PropertyName groupMemberSetProperty new PropertyName 187 Constants DAV ROLE MEMBER PROPERTY 188 Vector pnv new Vector 189 pnv add groupMemberSetProperty 19 191 The 2 WebdavResource does not handle XML property value correctly 192 so we need our own parsing Code for 2 1 will be simpler 193 Enumeration enum server propfindMethod rolePath DepthSupport DEPTH 1 pnv 194 Collect new member with existing members here 195 String newMembers memberBeginTag userPath memberEndTag 196 boolean assigned false 197 while enum hasMoreElements 198 199 ResponseEntity item ResponseEntity enum nextElement 2 Enumeration properties item getProperties 2 1 while properties hasMoreElements 2 2 2 3 BaseProperty property BaseProperty properties nextElement 2 4 Element membersElement property getElement 2 5 NodeList children membersElement getElementsByTagNameNS 2 6 Constants DAV tagHref 2 7 for int i i children getLength i 2 8 String member children item i getFirstChild getNodeValue 2 9 if member equals userPath 21 assigned true 211 212 else 213 newMembers memberBeginTag member memberEndTag 214 215 216 217 218 if assigned 219 This member is not assigned the role yet 22 result server proppatchMethod rolePath groupMemberSetProperty 221 newMembers true 222 223 224 catch Exception e 225 Utils handleException e 226 result false 227 228 229 return result 23 231 232 233 Add a slide user at the sever side 234 param token the namespace access token used to access Slide 235 param userName the name of the new user 236 param roleName the role of the new user 237 return true if added successfully false otherwise 238 239 public static boolean addASlideUserAtServer NamespaceAccessToken token String userName String roleName 24 boolean result false 241 try 242 token begin 243 244 In NamespaceConfig initializeAsDummyConfig each actionUri is 245 initialized as ActionNode DEFAULT The SecurityImpl hasPermissions 246 allows all such actions for server initialization 247 Create a new user 248 249 SlideToken st new SlideTokenImpl new CredentialsToken SecurityConstants ME 25 This must be set to true otherwise the structure create complains access denied 251 because of the to be created user does not exist even though it is to be created 252 st setForceStoreEnlistment true 253 254 SubjectNode nodeUser new SubjectNode 255 String uriUser SecurityUtils getUserPathForServer userName 256 Structure structure token getStructureHelper 257 Content content token getContentHelper 258 259 NodeRevisionDescriptor revisionDescriptor new NodeRevisionDescriptor 26 revisionDescriptor setResourceType 261 revisionDescriptor setContentType text xml 262 revisionDescriptor setLastModified new Date 263 revisionDescriptor setCreationDate new Date 264 revisionDescriptor setETag PropertyHelper computeEtag uriUser revisionDescriptor 265 revisionDescriptor setCreationUser SecurityConstants ME 266 revisionDescriptor setOwner SecurityConstants ME 267 revisionDescriptor setContentLength 268 269 try 27 structure create st nodeUser uriUser 271 content create st uriUser revisionDescriptor null 272 content store st uriUser revisionDescriptor null 273 274 catch ObjectAlreadyExistsException e 275 276 277 Add user to the me role 278 String uriRole SecurityUtils getRolePathForServer roleName 279 revisionDescriptor null 28 NodeRevisionDescriptors revisionDescriptors null 281 We use roles as an indirection configure and unify based on this 282 try 283 revisionDescriptors content retrieve st uriRole 284 if revisionDescriptors null 285 revisionDescriptors hasRevisions 286 revisionDescriptor content retrieve 287 st revisionDescriptors 288 289 29 catch RevisionDescriptorNotFoundException e 291 292 if revisionDescriptor null 293 revisionDescriptor new NodeRevisionDescriptor 294 295 org apache slide common PropertyName memberSet 296 org apache slide common PropertyName getPropertyName ROLE MEMBER PROPERTY 297 get existing members 298 NodeProperty property revisionDescriptor getProperty memberSet 299 if property null 3 String members String property getValue 3 1 if members indexOf uriUser 1 3 2 String newMembers members D href xmlns D DAV uriUser D href 3 3 append the new user 3 4 revisionDescriptor setProperty memberSet newMembers 3 5 remember to store 3 6 content store st uriRole revisionDescriptor null 3 7 3 8 3 9 token commit 31 result true 311 312 catch Exception e 313 Utils handleException e 314 result false 315 316 return result 317 318 319 32 default password for Me 321 322 private final static String DEFAULT ME PASSWORD jetty 323 324 325 default password for Others Used for dynamic addition of other users 326 327 private final static String DEFAULT PASSWORD OPAQUE OBF 1y g1w1c1z f1w261y1a 328 329 33 Get the credentials for the me user 331 return credentials for the me user with default me password 332 333 public static Credentials getMeCredentials 334 return new UsernamePasswordCredentials SecurityConstants ME DEFAULT ME PASSWORD 335 336 337 338 Get the credentials for the current user 339 return credentials for the current user with default me password 34 341 public static Credentials getCurrentUserCredentials 342 return new UsernamePasswordCredentials Utils getImpromptuName DEFAULT ME PASSWORD 343 344 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.30/xref/edu/uci/isr/impromptu/security/UserManager.html", "title": "usermanager xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>UserManager xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../../../../stylesheet.css\" />\n</head>\n<body>\n<div id=\"overview\"><a href=\"../../../../../../apidocs/edu/uci/isr/impromptu/security/UserManager.html\">View Javadoc</a></div><pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <em class=\"comment\">/*</em>\n<a name=\"2\" href=\"#2\">2</a>   <em class=\"comment\"> * Created on Apr 9, 2005</em>\n<a name=\"3\" href=\"#3\">3</a>   <em class=\"comment\"> *</em>\n<a name=\"4\" href=\"#4\">4</a>   <em class=\"comment\"> */</em>\n<a name=\"5\" href=\"#5\">5</a>   <strong>package</strong> <a href=\"../../../../../edu/uci/isr/impromptu/security/package-summary.html\">edu.uci.isr.impromptu.security</a>;\n<a name=\"6\" href=\"#6\">6</a>   \n<a name=\"7\" href=\"#7\">7</a>   <strong>import</strong> java.awt.BorderLayout;\n<a name=\"8\" href=\"#8\">8</a>   <strong>import</strong> java.awt.Dimension;\n<a name=\"9\" href=\"#9\">9</a>   <strong>import</strong> java.awt.FlowLayout;\n<a name=\"10\" href=\"#10\">10</a>  <strong>import</strong> java.util.Date;\n<a name=\"11\" href=\"#11\">11</a>  <strong>import</strong> java.util.Enumeration;\n<a name=\"12\" href=\"#12\">12</a>  <strong>import</strong> java.util.Vector;\n<a name=\"13\" href=\"#13\">13</a>  \n<a name=\"14\" href=\"#14\">14</a>  <strong>import</strong> javax.swing.BorderFactory;\n<a name=\"15\" href=\"#15\">15</a>  <strong>import</strong> javax.swing.JButton;\n<a name=\"16\" href=\"#16\">16</a>  <strong>import</strong> javax.swing.JCheckBox;\n<a name=\"17\" href=\"#17\">17</a>  <strong>import</strong> javax.swing.JDialog;\n<a name=\"18\" href=\"#18\">18</a>  <strong>import</strong> javax.swing.JLabel;\n<a name=\"19\" href=\"#19\">19</a>  <strong>import</strong> javax.swing.JList;\n<a name=\"20\" href=\"#20\">20</a>  <strong>import</strong> javax.swing.JPanel;\n<a name=\"21\" href=\"#21\">21</a>  <strong>import</strong> javax.swing.JScrollPane;\n<a name=\"22\" href=\"#22\">22</a>  <strong>import</strong> javax.swing.JTextField;\n<a name=\"23\" href=\"#23\">23</a>  <strong>import</strong> javax.swing.border.EtchedBorder;\n<a name=\"24\" href=\"#24\">24</a>  \n<a name=\"25\" href=\"#25\">25</a>  <strong>import</strong> org.apache.commons.httpclient.Credentials;\n<a name=\"26\" href=\"#26\">26</a>  <strong>import</strong> org.apache.commons.httpclient.UsernamePasswordCredentials;\n<a name=\"27\" href=\"#27\">27</a>  <strong>import</strong> org.apache.slide.authenticate.CredentialsToken;\n<a name=\"28\" href=\"#28\">28</a>  <strong>import</strong> org.apache.slide.common.NamespaceAccessToken;\n<a name=\"29\" href=\"#29\">29</a>  <strong>import</strong> org.apache.slide.common.SlideToken;\n<a name=\"30\" href=\"#30\">30</a>  <strong>import</strong> org.apache.slide.common.SlideTokenImpl;\n<a name=\"31\" href=\"#31\">31</a>  <strong>import</strong> org.apache.slide.content.Content;\n<a name=\"32\" href=\"#32\">32</a>  <strong>import</strong> org.apache.slide.content.NodeProperty;\n<a name=\"33\" href=\"#33\">33</a>  <strong>import</strong> org.apache.slide.content.NodeRevisionDescriptor;\n<a name=\"34\" href=\"#34\">34</a>  <strong>import</strong> org.apache.slide.content.NodeRevisionDescriptors;\n<a name=\"35\" href=\"#35\">35</a>  <strong>import</strong> org.apache.slide.content.RevisionDescriptorNotFoundException;\n<a name=\"36\" href=\"#36\">36</a>  <strong>import</strong> org.apache.slide.structure.ObjectAlreadyExistsException;\n<a name=\"37\" href=\"#37\">37</a>  <strong>import</strong> org.apache.slide.structure.Structure;\n<a name=\"38\" href=\"#38\">38</a>  <strong>import</strong> org.apache.slide.structure.SubjectNode;\n<a name=\"39\" href=\"#39\">39</a>  <strong>import</strong> org.apache.slide.webdav.util.PropertyHelper;\n<a name=\"40\" href=\"#40\">40</a>  <strong>import</strong> org.apache.webdav.lib.BaseProperty;\n<a name=\"41\" href=\"#41\">41</a>  <strong>import</strong> org.apache.webdav.lib.Constants;\n<a name=\"42\" href=\"#42\">42</a>  <strong>import</strong> org.apache.webdav.lib.PropertyName;\n<a name=\"43\" href=\"#43\">43</a>  <strong>import</strong> org.apache.webdav.lib.ResponseEntity;\n<a name=\"44\" href=\"#44\">44</a>  <strong>import</strong> org.apache.webdav.lib.WebdavResource;\n<a name=\"45\" href=\"#45\">45</a>  <strong>import</strong> org.apache.webdav.lib.methods.DepthSupport;\n<a name=\"46\" href=\"#46\">46</a>  <strong>import</strong> org.mortbay.http.HttpContext;\n<a name=\"47\" href=\"#47\">47</a>  <strong>import</strong> org.w3c.dom.Element;\n<a name=\"48\" href=\"#48\">48</a>  <strong>import</strong> org.w3c.dom.NodeList;\n<a name=\"49\" href=\"#49\">49</a>  \n<a name=\"50\" href=\"#50\">50</a>  <strong>import</strong> edu.uci.isr.impromptu.common.Utils;\n<a name=\"51\" href=\"#51\">51</a>  \n<a name=\"52\" href=\"#52\">52</a>  <em>/**<em>*</em></em>\n<a name=\"53\" href=\"#53\">53</a>  <em> * This class controls how user authentication should be done.</em>\n<a name=\"54\" href=\"#54\">54</a>  <em> * It controls what password is for me.</em>\n<a name=\"55\" href=\"#55\">55</a>  <em> * It also controls whether me will blindly accept any requests, </em>\n<a name=\"56\" href=\"#56\">56</a>  <em> * \t\tor it will reject certain users. For accepted users, it</em>\n<a name=\"57\" href=\"#57\">57</a>  <em> * \t\tcontrols what their passwords should be.</em>\n<a name=\"58\" href=\"#58\">58</a>  <em> *</em>\n<a name=\"59\" href=\"#59\">59</a>  <em> * @author Jie Ren</em>\n<a name=\"60\" href=\"#60\">60</a>  <em> */</em>\n<a name=\"61\" href=\"#61\">61</a>  <strong>public</strong> <strong>class</strong> <a href=\"../../../../../edu/uci/isr/impromptu/security/UserManager.html\">UserManager</a> \n<a name=\"62\" href=\"#62\">62</a>  {\n<a name=\"63\" href=\"#63\">63</a>      JPanel\t\t\t\tpanel = <strong>new</strong> JPanel(<strong>new</strong> BorderLayout());\n<a name=\"64\" href=\"#64\">64</a>      JPanel\t\t\t\tpanelMe = <strong>new</strong> JPanel(<strong>new</strong> FlowLayout());\n<a name=\"65\" href=\"#65\">65</a>      JTextField\t\t\ttextMyPassword = <strong>new</strong> JTextField();\n<a name=\"66\" href=\"#66\">66</a>      JPanel\t\t\t\tpanelOthersGroup = <strong>new</strong> JPanel(<strong>new</strong> BorderLayout());\n<a name=\"67\" href=\"#67\">67</a>      JPanel\t\t\t\tpanelOthers = <strong>new</strong> JPanel(<strong>new</strong> BorderLayout());\n<a name=\"68\" href=\"#68\">68</a>      JCheckBox \t\t\tbuttonAlwaysAllowOthers = <strong>new</strong> JCheckBox(<span class=\"string\">\"Always allow other users\"</span>);\n<a name=\"69\" href=\"#69\">69</a>      JButton \t\t\tbuttonChangeMyPassword = <strong>new</strong> JButton(<span class=\"string\">\"Change My Password\"</span>);\n<a name=\"70\" href=\"#70\">70</a>      JButton\t\t\t\tbuttonChangeOtherPassword = <strong>new</strong> JButton(<span class=\"string\">\"Change Others Password\"</span>);\n<a name=\"71\" href=\"#71\">71</a>      JButton\t\t\t\tbuttonDisallowOther = <strong>new</strong> JButton(<span class=\"string\">\"Disallow other\"</span>);\n<a name=\"72\" href=\"#72\">72</a>      JList\t\t\t\tlistOthers = <strong>new</strong> JList();\n<a name=\"73\" href=\"#73\">73</a>      JScrollPane\t\t\tpaneOthers = <strong>new</strong> JScrollPane(listOthers);\n<a name=\"74\" href=\"#74\">74</a>      JDialog\t\t\t\tf = <strong>new</strong> JDialog();\n<a name=\"75\" href=\"#75\">75</a>  \n<a name=\"76\" href=\"#76\">76</a>      HttpContext\t\t\tcontext;\n<a name=\"77\" href=\"#77\">77</a>      SlideUserRealm\t\trealm;\n<a name=\"78\" href=\"#78\">78</a>      <strong>boolean</strong>\t\t\t\talwaysAllowOthers = <strong>true</strong>;\n<a name=\"79\" href=\"#79\">79</a>  \n<a name=\"80\" href=\"#80\">80</a>      <em>/**<em>*</em></em>\n<a name=\"81\" href=\"#81\">81</a>  <em>     * The WebDAV connection</em>\n<a name=\"82\" href=\"#82\">82</a>  <em>     */</em>\n<a name=\"83\" href=\"#83\">83</a>  \t<strong>private</strong> WebdavResource\timpromptuServer;\n<a name=\"84\" href=\"#84\">84</a>  \n<a name=\"85\" href=\"#85\">85</a>  \t<em>/**<em>*</em></em>\n<a name=\"86\" href=\"#86\">86</a>  <em>\t * Create a user manager</em>\n<a name=\"87\" href=\"#87\">87</a>  <em>\t * @param uraa\t\t\t\tthe Jetty realm</em>\n<a name=\"88\" href=\"#88\">88</a>  <em>\t * @param impromptuServer\tthe Slide connection</em>\n<a name=\"89\" href=\"#89\">89</a>  <em>\t */</em>\n<a name=\"90\" href=\"#90\">90</a>      <strong>public</strong> <a href=\"../../../../../edu/uci/isr/impromptu/security/UserManager.html\">UserManager</a>(<a href=\"../../../../../edu/uci/isr/impromptu/security/SlideUserRealm.html\">SlideUserRealm</a> uraa, WebdavResource impromptuServer) {\n<a name=\"91\" href=\"#91\">91</a>  \t    <strong>this</strong>.impromptuServer = impromptuServer;\n<a name=\"92\" href=\"#92\">92</a>  \n<a name=\"93\" href=\"#93\">93</a>  \t    <em class=\"comment\">// retrieve an HttpContext</em>\n<a name=\"94\" href=\"#94\">94</a>          <em class=\"comment\">// create the GUI</em>\n<a name=\"95\" href=\"#95\">95</a>          panelMe.setBorder(BorderFactory.createTitledBorder(\n<a name=\"96\" href=\"#96\">96</a>                  BorderFactory.createEtchedBorder(EtchedBorder.LOWERED),\n<a name=\"97\" href=\"#97\">97</a>                  <span class=\"string\">\"Me\"</span>));\n<a name=\"98\" href=\"#98\">98</a>          panelMe.add(<strong>new</strong> JLabel(<span class=\"string\">\"Input New Password\"</span>), BorderLayout.WEST);\n<a name=\"99\" href=\"#99\">99</a>          textMyPassword.setPreferredSize(<strong>new</strong> Dimension(100, 20));\n<a name=\"100\" href=\"#100\">100</a>         panelMe.add(textMyPassword, BorderLayout.CENTER);\n<a name=\"101\" href=\"#101\">101</a>         panelMe.add(buttonChangeMyPassword, BorderLayout.EAST);\n<a name=\"102\" href=\"#102\">102</a>         panel.add(panelMe, BorderLayout.NORTH);\n<a name=\"103\" href=\"#103\">103</a> \n<a name=\"104\" href=\"#104\">104</a>         panelOthersGroup.setBorder(BorderFactory.createTitledBorder(\n<a name=\"105\" href=\"#105\">105</a>                 BorderFactory.createEtchedBorder(EtchedBorder.LOWERED),\n<a name=\"106\" href=\"#106\">106</a>                 <span class=\"string\">\"Others\"</span>));\n<a name=\"107\" href=\"#107\">107</a>         panelOthersGroup.add(buttonAlwaysAllowOthers, BorderLayout.NORTH);\n<a name=\"108\" href=\"#108\">108</a>         JPanel\tactionsOthers = <strong>new</strong> JPanel(<strong>new</strong> FlowLayout());\n<a name=\"109\" href=\"#109\">109</a>         actionsOthers.add(buttonChangeOtherPassword);\n<a name=\"110\" href=\"#110\">110</a>         actionsOthers.add(buttonDisallowOther);\n<a name=\"111\" href=\"#111\">111</a>         panelOthers.add(actionsOthers, BorderLayout.SOUTH);\n<a name=\"112\" href=\"#112\">112</a>         panelOthers.add(paneOthers, BorderLayout.CENTER);\n<a name=\"113\" href=\"#113\">113</a>         panelOthersGroup.add(panelOthers, BorderLayout.CENTER);\n<a name=\"114\" href=\"#114\">114</a> \n<a name=\"115\" href=\"#115\">115</a>         panel.add(panelOthersGroup, BorderLayout.CENTER);\n<a name=\"116\" href=\"#116\">116</a> \n<a name=\"117\" href=\"#117\">117</a>         <em class=\"comment\">// TODO: security: architecture: method/permission/abstract mapping and aggregation, arch level</em>\n<a name=\"118\" href=\"#118\">118</a>         f.getContentPane().setLayout(<strong>new</strong> FlowLayout());\n<a name=\"119\" href=\"#119\">119</a>         f.getContentPane().add(panel);\n<a name=\"120\" href=\"#120\">120</a>         f.setSize(<strong>new</strong> Dimension(440, 330));\n<a name=\"121\" href=\"#121\">121</a>         f.setTitle(<span class=\"string\">\"User Manager\"</span>);\n<a name=\"122\" href=\"#122\">122</a>         \n<a name=\"123\" href=\"#123\">123</a>         buttonAlwaysAllowOthers.setSelected(alwaysAllowOthers);\n<a name=\"124\" href=\"#124\">124</a>         <strong>this</strong>.realm = uraa;\n<a name=\"125\" href=\"#125\">125</a>         <strong>if</strong> (<strong>this</strong>.impromptuServer != <strong>null</strong> &amp;&amp; realm != <strong>null</strong>) {\n<a name=\"126\" href=\"#126\">126</a>         }\n<a name=\"127\" href=\"#127\">127</a>         <strong>if</strong> (listOthers.getSelectedIndex() == -1) {\n<a name=\"128\" href=\"#128\">128</a>             buttonChangeOtherPassword.setEnabled(false);\n<a name=\"129\" href=\"#129\">129</a>             buttonDisallowOther.setEnabled(false);\n<a name=\"130\" href=\"#130\">130</a>         }\n<a name=\"131\" href=\"#131\">131</a>     }\n<a name=\"132\" href=\"#132\">132</a> \n<a name=\"133\" href=\"#133\">133</a>     <em>/**<em>*</em></em>\n<a name=\"134\" href=\"#134\">134</a> <em>     * Display the user manager</em>\n<a name=\"135\" href=\"#135\">135</a> <em>     */</em>\n<a name=\"136\" href=\"#136\">136</a>     <strong>public</strong> <strong>void</strong> show() {\n<a name=\"137\" href=\"#137\">137</a>         f.setVisible(<strong>true</strong>);\n<a name=\"138\" href=\"#138\">138</a>     }\n<a name=\"139\" href=\"#139\">139</a>     \n<a name=\"140\" href=\"#140\">140</a>     <em>/**<em>*</em></em>\n<a name=\"141\" href=\"#141\">141</a> <em>     * The property that stores the members of a role in Slide</em>\n<a name=\"142\" href=\"#142\">142</a> <em>     */</em>\n<a name=\"143\" href=\"#143\">143</a>     <strong>private</strong> <strong>final</strong> <strong>static</strong> String\t\tROLE_MEMBER_PROPERTY = <span class=\"string\">\"group-member-set\"</span>;\n<a name=\"144\" href=\"#144\">144</a> \n<a name=\"145\" href=\"#145\">145</a>     <em>/**<em>*</em></em>\n<a name=\"146\" href=\"#146\">146</a> <em>     * Add a slide user from the client side</em>\n<a name=\"147\" href=\"#147\">147</a> <em>     * @param server\tthe remote WebDAV resource</em>\n<a name=\"148\" href=\"#148\">148</a> <em>     * @param userName\tthe name of the new user</em>\n<a name=\"149\" href=\"#149\">149</a> <em>     * @param roleName\tthe role of the new user</em>\n<a name=\"150\" href=\"#150\">150</a> <em>     * @return true if added successfully, false otherwise</em>\n<a name=\"151\" href=\"#151\">151</a> <em>     */</em>\n<a name=\"152\" href=\"#152\">152</a>     <strong>public</strong> <strong>static</strong> <strong>boolean</strong> addASlideUserFromClient(WebdavResource server, \n<a name=\"153\" href=\"#153\">153</a>             \t\t\t\t\t\tString userName, String roleName) {\n<a name=\"154\" href=\"#154\">154</a>         <em>/**<em>*</em></em>\n<a name=\"155\" href=\"#155\">155</a> <em>         * The begin tag for a member in the role definition</em>\n<a name=\"156\" href=\"#156\">156</a> <em>         */</em>\n<a name=\"157\" href=\"#157\">157</a>         String  memberBeginTag = <span class=\"string\">\"&lt;D:href xmlns:D='DAV:'>\"</span>;\n<a name=\"158\" href=\"#158\">158</a>         <em>/**<em>*</em></em>\n<a name=\"159\" href=\"#159\">159</a> <em>         * The end tag for a member in the role definition</em>\n<a name=\"160\" href=\"#160\">160</a> <em>         */</em>\n<a name=\"161\" href=\"#161\">161</a>         String  memberEndTag = <span class=\"string\">\"&lt;/D:href>\"</span>;\n<a name=\"162\" href=\"#162\">162</a>         <em>/**<em>*</em></em>\n<a name=\"163\" href=\"#163\">163</a> <em>         * The name of the property storing the password for a user</em>\n<a name=\"164\" href=\"#164\">164</a> <em>         */</em>\n<a name=\"165\" href=\"#165\">165</a>         String    \tpasswordProperty = <span class=\"string\">\"password\"</span>; \n<a name=\"166\" href=\"#166\">166</a>         <em>/**<em>*</em></em>\n<a name=\"167\" href=\"#167\">167</a> <em>         * The href tag used for each member of a role</em>\n<a name=\"168\" href=\"#168\">168</a> <em>         */</em>\n<a name=\"169\" href=\"#169\">169</a>         String\t\ttagHref = <span class=\"string\">\"href\"</span>;\n<a name=\"170\" href=\"#170\">170</a>         \n<a name=\"171\" href=\"#171\">171</a>         <strong>boolean</strong> result = false;\n<a name=\"172\" href=\"#172\">172</a>         <strong>try</strong> {\n<a name=\"173\" href=\"#173\">173</a>             <em class=\"comment\">// Create a user</em>\n<a name=\"174\" href=\"#174\">174</a> \t        String\tuserPath = SecurityUtils.getUserPathForClient(userName);\n<a name=\"175\" href=\"#175\">175</a> \t        result = server.mkcolMethod(userPath);\n<a name=\"176\" href=\"#176\">176</a> \t        <strong>if</strong> (result) {\n<a name=\"177\" href=\"#177\">177</a> \t\t\t    <em class=\"comment\">// set default password</em>\n<a name=\"178\" href=\"#178\">178</a> \t\t        PropertyName passwordPropertyName = <strong>new</strong> PropertyName(\n<a name=\"179\" href=\"#179\">179</a> \t\t            Constants.SLIDE, passwordProperty);\n<a name=\"180\" href=\"#180\">180</a> \t\t        result = server.proppatchMethod(userPath, passwordPropertyName, \n<a name=\"181\" href=\"#181\">181</a> \t\t                DEFAULT_PASSWORD_OPAQUE, <strong>true</strong>); \n<a name=\"182\" href=\"#182\">182</a> \t\t\t}\n<a name=\"183\" href=\"#183\">183</a> \n<a name=\"184\" href=\"#184\">184</a> \t        <em class=\"comment\">// Get memebers of the role</em>\n<a name=\"185\" href=\"#185\">185</a> \t        String\trolePath = SecurityUtils.getRolePathForClient(roleName);\n<a name=\"186\" href=\"#186\">186</a> \t        PropertyName groupMemberSetProperty = <strong>new</strong> PropertyName(\n<a name=\"187\" href=\"#187\">187</a> \t               Constants.DAV, ROLE_MEMBER_PROPERTY);\n<a name=\"188\" href=\"#188\">188</a> \t        Vector pnv = <strong>new</strong> Vector();\n<a name=\"189\" href=\"#189\">189</a> \t        pnv.add(groupMemberSetProperty);\n<a name=\"190\" href=\"#190\">190</a> \t\n<a name=\"191\" href=\"#191\">191</a> \t        <em class=\"comment\">// The 2.0 WebdavResource does not handle XML property value correctly, </em>\n<a name=\"192\" href=\"#192\">192</a> \t        <em class=\"comment\">// so we need our own parsing. Code for 2.1 will be simpler</em>\n<a name=\"193\" href=\"#193\">193</a> \t        Enumeration enum = server.propfindMethod(rolePath, DepthSupport.DEPTH_1, pnv);\n<a name=\"194\" href=\"#194\">194</a> \t        <em class=\"comment\">// Collect new member with existing members here</em>\n<a name=\"195\" href=\"#195\">195</a> \t        String\tnewMembers = memberBeginTag + userPath + memberEndTag;\n<a name=\"196\" href=\"#196\">196</a> \t        <strong>boolean</strong> assigned = false;\n<a name=\"197\" href=\"#197\">197</a> \t        <strong>while</strong>(enum.hasMoreElements())\n<a name=\"198\" href=\"#198\">198</a> \t        {\n<a name=\"199\" href=\"#199\">199</a> \t            ResponseEntity item = (ResponseEntity)enum.nextElement();\n<a name=\"200\" href=\"#200\">200</a> \t            Enumeration properties = item.getProperties();\n<a name=\"201\" href=\"#201\">201</a> \t            <strong>while</strong>(properties.hasMoreElements())\n<a name=\"202\" href=\"#202\">202</a> \t            {\n<a name=\"203\" href=\"#203\">203</a> \t            \tBaseProperty property = (BaseProperty) properties.nextElement();\n<a name=\"204\" href=\"#204\">204</a>             \t    Element membersElement = property.getElement();\n<a name=\"205\" href=\"#205\">205</a>             \t    NodeList children = membersElement.getElementsByTagNameNS(\n<a name=\"206\" href=\"#206\">206</a>             \t            Constants.DAV, tagHref);\n<a name=\"207\" href=\"#207\">207</a>             \t    <strong>for</strong> (<strong>int</strong> i = 0; i&lt;children.getLength(); i++ ) {\n<a name=\"208\" href=\"#208\">208</a> \t\t\t\t\t\tString member = children.item(i).getFirstChild().getNodeValue();\n<a name=\"209\" href=\"#209\">209</a> \t\t\t\t\t\t<strong>if</strong> (member.equals(userPath)) {\n<a name=\"210\" href=\"#210\">210</a> \t\t\t\t\t\t    assigned = <strong>true</strong>;\n<a name=\"211\" href=\"#211\">211</a> \t\t\t\t\t\t}\n<a name=\"212\" href=\"#212\">212</a> \t\t\t\t\t\t<strong>else</strong> {\n<a name=\"213\" href=\"#213\">213</a> \t\t\t\t\t\t    newMembers += (memberBeginTag + member + memberEndTag);\n<a name=\"214\" href=\"#214\">214</a> \t\t\t\t\t\t}\n<a name=\"215\" href=\"#215\">215</a> \t\t\t\t\t}\n<a name=\"216\" href=\"#216\">216</a> \t            }\n<a name=\"217\" href=\"#217\">217</a> \t        }\n<a name=\"218\" href=\"#218\">218</a> \t        <strong>if</strong> (!assigned) {\n<a name=\"219\" href=\"#219\">219</a> \t            <em class=\"comment\">// This member is not assigned the role yet</em>\n<a name=\"220\" href=\"#220\">220</a> \t\t        result = server.proppatchMethod(rolePath, groupMemberSetProperty, \n<a name=\"221\" href=\"#221\">221</a> \t\t                newMembers, <strong>true</strong>);\n<a name=\"222\" href=\"#222\">222</a> \t        }\n<a name=\"223\" href=\"#223\">223</a>         }\n<a name=\"224\" href=\"#224\">224</a>         <strong>catch</strong> (Exception e) {\n<a name=\"225\" href=\"#225\">225</a>             Utils.handleException(e);\n<a name=\"226\" href=\"#226\">226</a>             result = false;\n<a name=\"227\" href=\"#227\">227</a>         }\n<a name=\"228\" href=\"#228\">228</a>         \n<a name=\"229\" href=\"#229\">229</a>         <strong>return</strong> result;\n<a name=\"230\" href=\"#230\">230</a>     }\n<a name=\"231\" href=\"#231\">231</a> \n<a name=\"232\" href=\"#232\">232</a>     <em>/**<em>*</em></em>\n<a name=\"233\" href=\"#233\">233</a> <em>     * Add a slide user at the sever side</em>\n<a name=\"234\" href=\"#234\">234</a> <em>     * @param token\t\tthe namespace access token used to access Slide</em>\n<a name=\"235\" href=\"#235\">235</a> <em>     * @param userName\tthe name of the new user</em>\n<a name=\"236\" href=\"#236\">236</a> <em>     * @param roleName\tthe role of the new user</em>\n<a name=\"237\" href=\"#237\">237</a> <em>     * @return true if added successfully, false otherwise</em>\n<a name=\"238\" href=\"#238\">238</a> <em>     */</em>\n<a name=\"239\" href=\"#239\">239</a>     <strong>public</strong> <strong>static</strong> <strong>boolean</strong> addASlideUserAtServer(NamespaceAccessToken token, String userName, String roleName) {\n<a name=\"240\" href=\"#240\">240</a>         <strong>boolean</strong>\t\tresult = false;\n<a name=\"241\" href=\"#241\">241</a>         <strong>try</strong> {\n<a name=\"242\" href=\"#242\">242</a>             token.begin();\n<a name=\"243\" href=\"#243\">243</a>     \n<a name=\"244\" href=\"#244\">244</a>             <em class=\"comment\">// In NamespaceConfig.initializeAsDummyConfig, each actionUri is </em>\n<a name=\"245\" href=\"#245\">245</a>             <em class=\"comment\">//\t\tinitialized as ActionNode.DEFAULT. The SecurityImpl.hasPermissions</em>\n<a name=\"246\" href=\"#246\">246</a>             <em class=\"comment\">//\t\tallows all such actions (for server initialization)</em>\n<a name=\"247\" href=\"#247\">247</a>             <em class=\"comment\">// Create a new user</em>\n<a name=\"248\" href=\"#248\">248</a> \n<a name=\"249\" href=\"#249\">249</a>             SlideToken \tst = <strong>new</strong> SlideTokenImpl(<strong>new</strong> CredentialsToken(SecurityConstants.ME));\n<a name=\"250\" href=\"#250\">250</a>             <em class=\"comment\">// This must be set to true, otherwise the structure.create complains access denied,</em>\n<a name=\"251\" href=\"#251\">251</a>             <em class=\"comment\">//\t\tbecause of the to-be-created user does not exist, even though it is to be created</em>\n<a name=\"252\" href=\"#252\">252</a>             st.setForceStoreEnlistment(<strong>true</strong>);\n<a name=\"253\" href=\"#253\">253</a>             \n<a name=\"254\" href=\"#254\">254</a>             SubjectNode nodeUser = <strong>new</strong> SubjectNode(); \n<a name=\"255\" href=\"#255\">255</a>             String\t\turiUser = SecurityUtils.getUserPathForServer(userName);\n<a name=\"256\" href=\"#256\">256</a>             Structure\tstructure = token.getStructureHelper();\n<a name=\"257\" href=\"#257\">257</a>             Content\t\tcontent = token.getContentHelper();\n<a name=\"258\" href=\"#258\">258</a> \n<a name=\"259\" href=\"#259\">259</a>             NodeRevisionDescriptor\t\trevisionDescriptor = <strong>new</strong> NodeRevisionDescriptor();\n<a name=\"260\" href=\"#260\">260</a>             revisionDescriptor.setResourceType(<span class=\"string\">\"\"</span>);\n<a name=\"261\" href=\"#261\">261</a>             revisionDescriptor.setContentType(<span class=\"string\">\"text/xml\"</span>);\n<a name=\"262\" href=\"#262\">262</a>             revisionDescriptor.setLastModified(<strong>new</strong> Date());\n<a name=\"263\" href=\"#263\">263</a>             revisionDescriptor.setCreationDate(<strong>new</strong> Date());\n<a name=\"264\" href=\"#264\">264</a>             revisionDescriptor.setETag(PropertyHelper.computeEtag(uriUser, revisionDescriptor) );\n<a name=\"265\" href=\"#265\">265</a>             revisionDescriptor.setCreationUser(SecurityConstants.ME);\n<a name=\"266\" href=\"#266\">266</a>             revisionDescriptor.setOwner(SecurityConstants.ME);\n<a name=\"267\" href=\"#267\">267</a>             revisionDescriptor.setContentLength(0);\n<a name=\"268\" href=\"#268\">268</a>             \n<a name=\"269\" href=\"#269\">269</a>             <strong>try</strong> {\n<a name=\"270\" href=\"#270\">270</a>                 structure.create(st, nodeUser, uriUser);\n<a name=\"271\" href=\"#271\">271</a>                 content.create(st, uriUser, revisionDescriptor, <strong>null</strong>);\n<a name=\"272\" href=\"#272\">272</a>                 content.store(st, uriUser, revisionDescriptor, <strong>null</strong>);\n<a name=\"273\" href=\"#273\">273</a>             }\n<a name=\"274\" href=\"#274\">274</a>     \t\t<strong>catch</strong> (ObjectAlreadyExistsException e) {\n<a name=\"275\" href=\"#275\">275</a>     \t\t}\n<a name=\"276\" href=\"#276\">276</a>     \n<a name=\"277\" href=\"#277\">277</a>     \t\t<em class=\"comment\">// Add user to the me role</em>\n<a name=\"278\" href=\"#278\">278</a>     \t\tString\turiRole = SecurityUtils.getRolePathForServer(roleName); \n<a name=\"279\" href=\"#279\">279</a>             revisionDescriptor = <strong>null</strong>;\n<a name=\"280\" href=\"#280\">280</a>             NodeRevisionDescriptors revisionDescriptors = <strong>null</strong>;\n<a name=\"281\" href=\"#281\">281</a>             <em class=\"comment\">// We use roles as an indirection, configure and unify based on this</em>\n<a name=\"282\" href=\"#282\">282</a>             <strong>try</strong> {\n<a name=\"283\" href=\"#283\">283</a>     \t        revisionDescriptors = content.retrieve(st, uriRole); \n<a name=\"284\" href=\"#284\">284</a>     \t        <strong>if</strong> ((revisionDescriptors != <strong>null</strong>)\n<a name=\"285\" href=\"#285\">285</a>     \t            &amp;&amp; (revisionDescriptors.hasRevisions())) {\n<a name=\"286\" href=\"#286\">286</a>                     revisionDescriptor = content.retrieve\n<a name=\"287\" href=\"#287\">287</a>                         (st, revisionDescriptors);\n<a name=\"288\" href=\"#288\">288</a>     \t        }\n<a name=\"289\" href=\"#289\">289</a>     \t\t}\n<a name=\"290\" href=\"#290\">290</a>     \t\t<strong>catch</strong> (RevisionDescriptorNotFoundException e) {\n<a name=\"291\" href=\"#291\">291</a>     \t\t}\n<a name=\"292\" href=\"#292\">292</a>     \t\t<strong>if</strong> (revisionDescriptor == <strong>null</strong>) {\n<a name=\"293\" href=\"#293\">293</a>                 revisionDescriptor = <strong>new</strong> NodeRevisionDescriptor(0);\n<a name=\"294\" href=\"#294\">294</a>             }\n<a name=\"295\" href=\"#295\">295</a>     \t\torg.apache.slide.common.PropertyName memberSet = \n<a name=\"296\" href=\"#296\">296</a>     \t\t    org.apache.slide.common.PropertyName.getPropertyName(ROLE_MEMBER_PROPERTY);\n<a name=\"297\" href=\"#297\">297</a>     \t\t<em class=\"comment\">// get existing members</em>\n<a name=\"298\" href=\"#298\">298</a>             NodeProperty property = revisionDescriptor.getProperty(memberSet);\n<a name=\"299\" href=\"#299\">299</a>             <strong>if</strong> (property != <strong>null</strong>) {\n<a name=\"300\" href=\"#300\">300</a>                 String members = (String)property.getValue();\n<a name=\"301\" href=\"#301\">301</a>                 <strong>if</strong> (members.indexOf(uriUser) == -1 ) {\n<a name=\"302\" href=\"#302\">302</a>                     String newMembers = members + <span class=\"string\">\"&lt;D:href xmlns:D='DAV:'>\"</span> + uriUser + <span class=\"string\">\"&lt;/D:href>\"</span>;\n<a name=\"303\" href=\"#303\">303</a>                     <em class=\"comment\">// append the new user</em>\n<a name=\"304\" href=\"#304\">304</a>                     revisionDescriptor.setProperty(memberSet, newMembers);\n<a name=\"305\" href=\"#305\">305</a>                     <em class=\"comment\">// remember to store</em>\n<a name=\"306\" href=\"#306\">306</a>     \t            content.store(st, uriRole, revisionDescriptor, <strong>null</strong>);\n<a name=\"307\" href=\"#307\">307</a>                 }\n<a name=\"308\" href=\"#308\">308</a>             }\n<a name=\"309\" href=\"#309\">309</a>             token.commit();\n<a name=\"310\" href=\"#310\">310</a>             result = <strong>true</strong>;\n<a name=\"311\" href=\"#311\">311</a>         }\n<a name=\"312\" href=\"#312\">312</a>         <strong>catch</strong> (Exception e) {\n<a name=\"313\" href=\"#313\">313</a>             Utils.handleException(e);\n<a name=\"314\" href=\"#314\">314</a>             result = false;\n<a name=\"315\" href=\"#315\">315</a>         }\n<a name=\"316\" href=\"#316\">316</a>         <strong>return</strong> result;\n<a name=\"317\" href=\"#317\">317</a>     }\n<a name=\"318\" href=\"#318\">318</a> \n<a name=\"319\" href=\"#319\">319</a>     <em>/**<em>*</em></em>\n<a name=\"320\" href=\"#320\">320</a> <em>     * default password for Me.</em>\n<a name=\"321\" href=\"#321\">321</a> <em>     */</em>\n<a name=\"322\" href=\"#322\">322</a>     <strong>private</strong> <strong>final</strong> <strong>static</strong> String  DEFAULT_ME_PASSWORD = <span class=\"string\">\"jetty\"</span>;\n<a name=\"323\" href=\"#323\">323</a> \n<a name=\"324\" href=\"#324\">324</a>     <em>/**<em>*</em></em>\n<a name=\"325\" href=\"#325\">325</a> <em>     * default password for Others. Used for dynamic addition of other users</em>\n<a name=\"326\" href=\"#326\">326</a> <em>     */</em>\n<a name=\"327\" href=\"#327\">327</a>     <strong>private</strong> <strong>final</strong> <strong>static</strong> String\tDEFAULT_PASSWORD_OPAQUE = <span class=\"string\">\"OBF:1y0g1w1c1z0f1w261y1a\"</span>;\n<a name=\"328\" href=\"#328\">328</a> \n<a name=\"329\" href=\"#329\">329</a>     <em>/**<em>*</em></em>\n<a name=\"330\" href=\"#330\">330</a> <em>     * Get the credentials for the me user</em>\n<a name=\"331\" href=\"#331\">331</a> <em>     * @return credentials for the me user, with default me password</em>\n<a name=\"332\" href=\"#332\">332</a> <em>     */</em>\n<a name=\"333\" href=\"#333\">333</a>     <strong>public</strong> <strong>static</strong> Credentials getMeCredentials() {\n<a name=\"334\" href=\"#334\">334</a>         <strong>return</strong> <strong>new</strong> UsernamePasswordCredentials(SecurityConstants.ME, DEFAULT_ME_PASSWORD);\n<a name=\"335\" href=\"#335\">335</a>     }\n<a name=\"336\" href=\"#336\">336</a> \n<a name=\"337\" href=\"#337\">337</a>     <em>/**<em>*</em></em>\n<a name=\"338\" href=\"#338\">338</a> <em>     * Get the credentials for the current user</em>\n<a name=\"339\" href=\"#339\">339</a> <em>     * @return\tcredentials for the current user, with default me password</em>\n<a name=\"340\" href=\"#340\">340</a> <em>     */</em>\n<a name=\"341\" href=\"#341\">341</a>     <strong>public</strong> <strong>static</strong> Credentials getCurrentUserCredentials() {\n<a name=\"342\" href=\"#342\">342</a>         <strong>return</strong> <strong>new</strong> UsernamePasswordCredentials(Utils.getImpromptuName(), DEFAULT_ME_PASSWORD);\n<a name=\"343\" href=\"#343\">343</a>     }\n<a name=\"344\" href=\"#344\">344</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 34189.0}