{"text": "Navigation Up Table of Contents Bibliography Index Title Page SegmentVoronoiDiagramDataStructure 2 Definition The concept SegmentVoronoiDiagramDataStructure 2 refines the concept ApolloniusGraphDataStructure 2 In addition it provides two methods for the merging of two vertices joined by an edge of the data structure and the splitting of a vertex into two The method that merges two vertices called join vertices identifies the two vertices and deletes their common two faces The method that splits a vertex called split vertex introduces a new vertex that shares an edge and two faces with the old vertex see figure below Notice that the join vertices and split vertex operations are complementary in the sense that one reverses the action of the other Figure The join and split operations Left to right The vertex v is split into v1 and v2 The faces f and g are inserted after f1 and f2 respectively in the counter clockwise sense The vertices v1 v2 and the faces f and g are returned as a boost tuple in that order Right to left The edge f i is collapsed and thus the vertices v1 and v2 are joined The vertex v is returned We only describe the additional requirements with respect to the ApolloniusGraphDataStructure 2 concept RefinesApolloniusGraphDataStructure 2 Modification Vertex handle svdds join vertices Face handle f int i Joins the vertices that are endpoints of the edge f i It returns a vertex handle to common vertex boost tuples tuple Vertex handle Vertex handle Face handle Face handle svdds split vertex Vertex handle v Face handle f1 Face handle f2 Splits the vertex v into two vertices v1 and v2 The common faces f and g of v1 and v2 are created after in the counter clockwise sense the faces f1 and f2 The 4 tuple v1 v2 f g is returned see Fig Has ModelsCGAL Triangulation data structure 2 Vb Fb See AlsoTriangulationDataStructure 2 ApolloniusGraphDataStructure 2 SegmentVoronoiDiagramVertexBase 2 TriangulationFaceBase 2 Next SegmentVoronoiDiagramVertexBase 2 Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Segment_Voronoi_diagram_2_ref/Concept_SegmentVoronoiDiagramDataStructure_2.html", "title": "segmentvoronoidiagramdatastructure_2", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Segment_Voronoi_diagram_2_ref/SegmentVoronoiDiagramDataStructure_2.tex' -->\n<html> <head>  \n<title>SegmentVoronoiDiagramDataStructure_2</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_1048\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_968\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Concept.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_SegmentVoronoiDiagramDataStructure_2\"></A>\n<h2><I>SegmentVoronoiDiagramDataStructure_2</I></h2>\n<P>\n\n<H3>Definition</H3>\n<P>\n\nThe concept <I><A HREF=\"Concept_SegmentVoronoiDiagramDataStructure_2.html#Cross_link_anchor_1048\">SegmentVoronoiDiagramDataStructure_2</A></I> refines the\nconcept <I><A HREF=\"../Apollonius_graph_2_ref/Concept_ApolloniusGraphDataStructure_2.html#Cross_link_anchor_1071\">ApolloniusGraphDataStructure_2</A></I>. In addition\nit provides two methods for the merging of two vertices joined by an\nedge of the data structure, and the splitting of a vertex into two.\nThe method that merges two vertices, called <I>join_vertices</I>\nidentifies the two vertices and deletes their common two faces. The\nmethod that splits a vertex, called <I>split_vertex</I> introduces a\nnew vertex that shares an edge and two faces with the old vertex (see\nfigure below). Notice that the <I>join_vertices</I> and\n<I>split_vertex</I> operations are complementary, in the sense that one\nreverses the action of the other.\n<P>\n\n<A NAME=\"fig-svdds-split-join\"></A>\n\n\n<center>\n<img border=0 src=\"./svd-join_split.gif\" align=center\nalt=\"The join and split operations''\ntitle=\"The join and split operations\">\n</center><BR>\n\n<font size=-1>\n\n<B>Figure:&nbsp;&nbsp;</B>The join and split operations. Left to right:\nThe vertex <I>v</I> is split into <MATH><I>v<SUB>1</SUB></I></MATH> and <MATH><I>v<SUB>2</SUB></I></MATH>. The faces <MATH><I>f</I></MATH> and\n<MATH><I>g</I></MATH> are inserted after <MATH><I>f<SUB>1</SUB></I></MATH> and <MATH><I>f<SUB>2</SUB></I></MATH>, respectively, in the\ncounter-clockwise sense. The vertices <MATH><I>v<SUB>1</SUB></I></MATH>, <MATH><I>v<SUB>2</SUB></I></MATH> and the faces <MATH><I>f</I></MATH>\nand <MATH><I>g</I></MATH> are returned as a <I>boost</I> <I>tuple</I> in that order.\nRight to left: The edge <I>(f,i)</I> is collapsed, and thus the\nvertices <MATH><I>v<SUB>1</SUB></I></MATH> and <MATH><I>v<SUB>2</SUB></I></MATH> are joined. The vertex <I>v</I> is\nreturned.\n\n</font>\n<P>\n\nWe only describe the additional requirements with respect to the\n<I><A HREF=\"../Apollonius_graph_2_ref/Concept_ApolloniusGraphDataStructure_2.html#Cross_link_anchor_1071\">ApolloniusGraphDataStructure_2</A></I> concept.\n<P>\n\n<H3>Refines</H3><I><A HREF=\"../Apollonius_graph_2_ref/Concept_ApolloniusGraphDataStructure_2.html#Cross_link_anchor_1071\">ApolloniusGraphDataStructure_2</A></I>\n<P>\n\n<H3>Modification</H3>\n\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Vertex_handle_join_vertices6Face_handle_f+_int_i9;\"></A>\nVertex_handle\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    svdds.join_vertices ( Face_handle f,  int i)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Joins\n  the vertices that are endpoints of the edge <I>(f,i)</I>. It returns\n  a vertex handle to common vertex.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_boost::tuples::tuple6Vertex_handle+_Vertex_handle+_Face_handle+_Face_handle9_split_vertex6Vertex_handle_v+_Face_handle_f1+_Face_handle_f29;\"></A>\nboost::tuples::tuple&lt;Vertex_handle, Vertex_handle, Face_handle, Face_handle&gt;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    svdds.split_vertex ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    Vertex_handle v,<BR>\n\nFace_handle f1,<BR>\n\nFace_handle f2)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Splits the vertex <I>v</I> into two vertices <I>v1</I> and\n  <I>v2</I>. The common faces <I>f</I> and <I>g</I> of <I>v1</I> and\n  <I>v2</I> are created after (in the counter-clockwise sense) the\n  faces <I>f1</I> and <I>f2</I>. The 4-tuple <I>(v1,v2,f,g)</I> is\n  returned (see Fig. <A HREF=\"Concept_SegmentVoronoiDiagramDataStructure_2.html#fig-svdds-split-join\"><IMG SRC=\"cc_ref_up_arrow.gif\" ALT=\"reference\" WIDTH=\"10\" HEIGHT=\"10\"></A>).\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Has Models</H3><I><A HREF=\"../TDS_2_ref/Class_Triangulation_data_structure_2.html#Cross_link_anchor_965\">CGAL::Triangulation_data_structure_2</A>&lt;Vb,Fb&gt;</I>\n<P>\n\n<H3>See Also</H3><I><A HREF=\"../TDS_2_ref/Concept_TriangulationDataStructure_2.html#Cross_link_anchor_960\">TriangulationDataStructure_2</A></I><BR>\n\n<I><A HREF=\"../Apollonius_graph_2_ref/Concept_ApolloniusGraphDataStructure_2.html#Cross_link_anchor_1071\">ApolloniusGraphDataStructure_2</A></I><BR>\n\n<I><A HREF=\"Concept_SegmentVoronoiDiagramVertexBase_2.html#Cross_link_anchor_1049\">SegmentVoronoiDiagramVertexBase_2</A></I><BR>\n\n<I><A HREF=\"../Triangulation_2_ref/Concept_TriangulationFaceBase_2.html#Cross_link_anchor_934\">TriangulationFaceBase_2</A></I>\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Concept_SegmentVoronoiDiagramVertexBase_2.html\"><I>SegmentVoronoiDiagramVertexBase_2</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_44!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 37970.0}