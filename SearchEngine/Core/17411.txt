{"text": "CS 261 Winter 2 1 Data Structures This course meets Monday Wednesday and Friday 1 1 5 in ICS 243 Coursework will consist of two midterms and a final exam Grading will be based 3 on each midterm and 4 on the final exam There is no required textbook however you may find the following helpful for some of the material Introduction to Algorithms by Cormen Leiserson Rivest and Stein I don t recommend that you buy the book for this course it is expensive and only covers part of the material but many of you are likely to have it from undergraduate CS courses and it includes useful material on several topics from this course Other algorithms texts are also likely to be helpful the one I use in my undergraduate algorithms courses is Algorithm Design by Goodrich and Tamassia Lecture notes from similar courses here and elsewhere ICS 261 UCI Fall 2 36 897 MIT Spring 2 3COS226 Princeton Spring 2 8External memory data structures Aarhus Fall 2 When possible I will try to include more specific links to Wikipedia or other related online reading from the schedule of topics below Below is a tentative schedule of topics and readings Dates for specific topics are subject to change but the exam schedule is firm Week 1 Jan 4 6 8 Introduction priority queues in selection sort binary heaps Dijkstra s algorithm and D ary heaps amortized analysis and variable sized arrays Potential functions for amortization Week 2 Jan 11 13 15 Fibonacci heaps Integer priority queues Week 3 Jan 18 2 22 HOLIDAY January 18 Martin Luther King Jr Day Hashing hash chaining open addressing double hashing linear probing See also this blog post Cuckoo hashing see also cuckoo hashing with a stash Week 4 Jan 25 27 29 Bloom filters Hash functions universal hashing see also blog post about Dietzfelbinger et al fast hash Thorup on universal hashing for linear probing MIDTERM I Friday January 29 Week 5 Feb 2 4 6 Range sums prefix sums and decomposable searching problems Logarithmic lower bounds for dynamic prefix sums Binary search trees augmented binary search trees and range searching Week 6 Feb 9 11 13 Overview of balanced binary search trees Splay trees The dynamic optimality conjecture Additional reading on non splay tree approaches to dynamic optimality Week 7 Feb 15 17 19 HOLIDAY February 15 Presidents Day Succinct representation of trees and fast navigation in succinct trees Level ancestors Lowest common ancestors range minima and the Bender Farach algorithm Week 8 Feb 22 24 26 Persistence Closures and fully persistent stacks Persistent search trees point location Voronoi diagrams and the post office problem The node copying and fat node techniques for making data structures persistent MIDTERM II Friday February 26 Week 9 Mar 1 3 5 Quadtrees and approximate nearest neighborsInterval treesTries compressed tries and suffix treesWeek 1 Mar 8 1 12 Dynamic graph algorithmsUnion findFINAL EXAM Monday March 15 1 3 12 3 For additional course related information including old exams which are very likely to be useful as samples for this course see the syllabus from my previous offering in Winter 2 9 David Eppstein ICS UC Irvine ", "_id": "http://www.ics.uci.edu/~eppstein/261/w10.html", "title": "data structures", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<html>\n<head>\n<title>Data Structures</title>\n</head>\n<body bgcolor=\"#ffffff\" text=\"#000000\">\n<h1>CS 261, Winter 2010: Data Structures</h1>\n\n<p>This course meets Monday, Wednesday, and Friday,\n10:00 - 10:50 in ICS 243. Coursework will consist of two midterms and a final exam. Grading will be based 30% on each midterm and 40% on the final exam.</p>\n\n<p>There is no required textbook; however, you may find the following helpful for some of the material:</p>\n<ul>\n<li>Introduction to Algorithms, by Cormen, Leiserson, Rivest, and Stein. I don't recommend that you buy the book for this course (it is expensive and only covers part of the material) but many of you are likely to have it from undergraduate CS courses and it includes useful material on several topics from this course. Other algorithms texts are also likely to be helpful; the one I use in my undergraduate algorithms courses is \"Algorithm Design\" by Goodrich and Tamassia.</li>\n<li>Lecture notes from similar courses here and elsewhere:\n<ul>\n<li><a href=\"http://www.ics.uci.edu/~eppstein/261/f03-outline/\">ICS 261, UCI, Fall 2003</a></li>\n<li><a href=\"http://theory.lcs.mit.edu/classes/6.897/spring03/scribe_notes/\">6.897, MIT, Spring 2003</a></li>\n<li><a href=\"http://www.cs.princeton.edu/courses/archive/spr08/cos226/lectures/\">COS226, Princeton, Spring 2008</a></li>\n<li><a href=\"http://www.daimi.au.dk/~gerth/emF00/\">External memory data structures, Aarhus, Fall 2000</a></li>\n</ul>\n</li>\n<li>When possible I will try to include more specific links to Wikipedia or other related online reading from the schedule of topics below.</li>\n</ul>\n\n<p>\n<p>Below is a tentative schedule of topics and readings. Dates for specific topics are subject to change, but the exam schedule is firm.</p>\n\n<ul>\n<li>Week 1 (Jan 4-6-8):\n<ul>\n<li>Introduction: <a\nhref=\"http://en.wikipedia.org/wiki/Priority_queue\">priority queues</a>\nin <a href=\"http://en.wikipedia.org/wiki/Selection_sort\">selection\nsort</a>; <a href=\"http://en.wikipedia.org/wiki/Binary_heap\">binary heaps</a>.\n<li><a\nhref=\"http://en.wikipedia.org/wiki/Dijkstra%27s_algorithm\">Dijkstra's\nalgorithm</a> and <a\nhref=\"http://en.wikipedia.org/wiki/D-ary_heap\">D-ary heaps</a>; <a\nhref=\"http://en.wikipedia.org/wiki/Amortized_analysis\">amortized\nanalysis</a> and <a href=\"http://en.wikipedia.org/wiki/Dynamic_array\">variable-sized arrays</a>.</li>\n<li><a href=\"http://en.wikipedia.org/wiki/Potential_method\">Potential functions for amortization</a>.</li>\n</ul></li>\n<li>Week 2 (Jan 11-13-15):\n<ul>\n<li><a href=\"http://en.wikipedia.org/wiki/Fibonacci_heap\">Fibonacci heaps</a>.</li>\n<li><a href=\"http://11011110.livejournal.com/189071.html\">Integer priority queues</a>.</li>\n</ul></li>\n<li>Week 3 (Jan 18-20-22):\n<ul>\n<li>HOLIDAY January 18 (Martin Luther King, Jr. Day).</li>\n<li><a href=\"http://en.wikipedia.org/wiki/Hash_table\">Hashing</a>: <a\nhref=\"http://en.wikipedia.org/wiki/Hash_table#Separate_chaining\">hash\nchaining</a>, <a\nhref=\"http://en.wikipedia.org/wiki/Hash_table#Open_addressing\">open\naddressing</a> (<a href=\"http://en.wikipedia.org/wiki/Double_hashing\">double\nhashing</a>, <a\nhref=\"http://en.wikipedia.org/wiki/Linear_probing\">linear\nprobing</a>). See also <a\nhref=\"http://infoweekly.blogspot.com/2010/01/basic-hashtables.html\">this\nblog post</a>.</li>\n<li><a href=\"http://en.wikipedia.org/wiki/Cuckoo_hashing\">Cuckoo\nhashing</a> (see also: <a\nhref=\"http://mybiasedcoin.blogspot.com/2008/05/more-robust-cuckoo-hashing-esa-paper.html\">cuckoo\nhashing with a stash</a>).</li>\n</ul></li>\n<li>Week 4 (Jan 25-27-29):\n<ul>\n<li><a href=\"http://en.wikipedia.org/wiki/Bloom_filter\">Bloom filters</a>.</li>\n<li><a href=\"http://en.wikipedia.org/wiki/Hash_function\">Hash\nfunctions</a>; <a\nhref=\"http://en.wikipedia.org/wiki/Universal_hashing\">universal\nhashing</a> (see also: <a\nhref=\"http://mybiasedcoin.blogspot.com/2009/12/text-book-algorithms-at-soda-guest-post.html\">blog\npost about Dietzfelbinger et al fast hash</a>, <a\nhref=\"http://www.siam.org/proceedings/alenex/2010/alx10_007_thorupm.pdf\">Thorup\non universal hashing for linear probing</a>).</li>\n<li>MIDTERM I, Friday, January 29.</li>\n</ul></li>\n<li>Week 5 (Feb 2-4-6):\n<ul>\n<li><a href=\"http://portal.acm.org/citation.cfm?id=782121\">Range sums</a>, <a href=\"http://en.wikipedia.org/wiki/Prefix_sum\">prefix\nsums</a>, and <a href=\"http://dx.doi.org/10.1016/0196-6774(80)90015-2\">decomposable searching problems</a>.</li>\n<li><a href=\"http://infoweekly.blogspot.com/2009/11/simple-encoding-proof.html\">Logarithmic lower bounds for dynamic prefix sums</a>.</li>\n<li><a href=\"http://en.wikipedia.org/wiki/Binary_search_tree\">Binary search trees</a>; augmented binary search trees and <a href=\"http://en.wikipedia.org/wiki/Range_searching\">range searching</a>.</ul></li>\n<li>Week 6 (Feb 9-11-13):\n<ul>\n<li>Overview of <a href=\"http://en.wikipedia.org/wiki/Self-balancing_binary_search_tree\">balanced binary search trees</a>.</li>\n<li><a href=\"http://en.wikipedia.org/wiki/Splay_tree\">Splay trees</a>.</li>\n<li>The <a\nhref=\"http://en.wikipedia.org/wiki/Splay_tree#Dynamic_optimality_conjecture\">dynamic\noptimality conjecture</a>. (<a href=\"http://people.csail.mit.edu/mip/papers/arboral/paper.pdf\">Additional reading</a> on non-splay-tree approaches to dynamic optimality.)</li>\n</ul></li>\n<li>Week 7 (Feb 15-17-19):\n<ul>\n<li>HOLIDAY February 15 (Presidents' Day).</li>\n<li><a href=\"http://www.itu.dk/courses/AVA/E2006/SDS-slides.pdf\">Succinct representation of trees</a> and fast navigation in succinct\ntrees. <a href=\"http://www.cs.sunysb.edu/~bender/pub/latin02-level.ps\">Level ancestors</a>.</li>\n<li><a href=\"http://en.wikipedia.org/wiki/Lowest_common_ancestor\">Lowest\ncommon ancestors</a>, <a\nhref=\"http://en.wikipedia.org/wiki/Range_Minimum_Query\">range\nminima</a>, and the <a\nhref=\"http://www.cs.sunysb.edu/~bender/pub/lca.ps\">Bender-Farach algorithm</a>.</li>\n</ul></li>\n<li>Week 8 (Feb 22-24-26):\n<ul>\n<li><a href=\"http://en.wikipedia.org/wiki/Persistent_data_structure\">Persistence</a>. <a href=\"http://en.wikipedia.org/wiki/Closure_(computer_science)\">Closures</a> and fully-persistent stacks.</li>\n<li><a href=\"http://dx.doi.org/10.1145%2F6138.6151\">Persistent search trees</a>, <a href=\"http://en.wikipedia.org/wiki/Point_location\">point location</a>, <a href=\"http://en.wikipedia.org/wiki/Voronoi_diagram\">Voronoi diagrams</a>, and the <a href=\"http://en.wikipedia.org/wiki/Nearest_neighbor_search\">post office problem</a>.</li>\n<li>The node-copying and fat node techniques for making data structures persistent.</li>\n<li>MIDTERM II, Friday, February 26.</li>\n</ul></li>\n<li>Week 9 (Mar 1-3-5):\n<ul>\n<li><a href=\"http://en.wikipedia.org/wiki/Quadtree\">Quadtrees</a> and <a\nhref=\"http://arxiv.org/abs/cs.CG/0507049\">approximate nearest neighbors</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Interval_tree#Centered_interval_tree\">Interval trees</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Trie\">Tries</a>, <a\nhref=\"http://en.wikipedia.org/wiki/Radix_tree\">compressed tries</a>, and\n<a href=\"http://en.wikipedia.org/wiki/Suffix_tree\">suffix trees</a></li>\n</ul></li>\n<li>Week 10 (Mar 8-10-12):\n<ul>\n<li><a href=\"http://gauguin.info.uniroma2.it/~italiano/italiano.pdf\">Dynamic graph algorithms</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Disjoint-set_data_structure\">Union-find</a></li>\n</ul></li>\n<li>FINAL EXAM, Monday, March 15, 10:30 - 12:30.</li>\n</ul>\n\n<p>For additional course-related information including old exams (which are very likely to be useful as samples for this course) see the <a href=\"http://www.ics.uci.edu/~eppstein/261/w09.html\">syllabus from my previous offering in Winter 2009</a>.</p>\n\n<hr>\n<p><a href=\"/~eppstein/\">David Eppstein</a>, \n<a href=\"/\">ICS</a>, <a href=\"http://www.uci.edu/\">UC Irvine</a>.<br>\n</body>\n</html>\n", "id": 17411.0}