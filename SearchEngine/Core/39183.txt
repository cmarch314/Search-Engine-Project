{"text": "Navigation Up Table of Contents Bibliography Index Title Page DelaunayTriangulationTraits 2 Definition In addition to the requirements of the concept TriangulationTraits 2 described the concept DelaunayTriangulationTraits 2 provide a predicate to check the empty circle property The correponding predicate type is called type Side of oriented circle 2 The additional types Line 2 Ray 2 and the constructor objects Construct ray 2 Construct circumcenter 2 Construct bisector 2 Construct midpoint are used to build the dual Voronoi diagram and are required only if the dual functions are called The additional predicate type Compare distance 2 is required if calls to nearest vertex are issued RefinesTriangulationTraits 2 Types DelaunayTriangulationTraits 2 Line 2 The line type This type is required only if some dual functions are called DelaunayTriangulationTraits 2 Ray 2 The type for ray This type is required only if some dual functions are called DelaunayTriangulationTraits 2 Side of oriented circle 2 Predicate type Provides the operator Oriented side operator Point p Point q Point r Point s which takes four points p q r s as arguments and returns ON POSITIVE SIDE ON NEGATIVE SIDE or ON ORIENTED BOUNDARY according to the position of points s with respect to the oriented circle through p q and r DelaunayTriangulationTraits 2 Compare distance 2 Predicate type Provides the operator Comparison result operator Point 2 p Point 2 q Point 2 r which returns SMALLER EQUAL or LARGER according to the distance between p and q being smaller equal or larger than the distance between p and r This type is only require if nearest vertex queries are issued DelaunayTriangulationTraits 2 Construct circumcenter 2 Constructor object Provides the operator Point 2 operator Point 2 p Point 2 q Point 2 r which returns the circumcenter of the three points p q anf r This type is required only if functions relative to the dual Voronoi diagram are called DelaunayTriangulationTraits 2 Construct bisector 2 Constructor object Provides the operator Line 2 operator Point 2 p Point 2 q which constructs the bisector line of points p and q This type is required only if functions relative to the dual Voronoi diagram are called DelaunayTriangulationTraits 2 Construct ray 2 A constructor object to build a ray from a point and a line Provides Ray 2 operator Point 2 p Line 2 l Creation DelaunayTriangulationTraits 2 traits default constructor DelaunayTriangulationTraits 2 traits dtt copy constructor DelaunayTriangulationTraits 2 traits traits2 Assignment operator Access to predicate and constructor objects Side of oriented circle 2 traits side of oriented circle 2 object The following functions are required only if member functions of the Delaunay triangulation relative to the dual Voronoi diagram are called Compare distance 2 traits compare distance 2 object Construct circumcenter 2 traits construct circumcenter 2 object Construct bisector 2 traits construct bisector 2 object Construct direction 2 traits construct direction 2 object Construct ray 2 traits construct ray 2 object Has ModelsCGALkernels CGAL Triangulation euclidean traits 2 Rep The following traits class provide everything except types and member functions required for the dual Voronoi diagram CGAL Triangulation euclidean traits xy 3 Rep CGAL Triangulation euclidean traits yz 3 Rep CGAL Triangulation euclidean traits zx 3 Rep See AlsoTriangulationTraits 2 Next Delaunay triangulation 2 Traits Tds Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Triangulation_2_ref/Concept_DelaunayTriangulationTraits_2.html", "title": "delaunaytriangulationtraits_2", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Triangulation_2_ref/DelaunayTriangulationTraits_2.tex' -->\n<html> <head>  \n<title>DelaunayTriangulationTraits_2</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_918\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_880\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Concept.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_DelaunayTriangulationTraits_2\"></A>\n<h2><I>DelaunayTriangulationTraits_2</I></h2>\n<P>\n\n<H3>Definition</H3>\n<P>\n\nIn addition to the requirements \nof the concept <I><A HREF=\"Concept_TriangulationTraits_2.html#Cross_link_anchor_936\">TriangulationTraits_2</A></I>\ndescribed ,\nthe concept <I><A HREF=\"Concept_DelaunayTriangulationTraits_2.html#Cross_link_anchor_918\">DelaunayTriangulationTraits_2</A></I> provide a predicate to check the empty circle\nproperty. The correponding predicate type\nis called  type  <I>Side_of_oriented_circle_2</I>.\n<P>\n\nThe additional types <I><A HREF=\"../Kernel_23_ref/Class_Line_2.html#Cross_link_anchor_50\">Line_2</A></I>,\n<I><A HREF=\"../Kernel_23_ref/Class_Ray_2.html#Cross_link_anchor_54\">Ray_2</A></I> and the constructor objects\n<I>Construct_ray_2</I>\n<I>Construct_circumcenter_2</I>, <I>Construct_bisector_2</I>,\n<I>Construct_midpoint</I>\nare used to build the dual Voronoi diagram\nand are required only if the dual functions are called.\nThe additional predicate type <I>Compare_distance_2</I> is \nrequired if calls to \n<I>nearest_vertex(..)</I> are issued.\n<P>\n\n<H3>Refines</H3><I><A HREF=\"Concept_TriangulationTraits_2.html#Cross_link_anchor_936\">TriangulationTraits_2</A></I>\n<P>\n\n<H3>Types</H3>\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayTriangulationTraits_2.html#Cross_link_anchor_918\">DelaunayTriangulationTraits_2</A>::<A HREF=\"../Kernel_23_ref/Class_Line_2.html#Cross_link_anchor_50\">Line_2</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    The line type. This type is  required only if\nsome dual\nfunctions are called.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayTriangulationTraits_2.html#Cross_link_anchor_918\">DelaunayTriangulationTraits_2</A>::<A HREF=\"../Kernel_23_ref/Class_Ray_2.html#Cross_link_anchor_54\">Ray_2</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    The type for ray. This type is  required only if\nsome dual\nfunctions are called.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayTriangulationTraits_2.html#Cross_link_anchor_918\">DelaunayTriangulationTraits_2</A>::Side_of_oriented_circle_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Predicate type. \nProvides the operator :<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Enum_Oriented_side.html#Cross_link_anchor_116\">Oriented_side</A> operator()(Point p, Point q, Point r, Point s)</I>\nwhich takes four points <MATH><I>p, q, r, s</I></MATH> as arguments and returns\n<I><A HREF=\"../Kernel_23_ref/Enum_Oriented_side#Enum_Oriented_side\">ON_POSITIVE_SIDE</A></I>, <I><A HREF=\"../Kernel_23_ref/Enum_Oriented_side#Enum_Oriented_side\">ON_NEGATIVE_SIDE</A></I> or, \n<I><A HREF=\"../Kernel_23_ref/Enum_Oriented_side#Enum_Oriented_side\">ON_ORIENTED_BOUNDARY</A></I> according to the position of points <I>s</I>\nwith respect to the oriented circle through <MATH><I>p,q</I></MATH>\nand <MATH><I>r</I></MATH>.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayTriangulationTraits_2.html#Cross_link_anchor_918\">DelaunayTriangulationTraits_2</A>::Compare_distance_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Predicate type. Provides\n the operator :<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Enum_Comparison_result.html#Cross_link_anchor_104\">Comparison_result</A> operator()(<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p, <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> q, <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> r)</I>\nwhich returns <I><A HREF=\"../Kernel_23_ref/Enum_Comparison_result#Enum_Comparison_result\">SMALLER</A></I>, <I><A HREF=\"../Kernel_23_ref/Enum_Comparison_result#Enum_Comparison_result\">EQUAL</A></I> or <I><A HREF=\"../Kernel_23_ref/Enum_Comparison_result#Enum_Comparison_result\">LARGER</A></I>\naccording to the distance between p and q being smaller, equal or larger\nthan the distance between p and r.  This type is only require if\n<I>nearest_vertex</I> queries are issued.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayTriangulationTraits_2.html#Cross_link_anchor_918\">DelaunayTriangulationTraits_2</A>::Construct_circumcenter_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Constructor object. Provides\nthe operator :<BR>\n\n<I> <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> operator()(<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p, <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> q, <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> r)</I> which returns\nthe  <A HREF=\"../Kernel_23_ref/Function_circumcenter.html#Cross_link_anchor_165\">circumcenter</A> of the three points  <I>p, q</I> anf <I>r</I>.\nThis type is required only if  functions\nrelative to the dual Voronoi diagram are called.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayTriangulationTraits_2.html#Cross_link_anchor_918\">DelaunayTriangulationTraits_2</A>::Construct_bisector_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Constructor object. Provides\nthe operator :<BR>\n\n<I> <A HREF=\"../Kernel_23_ref/Class_Line_2.html#Cross_link_anchor_50\">Line_2</A> operator()(<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p, <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> q)</I> which constructs the\n<A HREF=\"../Kernel_23_ref/Function_bisector.html#Cross_link_anchor_161\">bisector</A> line of points <I>p</I> and <I>q</I>.\nThis type is required only if  functions\nrelative to the dual Voronoi diagram are called.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayTriangulationTraits_2.html#Cross_link_anchor_918\">DelaunayTriangulationTraits_2</A>::Construct_ray_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    A constructor object  to build\na ray from a point and a line. Provides :<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Class_Ray_2.html#Cross_link_anchor_54\">Ray_2</A> operator() ( <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p, <A HREF=\"../Kernel_23_ref/Class_Line_2.html#Cross_link_anchor_50\">Line_2</A> l);</I>\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Creation</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayTriangulationTraits_2.html#Cross_link_anchor_918\">DelaunayTriangulationTraits_2</A> traits;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    default constructor.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayTriangulationTraits_2.html#Cross_link_anchor_918\">DelaunayTriangulationTraits_2</A> traits (  dtt);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    copy constructor\n<P>\n\n</TD></TR>\n        </TABLE>\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayTriangulationTraits_2.html#Cross_link_anchor_918\">DelaunayTriangulationTraits_2</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     traits = traits2<A NAME=\"Function_DelaunayTriangulationTraits_2_operator=6traits29;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Assignment operator.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Access to predicate and constructor objects</H3>\n\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Side_of_oriented_circle_2_side_of_oriented_circle_2_object69;\"></A>\nSide_of_oriented_circle_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.side_of_oriented_circle_2_object ()\n        </I></NOBR>\n        \n    \n        </TR>\n        </TABLE>\n<P>\n\nThe following  functions are required  only if\nmember functions of the Delaunay triangulation\nrelative to the dual Voronoi diagram  are called.\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Compare_distance_2_compare_distance_2_object69;\"></A>\nCompare_distance_2\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.compare_distance_2_object ()\n        </I></NOBR>\n        \n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Construct_circumcenter_2_construct_circumcenter_2_object69;\"></A>\nConstruct_circumcenter_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.construct_circumcenter_2_object ()\n        </I></NOBR>\n        \n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Construct_bisector_2_construct_bisector_2_object69;\"></A>\nConstruct_bisector_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.construct_bisector_2_object ()\n        </I></NOBR>\n        \n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Construct_direction_2_construct_direction_2_object69;\"></A>\nConstruct_direction_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.construct_direction_2_object ()\n        </I></NOBR>\n        \n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Construct_ray_2_construct_ray_2_object69;\"></A>\nConstruct_ray_2\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.construct_ray_2_object ()\n        </I></NOBR>\n        \n    \n        </TR>\n        </TABLE>\n<P>\n\n<H3>Has Models</H3>C<SMALL>GAL</SMALL>kernels<BR>\n\n<I><A HREF=\"Class_Triangulation_euclidean_traits_2.html#Cross_link_anchor_942\">CGAL::Triangulation_euclidean_traits_2</A>&lt;Rep&gt;</I>.\n<P>\n\nThe following traits class  provide  everything except types and member\nfunctions required for the dual Voronoi diagram&nbsp;;<BR>\n\n<I><A HREF=\"Class_Triangulation_euclidean_traits_xy_3.html#Cross_link_anchor_944\">CGAL::Triangulation_euclidean_traits_xy_3</A>&lt;Rep&gt;</I>,<BR>\n\n<I>CGAL::Triangulation_euclidean_traits_yz_3&lt;Rep&gt;</I>,<BR>\n\n<I>CGAL::Triangulation_euclidean_traits_zx_3&lt;Rep&gt;</I>.\n<P>\n\n<H3>See Also</H3><I><A HREF=\"Concept_TriangulationTraits_2.html#Cross_link_anchor_936\">TriangulationTraits_2</A></I>\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Class_Delaunay_triangulation_2.html\"><I>Delaunay_triangulation_2&lt;Traits,Tds&gt;</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_32!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 39183.0}