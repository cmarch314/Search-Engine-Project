{"text": "This is Google s cache of http www vdlande com VHDL arrays html It is a snapshot of the page as it appeared on Sep 26 2 9 14 9 54 GMT The current page could have changed in the meantime Learn moreText only version These search terms are highlighted vhdl These terms only appear in links pointing to this page reference guide vdlande ArraysDeclaration used in PackageEntityArchitectureProcessProcedureFunction Syntax type type name is array range of element type See LRM section 3 2 1 Rules and Examples An arraycontains multiple elements of the same type When an array object is declared an existing array type must be used type NIBBLE is array 3 downto of std ulogic type RAM is array to 31 of integer range to 255 signal A BUS NIBBLE signal RAM RAM An array type definition can be unconstrained i e of undefined length String bit vector and std logic vector are defined in this way An object signal variable or constant of an unconstrained array type must have it s index type range defined when it is declared type INT ARRAY is array integer range of integer variable INT TABLE INT ARRAY to 9 variable LOC BUS std ulogic vector 7 downto Arrays with character elements such as string bit vector and std logic vector may be assigned a literal value using double quotes see literals CONSTANT MSG o string Test 1 Completed A BUS LOC BUS 1 1 1 1 Arrays may also be assigned using concatenation aggregates slices or a mixture By default assignment is made be position A BUS A BIT B BIT C BIT D BIT an equivalent assignment A BUS A BIT B BIT C BIT D BIT rotate A BUS to the left A BUS A BUS 2 downto A BUS 3 Arrays of arrays may be declared These are useful for memories vector tables etc type NIBBLE is array 3 downto of std ulogic type MEM is array to 7 of NIBBLE an array array of array type variable MEM8X4 MEM accessing the whole array MEM8X4 1 1 11 1 1 1 11 111 accessing a word MEM8X4 5 11 accessing a single bit MEM8X4 6 True two or more dimensional arrays may also be declared type T 2D is array 3 downto 1 downto of integer signal X 2D T 2D X 2D 1 1 2 2 3 3 X 2D 3 1 4 Synthesis Issues Most logic synthesis tools accept one dimensional arrays of other supported types 1 D arrays of 1 D arrays are often supported Some tols also allow true 2 D arrays but not more dimensions Note that arrays are usually implemented using gates and flip flops not ROM s and RAM s Whats New in 93 Array types have not changed in VHDL 93 ", "_id": "http://www.ics.uci.edu/~jmoorkan/vhdlref/arrays.html", "title": "vhdl reference guide - arrays", "html": "<html><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\">\n<!-- base href=\"http://www.vdlande.com/VHDL/arrays.html\" --><title>VHDL Reference Guide - Arrays</title></head><body bgcolor=\"mintcream\"><div style=\"border: 1px solid rgb(153, 153, 153); margin: -1px -1px 0pt; padding: 0pt; background: rgb(255, 255, 255) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;\"><div style=\"border: 1px solid rgb(153, 153, 153); margin: 12px; padding: 8px; background: rgb(221, 221, 221) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; font-family: arial,sans-serif; font-style: normal; font-variant: normal; font-size: 13px; line-height: normal; font-size-adjust: none; font-stretch: normal; -x-system-font: none; color: rgb(0, 0, 0); font-weight: normal; text-align: left;\">This is Google's cache of <a href=\"http://www.vdlande.com/VHDL/arrays.html\" style=\"text-decoration: underline; color: rgb(0, 0, 204);\">http://www.vdlande.com/VHDL/arrays.html</a>. It is a snapshot of the page as it appeared on Sep 26, 2009 14:09:54 GMT. The <a href=\"http://www.vdlande.com/VHDL/arrays.html\" style=\"text-decoration: underline; color: rgb(0, 0, 204);\">current page</a> could have changed in the meantime. <a href=\"http://www.google.com/intl/en/help/features_list.html#cached\" style=\"text-decoration: underline; color: rgb(0, 0, 204);\">Learn more</a><br><br><div style=\"float: right;\"><a href=\"http://74.125.155.132/search?q=cache:hbntAGDD7KsJ:www.vdlande.com/VHDL/arrays.html+site:www.vdlande.com+VHDL+reference+guide+vdlande&amp;hl=en&amp;client=firefox-a&amp;gl=us&amp;strip=1\" style=\"text-decoration: underline; color: rgb(0, 0, 204);\">Text-only version</a></div>\n<div>These search terms are highlighted: <span style=\"background: rgb(255, 255, 102) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; color: black; font-weight: bold;\">vhdl</span>&nbsp;These terms only appear in links pointing to this page: <span style=\"font-weight: bold;\">reference</span>&nbsp;<span style=\"font-weight: bold;\">guide</span>&nbsp;<span style=\"font-weight: bold;\">vdlande</span>&nbsp;&nbsp;</div></div></div><div style=\"position: relative;\">\n\n\n\n\n<div align=\"center\">\n<table border=\"0\" cellpadding=\"5\">\n<caption><b>Arrays</b></caption>\n<tbody><tr><td colspan=\"3\"><hr></td></tr>\n<tr>\n<td bgcolor=\"lightcyan\">Declaration</td>\n<td>---- used in ----&gt;</td>\n<td bgcolor=\"lightgreen\">Package<br>Entity<br>Architecture<br>Process<br>Procedure<br>Function</td>\n</tr>\n</tbody></table>\n\n<p><table border=\"0\">\n<tbody><tr><td><hr width=\"150\"></td><td>Syntax</td><td><hr width=\"150\"></td></tr>\n</tbody></table></p><p>\n</p></div>\n\n<div align=\"center\">\n<table border=\"1\" cellpadding=\"5\" width=\"60%\">\n<tbody><tr>\n<td><b>type</b> type_name <b>is array</b> (range) <b>of</b> element_type;</td>\n</tr>\n</tbody></table><p>\n</p></div>\n\n<div align=\"center\">\nSee LRM section 3.2.1\n\n<p><table align=\"center\" border=\"0\">\n<tbody><tr><td><hr width=\"150\"></td><td>Rules and Examples</td><td><hr width=\"150\"></td></tr>\n</tbody></table></p><p>\n</p></div>\n\n<div align=\"center\">\n<table border=\"1\" cellpadding=\"5\" width=\"100%\">\n<tbody><tr>\n<td>An <b>array</b>contains multiple elements of the same type.\nWhen an array object is declared, an existing array type must be used.\n<pre>type NIBBLE is array (3 downto 0) of std_ulogic;\ntype RAM is array (0 to 31) of integer range 0 to 255;\nsignal A_BUS : NIBBLE;\nsignal RAM_0 : RAM;\n</pre></td>\n</tr>\n</tbody></table>\n</div>\n\n<div align=\"center\">\n<table border=\"1\" cellpadding=\"5\" width=\"90%\">\n<tbody><tr>\n<td>An array type definition can be <b>unconstrained</b>, i.e. of undefined length.\n<b>String, bit_vector</b> and <b>std_logic_vector</b> are defined in this way. An object\n(signal, variable or constant) of an unconstrained array type must have it's index type\nrange defined when it is declared.\n<pre>type INT_ARRAY is array (integer range &lt;&gt;) of integer;\nvariable INT_TABLE: INT_ARRAY(0 to 9);\nvariable LOC_BUS : std_ulogic_vector(7 downto 0);\n</pre></td>\n</tr>\n</tbody></table>\n</div><div align=\"right\">\n<table border=\"1\" cellpadding=\"5\" width=\"80%\">\n<tbody><tr>\n<td>Arrays with character elements such as <b>string, bit_vector</b> and <b>std_logic_vector</b>\nmay be assigned a literal value using double quotes (see <b>literals)</b>:\n<pre>CONSTANT MSG_o: string := \"Test 1 Completed\";\n...\nA_BUS &lt;= \"0000\";\nLOC_BUS &lt;= \"10101010\";\n</pre></td>\n</tr>\n</tbody></table>\n</div>\n\n<div align=\"center\">\n<table border=\"1\" cellpadding=\"5\" width=\"80%\">\n<tbody><tr>\n<td>Arrays may also be assigned using <b>concatenation</b> (&amp;), <a href=\"http://www.vdlande.com/VHDL/aggregat.htm\">aggregates</a>,\n<b>slices</b>, or a mixture. By default, assignment is made be <b>position.</b>\n<pre>A_BUS &lt;= (A_BIT, B_BIT, C_BIT, D_BIT);\n-- an equivalent assignment:\nA_BUS &lt;= (A_BIT &amp; B_BIT &amp; C_BIT &amp; D_BIT);\n-- rotate A_BUS to the left:\nA_BUS &lt;= A_BUS(2 downto 0) &amp; A_BUS(3);;\n</pre>\n</td>\n</tr>\n</tbody></table>\n</div><div align=\"left\">\n<table border=\"1\" cellpadding=\"5\" width=\"80%\">\n<tbody><tr>\n<td>Arrays of arrays may be declared. These are useful for memories, vector tables, etc.:\n<pre>type NIBBLE is array (3 downto 0) of std_ulogic;\ntype MEM is array (0 to 7) of NIBBLE;\n-- an array \"array of array\" type\nvariable MEM8X4 : MEM;\n...\n-- accessing the whole array:\nMEM8X4 := (\"0000\", \"0001\", \"0010\", \"0011\", \"0100\", \"0101\", \"0110\", \"0111\");\n-- accessing a \"word\"\nMEM8X4(5) := \"0110\";\n-- accessing a single bit\nMEM8X4(6) (0) := '0';\n</pre></td>\n</tr>\n</tbody></table>\n</div><div align=\"center\">\n<table border=\"1\" cellpadding=\"5\" width=\"80%\">\n<tbody><tr>\n<td>True two (or more) dimensional arrays may also be declared:\n<pre>type T_2D is array (3 downto 0, 1 downto 0) of integer;\nsignal X_2D : T_2D;\n...\nX_2D &lt;= ((0,0), (1,1), (2,2), (3,3));\nX_2D(3,1) &lt;= 4;\n</pre></td>\n</tr>\n</tbody></table>\n</div>\n\n<div align=\"center\">\n<p><table align=\"center\" border=\"0\">\n<tbody><tr><td><hr width=\"150\"></td><td>Synthesis Issues</td><td><hr width=\"150\"></td></tr>\n</tbody></table></p><p>\n\nMost logic synthesis tools accept one-dimensional <b>arrays</b> of other supported types.\n1-D arrays of 1-D arrays are often supported. Some tols also allow true 2-D arrays, but not more dimensions.\n</p><p>\nNote that arrays are usually implemented using gates and flip-flops, not ROM's and RAM's.\n</p></div>\n\n<div align=\"center\">\n<p><table border=\"0\">\n<tbody><tr><td><hr width=\"150\"></td><td>Whats New in '93</td><td><hr width=\"150\"></td></tr>\n</tbody></table></p><p>\n\nArray types have not changed in <b style=\"color: black; background-color: rgb(255, 255, 102);\">VHDL</b>-93.\n\n</p></div>\n<hr width=\"80%\">\n</div></body></html>", "id": 10768.0}