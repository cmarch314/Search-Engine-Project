{"text": "Navigation Up Table of Contents Bibliography Index Title Page TriangulationDSVertexBase 3 Definition At the bottom level of 3D triangulations see Sections and a vertex provides access to one of its incident cells through a handle Note that when you use the triangulation data structure as parameter of a geometric triangulation the vertex base class has additional geometric requirements it has to match the TriangulationVertexBase 3 concept Since the Triangulation data structure is the class which defines the handle types the vertex base class has to be somehow parameterized by the Triangulation data structure But since it is itself parameterized by the cell and vertex base classes there is a cycle in the definition of these classes In order to break the cycle the base classes for vertex and cell which are given as arguments for the Triangulation data structure use void as Triangulation data structure parameter and the Triangulation data structure then uses a rebind like mecanism similar to the one specified in std allocator in order to put itself as parameter to the vertex and cell classes The rebound base classes so obtained are the classes which are used as base classes for the final vertex and cell classes More information can be found in Section Types The class TriangulationDSVertexBase 3 has to define the following types template typename TDS2 TriangulationDSVertexBase 3 struct Rebind TDS This nested template class has to define a type Other which is the rebound vertex that is the one whose Triangulation data structure will be the actually used one The Other type will be the real base class of Triangulation data structure 3 Vertex typedef TriangulationDataStructure 3 Triangulation data structure typedef TriangulationDataStructure 3 Vertex handle Vertex handle typedef TriangulationDataStructure 3 Cell handle Cell handle Creation TriangulationDSVertexBase 3 v Default constructor TriangulationDSVertexBase 3 v Cell handle c Constructs a vertex pointing to cell c Operations Access Functions Cell handle v cell Returns the pointer to an incident cell Setting void v set cell Cell handle c Sets the incident cell Checking bool v is valid bool verbose false Performs any desired test on a vertex Checks that the pointer to an incident cell is not the default constructed handle Various void v for compact container void v for compact container These member functions are required by Triangulation data structure 3 because it uses Compact container to store its cells See the documentation of Compact container for the exact requirements I O istream istream is v Inputs the non combinatorial information given by the vertex ostream ostream os v Outputs the non combinatorial information given by the vertex Has Models CGAL Triangulation ds vertex base 3 CGAL Triangulation vertex base 3 CGAL Triangulation vertex base with info 3 CGAL Triangulation hierarchy vertex base 3 See Also TriangulationVertexBase 3 TriangulationHierarchyVertexBase 3 TriangulationDSCellBase 3 TriangulationCellBase 3 Next Triangulation data structure 3 TriangulationDSVertexBase 3 TriangulationDSCellBase 3 Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/TriangulationDS_3_ref/Concept_TriangulationDSVertexBase_3.html", "title": "triangulationdsvertexbase_3", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './TriangulationDS_3_ref/TriangulationDSVertexBase_3.tex' -->\n<html> <head>  \n<title>TriangulationDSVertexBase_3</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_1006\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_939\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Concept.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_TriangulationDSVertexBase_3\"></A>\n<h2><I>TriangulationDSVertexBase_3</I></h2>\n<P>\n\n<H3>Definition</H3>\n<P>\n\nAt the bottom level of 3D-triangulations \n(see Sections&nbsp;<A HREF=\"../Triangulation_3/Chapter_main.html#Triangulation3-sec-design\"><IMG SRC=\"cc_ref_up_arrow.gif\" ALT=\"reference\" WIDTH=\"10\" HEIGHT=\"10\"></A> and&nbsp;<A HREF=\"../TriangulationDS_3/Chapter_main.html#TDS3-sec-design\"><IMG SRC=\"cc_ref_up_arrow.gif\" ALT=\"reference\" WIDTH=\"10\" HEIGHT=\"10\"></A>),\na vertex provides access to one of its incident cells through a handle.\n<P>\n\nNote that when you use the triangulation data structure as parameter of a\ngeometric triangulation, the vertex base class has additional geometric\nrequirements : it has to match the <I><A HREF=\"../Triangulation_3_ref/Concept_TriangulationVertexBase_3.html#Cross_link_anchor_987\">TriangulationVertexBase_3</A></I> concept.\n<P>\n\nSince the Triangulation data structure is the class which defines the handle\ntypes, the vertex base class has to be somehow parameterized by the\nTriangulation data structure.  But since it is itself parameterized by the cell\nand vertex base classes, there is a cycle in the definition of these classes.\nIn order to break the cycle, the base classes for vertex and cell which are\ngiven as arguments for the Triangulation data structure use <I>void</I> as\nTriangulation data structure parameter, and the Triangulation data structure\nthen uses a <I>rebind</I>-like mecanism (similar to the one specified in\n<I>std::allocator</I>) in order to put itself as parameter to the vertex and\ncell classes.  The <I>rebound</I> base classes so obtained are the classes which\nare used as base classes for the final vertex and cell classes.\nMore information can be found in Section&nbsp;<A HREF=\"../TriangulationDS_3/Chapter_main.html#TDS3-sec-design\"><IMG SRC=\"cc_ref_up_arrow.gif\" ALT=\"reference\" WIDTH=\"10\" HEIGHT=\"10\"></A>.\n<P>\n\n<H3>Types</H3>\nThe class <I><A HREF=\"Concept_TriangulationDSVertexBase_3.html#Cross_link_anchor_1006\">TriangulationDSVertexBase_3</A></I> has to define the following types.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    template &lt;typename TDS2&gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_TriangulationDSVertexBase_3.html#Cross_link_anchor_1006\">TriangulationDSVertexBase_3</A>:: struct Rebind_TDS;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    This nested template class has to define a type <I>Other</I> which is the\n<I>rebound</I> vertex, that is, the one whose <I>Triangulation_data_structure</I>\nwill be the actually used one.  The <I>Other</I> type will be the real base\nclass of <I><A HREF=\"Class_Triangulation_data_structure_3.html#Cross_link_anchor_1008\">Triangulation_data_structure_3</A>::Vertex</I>.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Triangulation_data_structure\"></A>\n<A NAME=\"Typedef_Triangulation_data_structure\"></A>\ntypedef <A HREF=\"Concept_TriangulationDataStructure_3.html#Cross_link_anchor_1002\">TriangulationDataStructure_3</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    Triangulation_data_structure;\n        </I></NOBR>\n        \n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Vertex_handle\"></A>\n<A NAME=\"Typedef_Vertex_handle\"></A>\ntypedef <A HREF=\"Concept_TriangulationDataStructure_3.html#Cross_link_anchor_1002\">TriangulationDataStructure_3</A>::Vertex_handle\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    Vertex_handle;\n        </I></NOBR>\n        </TD>\n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Cell_handle\"></A>\n<A NAME=\"Typedef_Cell_handle\"></A>\ntypedef <A HREF=\"Concept_TriangulationDataStructure_3.html#Cross_link_anchor_1002\">TriangulationDataStructure_3</A>::Cell_handle\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    Cell_handle;\n        </I></NOBR>\n        </TD>\n    \n        </TR>\n        </TABLE>\n<P>\n\n<H3>Creation</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_TriangulationDSVertexBase_3.html#Cross_link_anchor_1006\">TriangulationDSVertexBase_3</A> v;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Default constructor.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_TriangulationDSVertexBase_3.html#Cross_link_anchor_1006\">TriangulationDSVertexBase_3</A> v ( Cell_handle c);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Constructs a vertex pointing to cell <I>c</I>.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Operations</H3>\n<P>\n\n<H3>Access Functions</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Cell_handle_cell69_const;\"></A>\nCell_handle\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    v.cell ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns the pointer to an incident cell\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Setting</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_set_cell6Cell_handle_c9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    v.set_cell ( Cell_handle c)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Sets the incident cell.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Checking</H3>\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_is_valid6bool_verbose=false9_const;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    v.is_valid ( bool verbose=false)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Performs any desired test on a vertex. Checks that the\npointer to an incident cell is not the default constructed handle.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Various</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_*_for_compact_container69_const;\"></A>\nvoid *\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    v.for_compact_container ()\n        </I></NOBR>\n        \n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_*___for_compact_container69;\"></A>\nvoid * &amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    v.for_compact_container ()\n        </I></NOBR>\n        \n    \n        </TR>\n        </TABLE>\n\n These member functions are required by <I><A HREF=\"Class_Triangulation_data_structure_3.html#Cross_link_anchor_1008\">Triangulation_data_structure_3</A></I>\n  because it uses <I><A HREF=\"../STL_Extension_ref/Class_Compact_container.html#Cross_link_anchor_1440\">Compact_container</A></I> to store its cells.  See the\n  documentation of <I><A HREF=\"../STL_Extension_ref/Class_Compact_container.html#Cross_link_anchor_1440\">Compact_container</A></I> for the exact requirements.\n<P>\n\n<H3>I/O</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    istream&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n     istream&amp; is &gt;&gt;  &amp; v<A NAME=\"Function_istream__operator99_6istream__is+_TriangulationDSVertexBase_3___v9;\"></A>\n\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Inputs the non-combinatorial information given by the vertex.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    ostream&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     ostream&amp; os &lt;&lt;  v<A NAME=\"Function_ostream__operator66_6ostream__os+_const_TriangulationDSVertexBase_3___v9;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Outputs the non-combinatorial information given by the vertex.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Has Models</H3>\n<P>\n\n<I><A HREF=\"Class_Triangulation_ds_vertex_base_3.html#Cross_link_anchor_1011\">CGAL::Triangulation_ds_vertex_base_3</A></I><BR>\n\n<I><A HREF=\"../Triangulation_3_ref/Class_Triangulation_vertex_base_3.html#Cross_link_anchor_993\">CGAL::Triangulation_vertex_base_3</A></I><BR>\n\n<I><A HREF=\"../Triangulation_3_ref/Class_Triangulation_vertex_base_with_info_3.html#Cross_link_anchor_995\">CGAL::Triangulation_vertex_base_with_info_3</A></I><BR>\n\n<I><A HREF=\"../Triangulation_3_ref/Class_Triangulation_hierarchy_vertex_base_3.html#Cross_link_anchor_997\">CGAL::Triangulation_hierarchy_vertex_base_3</A></I>\n<P>\n\n<H3>See Also</H3>\n<P>\n\n<I><A HREF=\"../Triangulation_3_ref/Concept_TriangulationVertexBase_3.html#Cross_link_anchor_987\">TriangulationVertexBase_3</A></I><BR>\n\n<I><A HREF=\"../Triangulation_3_ref/Concept_TriangulationHierarchyVertexBase_3.html#Cross_link_anchor_988\">TriangulationHierarchyVertexBase_3</A></I><BR>\n\n<I><A HREF=\"Concept_TriangulationDSCellBase_3.html#Cross_link_anchor_1005\">TriangulationDSCellBase_3</A></I><BR>\n\n<I><A HREF=\"../Triangulation_3_ref/Concept_TriangulationCellBase_3.html#Cross_link_anchor_986\">TriangulationCellBase_3</A></I>\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Class_Triangulation_data_structure_3.html\"><I>Triangulation_data_structure_3&lt;TriangulationDSVertexBase_3,TriangulationDSCellBase_3&gt;</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_38!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 39206.0}