{"text": "Search LoginPreferencesHelp GuideAbout Trac WikiTimelineRoadmapBrowse SourceView TicketsSearch Context Navigation BlameRevision Log source nomatic tags NomaticIM 5 buddy bots src twisted internet process py View diff against View revision Visit trunk Last change on this file was 712 checked in by cbaker 7 years ago First draft of nomatic buddy bots oscar bot is functional if you give it good authentication credentials jabber bot is just an example from the web File size 31 4 KB Line 1 test case name twisted test test process 23 Copyright c 2 1 2 4 Twisted Matrix Laboratories 4 See LICENSE for details 567 UNIX Process management 89Do NOT use this module directly use reactor spawnProcess instead 1 11Maintainer U Itamar Shtull Trauring mailto twisted itamarst org 12 1314 System Imports15import os sys traceback select errno struct cStringIO types signal1617try 18 import pty19except ImportError 2 pty None2122try 23 import fcntl termios24except ImportError 25 fcntl None2627from twisted persisted import styles28from twisted python import log failure29from twisted python util import switchUID3 from twisted internet import protocol31from twisted internet error import ProcessExitedAlready3233 Sibling Imports34import abstract fdesc error35from main import CONNECTION LOST CONNECTION DONE363738reapProcessHandlers 394 def reapAllProcesses 41 Reap all registered processes 42 43 for process in reapProcessHandlers values 44 process reapProcess 454647def registerReapProcessHandler pid process 48 if reapProcessHandlers has key pid 49 raise RuntimeError5 try 51 aux pid status os waitpid pid os WNOHANG 52 except 53 log msg Failed to reap d pid 54 log err 55 aux pid None56 if aux pid 57 process processEnded status 58 else 59 reapProcessHandlers pid process6 6162def unregisterReapProcessHandler pid process 63 if not reapProcessHandlers has key pid 64 and reapProcessHandlers pid process 65 raise RuntimeError66 del reapProcessHandlers pid 676869def detectLinuxBrokenPipeBehavior 7 global brokenLinuxPipeBehavior71 r w os pipe 72 os write w a 73 reads writes exes select select w 74 if reads 75 Linux 2 6 11 says a write only pipe is readable 76 brokenLinuxPipeBehavior True77 else 78 brokenLinuxPipeBehavior False79 os close r 8 os close w 81 82 Call at import time83detectLinuxBrokenPipeBehavior 8485class ProcessWriter abstract FileDescriptor 86 Internal Helper class to write into a Process s input pipe 8788 I am a helper which describes a selectable asynchronous writer to a89 process s input pipe including stdin 9 91 connected 192 ic 93 enableReadHack False94 95 def init self reactor proc name fileno forceReadHack False 96 Initialize specifying a Process instance to connect to 97 98 abstract FileDescriptor init self reactor 99 fdesc setNonBlocking fileno 1 self proc proc1 1 self name name1 2 self fd fileno1 3 1 4 if forceReadHack 1 5 self enableReadHack True1 6 else 1 7 Detect if this fd is actually a write only fd If it s1 8 valid to read don t try to detect closing via read 1 9 This really only means that we cannot detect a TTY s write11 pipe being closed 111 try 112 os read self fileno 113 except OSError 114 It s a write only pipe end enable hack115 self enableReadHack True116 117 if self enableReadHack 118 self startReading 119 12 def fileno self 121 Return the fileno of my process s stdin 122 123 return self fd124125 Copy relevant parts of the protocol126 def writeSomeData self data 127 Write some data to the open process 128 129 try 13 rv os write self fd data 131 if rv len data and self enableReadHack 132 self startReading 133 return rv134 except IOError io 135 if io args errno EAGAIN 136 return 137 return CONNECTION LOST138 except OSError ose 139 if ose errno errno EPIPE 14 return CONNECTION LOST141 if ose errno errno EAGAIN MacOS X does this142 return 143 raise144145 def write self data 146 self stopReading 147 abstract FileDescriptor write self data 148149 def doRead self 15 The only way a write pipe can become readable is at EOF because the151 child has closed it and we re using a reactor which doesn t distinguish152 between readable and closed such as the select reactor 153 154 Except that s not true on linux 2 6 11 It has the following characteristics 155 write pipe is completely empty POLLOUT writable in select 156 write pipe is not completely empty POLLIN readable in select 157 write pipe s reader closed POLLIN POLLERR readable and writable in select 158 159 That s what this funky code is for If linux was not broken this function could16 be simply return CONNECTION LOST 161 162 BUG We call select no matter what the reactor 163 If the reactor is pollreactor and the fd is 1 24 this will fail 164 only occurs on broken versions of linux though 165 166 if self enableReadHack 167 if brokenLinuxPipeBehavior 168 fd self fd169 r w x select select fd fd 17 if r and w 171 return CONNECTION LOST172 else 173 return CONNECTION LOST174 else 175 self stopReading 176 177 def connectionLost self reason 178 See abstract FileDescriptor connectionLost 179 18 abstract FileDescriptor connectionLost self reason 181 self proc childConnectionLost self name reason 182183184class ProcessReader abstract FileDescriptor 185 ProcessReader186187 I am a selectable representation of a process s output pipe such as188 stdout and stderr 189 19 connected 1191192 def init self reactor proc name fileno 193 Initialize specifying a process to connect to 194 195 abstract FileDescriptor init self reactor 196 fdesc setNonBlocking fileno 197 self proc proc198 self name name199 self fd fileno2 self startReading 2 1 2 2 def fileno self 2 3 Return the fileno of my process s stderr 2 4 2 5 return self fd2 62 7 def writeSomeData self data 2 8 the only time this is actually called is after loseConnection Any2 9 actual write attempt would fail so we must avoid that This hack21 allows us to use loseConnection on both readers and writers 211 assert data 212 return CONNECTION LOST213214 def doRead self 215 This is called when the pipe becomes readable 216 217 return fdesc readFromFD self fd self dataReceived 218219 def dataReceived self data 22 self proc childDataReceived self name data 221222 def loseConnection self 223 if self connected and not self disconnecting 224 self disconnecting 1225 self stopReading 226 self reactor callLater self connectionLost failure Failure CONNECTION DONE 227 228 def connectionLost self reason 229 Close my end of the pipe signal the Process which signals the23 ProcessProtocol 231 232 abstract FileDescriptor connectionLost self reason 233 self proc childConnectionLost self name reason 234235236class Process styles Ephemeral 237 An operating system Process 238239 This represents an operating system process with arbitrary input output24 pipes connected to it Those pipes may represent standard input 241 standard output and standard error or any other file descriptor 242243 On UNIX this is implemented using fork exec pipe 244 and fcntl These calls may not exist elsewhere so this245 code is not cross platform also windows can only select246 on sockets 247 248249 debug False25 debug child False251252 status 1253 pid None254255 def init self 256 reactor command args environment path proto 257 uid None gid None childFDs None 258 Spawn an operating system process 25926 This is where the hard work of disconnecting all currently open261 files forking executing the new process happens This is262 executed automatically when a Process is instantiated 263264 This will also run the subprocess as a given user ID and group ID if265 specified Implementation Note this doesn t support all the arcane266 nuances of setXXuid on UNIX it will assume that either your effective267 or real UID is 268 269 if not proto 27 assert r not in childFDs values 271 assert w not in childFDs values 272 if not signal getsignal signal SIGCHLD 273 log msg spawnProcess called but the SIGCHLD handler is not 274 installed This probably means you have not yet 275 called reactor run or called 276 reactor run installSignalHandler You will probably 277 never see this process finish and it may become a 278 zombie process 279 if you see this message during a unit test look in28 test standard xhtml or twisted test test process SignalMixin281 for a workaround282283 self lostProcess False284285 settingUID uid is not None or gid is not None 286 if settingUID 287 curegid os getegid 288 currgid os getgid 289 cureuid os geteuid 29 curruid os getuid 291 if uid is None 292 uid cureuid293 if gid is None 294 gid curegid295 prepare to change UID in subprocess296 os setuid 297 os setgid 298299 self pipes 3 keys are childFDs we can sense them closing3 1 values are ProcessReader ProcessWriters3 23 3 helpers 3 4 keys are childFDs3 5 values are parentFDs3 63 7 if childFDs is None 3 8 childFDs w we write to the child s stdin3 9 1 r we read from their stdout31 2 r and we read from their stderr311 312313 debug self debug314 if debug print childFDs childFDs315316 fdmap keys are filenos of pipes that are used by the child 317 fdmap maps childFD to parentFD318 for childFD target in childFDs items 319 if debug print d childFD target32 if target r 321 we need a pipe that the parent can read from322 readFD writeFD os pipe 323 if debug print readFD d writeFD d readFD writeFD 324 fdmap childFD writeFD child writes to this325 helpers childFD readFD parent reads from this326 elif target w 327 we need a pipe that the parent can write to328 readFD writeFD os pipe 329 if debug print readFD d writeFD d readFD writeFD 33 fdmap childFD readFD child reads from this331 helpers childFD writeFD parent writes to this332 else 333 assert type target int r should be an int target 334 fdmap childFD target parent ignores this335 if debug print fdmap fdmap336 if debug print helpers helpers337 the child only cares about fdmap values 338339 self pid os fork 34 if self pid pid is in the child process341342 do not put ANY code outside the try block The child process343 must either exec or exit If it gets outside this block due344 to an exception that is not handled here but which might be345 handled higher up there will be two copies of the parent346 running in parallel doing all kinds of damage 347348 After each change to this code review it to make sure there349 are no exit paths 35 351 try 352 stop debugging if I am I don t care anymore 353 sys settrace None 354 close all parent side pipes355 self setupChild fdmap 356 self execChild path settingUID uid gid 357 command args environment 358 except 359 If there are errors bail and try to write something36 descriptive to stderr 361 XXX The parent s stderr isn t necessarily fd 2 anymore or362 even still available363 XXXX however even libc assumes write 2 err is a useful364 thing to attempt365 try 366 stderr os fdopen 2 w 367 stderr write Upon execvpe s s in environment s n 368 command str args 369 id s id environment 37 traceback print exc file stderr 371 stderr flush 372 for fd in range 3 373 os close fd 374 except 375 pass make sure the child terminates376 Did you read the comment about not adding code here 377 os exit 1 378379 we are the parent38 381 if settingUID 382 os setregid currgid curegid 383 os setreuid curruid cureuid 384 self status 1 this records the exit status of the child385386 self proto proto387 388 arrange for the parent side pipes to be read and written389 for childFD parentFD in helpers items 39 os close fdmap childFD 391392 if childFDs childFD r 393 reader ProcessReader reactor self childFD parentFD 394 self pipes childFD reader395396 if childFDs childFD w 397 writer ProcessWriter reactor self childFD parentFD forceReadHack True 398 self pipes childFD writer3994 try 4 1 the transport is used for some compatibility methods4 2 if self proto is not None 4 3 self proto makeConnection self 4 4 except 4 5 log err 4 6 registerReapProcessHandler self pid self 4 74 8 def setupChild self fdmap 4 9 41 fdmap childFD parentFD411412 The child wants to end up with childFD attached to what used to be413 the parent s parentFD As an example a bash command run like414 command 2 1 would correspond to an fdmap of 1 1 2 1 415 command foo txt would be 1 os open foo txt 2 2 416417 This is accomplished in two steps 418419 1 close all file descriptors that aren t values of fdmap This means42 maxfds 421422 2 for each childFD 423424 if fdmap childFD childFD the descriptor is already in425 place Make sure the CLOEXEC flag is not set then delete the426 entry from fdmap 427428 if childFD is in fdmap values then the target descriptor is429 busy Use os dup to move it elsewhere update all43 fdmap childFD items that point to it then close the431 original Then fall through to the next case 432433 now fdmap childFD is not in fdmap values and is free Use434 os dup2 to move it to the right place then close the435 original 436 437438 debug self debug child439 if debug 44 errfd open tmp p err a 441 errfd sys stderr442 print errfd starting setupChild 443444 destList fdmap values 445 try 446 import resource447 maxfds resource getrlimit resource RLIMIT NOFILE 1 1448 OS X reports 9223372 368547758 8 That s a lot of fds to close449 if maxfds 1 24 45 maxfds 1 24451 except 452 maxfds 256453454 for fd in range maxfds 455 if fd in destList 456 continue457 if debug and fd errfd fileno 458 continue459 try os close fd 46 except pass461462 at this point the only fds still open are the ones that need to463 be moved to their appropriate positions in the child the targets464 of fdmap i e fdmap values 465466 if debug print errfd fdmap fdmap467 childlist fdmap keys 468 childlist sort 46947 for child in childlist 471 target fdmap child 472 if target child 473 fd is already in place474 if debug print errfd d already in place target475 if fcntl and hasattr fcntl FD CLOEXEC 476 old fcntl fcntl child fcntl F GETFD 477 fcntl fcntl child 478 fcntl F SETFD old fcntl FD CLOEXEC 479 else 48 if child in fdmap values 481 we can t replace child fd yet as some other mapping482 still needs the fd it wants to target We must preserve483 that old fd by duping it to a new home 484 newtarget os dup child give it a safe home485 if debug print errfd os dup d d child 486 newtarget 487 os close child close the original488 for c p in fdmap items 489 if p child 49 fdmap c newtarget update all pointers491 now it should be available492 if debug print errfd os dup2 d d target child 493 os dup2 target child 494495 At this point the child has everything it needs We want to close496 everything that isn t going to be used by the child i e 497 everything not in fdmap keys The only remaining fds open are498 those in fdmap values 4995 Any given fd may appear in fdmap values multiple times so we5 1 need to remove duplicates first 5 25 3 old 5 4 for fd in fdmap values 5 5 if not fd in old 5 6 if not fd in fdmap keys 5 7 old append fd 5 8 if debug print errfd old old5 9 for fd in old 51 os close fd 511512 def execChild self path settingUID uid gid 513 command args environment 514 if path 515 os chdir path 516 set the UID before I actually exec the process517 if settingUID 518 switchUID uid gid 519 os execvpe command args environment 52 521 def reapProcess self 522 Try to reap a process without blocking via waitpid 523524 This is called when sigchild is caught or a Process object loses its525 connection stdout is closed This ought to result in reaping all526 zombie processes since it will be called twice as often as it needs527 to be 528529 Unfortunately this is a slightly experimental approach since53 UNIX has no way to be really sure that your process is going to531 go away w o blocking I don t want to block 532 533 try 534 pid status os waitpid self pid os WNOHANG 535 except 536 log msg Failed to reap d self pid 537 log err 538 pid None539 if pid 54 self processEnded status 541 unregisterReapProcessHandler pid self 542543 def writeToChild self childFD data 544 self pipes childFD write data 545 546 def closeChildFD self childFD 547 for writer pipes loseConnection tries to write the remaining data548 out to the pipe before closing it549 if childFD is not in the list of pipes assume that it is already55 closed551 if self pipes has key childFD 552 self pipes childFD loseConnection 553554 def pauseProducing self 555 for p in self pipes itervalues 556 if isinstance p ProcessReader 557 p stopReading 558 559 def resumeProducing self 56 for p in self pipes itervalues 561 if isinstance p ProcessReader 562 p startReading 563564 compatibility565 def closeStdin self 566 Call this to close standard input on this process 567 568 self closeChildFD 569 def closeStdout self 57 self closeChildFD 1 571 def closeStderr self 572 self closeChildFD 2 573 def loseConnection self 574 self closeStdin 575 self closeStderr 576 self closeStdout 577578 def write self data 579 Call this to write to standard input on this process 58 581 NOTE This will silently lose data if there is no standard input 582 583 if self pipes has key 584 self pipes write data 585586 def registerProducer self producer streaming 587 Call this to register producer for standard input 588589 If there is no standard input producer stopProducing will59 be called immediately 591 592 if self pipes has key 593 self pipes registerProducer producer streaming 594 else 595 producer stopProducing 596597 def unregisterProducer self 598 Call this to unregister producer for standard input 599 if self pipes has key 6 self pipes unregisterProducer 6 1 6 2 def writeSequence self seq 6 3 Call this to write to standard input on this process 6 46 5 NOTE This will silently lose data if there is no standard input 6 6 6 7 if self pipes has key 6 8 self pipes writeSequence seq 6 961 def childDataReceived self name data 611 self proto childDataReceived name data 612 613 def signalProcess self signalID 614 if signalID in HUP STOP INT KILL TERM 615 signalID getattr signal SIG signalID 616 if self pid is None 617 raise ProcessExitedAlready618 os kill self pid signalID 61962 def processEnded self status 621 this is called when the child terminates SIGCHLD 622 self status status623 self lostProcess True624 self pid None625 for fd helper in self pipes items 626 helper connectionLost None 627 self closeStdin 628 self maybeCallProcessEnded 62963 def childConnectionLost self childFD reason 631 this is called when one of the helpers ProcessReader or632 ProcessWriter notices their pipe has been closed633 os close self pipes childFD fileno 634 del self pipes childFD 635 try 636 self proto childConnectionLost childFD 637 except 638 log err 639 self maybeCallProcessEnded 64 641 def maybeCallProcessEnded self 642 we don t call ProcessProtocol processEnded until 643 the child has terminated AND644 all writers have indicated an error status AND645 all readers have indicated EOF646 This insures that we ve gathered all output from the process 647 if self pipes 648 print maybe but pipes still self pipes keys 649 return65 if not self lostProcess 651 print maybe but haven t lostProcess yet 652 self reapProcess 653 return654 try 655 exitCode sig None656 if self status 1 657 if os WIFEXITED self status 658 exitCode os WEXITSTATUS self status 659 else 66 sig os WTERMSIG self status 661 else 662 pass don t think this can happen663 if exitCode or sig 664 e error ProcessTerminated exitCode sig self status 665 else 666 e error ProcessDone self status 667 if self proto is not None 668 self proto processEnded failure Failure e 669 self proto None67 except 671 log err 672673 def repr self 674 return s pid s status s self class name 675 self pid self status 676677class PTYProcess abstract FileDescriptor styles Ephemeral 678 An operating system Process that uses PTY support 679 status 168 pid None681 682 def init self reactor command args environment path proto 683 uid None gid None usePTY None 684 Spawn an operating system process 685686 This is where the hard work of disconnecting all currently open687 files forking executing the new process happens This is688 executed automatically when a Process is instantiated 68969 This will also run the subprocess as a given user ID and group ID if691 specified Implementation Note this doesn t support all the arcane692 nuances of setXXuid on UNIX it will assume that either your effective693 or real UID is 694 695 if not pty and type usePTY not in types ListType types TupleType 696 no pty module and we didn t get a pty to use697 raise NotImplementedError cannot use PTYProcess on platforms without the pty module 698 abstract FileDescriptor init self reactor 699 settingUID uid is not None or gid is not None 7 if settingUID 7 1 curegid os getegid 7 2 currgid os getgid 7 3 cureuid os geteuid 7 4 curruid os getuid 7 5 if uid is None 7 6 uid cureuid7 7 if gid is None 7 8 gid curegid7 9 prepare to change UID in subprocess71 os setuid 711 os setgid 712 if type usePTY in types TupleType types ListType 713 masterfd slavefd ttyname usePTY714 else 715 masterfd slavefd pty openpty 716 ttyname os ttyname slavefd 717 pid os fork 718 self pid pid719 if pid pid is in the child process72 try 721 sys settrace None 722 os close masterfd 723 if hasattr termios TIOCNOTTY 724 try 725 fd os open dev tty os O RDWR os O NOCTTY 726 except OSError 727 pass728 else 729 try 73 fcntl ioctl fd termios TIOCNOTTY 731 except 732 pass733 os close fd 734 735 os setsid 736 737 if hasattr termios TIOCSCTTY 738 fcntl ioctl slavefd termios TIOCSCTTY 739 74 for fd in range 3 741 if fd slavefd 742 os close fd 743744 os dup2 slavefd stdin745 os dup2 slavefd 1 stdout746 os dup2 slavefd 2 stderr747748 if path 749 os chdir path 75 for fd in range 3 256 751 try os close fd 752 except pass753754 set the UID before I actually exec the process755 if settingUID 756 switchUID uid gid 757 os execvpe command args environment 758 except 759 stderr os fdopen 1 w 76 stderr write Upon execvpe s s in environment s n 761 command str args 762 id s id environment 763 traceback print exc file stderr 764 stderr flush 765 os exit 1 766 assert pid 767 os close slavefd 768 fdesc setNonBlocking masterfd 769 self fd masterfd77 self startReading 771 self connected 1772 self proto proto773 self lostProcess 774 self status 1775 try 776 self proto makeConnection self 777 except 778 log err 779 registerReapProcessHandler self pid self 78 781 def reapProcess self 782 Try to reap a process without blocking via waitpid 783784 This is called when sigchild is caught or a Process object loses its785 connection stdout is closed This ought to result in reaping all786 zombie processes since it will be called twice as often as it needs787 to be 788789 Unfortunately this is a slightly experimental approach since79 UNIX has no way to be really sure that your process is going to791 go away w o blocking I don t want to block 792 793 try 794 pid status os waitpid self pid os WNOHANG 795 except OSError e 796 if e errno errno ECHILD no child process797 pid None798 else 799 raise8 except 8 1 log err 8 2 pid None8 3 if pid 8 4 self processEnded status 8 5 unregisterReapProcessHandler self pid self 8 68 7 PTYs do not have stdin stdout stderr They only have in and out just8 8 like sockets You cannot close one without closing off the entire PTY 8 9 def closeStdin self 81 pass811812 def closeStdout self 813 pass814815 def closeStderr self 816 pass817818 def signalProcess self signalID 819 if signalID in HUP STOP INT KILL 82 signalID getattr signal SIG signalID 821 os kill self pid signalID 822823 def processEnded self status 824 self status status825 self lostProcess 1826 self maybeCallProcessEnded 827828 def doRead self 829 Called when my standard output stream is ready for reading 83 831 try 832 return fdesc readFromFD self fd self proto outReceived 833 except OSError 834 return CONNECTION LOST835836 def fileno self 837 This returns the file number of standard output on this process 838 839 return self fd84 841 def maybeCallProcessEnded self 842 two things must happen before we call the ProcessProtocol s843 processEnded method 1 the child process must die and be reaped844 which calls our own processEnded method 2 the child must close845 their stdin stdout stderr fds causing the pty to close causing846 our connectionLost method to be called 2 can also be triggered847 by calling loseConnection 848 if self lostProcess 2 849 try 85 exitCode sig None851 if self status 1 852 if os WIFEXITED self status 853 exitCode os WEXITSTATUS self status 854 else 855 sig os WTERMSIG self status 856 else 857 pass wonder when this happens858 if exitCode or sig 859 e error ProcessTerminated exitCode sig self status 86 else 861 e error ProcessDone self status 862 self proto processEnded failure Failure e 863 self proto None864 except 865 log err 866867 def connectionLost self reason 868 I call this to clean up when one or all of my connections has died 869 87 abstract FileDescriptor connectionLost self reason 871 os close self fd 872 self lostProcess 1873 self maybeCallProcessEnded 874875 def writeSomeData self data 876 Write some data to the open process 877 878 try 879 return os write self fd data 88 except IOError io 881 if io args errno EAGAIN 882 return 883 return CONNECTION LOST884885 def repr self 886 return s pid s status s self class name 887 self pid self status Note See TracBrowser for help on using the repository browser Download in other formats Plain Text Original Format Powered by Trac 1 1 By Edgewall Software All content copyright 2 7 2 8 by LUCI http luci ics uci edu ", "_id": "http://djp3-pc2.ics.uci.edu/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/process.py", "title": "\n      process.py in nomatic/tags/nomaticim-0.0.5/buddy_bots/src/twisted/internet\n     \u2013 nomatic*im\n    ", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n  \n\n\n  <head>\n\t\t<title>\n      process.py in nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet\n     \u2013 Nomatic*IM\n    </title><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><link rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search\" /><link rel=\"help\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/process.py?format=txt\" type=\"text/plain\" title=\"Plain Text\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/process.py\" type=\"application/x-python; charset=iso-8859-15\" title=\"Original Format\" /><link rel=\"start\" href=\"/LUCICodeRepository/nomaticIM/wiki\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/code.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/pygments/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/browser.css\" type=\"text/css\" /><link rel=\"shortcut icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link rel=\"icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link type=\"application/opensearchdescription+xml\" rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search/opensearch\" title=\"Search Nomatic*IM\" /><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/jquery.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/babel.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/messages/en_US.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/trac.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/search.js\"></script><script type=\"text/javascript\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/folding.js\"></script><script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\".trac-toggledeleted\").show().click(function() {\n                  $(this).siblings().find(\".trac-deleted\").toggle();\n                  return false;\n        }).click();\n        $(\"#jumploc input\").hide();\n        $(\"#jumploc select\").change(function () {\n          this.parentNode.parentNode.submit();\n        });\n          $('#preview table.code').enableCollapsibleColumns($('#preview table.code thead th.content'));\n      });\n    </script>\n\t</head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://luci.ics.uci.edu/#code\"><img src=\"http://luci.ics.uci.edu/blog/archives/LUCIhorzTight.jpg\" alt=\"LUCI Code Repository\" /></a>\n      </div>\n      <form id=\"search\" action=\"/LUCICodeRepository/nomaticIM/search\" method=\"get\">\n        <div>\n          <label for=\"proj-search\">Search:</label>\n          <input type=\"text\" id=\"proj-search\" name=\"q\" size=\"18\" value=\"\" />\n          <input type=\"submit\" value=\"Search\" />\n        </div>\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/login\">Login</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/prefs\">Preferences</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\">Help/Guide</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/wiki\">Wiki</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/timeline\">Timeline</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/roadmap\">Roadmap</a></li><li class=\"active\"><a href=\"/LUCICodeRepository/nomaticIM/browser\">Browse Source</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/report\">View Tickets</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/search\">Search</a></li>\n    </ul>\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/buddy_bots/twisted/internet/process.py?annotate=blame\" title=\"Annotate each line with the last changed revision (this can be time consuming...)\">Blame</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/log/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/process.py\">Revision Log</a></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"browser\">\n        <h1>\n          \n<a class=\"pathentry first\" href=\"/LUCICodeRepository/nomaticIM/browser?order=name\" title=\"Go to repository root\">source:</a>\n<a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic?order=name\" title=\"View nomatic\">nomatic</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags?order=name\" title=\"View tags\">tags</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5?order=name\" title=\"View NomaticIM-0.0.5\">NomaticIM-0.0.5</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots?order=name\" title=\"View buddy_bots\">buddy_bots</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src?order=name\" title=\"View src\">src</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted?order=name\" title=\"View twisted\">twisted</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet?order=name\" title=\"View internet\">internet</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/process.py?order=name\" title=\"View process.py\">process.py</a>\n<br style=\"clear: both\" />\n\n        </h1>\n        <div id=\"diffrev\">\n          <form action=\"/LUCICodeRepository/nomaticIM/changeset\" method=\"get\">\n            <div>\n              <label title=\"Show the diff against a specific revision\">\n                View diff against: <input type=\"text\" name=\"old\" size=\"6\" />\n                <input type=\"hidden\" name=\"old_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/process.py\" />\n                <input type=\"hidden\" name=\"new\" />\n                <input type=\"hidden\" name=\"new_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/process.py\" />\n              </label>\n            </div>\n          </form>\n        </div>\n        <div id=\"jumprev\">\n          <form action=\"\" method=\"get\">\n            <div>\n              <label for=\"rev\">\n                View revision:</label>\n              <input type=\"text\" id=\"rev\" name=\"rev\" size=\"6\" />\n            </div>\n          </form>\n        </div>\n        <div id=\"jumploc\">\n          <form action=\"\" method=\"get\">\n            <div class=\"buttons\">\n              <label for=\"preselected\">Visit:</label>\n              <select id=\"preselected\" name=\"preselected\">\n                <option selected=\"selected\"></option>\n                <optgroup label=\"branches\">\n                  <option value=\"/LUCICodeRepository/nomaticIM/browser/trunk\">trunk</option>\n                </optgroup>\n              </select>\n              <input type=\"submit\" value=\"Go!\" title=\"Jump to the chosen preselected path\" />\n            </div>\n          </form>\n        </div>\n        <div class=\"trac-tags\">\n        </div>\n      <table id=\"info\" summary=\"Revision info\">\n        <tr>\n          <th>\n                <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/nomatic/trunk/buddy_bots/twisted/internet/process.py\" title=\"View differences\">Last change</a>\n                  on this file was\n                  <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/\" title=\"View changeset 712\">712</a>,\n                  checked in by cbaker, <a class=\"timeline\" href=\"/LUCICodeRepository/nomaticIM/timeline?from=2008-02-16T08%3A16%3A53-08%3A00&amp;precision=second\" title=\"See timeline at Feb 16, 2008, 8:16:53 AM\">7 years ago</a>\n          </th>\n        </tr>\n        <tr>\n          <td class=\"message searchable\">\n              <p>\nFirst draft of nomatic buddy bots. oscar_bot is functional if you give it good authentication credentials, jabber_bot is just an example from the web <br />\n</p>\n          </td>\n        </tr>\n        <tr><td colspan=\"2\">\n            <strong>File size:</strong>\n            <span title=\"32187 bytes\">31.4 KB</span>\n          </td></tr>\n      </table>\n      <div id=\"preview\" class=\"searchable\">\n        \n  <table class=\"code\"><thead><tr><th class=\"lineno\" title=\"Line numbers\">Line</th><th class=\"content\">\u00a0</th></tr></thead><tbody><tr><th id=\"L1\"><a href=\"#L1\">1</a></th><td><span class=\"c\"># -*- test-case-name: twisted.test.test_process -*-</span></td></tr><tr><th id=\"L2\"><a href=\"#L2\">2</a></th><td></td></tr><tr><th id=\"L3\"><a href=\"#L3\">3</a></th><td><span class=\"c\"># Copyright (c) 2001-2004 Twisted Matrix Laboratories.</span></td></tr><tr><th id=\"L4\"><a href=\"#L4\">4</a></th><td><span class=\"c\"># See LICENSE for details.</span></td></tr><tr><th id=\"L5\"><a href=\"#L5\">5</a></th><td></td></tr><tr><th id=\"L6\"><a href=\"#L6\">6</a></th><td></td></tr><tr><th id=\"L7\"><a href=\"#L7\">7</a></th><td><span class=\"sd\">\"\"\"UNIX Process management.</span></td></tr><tr><th id=\"L8\"><a href=\"#L8\">8</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L9\"><a href=\"#L9\">9</a></th><td><span class=\"sd\">Do NOT use this module directly - use reactor.spawnProcess() instead.</span></td></tr><tr><th id=\"L10\"><a href=\"#L10\">10</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L11\"><a href=\"#L11\">11</a></th><td><span class=\"sd\">Maintainer: U{Itamar Shtull-Trauring&lt;mailto:twisted@itamarst.org&gt;}</span></td></tr><tr><th id=\"L12\"><a href=\"#L12\">12</a></th><td><span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L13\"><a href=\"#L13\">13</a></th><td></td></tr><tr><th id=\"L14\"><a href=\"#L14\">14</a></th><td><span class=\"c\"># System Imports</span></td></tr><tr><th id=\"L15\"><a href=\"#L15\">15</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">os</span><span class=\"o\">,</span>\u00a0<span class=\"nn\">sys</span><span class=\"o\">,</span>\u00a0<span class=\"nn\">traceback</span><span class=\"o\">,</span>\u00a0<span class=\"nn\">select</span><span class=\"o\">,</span>\u00a0<span class=\"nn\">errno</span><span class=\"o\">,</span>\u00a0<span class=\"nn\">struct</span><span class=\"o\">,</span>\u00a0<span class=\"nn\">cStringIO</span><span class=\"o\">,</span>\u00a0<span class=\"nn\">types</span><span class=\"o\">,</span>\u00a0<span class=\"nn\">signal</span></td></tr><tr><th id=\"L16\"><a href=\"#L16\">16</a></th><td></td></tr><tr><th id=\"L17\"><a href=\"#L17\">17</a></th><td><span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L18\"><a href=\"#L18\">18</a></th><td>\u00a0 \u00a0 <span class=\"kn\">import</span>\u00a0<span class=\"nn\">pty</span></td></tr><tr><th id=\"L19\"><a href=\"#L19\">19</a></th><td><span class=\"k\">except</span>\u00a0<span class=\"ne\">ImportError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L20\"><a href=\"#L20\">20</a></th><td>\u00a0 \u00a0 pty <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L21\"><a href=\"#L21\">21</a></th><td></td></tr><tr><th id=\"L22\"><a href=\"#L22\">22</a></th><td><span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L23\"><a href=\"#L23\">23</a></th><td>\u00a0 \u00a0 <span class=\"kn\">import</span>\u00a0<span class=\"nn\">fcntl</span><span class=\"o\">,</span>\u00a0<span class=\"nn\">termios</span></td></tr><tr><th id=\"L24\"><a href=\"#L24\">24</a></th><td><span class=\"k\">except</span>\u00a0<span class=\"ne\">ImportError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L25\"><a href=\"#L25\">25</a></th><td>\u00a0 \u00a0 fcntl <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L26\"><a href=\"#L26\">26</a></th><td></td></tr><tr><th id=\"L27\"><a href=\"#L27\">27</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.persisted</span>\u00a0<span class=\"kn\">import</span>\u00a0styles</td></tr><tr><th id=\"L28\"><a href=\"#L28\">28</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.python</span>\u00a0<span class=\"kn\">import</span>\u00a0log<span class=\"p\">,</span>\u00a0failure</td></tr><tr><th id=\"L29\"><a href=\"#L29\">29</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.python.util</span>\u00a0<span class=\"kn\">import</span>\u00a0switchUID</td></tr><tr><th id=\"L30\"><a href=\"#L30\">30</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet</span>\u00a0<span class=\"kn\">import</span>\u00a0protocol</td></tr><tr><th id=\"L31\"><a href=\"#L31\">31</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet.error</span>\u00a0<span class=\"kn\">import</span>\u00a0ProcessExitedAlready</td></tr><tr><th id=\"L32\"><a href=\"#L32\">32</a></th><td></td></tr><tr><th id=\"L33\"><a href=\"#L33\">33</a></th><td><span class=\"c\"># Sibling Imports</span></td></tr><tr><th id=\"L34\"><a href=\"#L34\">34</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">abstract</span><span class=\"o\">,</span>\u00a0<span class=\"nn\">fdesc</span><span class=\"o\">,</span>\u00a0<span class=\"nn\">error</span></td></tr><tr><th id=\"L35\"><a href=\"#L35\">35</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">main</span>\u00a0<span class=\"kn\">import</span>\u00a0CONNECTION_LOST<span class=\"p\">,</span>\u00a0CONNECTION_DONE</td></tr><tr><th id=\"L36\"><a href=\"#L36\">36</a></th><td></td></tr><tr><th id=\"L37\"><a href=\"#L37\">37</a></th><td></td></tr><tr><th id=\"L38\"><a href=\"#L38\">38</a></th><td>reapProcessHandlers <span class=\"o\">=</span>\u00a0<span class=\"p\">{}</span></td></tr><tr><th id=\"L39\"><a href=\"#L39\">39</a></th><td></td></tr><tr><th id=\"L40\"><a href=\"#L40\">40</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">reapAllProcesses</span><span class=\"p\">():</span></td></tr><tr><th id=\"L41\"><a href=\"#L41\">41</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Reap all registered processes.</span></td></tr><tr><th id=\"L42\"><a href=\"#L42\">42</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L43\"><a href=\"#L43\">43</a></th><td>\u00a0 \u00a0 <span class=\"k\">for</span>\u00a0process <span class=\"ow\">in</span>\u00a0reapProcessHandlers<span class=\"o\">.</span>values<span class=\"p\">():</span></td></tr><tr><th id=\"L44\"><a href=\"#L44\">44</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 process<span class=\"o\">.</span>reapProcess<span class=\"p\">()</span></td></tr><tr><th id=\"L45\"><a href=\"#L45\">45</a></th><td></td></tr><tr><th id=\"L46\"><a href=\"#L46\">46</a></th><td></td></tr><tr><th id=\"L47\"><a href=\"#L47\">47</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">registerReapProcessHandler</span><span class=\"p\">(</span>pid<span class=\"p\">,</span>\u00a0process<span class=\"p\">):</span></td></tr><tr><th id=\"L48\"><a href=\"#L48\">48</a></th><td>\u00a0 \u00a0 <span class=\"k\">if</span>\u00a0reapProcessHandlers<span class=\"o\">.</span>has_key<span class=\"p\">(</span>pid<span class=\"p\">):</span></td></tr><tr><th id=\"L49\"><a href=\"#L49\">49</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">RuntimeError</span></td></tr><tr><th id=\"L50\"><a href=\"#L50\">50</a></th><td>\u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L51\"><a href=\"#L51\">51</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 aux_pid<span class=\"p\">,</span>\u00a0status <span class=\"o\">=</span>\u00a0os<span class=\"o\">.</span>waitpid<span class=\"p\">(</span>pid<span class=\"p\">,</span>\u00a0os<span class=\"o\">.</span>WNOHANG<span class=\"p\">)</span></td></tr><tr><th id=\"L52\"><a href=\"#L52\">52</a></th><td>\u00a0 \u00a0 <span class=\"k\">except</span><span class=\"p\">:</span></td></tr><tr><th id=\"L53\"><a href=\"#L53\">53</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 log<span class=\"o\">.</span>msg<span class=\"p\">(</span><span class=\"s\">'Failed to reap </span><span class=\"si\">%d</span><span class=\"s\">:'</span>\u00a0<span class=\"o\">%</span>\u00a0pid<span class=\"p\">)</span></td></tr><tr><th id=\"L54\"><a href=\"#L54\">54</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 log<span class=\"o\">.</span>err<span class=\"p\">()</span></td></tr><tr><th id=\"L55\"><a href=\"#L55\">55</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 aux_pid <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L56\"><a href=\"#L56\">56</a></th><td>\u00a0 \u00a0 <span class=\"k\">if</span>\u00a0aux_pid<span class=\"p\">:</span></td></tr><tr><th id=\"L57\"><a href=\"#L57\">57</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 process<span class=\"o\">.</span>processEnded<span class=\"p\">(</span>status<span class=\"p\">)</span></td></tr><tr><th id=\"L58\"><a href=\"#L58\">58</a></th><td>\u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L59\"><a href=\"#L59\">59</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 reapProcessHandlers<span class=\"p\">[</span>pid<span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0process</td></tr><tr><th id=\"L60\"><a href=\"#L60\">60</a></th><td></td></tr><tr><th id=\"L61\"><a href=\"#L61\">61</a></th><td></td></tr><tr><th id=\"L62\"><a href=\"#L62\">62</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">unregisterReapProcessHandler</span><span class=\"p\">(</span>pid<span class=\"p\">,</span>\u00a0process<span class=\"p\">):</span></td></tr><tr><th id=\"L63\"><a href=\"#L63\">63</a></th><td>\u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"p\">(</span>reapProcessHandlers<span class=\"o\">.</span>has_key<span class=\"p\">(</span>pid<span class=\"p\">)</span></td></tr><tr><th id=\"L64\"><a href=\"#L64\">64</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"ow\">and</span>\u00a0reapProcessHandlers<span class=\"p\">[</span>pid<span class=\"p\">]</span>\u00a0<span class=\"o\">==</span>\u00a0process<span class=\"p\">):</span></td></tr><tr><th id=\"L65\"><a href=\"#L65\">65</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">RuntimeError</span></td></tr><tr><th id=\"L66\"><a href=\"#L66\">66</a></th><td>\u00a0 \u00a0 <span class=\"k\">del</span>\u00a0reapProcessHandlers<span class=\"p\">[</span>pid<span class=\"p\">]</span></td></tr><tr><th id=\"L67\"><a href=\"#L67\">67</a></th><td></td></tr><tr><th id=\"L68\"><a href=\"#L68\">68</a></th><td></td></tr><tr><th id=\"L69\"><a href=\"#L69\">69</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">detectLinuxBrokenPipeBehavior</span><span class=\"p\">():</span></td></tr><tr><th id=\"L70\"><a href=\"#L70\">70</a></th><td>\u00a0 \u00a0 <span class=\"k\">global</span>\u00a0brokenLinuxPipeBehavior</td></tr><tr><th id=\"L71\"><a href=\"#L71\">71</a></th><td>\u00a0 \u00a0 r<span class=\"p\">,</span>w <span class=\"o\">=</span>\u00a0os<span class=\"o\">.</span>pipe<span class=\"p\">()</span></td></tr><tr><th id=\"L72\"><a href=\"#L72\">72</a></th><td>\u00a0 \u00a0 os<span class=\"o\">.</span>write<span class=\"p\">(</span>w<span class=\"p\">,</span>\u00a0<span class=\"s\">'a'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L73\"><a href=\"#L73\">73</a></th><td>\u00a0 \u00a0 reads<span class=\"p\">,</span>\u00a0writes<span class=\"p\">,</span>\u00a0exes <span class=\"o\">=</span>\u00a0select<span class=\"o\">.</span>select<span class=\"p\">([</span>w<span class=\"p\">],</span>\u00a0<span class=\"p\">[],</span>\u00a0<span class=\"p\">[],</span>\u00a0<span class=\"mi\">0</span><span class=\"p\">)</span></td></tr><tr><th id=\"L74\"><a href=\"#L74\">74</a></th><td>\u00a0 \u00a0 <span class=\"k\">if</span>\u00a0reads<span class=\"p\">:</span></td></tr><tr><th id=\"L75\"><a href=\"#L75\">75</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Linux &lt; 2.6.11 says a write-only pipe is readable.</span></td></tr><tr><th id=\"L76\"><a href=\"#L76\">76</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 brokenLinuxPipeBehavior <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L77\"><a href=\"#L77\">77</a></th><td>\u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L78\"><a href=\"#L78\">78</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 brokenLinuxPipeBehavior <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L79\"><a href=\"#L79\">79</a></th><td>\u00a0 \u00a0 os<span class=\"o\">.</span>close<span class=\"p\">(</span>r<span class=\"p\">)</span></td></tr><tr><th id=\"L80\"><a href=\"#L80\">80</a></th><td>\u00a0 \u00a0 os<span class=\"o\">.</span>close<span class=\"p\">(</span>w<span class=\"p\">)</span></td></tr><tr><th id=\"L81\"><a href=\"#L81\">81</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L82\"><a href=\"#L82\">82</a></th><td><span class=\"c\"># Call at import time</span></td></tr><tr><th id=\"L83\"><a href=\"#L83\">83</a></th><td>detectLinuxBrokenPipeBehavior<span class=\"p\">()</span></td></tr><tr><th id=\"L84\"><a href=\"#L84\">84</a></th><td></td></tr><tr><th id=\"L85\"><a href=\"#L85\">85</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">ProcessWriter</span><span class=\"p\">(</span>abstract<span class=\"o\">.</span>FileDescriptor<span class=\"p\">):</span></td></tr><tr><th id=\"L86\"><a href=\"#L86\">86</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"(Internal) Helper class to write into a Process's input pipe.</span></td></tr><tr><th id=\"L87\"><a href=\"#L87\">87</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L88\"><a href=\"#L88\">88</a></th><td><span class=\"sd\">\u00a0 \u00a0 I am a helper which describes a selectable asynchronous writer to a</span></td></tr><tr><th id=\"L89\"><a href=\"#L89\">89</a></th><td><span class=\"sd\">\u00a0 \u00a0 process's input pipe, including stdin.</span></td></tr><tr><th id=\"L90\"><a href=\"#L90\">90</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L91\"><a href=\"#L91\">91</a></th><td>\u00a0 \u00a0 connected <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L92\"><a href=\"#L92\">92</a></th><td>\u00a0 \u00a0 ic <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L93\"><a href=\"#L93\">93</a></th><td>\u00a0 \u00a0 enableReadHack <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L94\"><a href=\"#L94\">94</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L95\"><a href=\"#L95\">95</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reactor<span class=\"p\">,</span>\u00a0proc<span class=\"p\">,</span>\u00a0name<span class=\"p\">,</span>\u00a0fileno<span class=\"p\">,</span>\u00a0forceReadHack<span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">):</span></td></tr><tr><th id=\"L96\"><a href=\"#L96\">96</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Initialize, specifying a Process instance to connect to.</span></td></tr><tr><th id=\"L97\"><a href=\"#L97\">97</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L98\"><a href=\"#L98\">98</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 abstract<span class=\"o\">.</span>FileDescriptor<span class=\"o\">.</span>__init__<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reactor<span class=\"p\">)</span></td></tr><tr><th id=\"L99\"><a href=\"#L99\">99</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 fdesc<span class=\"o\">.</span>setNonBlocking<span class=\"p\">(</span>fileno<span class=\"p\">)</span></td></tr><tr><th id=\"L100\"><a href=\"#L100\">100</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>proc <span class=\"o\">=</span>\u00a0proc</td></tr><tr><th id=\"L101\"><a href=\"#L101\">101</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>name <span class=\"o\">=</span>\u00a0name</td></tr><tr><th id=\"L102\"><a href=\"#L102\">102</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>fd <span class=\"o\">=</span>\u00a0fileno</td></tr><tr><th id=\"L103\"><a href=\"#L103\">103</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 </td></tr><tr><th id=\"L104\"><a href=\"#L104\">104</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0forceReadHack<span class=\"p\">:</span></td></tr><tr><th id=\"L105\"><a href=\"#L105\">105</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>enableReadHack <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L106\"><a href=\"#L106\">106</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L107\"><a href=\"#L107\">107</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Detect if this fd is actually a write-only fd. If it's</span></td></tr><tr><th id=\"L108\"><a href=\"#L108\">108</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># valid to read, don't try to detect closing via read.</span></td></tr><tr><th id=\"L109\"><a href=\"#L109\">109</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># This really only means that we cannot detect a TTY's write</span></td></tr><tr><th id=\"L110\"><a href=\"#L110\">110</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># pipe being closed.</span></td></tr><tr><th id=\"L111\"><a href=\"#L111\">111</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L112\"><a href=\"#L112\">112</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>read<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>fileno<span class=\"p\">(),</span>\u00a0<span class=\"mi\">0</span><span class=\"p\">)</span></td></tr><tr><th id=\"L113\"><a href=\"#L113\">113</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">OSError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L114\"><a href=\"#L114\">114</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># It's a write-only pipe end, enable hack</span></td></tr><tr><th id=\"L115\"><a href=\"#L115\">115</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>enableReadHack <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L116\"><a href=\"#L116\">116</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 </td></tr><tr><th id=\"L117\"><a href=\"#L117\">117</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>enableReadHack<span class=\"p\">:</span></td></tr><tr><th id=\"L118\"><a href=\"#L118\">118</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>startReading<span class=\"p\">()</span></td></tr><tr><th id=\"L119\"><a href=\"#L119\">119</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 </td></tr><tr><th id=\"L120\"><a href=\"#L120\">120</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">fileno</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L121\"><a href=\"#L121\">121</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Return the fileno() of my process's stdin.</span></td></tr><tr><th id=\"L122\"><a href=\"#L122\">122</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L123\"><a href=\"#L123\">123</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>fd</td></tr><tr><th id=\"L124\"><a href=\"#L124\">124</a></th><td></td></tr><tr><th id=\"L125\"><a href=\"#L125\">125</a></th><td>\u00a0 \u00a0 <span class=\"c\"># Copy relevant parts of the protocol</span></td></tr><tr><th id=\"L126\"><a href=\"#L126\">126</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">writeSomeData</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0data<span class=\"p\">):</span></td></tr><tr><th id=\"L127\"><a href=\"#L127\">127</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Write some data to the open process.</span></td></tr><tr><th id=\"L128\"><a href=\"#L128\">128</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L129\"><a href=\"#L129\">129</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L130\"><a href=\"#L130\">130</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 rv <span class=\"o\">=</span>\u00a0os<span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>fd<span class=\"p\">,</span>\u00a0data<span class=\"p\">)</span></td></tr><tr><th id=\"L131\"><a href=\"#L131\">131</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0rv <span class=\"o\">==</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span>data<span class=\"p\">)</span>\u00a0<span class=\"ow\">and</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>enableReadHack<span class=\"p\">:</span></td></tr><tr><th id=\"L132\"><a href=\"#L132\">132</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>startReading<span class=\"p\">()</span></td></tr><tr><th id=\"L133\"><a href=\"#L133\">133</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0rv</td></tr><tr><th id=\"L134\"><a href=\"#L134\">134</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">IOError</span><span class=\"p\">,</span>\u00a0io<span class=\"p\">:</span></td></tr><tr><th id=\"L135\"><a href=\"#L135\">135</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0io<span class=\"o\">.</span>args<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\u00a0<span class=\"o\">==</span>\u00a0errno<span class=\"o\">.</span>EAGAIN<span class=\"p\">:</span></td></tr><tr><th id=\"L136\"><a href=\"#L136\">136</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L137\"><a href=\"#L137\">137</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0CONNECTION_LOST</td></tr><tr><th id=\"L138\"><a href=\"#L138\">138</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">OSError</span><span class=\"p\">,</span>\u00a0ose<span class=\"p\">:</span></td></tr><tr><th id=\"L139\"><a href=\"#L139\">139</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0ose<span class=\"o\">.</span>errno <span class=\"o\">==</span>\u00a0errno<span class=\"o\">.</span>EPIPE<span class=\"p\">:</span></td></tr><tr><th id=\"L140\"><a href=\"#L140\">140</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0CONNECTION_LOST</td></tr><tr><th id=\"L141\"><a href=\"#L141\">141</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0ose<span class=\"o\">.</span>errno <span class=\"o\">==</span>\u00a0errno<span class=\"o\">.</span>EAGAIN<span class=\"p\">:</span>\u00a0<span class=\"c\"># MacOS-X does this</span></td></tr><tr><th id=\"L142\"><a href=\"#L142\">142</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L143\"><a href=\"#L143\">143</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span></td></tr><tr><th id=\"L144\"><a href=\"#L144\">144</a></th><td></td></tr><tr><th id=\"L145\"><a href=\"#L145\">145</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">write</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0data<span class=\"p\">):</span></td></tr><tr><th id=\"L146\"><a href=\"#L146\">146</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>stopReading<span class=\"p\">()</span></td></tr><tr><th id=\"L147\"><a href=\"#L147\">147</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 abstract<span class=\"o\">.</span>FileDescriptor<span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0data<span class=\"p\">)</span></td></tr><tr><th id=\"L148\"><a href=\"#L148\">148</a></th><td></td></tr><tr><th id=\"L149\"><a href=\"#L149\">149</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">doRead</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L150\"><a href=\"#L150\">150</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"The only way a write pipe can become \"readable\" is at EOF, because the</span></td></tr><tr><th id=\"L151\"><a href=\"#L151\">151</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 child has closed it, and we're using a reactor which doesn't distinguish</span></td></tr><tr><th id=\"L152\"><a href=\"#L152\">152</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 between readable and closed (such as the select reactor).</span></td></tr><tr><th id=\"L153\"><a href=\"#L153\">153</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 </span></td></tr><tr><th id=\"L154\"><a href=\"#L154\">154</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Except that's not true on linux &lt; 2.6.11. It has the following characteristics:</span></td></tr><tr><th id=\"L155\"><a href=\"#L155\">155</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 write pipe is completely empty =&gt; POLLOUT (writable in select)</span></td></tr><tr><th id=\"L156\"><a href=\"#L156\">156</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 write pipe is not completely empty =&gt; POLLIN (readable in select)</span></td></tr><tr><th id=\"L157\"><a href=\"#L157\">157</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 write pipe's reader closed =&gt; POLLIN|POLLERR (readable and writable in select)</span></td></tr><tr><th id=\"L158\"><a href=\"#L158\">158</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 </span></td></tr><tr><th id=\"L159\"><a href=\"#L159\">159</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 That's what this funky code is for. If linux was not broken, this function could</span></td></tr><tr><th id=\"L160\"><a href=\"#L160\">160</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 be simply \"return CONNECTION_LOST\".</span></td></tr><tr><th id=\"L161\"><a href=\"#L161\">161</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 </span></td></tr><tr><th id=\"L162\"><a href=\"#L162\">162</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 BUG: We call select no matter what the reactor.</span></td></tr><tr><th id=\"L163\"><a href=\"#L163\">163</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 If the reactor is pollreactor, and the fd is &gt; 1024, this will fail.</span></td></tr><tr><th id=\"L164\"><a href=\"#L164\">164</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 (only occurs on broken versions of linux, though).</span></td></tr><tr><th id=\"L165\"><a href=\"#L165\">165</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L166\"><a href=\"#L166\">166</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>enableReadHack<span class=\"p\">:</span></td></tr><tr><th id=\"L167\"><a href=\"#L167\">167</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0brokenLinuxPipeBehavior<span class=\"p\">:</span></td></tr><tr><th id=\"L168\"><a href=\"#L168\">168</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fd <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>fd</td></tr><tr><th id=\"L169\"><a href=\"#L169\">169</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 r<span class=\"p\">,</span>\u00a0w<span class=\"p\">,</span>\u00a0x <span class=\"o\">=</span>\u00a0select<span class=\"o\">.</span>select<span class=\"p\">([</span>fd<span class=\"p\">],</span>\u00a0<span class=\"p\">[</span>fd<span class=\"p\">],</span>\u00a0<span class=\"p\">[],</span>\u00a0<span class=\"mi\">0</span><span class=\"p\">)</span></td></tr><tr><th id=\"L170\"><a href=\"#L170\">170</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0r <span class=\"ow\">and</span>\u00a0w<span class=\"p\">:</span></td></tr><tr><th id=\"L171\"><a href=\"#L171\">171</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0CONNECTION_LOST</td></tr><tr><th id=\"L172\"><a href=\"#L172\">172</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L173\"><a href=\"#L173\">173</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0CONNECTION_LOST</td></tr><tr><th id=\"L174\"><a href=\"#L174\">174</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L175\"><a href=\"#L175\">175</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>stopReading<span class=\"p\">()</span></td></tr><tr><th id=\"L176\"><a href=\"#L176\">176</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 </td></tr><tr><th id=\"L177\"><a href=\"#L177\">177</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectionLost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reason<span class=\"p\">):</span></td></tr><tr><th id=\"L178\"><a href=\"#L178\">178</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"See abstract.FileDescriptor.connectionLost.</span></td></tr><tr><th id=\"L179\"><a href=\"#L179\">179</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L180\"><a href=\"#L180\">180</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 abstract<span class=\"o\">.</span>FileDescriptor<span class=\"o\">.</span>connectionLost<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reason<span class=\"p\">)</span></td></tr><tr><th id=\"L181\"><a href=\"#L181\">181</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>proc<span class=\"o\">.</span>childConnectionLost<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>name<span class=\"p\">,</span>\u00a0reason<span class=\"p\">)</span></td></tr><tr><th id=\"L182\"><a href=\"#L182\">182</a></th><td></td></tr><tr><th id=\"L183\"><a href=\"#L183\">183</a></th><td></td></tr><tr><th id=\"L184\"><a href=\"#L184\">184</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">ProcessReader</span><span class=\"p\">(</span>abstract<span class=\"o\">.</span>FileDescriptor<span class=\"p\">):</span></td></tr><tr><th id=\"L185\"><a href=\"#L185\">185</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"ProcessReader</span></td></tr><tr><th id=\"L186\"><a href=\"#L186\">186</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L187\"><a href=\"#L187\">187</a></th><td><span class=\"sd\">\u00a0 \u00a0 I am a selectable representation of a process's output pipe, such as</span></td></tr><tr><th id=\"L188\"><a href=\"#L188\">188</a></th><td><span class=\"sd\">\u00a0 \u00a0 stdout and stderr.</span></td></tr><tr><th id=\"L189\"><a href=\"#L189\">189</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L190\"><a href=\"#L190\">190</a></th><td>\u00a0 \u00a0 connected <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L191\"><a href=\"#L191\">191</a></th><td></td></tr><tr><th id=\"L192\"><a href=\"#L192\">192</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reactor<span class=\"p\">,</span>\u00a0proc<span class=\"p\">,</span>\u00a0name<span class=\"p\">,</span>\u00a0fileno<span class=\"p\">):</span></td></tr><tr><th id=\"L193\"><a href=\"#L193\">193</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Initialize, specifying a process to connect to.</span></td></tr><tr><th id=\"L194\"><a href=\"#L194\">194</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L195\"><a href=\"#L195\">195</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 abstract<span class=\"o\">.</span>FileDescriptor<span class=\"o\">.</span>__init__<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reactor<span class=\"p\">)</span></td></tr><tr><th id=\"L196\"><a href=\"#L196\">196</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 fdesc<span class=\"o\">.</span>setNonBlocking<span class=\"p\">(</span>fileno<span class=\"p\">)</span></td></tr><tr><th id=\"L197\"><a href=\"#L197\">197</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>proc <span class=\"o\">=</span>\u00a0proc</td></tr><tr><th id=\"L198\"><a href=\"#L198\">198</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>name <span class=\"o\">=</span>\u00a0name</td></tr><tr><th id=\"L199\"><a href=\"#L199\">199</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>fd <span class=\"o\">=</span>\u00a0fileno</td></tr><tr><th id=\"L200\"><a href=\"#L200\">200</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>startReading<span class=\"p\">()</span></td></tr><tr><th id=\"L201\"><a href=\"#L201\">201</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 </td></tr><tr><th id=\"L202\"><a href=\"#L202\">202</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">fileno</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L203\"><a href=\"#L203\">203</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Return the fileno() of my process's stderr.</span></td></tr><tr><th id=\"L204\"><a href=\"#L204\">204</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L205\"><a href=\"#L205\">205</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>fd</td></tr><tr><th id=\"L206\"><a href=\"#L206\">206</a></th><td></td></tr><tr><th id=\"L207\"><a href=\"#L207\">207</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">writeSomeData</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0data<span class=\"p\">):</span></td></tr><tr><th id=\"L208\"><a href=\"#L208\">208</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># the only time this is actually called is after .loseConnection Any</span></td></tr><tr><th id=\"L209\"><a href=\"#L209\">209</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># actual write attempt would fail, so we must avoid that. This hack</span></td></tr><tr><th id=\"L210\"><a href=\"#L210\">210</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># allows us to use .loseConnection on both readers and writers.</span></td></tr><tr><th id=\"L211\"><a href=\"#L211\">211</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">assert</span>\u00a0data <span class=\"o\">==</span>\u00a0<span class=\"s\">\"\"</span></td></tr><tr><th id=\"L212\"><a href=\"#L212\">212</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0CONNECTION_LOST</td></tr><tr><th id=\"L213\"><a href=\"#L213\">213</a></th><td></td></tr><tr><th id=\"L214\"><a href=\"#L214\">214</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">doRead</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L215\"><a href=\"#L215\">215</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"This is called when the pipe becomes readable.</span></td></tr><tr><th id=\"L216\"><a href=\"#L216\">216</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L217\"><a href=\"#L217\">217</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0fdesc<span class=\"o\">.</span>readFromFD<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>fd<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>dataReceived<span class=\"p\">)</span></td></tr><tr><th id=\"L218\"><a href=\"#L218\">218</a></th><td></td></tr><tr><th id=\"L219\"><a href=\"#L219\">219</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">dataReceived</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0data<span class=\"p\">):</span></td></tr><tr><th id=\"L220\"><a href=\"#L220\">220</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>proc<span class=\"o\">.</span>childDataReceived<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>name<span class=\"p\">,</span>\u00a0data<span class=\"p\">)</span></td></tr><tr><th id=\"L221\"><a href=\"#L221\">221</a></th><td></td></tr><tr><th id=\"L222\"><a href=\"#L222\">222</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">loseConnection</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L223\"><a href=\"#L223\">223</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>connected <span class=\"ow\">and</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>disconnecting<span class=\"p\">:</span></td></tr><tr><th id=\"L224\"><a href=\"#L224\">224</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>disconnecting <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L225\"><a href=\"#L225\">225</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>stopReading<span class=\"p\">()</span></td></tr><tr><th id=\"L226\"><a href=\"#L226\">226</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>reactor<span class=\"o\">.</span>callLater<span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>connectionLost<span class=\"p\">,</span>\u00a0failure<span class=\"o\">.</span>Failure<span class=\"p\">(</span>CONNECTION_DONE<span class=\"p\">))</span></td></tr><tr><th id=\"L227\"><a href=\"#L227\">227</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L228\"><a href=\"#L228\">228</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectionLost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reason<span class=\"p\">):</span></td></tr><tr><th id=\"L229\"><a href=\"#L229\">229</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Close my end of the pipe, signal the Process (which signals the</span></td></tr><tr><th id=\"L230\"><a href=\"#L230\">230</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 ProcessProtocol).</span></td></tr><tr><th id=\"L231\"><a href=\"#L231\">231</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L232\"><a href=\"#L232\">232</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 abstract<span class=\"o\">.</span>FileDescriptor<span class=\"o\">.</span>connectionLost<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reason<span class=\"p\">)</span></td></tr><tr><th id=\"L233\"><a href=\"#L233\">233</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>proc<span class=\"o\">.</span>childConnectionLost<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>name<span class=\"p\">,</span>\u00a0reason<span class=\"p\">)</span></td></tr><tr><th id=\"L234\"><a href=\"#L234\">234</a></th><td></td></tr><tr><th id=\"L235\"><a href=\"#L235\">235</a></th><td></td></tr><tr><th id=\"L236\"><a href=\"#L236\">236</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">Process</span><span class=\"p\">(</span>styles<span class=\"o\">.</span>Ephemeral<span class=\"p\">):</span></td></tr><tr><th id=\"L237\"><a href=\"#L237\">237</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"An operating-system Process.</span></td></tr><tr><th id=\"L238\"><a href=\"#L238\">238</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L239\"><a href=\"#L239\">239</a></th><td><span class=\"sd\">\u00a0 \u00a0 This represents an operating-system process with arbitrary input/output</span></td></tr><tr><th id=\"L240\"><a href=\"#L240\">240</a></th><td><span class=\"sd\">\u00a0 \u00a0 pipes connected to it. Those pipes may represent standard input,</span></td></tr><tr><th id=\"L241\"><a href=\"#L241\">241</a></th><td><span class=\"sd\">\u00a0 \u00a0 standard output, and standard error, or any other file descriptor.</span></td></tr><tr><th id=\"L242\"><a href=\"#L242\">242</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L243\"><a href=\"#L243\">243</a></th><td><span class=\"sd\">\u00a0 \u00a0 On UNIX, this is implemented using fork(), exec(), pipe()</span></td></tr><tr><th id=\"L244\"><a href=\"#L244\">244</a></th><td><span class=\"sd\">\u00a0 \u00a0 and fcntl(). These calls may not exist elsewhere so this</span></td></tr><tr><th id=\"L245\"><a href=\"#L245\">245</a></th><td><span class=\"sd\">\u00a0 \u00a0 code is not cross-platform. (also, windows can only select</span></td></tr><tr><th id=\"L246\"><a href=\"#L246\">246</a></th><td><span class=\"sd\">\u00a0 \u00a0 on sockets...)</span></td></tr><tr><th id=\"L247\"><a href=\"#L247\">247</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L248\"><a href=\"#L248\">248</a></th><td></td></tr><tr><th id=\"L249\"><a href=\"#L249\">249</a></th><td>\u00a0 \u00a0 debug <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L250\"><a href=\"#L250\">250</a></th><td>\u00a0 \u00a0 debug_child <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L251\"><a href=\"#L251\">251</a></th><td></td></tr><tr><th id=\"L252\"><a href=\"#L252\">252</a></th><td>\u00a0 \u00a0 status <span class=\"o\">=</span>\u00a0<span class=\"o\">-</span><span class=\"mi\">1</span></td></tr><tr><th id=\"L253\"><a href=\"#L253\">253</a></th><td>\u00a0 \u00a0 pid <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L254\"><a href=\"#L254\">254</a></th><td></td></tr><tr><th id=\"L255\"><a href=\"#L255\">255</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span></td></tr><tr><th id=\"L256\"><a href=\"#L256\">256</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0reactor<span class=\"p\">,</span>\u00a0command<span class=\"p\">,</span>\u00a0args<span class=\"p\">,</span>\u00a0environment<span class=\"p\">,</span>\u00a0path<span class=\"p\">,</span>\u00a0proto<span class=\"p\">,</span></td></tr><tr><th id=\"L257\"><a href=\"#L257\">257</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0uid<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\u00a0gid<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\u00a0childFDs<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L258\"><a href=\"#L258\">258</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Spawn an operating-system process.</span></td></tr><tr><th id=\"L259\"><a href=\"#L259\">259</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L260\"><a href=\"#L260\">260</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This is where the hard work of disconnecting all currently open</span></td></tr><tr><th id=\"L261\"><a href=\"#L261\">261</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 files / forking / executing the new process happens.\u00a0 (This is</span></td></tr><tr><th id=\"L262\"><a href=\"#L262\">262</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 executed automatically when a Process is instantiated.)</span></td></tr><tr><th id=\"L263\"><a href=\"#L263\">263</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L264\"><a href=\"#L264\">264</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This will also run the subprocess as a given user ID and group ID, if</span></td></tr><tr><th id=\"L265\"><a href=\"#L265\">265</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 specified.\u00a0 (Implementation Note: this doesn't support all the arcane</span></td></tr><tr><th id=\"L266\"><a href=\"#L266\">266</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 nuances of setXXuid on UNIX: it will assume that either your effective</span></td></tr><tr><th id=\"L267\"><a href=\"#L267\">267</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 or real UID is 0.)</span></td></tr><tr><th id=\"L268\"><a href=\"#L268\">268</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L269\"><a href=\"#L269\">269</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0proto<span class=\"p\">:</span></td></tr><tr><th id=\"L270\"><a href=\"#L270\">270</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">assert</span>\u00a0<span class=\"s\">'r'</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"ow\">in</span>\u00a0childFDs<span class=\"o\">.</span>values<span class=\"p\">()</span></td></tr><tr><th id=\"L271\"><a href=\"#L271\">271</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">assert</span>\u00a0<span class=\"s\">'w'</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"ow\">in</span>\u00a0childFDs<span class=\"o\">.</span>values<span class=\"p\">()</span></td></tr><tr><th id=\"L272\"><a href=\"#L272\">272</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0signal<span class=\"o\">.</span>getsignal<span class=\"p\">(</span>signal<span class=\"o\">.</span>SIGCHLD<span class=\"p\">):</span></td></tr><tr><th id=\"L273\"><a href=\"#L273\">273</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log<span class=\"o\">.</span>msg<span class=\"p\">(</span><span class=\"s\">\"spawnProcess called, but the SIGCHLD handler is not \"</span></td></tr><tr><th id=\"L274\"><a href=\"#L274\">274</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">\"installed. This probably means you have not yet \"</span></td></tr><tr><th id=\"L275\"><a href=\"#L275\">275</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">\"called reactor.run, or called \"</span></td></tr><tr><th id=\"L276\"><a href=\"#L276\">276</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">\"reactor.run(installSignalHandler=0). You will probably \"</span></td></tr><tr><th id=\"L277\"><a href=\"#L277\">277</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">\"never see this process finish, and it may become a \"</span></td></tr><tr><th id=\"L278\"><a href=\"#L278\">278</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">\"zombie process.\"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L279\"><a href=\"#L279\">279</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># if you see this message during a unit test, look in</span></td></tr><tr><th id=\"L280\"><a href=\"#L280\">280</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># test-standard.xhtml or twisted.test.test_process.SignalMixin</span></td></tr><tr><th id=\"L281\"><a href=\"#L281\">281</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># for a workaround</span></td></tr><tr><th id=\"L282\"><a href=\"#L282\">282</a></th><td></td></tr><tr><th id=\"L283\"><a href=\"#L283\">283</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>lostProcess <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L284\"><a href=\"#L284\">284</a></th><td></td></tr><tr><th id=\"L285\"><a href=\"#L285\">285</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 settingUID <span class=\"o\">=</span>\u00a0<span class=\"p\">(</span>uid <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">)</span>\u00a0<span class=\"ow\">or</span>\u00a0<span class=\"p\">(</span>gid <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">)</span></td></tr><tr><th id=\"L286\"><a href=\"#L286\">286</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0settingUID<span class=\"p\">:</span></td></tr><tr><th id=\"L287\"><a href=\"#L287\">287</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 curegid <span class=\"o\">=</span>\u00a0os<span class=\"o\">.</span>getegid<span class=\"p\">()</span></td></tr><tr><th id=\"L288\"><a href=\"#L288\">288</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 currgid <span class=\"o\">=</span>\u00a0os<span class=\"o\">.</span>getgid<span class=\"p\">()</span></td></tr><tr><th id=\"L289\"><a href=\"#L289\">289</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 cureuid <span class=\"o\">=</span>\u00a0os<span class=\"o\">.</span>geteuid<span class=\"p\">()</span></td></tr><tr><th id=\"L290\"><a href=\"#L290\">290</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 curruid <span class=\"o\">=</span>\u00a0os<span class=\"o\">.</span>getuid<span class=\"p\">()</span></td></tr><tr><th id=\"L291\"><a href=\"#L291\">291</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0uid <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L292\"><a href=\"#L292\">292</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 uid <span class=\"o\">=</span>\u00a0cureuid</td></tr><tr><th id=\"L293\"><a href=\"#L293\">293</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0gid <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L294\"><a href=\"#L294\">294</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 gid <span class=\"o\">=</span>\u00a0curegid</td></tr><tr><th id=\"L295\"><a href=\"#L295\">295</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># prepare to change UID in subprocess</span></td></tr><tr><th id=\"L296\"><a href=\"#L296\">296</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>setuid<span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span></td></tr><tr><th id=\"L297\"><a href=\"#L297\">297</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>setgid<span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span></td></tr><tr><th id=\"L298\"><a href=\"#L298\">298</a></th><td></td></tr><tr><th id=\"L299\"><a href=\"#L299\">299</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>pipes <span class=\"o\">=</span>\u00a0<span class=\"p\">{}</span></td></tr><tr><th id=\"L300\"><a href=\"#L300\">300</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># keys are childFDs, we can sense them closing</span></td></tr><tr><th id=\"L301\"><a href=\"#L301\">301</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># values are ProcessReader/ProcessWriters</span></td></tr><tr><th id=\"L302\"><a href=\"#L302\">302</a></th><td></td></tr><tr><th id=\"L303\"><a href=\"#L303\">303</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 helpers <span class=\"o\">=</span>\u00a0<span class=\"p\">{}</span></td></tr><tr><th id=\"L304\"><a href=\"#L304\">304</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># keys are childFDs</span></td></tr><tr><th id=\"L305\"><a href=\"#L305\">305</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># values are parentFDs</span></td></tr><tr><th id=\"L306\"><a href=\"#L306\">306</a></th><td></td></tr><tr><th id=\"L307\"><a href=\"#L307\">307</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0childFDs <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L308\"><a href=\"#L308\">308</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 childFDs <span class=\"o\">=</span>\u00a0<span class=\"p\">{</span><span class=\"mi\">0</span><span class=\"p\">:</span>\u00a0<span class=\"s\">\"w\"</span><span class=\"p\">,</span>\u00a0<span class=\"c\"># we write to the child's stdin</span></td></tr><tr><th id=\"L309\"><a href=\"#L309\">309</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"mi\">1</span><span class=\"p\">:</span>\u00a0<span class=\"s\">\"r\"</span><span class=\"p\">,</span>\u00a0<span class=\"c\"># we read from their stdout</span></td></tr><tr><th id=\"L310\"><a href=\"#L310\">310</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"mi\">2</span><span class=\"p\">:</span>\u00a0<span class=\"s\">\"r\"</span><span class=\"p\">,</span>\u00a0<span class=\"c\"># and we read from their stderr</span></td></tr><tr><th id=\"L311\"><a href=\"#L311\">311</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"p\">}</span></td></tr><tr><th id=\"L312\"><a href=\"#L312\">312</a></th><td></td></tr><tr><th id=\"L313\"><a href=\"#L313\">313</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 debug <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>debug</td></tr><tr><th id=\"L314\"><a href=\"#L314\">314</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0debug<span class=\"p\">:</span>\u00a0<span class=\"k\">print</span>\u00a0<span class=\"s\">\"childFDs\"</span><span class=\"p\">,</span>\u00a0childFDs</td></tr><tr><th id=\"L315\"><a href=\"#L315\">315</a></th><td></td></tr><tr><th id=\"L316\"><a href=\"#L316\">316</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># fdmap.keys() are filenos of pipes that are used by the child.</span></td></tr><tr><th id=\"L317\"><a href=\"#L317\">317</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 fdmap <span class=\"o\">=</span>\u00a0<span class=\"p\">{}</span>\u00a0<span class=\"c\"># maps childFD to parentFD</span></td></tr><tr><th id=\"L318\"><a href=\"#L318\">318</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0childFD<span class=\"p\">,</span>\u00a0target <span class=\"ow\">in</span>\u00a0childFDs<span class=\"o\">.</span>items<span class=\"p\">():</span></td></tr><tr><th id=\"L319\"><a href=\"#L319\">319</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0debug<span class=\"p\">:</span>\u00a0<span class=\"k\">print</span>\u00a0<span class=\"s\">\"[</span><span class=\"si\">%d</span><span class=\"s\">]\"</span>\u00a0<span class=\"o\">%</span>\u00a0childFD<span class=\"p\">,</span>\u00a0target</td></tr><tr><th id=\"L320\"><a href=\"#L320\">320</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0target <span class=\"o\">==</span>\u00a0<span class=\"s\">\"r\"</span><span class=\"p\">:</span></td></tr><tr><th id=\"L321\"><a href=\"#L321\">321</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># we need a pipe that the parent can read from</span></td></tr><tr><th id=\"L322\"><a href=\"#L322\">322</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 readFD<span class=\"p\">,</span>\u00a0writeFD <span class=\"o\">=</span>\u00a0os<span class=\"o\">.</span>pipe<span class=\"p\">()</span></td></tr><tr><th id=\"L323\"><a href=\"#L323\">323</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0debug<span class=\"p\">:</span>\u00a0<span class=\"k\">print</span>\u00a0<span class=\"s\">\"readFD=</span><span class=\"si\">%d</span><span class=\"s\">, writeFD</span><span class=\"si\">%d</span><span class=\"s\">\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span>readFD<span class=\"p\">,</span>\u00a0writeFD<span class=\"p\">)</span></td></tr><tr><th id=\"L324\"><a href=\"#L324\">324</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fdmap<span class=\"p\">[</span>childFD<span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0writeFD\u00a0 \u00a0 \u00a0<span class=\"c\"># child writes to this</span></td></tr><tr><th id=\"L325\"><a href=\"#L325\">325</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 helpers<span class=\"p\">[</span>childFD<span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0readFD\u00a0 \u00a0 <span class=\"c\"># parent reads from this</span></td></tr><tr><th id=\"L326\"><a href=\"#L326\">326</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0target <span class=\"o\">==</span>\u00a0<span class=\"s\">\"w\"</span><span class=\"p\">:</span></td></tr><tr><th id=\"L327\"><a href=\"#L327\">327</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># we need a pipe that the parent can write to</span></td></tr><tr><th id=\"L328\"><a href=\"#L328\">328</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 readFD<span class=\"p\">,</span>\u00a0writeFD <span class=\"o\">=</span>\u00a0os<span class=\"o\">.</span>pipe<span class=\"p\">()</span></td></tr><tr><th id=\"L329\"><a href=\"#L329\">329</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0debug<span class=\"p\">:</span>\u00a0<span class=\"k\">print</span>\u00a0<span class=\"s\">\"readFD=</span><span class=\"si\">%d</span><span class=\"s\">, writeFD=</span><span class=\"si\">%d</span><span class=\"s\">\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span>readFD<span class=\"p\">,</span>\u00a0writeFD<span class=\"p\">)</span></td></tr><tr><th id=\"L330\"><a href=\"#L330\">330</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fdmap<span class=\"p\">[</span>childFD<span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0readFD\u00a0 \u00a0 \u00a0 <span class=\"c\"># child reads from this</span></td></tr><tr><th id=\"L331\"><a href=\"#L331\">331</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 helpers<span class=\"p\">[</span>childFD<span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0writeFD\u00a0 \u00a0<span class=\"c\"># parent writes to this</span></td></tr><tr><th id=\"L332\"><a href=\"#L332\">332</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L333\"><a href=\"#L333\">333</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">assert</span>\u00a0<span class=\"nb\">type</span><span class=\"p\">(</span>target<span class=\"p\">)</span>\u00a0<span class=\"o\">==</span>\u00a0<span class=\"nb\">int</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'</span><span class=\"si\">%r</span><span class=\"s\">\u00a0should be an int'</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span>target<span class=\"p\">,)</span></td></tr><tr><th id=\"L334\"><a href=\"#L334\">334</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fdmap<span class=\"p\">[</span>childFD<span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0target\u00a0 \u00a0 \u00a0 <span class=\"c\"># parent ignores this</span></td></tr><tr><th id=\"L335\"><a href=\"#L335\">335</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0debug<span class=\"p\">:</span>\u00a0<span class=\"k\">print</span>\u00a0<span class=\"s\">\"fdmap\"</span><span class=\"p\">,</span>\u00a0fdmap</td></tr><tr><th id=\"L336\"><a href=\"#L336\">336</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0debug<span class=\"p\">:</span>\u00a0<span class=\"k\">print</span>\u00a0<span class=\"s\">\"helpers\"</span><span class=\"p\">,</span>\u00a0helpers</td></tr><tr><th id=\"L337\"><a href=\"#L337\">337</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># the child only cares about fdmap.values()</span></td></tr><tr><th id=\"L338\"><a href=\"#L338\">338</a></th><td></td></tr><tr><th id=\"L339\"><a href=\"#L339\">339</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>pid <span class=\"o\">=</span>\u00a0os<span class=\"o\">.</span>fork<span class=\"p\">()</span></td></tr><tr><th id=\"L340\"><a href=\"#L340\">340</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>pid <span class=\"o\">==</span>\u00a0<span class=\"mi\">0</span><span class=\"p\">:</span>\u00a0<span class=\"c\"># pid is 0 in the child process</span></td></tr><tr><th id=\"L341\"><a href=\"#L341\">341</a></th><td></td></tr><tr><th id=\"L342\"><a href=\"#L342\">342</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># do not put *ANY* code outside the try block. The child process</span></td></tr><tr><th id=\"L343\"><a href=\"#L343\">343</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># must either exec or _exit. If it gets outside this block (due</span></td></tr><tr><th id=\"L344\"><a href=\"#L344\">344</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># to an exception that is not handled here, but which might be</span></td></tr><tr><th id=\"L345\"><a href=\"#L345\">345</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># handled higher up), there will be two copies of the parent</span></td></tr><tr><th id=\"L346\"><a href=\"#L346\">346</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># running in parallel, doing all kinds of damage.</span></td></tr><tr><th id=\"L347\"><a href=\"#L347\">347</a></th><td></td></tr><tr><th id=\"L348\"><a href=\"#L348\">348</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># After each change to this code, review it to make sure there</span></td></tr><tr><th id=\"L349\"><a href=\"#L349\">349</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># are no exit paths.</span></td></tr><tr><th id=\"L350\"><a href=\"#L350\">350</a></th><td></td></tr><tr><th id=\"L351\"><a href=\"#L351\">351</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L352\"><a href=\"#L352\">352</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># stop debugging, if I am!\u00a0 I don't care anymore!</span></td></tr><tr><th id=\"L353\"><a href=\"#L353\">353</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 sys<span class=\"o\">.</span>settrace<span class=\"p\">(</span><span class=\"bp\">None</span><span class=\"p\">)</span></td></tr><tr><th id=\"L354\"><a href=\"#L354\">354</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># close all parent-side pipes</span></td></tr><tr><th id=\"L355\"><a href=\"#L355\">355</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_setupChild<span class=\"p\">(</span>fdmap<span class=\"p\">)</span></td></tr><tr><th id=\"L356\"><a href=\"#L356\">356</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_execChild<span class=\"p\">(</span>path<span class=\"p\">,</span>\u00a0settingUID<span class=\"p\">,</span>\u00a0uid<span class=\"p\">,</span>\u00a0gid<span class=\"p\">,</span></td></tr><tr><th id=\"L357\"><a href=\"#L357\">357</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 command<span class=\"p\">,</span>\u00a0args<span class=\"p\">,</span>\u00a0environment<span class=\"p\">)</span></td></tr><tr><th id=\"L358\"><a href=\"#L358\">358</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span><span class=\"p\">:</span></td></tr><tr><th id=\"L359\"><a href=\"#L359\">359</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># If there are errors, bail and try to write something</span></td></tr><tr><th id=\"L360\"><a href=\"#L360\">360</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># descriptive to stderr.</span></td></tr><tr><th id=\"L361\"><a href=\"#L361\">361</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># XXX: The parent's stderr isn't necessarily fd 2 anymore, or</span></td></tr><tr><th id=\"L362\"><a href=\"#L362\">362</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\">#\u00a0 \u00a0 \u00a0 even still available</span></td></tr><tr><th id=\"L363\"><a href=\"#L363\">363</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># XXXX: however even libc assumes write(2,err) is a useful</span></td></tr><tr><th id=\"L364\"><a href=\"#L364\">364</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\">#\u00a0 \u00a0 \u00a0 \u00a0thing to attempt</span></td></tr><tr><th id=\"L365\"><a href=\"#L365\">365</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L366\"><a href=\"#L366\">366</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 stderr <span class=\"o\">=</span>\u00a0os<span class=\"o\">.</span>fdopen<span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"s\">'w'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L367\"><a href=\"#L367\">367</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 stderr<span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"s\">\"Upon execvpe </span><span class=\"si\">%s</span><span class=\"s\">\u00a0</span><span class=\"si\">%s</span><span class=\"s\">\u00a0in environment </span><span class=\"si\">%s</span><span class=\"se\">\\n</span><span class=\"s\">:\"</span>\u00a0<span class=\"o\">%</span></td></tr><tr><th id=\"L368\"><a href=\"#L368\">368</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"p\">(</span>command<span class=\"p\">,</span>\u00a0<span class=\"nb\">str</span><span class=\"p\">(</span>args<span class=\"p\">),</span></td></tr><tr><th id=\"L369\"><a href=\"#L369\">369</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">\"id </span><span class=\"si\">%s</span><span class=\"s\">\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"nb\">id</span><span class=\"p\">(</span>environment<span class=\"p\">)))</span></td></tr><tr><th id=\"L370\"><a href=\"#L370\">370</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 traceback<span class=\"o\">.</span>print_exc<span class=\"p\">(</span><span class=\"nb\">file</span><span class=\"o\">=</span>stderr<span class=\"p\">)</span></td></tr><tr><th id=\"L371\"><a href=\"#L371\">371</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 stderr<span class=\"o\">.</span>flush<span class=\"p\">()</span></td></tr><tr><th id=\"L372\"><a href=\"#L372\">372</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0fd <span class=\"ow\">in</span>\u00a0<span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">):</span></td></tr><tr><th id=\"L373\"><a href=\"#L373\">373</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>close<span class=\"p\">(</span>fd<span class=\"p\">)</span></td></tr><tr><th id=\"L374\"><a href=\"#L374\">374</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span><span class=\"p\">:</span></td></tr><tr><th id=\"L375\"><a href=\"#L375\">375</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span>\u00a0<span class=\"c\"># make *sure* the child terminates</span></td></tr><tr><th id=\"L376\"><a href=\"#L376\">376</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Did you read the comment about not adding code here?</span></td></tr><tr><th id=\"L377\"><a href=\"#L377\">377</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>_exit<span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span></td></tr><tr><th id=\"L378\"><a href=\"#L378\">378</a></th><td></td></tr><tr><th id=\"L379\"><a href=\"#L379\">379</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># we are the parent</span></td></tr><tr><th id=\"L380\"><a href=\"#L380\">380</a></th><td></td></tr><tr><th id=\"L381\"><a href=\"#L381\">381</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0settingUID<span class=\"p\">:</span></td></tr><tr><th id=\"L382\"><a href=\"#L382\">382</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>setregid<span class=\"p\">(</span>currgid<span class=\"p\">,</span>\u00a0curegid<span class=\"p\">)</span></td></tr><tr><th id=\"L383\"><a href=\"#L383\">383</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>setreuid<span class=\"p\">(</span>curruid<span class=\"p\">,</span>\u00a0cureuid<span class=\"p\">)</span></td></tr><tr><th id=\"L384\"><a href=\"#L384\">384</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>status <span class=\"o\">=</span>\u00a0<span class=\"o\">-</span><span class=\"mi\">1</span>\u00a0<span class=\"c\"># this records the exit status of the child</span></td></tr><tr><th id=\"L385\"><a href=\"#L385\">385</a></th><td></td></tr><tr><th id=\"L386\"><a href=\"#L386\">386</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>proto <span class=\"o\">=</span>\u00a0proto</td></tr><tr><th id=\"L387\"><a href=\"#L387\">387</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 </td></tr><tr><th id=\"L388\"><a href=\"#L388\">388</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># arrange for the parent-side pipes to be read and written</span></td></tr><tr><th id=\"L389\"><a href=\"#L389\">389</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0childFD<span class=\"p\">,</span>\u00a0parentFD <span class=\"ow\">in</span>\u00a0helpers<span class=\"o\">.</span>items<span class=\"p\">():</span></td></tr><tr><th id=\"L390\"><a href=\"#L390\">390</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>close<span class=\"p\">(</span>fdmap<span class=\"p\">[</span>childFD<span class=\"p\">])</span></td></tr><tr><th id=\"L391\"><a href=\"#L391\">391</a></th><td></td></tr><tr><th id=\"L392\"><a href=\"#L392\">392</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0childFDs<span class=\"p\">[</span>childFD<span class=\"p\">]</span>\u00a0<span class=\"o\">==</span>\u00a0<span class=\"s\">\"r\"</span><span class=\"p\">:</span></td></tr><tr><th id=\"L393\"><a href=\"#L393\">393</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 reader <span class=\"o\">=</span>\u00a0ProcessReader<span class=\"p\">(</span>reactor<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0childFD<span class=\"p\">,</span>\u00a0parentFD<span class=\"p\">)</span></td></tr><tr><th id=\"L394\"><a href=\"#L394\">394</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>pipes<span class=\"p\">[</span>childFD<span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0reader</td></tr><tr><th id=\"L395\"><a href=\"#L395\">395</a></th><td></td></tr><tr><th id=\"L396\"><a href=\"#L396\">396</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0childFDs<span class=\"p\">[</span>childFD<span class=\"p\">]</span>\u00a0<span class=\"o\">==</span>\u00a0<span class=\"s\">\"w\"</span><span class=\"p\">:</span></td></tr><tr><th id=\"L397\"><a href=\"#L397\">397</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 writer <span class=\"o\">=</span>\u00a0ProcessWriter<span class=\"p\">(</span>reactor<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0childFD<span class=\"p\">,</span>\u00a0parentFD<span class=\"p\">,</span>\u00a0forceReadHack<span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span></td></tr><tr><th id=\"L398\"><a href=\"#L398\">398</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>pipes<span class=\"p\">[</span>childFD<span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0writer</td></tr><tr><th id=\"L399\"><a href=\"#L399\">399</a></th><td></td></tr><tr><th id=\"L400\"><a href=\"#L400\">400</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L401\"><a href=\"#L401\">401</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># the 'transport' is used for some compatibility methods</span></td></tr><tr><th id=\"L402\"><a href=\"#L402\">402</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>proto <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L403\"><a href=\"#L403\">403</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>proto<span class=\"o\">.</span>makeConnection<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L404\"><a href=\"#L404\">404</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span><span class=\"p\">:</span></td></tr><tr><th id=\"L405\"><a href=\"#L405\">405</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log<span class=\"o\">.</span>err<span class=\"p\">()</span></td></tr><tr><th id=\"L406\"><a href=\"#L406\">406</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 registerReapProcessHandler<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>pid<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L407\"><a href=\"#L407\">407</a></th><td></td></tr><tr><th id=\"L408\"><a href=\"#L408\">408</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_setupChild</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0fdmap<span class=\"p\">):</span></td></tr><tr><th id=\"L409\"><a href=\"#L409\">409</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L410\"><a href=\"#L410\">410</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 fdmap[childFD] = parentFD</span></td></tr><tr><th id=\"L411\"><a href=\"#L411\">411</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L412\"><a href=\"#L412\">412</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 The child wants to end up with 'childFD' attached to what used to be</span></td></tr><tr><th id=\"L413\"><a href=\"#L413\">413</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 the parent's parentFD. As an example, a bash command run like</span></td></tr><tr><th id=\"L414\"><a href=\"#L414\">414</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 'command 2&gt;&amp;1' would correspond to an fdmap of {0:0, 1:1, 2:1}.</span></td></tr><tr><th id=\"L415\"><a href=\"#L415\">415</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 'command &gt;foo.txt' would be {0:0, 1:os.open('foo.txt'), 2:2}.</span></td></tr><tr><th id=\"L416\"><a href=\"#L416\">416</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L417\"><a href=\"#L417\">417</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This is accomplished in two steps::</span></td></tr><tr><th id=\"L418\"><a href=\"#L418\">418</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L419\"><a href=\"#L419\">419</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1. close all file descriptors that aren't values of fdmap.\u00a0 This means</span></td></tr><tr><th id=\"L420\"><a href=\"#L420\">420</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a00 .. maxfds.</span></td></tr><tr><th id=\"L421\"><a href=\"#L421\">421</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L422\"><a href=\"#L422\">422</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 2. for each childFD::</span></td></tr><tr><th id=\"L423\"><a href=\"#L423\">423</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L424\"><a href=\"#L424\">424</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0- if fdmap[childFD] == childFD, the descriptor is already in</span></td></tr><tr><th id=\"L425\"><a href=\"#L425\">425</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0place.\u00a0 Make sure the CLOEXEC flag is not set, then delete the</span></td></tr><tr><th id=\"L426\"><a href=\"#L426\">426</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0entry from fdmap.</span></td></tr><tr><th id=\"L427\"><a href=\"#L427\">427</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L428\"><a href=\"#L428\">428</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0- if childFD is in fdmap.values(), then the target descriptor is</span></td></tr><tr><th id=\"L429\"><a href=\"#L429\">429</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0busy. Use os.dup() to move it elsewhere, update all</span></td></tr><tr><th id=\"L430\"><a href=\"#L430\">430</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0fdmap[childFD] items that point to it, then close the</span></td></tr><tr><th id=\"L431\"><a href=\"#L431\">431</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0original. Then fall through to the next case.</span></td></tr><tr><th id=\"L432\"><a href=\"#L432\">432</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L433\"><a href=\"#L433\">433</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0- now fdmap[childFD] is not in fdmap.values(), and is free. Use</span></td></tr><tr><th id=\"L434\"><a href=\"#L434\">434</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0os.dup2() to move it to the right place, then close the</span></td></tr><tr><th id=\"L435\"><a href=\"#L435\">435</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0original.</span></td></tr><tr><th id=\"L436\"><a href=\"#L436\">436</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L437\"><a href=\"#L437\">437</a></th><td></td></tr><tr><th id=\"L438\"><a href=\"#L438\">438</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 debug <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>debug_child</td></tr><tr><th id=\"L439\"><a href=\"#L439\">439</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0debug<span class=\"p\">:</span></td></tr><tr><th id=\"L440\"><a href=\"#L440\">440</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\">#errfd = open(\"/tmp/p.err\", \"a\", 0)</span></td></tr><tr><th id=\"L441\"><a href=\"#L441\">441</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 errfd <span class=\"o\">=</span>\u00a0sys<span class=\"o\">.</span>stderr</td></tr><tr><th id=\"L442\"><a href=\"#L442\">442</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">print</span>\u00a0<span class=\"o\">&gt;&gt;</span>errfd<span class=\"p\">,</span>\u00a0<span class=\"s\">\"starting _setupChild\"</span></td></tr><tr><th id=\"L443\"><a href=\"#L443\">443</a></th><td></td></tr><tr><th id=\"L444\"><a href=\"#L444\">444</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 destList <span class=\"o\">=</span>\u00a0fdmap<span class=\"o\">.</span>values<span class=\"p\">()</span></td></tr><tr><th id=\"L445\"><a href=\"#L445\">445</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L446\"><a href=\"#L446\">446</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"kn\">import</span>\u00a0<span class=\"nn\">resource</span></td></tr><tr><th id=\"L447\"><a href=\"#L447\">447</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 maxfds <span class=\"o\">=</span>\u00a0resource<span class=\"o\">.</span>getrlimit<span class=\"p\">(</span>resource<span class=\"o\">.</span>RLIMIT_NOFILE<span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\u00a0<span class=\"o\">+</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L448\"><a href=\"#L448\">448</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># OS-X reports 9223372036854775808. That's a lot of fds to close</span></td></tr><tr><th id=\"L449\"><a href=\"#L449\">449</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0maxfds <span class=\"o\">&gt;</span>\u00a0<span class=\"mi\">1024</span><span class=\"p\">:</span></td></tr><tr><th id=\"L450\"><a href=\"#L450\">450</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 maxfds <span class=\"o\">=</span>\u00a0<span class=\"mi\">1024</span></td></tr><tr><th id=\"L451\"><a href=\"#L451\">451</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span><span class=\"p\">:</span></td></tr><tr><th id=\"L452\"><a href=\"#L452\">452</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 maxfds <span class=\"o\">=</span>\u00a0<span class=\"mi\">256</span></td></tr><tr><th id=\"L453\"><a href=\"#L453\">453</a></th><td></td></tr><tr><th id=\"L454\"><a href=\"#L454\">454</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0fd <span class=\"ow\">in</span>\u00a0<span class=\"nb\">range</span><span class=\"p\">(</span>maxfds<span class=\"p\">):</span></td></tr><tr><th id=\"L455\"><a href=\"#L455\">455</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0fd <span class=\"ow\">in</span>\u00a0destList<span class=\"p\">:</span></td></tr><tr><th id=\"L456\"><a href=\"#L456\">456</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">continue</span></td></tr><tr><th id=\"L457\"><a href=\"#L457\">457</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0debug <span class=\"ow\">and</span>\u00a0fd <span class=\"o\">==</span>\u00a0errfd<span class=\"o\">.</span>fileno<span class=\"p\">():</span></td></tr><tr><th id=\"L458\"><a href=\"#L458\">458</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">continue</span></td></tr><tr><th id=\"L459\"><a href=\"#L459\">459</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span>\u00a0 \u00a0 os<span class=\"o\">.</span>close<span class=\"p\">(</span>fd<span class=\"p\">)</span></td></tr><tr><th id=\"L460\"><a href=\"#L460\">460</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span><span class=\"p\">:</span>\u00a0<span class=\"k\">pass</span></td></tr><tr><th id=\"L461\"><a href=\"#L461\">461</a></th><td></td></tr><tr><th id=\"L462\"><a href=\"#L462\">462</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># at this point, the only fds still open are the ones that need to</span></td></tr><tr><th id=\"L463\"><a href=\"#L463\">463</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># be moved to their appropriate positions in the child (the targets</span></td></tr><tr><th id=\"L464\"><a href=\"#L464\">464</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># of fdmap, i.e. fdmap.values() )</span></td></tr><tr><th id=\"L465\"><a href=\"#L465\">465</a></th><td></td></tr><tr><th id=\"L466\"><a href=\"#L466\">466</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0debug<span class=\"p\">:</span>\u00a0<span class=\"k\">print</span>\u00a0<span class=\"o\">&gt;&gt;</span>errfd<span class=\"p\">,</span>\u00a0<span class=\"s\">\"fdmap\"</span><span class=\"p\">,</span>\u00a0fdmap</td></tr><tr><th id=\"L467\"><a href=\"#L467\">467</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 childlist <span class=\"o\">=</span>\u00a0fdmap<span class=\"o\">.</span>keys<span class=\"p\">()</span></td></tr><tr><th id=\"L468\"><a href=\"#L468\">468</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 childlist<span class=\"o\">.</span>sort<span class=\"p\">()</span></td></tr><tr><th id=\"L469\"><a href=\"#L469\">469</a></th><td></td></tr><tr><th id=\"L470\"><a href=\"#L470\">470</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0child <span class=\"ow\">in</span>\u00a0childlist<span class=\"p\">:</span></td></tr><tr><th id=\"L471\"><a href=\"#L471\">471</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 target <span class=\"o\">=</span>\u00a0fdmap<span class=\"p\">[</span>child<span class=\"p\">]</span></td></tr><tr><th id=\"L472\"><a href=\"#L472\">472</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0target <span class=\"o\">==</span>\u00a0child<span class=\"p\">:</span></td></tr><tr><th id=\"L473\"><a href=\"#L473\">473</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># fd is already in place</span></td></tr><tr><th id=\"L474\"><a href=\"#L474\">474</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0debug<span class=\"p\">:</span>\u00a0<span class=\"k\">print</span>\u00a0<span class=\"o\">&gt;&gt;</span>errfd<span class=\"p\">,</span>\u00a0<span class=\"s\">\"</span><span class=\"si\">%d</span><span class=\"s\">\u00a0already in place\"</span>\u00a0<span class=\"o\">%</span>\u00a0target</td></tr><tr><th id=\"L475\"><a href=\"#L475\">475</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0fcntl <span class=\"ow\">and</span>\u00a0<span class=\"nb\">hasattr</span><span class=\"p\">(</span>fcntl<span class=\"p\">,</span>\u00a0<span class=\"s\">'FD_CLOEXEC'</span><span class=\"p\">):</span></td></tr><tr><th id=\"L476\"><a href=\"#L476\">476</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 old <span class=\"o\">=</span>\u00a0fcntl<span class=\"o\">.</span>fcntl<span class=\"p\">(</span>child<span class=\"p\">,</span>\u00a0fcntl<span class=\"o\">.</span>F_GETFD<span class=\"p\">)</span></td></tr><tr><th id=\"L477\"><a href=\"#L477\">477</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fcntl<span class=\"o\">.</span>fcntl<span class=\"p\">(</span>child<span class=\"p\">,</span></td></tr><tr><th id=\"L478\"><a href=\"#L478\">478</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fcntl<span class=\"o\">.</span>F_SETFD<span class=\"p\">,</span>\u00a0old <span class=\"o\">&amp;</span>\u00a0<span class=\"o\">~</span>fcntl<span class=\"o\">.</span>FD_CLOEXEC<span class=\"p\">)</span></td></tr><tr><th id=\"L479\"><a href=\"#L479\">479</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L480\"><a href=\"#L480\">480</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0child <span class=\"ow\">in</span>\u00a0fdmap<span class=\"o\">.</span>values<span class=\"p\">():</span></td></tr><tr><th id=\"L481\"><a href=\"#L481\">481</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># we can't replace child-fd yet, as some other mapping</span></td></tr><tr><th id=\"L482\"><a href=\"#L482\">482</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># still needs the fd it wants to target. We must preserve</span></td></tr><tr><th id=\"L483\"><a href=\"#L483\">483</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># that old fd by duping it to a new home.</span></td></tr><tr><th id=\"L484\"><a href=\"#L484\">484</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 newtarget <span class=\"o\">=</span>\u00a0os<span class=\"o\">.</span>dup<span class=\"p\">(</span>child<span class=\"p\">)</span>\u00a0<span class=\"c\"># give it a safe home</span></td></tr><tr><th id=\"L485\"><a href=\"#L485\">485</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0debug<span class=\"p\">:</span>\u00a0<span class=\"k\">print</span>\u00a0<span class=\"o\">&gt;&gt;</span>errfd<span class=\"p\">,</span>\u00a0<span class=\"s\">\"os.dup(</span><span class=\"si\">%d</span><span class=\"s\">) -&gt; </span><span class=\"si\">%d</span><span class=\"s\">\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span>child<span class=\"p\">,</span></td></tr><tr><th id=\"L486\"><a href=\"#L486\">486</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0newtarget<span class=\"p\">)</span></td></tr><tr><th id=\"L487\"><a href=\"#L487\">487</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>close<span class=\"p\">(</span>child<span class=\"p\">)</span>\u00a0<span class=\"c\"># close the original</span></td></tr><tr><th id=\"L488\"><a href=\"#L488\">488</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0c<span class=\"p\">,</span>p <span class=\"ow\">in</span>\u00a0fdmap<span class=\"o\">.</span>items<span class=\"p\">():</span></td></tr><tr><th id=\"L489\"><a href=\"#L489\">489</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0p <span class=\"o\">==</span>\u00a0child<span class=\"p\">:</span></td></tr><tr><th id=\"L490\"><a href=\"#L490\">490</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fdmap<span class=\"p\">[</span>c<span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0newtarget <span class=\"c\"># update all pointers</span></td></tr><tr><th id=\"L491\"><a href=\"#L491\">491</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># now it should be available</span></td></tr><tr><th id=\"L492\"><a href=\"#L492\">492</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0debug<span class=\"p\">:</span>\u00a0<span class=\"k\">print</span>\u00a0<span class=\"o\">&gt;&gt;</span>errfd<span class=\"p\">,</span>\u00a0<span class=\"s\">\"os.dup2(</span><span class=\"si\">%d</span><span class=\"s\">,</span><span class=\"si\">%d</span><span class=\"s\">)\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span>target<span class=\"p\">,</span>\u00a0child<span class=\"p\">)</span></td></tr><tr><th id=\"L493\"><a href=\"#L493\">493</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>dup2<span class=\"p\">(</span>target<span class=\"p\">,</span>\u00a0child<span class=\"p\">)</span></td></tr><tr><th id=\"L494\"><a href=\"#L494\">494</a></th><td></td></tr><tr><th id=\"L495\"><a href=\"#L495\">495</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># At this point, the child has everything it needs. We want to close</span></td></tr><tr><th id=\"L496\"><a href=\"#L496\">496</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># everything that isn't going to be used by the child, i.e.</span></td></tr><tr><th id=\"L497\"><a href=\"#L497\">497</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># everything not in fdmap.keys(). The only remaining fds open are</span></td></tr><tr><th id=\"L498\"><a href=\"#L498\">498</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># those in fdmap.values().</span></td></tr><tr><th id=\"L499\"><a href=\"#L499\">499</a></th><td></td></tr><tr><th id=\"L500\"><a href=\"#L500\">500</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Any given fd may appear in fdmap.values() multiple times, so we</span></td></tr><tr><th id=\"L501\"><a href=\"#L501\">501</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># need to remove duplicates first.</span></td></tr><tr><th id=\"L502\"><a href=\"#L502\">502</a></th><td></td></tr><tr><th id=\"L503\"><a href=\"#L503\">503</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 old <span class=\"o\">=</span>\u00a0<span class=\"p\">[]</span></td></tr><tr><th id=\"L504\"><a href=\"#L504\">504</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0fd <span class=\"ow\">in</span>\u00a0fdmap<span class=\"o\">.</span>values<span class=\"p\">():</span></td></tr><tr><th id=\"L505\"><a href=\"#L505\">505</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0fd <span class=\"ow\">in</span>\u00a0old<span class=\"p\">:</span></td></tr><tr><th id=\"L506\"><a href=\"#L506\">506</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0fd <span class=\"ow\">in</span>\u00a0fdmap<span class=\"o\">.</span>keys<span class=\"p\">():</span></td></tr><tr><th id=\"L507\"><a href=\"#L507\">507</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 old<span class=\"o\">.</span>append<span class=\"p\">(</span>fd<span class=\"p\">)</span></td></tr><tr><th id=\"L508\"><a href=\"#L508\">508</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0debug<span class=\"p\">:</span>\u00a0<span class=\"k\">print</span>\u00a0<span class=\"o\">&gt;&gt;</span>errfd<span class=\"p\">,</span>\u00a0<span class=\"s\">\"old\"</span><span class=\"p\">,</span>\u00a0old</td></tr><tr><th id=\"L509\"><a href=\"#L509\">509</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0fd <span class=\"ow\">in</span>\u00a0old<span class=\"p\">:</span></td></tr><tr><th id=\"L510\"><a href=\"#L510\">510</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>close<span class=\"p\">(</span>fd<span class=\"p\">)</span></td></tr><tr><th id=\"L511\"><a href=\"#L511\">511</a></th><td></td></tr><tr><th id=\"L512\"><a href=\"#L512\">512</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_execChild</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0path<span class=\"p\">,</span>\u00a0settingUID<span class=\"p\">,</span>\u00a0uid<span class=\"p\">,</span>\u00a0gid<span class=\"p\">,</span></td></tr><tr><th id=\"L513\"><a href=\"#L513\">513</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0command<span class=\"p\">,</span>\u00a0args<span class=\"p\">,</span>\u00a0environment<span class=\"p\">):</span></td></tr><tr><th id=\"L514\"><a href=\"#L514\">514</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0path<span class=\"p\">:</span></td></tr><tr><th id=\"L515\"><a href=\"#L515\">515</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>chdir<span class=\"p\">(</span>path<span class=\"p\">)</span></td></tr><tr><th id=\"L516\"><a href=\"#L516\">516</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># set the UID before I actually exec the process</span></td></tr><tr><th id=\"L517\"><a href=\"#L517\">517</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0settingUID<span class=\"p\">:</span></td></tr><tr><th id=\"L518\"><a href=\"#L518\">518</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 switchUID<span class=\"p\">(</span>uid<span class=\"p\">,</span>\u00a0gid<span class=\"p\">)</span></td></tr><tr><th id=\"L519\"><a href=\"#L519\">519</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>execvpe<span class=\"p\">(</span>command<span class=\"p\">,</span>\u00a0args<span class=\"p\">,</span>\u00a0environment<span class=\"p\">)</span></td></tr><tr><th id=\"L520\"><a href=\"#L520\">520</a></th><td></td></tr><tr><th id=\"L521\"><a href=\"#L521\">521</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">reapProcess</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L522\"><a href=\"#L522\">522</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Try to reap a process (without blocking) via waitpid.</span></td></tr><tr><th id=\"L523\"><a href=\"#L523\">523</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L524\"><a href=\"#L524\">524</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This is called when sigchild is caught or a Process object loses its</span></td></tr><tr><th id=\"L525\"><a href=\"#L525\">525</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"connection\" (stdout is closed) This ought to result in reaping all</span></td></tr><tr><th id=\"L526\"><a href=\"#L526\">526</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 zombie processes, since it will be called twice as often as it needs</span></td></tr><tr><th id=\"L527\"><a href=\"#L527\">527</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 to be.</span></td></tr><tr><th id=\"L528\"><a href=\"#L528\">528</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L529\"><a href=\"#L529\">529</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 (Unfortunately, this is a slightly experimental approach, since</span></td></tr><tr><th id=\"L530\"><a href=\"#L530\">530</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 UNIX has no way to be really sure that your process is going to</span></td></tr><tr><th id=\"L531\"><a href=\"#L531\">531</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 go away w/o blocking.\u00a0 I don't want to block.)</span></td></tr><tr><th id=\"L532\"><a href=\"#L532\">532</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L533\"><a href=\"#L533\">533</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L534\"><a href=\"#L534\">534</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 pid<span class=\"p\">,</span>\u00a0status <span class=\"o\">=</span>\u00a0os<span class=\"o\">.</span>waitpid<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>pid<span class=\"p\">,</span>\u00a0os<span class=\"o\">.</span>WNOHANG<span class=\"p\">)</span></td></tr><tr><th id=\"L535\"><a href=\"#L535\">535</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span><span class=\"p\">:</span></td></tr><tr><th id=\"L536\"><a href=\"#L536\">536</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log<span class=\"o\">.</span>msg<span class=\"p\">(</span><span class=\"s\">'Failed to reap </span><span class=\"si\">%d</span><span class=\"s\">:'</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>pid<span class=\"p\">)</span></td></tr><tr><th id=\"L537\"><a href=\"#L537\">537</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log<span class=\"o\">.</span>err<span class=\"p\">()</span></td></tr><tr><th id=\"L538\"><a href=\"#L538\">538</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 pid <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L539\"><a href=\"#L539\">539</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0pid<span class=\"p\">:</span></td></tr><tr><th id=\"L540\"><a href=\"#L540\">540</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>processEnded<span class=\"p\">(</span>status<span class=\"p\">)</span></td></tr><tr><th id=\"L541\"><a href=\"#L541\">541</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 unregisterReapProcessHandler<span class=\"p\">(</span>pid<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L542\"><a href=\"#L542\">542</a></th><td></td></tr><tr><th id=\"L543\"><a href=\"#L543\">543</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">writeToChild</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0childFD<span class=\"p\">,</span>\u00a0data<span class=\"p\">):</span></td></tr><tr><th id=\"L544\"><a href=\"#L544\">544</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>pipes<span class=\"p\">[</span>childFD<span class=\"p\">]</span><span class=\"o\">.</span>write<span class=\"p\">(</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L545\"><a href=\"#L545\">545</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L546\"><a href=\"#L546\">546</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">closeChildFD</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0childFD<span class=\"p\">):</span></td></tr><tr><th id=\"L547\"><a href=\"#L547\">547</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># for writer pipes, loseConnection tries to write the remaining data</span></td></tr><tr><th id=\"L548\"><a href=\"#L548\">548</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># out to the pipe before closing it</span></td></tr><tr><th id=\"L549\"><a href=\"#L549\">549</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># if childFD is not in the list of pipes, assume that it is already</span></td></tr><tr><th id=\"L550\"><a href=\"#L550\">550</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># closed</span></td></tr><tr><th id=\"L551\"><a href=\"#L551\">551</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>pipes<span class=\"o\">.</span>has_key<span class=\"p\">(</span>childFD<span class=\"p\">):</span></td></tr><tr><th id=\"L552\"><a href=\"#L552\">552</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>pipes<span class=\"p\">[</span>childFD<span class=\"p\">]</span><span class=\"o\">.</span>loseConnection<span class=\"p\">()</span></td></tr><tr><th id=\"L553\"><a href=\"#L553\">553</a></th><td></td></tr><tr><th id=\"L554\"><a href=\"#L554\">554</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">pauseProducing</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L555\"><a href=\"#L555\">555</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0p <span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>pipes<span class=\"o\">.</span>itervalues<span class=\"p\">():</span></td></tr><tr><th id=\"L556\"><a href=\"#L556\">556</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">isinstance</span><span class=\"p\">(</span>p<span class=\"p\">,</span>\u00a0ProcessReader<span class=\"p\">):</span></td></tr><tr><th id=\"L557\"><a href=\"#L557\">557</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 p<span class=\"o\">.</span>stopReading<span class=\"p\">()</span></td></tr><tr><th id=\"L558\"><a href=\"#L558\">558</a></th><td>\u00a0</td></tr><tr><th id=\"L559\"><a href=\"#L559\">559</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">resumeProducing</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L560\"><a href=\"#L560\">560</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0p <span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>pipes<span class=\"o\">.</span>itervalues<span class=\"p\">():</span></td></tr><tr><th id=\"L561\"><a href=\"#L561\">561</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">isinstance</span><span class=\"p\">(</span>p<span class=\"p\">,</span>\u00a0ProcessReader<span class=\"p\">):</span></td></tr><tr><th id=\"L562\"><a href=\"#L562\">562</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 p<span class=\"o\">.</span>startReading<span class=\"p\">()</span></td></tr><tr><th id=\"L563\"><a href=\"#L563\">563</a></th><td></td></tr><tr><th id=\"L564\"><a href=\"#L564\">564</a></th><td>\u00a0 \u00a0 <span class=\"c\"># compatibility</span></td></tr><tr><th id=\"L565\"><a href=\"#L565\">565</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">closeStdin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L566\"><a href=\"#L566\">566</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Call this to close standard input on this process.</span></td></tr><tr><th id=\"L567\"><a href=\"#L567\">567</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L568\"><a href=\"#L568\">568</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>closeChildFD<span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span></td></tr><tr><th id=\"L569\"><a href=\"#L569\">569</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">closeStdout</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L570\"><a href=\"#L570\">570</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>closeChildFD<span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span></td></tr><tr><th id=\"L571\"><a href=\"#L571\">571</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">closeStderr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L572\"><a href=\"#L572\">572</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>closeChildFD<span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span></td></tr><tr><th id=\"L573\"><a href=\"#L573\">573</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">loseConnection</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L574\"><a href=\"#L574\">574</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>closeStdin<span class=\"p\">()</span></td></tr><tr><th id=\"L575\"><a href=\"#L575\">575</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>closeStderr<span class=\"p\">()</span></td></tr><tr><th id=\"L576\"><a href=\"#L576\">576</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>closeStdout<span class=\"p\">()</span></td></tr><tr><th id=\"L577\"><a href=\"#L577\">577</a></th><td></td></tr><tr><th id=\"L578\"><a href=\"#L578\">578</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">write</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>data<span class=\"p\">):</span></td></tr><tr><th id=\"L579\"><a href=\"#L579\">579</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Call this to write to standard input on this process.</span></td></tr><tr><th id=\"L580\"><a href=\"#L580\">580</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 </span></td></tr><tr><th id=\"L581\"><a href=\"#L581\">581</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 NOTE: This will silently lose data if there is no standard input.</span></td></tr><tr><th id=\"L582\"><a href=\"#L582\">582</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L583\"><a href=\"#L583\">583</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>pipes<span class=\"o\">.</span>has_key<span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">):</span></td></tr><tr><th id=\"L584\"><a href=\"#L584\">584</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>pipes<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span>write<span class=\"p\">(</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L585\"><a href=\"#L585\">585</a></th><td></td></tr><tr><th id=\"L586\"><a href=\"#L586\">586</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">registerProducer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0producer<span class=\"p\">,</span>\u00a0streaming<span class=\"p\">):</span></td></tr><tr><th id=\"L587\"><a href=\"#L587\">587</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Call this to register producer for standard input.</span></td></tr><tr><th id=\"L588\"><a href=\"#L588\">588</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L589\"><a href=\"#L589\">589</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 If there is no standard input producer.stopProducing() will</span></td></tr><tr><th id=\"L590\"><a href=\"#L590\">590</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 be called immediately.</span></td></tr><tr><th id=\"L591\"><a href=\"#L591\">591</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L592\"><a href=\"#L592\">592</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>pipes<span class=\"o\">.</span>has_key<span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">):</span></td></tr><tr><th id=\"L593\"><a href=\"#L593\">593</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>pipes<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span>registerProducer<span class=\"p\">(</span>producer<span class=\"p\">,</span>\u00a0streaming<span class=\"p\">)</span></td></tr><tr><th id=\"L594\"><a href=\"#L594\">594</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L595\"><a href=\"#L595\">595</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 producer<span class=\"o\">.</span>stopProducing<span class=\"p\">()</span></td></tr><tr><th id=\"L596\"><a href=\"#L596\">596</a></th><td></td></tr><tr><th id=\"L597\"><a href=\"#L597\">597</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">unregisterProducer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L598\"><a href=\"#L598\">598</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Call this to unregister producer for standard input.\"\"\"</span></td></tr><tr><th id=\"L599\"><a href=\"#L599\">599</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>pipes<span class=\"o\">.</span>has_key<span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">):</span></td></tr><tr><th id=\"L600\"><a href=\"#L600\">600</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>pipes<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span>unregisterProducer<span class=\"p\">()</span></td></tr><tr><th id=\"L601\"><a href=\"#L601\">601</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L602\"><a href=\"#L602\">602</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">writeSequence</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0seq<span class=\"p\">):</span></td></tr><tr><th id=\"L603\"><a href=\"#L603\">603</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Call this to write to standard input on this process.</span></td></tr><tr><th id=\"L604\"><a href=\"#L604\">604</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L605\"><a href=\"#L605\">605</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 NOTE: This will silently lose data if there is no standard input.</span></td></tr><tr><th id=\"L606\"><a href=\"#L606\">606</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L607\"><a href=\"#L607\">607</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>pipes<span class=\"o\">.</span>has_key<span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">):</span></td></tr><tr><th id=\"L608\"><a href=\"#L608\">608</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>pipes<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span>writeSequence<span class=\"p\">(</span>seq<span class=\"p\">)</span></td></tr><tr><th id=\"L609\"><a href=\"#L609\">609</a></th><td></td></tr><tr><th id=\"L610\"><a href=\"#L610\">610</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">childDataReceived</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0name<span class=\"p\">,</span>\u00a0data<span class=\"p\">):</span></td></tr><tr><th id=\"L611\"><a href=\"#L611\">611</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>proto<span class=\"o\">.</span>childDataReceived<span class=\"p\">(</span>name<span class=\"p\">,</span>\u00a0data<span class=\"p\">)</span></td></tr><tr><th id=\"L612\"><a href=\"#L612\">612</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 </td></tr><tr><th id=\"L613\"><a href=\"#L613\">613</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">signalProcess</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0signalID<span class=\"p\">):</span></td></tr><tr><th id=\"L614\"><a href=\"#L614\">614</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0signalID <span class=\"ow\">in</span>\u00a0<span class=\"p\">(</span><span class=\"s\">'HUP'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'STOP'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'INT'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'KILL'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'TERM'</span><span class=\"p\">):</span></td></tr><tr><th id=\"L615\"><a href=\"#L615\">615</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 signalID <span class=\"o\">=</span>\u00a0<span class=\"nb\">getattr</span><span class=\"p\">(</span>signal<span class=\"p\">,</span>\u00a0<span class=\"s\">'SIG'</span><span class=\"o\">+</span>signalID<span class=\"p\">)</span></td></tr><tr><th id=\"L616\"><a href=\"#L616\">616</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>pid <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L617\"><a href=\"#L617\">617</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0ProcessExitedAlready</td></tr><tr><th id=\"L618\"><a href=\"#L618\">618</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>kill<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>pid<span class=\"p\">,</span>\u00a0signalID<span class=\"p\">)</span></td></tr><tr><th id=\"L619\"><a href=\"#L619\">619</a></th><td></td></tr><tr><th id=\"L620\"><a href=\"#L620\">620</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">processEnded</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0status<span class=\"p\">):</span></td></tr><tr><th id=\"L621\"><a href=\"#L621\">621</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># this is called when the child terminates (SIGCHLD)</span></td></tr><tr><th id=\"L622\"><a href=\"#L622\">622</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>status <span class=\"o\">=</span>\u00a0status</td></tr><tr><th id=\"L623\"><a href=\"#L623\">623</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>lostProcess <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L624\"><a href=\"#L624\">624</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>pid <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L625\"><a href=\"#L625\">625</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\">#for fd, helper in self.pipes.items():</span></td></tr><tr><th id=\"L626\"><a href=\"#L626\">626</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\">#\u00a0 \u00a0 helper.connectionLost(None)</span></td></tr><tr><th id=\"L627\"><a href=\"#L627\">627</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\">##self.closeStdin()</span></td></tr><tr><th id=\"L628\"><a href=\"#L628\">628</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>maybeCallProcessEnded<span class=\"p\">()</span></td></tr><tr><th id=\"L629\"><a href=\"#L629\">629</a></th><td></td></tr><tr><th id=\"L630\"><a href=\"#L630\">630</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">childConnectionLost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0childFD<span class=\"p\">,</span>\u00a0reason<span class=\"p\">):</span></td></tr><tr><th id=\"L631\"><a href=\"#L631\">631</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># this is called when one of the helpers (ProcessReader or</span></td></tr><tr><th id=\"L632\"><a href=\"#L632\">632</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># ProcessWriter) notices their pipe has been closed</span></td></tr><tr><th id=\"L633\"><a href=\"#L633\">633</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>close<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>pipes<span class=\"p\">[</span>childFD<span class=\"p\">]</span><span class=\"o\">.</span>fileno<span class=\"p\">())</span></td></tr><tr><th id=\"L634\"><a href=\"#L634\">634</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>pipes<span class=\"p\">[</span>childFD<span class=\"p\">]</span></td></tr><tr><th id=\"L635\"><a href=\"#L635\">635</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L636\"><a href=\"#L636\">636</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>proto<span class=\"o\">.</span>childConnectionLost<span class=\"p\">(</span>childFD<span class=\"p\">)</span></td></tr><tr><th id=\"L637\"><a href=\"#L637\">637</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span><span class=\"p\">:</span></td></tr><tr><th id=\"L638\"><a href=\"#L638\">638</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log<span class=\"o\">.</span>err<span class=\"p\">()</span></td></tr><tr><th id=\"L639\"><a href=\"#L639\">639</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>maybeCallProcessEnded<span class=\"p\">()</span></td></tr><tr><th id=\"L640\"><a href=\"#L640\">640</a></th><td></td></tr><tr><th id=\"L641\"><a href=\"#L641\">641</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">maybeCallProcessEnded</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L642\"><a href=\"#L642\">642</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># we don't call ProcessProtocol.processEnded until:</span></td></tr><tr><th id=\"L643\"><a href=\"#L643\">643</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\">#\u00a0 the child has terminated, AND</span></td></tr><tr><th id=\"L644\"><a href=\"#L644\">644</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\">#\u00a0 all writers have indicated an error status, AND</span></td></tr><tr><th id=\"L645\"><a href=\"#L645\">645</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\">#\u00a0 all readers have indicated EOF</span></td></tr><tr><th id=\"L646\"><a href=\"#L646\">646</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># This insures that we've gathered all output from the process.</span></td></tr><tr><th id=\"L647\"><a href=\"#L647\">647</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>pipes<span class=\"p\">:</span></td></tr><tr><th id=\"L648\"><a href=\"#L648\">648</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\">#print \"maybe, but pipes still\", self.pipes.keys()</span></td></tr><tr><th id=\"L649\"><a href=\"#L649\">649</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span></td></tr><tr><th id=\"L650\"><a href=\"#L650\">650</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>lostProcess<span class=\"p\">:</span></td></tr><tr><th id=\"L651\"><a href=\"#L651\">651</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\">#print \"maybe, but haven't .lostProcess yet\"</span></td></tr><tr><th id=\"L652\"><a href=\"#L652\">652</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>reapProcess<span class=\"p\">()</span></td></tr><tr><th id=\"L653\"><a href=\"#L653\">653</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span></td></tr><tr><th id=\"L654\"><a href=\"#L654\">654</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L655\"><a href=\"#L655\">655</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 exitCode <span class=\"o\">=</span>\u00a0sig <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L656\"><a href=\"#L656\">656</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>status <span class=\"o\">!=</span>\u00a0<span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">:</span></td></tr><tr><th id=\"L657\"><a href=\"#L657\">657</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0os<span class=\"o\">.</span>WIFEXITED<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>status<span class=\"p\">):</span></td></tr><tr><th id=\"L658\"><a href=\"#L658\">658</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 exitCode <span class=\"o\">=</span>\u00a0os<span class=\"o\">.</span>WEXITSTATUS<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>status<span class=\"p\">)</span></td></tr><tr><th id=\"L659\"><a href=\"#L659\">659</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L660\"><a href=\"#L660\">660</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 sig <span class=\"o\">=</span>\u00a0os<span class=\"o\">.</span>WTERMSIG<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>status<span class=\"p\">)</span></td></tr><tr><th id=\"L661\"><a href=\"#L661\">661</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L662\"><a href=\"#L662\">662</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span>\u00a0<span class=\"c\"># don't think this can happen</span></td></tr><tr><th id=\"L663\"><a href=\"#L663\">663</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0exitCode <span class=\"ow\">or</span>\u00a0sig<span class=\"p\">:</span></td></tr><tr><th id=\"L664\"><a href=\"#L664\">664</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 e <span class=\"o\">=</span>\u00a0error<span class=\"o\">.</span>ProcessTerminated<span class=\"p\">(</span>exitCode<span class=\"p\">,</span>\u00a0sig<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>status<span class=\"p\">)</span></td></tr><tr><th id=\"L665\"><a href=\"#L665\">665</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L666\"><a href=\"#L666\">666</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 e <span class=\"o\">=</span>\u00a0error<span class=\"o\">.</span>ProcessDone<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>status<span class=\"p\">)</span></td></tr><tr><th id=\"L667\"><a href=\"#L667\">667</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>proto <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L668\"><a href=\"#L668\">668</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>proto<span class=\"o\">.</span>processEnded<span class=\"p\">(</span>failure<span class=\"o\">.</span>Failure<span class=\"p\">(</span>e<span class=\"p\">))</span></td></tr><tr><th id=\"L669\"><a href=\"#L669\">669</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>proto <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L670\"><a href=\"#L670\">670</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span><span class=\"p\">:</span></td></tr><tr><th id=\"L671\"><a href=\"#L671\">671</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log<span class=\"o\">.</span>err<span class=\"p\">()</span></td></tr><tr><th id=\"L672\"><a href=\"#L672\">672</a></th><td></td></tr><tr><th id=\"L673\"><a href=\"#L673\">673</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L674\"><a href=\"#L674\">674</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"s\">\"&lt;</span><span class=\"si\">%s</span><span class=\"s\">\u00a0pid=</span><span class=\"si\">%s</span><span class=\"s\">\u00a0status=</span><span class=\"si\">%s</span><span class=\"s\">&gt;\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>__class__<span class=\"o\">.</span>__name__<span class=\"p\">,</span></td></tr><tr><th id=\"L675\"><a href=\"#L675\">675</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>pid<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>status<span class=\"p\">)</span></td></tr><tr><th id=\"L676\"><a href=\"#L676\">676</a></th><td></td></tr><tr><th id=\"L677\"><a href=\"#L677\">677</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">PTYProcess</span><span class=\"p\">(</span>abstract<span class=\"o\">.</span>FileDescriptor<span class=\"p\">,</span>\u00a0styles<span class=\"o\">.</span>Ephemeral<span class=\"p\">):</span></td></tr><tr><th id=\"L678\"><a href=\"#L678\">678</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"An operating-system Process that uses PTY support.\"\"\"</span></td></tr><tr><th id=\"L679\"><a href=\"#L679\">679</a></th><td>\u00a0 \u00a0 status <span class=\"o\">=</span>\u00a0<span class=\"o\">-</span><span class=\"mi\">1</span></td></tr><tr><th id=\"L680\"><a href=\"#L680\">680</a></th><td>\u00a0 \u00a0 pid <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L681\"><a href=\"#L681\">681</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L682\"><a href=\"#L682\">682</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reactor<span class=\"p\">,</span>\u00a0command<span class=\"p\">,</span>\u00a0args<span class=\"p\">,</span>\u00a0environment<span class=\"p\">,</span>\u00a0path<span class=\"p\">,</span>\u00a0proto<span class=\"p\">,</span></td></tr><tr><th id=\"L683\"><a href=\"#L683\">683</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0uid<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\u00a0gid<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\u00a0usePTY<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L684\"><a href=\"#L684\">684</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Spawn an operating-system process.</span></td></tr><tr><th id=\"L685\"><a href=\"#L685\">685</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L686\"><a href=\"#L686\">686</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This is where the hard work of disconnecting all currently open</span></td></tr><tr><th id=\"L687\"><a href=\"#L687\">687</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 files / forking / executing the new process happens.\u00a0 (This is</span></td></tr><tr><th id=\"L688\"><a href=\"#L688\">688</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 executed automatically when a Process is instantiated.)</span></td></tr><tr><th id=\"L689\"><a href=\"#L689\">689</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L690\"><a href=\"#L690\">690</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This will also run the subprocess as a given user ID and group ID, if</span></td></tr><tr><th id=\"L691\"><a href=\"#L691\">691</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 specified.\u00a0 (Implementation Note: this doesn't support all the arcane</span></td></tr><tr><th id=\"L692\"><a href=\"#L692\">692</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 nuances of setXXuid on UNIX: it will assume that either your effective</span></td></tr><tr><th id=\"L693\"><a href=\"#L693\">693</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 or real UID is 0.)</span></td></tr><tr><th id=\"L694\"><a href=\"#L694\">694</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L695\"><a href=\"#L695\">695</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0pty <span class=\"ow\">and</span>\u00a0<span class=\"nb\">type</span><span class=\"p\">(</span>usePTY<span class=\"p\">)</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"ow\">in</span>\u00a0<span class=\"p\">(</span>types<span class=\"o\">.</span>ListType<span class=\"p\">,</span>\u00a0types<span class=\"o\">.</span>TupleType<span class=\"p\">):</span></td></tr><tr><th id=\"L696\"><a href=\"#L696\">696</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># no pty module and we didn't get a pty to use</span></td></tr><tr><th id=\"L697\"><a href=\"#L697\">697</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">NotImplementedError</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"cannot use PTYProcess on platforms without the pty module.\"</span></td></tr><tr><th id=\"L698\"><a href=\"#L698\">698</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 abstract<span class=\"o\">.</span>FileDescriptor<span class=\"o\">.</span>__init__<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reactor<span class=\"p\">)</span></td></tr><tr><th id=\"L699\"><a href=\"#L699\">699</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 settingUID <span class=\"o\">=</span>\u00a0<span class=\"p\">(</span>uid <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">)</span>\u00a0<span class=\"ow\">or</span>\u00a0<span class=\"p\">(</span>gid <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">)</span></td></tr><tr><th id=\"L700\"><a href=\"#L700\">700</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0settingUID<span class=\"p\">:</span></td></tr><tr><th id=\"L701\"><a href=\"#L701\">701</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 curegid <span class=\"o\">=</span>\u00a0os<span class=\"o\">.</span>getegid<span class=\"p\">()</span></td></tr><tr><th id=\"L702\"><a href=\"#L702\">702</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 currgid <span class=\"o\">=</span>\u00a0os<span class=\"o\">.</span>getgid<span class=\"p\">()</span></td></tr><tr><th id=\"L703\"><a href=\"#L703\">703</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 cureuid <span class=\"o\">=</span>\u00a0os<span class=\"o\">.</span>geteuid<span class=\"p\">()</span></td></tr><tr><th id=\"L704\"><a href=\"#L704\">704</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 curruid <span class=\"o\">=</span>\u00a0os<span class=\"o\">.</span>getuid<span class=\"p\">()</span></td></tr><tr><th id=\"L705\"><a href=\"#L705\">705</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0uid <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L706\"><a href=\"#L706\">706</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 uid <span class=\"o\">=</span>\u00a0cureuid</td></tr><tr><th id=\"L707\"><a href=\"#L707\">707</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0gid <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L708\"><a href=\"#L708\">708</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 gid <span class=\"o\">=</span>\u00a0curegid</td></tr><tr><th id=\"L709\"><a href=\"#L709\">709</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># prepare to change UID in subprocess</span></td></tr><tr><th id=\"L710\"><a href=\"#L710\">710</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>setuid<span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span></td></tr><tr><th id=\"L711\"><a href=\"#L711\">711</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>setgid<span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span></td></tr><tr><th id=\"L712\"><a href=\"#L712\">712</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">type</span><span class=\"p\">(</span>usePTY<span class=\"p\">)</span>\u00a0<span class=\"ow\">in</span>\u00a0<span class=\"p\">(</span>types<span class=\"o\">.</span>TupleType<span class=\"p\">,</span>\u00a0types<span class=\"o\">.</span>ListType<span class=\"p\">):</span></td></tr><tr><th id=\"L713\"><a href=\"#L713\">713</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 masterfd<span class=\"p\">,</span>\u00a0slavefd<span class=\"p\">,</span>\u00a0ttyname <span class=\"o\">=</span>\u00a0usePTY</td></tr><tr><th id=\"L714\"><a href=\"#L714\">714</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L715\"><a href=\"#L715\">715</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 masterfd<span class=\"p\">,</span>\u00a0slavefd <span class=\"o\">=</span>\u00a0pty<span class=\"o\">.</span>openpty<span class=\"p\">()</span></td></tr><tr><th id=\"L716\"><a href=\"#L716\">716</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ttyname <span class=\"o\">=</span>\u00a0os<span class=\"o\">.</span>ttyname<span class=\"p\">(</span>slavefd<span class=\"p\">)</span></td></tr><tr><th id=\"L717\"><a href=\"#L717\">717</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 pid <span class=\"o\">=</span>\u00a0os<span class=\"o\">.</span>fork<span class=\"p\">()</span></td></tr><tr><th id=\"L718\"><a href=\"#L718\">718</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>pid <span class=\"o\">=</span>\u00a0pid</td></tr><tr><th id=\"L719\"><a href=\"#L719\">719</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0pid <span class=\"o\">==</span>\u00a0<span class=\"mi\">0</span><span class=\"p\">:</span>\u00a0<span class=\"c\"># pid is 0 in the child process</span></td></tr><tr><th id=\"L720\"><a href=\"#L720\">720</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L721\"><a href=\"#L721\">721</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 sys<span class=\"o\">.</span>settrace<span class=\"p\">(</span><span class=\"bp\">None</span><span class=\"p\">)</span></td></tr><tr><th id=\"L722\"><a href=\"#L722\">722</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>close<span class=\"p\">(</span>masterfd<span class=\"p\">)</span></td></tr><tr><th id=\"L723\"><a href=\"#L723\">723</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">hasattr</span><span class=\"p\">(</span>termios<span class=\"p\">,</span>\u00a0<span class=\"s\">'TIOCNOTTY'</span><span class=\"p\">):</span></td></tr><tr><th id=\"L724\"><a href=\"#L724\">724</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L725\"><a href=\"#L725\">725</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fd <span class=\"o\">=</span>\u00a0os<span class=\"o\">.</span>open<span class=\"p\">(</span><span class=\"s\">\"/dev/tty\"</span><span class=\"p\">,</span>\u00a0os<span class=\"o\">.</span>O_RDWR <span class=\"o\">|</span>\u00a0os<span class=\"o\">.</span>O_NOCTTY<span class=\"p\">)</span></td></tr><tr><th id=\"L726\"><a href=\"#L726\">726</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">OSError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L727\"><a href=\"#L727\">727</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L728\"><a href=\"#L728\">728</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L729\"><a href=\"#L729\">729</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L730\"><a href=\"#L730\">730</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fcntl<span class=\"o\">.</span>ioctl<span class=\"p\">(</span>fd<span class=\"p\">,</span>\u00a0termios<span class=\"o\">.</span>TIOCNOTTY<span class=\"p\">,</span>\u00a0<span class=\"s\">''</span><span class=\"p\">)</span></td></tr><tr><th id=\"L731\"><a href=\"#L731\">731</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span><span class=\"p\">:</span></td></tr><tr><th id=\"L732\"><a href=\"#L732\">732</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L733\"><a href=\"#L733\">733</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>close<span class=\"p\">(</span>fd<span class=\"p\">)</span></td></tr><tr><th id=\"L734\"><a href=\"#L734\">734</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 </td></tr><tr><th id=\"L735\"><a href=\"#L735\">735</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>setsid<span class=\"p\">()</span></td></tr><tr><th id=\"L736\"><a href=\"#L736\">736</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 </td></tr><tr><th id=\"L737\"><a href=\"#L737\">737</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">hasattr</span><span class=\"p\">(</span>termios<span class=\"p\">,</span>\u00a0<span class=\"s\">'TIOCSCTTY'</span><span class=\"p\">):</span></td></tr><tr><th id=\"L738\"><a href=\"#L738\">738</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fcntl<span class=\"o\">.</span>ioctl<span class=\"p\">(</span>slavefd<span class=\"p\">,</span>\u00a0termios<span class=\"o\">.</span>TIOCSCTTY<span class=\"p\">,</span>\u00a0<span class=\"s\">''</span><span class=\"p\">)</span></td></tr><tr><th id=\"L739\"><a href=\"#L739\">739</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 </td></tr><tr><th id=\"L740\"><a href=\"#L740\">740</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0fd <span class=\"ow\">in</span>\u00a0<span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">):</span></td></tr><tr><th id=\"L741\"><a href=\"#L741\">741</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0fd <span class=\"o\">!=</span>\u00a0slavefd<span class=\"p\">:</span></td></tr><tr><th id=\"L742\"><a href=\"#L742\">742</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>close<span class=\"p\">(</span>fd<span class=\"p\">)</span></td></tr><tr><th id=\"L743\"><a href=\"#L743\">743</a></th><td></td></tr><tr><th id=\"L744\"><a href=\"#L744\">744</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>dup2<span class=\"p\">(</span>slavefd<span class=\"p\">,</span>\u00a0<span class=\"mi\">0</span><span class=\"p\">)</span>\u00a0<span class=\"c\"># stdin</span></td></tr><tr><th id=\"L745\"><a href=\"#L745\">745</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>dup2<span class=\"p\">(</span>slavefd<span class=\"p\">,</span>\u00a0<span class=\"mi\">1</span><span class=\"p\">)</span>\u00a0<span class=\"c\"># stdout</span></td></tr><tr><th id=\"L746\"><a href=\"#L746\">746</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>dup2<span class=\"p\">(</span>slavefd<span class=\"p\">,</span>\u00a0<span class=\"mi\">2</span><span class=\"p\">)</span>\u00a0<span class=\"c\"># stderr</span></td></tr><tr><th id=\"L747\"><a href=\"#L747\">747</a></th><td></td></tr><tr><th id=\"L748\"><a href=\"#L748\">748</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0path<span class=\"p\">:</span></td></tr><tr><th id=\"L749\"><a href=\"#L749\">749</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>chdir<span class=\"p\">(</span>path<span class=\"p\">)</span></td></tr><tr><th id=\"L750\"><a href=\"#L750\">750</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0fd <span class=\"ow\">in</span>\u00a0<span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span>\u00a0<span class=\"mi\">256</span><span class=\"p\">):</span></td></tr><tr><th id=\"L751\"><a href=\"#L751\">751</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span>\u00a0 \u00a0 os<span class=\"o\">.</span>close<span class=\"p\">(</span>fd<span class=\"p\">)</span></td></tr><tr><th id=\"L752\"><a href=\"#L752\">752</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span><span class=\"p\">:</span>\u00a0<span class=\"k\">pass</span></td></tr><tr><th id=\"L753\"><a href=\"#L753\">753</a></th><td></td></tr><tr><th id=\"L754\"><a href=\"#L754\">754</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># set the UID before I actually exec the process</span></td></tr><tr><th id=\"L755\"><a href=\"#L755\">755</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0settingUID<span class=\"p\">:</span></td></tr><tr><th id=\"L756\"><a href=\"#L756\">756</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 switchUID<span class=\"p\">(</span>uid<span class=\"p\">,</span>\u00a0gid<span class=\"p\">)</span></td></tr><tr><th id=\"L757\"><a href=\"#L757\">757</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>execvpe<span class=\"p\">(</span>command<span class=\"p\">,</span>\u00a0args<span class=\"p\">,</span>\u00a0environment<span class=\"p\">)</span></td></tr><tr><th id=\"L758\"><a href=\"#L758\">758</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span><span class=\"p\">:</span></td></tr><tr><th id=\"L759\"><a href=\"#L759\">759</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 stderr <span class=\"o\">=</span>\u00a0os<span class=\"o\">.</span>fdopen<span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'w'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L760\"><a href=\"#L760\">760</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 stderr<span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"s\">\"Upon execvpe </span><span class=\"si\">%s</span><span class=\"s\">\u00a0</span><span class=\"si\">%s</span><span class=\"s\">\u00a0in environment </span><span class=\"si\">%s</span><span class=\"s\">:</span><span class=\"se\">\\n</span><span class=\"s\">\"</span>\u00a0<span class=\"o\">%</span></td></tr><tr><th id=\"L761\"><a href=\"#L761\">761</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"p\">(</span>command<span class=\"p\">,</span>\u00a0<span class=\"nb\">str</span><span class=\"p\">(</span>args<span class=\"p\">),</span></td></tr><tr><th id=\"L762\"><a href=\"#L762\">762</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">\"id </span><span class=\"si\">%s</span><span class=\"s\">\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"nb\">id</span><span class=\"p\">(</span>environment<span class=\"p\">)))</span></td></tr><tr><th id=\"L763\"><a href=\"#L763\">763</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 traceback<span class=\"o\">.</span>print_exc<span class=\"p\">(</span><span class=\"nb\">file</span><span class=\"o\">=</span>stderr<span class=\"p\">)</span></td></tr><tr><th id=\"L764\"><a href=\"#L764\">764</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 stderr<span class=\"o\">.</span>flush<span class=\"p\">()</span></td></tr><tr><th id=\"L765\"><a href=\"#L765\">765</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>_exit<span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span></td></tr><tr><th id=\"L766\"><a href=\"#L766\">766</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">assert</span>\u00a0pid<span class=\"o\">!=</span><span class=\"mi\">0</span></td></tr><tr><th id=\"L767\"><a href=\"#L767\">767</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>close<span class=\"p\">(</span>slavefd<span class=\"p\">)</span></td></tr><tr><th id=\"L768\"><a href=\"#L768\">768</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 fdesc<span class=\"o\">.</span>setNonBlocking<span class=\"p\">(</span>masterfd<span class=\"p\">)</span></td></tr><tr><th id=\"L769\"><a href=\"#L769\">769</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>fd<span class=\"o\">=</span>masterfd</td></tr><tr><th id=\"L770\"><a href=\"#L770\">770</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>startReading<span class=\"p\">()</span></td></tr><tr><th id=\"L771\"><a href=\"#L771\">771</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>connected <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L772\"><a href=\"#L772\">772</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>proto <span class=\"o\">=</span>\u00a0proto</td></tr><tr><th id=\"L773\"><a href=\"#L773\">773</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>lostProcess <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L774\"><a href=\"#L774\">774</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>status <span class=\"o\">=</span>\u00a0<span class=\"o\">-</span><span class=\"mi\">1</span></td></tr><tr><th id=\"L775\"><a href=\"#L775\">775</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L776\"><a href=\"#L776\">776</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>proto<span class=\"o\">.</span>makeConnection<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L777\"><a href=\"#L777\">777</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span><span class=\"p\">:</span></td></tr><tr><th id=\"L778\"><a href=\"#L778\">778</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log<span class=\"o\">.</span>err<span class=\"p\">()</span></td></tr><tr><th id=\"L779\"><a href=\"#L779\">779</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 registerReapProcessHandler<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>pid<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L780\"><a href=\"#L780\">780</a></th><td></td></tr><tr><th id=\"L781\"><a href=\"#L781\">781</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">reapProcess</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L782\"><a href=\"#L782\">782</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Try to reap a process (without blocking) via waitpid.</span></td></tr><tr><th id=\"L783\"><a href=\"#L783\">783</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L784\"><a href=\"#L784\">784</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This is called when sigchild is caught or a Process object loses its</span></td></tr><tr><th id=\"L785\"><a href=\"#L785\">785</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"connection\" (stdout is closed) This ought to result in reaping all</span></td></tr><tr><th id=\"L786\"><a href=\"#L786\">786</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 zombie processes, since it will be called twice as often as it needs</span></td></tr><tr><th id=\"L787\"><a href=\"#L787\">787</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 to be.</span></td></tr><tr><th id=\"L788\"><a href=\"#L788\">788</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L789\"><a href=\"#L789\">789</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 (Unfortunately, this is a slightly experimental approach, since</span></td></tr><tr><th id=\"L790\"><a href=\"#L790\">790</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 UNIX has no way to be really sure that your process is going to</span></td></tr><tr><th id=\"L791\"><a href=\"#L791\">791</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 go away w/o blocking.\u00a0 I don't want to block.)</span></td></tr><tr><th id=\"L792\"><a href=\"#L792\">792</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L793\"><a href=\"#L793\">793</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L794\"><a href=\"#L794\">794</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 pid<span class=\"p\">,</span>\u00a0status <span class=\"o\">=</span>\u00a0os<span class=\"o\">.</span>waitpid<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>pid<span class=\"p\">,</span>\u00a0os<span class=\"o\">.</span>WNOHANG<span class=\"p\">)</span></td></tr><tr><th id=\"L795\"><a href=\"#L795\">795</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">OSError</span><span class=\"p\">,</span>\u00a0e<span class=\"p\">:</span></td></tr><tr><th id=\"L796\"><a href=\"#L796\">796</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0e<span class=\"o\">.</span>errno <span class=\"o\">==</span>\u00a0errno<span class=\"o\">.</span>ECHILD<span class=\"p\">:</span>\u00a0<span class=\"c\"># no child process</span></td></tr><tr><th id=\"L797\"><a href=\"#L797\">797</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 pid <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L798\"><a href=\"#L798\">798</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L799\"><a href=\"#L799\">799</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span></td></tr><tr><th id=\"L800\"><a href=\"#L800\">800</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span><span class=\"p\">:</span></td></tr><tr><th id=\"L801\"><a href=\"#L801\">801</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log<span class=\"o\">.</span>err<span class=\"p\">()</span></td></tr><tr><th id=\"L802\"><a href=\"#L802\">802</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 pid <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L803\"><a href=\"#L803\">803</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0pid<span class=\"p\">:</span></td></tr><tr><th id=\"L804\"><a href=\"#L804\">804</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>processEnded<span class=\"p\">(</span>status<span class=\"p\">)</span></td></tr><tr><th id=\"L805\"><a href=\"#L805\">805</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 unregisterReapProcessHandler<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>pid<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L806\"><a href=\"#L806\">806</a></th><td></td></tr><tr><th id=\"L807\"><a href=\"#L807\">807</a></th><td>\u00a0 \u00a0 <span class=\"c\"># PTYs do not have stdin/stdout/stderr. They only have in and out, just</span></td></tr><tr><th id=\"L808\"><a href=\"#L808\">808</a></th><td>\u00a0 \u00a0 <span class=\"c\"># like sockets. You cannot close one without closing off the entire PTY.</span></td></tr><tr><th id=\"L809\"><a href=\"#L809\">809</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">closeStdin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L810\"><a href=\"#L810\">810</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L811\"><a href=\"#L811\">811</a></th><td></td></tr><tr><th id=\"L812\"><a href=\"#L812\">812</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">closeStdout</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L813\"><a href=\"#L813\">813</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L814\"><a href=\"#L814\">814</a></th><td></td></tr><tr><th id=\"L815\"><a href=\"#L815\">815</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">closeStderr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L816\"><a href=\"#L816\">816</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L817\"><a href=\"#L817\">817</a></th><td></td></tr><tr><th id=\"L818\"><a href=\"#L818\">818</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">signalProcess</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0signalID<span class=\"p\">):</span></td></tr><tr><th id=\"L819\"><a href=\"#L819\">819</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0signalID <span class=\"ow\">in</span>\u00a0<span class=\"p\">(</span><span class=\"s\">'HUP'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'STOP'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'INT'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'KILL'</span><span class=\"p\">):</span></td></tr><tr><th id=\"L820\"><a href=\"#L820\">820</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 signalID <span class=\"o\">=</span>\u00a0<span class=\"nb\">getattr</span><span class=\"p\">(</span>signal<span class=\"p\">,</span>\u00a0<span class=\"s\">'SIG'</span><span class=\"o\">+</span>signalID<span class=\"p\">)</span></td></tr><tr><th id=\"L821\"><a href=\"#L821\">821</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>kill<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>pid<span class=\"p\">,</span>\u00a0signalID<span class=\"p\">)</span></td></tr><tr><th id=\"L822\"><a href=\"#L822\">822</a></th><td></td></tr><tr><th id=\"L823\"><a href=\"#L823\">823</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">processEnded</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0status<span class=\"p\">):</span></td></tr><tr><th id=\"L824\"><a href=\"#L824\">824</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>status <span class=\"o\">=</span>\u00a0status</td></tr><tr><th id=\"L825\"><a href=\"#L825\">825</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>lostProcess <span class=\"o\">+=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L826\"><a href=\"#L826\">826</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>maybeCallProcessEnded<span class=\"p\">()</span></td></tr><tr><th id=\"L827\"><a href=\"#L827\">827</a></th><td></td></tr><tr><th id=\"L828\"><a href=\"#L828\">828</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">doRead</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L829\"><a href=\"#L829\">829</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Called when my standard output stream is ready for reading.</span></td></tr><tr><th id=\"L830\"><a href=\"#L830\">830</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L831\"><a href=\"#L831\">831</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L832\"><a href=\"#L832\">832</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0fdesc<span class=\"o\">.</span>readFromFD<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>fd<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>proto<span class=\"o\">.</span>outReceived<span class=\"p\">)</span></td></tr><tr><th id=\"L833\"><a href=\"#L833\">833</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">OSError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L834\"><a href=\"#L834\">834</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0CONNECTION_LOST</td></tr><tr><th id=\"L835\"><a href=\"#L835\">835</a></th><td></td></tr><tr><th id=\"L836\"><a href=\"#L836\">836</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">fileno</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L837\"><a href=\"#L837\">837</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"This returns the file number of standard output on this process.</span></td></tr><tr><th id=\"L838\"><a href=\"#L838\">838</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L839\"><a href=\"#L839\">839</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>fd</td></tr><tr><th id=\"L840\"><a href=\"#L840\">840</a></th><td></td></tr><tr><th id=\"L841\"><a href=\"#L841\">841</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">maybeCallProcessEnded</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L842\"><a href=\"#L842\">842</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># two things must happen before we call the ProcessProtocol's</span></td></tr><tr><th id=\"L843\"><a href=\"#L843\">843</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># processEnded method. 1: the child process must die and be reaped</span></td></tr><tr><th id=\"L844\"><a href=\"#L844\">844</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># (which calls our own processEnded method). 2: the child must close</span></td></tr><tr><th id=\"L845\"><a href=\"#L845\">845</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># their stdin/stdout/stderr fds, causing the pty to close, causing</span></td></tr><tr><th id=\"L846\"><a href=\"#L846\">846</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># our connectionLost method to be called. #2 can also be triggered</span></td></tr><tr><th id=\"L847\"><a href=\"#L847\">847</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># by calling .loseConnection().</span></td></tr><tr><th id=\"L848\"><a href=\"#L848\">848</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>lostProcess <span class=\"o\">==</span>\u00a0<span class=\"mi\">2</span><span class=\"p\">:</span></td></tr><tr><th id=\"L849\"><a href=\"#L849\">849</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L850\"><a href=\"#L850\">850</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 exitCode <span class=\"o\">=</span>\u00a0sig <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L851\"><a href=\"#L851\">851</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>status <span class=\"o\">!=</span>\u00a0<span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">:</span></td></tr><tr><th id=\"L852\"><a href=\"#L852\">852</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0os<span class=\"o\">.</span>WIFEXITED<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>status<span class=\"p\">):</span></td></tr><tr><th id=\"L853\"><a href=\"#L853\">853</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 exitCode <span class=\"o\">=</span>\u00a0os<span class=\"o\">.</span>WEXITSTATUS<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>status<span class=\"p\">)</span></td></tr><tr><th id=\"L854\"><a href=\"#L854\">854</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L855\"><a href=\"#L855\">855</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 sig <span class=\"o\">=</span>\u00a0os<span class=\"o\">.</span>WTERMSIG<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>status<span class=\"p\">)</span></td></tr><tr><th id=\"L856\"><a href=\"#L856\">856</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L857\"><a href=\"#L857\">857</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span>\u00a0<span class=\"c\"># wonder when this happens</span></td></tr><tr><th id=\"L858\"><a href=\"#L858\">858</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0exitCode <span class=\"ow\">or</span>\u00a0sig<span class=\"p\">:</span></td></tr><tr><th id=\"L859\"><a href=\"#L859\">859</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 e <span class=\"o\">=</span>\u00a0error<span class=\"o\">.</span>ProcessTerminated<span class=\"p\">(</span>exitCode<span class=\"p\">,</span>\u00a0sig<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>status<span class=\"p\">)</span></td></tr><tr><th id=\"L860\"><a href=\"#L860\">860</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L861\"><a href=\"#L861\">861</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 e <span class=\"o\">=</span>\u00a0error<span class=\"o\">.</span>ProcessDone<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>status<span class=\"p\">)</span></td></tr><tr><th id=\"L862\"><a href=\"#L862\">862</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>proto<span class=\"o\">.</span>processEnded<span class=\"p\">(</span>failure<span class=\"o\">.</span>Failure<span class=\"p\">(</span>e<span class=\"p\">))</span></td></tr><tr><th id=\"L863\"><a href=\"#L863\">863</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>proto <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L864\"><a href=\"#L864\">864</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span><span class=\"p\">:</span></td></tr><tr><th id=\"L865\"><a href=\"#L865\">865</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log<span class=\"o\">.</span>err<span class=\"p\">()</span></td></tr><tr><th id=\"L866\"><a href=\"#L866\">866</a></th><td></td></tr><tr><th id=\"L867\"><a href=\"#L867\">867</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectionLost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reason<span class=\"p\">):</span></td></tr><tr><th id=\"L868\"><a href=\"#L868\">868</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"I call this to clean up when one or all of my connections has died.</span></td></tr><tr><th id=\"L869\"><a href=\"#L869\">869</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L870\"><a href=\"#L870\">870</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 abstract<span class=\"o\">.</span>FileDescriptor<span class=\"o\">.</span>connectionLost<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reason<span class=\"p\">)</span></td></tr><tr><th id=\"L871\"><a href=\"#L871\">871</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>close<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>fd<span class=\"p\">)</span></td></tr><tr><th id=\"L872\"><a href=\"#L872\">872</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>lostProcess <span class=\"o\">+=</span><span class=\"mi\">1</span></td></tr><tr><th id=\"L873\"><a href=\"#L873\">873</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>maybeCallProcessEnded<span class=\"p\">()</span></td></tr><tr><th id=\"L874\"><a href=\"#L874\">874</a></th><td></td></tr><tr><th id=\"L875\"><a href=\"#L875\">875</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">writeSomeData</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0data<span class=\"p\">):</span></td></tr><tr><th id=\"L876\"><a href=\"#L876\">876</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Write some data to the open process.</span></td></tr><tr><th id=\"L877\"><a href=\"#L877\">877</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L878\"><a href=\"#L878\">878</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L879\"><a href=\"#L879\">879</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0os<span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>fd<span class=\"p\">,</span>\u00a0data<span class=\"p\">)</span></td></tr><tr><th id=\"L880\"><a href=\"#L880\">880</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">IOError</span><span class=\"p\">,</span>io<span class=\"p\">:</span></td></tr><tr><th id=\"L881\"><a href=\"#L881\">881</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0io<span class=\"o\">.</span>args<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\u00a0<span class=\"o\">==</span>\u00a0errno<span class=\"o\">.</span>EAGAIN<span class=\"p\">:</span></td></tr><tr><th id=\"L882\"><a href=\"#L882\">882</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L883\"><a href=\"#L883\">883</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0CONNECTION_LOST</td></tr><tr><th id=\"L884\"><a href=\"#L884\">884</a></th><td></td></tr><tr><th id=\"L885\"><a href=\"#L885\">885</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L886\"><a href=\"#L886\">886</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"s\">\"&lt;</span><span class=\"si\">%s</span><span class=\"s\">\u00a0pid=</span><span class=\"si\">%s</span><span class=\"s\">\u00a0status=</span><span class=\"si\">%s</span><span class=\"s\">&gt;\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>__class__<span class=\"o\">.</span>__name__<span class=\"p\">,</span></td></tr><tr><th id=\"L887\"><a href=\"#L887\">887</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>pid<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>status<span class=\"p\">)</span></td></tr></tbody></table>\n\n      </div>\n      <div id=\"anydiff\">\n        <form action=\"/LUCICodeRepository/nomaticIM/diff\" method=\"get\">\n          <div class=\"buttons\">\n            <input type=\"hidden\" name=\"new_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/process.py\" />\n            <input type=\"hidden\" name=\"old_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/process.py\" />\n            <input type=\"hidden\" name=\"new_rev\" />\n            <input type=\"hidden\" name=\"old_rev\" />\n            <input type=\"submit\" value=\"View changes...\" title=\"Select paths and revs for Diff\" />\n          </div>\n        </form>\n      </div>\n      <div id=\"help\"><strong>Note:</strong> See <a href=\"/LUCICodeRepository/nomaticIM/wiki/TracBrowser\">TracBrowser</a>\n        for help on using the repository browser.</div>\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"first\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/process.py?format=txt\">Plain Text</a>\n        </li><li class=\"last\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/process.py\">Original Format</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/LUCICodeRepository/nomaticIM/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/LUCICodeRepository/nomaticIM/about\"><strong>Trac 1.0.1</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">All content copyright 2007-2008 by LUCI <br /><a href=\"http://luci.ics.uci.edu/\">http://luci.ics.uci.edu/</a></p>\n    </div>\n\t\t<div id=\"sitefooter\">\n\t\t\t<script src=\"http://www.google-analytics.com/urchin.js\" type=\"text/javascript\">\n\t\t\t</script>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t\t_uacct = \"UA-338915-2\";\n\t\t\t\turchinTracker();\n\t\t\t</script>\n\t\t</div>\n\t</body>\n</html>", "id": 44238.0}