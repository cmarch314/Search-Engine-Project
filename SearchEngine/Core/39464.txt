{"text": "Navigation Up Table of Contents Bibliography Index Title Page advanced PartitionIsValidTraits 2 Definition Requirements of a traits class that is used by partition is valid 2 convex partition is valid 2 and y monotone partition is valid 2 for testing if a given set of polygons are nonoverlapping and if their union is a polygon that is the same as a polygon represented by a given sequence of points Note that the traits class for partition is valid 2 may have to satisfy additional requirements if each partition polygon is to be tested for having a particular property see for example the descriptions of the function is convex 2 and the concept YMonotonePartitionTraits 2 for the additional requirements for testing for convexity and y monotonicity respectively Types PartitionIsValidTraits 2 Point 2 The point type on which the partitioning algorithm operates PartitionIsValidTraits 2 Polygon 2 The polygon type created by the partitioning function This type should provide a nested type Vertex const iterator that is the type of the non mutable iterator over the polygon vertices PartitionIsValidTraits 2 Is valid A model of the concept PolygonIsValid PartitionIsValidTraits 2 Less xy 2 Predicate object type that compares Point 2s lexicographically Must provide bool operator Point 2 p Point 2 q where true is returned iff p xy q We have p xyq iff px qx or px qx and py qy where px and py denote the x and y coordinates of point p respectively PartitionIsValidTraits 2 Left turn 2 Predicate object type that provides bool operator Point 2 p Point 2 q Point 2 r which returns true iff r lies to the left of the oriented line through p and q PartitionIsValidTraits 2 Orientation 2 Predicate object type that provides CGAL Orientation operator Point 2 p Point 2 q Point 2 r that returns CGAL LEFT TURN if r lies to the left of the oriented line l defined by p and q returns CGAL RIGHT TURN if r lies to the right of l and returns CGAL COLLINEAR if r lies on l Creation Only a copy constructor is required PartitionIsValidTraits 2 traits tr Operations The following functions that create instances of the above predicate object types must exist Orientation 2 traits is valid object Less xy 2 traits less xy 2 object Left turn 2 traits left turn 2 object Orientation 2 traits orientation 2 object Has Models CGAL Partition is valid traits 2 Traits PolygonIsValid See Also CGAL approx convex partition 2 CGAL greene approx convex partition 2 CGAL optimal convex partition 2 CGAL y monotone partition 2 advanced Next YMonotonePartitionIsValidTraits 2 Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Partition_2_ref/Concept_PartitionIsValidTraits_2.html", "title": "partitionisvalidtraits_2", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Partition_2_ref/PartitionIsValidTraits_2.tex' -->\n<html> <head>  \n<title>PartitionIsValidTraits_2</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_683\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_673\"></A><BR>\n\n<div class=\"AdvancedBlock\">\n  <table><tr><td valign=\"top\">\n  <img border=\"0\" src=\"cc_advanced_begin1.gif\" alt=\"begin of advanced section\">\n  </td><td valign=\"top\">\n  <em class=\"AdvancedBlockLabel\">&nbsp;advanced&nbsp;</em>\n  </td><td valign=\"top\">\n  <img border=\"0\" src=\"cc_advanced_begin2.gif\" alt=\"begin of advanced section\">\n  </td></tr></table>\n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Concept.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_PartitionIsValidTraits_2\"></A>\n<h2><I>PartitionIsValidTraits_2</I></h2>\n<P>\n\n<H3>Definition</H3>\n<P>\n\nRequirements of a traits class that is used \nby <I><A HREF=\"Function_partition_is_valid_2.html#Cross_link_anchor_708\">partition_is_valid_2</A></I>, <I><A HREF=\"Function_convex_partition_is_valid_2.html#Cross_link_anchor_700\">convex_partition_is_valid_2</A></I>,\nand <I><A HREF=\"Function_y_monotone_partition_is_valid_2.html#Cross_link_anchor_712\">y_monotone_partition_is_valid_2</A></I> for testing if a given set of \npolygons are nonoverlapping and if their union is a polygon that is the \nsame as a polygon represented by a given sequence of points.  Note that the \ntraits class for <I><A HREF=\"Function_partition_is_valid_2.html#Cross_link_anchor_708\">partition_is_valid_2</A></I> may have to satisfy additional\nrequirements if each partition polygon is to be tested for having a\nparticular property; see, for example, the descriptions of the \nfunction <I><A HREF=\"../Polygon_ref/Function_is_convex_2.html#Cross_link_anchor_661\">is_convex_2</A></I>\nand the concept <I><A HREF=\"Concept_YMonotonePartitionTraits_2.html#Cross_link_anchor_685\">YMonotonePartitionTraits_2</A></I> for the additional requirements\nfor testing for convexity and <MATH><I>y</I></MATH>-monotonicity, respectively.\n<P>\n\n<H3>Types</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_PartitionIsValidTraits_2.html#Cross_link_anchor_683\">PartitionIsValidTraits_2</A>::<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    The point type on which the partitioning algorithm operates.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_PartitionIsValidTraits_2.html#Cross_link_anchor_683\">PartitionIsValidTraits_2</A>::<A HREF=\"../Polygon_ref/Class_Polygon_2.html#Cross_link_anchor_672\">Polygon_2</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    The polygon type created by the partitioning \nfunction. This type should provide a nested type <I>Vertex_const_iterator</I> \nthat is the type of the non-mutable iterator over the polygon vertices.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_PartitionIsValidTraits_2.html#Cross_link_anchor_683\">PartitionIsValidTraits_2</A>::Is_valid\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    A model of the concept <A HREF=\"FunctionObjectConcept_PolygonIsValid.html#Cross_link_anchor_686\">PolygonIsValid</A>\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_PartitionIsValidTraits_2.html#Cross_link_anchor_683\">PartitionIsValidTraits_2</A>::Less_xy_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Predicate object type that compares <I><A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A></I>s lexicographically.\nMust provide <I>bool operator()(<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p, <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> q)</I> where <I>true</I>\nis returned iff <MATH><I>p &lt;<SUB>xy</SUB> q</I></MATH>.\nWe have <MATH><I>p&lt;<SUB>xy</SUB>q</I></MATH>, iff <MATH><I>p<SUB>x</SUB> &lt; q<SUB>x</SUB></I></MATH> or <MATH><I>p<SUB>x</SUB> = q<SUB>x</SUB></I></MATH> and <MATH><I>p<SUB>y</SUB> &lt; q<SUB>y</SUB></I></MATH>,\nwhere <MATH><I>p<SUB>x</SUB></I></MATH> and <MATH><I>p<SUB>y</SUB></I></MATH> denote the <MATH><I>x</I></MATH> and <MATH><I>y</I></MATH> coordinates of point <MATH><I>p</I></MATH>, \nrespectively.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_PartitionIsValidTraits_2.html#Cross_link_anchor_683\">PartitionIsValidTraits_2</A>::Left_turn_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Predicate object type that provides \n<I>bool operator()(<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p,<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> q,<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> r)</I>, which\nreturns <I>true</I> iff <I>r</I> lies to the left of the \noriented line through <I>p</I> and <I>q</I>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_PartitionIsValidTraits_2.html#Cross_link_anchor_683\">PartitionIsValidTraits_2</A>::Orientation_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Predicate object type that provides\n<I><A HREF=\"../Kernel_23_ref/Enum_Orientation.html#Cross_link_anchor_113\">CGAL::Orientation</A> operator()(<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p, <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> q, <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> r)</I> that\nreturns <I><A HREF=\"../Kernel_23_ref/Constant_LEFT_TURN.html#Cross_link_anchor_126\">CGAL::LEFT_TURN</A></I>, if <MATH><I>r</I></MATH> lies to the left of the oriented \nline <MATH><I>l</I></MATH> defined by <MATH><I>p</I></MATH> and <MATH><I>q</I></MATH>, returns <I><A HREF=\"../Kernel_23_ref/Constant_RIGHT_TURN.html#Cross_link_anchor_128\">CGAL::RIGHT_TURN</A></I> if <MATH><I>r</I></MATH> \nlies to the right of <MATH><I>l</I></MATH>, and returns <I><A HREF=\"../Kernel_23_ref/Constant_COLLINEAR.html#Cross_link_anchor_124\">CGAL::COLLINEAR</A></I> if <MATH><I>r</I></MATH> lies\non <MATH><I>l</I></MATH>.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Creation</H3>\n<P>\n\nOnly a copy constructor is required.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_PartitionIsValidTraits_2.html#Cross_link_anchor_683\">PartitionIsValidTraits_2</A> traits (  &amp; tr);\n        </I></NOBR>\n        </TD></TR>\n<P>\n\n</TABLE>\n<P>\n\n<H3>Operations</H3>\n<P>\n\nThe following functions that create instances of the above predicate object\ntypes must exist.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Orientation_2_is_valid_object69;\"></A>\nOrientation_2\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.is_valid_object ()\n        </I></NOBR>\n        \n    \n        </TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Less_xy_2_less_xy_2_object69;\"></A>\nLess_xy_2\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.less_xy_2_object ()\n        </I></NOBR>\n        \n    \n        </TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Left_turn_2_left_turn_2_object69;\"></A>\nLeft_turn_2\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.left_turn_2_object ()\n        </I></NOBR>\n        \n    \n        </TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Orientation_2_orientation_2_object69;\"></A>\nOrientation_2\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.orientation_2_object ()\n        </I></NOBR>\n        \n    \n        </TR>\n        </TABLE>\n<P>\n\n<H3>Has Models</H3>\n<P>\n\n<I><A HREF=\"Class_Partition_is_valid_traits_2.html#Cross_link_anchor_687\">CGAL::Partition_is_valid_traits_2</A>&lt;Traits, <A HREF=\"FunctionObjectConcept_PolygonIsValid.html#Cross_link_anchor_686\">PolygonIsValid</A>&gt;</I>\n<P>\n\n<H3>See Also</H3>\n<P>\n\n<I><A HREF=\"Function_approx_convex_partition_2.html#Cross_link_anchor_697\">CGAL::approx_convex_partition_2</A></I><BR>\n\n<I><A HREF=\"Function_greene_approx_convex_partition_2.html#Cross_link_anchor_701\">CGAL::greene_approx_convex_partition_2</A></I><BR>\n\n<I><A HREF=\"Function_optimal_convex_partition_2.html#Cross_link_anchor_705\">CGAL::optimal_convex_partition_2</A></I><BR>\n\n<I><A HREF=\"Function_y_monotone_partition_2.html#Cross_link_anchor_709\">CGAL::y_monotone_partition_2</A></I>\n<P>\n\n<table><tr><td valign=\"bottom\">\n  <img border=\"0\" src=\"cc_advanced_end1.gif\" alt=\"end of advanced section\">\n  </td><td valign=\"bottom\">\n  <em class=\"AdvancedBlockLabel\">&nbsp;advanced&nbsp;</em>\n  </td><td valign=\"bottom\">\n  <img border=\"0\" src=\"cc_advanced_end2.gif\" alt=\"end of advanced section\">\n  </td></tr></table></div>\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Concept_YMonotonePartitionIsValidTraits_2.html\"><I>YMonotonePartitionIsValidTraits_2</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_10!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 39464.0}