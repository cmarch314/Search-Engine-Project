{"text": "Navigation Up Table of Contents Bibliography Index Title Page Chapter 242D Arrangements Ester Ezra Eyal Flato Dan Halperin Iddo Hanniel Shai Hirsch and Ron Wein Introduction The arrangement class holds a planar map and a hierarchy tree Vertices halfedges and faces of the arrangement are derived from those of the planar map with the additional functionality of the arrangement in the same way that the vertices halfedges and faces of the topological map class are derived from those of the Dcel class see Chapter The Hierarchy Tree The hierarchy tree is implemented using the In place list class see the chapter on STL Extensions in the Support Library Manual Every level of a curve hierarchy is a list of tree nodes The Curve node and Edge node of the hierarchy derive from Subcurve node This enables the polymorphic structure of the tree The Subcurve node is derived from the Base node which is a template parameter of the arrangement This enables the addition of attributes to the nodes of the hierarchy tree by adding them inside the Base node Arrangement Dcel The arrangement is parametrized with the interface class Dcel The Dcel is a container class that defines the underlying combinatorial data structure used by the planar map We define the concept ArrangementDcel 2 where the requirements for a Dcel class are defined As part of the Dcel we define requirements for its vertex halfedge and face constituents If we consider these constituents as informally subconcepts of the Dcel concept then we have the following models for its constituents The Arr 2 vertex base Point is a model for the Dcel vertex subconcept the Arr 2 halfedge base Base node is a model for the Dcel halfedge subconcept and the Arr 2 face base is a model for the Dcel face subconcept include CGAL Arr 2 bases h The Arr 2 default dcel Traits is a model of the Dcel concept described above Its template parameter is the traits class It is a wrapper for Pm dcel instantiated with Arr 2 vertex base Traits Point Arr 2 halfedge base Arr base node Traits X curve and Arr 2 face base include CGAL Arr 2 default dcel h Models for an Arrangement Traits Class We supply traits classes that support three families of curves Line segments We actually have two traits classes for line segments Arr segment traits 2 that heavily relies on the CGAL kernel and Arr segment cached traits 2 which stores extra chached information regarding the segments to achieve faster running times Polylines which are piecewise linear curves a sequence of line segments where each to neighboring segments share a common endpoint The Arr polyline traits 2 class is used to construct arrangements of polylines Conic arcs or bounded segments of algenraic curves of degree 2 at most such as circles hyperbolic arcs and line segments The Arr conic traits 2 supports this family of curves Since the requirements of the arrangement traits are a superset of the requirements of the Planar Map Traits and Planer Map with Intersection Traits any traits class that works with arrangements can work with planar maps as well Arrangement 2 Dcel Traits Base node ArrangementBaseNode 2 Arr base node Curve Arrangement 2 Dcel Traits Base node Subcurve node Arrangement 2 Dcel Traits Base node Curve node Arrangement 2 Dcel Traits Base node Edge node Arrangement 2 Dcel Traits Base node Halfedge ArrangementDcel 2 ArrangementDcelHalfedge 2 ArrangementTraits 2 Arr segment traits 2 Kernel Arr segment cached traits 2 Kernel Arr polyline traits 2 Segment traits Arr conic traits 2 Int kernel Alg kernel Arr file scanner Arrangement Arr file writer Arrangement write arr Next chapter 2D Sweep Line of Planar Curves Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Arrangement_2_ref/Chapter_intro.html", "title": "2d arrangements", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Arrangement_2_ref/intro.tex' -->\n<html> <head>  \n<title>2D Arrangements</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n<a name=\"Chapter_24\"></a>\n  \n<h1>Chapter 24<BR>2D Arrangements</h1>\n\n<EM>Ester Ezra, Eyal Flato, Dan\n  Halperin, Iddo Hanniel, Shai Hirsch, and Ron Wein</EM><BR>\n\n\n<P>\n\n<h3>Introduction</h3>\n\n<A NAME=\"ccRef_arr_ref_intro\"></A>\n<P>\n\nThe arrangement class holds a planar map and a hierarchy tree.\nVertices, halfedges and faces of the arrangement are derived from\nthose of the planar map (with the additional functionality of\nthe arrangement), in the same way that the vertices, halfedges and faces \nof the topological map class are derived from those of the Dcel class\n(see Chapter<A HREF=\"../Topological_map/Chapter_main.html#I1_ChapterTopologicalMap\"><IMG SRC=\"cc_ref_up_arrow.gif\" ALT=\"reference\" WIDTH=\"10\" HEIGHT=\"10\"></A>).\n<P>\n\n<h3>The Hierarchy Tree</h3>\n<P>\n\nThe hierarchy tree is implemented using the <I><A HREF=\"../STL_Extension_ref/Class_In_place_list.html#Cross_link_anchor_1434\">In_place_list</A></I>\nclass (see the chapter on STL Extensions in the Support Library Manual). \nEvery level of a curve\nhierarchy is a list of tree nodes.The <I>Curve_node</I> and \n<I>Edge_node</I> of \nthe hierarchy derive from <I>Subcurve_node</I>. This enables the\npolymorphic structure of the tree. The <I>Subcurve_node</I> is\nderived from the <I>Base_node</I> which is a template parameter\nof the arrangement. This enables the addition of attributes to the nodes\nof the hierarchy tree by adding them inside the <I>Base_node</I>.\n<P>\n\n<h3>Arrangement Dcel</h3>\n\nThe arrangement is parametrized with the interface class <I>Dcel</I>.\nThe <I>Dcel</I> is a container class that defines the underlying\ncombinatorial data structure used by the planar map. We define the\nconcept <I><A HREF=\"Concept_ArrangementDcel_2.html#Cross_link_anchor_833\">ArrangementDcel_2</A></I> \nwhere the requirements for a <I>Dcel</I> class are defined.\n<P>\n\nAs part of the <I>Dcel</I> we define requirements for its vertex, halfedge and \nface constituents. If we consider these constituents as (informally) \nsubconcepts of the <I>Dcel</I> concept then we have the following models for\nits constituents.\n<P>\n\nThe <I>Arr_2_vertex_base&lt;Point&gt;</I> is a model for the \nDcel vertex subconcept,\nthe <I>Arr_2_halfedge_base&lt;Base_node&gt;</I> is a\nmodel for the Dcel halfedge subconcept\nand the <I>Arr_2_face_base</I> is a\nmodel for the Dcel face subconcept.\n<P>\n\n<I>#include &lt;<A HREF=\"../../../include/CGAL/Arr_2_bases.h\">CGAL/Arr_2_bases.h</A>&gt;</I>\n<P>\n\nThe <I>Arr_2_default_dcel&lt;Traits&gt;</I> is a model of the Dcel concept\ndescribed above. Its template parameter is the traits class.\nIt is a wrapper for <I><A HREF=\"../Planar_map_ref/Class_Pm_dcel.html#Cross_link_anchor_799\">Pm_dcel</A></I> instantiated \nwith <I>Arr_2_vertex_base&lt;Traits::Point&gt;</I>,<BR>\n\n<I>Arr_2_halfedge_base&lt;<A HREF=\"Class_Arr_base_node.html#Cross_link_anchor_824\">Arr_base_node</A>&lt;Traits::X_curve&gt; &gt;</I> and \n<I>Arr_2_face_base</I>.\n<P>\n\n<I>#include &lt;<A HREF=\"../../../include/CGAL/Arr_2_default_dcel.h\">CGAL/Arr_2_default_dcel.h</A>&gt;</I>\n<P>\n\n<h3>Models for an Arrangement Traits Class</h3>\n \nWe supply traits classes that support three families of curves:\n<UL>\n<LI>Line segments. We actually have two traits classes for line segments: \n      <I><A HREF=\"Class_Arr_segment_traits_2.html#Cross_link_anchor_837\">Arr_segment_traits_2</A></I> that heavily relies on the CGAL\n      kernel and <I><A HREF=\"Class_Arr_segment_cached_traits_2.html#Cross_link_anchor_839\">Arr_segment_cached_traits_2</A></I>, which stores\n      extra chached information regarding the segments to achieve faster\n      running times.\n<LI>Polylines, which are piecewise linear curves (a sequence of line segments\n      where each to neighboring segments share a common endpoint). The\n      <I><A HREF=\"Class_Arr_polyline_traits_2.html#Cross_link_anchor_841\">Arr_polyline_traits_2</A></I> class is used to construct arrangements\n      of polylines.\n<LI>Conic arcs, or bounded segments of algenraic curves of degree 2 at most\n      (such as circles, hyperbolic arcs and line segments). The\n      <I><A HREF=\"Class_Arr_conic_traits_2.html#Cross_link_anchor_843\">Arr_conic_traits_2</A></I> supports this family of curves.\n</UL>\n<P>\n\nSince the requirements of the arrangement traits are a superset of the \nrequirements of the Planar Map Traits and Planer Map with Intersection Traits,\nany traits class that works with arrangements can work with planar maps as \nwell.\n<P>\n\n<UL><LI>\n<a href=\"Class_Arrangement_2.html\"><I>Arrangement_2&lt;Dcel,Traits,Base_node&gt;</I></a></UL>\n<P>\n\n<UL><LI>\n<a href=\"Concept_ArrangementBaseNode_2.html\"><I>ArrangementBaseNode_2</I></a></UL>\n<P>\n\n<UL><LI>\n<a href=\"Class_Arr_base_node.html\"><I>Arr_base_node&lt;Curve&gt;</I></a></UL>\n<P>\n\n<UL><LI>\n<a href=\"Class_Arrangement_2-Dcel-Traits-Base_node---Subcurve_node.html\"><I>Arrangement_2&lt;Dcel,Traits,Base_node&gt;::Subcurve_node</I></a></UL>\n<P>\n\n<UL><LI>\n<a href=\"Class_Arrangement_2-Dcel-Traits-Base_node---Curve_node.html\"><I>Arrangement_2&lt;Dcel,Traits,Base_node&gt;::Curve_node</I></a></UL>\n<P>\n\n<UL><LI>\n<a href=\"Class_Arrangement_2-Dcel-Traits-Base_node---Edge_node.html\"><I>Arrangement_2&lt;Dcel,Traits,Base_node&gt;::Edge_node</I></a></UL>\n<P>\n\n<UL><LI>\n<a href=\"Class_Arrangement_2-Dcel-Traits-Base_node---Halfedge.html\"><I>Arrangement_2&lt;Dcel,Traits,Base_node&gt;::Halfedge</I></a></UL>\n<P>\n\n<UL><LI>\n<a href=\"Concept_ArrangementDcel_2.html\"><I>ArrangementDcel_2</I></a></UL>\n<P>\n\n<UL><LI>\n<a href=\"Concept_ArrangementDcelHalfedge_2.html\"><I>ArrangementDcelHalfedge_2</I></a></UL>\n<P>\n\n<UL><LI>\n<a href=\"Concept_ArrangementTraits_2.html\"><I>ArrangementTraits_2</I></a></UL>\n<P>\n\n<UL><LI>\n<a href=\"Class_Arr_segment_traits_2.html\"><I>Arr_segment_traits_2&lt;Kernel&gt;</I></a></UL>\n<P>\n\n<UL><LI>\n<a href=\"Class_Arr_segment_cached_traits_2.html\"><I>Arr_segment_cached_traits_2&lt;Kernel&gt;</I></a></UL>\n<P>\n\n<UL><LI>\n<a href=\"Class_Arr_polyline_traits_2.html\"><I>Arr_polyline_traits_2&lt;Segment_traits&gt;</I></a></UL>\n<P>\n\n<UL><LI>\n<a href=\"Class_Arr_conic_traits_2.html\"><I>Arr_conic_traits_2&lt;Int_kernel, Alg_kernel&gt;</I></a></UL>\n<P>\n\n<UL><LI>\n<a href=\"Class_Arr_file_scanner.html\"><I>Arr_file_scanner&lt;Arrangement&gt;</I></a></UL>\n<P>\n\n<UL><LI>\n<a href=\"Class_Arr_file_writer.html\"><I>Arr_file_writer&lt;Arrangement&gt;</I></a></UL>\n<P>\n\n<UL><LI>\n<a href=\"Function_write_arr.html\"><I>write_arr</I></a></UL>\n<P>\n\n<div class=\"NavNext\"><hr> Next chapter: <a href=\"../Sweep_line_2/Chapter_main.html\">2D Sweep Line of Planar Curves</a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_24!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 38730.0}