{"text": "Navigation Up Table of Contents Bibliography Index Title Page CGAL min max element DefinitionThe function min max element computes the minimal and the maximal element of a range It is modeled after the STL functions min element and max element The advantage of min max element compared to calling both STL functions is that one only iterates once over the sequence This is more efficient especially for large and or complex sequences include CGAL algorithm h template class ForwardIterator std pair ForwardIterator ForwardIterator min max element ForwardIterator first ForwardIterator last returns a pair of iterators where the first component refers to the minimal and the second component refers to the maximal element in the range first last The ordering is defined by operator on the value type of ForwardIterator template class ForwardIterator class CompareMin class CompareMax std pair ForwardIterator ForwardIterator min max element ForwardIterator first ForwardIterator last CompareMin comp min CompareMax comp max returns a pair of iterators where the first component refers to the minimal and the second component refers to the maximal element in the range first last Requirement CompareMin and CompareMax are adaptable binary function objects VT VT bool where VT is the value type of ForwardIterator ExampleThe following example program computes the minimal and maximal element of the sequence 3 6 5 Hence the output is min 3 max 6 include CGAL algorithm h include vector include iostream using std vector using std pair using std cout using std endl using CGAL min max element int main vector int v v push back 3 v push back 6 v push back 5 typedef std vector int iterator iterator pair iterator iterator p min max element v begin v end cout min p first max p second endl return Next min element if Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/STL_Extension_ref/Function_min_max_element.html", "title": "min_max_element", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './STL_Extension_ref/stl_extension.tex' -->\n<html> <head>  \n<title>min_max_element</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_1447\"></A>\n\n<A NAME=\"Cross_link_anchor_1448\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_1429\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Function.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_CGAL::min_max_element\"></A>\n<h2><I>CGAL::min_max_element</I></h2>\n\n\n  <A NAME=\"sectionMinmaxelement\"></A>\n<P>\n\n<H3>Definition</H3>The function <I><A HREF=\"Function_min_max_element.html#Cross_link_anchor_1448\">min_max_element</A></I> computes the minimal and the\n  maximal element of a range. It is modeled after the STL functions\n  <I>min_element</I> and <I>max_element</I>. The advantage of\n  <I><A HREF=\"Function_min_max_element.html#Cross_link_anchor_1448\">min_max_element</A></I> compared to calling both STL functions is that\n  one only iterates once over the sequence. This is more efficient\n  especially for large and/or complex sequences.\n<P>\n\n<I>#include &lt;<A HREF=\"../../../include/CGAL/algorithm.h\">CGAL/algorithm.h</A>&gt;</I>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    template &lt; class ForwardIterator &gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_std::pair6_ForwardIterator+_ForwardIterator_9_min_max_element6ForwardIterator_first+_ForwardIterator_last9;\"></A>\nstd::pair&lt; ForwardIterator, ForwardIterator &gt;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    <A HREF=\"Function_min_max_element.html#Cross_link_anchor_1448\">min_max_element</A> ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    ForwardIterator first,<BR>\n\nForwardIterator last)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns a pair of iterators where\n    the first component refers to the minimal and the second component\n    refers to the maximal element in the range [<I>first</I>,\n    <I>last</I>). The ordering is defined by <I>operator&lt;</I> on the\n    value type of <I>ForwardIterator</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    template &lt; class ForwardIterator, class CompareMin, class CompareMax &gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_std::pair6_ForwardIterator+_ForwardIterator_9_min_max_element6ForwardIterator_first+_ForwardIterator_last+_CompareMin_comp_min+_CompareMax_comp_max9;\"></A>\nstd::pair&lt; ForwardIterator, ForwardIterator &gt;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    <A HREF=\"Function_min_max_element.html#Cross_link_anchor_1448\">min_max_element</A> ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    ForwardIterator first,<BR>\n\nForwardIterator last,<BR>\n\nCompareMin comp_min,<BR>\n\nCompareMax comp_max)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns a pair of\n    iterators where the first component refers to the minimal and the\n    second component refers to the maximal element in the range\n    [<I>first</I>, <I>last</I>).<BR>\n\n<EM>Requirement: </EM><I>CompareMin</I> and <I>CompareMax</I> are adaptable binary\n    function objects:\n    <I>VT</I>&nbsp;<MATH><I> &times; </I></MATH>&nbsp;<I>VT</I>&nbsp;<MATH><I> <IMG BORDER=0 WIDTH=15 HEIGHT=9 ALIGN=BOTTOM SRC=\"cc_rightarrow.gif\"> </I></MATH>&nbsp;<I>bool</I> where <I>VT</I>\n    is the value type of <I>ForwardIterator</I>.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Example</H3>The following example program computes the minimal and\n  maximal element of the sequence <MATH><I>(3,6,5)</I></MATH>. Hence the output is\n  <I><A HREF=\"../NumberTypeSupport_ref/Function_min.html#Cross_link_anchor_1394\">min</A> = 3, <A HREF=\"../NumberTypeSupport_ref/Function_max.html#Cross_link_anchor_1392\">max</A> = 6</I>.\n<P>\n\n<pre class=\"ExampleCode\">#include &lt;CGAL/algorithm.h&gt;\n#include &lt;vector&gt;\n#include &lt;iostream&gt;\n\nusing std::vector;\nusing std::pair;\nusing std::cout;\nusing std::endl;\nusing <A HREF=\"Function_min_max_element.html#Cross_link_anchor_1447\">CGAL::min_max_element</A>;\n\nint main()\n{\n  vector&lt; int &gt; v;\n  v.push_back(3);\n  v.push_back(6);\n  v.push_back(5);\n  typedef std::vector&lt; int &gt;::iterator iterator;\n  pair&lt; iterator, iterator &gt; p = <A HREF=\"Function_min_max_element.html#Cross_link_anchor_1448\">min_max_element</A>(v.begin(), v.end());\n  cout &lt;&lt; &quot;<A HREF=\"../NumberTypeSupport_ref/Function_min.html#Cross_link_anchor_1394\">min</A> = &quot; &lt;&lt; *p.first &lt;&lt; &quot;, <A HREF=\"../NumberTypeSupport_ref/Function_max.html#Cross_link_anchor_1392\">max</A> = &quot; &lt;&lt; *p.second &lt;&lt; endl;\n  return 0;\n}\n</pre>\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Function_min_element_if.html\"><I>min_element_if</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_3!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 38086.0}