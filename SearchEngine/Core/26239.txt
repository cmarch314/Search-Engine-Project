{"text": "Ucigame Gallery MegaBounce Home Getting Started Reference Introduction to Java Gallery Your browser cannot show Java applets MegaBounce shows how actual framerate displayed in the browser s status bar varies depending on the number of balls and whether pixel perfect collision detection is used Note that since each ball is checked against every other ball for a possible collision the number of ball to ball comparisons is the number of balls squared divided by two Use the up and down arrow keys or the mouse wheel to control the number of balls and use the space bar to toggle pixel perfect collision detection The goal framerate is higher than most monitors refresh rate which means that some invocations of draw will not get to the screen The value sent to framerate also controls the typematic or auto repeat frequency At the high level of 1 even the quickest press of the up arrow key would result in multiple additional balls therefore typematic is turned off for MegaBounce Class Ball extends Sprite It s an inner class so that the code can use the canvas object and the random method which are part of the Ucigame class MegaBounce java import ucigame public class MegaBounce extends Ucigame final int MAX BALLS 15 final int GOAL FRAMERATE 1 boolean usePixelPerfect true int numBallsDisplayed 25 Ball balls new Ball MAX BALLS Sprite display public void setup window size 25 25 window title MegaBounce framerate GOAL FRAMERATE window showFPS keyboard typematicOff canvas background 2 2 2 randomSeed 1 Image ballImage getImage images bouncing ball png for int i i MAX BALLS i balls i new Ball ballImage display makeSprite getImage images border png 255 display position canvas width 2 display width 2 canvas height display height 5 String myFont if isAvailableFont Georgia myFont Georgia else myFont arrayOfAvailableFonts just choose first one println MegaBounce using font myFont canvas font myFont PLAIN 4 15 5 public void draw canvas clear canvas putText FPS actualFPS 6 8 for int i i numBallsDisplayed i balls i move for int i i numBallsDisplayed i balls i bounceIfCollidesWith TOPEDGE BOTTOMEDGE LEFTEDGE RIGHTEDGE for int j i 1 j numBallsDisplayed j if usePixelPerfect balls i bounceIfCollidesWith balls j PIXELPERFECT else balls i bounceIfCollidesWith balls j for int i i numBallsDisplayed i balls i draw display draw display font Arial BOLD 11 255 1 1 display putText Num Balls numBallsDisplayed 33 48 display font Arial BOLD 11 128 if usePixelPerfect display putText Pixel Perf On 33 68 else display putText Pixel Perf Off 33 68 public void onKeyPress if keyboard isDown keyboard UP numBallsDisplayed MAX BALLS numBallsDisplayed numBallsDisplayed 1 if keyboard isDown keyboard DOWN numBallsDisplayed 1 numBallsDisplayed numBallsDisplayed 1 if keyboard isDown keyboard SPACE usePixelPerfect usePixelPerfect public void onMouseWheelMoved numBallsDisplayed numBallsDisplayed mouse wheelClicks if numBallsDisplayed 1 numBallsDisplayed 1 if numBallsDisplayed MAX BALLS numBallsDisplayed MAX BALLS class Ball extends Sprite double rotationIncrement double rotationAmount int thisBallsNumber Ball Image image super image position random canvas width width random canvas height height motion random 5 5 random 5 5 rotationAmount rotationIncrement random 15 15 public void draw rotationAmount rotationAmount rotationIncrement rotate rotationAmount super draw ", "_id": "http://frost.ics.uci.edu/Ucigame/Ucigame-20101216/Gallery/MegaBounce.html", "title": "ucigame - gallery - megabounce", "html": "<html>\r\n<head>\r\n    <title>Ucigame - Gallery - MegaBounce</title>\r\n<link href=\"../stylesheet.css\" rel=\"stylesheet\" type=\"text/css\">\r\n</head>\r\n<body>\r\n\r\n<center><h2>Ucigame - Gallery - MegaBounce</h2></center>\r\n\r\n<h4>\r\n<a href=\"../index.html\">Home</a> |\r\n<a href=\"../getting-started.html\">Getting Started</a> |\r\n<a href=\"../reference.html\">Reference</a> |\r\n<a href=\"../java.html\">Introduction to Java</a> |\r\n<a href=\"../gallery.html\">Gallery</a>\r\n</h4>\r\n\r\n<p>\r\n<table>\r\n<tr>\r\n<td width=\"300\" valign=\"top\">\r\n<applet\r\n   code=\"MegaBounce.class\"\r\n   codebase=\".\"\r\n   archive=\"../ucigame.jar\"\r\n   width=\"250\"\r\n   height=\"250\"\r\n   border=\"0\"\r\n>\r\nYour browser cannot show Java applets.\r\n</applet>\r\n</td>\r\n<td width=600 valign=\"top\" halign=\"center\">\r\nMegaBounce shows how actual framerate (displayed in the\r\nbrowser's status bar) varies depending on the number\r\nof balls and whether pixel perfect collision detection\r\nis used.  Note that since each ball is checked against\r\nevery other ball for a possible collision, the number\r\nof ball to ball comparisons is the number of balls\r\nsquared, divided by two.\r\n<br> <br>\r\nUse the up and down arrow keys, or the mouse wheel,\r\nto control the number of balls, and use the space bar\r\nto toggle pixel perfect collision detection.\r\n<br> <br>\r\nThe goal framerate is higher than most monitors'\r\nrefresh rate, which means that some invocations of\r\ndraw() will not get to the screen.  The value sent to\r\n<tt>framerate()</tt> also controls the typematic or\r\nauto-repeat frequency.  At the high level of 100, even\r\nthe quickest press of the up arrow key would result\r\nin multiple additional balls; therefore, typematic is\r\nturned off for MegaBounce.\r\n<br> <br>\r\nClass Ball extends Sprite.  It's an inner class, so that\r\nthe code can use the <tt>canvas</tt> object and the\r\n<tt>random</tt> method, which are part of the Ucigame class.\r\n\r\n</td>\r\n</tr>\r\n<tr>\r\n<td colspan=2>\r\n<br>\r\n<b>MegaBounce.java</b>\r\n<br>\r\n<pre>\r\nimport ucigame.*;\r\n\r\npublic class MegaBounce extends Ucigame\r\n{\r\n    final int MAX_BALLS = 150;\r\n    final int GOAL_FRAMERATE = 100;\r\n\r\n    boolean usePixelPerfect = true;\r\n    int numBallsDisplayed = 25;\r\n\r\n    Ball[] balls = new Ball[MAX_BALLS];\r\n    Sprite display;\r\n\r\n\r\n    public void setup()\r\n    {\r\n        window.size(250, 250);\r\n        window.title(\"MegaBounce\");\r\n        framerate(GOAL_FRAMERATE);\r\n        window.showFPS();\r\n        keyboard.typematicOff();\r\n\r\n        canvas.background(200, 200, 200);\r\n\r\n        randomSeed(100);\r\n        Image ballImage = getImage(\"images/bouncing-ball.png\", 0, 0, 0);\r\n        for (int i=0; i&lt;MAX_BALLS; i++)\r\n            balls[i] = new Ball(ballImage);\r\n\r\n        display = makeSprite(getImage(\"images/border.png\", 255, 0, 0));\r\n        display.position(canvas.width()/2 - display.width()/2,\r\n                         canvas.height() - display.height() - 5);\r\n\r\n        String myFont;\r\n        if (isAvailableFont(\"Georgia\"))\r\n            myFont = \"Georgia\";\r\n        else\r\n            myFont = arrayOfAvailableFonts()[0];    // just choose first one\r\n        println(\"MegaBounce using font \" + myFont);\r\n\r\n        canvas.font(myFont, PLAIN, 40, 0, 150, 50);\r\n    }\r\n\r\n    public void draw()\r\n    {\r\n        canvas.clear();\r\n\r\n        canvas.putText(\"FPS: \" + actualFPS(), 60, 80);\r\n\r\n        for (int i=0; i&lt;numBallsDisplayed; i++)\r\n            balls[i].move();\r\n\r\n        for (int i=0; i&lt;numBallsDisplayed; i++)\r\n        {\r\n            balls[i].bounceIfCollidesWith(TOPEDGE, BOTTOMEDGE, LEFTEDGE, RIGHTEDGE);\r\n            for (int j=i+1; j&lt;numBallsDisplayed; j++)\r\n            {\r\n                if (usePixelPerfect)\r\n                    balls[i].bounceIfCollidesWith(balls[j], PIXELPERFECT);\r\n                else\r\n                    balls[i].bounceIfCollidesWith(balls[j]);\r\n            }\r\n        }\r\n\r\n        for (int i=0; i&lt;numBallsDisplayed; i++)\r\n            balls[i].draw();\r\n\r\n        display.draw();\r\n        display.font(\"Arial\", BOLD, 11, 255, 100, 100);\r\n        display.putText(\"Num Balls: \" + numBallsDisplayed, 33, 48);\r\n        display.font(\"Arial\", BOLD, 11, 0, 0, 128);\r\n        if (usePixelPerfect)\r\n            display.putText(\"Pixel Perf: On\", 33, 68);\r\n        else\r\n            display.putText(\"Pixel Perf: Off\", 33, 68);\r\n    }\r\n\r\n    public void onKeyPress()\r\n    {\r\n        if (keyboard.isDown(keyboard.UP) && numBallsDisplayed &lt; MAX_BALLS)\r\n            numBallsDisplayed = numBallsDisplayed + 1;\r\n        if (keyboard.isDown(keyboard.DOWN) && numBallsDisplayed &gt; 1)\r\n            numBallsDisplayed = numBallsDisplayed - 1;\r\n        if (keyboard.isDown(keyboard.SPACE))\r\n            usePixelPerfect = !usePixelPerfect;\r\n    }\r\n\r\n    public void onMouseWheelMoved()\r\n    {\r\n        numBallsDisplayed = numBallsDisplayed - mouse.wheelClicks();\r\n        if (numBallsDisplayed &lt; 1)\r\n            numBallsDisplayed = 1;\r\n        if (numBallsDisplayed &gt; MAX_BALLS)\r\n            numBallsDisplayed = MAX_BALLS;\r\n    }\r\n\r\n    class Ball extends Sprite\r\n    {\r\n        double rotationIncrement;\r\n        double rotationAmount;\r\n        int thisBallsNumber;\r\n\r\n        Ball(Image image)\r\n        {\r\n            super(image);\r\n            position(random(0, canvas.width() - width()),\r\n                    random(0, canvas.height() - height()));\r\n            motion(random(-5, 5), random(-5, 5));\r\n            rotationAmount = 0;\r\n            rotationIncrement = random(-15, 15);\r\n        }\r\n\r\n        public void draw()\r\n        {\r\n            rotationAmount = rotationAmount + rotationIncrement;\r\n            rotate(rotationAmount);\r\n            super.draw();\r\n        }\r\n    }\r\n}\r\n</pre>\r\n</td>\r\n</tr>\r\n</table>\r\n\r\n<br>\r\n<br>\r\n\r\n</body>\r\n</html>\r\n", "id": 26239.0}