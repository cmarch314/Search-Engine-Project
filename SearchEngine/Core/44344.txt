{"text": "Search LoginPreferencesHelp GuideAbout Trac WikiTimelineRoadmapBrowse SourceView TicketsSearch Context Navigation BlameRevision Log source nomatic tags NomaticIM 5 buddy bots src twisted protocols htb py View diff against View revision Visit trunk Last change on this file was 712 checked in by cbaker 7 years ago First draft of nomatic buddy bots oscar bot is functional if you give it good authentication credentials jabber bot is just an example from the web File size 8 3 KB Line 1 test case name twisted test test htb 2 3 Copyright c 2 1 2 4 Twisted Matrix Laboratories 4 See LICENSE for details 567 Hierarchical Token Bucket traffic shaping 89Patterned after U Martin Devera s Hierarchical Token Bucket traffic1 shaper for the Linux kernel http luxik cdi cz devik qos htb 1112 seealso U HTB Linux queuing discipline manual user guide13 http luxik cdi cz devik qos htb manual userg htm 14 seealso U Token Bucket Filter in Linux Advanced Routing Traffic Control15 HOWTO http lartc org howto lartc qdisc classless html AEN682 16 author U Kevin Turner mailto acapnotic twistedmatrix com 17 1819from future import nested scopes2 21 version Revision 1 5 11 2 222324 TODO Investigate whether we should be using os times 1 instead of25 time time time time it has been pointed out can go backwards Is26 the same true of os times 27from time import time28from zope interface import implements Interface293 from twisted protocols import pcp313233class Bucket 34 Token bucket or something like it 3536 I can hold up to a certain number of tokens and I drain over time 3738 cvar maxburst Size of the bucket in bytes If None the bucket is39 never full 4 type maxburst int41 cvar rate Rate the bucket drains in bytes per second If None 42 the bucket drains instantaneously 43 type rate int44 4546 maxburst None47 rate None4849 refcount 5 51 def init self parentBucket None 52 self content 53 self parentBucket parentBucket54 self lastDrip time 5556 def add self amount 57 Add tokens to me 5859 param amount A quanity of tokens to add 6 type amount int6162 returns The number of tokens that fit 63 returntype int64 65 self drip 66 if self maxburst is None 67 allowable amount68 else 69 allowable min amount self maxburst self content 7 71 if self parentBucket is not None 72 allowable self parentBucket add allowable 73 self content allowable74 return allowable7576 def drip self 77 Let some of the bucket drain 7879 How much of the bucket drains depends on how long it has been8 since I was last called 8182 returns True if I am now empty 83 returntype bool84 85 if self parentBucket is not None 86 self parentBucket drip 8788 if self rate is None 89 self content 9 return True91 else 92 now time 93 deltaT now self lastDrip94 self content long max self content deltaT self rate 95 self lastDrip now96 return False979899class IBucketFilter Interface 1 def getBucketFor somethings some kw 1 1 I ll give you a bucket for something 1 21 3 returntype L Bucket 1 4 1 51 6class HierarchicalBucketFilter 1 7 I filter things into buckets and I am nestable 1 81 9 cvar bucketFactory Class of buckets to make 11 type bucketFactory L Bucket class111 cvar sweepInterval Seconds between sweeping out the bucket cache 112 type sweepInterval int113 114115 implements IBucketFilter 116117 bucketFactory Bucket118 sweepInterval None11912 def init self parentFilter None 121 self buckets 122 self parentFilter parentFilter123 self lastSweep time 124125 def getBucketFor self a kw 126 You want a bucket for that I ll give you a bucket 127128 Any parameters are passed on to L getBucketKey from them it129 decides which bucket you get 13 131 returntype L Bucket 132 133 if self sweepInterval is not None 134 and time self lastSweep self sweepInterval 135 self sweep 136137 if self parentFilter 138 parentBucket self parentFilter getBucketFor self a kw 139 else 14 parentBucket None141142 key self getBucketKey a kw 143 bucket self buckets get key 144 if bucket is None 145 bucket self bucketFactory parentBucket 146 self buckets key bucket147 return bucket148149 def getBucketKey self a kw 15 I determine who gets which bucket 151152 Unless I m overridden everything gets the same bucket 153154 returns something to be used as a key in the bucket cache 155 156 return None157158 def sweep self 159 I throw away references to empty buckets 16 for key bucket in self buckets items 161 if bucket refcount and bucket drip 162 del self buckets key 163164 self lastSweep time 165166167class FilterByHost HierarchicalBucketFilter 168 A bucket filter with a bucket for each host 169 17 sweepInterval 6 2 171172 def getBucketKey self transport 173 return transport getPeer 1 174175176class FilterByServer HierarchicalBucketFilter 177 A bucket filter with a bucket for each service 178 179 sweepInterval None18 181 def getBucketKey self transport 182 return transport getHost 2 183184185class ShapedConsumer pcp ProducerConsumerProxy 186 I wrap a Consumer and shape the rate at which it receives data 187 188 Providing a Pull interface means I don t have to try to schedule189 traffic with callLaters 19 iAmStreaming False191192 def init self consumer bucket 193 pcp ProducerConsumerProxy init self consumer 194 self bucket bucket195 self bucket refcount 1196197 def writeSomeData self data 198 In practice this actually results in obscene amounts of199 overhead as a result of generating lots and lots of packets2 with twelve byte payloads We may need to do a version of2 1 this with scheduled writes after all 2 2 amount self bucket add len data 2 3 return pcp ProducerConsumerProxy writeSomeData self data amount 2 42 5 def stopProducing self 2 6 pcp ProducerConsumerProxy stopProducing self 2 7 self bucket refcount 12 82 921 class ShapedTransport ShapedConsumer 211 I wrap a Transport and shape the rate at which it receives data 212213 I am a L ShapedConsumer with a little bit of magic to provide for214 the case where the consumer I wrap is also a Transport and people215 will be attempting to access attributes I do not proxy as a216 Consumer e g loseConnection 217 218 Ugh We only wanted to filter IConsumer not ITransport 21922 iAmStreaming False221 def getattr self name 222 Because people will be doing things like getPeer and223 loseConnection on me 224 return getattr self consumer name 225226227class ShapedProtocolFactory 228 I dispense Protocols with traffic shaping on their transports 22923 Usage 231232 myserver SomeFactory 233 myserver protocol ShapedProtocolFactory myserver protocol 234 bucketFilter 235236 Where SomeServerFactory is a L twisted internet protocol Factory and237 bucketFilter is an instance of L HierarchicalBucketFilter 238 239 def init self protoClass bucketFilter 24 Tell me what to wrap and where to get buckets 241242 param protoClass The class of Protocol I will generate243 wrapped instances of 244 type protoClass L Protocol twisted internet interfaces IProtocol 245 class246 param bucketFilter The filter which will determine how247 traffic is shaped 248 type bucketFilter L HierarchicalBucketFilter 249 25 More precisely protoClass can be any callable that will return251 instances of something that implements IProtocol 252 self protocol protoClass253 self bucketFilter bucketFilter254255 def call self a kw 256 Make a Protocol instance with a shaped transport 257258 Any parameters will be passed on to the protocol s initializer 25926 returns a Protocol instance with a L ShapedTransport 261 262 proto self protocol a kw 263 origMakeConnection proto makeConnection264 def makeConnection transport 265 bucket self bucketFilter getBucketFor transport 266 shapedTransport ShapedTransport transport bucket 267 return origMakeConnection shapedTransport 268 proto makeConnection makeConnection269 return proto Note See TracBrowser for help on using the repository browser Download in other formats Plain Text Original Format Powered by Trac 1 1 By Edgewall Software All content copyright 2 7 2 8 by LUCI http luci ics uci edu ", "_id": "http://djp3-pc2.ics.uci.edu/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/htb.py", "title": "\n      htb.py in nomatic/tags/nomaticim-0.0.5/buddy_bots/src/twisted/protocols\n     \u2013 nomatic*im\n    ", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n  \n\n\n  <head>\n\t\t<title>\n      htb.py in nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols\n     \u2013 Nomatic*IM\n    </title><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><link rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search\" /><link rel=\"help\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/htb.py?format=txt\" type=\"text/plain\" title=\"Plain Text\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/htb.py\" type=\"application/x-python; charset=iso-8859-15\" title=\"Original Format\" /><link rel=\"start\" href=\"/LUCICodeRepository/nomaticIM/wiki\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/code.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/pygments/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/browser.css\" type=\"text/css\" /><link rel=\"shortcut icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link rel=\"icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link type=\"application/opensearchdescription+xml\" rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search/opensearch\" title=\"Search Nomatic*IM\" /><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/jquery.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/babel.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/messages/en_US.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/trac.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/search.js\"></script><script type=\"text/javascript\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/folding.js\"></script><script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\".trac-toggledeleted\").show().click(function() {\n                  $(this).siblings().find(\".trac-deleted\").toggle();\n                  return false;\n        }).click();\n        $(\"#jumploc input\").hide();\n        $(\"#jumploc select\").change(function () {\n          this.parentNode.parentNode.submit();\n        });\n          $('#preview table.code').enableCollapsibleColumns($('#preview table.code thead th.content'));\n      });\n    </script>\n\t</head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://luci.ics.uci.edu/#code\"><img src=\"http://luci.ics.uci.edu/blog/archives/LUCIhorzTight.jpg\" alt=\"LUCI Code Repository\" /></a>\n      </div>\n      <form id=\"search\" action=\"/LUCICodeRepository/nomaticIM/search\" method=\"get\">\n        <div>\n          <label for=\"proj-search\">Search:</label>\n          <input type=\"text\" id=\"proj-search\" name=\"q\" size=\"18\" value=\"\" />\n          <input type=\"submit\" value=\"Search\" />\n        </div>\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/login\">Login</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/prefs\">Preferences</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\">Help/Guide</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/wiki\">Wiki</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/timeline\">Timeline</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/roadmap\">Roadmap</a></li><li class=\"active\"><a href=\"/LUCICodeRepository/nomaticIM/browser\">Browse Source</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/report\">View Tickets</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/search\">Search</a></li>\n    </ul>\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/buddy_bots/twisted/protocols/htb.py?annotate=blame\" title=\"Annotate each line with the last changed revision (this can be time consuming...)\">Blame</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/log/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/htb.py\">Revision Log</a></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"browser\">\n        <h1>\n          \n<a class=\"pathentry first\" href=\"/LUCICodeRepository/nomaticIM/browser?order=name\" title=\"Go to repository root\">source:</a>\n<a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic?order=name\" title=\"View nomatic\">nomatic</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags?order=name\" title=\"View tags\">tags</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5?order=name\" title=\"View NomaticIM-0.0.5\">NomaticIM-0.0.5</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots?order=name\" title=\"View buddy_bots\">buddy_bots</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src?order=name\" title=\"View src\">src</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted?order=name\" title=\"View twisted\">twisted</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols?order=name\" title=\"View protocols\">protocols</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/htb.py?order=name\" title=\"View htb.py\">htb.py</a>\n<br style=\"clear: both\" />\n\n        </h1>\n        <div id=\"diffrev\">\n          <form action=\"/LUCICodeRepository/nomaticIM/changeset\" method=\"get\">\n            <div>\n              <label title=\"Show the diff against a specific revision\">\n                View diff against: <input type=\"text\" name=\"old\" size=\"6\" />\n                <input type=\"hidden\" name=\"old_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/htb.py\" />\n                <input type=\"hidden\" name=\"new\" />\n                <input type=\"hidden\" name=\"new_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/htb.py\" />\n              </label>\n            </div>\n          </form>\n        </div>\n        <div id=\"jumprev\">\n          <form action=\"\" method=\"get\">\n            <div>\n              <label for=\"rev\">\n                View revision:</label>\n              <input type=\"text\" id=\"rev\" name=\"rev\" size=\"6\" />\n            </div>\n          </form>\n        </div>\n        <div id=\"jumploc\">\n          <form action=\"\" method=\"get\">\n            <div class=\"buttons\">\n              <label for=\"preselected\">Visit:</label>\n              <select id=\"preselected\" name=\"preselected\">\n                <option selected=\"selected\"></option>\n                <optgroup label=\"branches\">\n                  <option value=\"/LUCICodeRepository/nomaticIM/browser/trunk\">trunk</option>\n                </optgroup>\n              </select>\n              <input type=\"submit\" value=\"Go!\" title=\"Jump to the chosen preselected path\" />\n            </div>\n          </form>\n        </div>\n        <div class=\"trac-tags\">\n        </div>\n      <table id=\"info\" summary=\"Revision info\">\n        <tr>\n          <th>\n                <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/nomatic/trunk/buddy_bots/twisted/protocols/htb.py\" title=\"View differences\">Last change</a>\n                  on this file was\n                  <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/\" title=\"View changeset 712\">712</a>,\n                  checked in by cbaker, <a class=\"timeline\" href=\"/LUCICodeRepository/nomaticIM/timeline?from=2008-02-16T08%3A16%3A53-08%3A00&amp;precision=second\" title=\"See timeline at Feb 16, 2008, 8:16:53 AM\">7 years ago</a>\n          </th>\n        </tr>\n        <tr>\n          <td class=\"message searchable\">\n              <p>\nFirst draft of nomatic buddy bots. oscar_bot is functional if you give it good authentication credentials, jabber_bot is just an example from the web <br />\n</p>\n          </td>\n        </tr>\n        <tr><td colspan=\"2\">\n            <strong>File size:</strong>\n            <span title=\"8468 bytes\">8.3 KB</span>\n          </td></tr>\n      </table>\n      <div id=\"preview\" class=\"searchable\">\n        \n  <table class=\"code\"><thead><tr><th class=\"lineno\" title=\"Line numbers\">Line</th><th class=\"content\">\u00a0</th></tr></thead><tbody><tr><th id=\"L1\"><a href=\"#L1\">1</a></th><td><span class=\"c\"># -*- test-case-name: twisted.test.test_htb -*-</span></td></tr><tr><th id=\"L2\"><a href=\"#L2\">2</a></th><td><span class=\"c\">#</span></td></tr><tr><th id=\"L3\"><a href=\"#L3\">3</a></th><td><span class=\"c\"># Copyright (c) 2001-2004 Twisted Matrix Laboratories.</span></td></tr><tr><th id=\"L4\"><a href=\"#L4\">4</a></th><td><span class=\"c\"># See LICENSE for details.</span></td></tr><tr><th id=\"L5\"><a href=\"#L5\">5</a></th><td></td></tr><tr><th id=\"L6\"><a href=\"#L6\">6</a></th><td></td></tr><tr><th id=\"L7\"><a href=\"#L7\">7</a></th><td><span class=\"sd\">\"\"\"Hierarchical Token Bucket traffic shaping.</span></td></tr><tr><th id=\"L8\"><a href=\"#L8\">8</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L9\"><a href=\"#L9\">9</a></th><td><span class=\"sd\">Patterned after U{Martin Devera's Hierarchical Token Bucket traffic</span></td></tr><tr><th id=\"L10\"><a href=\"#L10\">10</a></th><td><span class=\"sd\">shaper for the Linux kernel&lt;http://luxik.cdi.cz/~devik/qos/htb/&gt;}.</span></td></tr><tr><th id=\"L11\"><a href=\"#L11\">11</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L12\"><a href=\"#L12\">12</a></th><td><span class=\"sd\">@seealso: U{HTB Linux queuing discipline manual - user guide</span></td></tr><tr><th id=\"L13\"><a href=\"#L13\">13</a></th><td><span class=\"sd\">\u00a0 &lt;http://luxik.cdi.cz/~devik/qos/htb/manual/userg.htm&gt;}</span></td></tr><tr><th id=\"L14\"><a href=\"#L14\">14</a></th><td><span class=\"sd\">@seealso: U{Token Bucket Filter in Linux Advanced Routing &amp; Traffic Control</span></td></tr><tr><th id=\"L15\"><a href=\"#L15\">15</a></th><td><span class=\"sd\">\u00a0 \u00a0 HOWTO&lt;http://lartc.org/howto/lartc.qdisc.classless.html#AEN682&gt;}</span></td></tr><tr><th id=\"L16\"><a href=\"#L16\">16</a></th><td><span class=\"sd\">@author: U{Kevin Turner&lt;mailto:acapnotic@twistedmatrix.com&gt;}</span></td></tr><tr><th id=\"L17\"><a href=\"#L17\">17</a></th><td><span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L18\"><a href=\"#L18\">18</a></th><td></td></tr><tr><th id=\"L19\"><a href=\"#L19\">19</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">__future__</span>\u00a0<span class=\"kn\">import</span>\u00a0nested_scopes</td></tr><tr><th id=\"L20\"><a href=\"#L20\">20</a></th><td></td></tr><tr><th id=\"L21\"><a href=\"#L21\">21</a></th><td>__version__ <span class=\"o\">=</span>\u00a0<span class=\"s\">'$Revision: 1.5 $'</span><span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">]</span></td></tr><tr><th id=\"L22\"><a href=\"#L22\">22</a></th><td></td></tr><tr><th id=\"L23\"><a href=\"#L23\">23</a></th><td></td></tr><tr><th id=\"L24\"><a href=\"#L24\">24</a></th><td><span class=\"c\"># TODO: Investigate whether we should be using os.times()[-1] instead of</span></td></tr><tr><th id=\"L25\"><a href=\"#L25\">25</a></th><td><span class=\"c\"># time.time.\u00a0 time.time, it has been pointed out, can go backwards.\u00a0 Is</span></td></tr><tr><th id=\"L26\"><a href=\"#L26\">26</a></th><td><span class=\"c\"># the same true of os.times?</span></td></tr><tr><th id=\"L27\"><a href=\"#L27\">27</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">time</span>\u00a0<span class=\"kn\">import</span>\u00a0time</td></tr><tr><th id=\"L28\"><a href=\"#L28\">28</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">zope.interface</span>\u00a0<span class=\"kn\">import</span>\u00a0implements<span class=\"p\">,</span>\u00a0Interface</td></tr><tr><th id=\"L29\"><a href=\"#L29\">29</a></th><td></td></tr><tr><th id=\"L30\"><a href=\"#L30\">30</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.protocols</span>\u00a0<span class=\"kn\">import</span>\u00a0pcp</td></tr><tr><th id=\"L31\"><a href=\"#L31\">31</a></th><td></td></tr><tr><th id=\"L32\"><a href=\"#L32\">32</a></th><td></td></tr><tr><th id=\"L33\"><a href=\"#L33\">33</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">Bucket</span><span class=\"p\">:</span></td></tr><tr><th id=\"L34\"><a href=\"#L34\">34</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Token bucket, or something like it.</span></td></tr><tr><th id=\"L35\"><a href=\"#L35\">35</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L36\"><a href=\"#L36\">36</a></th><td><span class=\"sd\">\u00a0 \u00a0 I can hold up to a certain number of tokens, and I drain over time.</span></td></tr><tr><th id=\"L37\"><a href=\"#L37\">37</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L38\"><a href=\"#L38\">38</a></th><td><span class=\"sd\">\u00a0 \u00a0 @cvar maxburst: Size of the bucket, in bytes.\u00a0 If None, the bucket is</span></td></tr><tr><th id=\"L39\"><a href=\"#L39\">39</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 never full.</span></td></tr><tr><th id=\"L40\"><a href=\"#L40\">40</a></th><td><span class=\"sd\">\u00a0 \u00a0 @type maxburst: int</span></td></tr><tr><th id=\"L41\"><a href=\"#L41\">41</a></th><td><span class=\"sd\">\u00a0 \u00a0 @cvar rate: Rate the bucket drains, in bytes per second.\u00a0 If None,</span></td></tr><tr><th id=\"L42\"><a href=\"#L42\">42</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 the bucket drains instantaneously.</span></td></tr><tr><th id=\"L43\"><a href=\"#L43\">43</a></th><td><span class=\"sd\">\u00a0 \u00a0 @type rate: int</span></td></tr><tr><th id=\"L44\"><a href=\"#L44\">44</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L45\"><a href=\"#L45\">45</a></th><td></td></tr><tr><th id=\"L46\"><a href=\"#L46\">46</a></th><td>\u00a0 \u00a0 maxburst <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L47\"><a href=\"#L47\">47</a></th><td>\u00a0 \u00a0 rate <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L48\"><a href=\"#L48\">48</a></th><td></td></tr><tr><th id=\"L49\"><a href=\"#L49\">49</a></th><td>\u00a0 \u00a0 _refcount <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L50\"><a href=\"#L50\">50</a></th><td></td></tr><tr><th id=\"L51\"><a href=\"#L51\">51</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0parentBucket<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L52\"><a href=\"#L52\">52</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>content <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L53\"><a href=\"#L53\">53</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>parentBucket<span class=\"o\">=</span>parentBucket</td></tr><tr><th id=\"L54\"><a href=\"#L54\">54</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>lastDrip <span class=\"o\">=</span>\u00a0time<span class=\"p\">()</span></td></tr><tr><th id=\"L55\"><a href=\"#L55\">55</a></th><td></td></tr><tr><th id=\"L56\"><a href=\"#L56\">56</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">add</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0amount<span class=\"p\">):</span></td></tr><tr><th id=\"L57\"><a href=\"#L57\">57</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Add tokens to me.</span></td></tr><tr><th id=\"L58\"><a href=\"#L58\">58</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L59\"><a href=\"#L59\">59</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param amount: A quanity of tokens to add.</span></td></tr><tr><th id=\"L60\"><a href=\"#L60\">60</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @type amount: int</span></td></tr><tr><th id=\"L61\"><a href=\"#L61\">61</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L62\"><a href=\"#L62\">62</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @returns: The number of tokens that fit.</span></td></tr><tr><th id=\"L63\"><a href=\"#L63\">63</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @returntype: int</span></td></tr><tr><th id=\"L64\"><a href=\"#L64\">64</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L65\"><a href=\"#L65\">65</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>drip<span class=\"p\">()</span></td></tr><tr><th id=\"L66\"><a href=\"#L66\">66</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>maxburst <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L67\"><a href=\"#L67\">67</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 allowable <span class=\"o\">=</span>\u00a0amount</td></tr><tr><th id=\"L68\"><a href=\"#L68\">68</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L69\"><a href=\"#L69\">69</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 allowable <span class=\"o\">=</span>\u00a0<span class=\"nb\">min</span><span class=\"p\">(</span>amount<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>maxburst <span class=\"o\">-</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>content<span class=\"p\">)</span></td></tr><tr><th id=\"L70\"><a href=\"#L70\">70</a></th><td></td></tr><tr><th id=\"L71\"><a href=\"#L71\">71</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>parentBucket <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L72\"><a href=\"#L72\">72</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 allowable <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>parentBucket<span class=\"o\">.</span>add<span class=\"p\">(</span>allowable<span class=\"p\">)</span></td></tr><tr><th id=\"L73\"><a href=\"#L73\">73</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>content <span class=\"o\">+=</span>\u00a0allowable</td></tr><tr><th id=\"L74\"><a href=\"#L74\">74</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0allowable</td></tr><tr><th id=\"L75\"><a href=\"#L75\">75</a></th><td></td></tr><tr><th id=\"L76\"><a href=\"#L76\">76</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">drip</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L77\"><a href=\"#L77\">77</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Let some of the bucket drain.</span></td></tr><tr><th id=\"L78\"><a href=\"#L78\">78</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L79\"><a href=\"#L79\">79</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 How much of the bucket drains depends on how long it has been</span></td></tr><tr><th id=\"L80\"><a href=\"#L80\">80</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 since I was last called.</span></td></tr><tr><th id=\"L81\"><a href=\"#L81\">81</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L82\"><a href=\"#L82\">82</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @returns: True if I am now empty.</span></td></tr><tr><th id=\"L83\"><a href=\"#L83\">83</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @returntype: bool</span></td></tr><tr><th id=\"L84\"><a href=\"#L84\">84</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L85\"><a href=\"#L85\">85</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>parentBucket <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L86\"><a href=\"#L86\">86</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>parentBucket<span class=\"o\">.</span>drip<span class=\"p\">()</span></td></tr><tr><th id=\"L87\"><a href=\"#L87\">87</a></th><td></td></tr><tr><th id=\"L88\"><a href=\"#L88\">88</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>rate <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L89\"><a href=\"#L89\">89</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>content <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L90\"><a href=\"#L90\">90</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L91\"><a href=\"#L91\">91</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L92\"><a href=\"#L92\">92</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 now <span class=\"o\">=</span>\u00a0time<span class=\"p\">()</span></td></tr><tr><th id=\"L93\"><a href=\"#L93\">93</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 deltaT <span class=\"o\">=</span>\u00a0now <span class=\"o\">-</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>lastDrip</td></tr><tr><th id=\"L94\"><a href=\"#L94\">94</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>content <span class=\"o\">=</span>\u00a0<span class=\"nb\">long</span><span class=\"p\">(</span><span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>content <span class=\"o\">-</span>\u00a0deltaT <span class=\"o\">*</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>rate<span class=\"p\">))</span></td></tr><tr><th id=\"L95\"><a href=\"#L95\">95</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>lastDrip <span class=\"o\">=</span>\u00a0now</td></tr><tr><th id=\"L96\"><a href=\"#L96\">96</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L97\"><a href=\"#L97\">97</a></th><td></td></tr><tr><th id=\"L98\"><a href=\"#L98\">98</a></th><td></td></tr><tr><th id=\"L99\"><a href=\"#L99\">99</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IBucketFilter</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L100\"><a href=\"#L100\">100</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getBucketFor</span><span class=\"p\">(</span><span class=\"o\">*</span>somethings<span class=\"p\">,</span>\u00a0<span class=\"o\">**</span>some_kw<span class=\"p\">):</span></td></tr><tr><th id=\"L101\"><a href=\"#L101\">101</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"I'll give you a bucket for something.</span></td></tr><tr><th id=\"L102\"><a href=\"#L102\">102</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L103\"><a href=\"#L103\">103</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @returntype: L{Bucket}</span></td></tr><tr><th id=\"L104\"><a href=\"#L104\">104</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L105\"><a href=\"#L105\">105</a></th><td></td></tr><tr><th id=\"L106\"><a href=\"#L106\">106</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">HierarchicalBucketFilter</span><span class=\"p\">:</span></td></tr><tr><th id=\"L107\"><a href=\"#L107\">107</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"I filter things into buckets, and I am nestable.</span></td></tr><tr><th id=\"L108\"><a href=\"#L108\">108</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L109\"><a href=\"#L109\">109</a></th><td><span class=\"sd\">\u00a0 \u00a0 @cvar bucketFactory: Class of buckets to make.</span></td></tr><tr><th id=\"L110\"><a href=\"#L110\">110</a></th><td><span class=\"sd\">\u00a0 \u00a0 @type bucketFactory: L{Bucket} class</span></td></tr><tr><th id=\"L111\"><a href=\"#L111\">111</a></th><td><span class=\"sd\">\u00a0 \u00a0 @cvar sweepInterval: Seconds between sweeping out the bucket cache.</span></td></tr><tr><th id=\"L112\"><a href=\"#L112\">112</a></th><td><span class=\"sd\">\u00a0 \u00a0 @type sweepInterval: int</span></td></tr><tr><th id=\"L113\"><a href=\"#L113\">113</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L114\"><a href=\"#L114\">114</a></th><td></td></tr><tr><th id=\"L115\"><a href=\"#L115\">115</a></th><td>\u00a0 \u00a0 implements<span class=\"p\">(</span>IBucketFilter<span class=\"p\">)</span></td></tr><tr><th id=\"L116\"><a href=\"#L116\">116</a></th><td></td></tr><tr><th id=\"L117\"><a href=\"#L117\">117</a></th><td>\u00a0 \u00a0 bucketFactory <span class=\"o\">=</span>\u00a0Bucket</td></tr><tr><th id=\"L118\"><a href=\"#L118\">118</a></th><td>\u00a0 \u00a0 sweepInterval <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L119\"><a href=\"#L119\">119</a></th><td></td></tr><tr><th id=\"L120\"><a href=\"#L120\">120</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0parentFilter<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L121\"><a href=\"#L121\">121</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>buckets <span class=\"o\">=</span>\u00a0<span class=\"p\">{}</span></td></tr><tr><th id=\"L122\"><a href=\"#L122\">122</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>parentFilter <span class=\"o\">=</span>\u00a0parentFilter</td></tr><tr><th id=\"L123\"><a href=\"#L123\">123</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>lastSweep <span class=\"o\">=</span>\u00a0time<span class=\"p\">()</span></td></tr><tr><th id=\"L124\"><a href=\"#L124\">124</a></th><td></td></tr><tr><th id=\"L125\"><a href=\"#L125\">125</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getBucketFor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"o\">*</span>a<span class=\"p\">,</span>\u00a0<span class=\"o\">**</span>kw<span class=\"p\">):</span></td></tr><tr><th id=\"L126\"><a href=\"#L126\">126</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"You want a bucket for that?\u00a0 I'll give you a bucket.</span></td></tr><tr><th id=\"L127\"><a href=\"#L127\">127</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L128\"><a href=\"#L128\">128</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Any parameters are passed on to L{getBucketKey}, from them it</span></td></tr><tr><th id=\"L129\"><a href=\"#L129\">129</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 decides which bucket you get.</span></td></tr><tr><th id=\"L130\"><a href=\"#L130\">130</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L131\"><a href=\"#L131\">131</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @returntype: L{Bucket}</span></td></tr><tr><th id=\"L132\"><a href=\"#L132\">132</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L133\"><a href=\"#L133\">133</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"p\">((</span><span class=\"bp\">self</span><span class=\"o\">.</span>sweepInterval <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">)</span></td></tr><tr><th id=\"L134\"><a href=\"#L134\">134</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"ow\">and</span>\u00a0<span class=\"p\">((</span>time<span class=\"p\">()</span>\u00a0<span class=\"o\">-</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>lastSweep<span class=\"p\">)</span>\u00a0<span class=\"o\">&gt;</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>sweepInterval<span class=\"p\">)):</span></td></tr><tr><th id=\"L135\"><a href=\"#L135\">135</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>sweep<span class=\"p\">()</span></td></tr><tr><th id=\"L136\"><a href=\"#L136\">136</a></th><td></td></tr><tr><th id=\"L137\"><a href=\"#L137\">137</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>parentFilter<span class=\"p\">:</span></td></tr><tr><th id=\"L138\"><a href=\"#L138\">138</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 parentBucket <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>parentFilter<span class=\"o\">.</span>getBucketFor<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"o\">*</span>a<span class=\"p\">,</span>\u00a0<span class=\"o\">**</span>kw<span class=\"p\">)</span></td></tr><tr><th id=\"L139\"><a href=\"#L139\">139</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L140\"><a href=\"#L140\">140</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 parentBucket <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L141\"><a href=\"#L141\">141</a></th><td></td></tr><tr><th id=\"L142\"><a href=\"#L142\">142</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 key <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>getBucketKey<span class=\"p\">(</span><span class=\"o\">*</span>a<span class=\"p\">,</span>\u00a0<span class=\"o\">**</span>kw<span class=\"p\">)</span></td></tr><tr><th id=\"L143\"><a href=\"#L143\">143</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 bucket <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>buckets<span class=\"o\">.</span>get<span class=\"p\">(</span>key<span class=\"p\">)</span></td></tr><tr><th id=\"L144\"><a href=\"#L144\">144</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0bucket <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L145\"><a href=\"#L145\">145</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 bucket <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>bucketFactory<span class=\"p\">(</span>parentBucket<span class=\"p\">)</span></td></tr><tr><th id=\"L146\"><a href=\"#L146\">146</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>buckets<span class=\"p\">[</span>key<span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0bucket</td></tr><tr><th id=\"L147\"><a href=\"#L147\">147</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0bucket</td></tr><tr><th id=\"L148\"><a href=\"#L148\">148</a></th><td></td></tr><tr><th id=\"L149\"><a href=\"#L149\">149</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getBucketKey</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"o\">*</span>a<span class=\"p\">,</span>\u00a0<span class=\"o\">**</span>kw<span class=\"p\">):</span></td></tr><tr><th id=\"L150\"><a href=\"#L150\">150</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"I determine who gets which bucket.</span></td></tr><tr><th id=\"L151\"><a href=\"#L151\">151</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L152\"><a href=\"#L152\">152</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Unless I'm overridden, everything gets the same bucket.</span></td></tr><tr><th id=\"L153\"><a href=\"#L153\">153</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L154\"><a href=\"#L154\">154</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @returns: something to be used as a key in the bucket cache.</span></td></tr><tr><th id=\"L155\"><a href=\"#L155\">155</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L156\"><a href=\"#L156\">156</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L157\"><a href=\"#L157\">157</a></th><td></td></tr><tr><th id=\"L158\"><a href=\"#L158\">158</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">sweep</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L159\"><a href=\"#L159\">159</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"I throw away references to empty buckets.\"\"\"</span></td></tr><tr><th id=\"L160\"><a href=\"#L160\">160</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0key<span class=\"p\">,</span>\u00a0bucket <span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>buckets<span class=\"o\">.</span>items<span class=\"p\">():</span></td></tr><tr><th id=\"L161\"><a href=\"#L161\">161</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"p\">(</span>bucket<span class=\"o\">.</span>_refcount <span class=\"o\">==</span>\u00a0<span class=\"mi\">0</span><span class=\"p\">)</span>\u00a0<span class=\"ow\">and</span>\u00a0bucket<span class=\"o\">.</span>drip<span class=\"p\">():</span></td></tr><tr><th id=\"L162\"><a href=\"#L162\">162</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>buckets<span class=\"p\">[</span>key<span class=\"p\">]</span></td></tr><tr><th id=\"L163\"><a href=\"#L163\">163</a></th><td></td></tr><tr><th id=\"L164\"><a href=\"#L164\">164</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>lastSweep <span class=\"o\">=</span>\u00a0time<span class=\"p\">()</span></td></tr><tr><th id=\"L165\"><a href=\"#L165\">165</a></th><td></td></tr><tr><th id=\"L166\"><a href=\"#L166\">166</a></th><td></td></tr><tr><th id=\"L167\"><a href=\"#L167\">167</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">FilterByHost</span><span class=\"p\">(</span>HierarchicalBucketFilter<span class=\"p\">):</span></td></tr><tr><th id=\"L168\"><a href=\"#L168\">168</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"A bucket filter with a bucket for each host.</span></td></tr><tr><th id=\"L169\"><a href=\"#L169\">169</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L170\"><a href=\"#L170\">170</a></th><td>\u00a0 \u00a0 sweepInterval <span class=\"o\">=</span>\u00a0<span class=\"mi\">60</span>\u00a0<span class=\"o\">*</span>\u00a0<span class=\"mi\">20</span></td></tr><tr><th id=\"L171\"><a href=\"#L171\">171</a></th><td></td></tr><tr><th id=\"L172\"><a href=\"#L172\">172</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getBucketKey</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0transport<span class=\"p\">):</span></td></tr><tr><th id=\"L173\"><a href=\"#L173\">173</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0transport<span class=\"o\">.</span>getPeer<span class=\"p\">()[</span><span class=\"mi\">1</span><span class=\"p\">]</span></td></tr><tr><th id=\"L174\"><a href=\"#L174\">174</a></th><td></td></tr><tr><th id=\"L175\"><a href=\"#L175\">175</a></th><td></td></tr><tr><th id=\"L176\"><a href=\"#L176\">176</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">FilterByServer</span><span class=\"p\">(</span>HierarchicalBucketFilter<span class=\"p\">):</span></td></tr><tr><th id=\"L177\"><a href=\"#L177\">177</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"A bucket filter with a bucket for each service.</span></td></tr><tr><th id=\"L178\"><a href=\"#L178\">178</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L179\"><a href=\"#L179\">179</a></th><td>\u00a0 \u00a0 sweepInterval <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L180\"><a href=\"#L180\">180</a></th><td></td></tr><tr><th id=\"L181\"><a href=\"#L181\">181</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getBucketKey</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0transport<span class=\"p\">):</span></td></tr><tr><th id=\"L182\"><a href=\"#L182\">182</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0transport<span class=\"o\">.</span>getHost<span class=\"p\">()[</span><span class=\"mi\">2</span><span class=\"p\">]</span></td></tr><tr><th id=\"L183\"><a href=\"#L183\">183</a></th><td></td></tr><tr><th id=\"L184\"><a href=\"#L184\">184</a></th><td></td></tr><tr><th id=\"L185\"><a href=\"#L185\">185</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">ShapedConsumer</span><span class=\"p\">(</span>pcp<span class=\"o\">.</span>ProducerConsumerProxy<span class=\"p\">):</span></td></tr><tr><th id=\"L186\"><a href=\"#L186\">186</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"I wrap a Consumer and shape the rate at which it receives data.</span></td></tr><tr><th id=\"L187\"><a href=\"#L187\">187</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L188\"><a href=\"#L188\">188</a></th><td>\u00a0 \u00a0 <span class=\"c\"># Providing a Pull interface means I don't have to try to schedule</span></td></tr><tr><th id=\"L189\"><a href=\"#L189\">189</a></th><td>\u00a0 \u00a0 <span class=\"c\"># traffic with callLaters.</span></td></tr><tr><th id=\"L190\"><a href=\"#L190\">190</a></th><td>\u00a0 \u00a0 iAmStreaming <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L191\"><a href=\"#L191\">191</a></th><td></td></tr><tr><th id=\"L192\"><a href=\"#L192\">192</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0consumer<span class=\"p\">,</span>\u00a0bucket<span class=\"p\">):</span></td></tr><tr><th id=\"L193\"><a href=\"#L193\">193</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 pcp<span class=\"o\">.</span>ProducerConsumerProxy<span class=\"o\">.</span>__init__<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0consumer<span class=\"p\">)</span></td></tr><tr><th id=\"L194\"><a href=\"#L194\">194</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>bucket <span class=\"o\">=</span>\u00a0bucket</td></tr><tr><th id=\"L195\"><a href=\"#L195\">195</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>bucket<span class=\"o\">.</span>_refcount <span class=\"o\">+=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L196\"><a href=\"#L196\">196</a></th><td></td></tr><tr><th id=\"L197\"><a href=\"#L197\">197</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_writeSomeData</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0data<span class=\"p\">):</span></td></tr><tr><th id=\"L198\"><a href=\"#L198\">198</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># In practice, this actually results in obscene amounts of</span></td></tr><tr><th id=\"L199\"><a href=\"#L199\">199</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># overhead, as a result of generating lots and lots of packets</span></td></tr><tr><th id=\"L200\"><a href=\"#L200\">200</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># with twelve-byte payloads.\u00a0 We may need to do a version of</span></td></tr><tr><th id=\"L201\"><a href=\"#L201\">201</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># this with scheduled writes after all.</span></td></tr><tr><th id=\"L202\"><a href=\"#L202\">202</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 amount <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>bucket<span class=\"o\">.</span>add<span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span>data<span class=\"p\">))</span></td></tr><tr><th id=\"L203\"><a href=\"#L203\">203</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0pcp<span class=\"o\">.</span>ProducerConsumerProxy<span class=\"o\">.</span>_writeSomeData<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0data<span class=\"p\">[:</span>amount<span class=\"p\">])</span></td></tr><tr><th id=\"L204\"><a href=\"#L204\">204</a></th><td></td></tr><tr><th id=\"L205\"><a href=\"#L205\">205</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">stopProducing</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L206\"><a href=\"#L206\">206</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 pcp<span class=\"o\">.</span>ProducerConsumerProxy<span class=\"o\">.</span>stopProducing<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L207\"><a href=\"#L207\">207</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>bucket<span class=\"o\">.</span>_refcount <span class=\"o\">-=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L208\"><a href=\"#L208\">208</a></th><td></td></tr><tr><th id=\"L209\"><a href=\"#L209\">209</a></th><td></td></tr><tr><th id=\"L210\"><a href=\"#L210\">210</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">ShapedTransport</span><span class=\"p\">(</span>ShapedConsumer<span class=\"p\">):</span></td></tr><tr><th id=\"L211\"><a href=\"#L211\">211</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"I wrap a Transport and shape the rate at which it receives data.</span></td></tr><tr><th id=\"L212\"><a href=\"#L212\">212</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L213\"><a href=\"#L213\">213</a></th><td><span class=\"sd\">\u00a0 \u00a0 I am a L{ShapedConsumer} with a little bit of magic to provide for</span></td></tr><tr><th id=\"L214\"><a href=\"#L214\">214</a></th><td><span class=\"sd\">\u00a0 \u00a0 the case where the consumer I wrap is also a Transport and people</span></td></tr><tr><th id=\"L215\"><a href=\"#L215\">215</a></th><td><span class=\"sd\">\u00a0 \u00a0 will be attempting to access attributes I do not proxy as a</span></td></tr><tr><th id=\"L216\"><a href=\"#L216\">216</a></th><td><span class=\"sd\">\u00a0 \u00a0 Consumer (e.g. loseConnection).</span></td></tr><tr><th id=\"L217\"><a href=\"#L217\">217</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L218\"><a href=\"#L218\">218</a></th><td>\u00a0 \u00a0 <span class=\"c\"># Ugh.\u00a0 We only wanted to filter IConsumer, not ITransport.</span></td></tr><tr><th id=\"L219\"><a href=\"#L219\">219</a></th><td></td></tr><tr><th id=\"L220\"><a href=\"#L220\">220</a></th><td>\u00a0 \u00a0 iAmStreaming <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L221\"><a href=\"#L221\">221</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__getattr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0name<span class=\"p\">):</span></td></tr><tr><th id=\"L222\"><a href=\"#L222\">222</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Because people will be doing things like .getPeer and</span></td></tr><tr><th id=\"L223\"><a href=\"#L223\">223</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># .loseConnection on me.</span></td></tr><tr><th id=\"L224\"><a href=\"#L224\">224</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>consumer<span class=\"p\">,</span>\u00a0name<span class=\"p\">)</span></td></tr><tr><th id=\"L225\"><a href=\"#L225\">225</a></th><td></td></tr><tr><th id=\"L226\"><a href=\"#L226\">226</a></th><td></td></tr><tr><th id=\"L227\"><a href=\"#L227\">227</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">ShapedProtocolFactory</span><span class=\"p\">:</span></td></tr><tr><th id=\"L228\"><a href=\"#L228\">228</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"I dispense Protocols with traffic shaping on their transports.</span></td></tr><tr><th id=\"L229\"><a href=\"#L229\">229</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L230\"><a href=\"#L230\">230</a></th><td><span class=\"sd\">\u00a0 \u00a0 Usage::</span></td></tr><tr><th id=\"L231\"><a href=\"#L231\">231</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L232\"><a href=\"#L232\">232</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 myserver = SomeFactory()</span></td></tr><tr><th id=\"L233\"><a href=\"#L233\">233</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 myserver.protocol = ShapedProtocolFactory(myserver.protocol,</span></td></tr><tr><th id=\"L234\"><a href=\"#L234\">234</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 bucketFilter)</span></td></tr><tr><th id=\"L235\"><a href=\"#L235\">235</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L236\"><a href=\"#L236\">236</a></th><td><span class=\"sd\">\u00a0 \u00a0 Where SomeServerFactory is a L{twisted.internet.protocol.Factory}, and</span></td></tr><tr><th id=\"L237\"><a href=\"#L237\">237</a></th><td><span class=\"sd\">\u00a0 \u00a0 bucketFilter is an instance of L{HierarchicalBucketFilter}.</span></td></tr><tr><th id=\"L238\"><a href=\"#L238\">238</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L239\"><a href=\"#L239\">239</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0protoClass<span class=\"p\">,</span>\u00a0bucketFilter<span class=\"p\">):</span></td></tr><tr><th id=\"L240\"><a href=\"#L240\">240</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Tell me what to wrap and where to get buckets.</span></td></tr><tr><th id=\"L241\"><a href=\"#L241\">241</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L242\"><a href=\"#L242\">242</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param protoClass: The class of Protocol I will generate</span></td></tr><tr><th id=\"L243\"><a href=\"#L243\">243</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 wrapped instances of.</span></td></tr><tr><th id=\"L244\"><a href=\"#L244\">244</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @type protoClass: L{Protocol&lt;twisted.internet.interfaces.IProtocol&gt;}</span></td></tr><tr><th id=\"L245\"><a href=\"#L245\">245</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 class</span></td></tr><tr><th id=\"L246\"><a href=\"#L246\">246</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param bucketFilter: The filter which will determine how</span></td></tr><tr><th id=\"L247\"><a href=\"#L247\">247</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 traffic is shaped.</span></td></tr><tr><th id=\"L248\"><a href=\"#L248\">248</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @type bucketFilter: L{HierarchicalBucketFilter}.</span></td></tr><tr><th id=\"L249\"><a href=\"#L249\">249</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L250\"><a href=\"#L250\">250</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># More precisely, protoClass can be any callable that will return</span></td></tr><tr><th id=\"L251\"><a href=\"#L251\">251</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># instances of something that implements IProtocol.</span></td></tr><tr><th id=\"L252\"><a href=\"#L252\">252</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>protocol <span class=\"o\">=</span>\u00a0protoClass</td></tr><tr><th id=\"L253\"><a href=\"#L253\">253</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>bucketFilter <span class=\"o\">=</span>\u00a0bucketFilter</td></tr><tr><th id=\"L254\"><a href=\"#L254\">254</a></th><td></td></tr><tr><th id=\"L255\"><a href=\"#L255\">255</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"o\">*</span>a<span class=\"p\">,</span>\u00a0<span class=\"o\">**</span>kw<span class=\"p\">):</span></td></tr><tr><th id=\"L256\"><a href=\"#L256\">256</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Make a Protocol instance with a shaped transport.</span></td></tr><tr><th id=\"L257\"><a href=\"#L257\">257</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L258\"><a href=\"#L258\">258</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Any parameters will be passed on to the protocol's initializer.</span></td></tr><tr><th id=\"L259\"><a href=\"#L259\">259</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L260\"><a href=\"#L260\">260</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @returns: a Protocol instance with a L{ShapedTransport}.</span></td></tr><tr><th id=\"L261\"><a href=\"#L261\">261</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L262\"><a href=\"#L262\">262</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 proto <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>protocol<span class=\"p\">(</span><span class=\"o\">*</span>a<span class=\"p\">,</span>\u00a0<span class=\"o\">**</span>kw<span class=\"p\">)</span></td></tr><tr><th id=\"L263\"><a href=\"#L263\">263</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 origMakeConnection <span class=\"o\">=</span>\u00a0proto<span class=\"o\">.</span>makeConnection</td></tr><tr><th id=\"L264\"><a href=\"#L264\">264</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">makeConnection</span><span class=\"p\">(</span>transport<span class=\"p\">):</span></td></tr><tr><th id=\"L265\"><a href=\"#L265\">265</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 bucket <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>bucketFilter<span class=\"o\">.</span>getBucketFor<span class=\"p\">(</span>transport<span class=\"p\">)</span></td></tr><tr><th id=\"L266\"><a href=\"#L266\">266</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 shapedTransport <span class=\"o\">=</span>\u00a0ShapedTransport<span class=\"p\">(</span>transport<span class=\"p\">,</span>\u00a0bucket<span class=\"p\">)</span></td></tr><tr><th id=\"L267\"><a href=\"#L267\">267</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0origMakeConnection<span class=\"p\">(</span>shapedTransport<span class=\"p\">)</span></td></tr><tr><th id=\"L268\"><a href=\"#L268\">268</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 proto<span class=\"o\">.</span>makeConnection <span class=\"o\">=</span>\u00a0makeConnection</td></tr><tr><th id=\"L269\"><a href=\"#L269\">269</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0proto</td></tr></tbody></table>\n\n      </div>\n      <div id=\"anydiff\">\n        <form action=\"/LUCICodeRepository/nomaticIM/diff\" method=\"get\">\n          <div class=\"buttons\">\n            <input type=\"hidden\" name=\"new_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/htb.py\" />\n            <input type=\"hidden\" name=\"old_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/htb.py\" />\n            <input type=\"hidden\" name=\"new_rev\" />\n            <input type=\"hidden\" name=\"old_rev\" />\n            <input type=\"submit\" value=\"View changes...\" title=\"Select paths and revs for Diff\" />\n          </div>\n        </form>\n      </div>\n      <div id=\"help\"><strong>Note:</strong> See <a href=\"/LUCICodeRepository/nomaticIM/wiki/TracBrowser\">TracBrowser</a>\n        for help on using the repository browser.</div>\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"first\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/htb.py?format=txt\">Plain Text</a>\n        </li><li class=\"last\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/htb.py\">Original Format</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/LUCICodeRepository/nomaticIM/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/LUCICodeRepository/nomaticIM/about\"><strong>Trac 1.0.1</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">All content copyright 2007-2008 by LUCI <br /><a href=\"http://luci.ics.uci.edu/\">http://luci.ics.uci.edu/</a></p>\n    </div>\n\t\t<div id=\"sitefooter\">\n\t\t\t<script src=\"http://www.google-analytics.com/urchin.js\" type=\"text/javascript\">\n\t\t\t</script>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t\t_uacct = \"UA-338915-2\";\n\t\t\t\turchinTracker();\n\t\t\t</script>\n\t\t</div>\n\t</body>\n</html>", "id": 44344.0}