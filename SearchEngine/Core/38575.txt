{"text": "Navigation Up Table of Contents Bibliography Index Title Page CGAL box self intersection all pairs d Definition The function box self intersection all pairs d computes the pairwise intersecting boxes in a sequence of iso oriented boxes in arbitrary dimension It does so by comparing all possible pairs of boxes and is thus inferior to the fast CGAL box self intersection d algorithm on page The sequence of boxes is given with a forward iterator range The sequences are not modified For each intersecting pair of boxes a callback function object is called with the two intersecting boxes as argument The algorithm is interface compatible with the CGAL box self intersection d function Similarly we call the value type of the iterators the box handle which is either our box type or a pointer type to our box type A d dimensional iso oriented box is defined as the Cartesian product of d intervals We call the box half open if the d intervals loi hii i d are half open intervals and we call the box closed if the d intervals loi hii i d are closed intervals Note that closed boxes support zero width boxes and they can intersect at their boundaries while non empty half open boxes always have a positive volume and they only intersect iff their interiors overlap The distinction between closed or half open boxes does not require a different representation of boxes just a different interpretation when comparing boxes which is selected with the topology parameter and its two values CGAL Box intersection d HALF OPEN and CGAL Box intersection d CLOSED The algorithm uses a traits class of the BoxIntersectionTraits d concept to access the boxes A default traits class is provided that assumes that the box type is a model of the BoxIntersectionBox d concept and that the box handle i e the iterators value type is identical to the box type or a pointer to the box type include CGAL box intersection d h template class ForwardIterator class Callback void box self intersection all pairs d ForwardIterator begin ForwardIterator end Callback callback Box intersection d Topology topology Box intersection d CLOSED Invocation of box intersection with default box traits CGAL Box intersection d Box traits d Box handle where Box handle corresponds to the iterator value type of ForwardIterator template class ForwardIterator class Callback class BoxTraits void box self intersection all pairs d ForwardIterator begin ForwardIterator end Callback callback BoxTraits box traits Box intersection d Topology topology Box intersection d CLOSED Invocation with custom box traits Requirements ForwardIterator must be a forward iterator We call its value type Box handle in the following Callback must be of the BinaryFunction concept The Box handle must be convertible to both argument types The return type is not used and can be void The Box handle must be a model of the Assignable concept In addition if the default box traits is used the Box handle must be a class type T or a pointer to a class type T where T must be a model of the BoxIntersectionBox d concept In both cases the default box traits specializes to a suitable implementation BoxTraits must be of the BoxIntersectionTraits d concept See Also CGAL box intersection d CGAL box self intersection d CGAL box intersection all pairs d CGAL Box intersection d Box traits d BoxHandle BoxIntersectionBox d BoxIntersectionTraits d Implementation The algorithm is trivially testing all pairs and runs therefore in time O n2 where n is the size of the input sequence This algorithm does not use the id number of the boxes Next BoxIntersectionBox d Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Box_intersection_d_ref/Function_box_self_intersection_all_pairs_d.html", "title": "box_self_intersection_all_pairs_d", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Box_intersection_d_ref/box_self_intersection_all_pairs_d.tex' -->\n<html> <head>  \n<title>box_self_intersection_all_pairs_d</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_1239\"></A>\n\n<A NAME=\"Cross_link_anchor_1240\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_1314\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Function.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_CGAL::box_self_intersection_all_pairs_d\"></A>\n<h2><I>CGAL::box_self_intersection_all_pairs_d</I></h2>\n\n\n   \n     \n     \n<A NAME=\"Index_anchor_1315\"></A> \n\n   \n\n   \n     \n     \n<A NAME=\"Index_anchor_1316\"></A>\n<P>\n\n<H3>Definition</H3>\n<P>\n\nThe function <I><A HREF=\"Function_box_self_intersection_all_pairs_d.html#Cross_link_anchor_1240\">box_self_intersection_all_pairs_d</A></I> computes the pairwise intersecting boxes\nin a sequence of iso-oriented boxes in arbitrary dimension.\nIt does so by comparing all possible pairs of boxes and is thus\ninferior to the fast <I><A HREF=\"Function_box_self_intersection_d.html#Cross_link_anchor_1237\">CGAL::box_self_intersection_d</A></I> algorithm on \npage&nbsp;<A HREF=\"Function_box_self_intersection_d.html#ccRef_CGAL::box_self_intersection_d\"><IMG SRC=\"cc_ref_up_arrow.gif\" ALT=\"reference\" WIDTH=\"10\" HEIGHT=\"10\"></A>.\n<P>\n\nThe sequence of boxes is given with a forward iterator range. The\nsequences are not modified. For each intersecting pair of boxes a\n<I>callback</I> function object is called with the two intersecting\nboxes as argument.\n<P>\n\nThe algorithm is interface compatible with the\n<I><A HREF=\"Function_box_self_intersection_d.html#Cross_link_anchor_1237\">CGAL::box_self_intersection_d</A></I> function. Similarly, we call the\n<I>value_type</I> of the iterators the <I>box handle</I>, which is\neither our box type or a pointer type to our box type.\n<P>\n\nA <MATH><I>d</I></MATH>-dimensional iso-oriented box is defined as the <A HREF=\"../Kernel_23_ref/Class_Cartesian.html#Cross_link_anchor_6\">Cartesian</A> product\nof <MATH><I>d</I></MATH> intervals. We call the box <I>half-open</I> if the <MATH><I>d</I></MATH>\nintervals <MATH><I>{ [lo<SUB>i</SUB>,hi<SUB>i</SUB>) | 0  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i &lt; d}</I></MATH> are half-open intervals,\nand we call the box <I>closed</I> if the <MATH><I>d</I></MATH> intervals <MATH><I>{ [lo<SUB>i</SUB>,hi<SUB>i</SUB>]\n| 0  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i &lt; d}</I></MATH> are closed intervals. Note that closed boxes support\nzero-width boxes and they can intersect at their boundaries, while\nnon-empty half-open boxes always have a positive <A HREF=\"../Kernel_23_ref/Function_volume.html#Cross_link_anchor_269\">volume</A> and they only\nintersect iff their interiors overlap.  The distinction between closed\nor half-open boxes does not require a different representation of\nboxes, just a different interpretation when comparing boxes, which is\nselected with the <I>topology</I> parameter and its two values,\n<I>CGAL::Box_intersection_d::HALF_OPEN</I> and\n<I>CGAL::Box_intersection_d::CLOSED</I>.\n<P>\n\nThe algorithm uses a traits class of the <I><A HREF=\"Concept_BoxIntersectionTraits_d.html#Cross_link_anchor_1242\">BoxIntersectionTraits_d</A></I>\nconcept to access the boxes. A default traits class is provided that\nassumes that the box type is a model of the <I><A HREF=\"Concept_BoxIntersectionBox_d.html#Cross_link_anchor_1241\">BoxIntersectionBox_d</A></I>\nconcept and that the box handle, i.e., the iterators value type, is\nidentical to the box type or a pointer to the box type.\n<P>\n\n<I>#include &lt;<A HREF=\"../../../include/CGAL/box_intersection_d.h\">CGAL/box_intersection_d.h</A>&gt;</I>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    template&lt; class ForwardIterator, class Callback &gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_box_self_intersection_all_pairs_d6_ForwardIterator_begin+_ForwardIterator_end+_Callback_callback+_Box_intersection_d::Topology_topology_=_Box_intersection_d::CLOSED9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP COLSPAN=2><I>\n    <A HREF=\"Function_box_self_intersection_all_pairs_d.html#Cross_link_anchor_1240\">box_self_intersection_all_pairs_d</A> ( </I></TD></TR><TR><TD WIDTH=50 NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    ForwardIterator begin,<BR>\n\nForwardIterator end,<BR>\n\nCallback callback,<BR>\n\nBox_intersection_d::Topology topology = Box_intersection_d::CLOSED)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Invocation of box <A HREF=\"../Kernel_23_ref/Function_intersection.html#Cross_link_anchor_221\">intersection</A> with default box traits\n    <I><A HREF=\"Class_Box_intersection_d--Box_traits_d.html#Cross_link_anchor_1245\">CGAL::Box_intersection_d::Box_traits_d</A>&lt;Box_handle&gt;</I>, where\n    <I>Box_handle</I> corresponds to the iterator value type  of\n    <I>ForwardIterator</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    template&lt; class ForwardIterator, class Callback, class BoxTraits &gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_box_self_intersection_all_pairs_d6_ForwardIterator_begin+_ForwardIterator_end+_Callback_callback+_BoxTraits_box_traits+_Box_intersection_d::Topology_topology_=_Box_intersection_d::CLOSED9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP COLSPAN=2><I>\n    <A HREF=\"Function_box_self_intersection_all_pairs_d.html#Cross_link_anchor_1240\">box_self_intersection_all_pairs_d</A> ( </I></TD></TR><TR><TD WIDTH=50 NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    ForwardIterator begin,<BR>\n\nForwardIterator end,<BR>\n\nCallback callback,<BR>\n\nBoxTraits box_traits,<BR>\n\nBox_intersection_d::Topology topology = Box_intersection_d::CLOSED)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Invocation with custom box traits.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Requirements</H3>\n<P>\n\n<UL>\n  <LI><I>ForwardIterator</I> must be a forward iterator. We call its\n    value type <I>Box_handle</I> in the following. \n  <LI><I>Callback</I> must be of the <I>BinaryFunction</I> concept. \n    The <I>Box_handle</I> must be convertible to both argument types. The\n    return type is not used and can be <I>void</I>.\n  <LI>The <I>Box_handle</I> must be a model of the <I>Assignable</I> concept.\n  <LI>In addition, if the default box traits is used the <I>Box_handle</I> must \n    be a class type <I>T</I> or a pointer to a class type <I>T</I>, where\n    <I>T</I> must be a model of the <I><A HREF=\"Concept_BoxIntersectionBox_d.html#Cross_link_anchor_1241\">BoxIntersectionBox_d</A></I> concept.\n    In both cases, the default box traits specializes to a suitable\n    implementation.\n  <LI><I>BoxTraits</I> must be of the <I><A HREF=\"Concept_BoxIntersectionTraits_d.html#Cross_link_anchor_1242\">BoxIntersectionTraits_d</A></I> concept.\n</UL>\n<P>\n\n<H3>See Also</H3>\n<P>\n\n<I><A HREF=\"Function_box_intersection_d.html#Cross_link_anchor_1233\">CGAL::box_intersection_d</A></I><BR>\n\n<I><A HREF=\"Function_box_self_intersection_d.html#Cross_link_anchor_1237\">CGAL::box_self_intersection_d</A></I><BR>\n\n<I><A HREF=\"Function_box_intersection_all_pairs_d.html#Cross_link_anchor_1235\">CGAL::box_intersection_all_pairs_d</A></I>\n<P>\n\n<I><A HREF=\"Class_Box_intersection_d--Box_traits_d.html#Cross_link_anchor_1245\">CGAL::Box_intersection_d::Box_traits_d</A>&lt;BoxHandle&gt;</I><BR>\n\n<I><A HREF=\"Concept_BoxIntersectionBox_d.html#Cross_link_anchor_1241\">BoxIntersectionBox_d</A></I><BR>\n\n<I><A HREF=\"Concept_BoxIntersectionTraits_d.html#Cross_link_anchor_1242\">BoxIntersectionTraits_d</A></I>\n<P>\n\n<H3>Implementation</H3>\n<P>\n\nThe algorithm is trivially testing all pairs and runs therefore in time\n<MATH><I>O(n<SUP>2</SUP>)</I></MATH> where <MATH><I>n</I></MATH> is the size of the input sequence. This algorithm\ndoes not use the id-number of the boxes.\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Concept_BoxIntersectionBox_d.html\"><I>BoxIntersectionBox_d</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_58!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 38575.0}