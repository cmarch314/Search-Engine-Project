{"text": "Navigation Up Table of Contents Bibliography Index Title Page CGAL Constrained triangulation plus 2 Tr The class Constrained triangulation plus 2 Tr implements a constrained triangulation with an additional data structure called the constraint hierarchy that keeps track of the input constraints and of their refinement in the triangulation The class Constrained triangulation plus 2 Tr inherits from its template parameter Tr which has to be instantiated by a constrained or constrained Delaunay triangulation According to its intersection tag the base class will support intersecting input constraints or not When intersections of input constraints are supported the base class constructs a triangulation of the arrangement of the constraints introducing new vertices at each proper intersection point and refining the input constraints into subconstraints which are edges more precisely constrained edges of the triangulation In this context the constraint hierarchy keeps track of the input constraints and of their refinement in the triangulation This data structure maintains for each input constraints the sequence of intersection vertices added on this constraint The constraint hierarchy also allows the user to retrieve the set of constrained edges of the triangulation and for each constrained edge the set of input constraints that overlap it include CGAL Constrained triangulation plus 2 h Inherits FromTr Types typedef Tr Triangulation the triangulation base class typedef Itag Intersection tag the intersection tag s Constrained triangulation plus 2 Tr Constraint iterator An iterator to visit all the input constraints The order of visit is arbitrary The value type of this iterator is a pair std pair Vertex handle Vertex handle corresponding to the endpoints of the constraint Constrained triangulation plus 2 Tr Subconstraint iterator An iterator to visit all the subconstraints of the triangulation The order of visit is arbitrary The value type of this iterator is a pair std pair Vertex handle Vertex handle correponding to the vertices of the subconstraint Constrained triangulation plus 2 Tr Vertices in constraint iterator An iterator on the vertices of the chain of triangulation edges representing a constraint The value type of this iterator is Vertex handle typedef Context This type is intended to describe a constraint enclosing a subconstraint and the position of the subconstraint in this constraint It provides three member functions vertices begin vertices end and current returning iterators of the type Vertices in constraint iterator on the sequence of vertices of the enclosing constraint These iterators point respectively on the first vertex of the enclosing constraint past the last vertex and on the first vertex of the subconstraint typedef Context iterator An iterator on constraints enclosing a given subconstraint The value type of this iterator is Context Creation Constrained triangulation plus 2 Tr ctp Geom traits gt Geom traits Introduces an empty triangulation Constrained triangulation plus 2 Tr ctp Constrained triangulation plus 2 ct Copy constructor Constrained triangulation plus 2 Tr ctp std list Constrained lc Geom traits t Geom traits Introduces and builds a constrained triangulation from the list of constraints lc template class InputIterator Constrained triangulation plus 2 Tr ctp InputIterator first InputIterator last Geom traits gt Geom traits Introduces and builds a constrained triangulation from the constraints in the range first last Precondition The value type of first and last is Constraint void ctp Destructor All vertices and faces are deleted The constraint hierarchy is deleted Assignment Constrained triangulation plus 2 ctp Constrained triangulation plus 2 tr Assignment All the vertices and faces are duplicated The constraint hierarchy is also duplicated void ctp swap Constrained triangulation plus 2 tr The triangulations tr and ctp are swapped This operation should be preferred to ctp tr or to t tr if tr is deleted after that Insertion and Removal The class Constrained triangulation plus 2 Tr overwrites the following insertion and removal member functions for points and constraints Vertex handle ctp insert Point p Face handle start Face handle Inserts point p as a vertex of the triangulation Vertex handle ctp insert Point p Locate type lt Face handle loc int li inserts a point p whose location is assumed to be given by lt loc li Vertex handle ctp push back Point p Equivalent to insert p template class InputIterator int ctp insert InputIterator first InputIterator last Inserts the points in the range first last Returns the number of inserted points Precondition The value type of first and last is Point void ctp insert constraint Point a Point b Inserts the constraint segment ab in the triangulation void ctp push back Constraint c Inserts the constraint c void ctp insert constraint Vertex handle va Vertex handle vb Inserts a constraint whose endpoints are the vertices pointed by va and vb in the triangulation void ctp remove constraint Vertex handle va Vertex handle vb Removes the constraint joining the vertices pointed by va and vb Precondition va and vb have to refer to the endpoint vertices of an input constraint Queries Constraint iterator ctp constraints begin Returns a Constraint iterator pointing on the first constraint Constraint iterator ctp constraints end Returns a Constraint iterator pointing past the last constraint Subconstraint iterator ctp subconstraints begin Returns a Subconstraint iterator pointing on the first subconstraint Subconstraint iterator ctp subconstraints end Returns a Subconstraint iterator pointing past the last subconstraint int ctp number of enclosing constraints Vertex handle va Vertex handle vb Returns the number of constraints enclosing the subconstraint va vb Precondition va and vb refer to the vertices of a constrained edge of the triangulation Context ctp context Vertex handle va Vertex handle vb Returns the Context relative to one of the constraint enclosing the subconstraint va vb Precondition va and vb refer to the vertices of a constrained edge of the triangulation Context iterator ctp contexts begin Vertex handle va Vertex handle vb Returns an iterator pointing on the first Context of the sequence of Contexts corresponding to the constraints enclosing the subconstraint va vb Precondition va and vb refer to the vertices of a constrained edge of the triangulation Context iterator ctp contexts end Vertex handle va Vertex handle vb Returns an iterator past the last Context of the sequence of Contexts corresponding to the constraints enclosing the va vb Precondition va and vb refer to the vertices of a constrained edge of the triangulation Vertices in constraint iterator ctp vertices in constraint begin Vertex handle va Vertex handle vb Returns an iterator on the first vertex on the constraint va vb Precondition va and vb refer to the vertices of an input constraint Vertices in constraint iterator ctp vertices in constraint end Vertex handle va Vertex handle vb Returns an iterator past the last vertex on the constraint va vb Precondition va and vb refer to the vertices of an input constraints See AlsoCGAL Constrained triangulation 2 Traits Tds CGAL Constrained Delaunay triangulation 2 Traits Tds ConstrainedTriangulationTraits 2 ConstrainedDelaunayTriangulationTraits 2 Next DelaunayTriangulationTraits 2 Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Triangulation_2_ref/Class_Constrained_triangulation_plus_2.html", "title": "constrained_triangulation_plus_2&lt;tr&gt;", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Triangulation_2_ref/Constrained_triangulation_plus_2.tex' -->\n<html> <head>  \n<title>Constrained_triangulation_plus_2&lt;Tr&gt;</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_916\"></A>\n\n<A NAME=\"Cross_link_anchor_917\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_879\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Class.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_CGAL::Constrained_triangulation_plus_2<Tr>\"></A>\n<h2><I>CGAL::Constrained_triangulation_plus_2&lt;Tr&gt;</I></h2>\n<P>\n\nThe class <I><A HREF=\"Class_Constrained_triangulation_plus_2.html#Cross_link_anchor_917\">Constrained_triangulation_plus_2</A>&lt;Tr&gt;</I> \nimplements a constrained triangulation \nwith an additional data\nstructure called the  constraint hierarchy \nthat keeps track of  the input constraints and of their refinement\nin the triangulation.\n<P>\n\nThe class <I><A HREF=\"Class_Constrained_triangulation_plus_2.html#Cross_link_anchor_917\">Constrained_triangulation_plus_2</A>&lt;Tr&gt;</I>\ninherits from its template parameter Tr, which has to be instantiated\nby a constrained or constrained Delaunay  triangulation.\n<P>\n\nAccording to its <A HREF=\"../Kernel_23_ref/Function_intersection.html#Cross_link_anchor_221\">intersection</A> tag, the base class\nwill support intersecting input constraints or not.\nWhen intersections of input constraints are supported,\nthe base class constructs a triangulation  of the  arrangement\nof the constraints,\nintroducing new vertices at each proper <A HREF=\"../Kernel_23_ref/Function_intersection.html#Cross_link_anchor_221\">intersection</A>\npoint and  refining the input constraints into subconstraints\nwhich are edges (more precisely constrained edges) of the\ntriangulation. \nIn this context, the constraint hierarchy \nkeeps track of  the input constraints and of their refinement\nin the triangulation. This data structure \nmaintains for each input constraints \nthe sequence of <A HREF=\"../Kernel_23_ref/Function_intersection.html#Cross_link_anchor_221\">intersection</A> vertices added on this constraint.\nThe constraint hierarchy also allows the user to retrieve the set\nof constrained edges of the triangulation, and for each\nconstrained edge,  the set of input constraints that overlap it.\n<P>\n\n<I>#include &lt;<A HREF=\"../../../include/CGAL/Constrained_triangulation_plus_2.h\">CGAL/Constrained_triangulation_plus_2.h</A>&gt;</I>\n<P>\n\n<H3>Inherits From</H3><I>Tr</I>\n<P>\n\n<H3>Types</H3>\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Triangulation\"></A>\n<A NAME=\"Typedef_Triangulation\"></A>\ntypedef Tr\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    Triangulation;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    the triangulation base class.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Intersection_tag\"></A>\n<A NAME=\"Typedef_Intersection_tag\"></A>\ntypedef Itag\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    Intersection_tag;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    the <A HREF=\"../Kernel_23_ref/Function_intersection.html#Cross_link_anchor_221\">intersection</A> tag.s\n        </TD></TR>\n        </TABLE>\n<P>\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Constrained_triangulation_plus_2.html#Cross_link_anchor_917\">Constrained_triangulation_plus_2</A>&lt;Tr&gt;::Constraint_iterator;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    An iterator to visit\nall the input  constraints. The order of visit is arbitrary.\nThe value type of this iterator  is a pair \n<I>std::pair&lt;Vertex_handle, Vertex_handle&gt;</I> corresponding to the\nendpoints of the constraint.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Constrained_triangulation_plus_2.html#Cross_link_anchor_917\">Constrained_triangulation_plus_2</A>&lt;Tr&gt;::Subconstraint_iterator;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    An iterator \nto visit all the subconstraints  of the triangulation.\nThe order of visit is arbitrary.\nThe value type of this iterator is a pair \n<I>std::pair&lt;Vertex_handle, Vertex_handle&gt;</I>\ncorreponding to the vertices of  the\nsubconstraint.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Constrained_triangulation_plus_2.html#Cross_link_anchor_917\">Constrained_triangulation_plus_2</A>&lt;Tr&gt;::Vertices_in_constraint_iterator;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    An iterator on the\nvertices of the chain of triangulation edges representing a\nconstraint. The value type of this iterator is <I>Vertex_handle</I>.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Context\"></A>\n<A NAME=\"Typedef_Context\"></A>\ntypedef\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    Context;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    This type is intended to describe\na constraint enclosing  a subconstraint  and the position of the\nsubconstraint in this constraint.\nIt provides three member functions <I>vertices_begin()</I>, <I>vertices_end()</I>\nand <I>current()</I> returning \niterators of the type <I>Vertices_in_constraint_iterator</I>\non the sequence of vertices of the enclosing constraint. \nThese iterators point\nrespectively on the first vertex of the enclosing constraint,\npast the last vertex  \nand on the first vertex of the subconstraint.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Context_iterator\"></A>\n<A NAME=\"Typedef_Context_iterator\"></A>\ntypedef\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    Context_iterator;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    An iterator on \n constraints enclosing a given subconstraint. The value type of this\niterator\nis <I>Context</I>.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Creation</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Constrained_triangulation_plus_2.html#Cross_link_anchor_917\">Constrained_triangulation_plus_2</A>&lt;Tr&gt; ctp (  Geom_traits gt=Geom_traits());\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Introduces an empty triangulation.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    <A HREF=\"Class_Constrained_triangulation_plus_2.html#Cross_link_anchor_917\">Constrained_triangulation_plus_2</A>&lt;Tr&gt; ctp ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n     <A HREF=\"Class_Constrained_triangulation_plus_2.html#Cross_link_anchor_917\">Constrained_triangulation_plus_2</A> ct);</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Copy constructor.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    <A HREF=\"Class_Constrained_triangulation_plus_2.html#Cross_link_anchor_917\">Constrained_triangulation_plus_2</A>&lt;Tr&gt; ctp ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    std::list&lt;Constrained&gt;&amp; lc,<BR>\n\nGeom_traits t = Geom_traits());</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Introduces and builds a constrained triangulation \nfrom the list of constraints <I>lc</I>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    template&lt;class InputIterator&gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    <A HREF=\"Class_Constrained_triangulation_plus_2.html#Cross_link_anchor_917\">Constrained_triangulation_plus_2</A>&lt;Tr&gt; ctp ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    InputIterator first,<BR>\n\nInputIterator last,<BR>\n\nGeom_traits gt= Geom_traits());</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Introduces and builds a constrained triangulation \nfrom the constraints in the range\n<MATH><I>[.</I></MATH><I>first</I>, <I>last</I><MATH><I>.)</I></MATH>.<BR>\n\n<EM>Precondition: </EM>The <I>value_type</I> of <I>first</I> and <I>last</I>\n is <I>Constraint</I>.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_~ctp69;\"></A>\nvoid ~\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    ctp ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Destructor. All vertices and faces are deleted.\nThe constraint hierarchy is deleted.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Assignment</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A HREF=\"Class_Constrained_triangulation_plus_2.html#Cross_link_anchor_917\">Constrained_triangulation_plus_2</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n     ctp =  <A HREF=\"Class_Constrained_triangulation_plus_2.html#Cross_link_anchor_917\">Constrained_triangulation_plus_2</A> tr<A NAME=\"Function_Constrained_triangulation_plus_2_operator=6const_Constrained_triangulation_plus_2__tr9;\"></A>\n\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Assignment. All the vertices and faces are duplicated.\n The constraint hierarchy is also duplicated.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_swap6Constrained_triangulation_plus_2_tr9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    ctp.swap ( <A HREF=\"Class_Constrained_triangulation_plus_2.html#Cross_link_anchor_917\">Constrained_triangulation_plus_2</A> tr)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    The triangulations <I>tr</I> and <I>ctp</I> are swapped.\nThis operation should be preferred to <I>ctp</I> = <I>tr</I> or to\n<I>t(tr)</I> if <I>tr</I> is deleted after that.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Insertion and Removal</H3>\nThe class <I><A HREF=\"Class_Constrained_triangulation_plus_2.html#Cross_link_anchor_917\">Constrained_triangulation_plus_2</A>&lt;Tr&gt;</I> overwrites the following insertion and removal\nmember functions for points and constraints.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Vertex_handle_insert6const_Point__p+_Face_handle_start_=_Face_handle69_9;\"></A>\nVertex_handle\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    ctp.insert ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n     Point p,<BR>\n\nFace_handle start = Face_handle())</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Inserts point <I>p</I> as a vertex of the triangulation.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Vertex_handle_insert6const_Point__p+_Locate_type_lt+_Face_handle_loc+_int_li_9;\"></A>\nVertex_handle\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    ctp.insert ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n     Point p,<BR>\n\n<A HREF=\"Enum_Triangulation_2-Traits-Tds---Locate_type#Enum_Locate_type\">Locate_type</A> lt,<BR>\n\nFace_handle loc,<BR>\n\nint li)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    inserts a point <I>p</I> whose location is assumed \nto be given by <I>(lt,loc,li)</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Vertex_handle_push_back6const_Point__p9;\"></A>\nVertex_handle\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    ctp.push_back (  Point p)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Equivalent to <I>insert(p)</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    template &lt; class InputIterator &gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_int_insert6InputIterator_first+_InputIterator_last9;\"></A>\nint\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    ctp.insert ( InputIterator first,  InputIterator last)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Inserts the points in the range\n <MATH><I>[.</I></MATH><I>first</I>, <I>last</I><MATH><I>.)</I></MATH>.\n Returns the number of inserted points.<BR>\n\n<EM>Precondition: </EM>The <I>value_type</I> of <I>first</I> and <I>last</I>\n is <I>Point</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_insert_constraint6Point_a+_Point_b9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    ctp.insert_constraint ( Point a,  Point b)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Inserts the constraint segment ab in the triangulation.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_push_back6const_Constraint__c9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    ctp.push_back (  Constraint c)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Inserts the constraint <I>c</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_insert_constraint6Vertex_handle_va+_Vertex_handle_vb9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    ctp.insert_constraint ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    Vertex_handle va,<BR>\n\nVertex_handle vb)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Inserts a constraint whose endpoints are the vertices \npointed by <I>va</I> and \n<I>vb</I>\nin the triangulation.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_remove_constraint6Vertex_handle_va+_Vertex_handle_vb9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    ctp.remove_constraint ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    Vertex_handle va,<BR>\n\nVertex_handle vb)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Removes the constraint  joining the vertices pointed by <I>va</I> and <I>vb</I>.<BR>\n\n<EM>Precondition: </EM><I>va</I> and <I>vb</I> have to refer to  the endpoint vertices\nof an  input constraint.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Queries</H3>\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Constraint_iterator_constraints_begin69_const;\"></A>\nConstraint_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    ctp.constraints_begin ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns a <I>Constraint_iterator</I> pointing on the first\nconstraint.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Constraint_iterator_constraints_end69_const;\"></A>\nConstraint_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    ctp.constraints_end ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns a <I>Constraint_iterator</I> pointing past the last\nconstraint.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Subconstraint_iterator_subconstraints_begin69_const;\"></A>\nSubconstraint_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    ctp.subconstraints_begin ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns a <I>Subconstraint_iterator</I> pointing on the first\nsubconstraint.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Subconstraint_iterator_subconstraints_end69_const;\"></A>\nSubconstraint_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    ctp.subconstraints_end ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns a <I>Subconstraint_iterator</I> pointing past the last\nsubconstraint.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_int_number_of_enclosing_constraints6Vertex_handle_va+_Vertex_handle_vb9;\"></A>\nint\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    ctp.number_of_enclosing_constraints ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    Vertex_handle va,<BR>\n\nVertex_handle vb)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns the number of constraints enclosing the subconstraint\n<I>(va,vb).</I><BR>\n\n<EM>Precondition: </EM><I>va</I> and <I>vb</I> refer to  the vertices\nof a constrained edge of the triangulation.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Context_context6Vertex_handle_va+_Vertex_handle_vb9;\"></A>\nContext\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    ctp.context ( Vertex_handle va,  Vertex_handle vb)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns the <I>Context</I>  relative to  one of the constraint \nenclosing  the subconstraint  <I>(va,vb)</I>.<BR>\n\n<EM>Precondition: </EM><I>va</I> and <I>vb</I> refer to  the vertices\nof a constrained edge of the triangulation.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Context_iterator_contexts_begin6Vertex_handle_va+_Vertex_handle_vb9;\"></A>\nContext_iterator\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    ctp.contexts_begin ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    Vertex_handle va,<BR>\n\nVertex_handle vb)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns an iterator pointing on the first <I>Context</I>\nof the sequence of <I>Contexts</I>\ncorresponding to the constraints enclosing the subconstraint<I>(va,vb).</I><BR>\n\n<EM>Precondition: </EM><I>va</I> and <I>vb</I> refer to  the vertices\nof a constrained edge of the triangulation.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Context_iterator_contexts_end6Vertex_handle_va+_Vertex_handle_vb9;\"></A>\nContext_iterator\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    ctp.contexts_end ( Vertex_handle va,  Vertex_handle vb)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns an iterator past the last  <I>Context</I>\nof the sequence of <I>Contexts</I>\ncorresponding to the constraints enclosing the  <I>(va,vb).</I><BR>\n\n<EM>Precondition: </EM><I>va</I> and <I>vb</I> refer to  the vertices\nof a constrained edge of the triangulation.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Vertices_in_constraint_iterator_vertices_in_constraint_begin6Vertex_handle_va+_Vertex_handle_vb9;\"></A>\nVertices_in_constraint_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    ctp.vertices_in_constraint_begin ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    Vertex_handle va,<BR>\n\nVertex_handle vb)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns an iterator on the first vertex on the constraint\n<I>(va,vb)</I><BR>\n\n<EM>Precondition: </EM><I>va</I> and <I>vb</I> refer to  the vertices\nof an input constraint.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Vertices_in_constraint_iterator_vertices_in_constraint_end6Vertex_handle_va+_Vertex_handle_vb9;\"></A>\nVertices_in_constraint_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    ctp.vertices_in_constraint_end ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    Vertex_handle va,<BR>\n\nVertex_handle vb)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns an iterator past  the last  vertex on  the constraint\n<I>(va,vb)</I><BR>\n\n<EM>Precondition: </EM><I>va</I> and <I>vb</I> refer to  the vertices\nof an input constraints.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>See Also</H3><I><A HREF=\"Class_Constrained_triangulation_2.html#Cross_link_anchor_912\">CGAL::Constrained_triangulation_2</A>&lt;Traits,Tds&gt;</I><BR>\n\n<I><A HREF=\"Class_Constrained_Delaunay_triangulation_2.html#Cross_link_anchor_910\">CGAL::Constrained_Delaunay_triangulation_2</A>&lt;Traits,Tds&gt;</I><BR>\n\n<I><A HREF=\"Concept_ConstrainedTriangulationTraits_2.html#Cross_link_anchor_909\">ConstrainedTriangulationTraits_2</A></I><BR>\n\n<I><A HREF=\"Concept_ConstrainedDelaunayTriangulationTraits_2.html#Cross_link_anchor_907\">ConstrainedDelaunayTriangulationTraits_2</A></I>\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Concept_DelaunayTriangulationTraits_2.html\"><I>DelaunayTriangulationTraits_2</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_32!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 38831.0}