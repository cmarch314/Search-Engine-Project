{"text": "Life Cycle and Process Models in Software Engineering This presentation is associated with the article Process Models in Software Engineering This article provides a survey of tools techniques and concepts for alternative software process models and modeling capabilities and how they can be employed to support large team oriented software development projects Appears in J Marciniak ed Encyclopedia of Software Engineering 2nd Edition 993 1 5 Wiley 2 2 Introduction Classic Software Life Cycle Activities What is a Software Life Cycle model Why Model the Software Life Cycle What is a Software Process model Traditional Software Life Cycle Models Classic Software Life Cycle graphic Stepwise Refinement Incremental Development and Release graphic Industrial and Military Standards and Capability Models graphic Software Product Development Models Rapid Prototyping and Joint Application Development Assembling Reusable Components Application Generation Software Documentation Support Environments in this example see Figures 2 3 and 4 Rapid Iteration Incremental Evolution and Evolutionary Delivery graphic Program Evolution Models Software Production Process Models Non Operational Process Models The Spiral Model graphic Operational Process Models Operational specifications for rapid prototyping Software automation or Automated Software Engineering in this example see Figures 2 8 here is another example Software process automation and process programming Emerging Trends and New Directions Software process simulation Discrete event process simulation System Dynamics process simulation Rule based or knowledge based simulation Multi agent process simulation Process simulators Web based software process models and process engineering environments Process Markup Language PML PML based process life cycle environment graphic demo Software process and business process reengineering Re Designing software processes to improve efficiency effectiveness or optimality Example of very large software process architecture Open source software development process models How and why are open source development processes different from those traditional to software engineering Examples include Java Community Process IETF Standards Process Requirements for Developing Open Source Software Systems and much more ", "_id": "http://www.ics.uci.edu/~wscacchi/Software-Process/Software-Life-Cycle-Models/", "title": "software-process-course-index", "html": "<!DOCTYPE html PUBLIC \"-//w3c//dtd html 4.0 transitional//en\">\r\n<html>\r\n<head>\r\n                \r\n  <meta http-equiv=\"Content-Type\"\r\n content=\"text/html; charset=iso-8859-1\">\r\n                \r\n  <meta name=\"Generator\" content=\"Microsoft Word 97\">\r\n                \r\n  <meta name=\"Template\"\r\n content=\"C:\\Program Files\\Microsoft Office\\Office\\html.dot\">\r\n                \r\n  <meta name=\"GENERATOR\"\r\n content=\"Mozilla/4.79 [en] (WinNT; U) [Netscape]\">\r\n  <title>Software-Process-Course-index</title>\r\n</head>\r\n  <body link=\"#0000ff\" vlink=\"#800080\">\r\n    <b><font size=\"+3\">Life Cycle and Process Models in Software Engineering</font></b>\r\n<ul>\r\n  <li>This presentation is associated with the article, <a\r\n href=\"http://www.ics.uci.edu/%7Ewscacchi/Papers/SE-Encyc/Process-Models-SE-Encyc.pdf\">Process\r\nModels in Software Engineering</a>. This article provides a survey   of tools,\r\ntechniques, and concepts for alternative software process models   and modeling\r\ncapabilities, and how they can be employed to support large team-oriented\r\n software development projects. Appears in J. Marciniak (ed.),        <i>Encyclopedia\r\nof Software Engineering, 2nd. Edition</i>, 993-1005,  Wiley, 2002.</li>\r\n</ul>\r\n      \r\n<p><b><font size=\"+2\">Introduction</font></b> </p>\r\n     \r\n<dir><i><font size=\"+2\">Classic Software Life Cycle <a\r\n href=\"Software-Life-Cycle-Activities.htm\"> Activities</a></font></i>    \r\n<p><i><font size=\"+2\">What is a Software Life Cycle <a\r\n href=\"Software-Life-Cycle-Model-Definitions.htm\"> model</a>?</font></i>\r\n</p>\r\n     \r\n<p><i><font size=\"+2\"><a href=\"Why-Model-Software-Life-Cycle.htm\">Why Model</a> \r\n  the Software Life Cycle?</font></i> </p>\r\n     \r\n<p><i><font size=\"+2\">What is a Software Process <a\r\n href=\"Process-Model-Definitions.htm\"> model</a> ?</font></i></p>\r\n   </dir>\r\n    <b><font size=\"+2\">Traditional Software Life Cycle Models</font></b>\r\n   \r\n<dir><i><font size=\"+2\">Classic Software Life Cycle</font></i> <font\r\n size=\"+2\"> (<a href=\"../Images/software-life-cycle-royce-1970.gif\">graphic</a>)</font> \r\n     \r\n<p><i><font size=\"+2\">Stepwise Refinement</font></i> </p>\r\n     \r\n<p><i><font size=\"+2\">Incremental Development and Release</font></i> <font\r\n size=\"+2\"> (<a href=\"../Images/Incremental-Release.jpg\">graphic</a>)</font>\r\n </p>\r\n     \r\n<p><i><font size=\"+2\">Industrial and Military Standards, and Capability Models</font></i>\r\n<font size=\"+2\">(<a href=\"../Images/Industrial-Standards-Frameworks.jpg\">graphic</a>)</font></p>\r\n   </dir>\r\n    <b><font size=\"+2\">Software Product Development Models</font></b>    \r\n<dir><i><font size=\"+2\">Rapid Prototyping and Joint Application Development</font></i> \r\n     \r\n<p><i><font size=\"+2\">Assembling Reusable Components</font></i> </p>\r\n     \r\n<p><i><font size=\"+2\">Application Generation</font></i> </p>\r\n     \r\n<p><font size=\"+2\"><i>Software Documentation Support Environments</i> (in\r\n  this <a href=\"../Readings/ieee-expert-ishys-software-hypertext.pdf\">example</a>,\r\n see Figures 2, 3, and 4)</font> </p>\r\n     \r\n<p><font size=\"+2\"><i>Rapid Iteration, Incremental Evolution, and Evolutionary\r\n  Delivery </i>(<a\r\n href=\"../Images/Synch+Stablize-Internet-Time-Development.jpg\">graphic</a>)</font>\r\n </p>\r\n     \r\n<p><i><font size=\"+2\">Program Evolution Models</font></i></p>\r\n   </dir>\r\n    <b><font size=\"+2\">Software Production Process Models</font></b>    \r\n<dir><i><font size=\"+2\">Non-Operational Process Models</font></i>    \r\n<dir><font size=\"+2\">The Spiral Model (<a\r\n href=\"../Images/Spiral-Model-Boehm-1987.gif\">graphic</a>)</font></dir>\r\n    <i><font size=\"+2\">Operational Process Models</font></i>    \r\n<dir><font size=\"+2\">Operational specifications for rapid prototyping</font> \r\n     \r\n<p><font size=\"+2\">Software automation or Automated Software Engineering</font>\r\n <font size=\"+2\">(in this <a\r\n href=\"../Readings/ieee-expert-ishys-software-hypertext.pdf\"> example</a>,\r\n see Figures 2-8; here is <a href=\"../Images/bpr-kbs1.gif\">another  example</a>)</font> \r\n</p>\r\n     \r\n<p><font size=\"+2\">Software process automation and process programming</font></p>\r\n   </dir>\r\n    </dir>\r\n    <b><font size=\"+2\">Emerging Trends and New Directions</font></b>    \r\n<dir><font size=\"+2\">Software process simulation</font>    \r\n<dir><font size=\"+2\">Discrete-event process simulation</font>    \r\n<p><font size=\"+2\">System Dynamics process simulation</font> </p>\r\n     \r\n<p><font size=\"+2\">Rule-based or knowledge-based simulation</font> </p>\r\n     \r\n<p><font size=\"+2\">Multi-agent process simulation</font> </p>\r\n     \r\n<p><font size=\"+2\">Process simulators</font></p>\r\n   </dir>\r\n    <font size=\"+2\">Web-based software process models and process engineering\r\n  environments</font>    \r\n<dir><font size=\"+2\">Process Markup Language (<a href=\"PML-Example.htm\">PML</a>)</font>\r\n    \r\n<p><font size=\"+2\">PML-based <a\r\n href=\"../Readings/PML-Process-Environment.pdf\"> process life cycle environment</a></font>\r\n <font size=\"+2\">(<a href=\"../Images/ve-sol.gif\">graphic</a>) (<a\r\n href=\"../../DAU-Demo/ACQ-Process-Demo/login.html\">demo</a>)</font></p>\r\n   </dir>\r\n    <font size=\"+2\">Software process and business process reengineering</font> \r\n     \r\n<dir><font size=\"+2\">(Re)Designing software processes to improve efficiency,\r\n  effectiveness, or optimality</font>    \r\n<p><font size=\"+2\">Example of very large <a\r\n href=\"../Images/very-large-SPA-scacchi-1999.gif\"> software process architecture</a></font></p>\r\n   </dir>\r\n    <font size=\"+2\">Open source software development process models</font>\r\n    \r\n<dir><font size=\"+2\">How and why are open source development processes different\r\n  from those traditional to software engineering? Examples include:</font></dir>\r\n    </dir>\r\n        \r\n<blockquote>          \r\n  <blockquote>                \r\n    <ul>\r\n    <li> <font size=\"+2\"><a\r\n href=\"../Readings/Java-Community-Process.htm\">Java   Community Process</a></font></li>\r\n     <li> <font size=\"+2\"><a href=\"../Readings/rfc2026.txt\">IETF Standards\r\n Process</a></font></li>\r\n     <li> <font size=\"+2\"><a\r\n href=\"../Readings/Requirements-Developing-Open-Source-Software.pdf\"> Requirements\r\n for Developing Open Source Software Systems</a></font></li>\r\n     <li> <font size=\"+2\">and much more!</font></li>\r\n                   \r\n    </ul>\r\n    </blockquote>\r\n    </blockquote>\r\n          <br>\r\n  <br>\r\n <br>\r\n</body>\r\n</html>\r\n", "id": 285.0}