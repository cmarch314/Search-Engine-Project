{"text": "OEChem C Theory Manual Version 1 3 1 Previous 5 1 OEChem Iterators Up 5 Traversing the Atoms Next 5 3 Dereferencing the Iterator 5 2 Looping over the Atoms and Bonds of a Molecule The example below shows the minimal use of OEChem s iterators These examples use the OEMolBase methods GetAtoms and GetBonds which return iterators over the atoms and bonds of a molecule respectively include oechem h include iostream using namespace OESystem using namespace OEChem using namespace std bool MyMolIsEmpty OEMolBase mol return mol GetAtoms false true unsigned int MyNumAtoms OEMolBase mol OEIter OEAtomBase atom unsigned int result for atom mol GetAtoms atom atom result return result unsigned int MyNumBonds OEMolBase mol OEIter OEBondBase bond unsigned int result for bond mol GetBonds bond bond result return result int main OEMol mol OEParseSmiles mol c1ccccc1 if MyMolIsEmpty mol cerr num atoms MyNumAtoms mol endl cerr num bonds MyNumBonds mol endl return Download as text The user function MyMolIsEmpty returns true if the input molecule has no atoms and the functions MyNumAtoms and MyNumBonds count the number of atoms and bonds in a molecule using OEChem s iterators These My functions are just for demonstration it is far more efficient to use the OEMolBase s NumAtoms and NumBonds methods in production code One point to notice is that once again C s destructors mean that it is not necessary to explicitly deallocate or destroy the iterator after use Once the variable goes out of scope it is cleaned up automatically OEChem C Theory Manual Version 1 3 1 Previous 5 1 OEChem Iterators Up 5 Traversing the Atoms Next 5 3 Dereferencing the Iterator Documentation released on July 3 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/oechem/cplusprog/node44.html", "title": "5.2 looping over the atoms and bonds of a molecule", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<html>\n<head>\n<title>5.2 Looping over the Atoms and Bonds of a Molecule</title>\n<META NAME=\"description\" CONTENT=\"5.2 Looping over the Atoms and Bonds of a Molecule\">\n<META NAME=\"keywords\" CONTENT=\"cplusprog\">\n<META NAME=\"resource-type\" CONTENT=\"document\">\n<META NAME=\"distribution\" CONTENT=\"global\">\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n<link rel=\"STYLESHEET\" href=\"cplusprog.css\">\n<link rel=\"first\" href=\"cplusprog.html\">\n<link rel=\"contents\" href=\"contents.html\" title=\"Contents\">\n\n<LINK REL=\"next\" HREF=\"node45.html\">\n<LINK REL=\"previous\" HREF=\"node43.html\">\n<LINK REL=\"up\" HREF=\"node42.html\">\n<LINK REL=\"next\" HREF=\"node45.html\">\n</head>\n<body>\n<DIV CLASS=\"navigation\">\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node43.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node42.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node45.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - C++ Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><img src=\"../icons/blank_4.gif\"\n  border=\"0\" alt=\"\"></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node43.html\">5.1 OEChem Iterators</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node42.html\">5. Traversing the Atoms,</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node45.html\">5.3 Dereferencing the Iterator</A>\n<br><hr>\n</DIV>\n<!--End of Navigation Panel-->\n\n<H1><A NAME=\"SECTION008200000000000000000\">\n5.2 Looping over the Atoms and Bonds of a Molecule</A>\n</H1>\n\n<P>\nThe example below shows the minimal use of OEChem's iterators.  These\nexamples use the OEMolBase methods <code>GetAtoms</code> and <code>GetBonds</code>,\nwhich return iterators over the atoms and bonds of a molecule,\nrespectively.\n\n<P>\n<dl><dd><pre class=\"verbatim\">#include \"oechem.h\"\n#include &lt;iostream&gt;\n\nusing namespace OESystem;\nusing namespace OEChem;\nusing namespace std;\n\nbool MyMolIsEmpty(OEMolBase &amp;mol)\n{\n  return mol.GetAtoms()? false : true;\n}\n\nunsigned int MyNumAtoms(OEMolBase &amp;mol)\n{\n  OEIter&lt;OEAtomBase&gt; atom;\n  unsigned int result = 0;\n\n  for (atom = mol.GetAtoms(); atom; ++atom)\n   ++result;\n  return result;\n}\n\nunsigned int MyNumBonds(OEMolBase &amp;mol)\n{\n  OEIter&lt;OEBondBase&gt; bond;\n  unsigned int result = 0;\n\n  for (bond = mol.GetBonds(); bond; ++bond)\n    ++result;\n  return result;\n}\n\nint main()\n{\n  OEMol mol;\n  OEParseSmiles(mol, \"c1ccccc1\");\n  if (!MyMolIsEmpty(mol))\n  {\n    cerr &lt;&#60; \"num atoms: \" &lt;&#60; MyNumAtoms(mol) &lt;&#60; endl;\n    cerr &lt;&#60; \"num bonds: \" &lt;&#60; MyNumBonds(mol) &lt;&#60; endl;\n  }\n  return 0;\n}\n</pre>\n<div class=\"verbatiminput-footer\">\n<a href=\"ch6-1.txt\" type=\"text/plain\">Download as text.</a>\n</div>\n</dd></dl>\n\n<P>\nThe user function MyMolIsEmpty returns true if the input molecule has\nno atoms, and the functions MyNumAtoms and MyNumBonds count the number\nof atoms and bonds in a molecule using OEChem's iterators.  These\n``My*'' functions are just for demonstration, it is far more efficient to\nuse the OEMolBase's NumAtoms and NumBonds methods in production code.\n\n<P>\nOne point to notice is that once again C++'s destructors mean that it\nis not necessary to explicitly deallocate or destroy the iterator\nafter use.  Once the variable goes out of scope, it is cleaned up\nautomatically.\n\n<P>\n\n<DIV CLASS=\"navigation\">\n<p><hr>\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node43.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node42.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node45.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - C++ Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><img src=\"../icons/blank_4.gif\"\n  border=\"0\" alt=\"\"></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node43.html\">5.1 OEChem Iterators</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node42.html\">5. Traversing the Atoms,</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node45.html\">5.3 Dereferencing the Iterator</A>\n<hr>\n<span class=\"release-info\">Documentation released on July 30, 2004.</span>\n</DIV>\n<!--End of Navigation Panel-->\n\n</BODY>\n</HTML>\n", "id": 38607.0}