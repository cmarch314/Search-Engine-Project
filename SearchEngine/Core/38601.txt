{"text": "Navigation Up Table of Contents Bibliography Index Title Page CGAL Triangulation hierarchy 2 Tr DefinitionThe class Triangulation hierarchy 2 Tr implements a triangulation augmented with a data structure which allows fast point location queries The data structure is a hierarchy of triangulations The triangulation at the lowest level is the original triangulation where operations and point location are to be performed Then at each succeedding level the data structure stores a triangulation of a small random sample of the vertices of the triangulation at the preceeding level Point location is done through a top down nearest neighbor query The nearest neighbor query is first performed naively in the top level triangulation Then at each following level the nearest neighbor at that level is found through a linear walk performed from the nearest neighbor found at the preceeding level Because the number of vertices in each triangulation is only a small fraction of the number of vertices of the preceeding triangulation the data structure remains small and achieves fast point location queries on real data As proved in Dev98 this structure has an optimal behaviour when it is built for Delaunay triangulations However it can be used as well for other triangulations The class Triangulation hierarchy 2 Tr is templated by a parameter which is to be instantiated by anyone of the CGAL triangulation classes include CGAL Triangulation hierarchy 2 h Inherits FromTr TypesThe class Triangulation hierarchy 2 Tr inherits the types from its base triangulation class Tr The class Triangulation hierarchy 2 Tr offers exactly the same functionalities as the triangulation Tr does Location queries are overloaded to benefit from the data structure Midifiers insertion removal are overloaded to take care of updating the data structure Be carefull that I O operations are not overloaded Writing a Triangulation hierarchy 2 Tr into a file writes only the lowest level triangulation and drop the hierarchy and reading it from a file results in a triangulation whose efficiency will be that of an ordinary triangulation See AlsoCGAL Triangulation 2 Traits Tds CGAL Delaunay triangulation 2 Traits Tds TriangulationHierarchyVertexBase 2 CGAL Triangulation hierarchy vertex base 2 Vb Next Triangulation hierarchy vertex base 2 Vb Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Triangulation_2_ref/Class_Triangulation_hierarchy_2.html", "title": "triangulation_hierarchy_2&lt;tr&gt;", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Triangulation_2_ref/Triangulation_hierarchy_2.tex' -->\n<html> <head>  \n<title>Triangulation_hierarchy_2&lt;Tr&gt;</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_950\"></A>\n\n<A NAME=\"Cross_link_anchor_951\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_902\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Class.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_CGAL::Triangulation_hierarchy_2<Tr>\"></A>\n<h2><I>CGAL::Triangulation_hierarchy_2&lt;Tr&gt;</I></h2>\n<P>\n\n<H3>Definition</H3>The class <I><A HREF=\"Class_Triangulation_hierarchy_2.html#Cross_link_anchor_951\">Triangulation_hierarchy_2</A>&lt;Tr&gt;</I> implements a triangulation augmented with\na data structure which allows fast point location queries.\n<P>\n\nThe data structure is a hierarchy \nof triangulations. The triangulation at the lowest level is\nthe original triangulation where operations and point location are to \nbe performed.\nThen at each succeedding level, the data structure\nstores a triangulation of a small random sample of the vertices\nof the triangulation at the preceeding level.\n<P>\n\nPoint location\nis done through a top-down nearest neighbor query.\nThe nearest neighbor query is first\nperformed naively in the top level triangulation.\nThen, at each following level, the nearest neighbor at that level\nis found through a linear walk performed from\nthe nearest neighbor found at the preceeding level.\n<P>\n\nBecause the number of vertices in each triangulation is only a small\nfraction of the number of vertices of the preceeding triangulation \nthe data structure remains small and achieves fast point location \nqueries on real\ndata. As proved in&nbsp;[<A HREF=\"../biblio.html#Biblio_d-iirdt-98\">Dev98</A>], this structure has an optimal behaviour\nwhen it is built for Delaunay triangulations.\nHowever it can be used as well for other triangulations.\nThe class <I><A HREF=\"Class_Triangulation_hierarchy_2.html#Cross_link_anchor_951\">Triangulation_hierarchy_2</A>&lt;Tr&gt;</I> is templated by a parameter\nwhich is to be instantiated by anyone of the C<SMALL>GAL</SMALL> triangulation\nclasses.\n<P>\n\n<I>#include &lt;<A HREF=\"../../../include/CGAL/Triangulation_hierarchy_2.h\">CGAL/Triangulation_hierarchy_2.h</A>&gt;</I>\n<P>\n\n<H3>Inherits From</H3><I>Tr</I>\n<P>\n\n<H3>Types</H3>The class <I><A HREF=\"Class_Triangulation_hierarchy_2.html#Cross_link_anchor_951\">Triangulation_hierarchy_2</A>&lt;Tr&gt;</I> inherits the types from its base triangulation\nclass <I>Tr</I>.\n<P>\n\nThe class <I><A HREF=\"Class_Triangulation_hierarchy_2.html#Cross_link_anchor_951\">Triangulation_hierarchy_2</A>&lt;Tr&gt;</I> offers exactly the same functionalities\nas the triangulation Tr does.\nLocation queries are overloaded to benefit from the\ndata structure. Midifiers (insertion, removal) are overloaded\nto take care of updating the data structure.\n<P>\n\nBe carefull that I/O operations are not overloaded.\nWriting a <I><A HREF=\"Class_Triangulation_hierarchy_2.html#Cross_link_anchor_951\">Triangulation_hierarchy_2</A>&lt;Tr&gt;</I>  into a file\nwrites only the lowest level triangulation and drop the hierarchy\nand reading it from a file results in a triangulation\nwhose efficiency will be that of an ordinary triangulation.\n<P>\n\n<H3>See Also</H3><I><A HREF=\"Class_Triangulation_2.html#Cross_link_anchor_938\">CGAL::Triangulation_2</A>&lt;Traits,Tds&gt;</I><BR>\n\n<I><A HREF=\"Class_Delaunay_triangulation_2.html#Cross_link_anchor_919\">CGAL::Delaunay_triangulation_2</A>&lt;Traits,Tds&gt;</I> \n<I><A HREF=\"Concept_TriangulationHierarchyVertexBase_2.html#Cross_link_anchor_935\">TriangulationHierarchyVertexBase_2</A></I>,<BR>\n\n<I><A HREF=\"Class_Triangulation_hierarchy_vertex_base_2.html#Cross_link_anchor_952\">CGAL::Triangulation_hierarchy_vertex_base_2</A>&lt;Vb&gt;</I>\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Class_Triangulation_hierarchy_vertex_base_2.html\"><I>Triangulation_hierarchy_vertex_base_2&lt;Vb&gt;</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_32!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 38601.0}