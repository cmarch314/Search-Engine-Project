{"text": "Search LoginPreferencesHelp GuideAbout Trac WikiTimelineRoadmapBrowse SourceView TicketsSearch Context Navigation BlameRevision Log source nomatic tags NomaticIM 5 buddy bots src zope interface interface py View diff against View revision Visit trunk Last change on this file was 712 checked in by cbaker 7 years ago First draft of nomatic buddy bots oscar bot is functional if you give it good authentication credentials jabber bot is just an example from the web File size 23 KB Line 1 2 3 Copyright c 2 1 2 2 Zope Corporation and Contributors 4 All Rights Reserved 5 6 This software is subject to the provisions of the Zope Public License 7 Version 2 1 ZPL A copy of the ZPL should accompany this distribution 8 THIS SOFTWARE IS PROVIDED AS IS AND ANY AND ALL EXPRESS OR IMPLIED9 WARRANTIES ARE DISCLAIMED INCLUDING BUT NOT LIMITED TO THE IMPLIED1 WARRANTIES OF TITLE MERCHANTABILITY AGAINST INFRINGEMENT AND FITNESS11 FOR A PARTICULAR PURPOSE 12 13 14 Interface object implementation1516 Id interface py 67761 2 6 4 3 13 56 44Z jim 17 1819from future import generators2 21import sys22import warnings23import weakref24from types import FunctionType25from ro import ro26from zope interface exceptions import Invalid2728CO VARARGS 429CO VARKEYWORDS 83 TAGGED DATA interface tagged values 3132 decorator non return object 3334def invariant call 35 f locals sys getframe 1 f locals36 tags f locals setdefault TAGGED DATA 37 invariants tags setdefault invariants 38 invariants append call 39 return decorator non return4 41class Element object 4243 We can t say this yet because we don t have enough44 infrastructure in place 45 46 implements IElement 4748 def init self name doc 49 Create an attribute description5 51 if not doc and name find 52 doc name 53 name None5455 self name name 56 self doc doc 57 self tagged values 5859 def getName self 6 Returns the name of the object 61 return self name 6263 def getDoc self 64 Returns the documentation for the object 65 return self doc 6667 def getTaggedValue self tag 68 Returns the value associated with tag 69 return self tagged values tag 7 71 def queryTaggedValue self tag default None 72 Returns the value associated with tag 73 return self tagged values get tag default 7475 def getTaggedValueTags self 76 Returns a list of all tags 77 return self tagged values keys 7879 def setTaggedValue self tag value 8 Associates value with key 81 self tagged values tag value8283class SpecificationBasePy object 8485 def providedBy self ob 86 Is the interface implemented by an object8788 from zope interface import 89 class I1 Interface 9 pass91 class C object 92 implements I1 93 c C 94 class X object 95 pass96 x X 97 I1 providedBy x 98 False99 I1 providedBy C 1 False1 1 I1 providedBy c 1 2 True1 3 directlyProvides x I1 1 4 I1 providedBy x 1 5 True1 6 directlyProvides C I1 1 7 I1 providedBy C 1 8 True1 911 111 spec providedBy ob 112 return self in spec implied113114 def implementedBy self cls 115 Test whether the specification is implemented by a class or factory 116 Raise TypeError if argument is neither a class nor a callable 117 spec implementedBy cls 118 return self in spec implied11912 def isOrExtends self interface 121 Is the interface the same as or extend the given interface122123 Examples 124125 from zope interface import Interface126 from zope interface declarations import Declaration127 class I1 Interface pass128 129 class I2 I1 pass13 131 class I3 Interface pass132 133 class I4 I3 pass134 135 spec Declaration 136 int spec extends Interface 137 1138 spec Declaration I2 139 int spec extends Interface 14 1141 int spec extends I1 142 1143 int spec extends I2 144 1145 int spec extends I3 146 147 int spec extends I4 148 14915 151 return interface in self implied152153 call isOrExtends154155SpecificationBase SpecificationBasePy156157 marker object 158class InterfaceBasePy object 159 Base class that wants to be replaced with a C base 16 161162 def call self obj alternate marker 163 Adapt an object to the interface164 165 conform getattr obj conform None 166 if conform is not None 167 adapter self call conform conform 168 if adapter is not None 169 return adapter17 171 adapter self adapt obj 172173 if adapter is not None 174 return adapter175 elif alternate is not marker 176 return alternate177 else 178 raise TypeError Could not adapt obj self 17918 def adapt self obj 181 Adapt an object to the reciever182 183 if self providedBy obj 184 return obj185186 for hook in adapter hooks 187 adapter hook self obj 188 if adapter is not None 189 return adapter19 191InterfaceBase InterfaceBasePy192193adapter hooks 194195try 196 import zope interface coptimizations197except ImportError 198 pass199else 2 from zope interface coptimizations import SpecificationBase2 1 from zope interface coptimizations import InterfaceBase adapter hooks2 22 3class Specification SpecificationBase 2 4 Specifications2 52 6 An interface specification is used to track interface declarations2 7 and component registrations 2 82 9 This class is a base class for both interfaces themselves and for21 interface specifications declarations 211212 Specifications are mutable If you reassign their cases their213 relations with other specifications are adjusted accordingly 214215 For example 216217 from zope interface import Interface218 class I1 Interface 219 pass22 class I2 I1 221 pass222 class I3 I2 223 pass224225 i name for i in I1 bases 226 Interface 227228 i name for i in I2 bases 229 I1 23 231 I3 extends I1 232 1233234 I2 bases Interface 235236 i name for i in I2 bases 237 Interface 238239 I3 extends I1 24 241242 243244 Copy some base class methods for speed245 isOrExtends SpecificationBase isOrExtends246 providedBy SpecificationBase providedBy247248 249 BBB 2 4 7 13 Backward compatabilty These methods have been25 deprecated in favour of providedBy and implementedBy 251252 def isImplementedByInstancesOf self cls 253 warnings warn 254 isImplementedByInstancesOf has been renamed to implementedBy 255 DeprecationWarning stacklevel 2 256 257 return self implementedBy cls 258259 def isImplementedBy self ob 26 warnings warn 261 isImplementedBy has been renamed to providedBy 262 DeprecationWarning stacklevel 2 263 264 return self providedBy ob 265 266 267268 def init self bases 269 self implied 27 self dependents weakref WeakKeyDictionary 271 self bases tuple bases 272273 def subscribe self dependent 274 self dependents dependent self dependents get dependent 1275276 def unsubscribe self dependent 277 n self dependents get dependent 1278 if not n 279 del self dependents dependent 28 elif n 281 self dependents dependent n282 else 283 raise KeyError dependent 284285 def setBases self bases 286 Register ourselves as a dependent of our old bases287 for b in self bases 288 b unsubscribe self 28929 Register ourselves as a dependent of our bases291 self dict bases bases292 for b in bases 293 b subscribe self 294295 self changed self 296297 bases property 298299 lambda self self dict get bases 3 setBases 3 1 3 23 3 def changed self originally changed 3 4 We or something we depend on have changed3 5 3 63 7 implied self implied3 8 implied clear 3 931 ancestors ro self 311312 try 313 if Interface not in ancestors 314 ancestors append Interface 315 except NameError 316 pass defining Interface itself317318 self sro tuple ancestors 319 self iro tuple ancestor for ancestor in ancestors32 if isinstance ancestor InterfaceClass 321 322323 for ancestor in ancestors 324 We directly imply our ancestors 325 implied ancestor 326327 Now advise our dependents of change 328 for dependent in self dependents keys 329 dependent changed originally changed 33 331332 def interfaces self 333 Return an iterator for the interfaces in the specification334335 for example 336337 from zope interface import Interface338 class I1 Interface pass339 34 class I2 I1 pass341 342 class I3 Interface pass343 344 class I4 I3 pass345 346 spec Specification I2 I3 347 spec Specification I4 spec 348 i spec interfaces 349 i next getName 35 I4 351 i next getName 352 I2 353 i next getName 354 I3 355 list i 356 357 358 seen 359 for base in self bases 36 for interface in base interfaces 361 if interface not in seen 362 seen interface 1363 yield interface364365366 def extends self interface strict True 367 Does the specification extend the given interface 368369 Test whether an interface in the specification extends the37 given interface371372 Examples 373374 from zope interface import Interface375 from zope interface declarations import Declaration376 class I1 Interface pass377 378 class I2 I1 pass379 38 class I3 Interface pass381 382 class I4 I3 pass383 384 spec Declaration 385 int spec extends Interface 386 1387 spec Declaration I2 388 int spec extends Interface 389 139 int spec extends I1 391 1392 int spec extends I2 393 1394 int spec extends I3 395 396 int spec extends I4 397 398 I2 extends I2 399 4 I2 extends I2 False 4 1 14 2 I2 extends I2 strict False 4 3 14 44 5 4 6 return interface in self implied 4 7 and4 8 not strict or self interface 4 9 41 411 def weakref self callback None 412 return weakref ref self callback 413414 def get self name default None 415 Query for an attribute description416 417 try 418 attrs self v attrs419 except AttributeError 42 attrs self v attrs 421 attr attrs get name 422 if attr is None 423 for iface in self iro 424 attr iface direct name 425 if attr is not None 426 attrs name attr427 break428429 if attr is None 43 return default431 else 432 return attr433434class InterfaceClass Element InterfaceBase Specification 435 Prototype scarecrow Interfaces Implementation 436437 We can t say this yet because we don t have enough438 infrastructure in place 439 44 implements IInterface 441442 def init self name bases attrs None doc None 443 module None 444445 if attrs is None 446 attrs 447448 if module is None 449 module attrs get module 45 if isinstance module str 451 del attrs module 452 else 453 try 454 Figure out what module defined the interface 455 This is how cPython figures out the module of456 a class but of course it does it in C 457 module sys getframe 1 f globals name 458 except AttributeError KeyError 459 pass46 461 self module module 462463 d attrs get doc 464 if d is not None 465 if not isinstance d Attribute 466 if doc is None 467 doc d468 del attrs doc 46947 if doc is None 471 doc 472473 Element init self name doc 474475 tagged data attrs pop TAGGED DATA None 476 if tagged data is not None 477 for key val in tagged data items 478 self setTaggedValue key val 47948 for base in bases 481 if not isinstance base InterfaceClass 482 raise TypeError Expected base interfaces 483484 Specification init self bases 485486 Make sure that all recorded attributes and methods are of type487 Attribute and Method 488 for name attr in attrs items 489 if isinstance attr Attribute 49 attr interface self491 if not attr name 492 attr name name493 elif isinstance attr FunctionType 494 attrs name fromFunction attr self name name 495 elif attr is decorator non return 496 del attrs name 497 else 498 raise InvalidInterface Concrete attribute name 4995 self attrs attrs5 15 2 self identifier s s self module self name 5 35 4 def interfaces self 5 5 Return an iterator for the interfaces in the specification5 65 7 for example 5 85 9 from zope interface import Interface51 class I1 Interface pass511 512 513 i I1 interfaces 514 i next getName 515 I1 516 list i 517 518 519 yield self52 521 def getBases self 522 return self bases 523524 def isEqualOrExtendedBy self other 525 Same interface or extends 526 return self other or other extends self 527528 def names self all False 529 Return the attribute names defined by the interface 53 if not all 531 return self attrs keys 532533 r self attrs copy 534535 for base in self bases 536 r update dict fromkeys base names all 537538 return r keys 53954 def iter self 541 return iter self names all True 542543 def namesAndDescriptions self all False 544 Return attribute names and descriptions defined by interface 545 if not all 546 return self attrs items 547548 r 549 for base in self bases 1 55 r update dict base namesAndDescriptions all 551552 r update self attrs 553554 return r items 555556 def getDescriptionFor self name 557 Return the attribute description for the given name 558 r self get name 559 if r is not None 56 return r561562 raise KeyError name 563564 getitem getDescriptionFor565566 def contains self name 567 return self get name is not None568569 def direct self name 57 return self attrs get name 571572 def queryDescriptionFor self name default None 573 return self get name default 574575 def deferred self 576 Return a defered class corresponding to the interface 577 if hasattr self deferred return self deferred578579 klass 58 exec class s pass self name in klass581 klass klass self name 582583 self d klass dict 584585 self deferred klass586587 return klass588589 def validateInvariants self obj errors None 59 validate object to defined invariants 591 for call in self queryTaggedValue invariants 592 try 593 call obj 594 except Invalid e 595 if errors is None 596 raise597 else 598 errors append e 599 for base in self bases 6 try 6 1 base validateInvariants obj errors 6 2 except Invalid 6 3 if errors is None 6 4 raise6 5 if errors 6 6 raise Invalid errors 6 76 8 def getInterface self ob name 6 9 Retrieve a named interface 61 return None611612 def d self dict 613614 for k v in self attrs items 615 if isinstance v Method and not k in dict 616 dict k v617618 for b in self bases 619 b d dict 62 621 def repr self 622 try 623 return self v repr624 except AttributeError 625 name self name 626 m self module 627 if m 628 name s s m name 629 r s s self class name name 63 self v repr r631 return r632633 def call conform self conform 634 try 635 return conform self 636 except TypeError 637 We got a TypeError It might be an error raised by638 the conform implementation or we may have639 made the TypeError by calling an unbound method64 object is a class In the later case we behave641 as though there is no conform method We can642 detect this case by checking whether there is more643 than one traceback object in the traceback chain 644 if sys exc info 2 tb next is not None 645 There is more than one entry in the chain so646 reraise the error 647 raise648 This clever trick is from Phillip Eby64965 return None651652 def reduce self 653 return self name 654655 def cmp self o1 o2 656 Yes I did mean to name this cmp rather than cmp 657 It is a private method used by lt and gt 658 I don t want to override eq because I want the default659 eq which is really fast 66 Make interfaces sortable661662 TODO It would ne nice if 663664 More specific interfaces should sort before less specific ones 665 Otherwise sort on name and module 666667 But this is too complicated and we re going to punt on it668 for now 66967 For now sort on interface and module name 671672 None is treated as a pseudo interface that implies the loosest673 contact possible no contract For that reason all interfaces674 sort before None 675676 677 if o1 o2 678 return 67968 if o1 is None 681 return 1682 if o2 is None 683 return 1684685 n1 getattr o1 name 686 getattr getattr o1 module None name 687 n2 getattr o2 name 688 getattr getattr o2 module None name 68969 return cmp n1 n2 691692 def lt self other 693 c self cmp self other 694 print self other c c695 return c 696697 def gt self other 698 c self cmp self other 699 print self other c c7 return c 7 17 27 3Interface InterfaceClass Interface module zope interface 7 47 5class Attribute Element 7 6 Attribute descriptions7 7 7 87 9 We can t say this yet because we don t have enough71 infrastructure in place 711 712 implements IAttribute 713714 interface None715716717class Method Attribute 718 Method interfaces71972 The idea here is that you have objects that describe methods 721 This provides an opportunity for rich meta data 722 723724 We can t say this yet because we don t have enough725 infrastructure in place 726 727 implements IMethod 728729 def call self args kw 73 raise BrokenImplementation self interface self name 731732 def getSignatureInfo self 733 return positional self positional 734 required self required 735 optional self optional 736 varargs self varargs 737 kwargs self kwargs 738 73974 def getSignatureString self 741 sig 742 for v in self positional 743 sig append v 744 if v in self optional keys 745 sig 1 self optional v 746 if self varargs 747 sig append self varargs 748 if self kwargs 749 sig append self kwargs 75 751 return s join sig 752753754def fromFunction func interface None imlevel name None 755 name name or func name 756 method Method name func doc 757 defaults func func defaults or 758 code func func code759 Number of positional arguments76 na code co argcount imlevel761 names code co varnames imlevel 762 opt 763 Number of required arguments764 nr na len defaults 765 if nr 766 defaults defaults nr 767 nr 768769 Determine the optional arguments 77 opt update dict zip names nr defaults 771772 method positional names na 773 method required names nr 774 method optional opt775776 argno na777778 Determine the function s variable argument s name i e args 779 if code co flags CO VARARGS 78 method varargs names argno 781 argno argno 1782 else 783 method varargs None784785 Determine the function s keyword argument s name i e kw 786 if code co flags CO VARKEYWORDS 787 method kwargs names argno 788 else 789 method kwargs None79 791 method interface interface792793 for key value in func dict items 794 method setTaggedValue key value 795796 return method797798799def fromMethod meth interface None name None 8 func meth im func8 1 return fromFunction func interface imlevel 1 name name 8 28 38 4 Now we can create the interesting interfaces and wire them up 8 5def wire 8 6 from zope interface declarations import classImplements8 78 8 from zope interface interfaces import IAttribute8 9 classImplements Attribute IAttribute 81 811 from zope interface interfaces import IMethod812 classImplements Method IMethod 813814 from zope interface interfaces import IInterface ISpecification815 classImplements InterfaceClass IInterface 816 classImplements Specification ISpecification 817818 We import this here to deal with module dependencies 819from zope interface declarations import providedBy implementedBy82 from zope interface exceptions import InvalidInterface821from zope interface exceptions import BrokenImplementation Note See TracBrowser for help on using the repository browser Download in other formats Plain Text Original Format Powered by Trac 1 1 By Edgewall Software All content copyright 2 7 2 8 by LUCI http luci ics uci edu ", "_id": "http://djp3-pc2.ics.uci.edu/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/zope/interface/interface.py", "title": "\n      interface.py in nomatic/tags/nomaticim-0.0.5/buddy_bots/src/zope/interface\n     \u2013 nomatic*im\n    ", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n  \n\n\n  <head>\n\t\t<title>\n      interface.py in nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/zope/interface\n     \u2013 Nomatic*IM\n    </title><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><link rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search\" /><link rel=\"help\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/zope/interface/interface.py?format=txt\" type=\"text/plain\" title=\"Plain Text\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/zope/interface/interface.py\" type=\"application/x-python; charset=iso-8859-15\" title=\"Original Format\" /><link rel=\"start\" href=\"/LUCICodeRepository/nomaticIM/wiki\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/code.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/pygments/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/browser.css\" type=\"text/css\" /><link rel=\"shortcut icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link rel=\"icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link type=\"application/opensearchdescription+xml\" rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search/opensearch\" title=\"Search Nomatic*IM\" /><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/jquery.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/babel.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/messages/en_US.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/trac.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/search.js\"></script><script type=\"text/javascript\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/folding.js\"></script><script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\".trac-toggledeleted\").show().click(function() {\n                  $(this).siblings().find(\".trac-deleted\").toggle();\n                  return false;\n        }).click();\n        $(\"#jumploc input\").hide();\n        $(\"#jumploc select\").change(function () {\n          this.parentNode.parentNode.submit();\n        });\n          $('#preview table.code').enableCollapsibleColumns($('#preview table.code thead th.content'));\n      });\n    </script>\n\t</head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://luci.ics.uci.edu/#code\"><img src=\"http://luci.ics.uci.edu/blog/archives/LUCIhorzTight.jpg\" alt=\"LUCI Code Repository\" /></a>\n      </div>\n      <form id=\"search\" action=\"/LUCICodeRepository/nomaticIM/search\" method=\"get\">\n        <div>\n          <label for=\"proj-search\">Search:</label>\n          <input type=\"text\" id=\"proj-search\" name=\"q\" size=\"18\" value=\"\" />\n          <input type=\"submit\" value=\"Search\" />\n        </div>\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/login\">Login</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/prefs\">Preferences</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\">Help/Guide</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/wiki\">Wiki</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/timeline\">Timeline</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/roadmap\">Roadmap</a></li><li class=\"active\"><a href=\"/LUCICodeRepository/nomaticIM/browser\">Browse Source</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/report\">View Tickets</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/search\">Search</a></li>\n    </ul>\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/buddy_bots/zope/interface/interface.py?annotate=blame\" title=\"Annotate each line with the last changed revision (this can be time consuming...)\">Blame</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/log/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/zope/interface/interface.py\">Revision Log</a></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"browser\">\n        <h1>\n          \n<a class=\"pathentry first\" href=\"/LUCICodeRepository/nomaticIM/browser?order=name\" title=\"Go to repository root\">source:</a>\n<a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic?order=name\" title=\"View nomatic\">nomatic</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags?order=name\" title=\"View tags\">tags</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5?order=name\" title=\"View NomaticIM-0.0.5\">NomaticIM-0.0.5</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots?order=name\" title=\"View buddy_bots\">buddy_bots</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src?order=name\" title=\"View src\">src</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/zope?order=name\" title=\"View zope\">zope</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/zope/interface?order=name\" title=\"View interface\">interface</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/zope/interface/interface.py?order=name\" title=\"View interface.py\">interface.py</a>\n<br style=\"clear: both\" />\n\n        </h1>\n        <div id=\"diffrev\">\n          <form action=\"/LUCICodeRepository/nomaticIM/changeset\" method=\"get\">\n            <div>\n              <label title=\"Show the diff against a specific revision\">\n                View diff against: <input type=\"text\" name=\"old\" size=\"6\" />\n                <input type=\"hidden\" name=\"old_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/zope/interface/interface.py\" />\n                <input type=\"hidden\" name=\"new\" />\n                <input type=\"hidden\" name=\"new_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/zope/interface/interface.py\" />\n              </label>\n            </div>\n          </form>\n        </div>\n        <div id=\"jumprev\">\n          <form action=\"\" method=\"get\">\n            <div>\n              <label for=\"rev\">\n                View revision:</label>\n              <input type=\"text\" id=\"rev\" name=\"rev\" size=\"6\" />\n            </div>\n          </form>\n        </div>\n        <div id=\"jumploc\">\n          <form action=\"\" method=\"get\">\n            <div class=\"buttons\">\n              <label for=\"preselected\">Visit:</label>\n              <select id=\"preselected\" name=\"preselected\">\n                <option selected=\"selected\"></option>\n                <optgroup label=\"branches\">\n                  <option value=\"/LUCICodeRepository/nomaticIM/browser/trunk\">trunk</option>\n                </optgroup>\n              </select>\n              <input type=\"submit\" value=\"Go!\" title=\"Jump to the chosen preselected path\" />\n            </div>\n          </form>\n        </div>\n        <div class=\"trac-tags\">\n        </div>\n      <table id=\"info\" summary=\"Revision info\">\n        <tr>\n          <th>\n                <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/nomatic/trunk/buddy_bots/zope/interface/interface.py\" title=\"View differences\">Last change</a>\n                  on this file was\n                  <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/\" title=\"View changeset 712\">712</a>,\n                  checked in by cbaker, <a class=\"timeline\" href=\"/LUCICodeRepository/nomaticIM/timeline?from=2008-02-16T08%3A16%3A53-08%3A00&amp;precision=second\" title=\"See timeline at Feb 16, 2008, 8:16:53 AM\">7 years ago</a>\n          </th>\n        </tr>\n        <tr>\n          <td class=\"message searchable\">\n              <p>\nFirst draft of nomatic buddy bots. oscar_bot is functional if you give it good authentication credentials, jabber_bot is just an example from the web <br />\n</p>\n          </td>\n        </tr>\n        <tr><td colspan=\"2\">\n            <strong>File size:</strong>\n            <span title=\"23502 bytes\">23.0 KB</span>\n          </td></tr>\n      </table>\n      <div id=\"preview\" class=\"searchable\">\n        \n  <table class=\"code\"><thead><tr><th class=\"lineno\" title=\"Line numbers\">Line</th><th class=\"content\">\u00a0</th></tr></thead><tbody><tr><th id=\"L1\"><a href=\"#L1\">1</a></th><td><span class=\"c\">##############################################################################</span></td></tr><tr><th id=\"L2\"><a href=\"#L2\">2</a></th><td><span class=\"c\">#</span></td></tr><tr><th id=\"L3\"><a href=\"#L3\">3</a></th><td><span class=\"c\"># Copyright (c) 2001, 2002 Zope Corporation and Contributors.</span></td></tr><tr><th id=\"L4\"><a href=\"#L4\">4</a></th><td><span class=\"c\"># All Rights Reserved.</span></td></tr><tr><th id=\"L5\"><a href=\"#L5\">5</a></th><td><span class=\"c\">#</span></td></tr><tr><th id=\"L6\"><a href=\"#L6\">6</a></th><td><span class=\"c\"># This software is subject to the provisions of the Zope Public License,</span></td></tr><tr><th id=\"L7\"><a href=\"#L7\">7</a></th><td><span class=\"c\"># Version 2.1 (ZPL).\u00a0 A copy of the ZPL should accompany this distribution.</span></td></tr><tr><th id=\"L8\"><a href=\"#L8\">8</a></th><td><span class=\"c\"># THIS SOFTWARE IS PROVIDED \"AS IS\" AND ANY AND ALL EXPRESS OR IMPLIED</span></td></tr><tr><th id=\"L9\"><a href=\"#L9\">9</a></th><td><span class=\"c\"># WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED</span></td></tr><tr><th id=\"L10\"><a href=\"#L10\">10</a></th><td><span class=\"c\"># WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS</span></td></tr><tr><th id=\"L11\"><a href=\"#L11\">11</a></th><td><span class=\"c\"># FOR A PARTICULAR PURPOSE.</span></td></tr><tr><th id=\"L12\"><a href=\"#L12\">12</a></th><td><span class=\"c\">#</span></td></tr><tr><th id=\"L13\"><a href=\"#L13\">13</a></th><td><span class=\"c\">##############################################################################</span></td></tr><tr><th id=\"L14\"><a href=\"#L14\">14</a></th><td><span class=\"sd\">\"\"\"Interface object implementation</span></td></tr><tr><th id=\"L15\"><a href=\"#L15\">15</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L16\"><a href=\"#L16\">16</a></th><td><span class=\"sd\">$Id: interface.py 67761 2006-04-30 13:56:44Z jim $</span></td></tr><tr><th id=\"L17\"><a href=\"#L17\">17</a></th><td><span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L18\"><a href=\"#L18\">18</a></th><td></td></tr><tr><th id=\"L19\"><a href=\"#L19\">19</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">__future__</span>\u00a0<span class=\"kn\">import</span>\u00a0generators</td></tr><tr><th id=\"L20\"><a href=\"#L20\">20</a></th><td></td></tr><tr><th id=\"L21\"><a href=\"#L21\">21</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">sys</span></td></tr><tr><th id=\"L22\"><a href=\"#L22\">22</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">warnings</span></td></tr><tr><th id=\"L23\"><a href=\"#L23\">23</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">weakref</span></td></tr><tr><th id=\"L24\"><a href=\"#L24\">24</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">types</span>\u00a0<span class=\"kn\">import</span>\u00a0FunctionType</td></tr><tr><th id=\"L25\"><a href=\"#L25\">25</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">ro</span>\u00a0<span class=\"kn\">import</span>\u00a0ro</td></tr><tr><th id=\"L26\"><a href=\"#L26\">26</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">zope.interface.exceptions</span>\u00a0<span class=\"kn\">import</span>\u00a0Invalid</td></tr><tr><th id=\"L27\"><a href=\"#L27\">27</a></th><td></td></tr><tr><th id=\"L28\"><a href=\"#L28\">28</a></th><td>CO_VARARGS <span class=\"o\">=</span>\u00a0<span class=\"mi\">4</span></td></tr><tr><th id=\"L29\"><a href=\"#L29\">29</a></th><td>CO_VARKEYWORDS <span class=\"o\">=</span>\u00a0<span class=\"mi\">8</span></td></tr><tr><th id=\"L30\"><a href=\"#L30\">30</a></th><td>TAGGED_DATA <span class=\"o\">=</span>\u00a0<span class=\"s\">'__interface_tagged_values__'</span></td></tr><tr><th id=\"L31\"><a href=\"#L31\">31</a></th><td></td></tr><tr><th id=\"L32\"><a href=\"#L32\">32</a></th><td>_decorator_non_return <span class=\"o\">=</span>\u00a0<span class=\"nb\">object</span><span class=\"p\">()</span></td></tr><tr><th id=\"L33\"><a href=\"#L33\">33</a></th><td></td></tr><tr><th id=\"L34\"><a href=\"#L34\">34</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">invariant</span><span class=\"p\">(</span>call<span class=\"p\">):</span></td></tr><tr><th id=\"L35\"><a href=\"#L35\">35</a></th><td>\u00a0 \u00a0 f_locals <span class=\"o\">=</span>\u00a0sys<span class=\"o\">.</span>_getframe<span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span>f_locals</td></tr><tr><th id=\"L36\"><a href=\"#L36\">36</a></th><td>\u00a0 \u00a0 tags <span class=\"o\">=</span>\u00a0f_locals<span class=\"o\">.</span>setdefault<span class=\"p\">(</span>TAGGED_DATA<span class=\"p\">,</span>\u00a0<span class=\"p\">{})</span></td></tr><tr><th id=\"L37\"><a href=\"#L37\">37</a></th><td>\u00a0 \u00a0 invariants <span class=\"o\">=</span>\u00a0tags<span class=\"o\">.</span>setdefault<span class=\"p\">(</span><span class=\"s\">'invariants'</span><span class=\"p\">,</span>\u00a0<span class=\"p\">[])</span></td></tr><tr><th id=\"L38\"><a href=\"#L38\">38</a></th><td>\u00a0 \u00a0 invariants<span class=\"o\">.</span>append<span class=\"p\">(</span>call<span class=\"p\">)</span></td></tr><tr><th id=\"L39\"><a href=\"#L39\">39</a></th><td>\u00a0 \u00a0 <span class=\"k\">return</span>\u00a0_decorator_non_return</td></tr><tr><th id=\"L40\"><a href=\"#L40\">40</a></th><td></td></tr><tr><th id=\"L41\"><a href=\"#L41\">41</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">Element</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span></td></tr><tr><th id=\"L42\"><a href=\"#L42\">42</a></th><td></td></tr><tr><th id=\"L43\"><a href=\"#L43\">43</a></th><td>\u00a0 \u00a0 <span class=\"c\"># We can't say this yet because we don't have enough</span></td></tr><tr><th id=\"L44\"><a href=\"#L44\">44</a></th><td>\u00a0 \u00a0 <span class=\"c\"># infrastructure in place.</span></td></tr><tr><th id=\"L45\"><a href=\"#L45\">45</a></th><td>\u00a0 \u00a0 <span class=\"c\">#</span></td></tr><tr><th id=\"L46\"><a href=\"#L46\">46</a></th><td>\u00a0 \u00a0 <span class=\"c\">#implements(IElement)</span></td></tr><tr><th id=\"L47\"><a href=\"#L47\">47</a></th><td></td></tr><tr><th id=\"L48\"><a href=\"#L48\">48</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0__name__<span class=\"p\">,</span>\u00a0__doc__<span class=\"o\">=</span><span class=\"s\">''</span><span class=\"p\">):</span></td></tr><tr><th id=\"L49\"><a href=\"#L49\">49</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Create an 'attribute' description</span></td></tr><tr><th id=\"L50\"><a href=\"#L50\">50</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L51\"><a href=\"#L51\">51</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0__doc__ <span class=\"ow\">and</span>\u00a0__name__<span class=\"o\">.</span>find<span class=\"p\">(</span><span class=\"s\">' '</span><span class=\"p\">)</span>\u00a0<span class=\"o\">&gt;=</span>\u00a0<span class=\"mi\">0</span><span class=\"p\">:</span></td></tr><tr><th id=\"L52\"><a href=\"#L52\">52</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 __doc__ <span class=\"o\">=</span>\u00a0__name__</td></tr><tr><th id=\"L53\"><a href=\"#L53\">53</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 __name__ <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L54\"><a href=\"#L54\">54</a></th><td></td></tr><tr><th id=\"L55\"><a href=\"#L55\">55</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>__name__<span class=\"o\">=</span>__name__</td></tr><tr><th id=\"L56\"><a href=\"#L56\">56</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>__doc__<span class=\"o\">=</span>__doc__</td></tr><tr><th id=\"L57\"><a href=\"#L57\">57</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>__tagged_values <span class=\"o\">=</span>\u00a0<span class=\"p\">{}</span></td></tr><tr><th id=\"L58\"><a href=\"#L58\">58</a></th><td></td></tr><tr><th id=\"L59\"><a href=\"#L59\">59</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getName</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L60\"><a href=\"#L60\">60</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\" Returns the name of the object. \"\"\"</span></td></tr><tr><th id=\"L61\"><a href=\"#L61\">61</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__name__</td></tr><tr><th id=\"L62\"><a href=\"#L62\">62</a></th><td></td></tr><tr><th id=\"L63\"><a href=\"#L63\">63</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getDoc</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L64\"><a href=\"#L64\">64</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\" Returns the documentation for the object. \"\"\"</span></td></tr><tr><th id=\"L65\"><a href=\"#L65\">65</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__doc__</td></tr><tr><th id=\"L66\"><a href=\"#L66\">66</a></th><td></td></tr><tr><th id=\"L67\"><a href=\"#L67\">67</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getTaggedValue</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0tag<span class=\"p\">):</span></td></tr><tr><th id=\"L68\"><a href=\"#L68\">68</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\" Returns the value associated with 'tag'. \"\"\"</span></td></tr><tr><th id=\"L69\"><a href=\"#L69\">69</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__tagged_values<span class=\"p\">[</span>tag<span class=\"p\">]</span></td></tr><tr><th id=\"L70\"><a href=\"#L70\">70</a></th><td></td></tr><tr><th id=\"L71\"><a href=\"#L71\">71</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">queryTaggedValue</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0tag<span class=\"p\">,</span>\u00a0default<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L72\"><a href=\"#L72\">72</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\" Returns the value associated with 'tag'. \"\"\"</span></td></tr><tr><th id=\"L73\"><a href=\"#L73\">73</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__tagged_values<span class=\"o\">.</span>get<span class=\"p\">(</span>tag<span class=\"p\">,</span>\u00a0default<span class=\"p\">)</span></td></tr><tr><th id=\"L74\"><a href=\"#L74\">74</a></th><td></td></tr><tr><th id=\"L75\"><a href=\"#L75\">75</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getTaggedValueTags</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L76\"><a href=\"#L76\">76</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\" Returns a list of all tags. \"\"\"</span></td></tr><tr><th id=\"L77\"><a href=\"#L77\">77</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__tagged_values<span class=\"o\">.</span>keys<span class=\"p\">()</span></td></tr><tr><th id=\"L78\"><a href=\"#L78\">78</a></th><td></td></tr><tr><th id=\"L79\"><a href=\"#L79\">79</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">setTaggedValue</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0tag<span class=\"p\">,</span>\u00a0value<span class=\"p\">):</span></td></tr><tr><th id=\"L80\"><a href=\"#L80\">80</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\" Associates 'value' with 'key'. \"\"\"</span></td></tr><tr><th id=\"L81\"><a href=\"#L81\">81</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>__tagged_values<span class=\"p\">[</span>tag<span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0value</td></tr><tr><th id=\"L82\"><a href=\"#L82\">82</a></th><td></td></tr><tr><th id=\"L83\"><a href=\"#L83\">83</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">SpecificationBasePy</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span></td></tr><tr><th id=\"L84\"><a href=\"#L84\">84</a></th><td></td></tr><tr><th id=\"L85\"><a href=\"#L85\">85</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">providedBy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0ob<span class=\"p\">):</span></td></tr><tr><th id=\"L86\"><a href=\"#L86\">86</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Is the interface implemented by an object</span></td></tr><tr><th id=\"L87\"><a href=\"#L87\">87</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L88\"><a href=\"#L88\">88</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; from zope.interface import *</span></td></tr><tr><th id=\"L89\"><a href=\"#L89\">89</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; class I1(Interface):</span></td></tr><tr><th id=\"L90\"><a href=\"#L90\">90</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ...\u00a0 \u00a0 \u00a0pass</span></td></tr><tr><th id=\"L91\"><a href=\"#L91\">91</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; class C(object):</span></td></tr><tr><th id=\"L92\"><a href=\"#L92\">92</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ...\u00a0 \u00a0 \u00a0implements(I1)</span></td></tr><tr><th id=\"L93\"><a href=\"#L93\">93</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; c = C()</span></td></tr><tr><th id=\"L94\"><a href=\"#L94\">94</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; class X(object):</span></td></tr><tr><th id=\"L95\"><a href=\"#L95\">95</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ...\u00a0 \u00a0 \u00a0pass</span></td></tr><tr><th id=\"L96\"><a href=\"#L96\">96</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; x = X()</span></td></tr><tr><th id=\"L97\"><a href=\"#L97\">97</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; I1.providedBy(x)</span></td></tr><tr><th id=\"L98\"><a href=\"#L98\">98</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 False</span></td></tr><tr><th id=\"L99\"><a href=\"#L99\">99</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; I1.providedBy(C)</span></td></tr><tr><th id=\"L100\"><a href=\"#L100\">100</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 False</span></td></tr><tr><th id=\"L101\"><a href=\"#L101\">101</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; I1.providedBy(c)</span></td></tr><tr><th id=\"L102\"><a href=\"#L102\">102</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 True</span></td></tr><tr><th id=\"L103\"><a href=\"#L103\">103</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; directlyProvides(x, I1)</span></td></tr><tr><th id=\"L104\"><a href=\"#L104\">104</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; I1.providedBy(x)</span></td></tr><tr><th id=\"L105\"><a href=\"#L105\">105</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 True</span></td></tr><tr><th id=\"L106\"><a href=\"#L106\">106</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; directlyProvides(C, I1)</span></td></tr><tr><th id=\"L107\"><a href=\"#L107\">107</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; I1.providedBy(C)</span></td></tr><tr><th id=\"L108\"><a href=\"#L108\">108</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 True</span></td></tr><tr><th id=\"L109\"><a href=\"#L109\">109</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L110\"><a href=\"#L110\">110</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L111\"><a href=\"#L111\">111</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 spec <span class=\"o\">=</span>\u00a0providedBy<span class=\"p\">(</span>ob<span class=\"p\">)</span></td></tr><tr><th id=\"L112\"><a href=\"#L112\">112</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span>\u00a0<span class=\"ow\">in</span>\u00a0spec<span class=\"o\">.</span>_implied</td></tr><tr><th id=\"L113\"><a href=\"#L113\">113</a></th><td></td></tr><tr><th id=\"L114\"><a href=\"#L114\">114</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">implementedBy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0cls<span class=\"p\">):</span></td></tr><tr><th id=\"L115\"><a href=\"#L115\">115</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Test whether the specification is implemented by a class or factory.</span></td></tr><tr><th id=\"L116\"><a href=\"#L116\">116</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Raise TypeError if argument is neither a class nor a callable.\"\"\"</span></td></tr><tr><th id=\"L117\"><a href=\"#L117\">117</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 spec <span class=\"o\">=</span>\u00a0implementedBy<span class=\"p\">(</span>cls<span class=\"p\">)</span></td></tr><tr><th id=\"L118\"><a href=\"#L118\">118</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span>\u00a0<span class=\"ow\">in</span>\u00a0spec<span class=\"o\">.</span>_implied</td></tr><tr><th id=\"L119\"><a href=\"#L119\">119</a></th><td></td></tr><tr><th id=\"L120\"><a href=\"#L120\">120</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">isOrExtends</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0interface<span class=\"p\">):</span></td></tr><tr><th id=\"L121\"><a href=\"#L121\">121</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Is the interface the same as or extend the given interface</span></td></tr><tr><th id=\"L122\"><a href=\"#L122\">122</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L123\"><a href=\"#L123\">123</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Examples::</span></td></tr><tr><th id=\"L124\"><a href=\"#L124\">124</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L125\"><a href=\"#L125\">125</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; from zope.interface import Interface</span></td></tr><tr><th id=\"L126\"><a href=\"#L126\">126</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; from zope.interface.declarations import Declaration</span></td></tr><tr><th id=\"L127\"><a href=\"#L127\">127</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; class I1(Interface): pass</span></td></tr><tr><th id=\"L128\"><a href=\"#L128\">128</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ...</span></td></tr><tr><th id=\"L129\"><a href=\"#L129\">129</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; class I2(I1): pass</span></td></tr><tr><th id=\"L130\"><a href=\"#L130\">130</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ...</span></td></tr><tr><th id=\"L131\"><a href=\"#L131\">131</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; class I3(Interface): pass</span></td></tr><tr><th id=\"L132\"><a href=\"#L132\">132</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ...</span></td></tr><tr><th id=\"L133\"><a href=\"#L133\">133</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; class I4(I3): pass</span></td></tr><tr><th id=\"L134\"><a href=\"#L134\">134</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ...</span></td></tr><tr><th id=\"L135\"><a href=\"#L135\">135</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; spec = Declaration()</span></td></tr><tr><th id=\"L136\"><a href=\"#L136\">136</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; int(spec.extends(Interface))</span></td></tr><tr><th id=\"L137\"><a href=\"#L137\">137</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1</span></td></tr><tr><th id=\"L138\"><a href=\"#L138\">138</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; spec = Declaration(I2)</span></td></tr><tr><th id=\"L139\"><a href=\"#L139\">139</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; int(spec.extends(Interface))</span></td></tr><tr><th id=\"L140\"><a href=\"#L140\">140</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1</span></td></tr><tr><th id=\"L141\"><a href=\"#L141\">141</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; int(spec.extends(I1))</span></td></tr><tr><th id=\"L142\"><a href=\"#L142\">142</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1</span></td></tr><tr><th id=\"L143\"><a href=\"#L143\">143</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; int(spec.extends(I2))</span></td></tr><tr><th id=\"L144\"><a href=\"#L144\">144</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1</span></td></tr><tr><th id=\"L145\"><a href=\"#L145\">145</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; int(spec.extends(I3))</span></td></tr><tr><th id=\"L146\"><a href=\"#L146\">146</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0</span></td></tr><tr><th id=\"L147\"><a href=\"#L147\">147</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; int(spec.extends(I4))</span></td></tr><tr><th id=\"L148\"><a href=\"#L148\">148</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0</span></td></tr><tr><th id=\"L149\"><a href=\"#L149\">149</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L150\"><a href=\"#L150\">150</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L151\"><a href=\"#L151\">151</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0interface <span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_implied</td></tr><tr><th id=\"L152\"><a href=\"#L152\">152</a></th><td></td></tr><tr><th id=\"L153\"><a href=\"#L153\">153</a></th><td>\u00a0 \u00a0 __call__ <span class=\"o\">=</span>\u00a0isOrExtends</td></tr><tr><th id=\"L154\"><a href=\"#L154\">154</a></th><td></td></tr><tr><th id=\"L155\"><a href=\"#L155\">155</a></th><td>SpecificationBase <span class=\"o\">=</span>\u00a0SpecificationBasePy</td></tr><tr><th id=\"L156\"><a href=\"#L156\">156</a></th><td></td></tr><tr><th id=\"L157\"><a href=\"#L157\">157</a></th><td>_marker <span class=\"o\">=</span>\u00a0<span class=\"nb\">object</span><span class=\"p\">()</span></td></tr><tr><th id=\"L158\"><a href=\"#L158\">158</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">InterfaceBasePy</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span></td></tr><tr><th id=\"L159\"><a href=\"#L159\">159</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Base class that wants to be replaced with a C base :)</span></td></tr><tr><th id=\"L160\"><a href=\"#L160\">160</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L161\"><a href=\"#L161\">161</a></th><td></td></tr><tr><th id=\"L162\"><a href=\"#L162\">162</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0obj<span class=\"p\">,</span>\u00a0alternate<span class=\"o\">=</span>_marker<span class=\"p\">):</span></td></tr><tr><th id=\"L163\"><a href=\"#L163\">163</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Adapt an object to the interface</span></td></tr><tr><th id=\"L164\"><a href=\"#L164\">164</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L165\"><a href=\"#L165\">165</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 conform <span class=\"o\">=</span>\u00a0<span class=\"nb\">getattr</span><span class=\"p\">(</span>obj<span class=\"p\">,</span>\u00a0<span class=\"s\">'__conform__'</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">)</span></td></tr><tr><th id=\"L166\"><a href=\"#L166\">166</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0conform <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L167\"><a href=\"#L167\">167</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 adapter <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_call_conform<span class=\"p\">(</span>conform<span class=\"p\">)</span></td></tr><tr><th id=\"L168\"><a href=\"#L168\">168</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0adapter <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L169\"><a href=\"#L169\">169</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0adapter</td></tr><tr><th id=\"L170\"><a href=\"#L170\">170</a></th><td></td></tr><tr><th id=\"L171\"><a href=\"#L171\">171</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 adapter <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__adapt__<span class=\"p\">(</span>obj<span class=\"p\">)</span></td></tr><tr><th id=\"L172\"><a href=\"#L172\">172</a></th><td></td></tr><tr><th id=\"L173\"><a href=\"#L173\">173</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0adapter <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L174\"><a href=\"#L174\">174</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0adapter</td></tr><tr><th id=\"L175\"><a href=\"#L175\">175</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0alternate <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0_marker<span class=\"p\">:</span></td></tr><tr><th id=\"L176\"><a href=\"#L176\">176</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0alternate</td></tr><tr><th id=\"L177\"><a href=\"#L177\">177</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L178\"><a href=\"#L178\">178</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">TypeError</span><span class=\"p\">(</span><span class=\"s\">\"Could not adapt\"</span><span class=\"p\">,</span>\u00a0obj<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L179\"><a href=\"#L179\">179</a></th><td></td></tr><tr><th id=\"L180\"><a href=\"#L180\">180</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__adapt__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0obj<span class=\"p\">):</span></td></tr><tr><th id=\"L181\"><a href=\"#L181\">181</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Adapt an object to the reciever</span></td></tr><tr><th id=\"L182\"><a href=\"#L182\">182</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L183\"><a href=\"#L183\">183</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>providedBy<span class=\"p\">(</span>obj<span class=\"p\">):</span></td></tr><tr><th id=\"L184\"><a href=\"#L184\">184</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0obj</td></tr><tr><th id=\"L185\"><a href=\"#L185\">185</a></th><td></td></tr><tr><th id=\"L186\"><a href=\"#L186\">186</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0hook <span class=\"ow\">in</span>\u00a0adapter_hooks<span class=\"p\">:</span></td></tr><tr><th id=\"L187\"><a href=\"#L187\">187</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 adapter <span class=\"o\">=</span>\u00a0hook<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0obj<span class=\"p\">)</span></td></tr><tr><th id=\"L188\"><a href=\"#L188\">188</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0adapter <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L189\"><a href=\"#L189\">189</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0adapter</td></tr><tr><th id=\"L190\"><a href=\"#L190\">190</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L191\"><a href=\"#L191\">191</a></th><td>InterfaceBase <span class=\"o\">=</span>\u00a0InterfaceBasePy</td></tr><tr><th id=\"L192\"><a href=\"#L192\">192</a></th><td></td></tr><tr><th id=\"L193\"><a href=\"#L193\">193</a></th><td>adapter_hooks <span class=\"o\">=</span>\u00a0<span class=\"p\">[]</span></td></tr><tr><th id=\"L194\"><a href=\"#L194\">194</a></th><td></td></tr><tr><th id=\"L195\"><a href=\"#L195\">195</a></th><td><span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L196\"><a href=\"#L196\">196</a></th><td>\u00a0 \u00a0 <span class=\"kn\">import</span>\u00a0<span class=\"nn\">_zope_interface_coptimizations</span></td></tr><tr><th id=\"L197\"><a href=\"#L197\">197</a></th><td><span class=\"k\">except</span>\u00a0<span class=\"ne\">ImportError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L198\"><a href=\"#L198\">198</a></th><td>\u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L199\"><a href=\"#L199\">199</a></th><td><span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L200\"><a href=\"#L200\">200</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">_zope_interface_coptimizations</span>\u00a0<span class=\"kn\">import</span>\u00a0SpecificationBase</td></tr><tr><th id=\"L201\"><a href=\"#L201\">201</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">_zope_interface_coptimizations</span>\u00a0<span class=\"kn\">import</span>\u00a0InterfaceBase<span class=\"p\">,</span>\u00a0adapter_hooks</td></tr><tr><th id=\"L202\"><a href=\"#L202\">202</a></th><td></td></tr><tr><th id=\"L203\"><a href=\"#L203\">203</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">Specification</span><span class=\"p\">(</span>SpecificationBase<span class=\"p\">):</span></td></tr><tr><th id=\"L204\"><a href=\"#L204\">204</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Specifications</span></td></tr><tr><th id=\"L205\"><a href=\"#L205\">205</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L206\"><a href=\"#L206\">206</a></th><td><span class=\"sd\">\u00a0 \u00a0 An interface specification is used to track interface declarations</span></td></tr><tr><th id=\"L207\"><a href=\"#L207\">207</a></th><td><span class=\"sd\">\u00a0 \u00a0 and component registrations.</span></td></tr><tr><th id=\"L208\"><a href=\"#L208\">208</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L209\"><a href=\"#L209\">209</a></th><td><span class=\"sd\">\u00a0 \u00a0 This class is a base class for both interfaces themselves and for</span></td></tr><tr><th id=\"L210\"><a href=\"#L210\">210</a></th><td><span class=\"sd\">\u00a0 \u00a0 interface specifications (declarations).</span></td></tr><tr><th id=\"L211\"><a href=\"#L211\">211</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L212\"><a href=\"#L212\">212</a></th><td><span class=\"sd\">\u00a0 \u00a0 Specifications are mutable.\u00a0 If you reassign their cases, their</span></td></tr><tr><th id=\"L213\"><a href=\"#L213\">213</a></th><td><span class=\"sd\">\u00a0 \u00a0 relations with other specifications are adjusted accordingly.</span></td></tr><tr><th id=\"L214\"><a href=\"#L214\">214</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L215\"><a href=\"#L215\">215</a></th><td><span class=\"sd\">\u00a0 \u00a0 For example:</span></td></tr><tr><th id=\"L216\"><a href=\"#L216\">216</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L217\"><a href=\"#L217\">217</a></th><td><span class=\"sd\">\u00a0 \u00a0 &gt;&gt;&gt; from zope.interface import Interface</span></td></tr><tr><th id=\"L218\"><a href=\"#L218\">218</a></th><td><span class=\"sd\">\u00a0 \u00a0 &gt;&gt;&gt; class I1(Interface):</span></td></tr><tr><th id=\"L219\"><a href=\"#L219\">219</a></th><td><span class=\"sd\">\u00a0 \u00a0 ...\u00a0 \u00a0 \u00a0pass</span></td></tr><tr><th id=\"L220\"><a href=\"#L220\">220</a></th><td><span class=\"sd\">\u00a0 \u00a0 &gt;&gt;&gt; class I2(I1):</span></td></tr><tr><th id=\"L221\"><a href=\"#L221\">221</a></th><td><span class=\"sd\">\u00a0 \u00a0 ...\u00a0 \u00a0 \u00a0pass</span></td></tr><tr><th id=\"L222\"><a href=\"#L222\">222</a></th><td><span class=\"sd\">\u00a0 \u00a0 &gt;&gt;&gt; class I3(I2):</span></td></tr><tr><th id=\"L223\"><a href=\"#L223\">223</a></th><td><span class=\"sd\">\u00a0 \u00a0 ...\u00a0 \u00a0 \u00a0pass</span></td></tr><tr><th id=\"L224\"><a href=\"#L224\">224</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L225\"><a href=\"#L225\">225</a></th><td><span class=\"sd\">\u00a0 \u00a0 &gt;&gt;&gt; [i.__name__ for i in I1.__bases__]</span></td></tr><tr><th id=\"L226\"><a href=\"#L226\">226</a></th><td><span class=\"sd\">\u00a0 \u00a0 ['Interface']</span></td></tr><tr><th id=\"L227\"><a href=\"#L227\">227</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L228\"><a href=\"#L228\">228</a></th><td><span class=\"sd\">\u00a0 \u00a0 &gt;&gt;&gt; [i.__name__ for i in I2.__bases__]</span></td></tr><tr><th id=\"L229\"><a href=\"#L229\">229</a></th><td><span class=\"sd\">\u00a0 \u00a0 ['I1']</span></td></tr><tr><th id=\"L230\"><a href=\"#L230\">230</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L231\"><a href=\"#L231\">231</a></th><td><span class=\"sd\">\u00a0 \u00a0 &gt;&gt;&gt; I3.extends(I1)</span></td></tr><tr><th id=\"L232\"><a href=\"#L232\">232</a></th><td><span class=\"sd\">\u00a0 \u00a0 1</span></td></tr><tr><th id=\"L233\"><a href=\"#L233\">233</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L234\"><a href=\"#L234\">234</a></th><td><span class=\"sd\">\u00a0 \u00a0 &gt;&gt;&gt; I2.__bases__ = (Interface, )</span></td></tr><tr><th id=\"L235\"><a href=\"#L235\">235</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L236\"><a href=\"#L236\">236</a></th><td><span class=\"sd\">\u00a0 \u00a0 &gt;&gt;&gt; [i.__name__ for i in I2.__bases__]</span></td></tr><tr><th id=\"L237\"><a href=\"#L237\">237</a></th><td><span class=\"sd\">\u00a0 \u00a0 ['Interface']</span></td></tr><tr><th id=\"L238\"><a href=\"#L238\">238</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L239\"><a href=\"#L239\">239</a></th><td><span class=\"sd\">\u00a0 \u00a0 &gt;&gt;&gt; I3.extends(I1)</span></td></tr><tr><th id=\"L240\"><a href=\"#L240\">240</a></th><td><span class=\"sd\">\u00a0 \u00a0 0</span></td></tr><tr><th id=\"L241\"><a href=\"#L241\">241</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L242\"><a href=\"#L242\">242</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L243\"><a href=\"#L243\">243</a></th><td></td></tr><tr><th id=\"L244\"><a href=\"#L244\">244</a></th><td>\u00a0 \u00a0 <span class=\"c\"># Copy some base class methods for speed</span></td></tr><tr><th id=\"L245\"><a href=\"#L245\">245</a></th><td>\u00a0 \u00a0 isOrExtends <span class=\"o\">=</span>\u00a0SpecificationBase<span class=\"o\">.</span>isOrExtends</td></tr><tr><th id=\"L246\"><a href=\"#L246\">246</a></th><td>\u00a0 \u00a0 providedBy <span class=\"o\">=</span>\u00a0SpecificationBase<span class=\"o\">.</span>providedBy</td></tr><tr><th id=\"L247\"><a href=\"#L247\">247</a></th><td></td></tr><tr><th id=\"L248\"><a href=\"#L248\">248</a></th><td>\u00a0 \u00a0 <span class=\"c\">#########################################################################</span></td></tr><tr><th id=\"L249\"><a href=\"#L249\">249</a></th><td>\u00a0 \u00a0 <span class=\"c\"># BBB 2004-07-13: Backward compatabilty.\u00a0 These methods have been</span></td></tr><tr><th id=\"L250\"><a href=\"#L250\">250</a></th><td>\u00a0 \u00a0 <span class=\"c\"># deprecated in favour of providedBy and implementedBy.</span></td></tr><tr><th id=\"L251\"><a href=\"#L251\">251</a></th><td></td></tr><tr><th id=\"L252\"><a href=\"#L252\">252</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">isImplementedByInstancesOf</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0cls<span class=\"p\">):</span></td></tr><tr><th id=\"L253\"><a href=\"#L253\">253</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 warnings<span class=\"o\">.</span>warn<span class=\"p\">(</span></td></tr><tr><th id=\"L254\"><a href=\"#L254\">254</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">\"isImplementedByInstancesOf has been renamed to implementedBy\"</span><span class=\"p\">,</span></td></tr><tr><th id=\"L255\"><a href=\"#L255\">255</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"ne\">DeprecationWarning</span><span class=\"p\">,</span>\u00a0stacklevel<span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span></td></tr><tr><th id=\"L256\"><a href=\"#L256\">256</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"p\">)</span></td></tr><tr><th id=\"L257\"><a href=\"#L257\">257</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>implementedBy<span class=\"p\">(</span>cls<span class=\"p\">)</span></td></tr><tr><th id=\"L258\"><a href=\"#L258\">258</a></th><td></td></tr><tr><th id=\"L259\"><a href=\"#L259\">259</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">isImplementedBy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0ob<span class=\"p\">):</span></td></tr><tr><th id=\"L260\"><a href=\"#L260\">260</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 warnings<span class=\"o\">.</span>warn<span class=\"p\">(</span></td></tr><tr><th id=\"L261\"><a href=\"#L261\">261</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">\"isImplementedBy has been renamed to providedBy\"</span><span class=\"p\">,</span></td></tr><tr><th id=\"L262\"><a href=\"#L262\">262</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"ne\">DeprecationWarning</span><span class=\"p\">,</span>\u00a0stacklevel<span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span></td></tr><tr><th id=\"L263\"><a href=\"#L263\">263</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"p\">)</span></td></tr><tr><th id=\"L264\"><a href=\"#L264\">264</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>providedBy<span class=\"p\">(</span>ob<span class=\"p\">)</span></td></tr><tr><th id=\"L265\"><a href=\"#L265\">265</a></th><td>\u00a0 \u00a0 <span class=\"c\">#</span></td></tr><tr><th id=\"L266\"><a href=\"#L266\">266</a></th><td>\u00a0 \u00a0 <span class=\"c\">#########################################################################</span></td></tr><tr><th id=\"L267\"><a href=\"#L267\">267</a></th><td></td></tr><tr><th id=\"L268\"><a href=\"#L268\">268</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0bases<span class=\"o\">=</span><span class=\"p\">()):</span></td></tr><tr><th id=\"L269\"><a href=\"#L269\">269</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_implied <span class=\"o\">=</span>\u00a0<span class=\"p\">{}</span></td></tr><tr><th id=\"L270\"><a href=\"#L270\">270</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>dependents <span class=\"o\">=</span>\u00a0weakref<span class=\"o\">.</span>WeakKeyDictionary<span class=\"p\">()</span></td></tr><tr><th id=\"L271\"><a href=\"#L271\">271</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>__bases__ <span class=\"o\">=</span>\u00a0<span class=\"nb\">tuple</span><span class=\"p\">(</span>bases<span class=\"p\">)</span></td></tr><tr><th id=\"L272\"><a href=\"#L272\">272</a></th><td></td></tr><tr><th id=\"L273\"><a href=\"#L273\">273</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">subscribe</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0dependent<span class=\"p\">):</span></td></tr><tr><th id=\"L274\"><a href=\"#L274\">274</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>dependents<span class=\"p\">[</span>dependent<span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>dependents<span class=\"o\">.</span>get<span class=\"p\">(</span>dependent<span class=\"p\">,</span>\u00a0<span class=\"mi\">0</span><span class=\"p\">)</span>\u00a0<span class=\"o\">+</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L275\"><a href=\"#L275\">275</a></th><td></td></tr><tr><th id=\"L276\"><a href=\"#L276\">276</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">unsubscribe</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0dependent<span class=\"p\">):</span></td></tr><tr><th id=\"L277\"><a href=\"#L277\">277</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 n <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>dependents<span class=\"o\">.</span>get<span class=\"p\">(</span>dependent<span class=\"p\">,</span>\u00a0<span class=\"mi\">0</span><span class=\"p\">)</span>\u00a0<span class=\"o\">-</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L278\"><a href=\"#L278\">278</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0n<span class=\"p\">:</span></td></tr><tr><th id=\"L279\"><a href=\"#L279\">279</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>dependents<span class=\"p\">[</span>dependent<span class=\"p\">]</span></td></tr><tr><th id=\"L280\"><a href=\"#L280\">280</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0n <span class=\"o\">&gt;</span>\u00a0<span class=\"mi\">0</span><span class=\"p\">:</span></td></tr><tr><th id=\"L281\"><a href=\"#L281\">281</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>dependents<span class=\"p\">[</span>dependent<span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0n</td></tr><tr><th id=\"L282\"><a href=\"#L282\">282</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L283\"><a href=\"#L283\">283</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">KeyError</span><span class=\"p\">(</span>dependent<span class=\"p\">)</span></td></tr><tr><th id=\"L284\"><a href=\"#L284\">284</a></th><td></td></tr><tr><th id=\"L285\"><a href=\"#L285\">285</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__setBases</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0bases<span class=\"p\">):</span></td></tr><tr><th id=\"L286\"><a href=\"#L286\">286</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Register ourselves as a dependent of our old bases</span></td></tr><tr><th id=\"L287\"><a href=\"#L287\">287</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0b <span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__bases__<span class=\"p\">:</span></td></tr><tr><th id=\"L288\"><a href=\"#L288\">288</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 b<span class=\"o\">.</span>unsubscribe<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L289\"><a href=\"#L289\">289</a></th><td></td></tr><tr><th id=\"L290\"><a href=\"#L290\">290</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Register ourselves as a dependent of our bases</span></td></tr><tr><th id=\"L291\"><a href=\"#L291\">291</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>__dict__<span class=\"p\">[</span><span class=\"s\">'__bases__'</span><span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0bases</td></tr><tr><th id=\"L292\"><a href=\"#L292\">292</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0b <span class=\"ow\">in</span>\u00a0bases<span class=\"p\">:</span></td></tr><tr><th id=\"L293\"><a href=\"#L293\">293</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 b<span class=\"o\">.</span>subscribe<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L294\"><a href=\"#L294\">294</a></th><td></td></tr><tr><th id=\"L295\"><a href=\"#L295\">295</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>changed<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L296\"><a href=\"#L296\">296</a></th><td></td></tr><tr><th id=\"L297\"><a href=\"#L297\">297</a></th><td>\u00a0 \u00a0 __bases__ <span class=\"o\">=</span>\u00a0<span class=\"nb\">property</span><span class=\"p\">(</span></td></tr><tr><th id=\"L298\"><a href=\"#L298\">298</a></th><td></td></tr><tr><th id=\"L299\"><a href=\"#L299\">299</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">lambda</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">:</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__dict__<span class=\"o\">.</span>get<span class=\"p\">(</span><span class=\"s\">'__bases__'</span><span class=\"p\">,</span>\u00a0<span class=\"p\">()),</span></td></tr><tr><th id=\"L300\"><a href=\"#L300\">300</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 __setBases<span class=\"p\">,</span></td></tr><tr><th id=\"L301\"><a href=\"#L301\">301</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"p\">)</span></td></tr><tr><th id=\"L302\"><a href=\"#L302\">302</a></th><td></td></tr><tr><th id=\"L303\"><a href=\"#L303\">303</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">changed</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0originally_changed<span class=\"p\">):</span></td></tr><tr><th id=\"L304\"><a href=\"#L304\">304</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"We, or something we depend on, have changed</span></td></tr><tr><th id=\"L305\"><a href=\"#L305\">305</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L306\"><a href=\"#L306\">306</a></th><td></td></tr><tr><th id=\"L307\"><a href=\"#L307\">307</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 implied <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_implied</td></tr><tr><th id=\"L308\"><a href=\"#L308\">308</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 implied<span class=\"o\">.</span>clear<span class=\"p\">()</span></td></tr><tr><th id=\"L309\"><a href=\"#L309\">309</a></th><td></td></tr><tr><th id=\"L310\"><a href=\"#L310\">310</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 ancestors <span class=\"o\">=</span>\u00a0ro<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L311\"><a href=\"#L311\">311</a></th><td></td></tr><tr><th id=\"L312\"><a href=\"#L312\">312</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L313\"><a href=\"#L313\">313</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0Interface <span class=\"ow\">not</span>\u00a0<span class=\"ow\">in</span>\u00a0ancestors<span class=\"p\">:</span></td></tr><tr><th id=\"L314\"><a href=\"#L314\">314</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ancestors<span class=\"o\">.</span>append<span class=\"p\">(</span>Interface<span class=\"p\">)</span></td></tr><tr><th id=\"L315\"><a href=\"#L315\">315</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">NameError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L316\"><a href=\"#L316\">316</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span>\u00a0<span class=\"c\"># defining Interface itself</span></td></tr><tr><th id=\"L317\"><a href=\"#L317\">317</a></th><td></td></tr><tr><th id=\"L318\"><a href=\"#L318\">318</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>__sro__ <span class=\"o\">=</span>\u00a0<span class=\"nb\">tuple</span><span class=\"p\">(</span>ancestors<span class=\"p\">)</span></td></tr><tr><th id=\"L319\"><a href=\"#L319\">319</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>__iro__ <span class=\"o\">=</span>\u00a0<span class=\"nb\">tuple</span><span class=\"p\">([</span>ancestor <span class=\"k\">for</span>\u00a0ancestor <span class=\"ow\">in</span>\u00a0ancestors</td></tr><tr><th id=\"L320\"><a href=\"#L320\">320</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">isinstance</span><span class=\"p\">(</span>ancestor<span class=\"p\">,</span>\u00a0InterfaceClass<span class=\"p\">)</span></td></tr><tr><th id=\"L321\"><a href=\"#L321\">321</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"p\">])</span></td></tr><tr><th id=\"L322\"><a href=\"#L322\">322</a></th><td></td></tr><tr><th id=\"L323\"><a href=\"#L323\">323</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0ancestor <span class=\"ow\">in</span>\u00a0ancestors<span class=\"p\">:</span></td></tr><tr><th id=\"L324\"><a href=\"#L324\">324</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># We directly imply our ancestors:</span></td></tr><tr><th id=\"L325\"><a href=\"#L325\">325</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 implied<span class=\"p\">[</span>ancestor<span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0<span class=\"p\">()</span></td></tr><tr><th id=\"L326\"><a href=\"#L326\">326</a></th><td></td></tr><tr><th id=\"L327\"><a href=\"#L327\">327</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Now, advise our dependents of change:</span></td></tr><tr><th id=\"L328\"><a href=\"#L328\">328</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0dependent <span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>dependents<span class=\"o\">.</span>keys<span class=\"p\">():</span></td></tr><tr><th id=\"L329\"><a href=\"#L329\">329</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 dependent<span class=\"o\">.</span>changed<span class=\"p\">(</span>originally_changed<span class=\"p\">)</span></td></tr><tr><th id=\"L330\"><a href=\"#L330\">330</a></th><td></td></tr><tr><th id=\"L331\"><a href=\"#L331\">331</a></th><td></td></tr><tr><th id=\"L332\"><a href=\"#L332\">332</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">interfaces</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L333\"><a href=\"#L333\">333</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Return an iterator for the interfaces in the specification</span></td></tr><tr><th id=\"L334\"><a href=\"#L334\">334</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L335\"><a href=\"#L335\">335</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 for example::</span></td></tr><tr><th id=\"L336\"><a href=\"#L336\">336</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L337\"><a href=\"#L337\">337</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; from zope.interface import Interface</span></td></tr><tr><th id=\"L338\"><a href=\"#L338\">338</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; class I1(Interface): pass</span></td></tr><tr><th id=\"L339\"><a href=\"#L339\">339</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ...</span></td></tr><tr><th id=\"L340\"><a href=\"#L340\">340</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; class I2(I1): pass</span></td></tr><tr><th id=\"L341\"><a href=\"#L341\">341</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ...</span></td></tr><tr><th id=\"L342\"><a href=\"#L342\">342</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; class I3(Interface): pass</span></td></tr><tr><th id=\"L343\"><a href=\"#L343\">343</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ...</span></td></tr><tr><th id=\"L344\"><a href=\"#L344\">344</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; class I4(I3): pass</span></td></tr><tr><th id=\"L345\"><a href=\"#L345\">345</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ...</span></td></tr><tr><th id=\"L346\"><a href=\"#L346\">346</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; spec = Specification((I2, I3))</span></td></tr><tr><th id=\"L347\"><a href=\"#L347\">347</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; spec = Specification((I4, spec))</span></td></tr><tr><th id=\"L348\"><a href=\"#L348\">348</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; i = spec.interfaces()</span></td></tr><tr><th id=\"L349\"><a href=\"#L349\">349</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; i.next().getName()</span></td></tr><tr><th id=\"L350\"><a href=\"#L350\">350</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'I4'</span></td></tr><tr><th id=\"L351\"><a href=\"#L351\">351</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; i.next().getName()</span></td></tr><tr><th id=\"L352\"><a href=\"#L352\">352</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'I2'</span></td></tr><tr><th id=\"L353\"><a href=\"#L353\">353</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; i.next().getName()</span></td></tr><tr><th id=\"L354\"><a href=\"#L354\">354</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'I3'</span></td></tr><tr><th id=\"L355\"><a href=\"#L355\">355</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; list(i)</span></td></tr><tr><th id=\"L356\"><a href=\"#L356\">356</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 []</span></td></tr><tr><th id=\"L357\"><a href=\"#L357\">357</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L358\"><a href=\"#L358\">358</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 seen <span class=\"o\">=</span>\u00a0<span class=\"p\">{}</span></td></tr><tr><th id=\"L359\"><a href=\"#L359\">359</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0base <span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__bases__<span class=\"p\">:</span></td></tr><tr><th id=\"L360\"><a href=\"#L360\">360</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0interface <span class=\"ow\">in</span>\u00a0base<span class=\"o\">.</span>interfaces<span class=\"p\">():</span></td></tr><tr><th id=\"L361\"><a href=\"#L361\">361</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0interface <span class=\"ow\">not</span>\u00a0<span class=\"ow\">in</span>\u00a0seen<span class=\"p\">:</span></td></tr><tr><th id=\"L362\"><a href=\"#L362\">362</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 seen<span class=\"p\">[</span>interface<span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L363\"><a href=\"#L363\">363</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">yield</span>\u00a0interface</td></tr><tr><th id=\"L364\"><a href=\"#L364\">364</a></th><td></td></tr><tr><th id=\"L365\"><a href=\"#L365\">365</a></th><td></td></tr><tr><th id=\"L366\"><a href=\"#L366\">366</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">extends</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0interface<span class=\"p\">,</span>\u00a0strict<span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">):</span></td></tr><tr><th id=\"L367\"><a href=\"#L367\">367</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Does the specification extend the given interface?</span></td></tr><tr><th id=\"L368\"><a href=\"#L368\">368</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L369\"><a href=\"#L369\">369</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Test whether an interface in the specification extends the</span></td></tr><tr><th id=\"L370\"><a href=\"#L370\">370</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 given interface</span></td></tr><tr><th id=\"L371\"><a href=\"#L371\">371</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L372\"><a href=\"#L372\">372</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Examples::</span></td></tr><tr><th id=\"L373\"><a href=\"#L373\">373</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L374\"><a href=\"#L374\">374</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; from zope.interface import Interface</span></td></tr><tr><th id=\"L375\"><a href=\"#L375\">375</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; from zope.interface.declarations import Declaration</span></td></tr><tr><th id=\"L376\"><a href=\"#L376\">376</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; class I1(Interface): pass</span></td></tr><tr><th id=\"L377\"><a href=\"#L377\">377</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ...</span></td></tr><tr><th id=\"L378\"><a href=\"#L378\">378</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; class I2(I1): pass</span></td></tr><tr><th id=\"L379\"><a href=\"#L379\">379</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ...</span></td></tr><tr><th id=\"L380\"><a href=\"#L380\">380</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; class I3(Interface): pass</span></td></tr><tr><th id=\"L381\"><a href=\"#L381\">381</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ...</span></td></tr><tr><th id=\"L382\"><a href=\"#L382\">382</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; class I4(I3): pass</span></td></tr><tr><th id=\"L383\"><a href=\"#L383\">383</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ...</span></td></tr><tr><th id=\"L384\"><a href=\"#L384\">384</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; spec = Declaration()</span></td></tr><tr><th id=\"L385\"><a href=\"#L385\">385</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; int(spec.extends(Interface))</span></td></tr><tr><th id=\"L386\"><a href=\"#L386\">386</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1</span></td></tr><tr><th id=\"L387\"><a href=\"#L387\">387</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; spec = Declaration(I2)</span></td></tr><tr><th id=\"L388\"><a href=\"#L388\">388</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; int(spec.extends(Interface))</span></td></tr><tr><th id=\"L389\"><a href=\"#L389\">389</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1</span></td></tr><tr><th id=\"L390\"><a href=\"#L390\">390</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; int(spec.extends(I1))</span></td></tr><tr><th id=\"L391\"><a href=\"#L391\">391</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1</span></td></tr><tr><th id=\"L392\"><a href=\"#L392\">392</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; int(spec.extends(I2))</span></td></tr><tr><th id=\"L393\"><a href=\"#L393\">393</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1</span></td></tr><tr><th id=\"L394\"><a href=\"#L394\">394</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; int(spec.extends(I3))</span></td></tr><tr><th id=\"L395\"><a href=\"#L395\">395</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0</span></td></tr><tr><th id=\"L396\"><a href=\"#L396\">396</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; int(spec.extends(I4))</span></td></tr><tr><th id=\"L397\"><a href=\"#L397\">397</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0</span></td></tr><tr><th id=\"L398\"><a href=\"#L398\">398</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; I2.extends(I2)</span></td></tr><tr><th id=\"L399\"><a href=\"#L399\">399</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0</span></td></tr><tr><th id=\"L400\"><a href=\"#L400\">400</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; I2.extends(I2, False)</span></td></tr><tr><th id=\"L401\"><a href=\"#L401\">401</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1</span></td></tr><tr><th id=\"L402\"><a href=\"#L402\">402</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; I2.extends(I2, strict=False)</span></td></tr><tr><th id=\"L403\"><a href=\"#L403\">403</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1</span></td></tr><tr><th id=\"L404\"><a href=\"#L404\">404</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L405\"><a href=\"#L405\">405</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L406\"><a href=\"#L406\">406</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"p\">((</span>interface <span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_implied<span class=\"p\">)</span></td></tr><tr><th id=\"L407\"><a href=\"#L407\">407</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"ow\">and</span></td></tr><tr><th id=\"L408\"><a href=\"#L408\">408</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"p\">((</span><span class=\"ow\">not</span>\u00a0strict<span class=\"p\">)</span>\u00a0<span class=\"ow\">or</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">self</span>\u00a0<span class=\"o\">!=</span>\u00a0interface<span class=\"p\">))</span></td></tr><tr><th id=\"L409\"><a href=\"#L409\">409</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"p\">)</span></td></tr><tr><th id=\"L410\"><a href=\"#L410\">410</a></th><td></td></tr><tr><th id=\"L411\"><a href=\"#L411\">411</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">weakref</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0callback<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L412\"><a href=\"#L412\">412</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0weakref<span class=\"o\">.</span>ref<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0callback<span class=\"p\">)</span></td></tr><tr><th id=\"L413\"><a href=\"#L413\">413</a></th><td></td></tr><tr><th id=\"L414\"><a href=\"#L414\">414</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0name<span class=\"p\">,</span>\u00a0default<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L415\"><a href=\"#L415\">415</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Query for an attribute description</span></td></tr><tr><th id=\"L416\"><a href=\"#L416\">416</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L417\"><a href=\"#L417\">417</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L418\"><a href=\"#L418\">418</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 attrs <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_v_attrs</td></tr><tr><th id=\"L419\"><a href=\"#L419\">419</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">AttributeError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L420\"><a href=\"#L420\">420</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 attrs <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_v_attrs <span class=\"o\">=</span>\u00a0<span class=\"p\">{}</span></td></tr><tr><th id=\"L421\"><a href=\"#L421\">421</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 attr <span class=\"o\">=</span>\u00a0attrs<span class=\"o\">.</span>get<span class=\"p\">(</span>name<span class=\"p\">)</span></td></tr><tr><th id=\"L422\"><a href=\"#L422\">422</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0attr <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L423\"><a href=\"#L423\">423</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0iface <span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__iro__<span class=\"p\">:</span></td></tr><tr><th id=\"L424\"><a href=\"#L424\">424</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 attr <span class=\"o\">=</span>\u00a0iface<span class=\"o\">.</span>direct<span class=\"p\">(</span>name<span class=\"p\">)</span></td></tr><tr><th id=\"L425\"><a href=\"#L425\">425</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0attr <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L426\"><a href=\"#L426\">426</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 attrs<span class=\"p\">[</span>name<span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0attr</td></tr><tr><th id=\"L427\"><a href=\"#L427\">427</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">break</span></td></tr><tr><th id=\"L428\"><a href=\"#L428\">428</a></th><td></td></tr><tr><th id=\"L429\"><a href=\"#L429\">429</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0attr <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L430\"><a href=\"#L430\">430</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0default</td></tr><tr><th id=\"L431\"><a href=\"#L431\">431</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L432\"><a href=\"#L432\">432</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0attr</td></tr><tr><th id=\"L433\"><a href=\"#L433\">433</a></th><td></td></tr><tr><th id=\"L434\"><a href=\"#L434\">434</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">InterfaceClass</span><span class=\"p\">(</span>Element<span class=\"p\">,</span>\u00a0InterfaceBase<span class=\"p\">,</span>\u00a0Specification<span class=\"p\">):</span></td></tr><tr><th id=\"L435\"><a href=\"#L435\">435</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Prototype (scarecrow) Interfaces Implementation.\"\"\"</span></td></tr><tr><th id=\"L436\"><a href=\"#L436\">436</a></th><td></td></tr><tr><th id=\"L437\"><a href=\"#L437\">437</a></th><td>\u00a0 \u00a0 <span class=\"c\"># We can't say this yet because we don't have enough</span></td></tr><tr><th id=\"L438\"><a href=\"#L438\">438</a></th><td>\u00a0 \u00a0 <span class=\"c\"># infrastructure in place.</span></td></tr><tr><th id=\"L439\"><a href=\"#L439\">439</a></th><td>\u00a0 \u00a0 <span class=\"c\">#</span></td></tr><tr><th id=\"L440\"><a href=\"#L440\">440</a></th><td>\u00a0 \u00a0 <span class=\"c\">#implements(IInterface)</span></td></tr><tr><th id=\"L441\"><a href=\"#L441\">441</a></th><td></td></tr><tr><th id=\"L442\"><a href=\"#L442\">442</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0name<span class=\"p\">,</span>\u00a0bases<span class=\"o\">=</span><span class=\"p\">(),</span>\u00a0attrs<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\u00a0__doc__<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span></td></tr><tr><th id=\"L443\"><a href=\"#L443\">443</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0__module__<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L444\"><a href=\"#L444\">444</a></th><td></td></tr><tr><th id=\"L445\"><a href=\"#L445\">445</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0attrs <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L446\"><a href=\"#L446\">446</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 attrs <span class=\"o\">=</span>\u00a0<span class=\"p\">{}</span></td></tr><tr><th id=\"L447\"><a href=\"#L447\">447</a></th><td></td></tr><tr><th id=\"L448\"><a href=\"#L448\">448</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0__module__ <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L449\"><a href=\"#L449\">449</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 __module__ <span class=\"o\">=</span>\u00a0attrs<span class=\"o\">.</span>get<span class=\"p\">(</span><span class=\"s\">'__module__'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L450\"><a href=\"#L450\">450</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">isinstance</span><span class=\"p\">(</span>__module__<span class=\"p\">,</span>\u00a0<span class=\"nb\">str</span><span class=\"p\">):</span></td></tr><tr><th id=\"L451\"><a href=\"#L451\">451</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0attrs<span class=\"p\">[</span><span class=\"s\">'__module__'</span><span class=\"p\">]</span></td></tr><tr><th id=\"L452\"><a href=\"#L452\">452</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L453\"><a href=\"#L453\">453</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L454\"><a href=\"#L454\">454</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Figure out what module defined the interface.</span></td></tr><tr><th id=\"L455\"><a href=\"#L455\">455</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># This is how cPython figures out the module of</span></td></tr><tr><th id=\"L456\"><a href=\"#L456\">456</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># a class, but of course it does it in C. :-/</span></td></tr><tr><th id=\"L457\"><a href=\"#L457\">457</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 __module__ <span class=\"o\">=</span>\u00a0sys<span class=\"o\">.</span>_getframe<span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span>f_globals<span class=\"p\">[</span><span class=\"s\">'__name__'</span><span class=\"p\">]</span></td></tr><tr><th id=\"L458\"><a href=\"#L458\">458</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"p\">(</span><span class=\"ne\">AttributeError</span><span class=\"p\">,</span>\u00a0<span class=\"ne\">KeyError</span><span class=\"p\">):</span></td></tr><tr><th id=\"L459\"><a href=\"#L459\">459</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L460\"><a href=\"#L460\">460</a></th><td></td></tr><tr><th id=\"L461\"><a href=\"#L461\">461</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>__module__ <span class=\"o\">=</span>\u00a0__module__</td></tr><tr><th id=\"L462\"><a href=\"#L462\">462</a></th><td></td></tr><tr><th id=\"L463\"><a href=\"#L463\">463</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 d <span class=\"o\">=</span>\u00a0attrs<span class=\"o\">.</span>get<span class=\"p\">(</span><span class=\"s\">'__doc__'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L464\"><a href=\"#L464\">464</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0d <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L465\"><a href=\"#L465\">465</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"nb\">isinstance</span><span class=\"p\">(</span>d<span class=\"p\">,</span>\u00a0Attribute<span class=\"p\">):</span></td></tr><tr><th id=\"L466\"><a href=\"#L466\">466</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0__doc__ <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L467\"><a href=\"#L467\">467</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 __doc__ <span class=\"o\">=</span>\u00a0d</td></tr><tr><th id=\"L468\"><a href=\"#L468\">468</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0attrs<span class=\"p\">[</span><span class=\"s\">'__doc__'</span><span class=\"p\">]</span></td></tr><tr><th id=\"L469\"><a href=\"#L469\">469</a></th><td></td></tr><tr><th id=\"L470\"><a href=\"#L470\">470</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0__doc__ <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L471\"><a href=\"#L471\">471</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 __doc__ <span class=\"o\">=</span>\u00a0<span class=\"s\">''</span></td></tr><tr><th id=\"L472\"><a href=\"#L472\">472</a></th><td></td></tr><tr><th id=\"L473\"><a href=\"#L473\">473</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 Element<span class=\"o\">.</span>__init__<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0name<span class=\"p\">,</span>\u00a0__doc__<span class=\"p\">)</span></td></tr><tr><th id=\"L474\"><a href=\"#L474\">474</a></th><td></td></tr><tr><th id=\"L475\"><a href=\"#L475\">475</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 tagged_data <span class=\"o\">=</span>\u00a0attrs<span class=\"o\">.</span>pop<span class=\"p\">(</span>TAGGED_DATA<span class=\"p\">,</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">)</span></td></tr><tr><th id=\"L476\"><a href=\"#L476\">476</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0tagged_data <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L477\"><a href=\"#L477\">477</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0key<span class=\"p\">,</span>\u00a0val <span class=\"ow\">in</span>\u00a0tagged_data<span class=\"o\">.</span>items<span class=\"p\">():</span></td></tr><tr><th id=\"L478\"><a href=\"#L478\">478</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>setTaggedValue<span class=\"p\">(</span>key<span class=\"p\">,</span>\u00a0val<span class=\"p\">)</span></td></tr><tr><th id=\"L479\"><a href=\"#L479\">479</a></th><td></td></tr><tr><th id=\"L480\"><a href=\"#L480\">480</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0base <span class=\"ow\">in</span>\u00a0bases<span class=\"p\">:</span></td></tr><tr><th id=\"L481\"><a href=\"#L481\">481</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"nb\">isinstance</span><span class=\"p\">(</span>base<span class=\"p\">,</span>\u00a0InterfaceClass<span class=\"p\">):</span></td></tr><tr><th id=\"L482\"><a href=\"#L482\">482</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">TypeError</span><span class=\"p\">(</span><span class=\"s\">'Expected base interfaces'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L483\"><a href=\"#L483\">483</a></th><td></td></tr><tr><th id=\"L484\"><a href=\"#L484\">484</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 Specification<span class=\"o\">.</span>__init__<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0bases<span class=\"p\">)</span></td></tr><tr><th id=\"L485\"><a href=\"#L485\">485</a></th><td></td></tr><tr><th id=\"L486\"><a href=\"#L486\">486</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Make sure that all recorded attributes (and methods) are of type</span></td></tr><tr><th id=\"L487\"><a href=\"#L487\">487</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># `Attribute` and `Method`</span></td></tr><tr><th id=\"L488\"><a href=\"#L488\">488</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0name<span class=\"p\">,</span>\u00a0attr <span class=\"ow\">in</span>\u00a0attrs<span class=\"o\">.</span>items<span class=\"p\">():</span></td></tr><tr><th id=\"L489\"><a href=\"#L489\">489</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">isinstance</span><span class=\"p\">(</span>attr<span class=\"p\">,</span>\u00a0Attribute<span class=\"p\">):</span></td></tr><tr><th id=\"L490\"><a href=\"#L490\">490</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 attr<span class=\"o\">.</span>interface <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span></td></tr><tr><th id=\"L491\"><a href=\"#L491\">491</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0attr<span class=\"o\">.</span>__name__<span class=\"p\">:</span></td></tr><tr><th id=\"L492\"><a href=\"#L492\">492</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 attr<span class=\"o\">.</span>__name__ <span class=\"o\">=</span>\u00a0name</td></tr><tr><th id=\"L493\"><a href=\"#L493\">493</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0<span class=\"nb\">isinstance</span><span class=\"p\">(</span>attr<span class=\"p\">,</span>\u00a0FunctionType<span class=\"p\">):</span></td></tr><tr><th id=\"L494\"><a href=\"#L494\">494</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 attrs<span class=\"p\">[</span>name<span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0fromFunction<span class=\"p\">(</span>attr<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0name<span class=\"o\">=</span>name<span class=\"p\">)</span></td></tr><tr><th id=\"L495\"><a href=\"#L495\">495</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0attr <span class=\"ow\">is</span>\u00a0_decorator_non_return<span class=\"p\">:</span></td></tr><tr><th id=\"L496\"><a href=\"#L496\">496</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0attrs<span class=\"p\">[</span>name<span class=\"p\">]</span></td></tr><tr><th id=\"L497\"><a href=\"#L497\">497</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L498\"><a href=\"#L498\">498</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0InvalidInterface<span class=\"p\">(</span><span class=\"s\">\"Concrete attribute, \"</span>\u00a0<span class=\"o\">+</span>\u00a0name<span class=\"p\">)</span></td></tr><tr><th id=\"L499\"><a href=\"#L499\">499</a></th><td></td></tr><tr><th id=\"L500\"><a href=\"#L500\">500</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>__attrs <span class=\"o\">=</span>\u00a0attrs</td></tr><tr><th id=\"L501\"><a href=\"#L501\">501</a></th><td></td></tr><tr><th id=\"L502\"><a href=\"#L502\">502</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>__identifier__ <span class=\"o\">=</span>\u00a0<span class=\"s\">\"</span><span class=\"si\">%s</span><span class=\"s\">.</span><span class=\"si\">%s</span><span class=\"s\">\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>__module__<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__name__<span class=\"p\">)</span></td></tr><tr><th id=\"L503\"><a href=\"#L503\">503</a></th><td></td></tr><tr><th id=\"L504\"><a href=\"#L504\">504</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">interfaces</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L505\"><a href=\"#L505\">505</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Return an iterator for the interfaces in the specification</span></td></tr><tr><th id=\"L506\"><a href=\"#L506\">506</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L507\"><a href=\"#L507\">507</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 for example::</span></td></tr><tr><th id=\"L508\"><a href=\"#L508\">508</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L509\"><a href=\"#L509\">509</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; from zope.interface import Interface</span></td></tr><tr><th id=\"L510\"><a href=\"#L510\">510</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; class I1(Interface): pass</span></td></tr><tr><th id=\"L511\"><a href=\"#L511\">511</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ...</span></td></tr><tr><th id=\"L512\"><a href=\"#L512\">512</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt;</span></td></tr><tr><th id=\"L513\"><a href=\"#L513\">513</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; i = I1.interfaces()</span></td></tr><tr><th id=\"L514\"><a href=\"#L514\">514</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; i.next().getName()</span></td></tr><tr><th id=\"L515\"><a href=\"#L515\">515</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'I1'</span></td></tr><tr><th id=\"L516\"><a href=\"#L516\">516</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &gt;&gt;&gt; list(i)</span></td></tr><tr><th id=\"L517\"><a href=\"#L517\">517</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 []</span></td></tr><tr><th id=\"L518\"><a href=\"#L518\">518</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L519\"><a href=\"#L519\">519</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">yield</span>\u00a0<span class=\"bp\">self</span></td></tr><tr><th id=\"L520\"><a href=\"#L520\">520</a></th><td></td></tr><tr><th id=\"L521\"><a href=\"#L521\">521</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getBases</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L522\"><a href=\"#L522\">522</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__bases__</td></tr><tr><th id=\"L523\"><a href=\"#L523\">523</a></th><td></td></tr><tr><th id=\"L524\"><a href=\"#L524\">524</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">isEqualOrExtendedBy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0other<span class=\"p\">):</span></td></tr><tr><th id=\"L525\"><a href=\"#L525\">525</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Same interface or extends?\"\"\"</span></td></tr><tr><th id=\"L526\"><a href=\"#L526\">526</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span>\u00a0<span class=\"o\">==</span>\u00a0other <span class=\"ow\">or</span>\u00a0other<span class=\"o\">.</span>extends<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L527\"><a href=\"#L527\">527</a></th><td></td></tr><tr><th id=\"L528\"><a href=\"#L528\">528</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">names</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"nb\">all</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">):</span></td></tr><tr><th id=\"L529\"><a href=\"#L529\">529</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Return the attribute names defined by the interface.\"\"\"</span></td></tr><tr><th id=\"L530\"><a href=\"#L530\">530</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"nb\">all</span><span class=\"p\">:</span></td></tr><tr><th id=\"L531\"><a href=\"#L531\">531</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__attrs<span class=\"o\">.</span>keys<span class=\"p\">()</span></td></tr><tr><th id=\"L532\"><a href=\"#L532\">532</a></th><td></td></tr><tr><th id=\"L533\"><a href=\"#L533\">533</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 r <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__attrs<span class=\"o\">.</span>copy<span class=\"p\">()</span></td></tr><tr><th id=\"L534\"><a href=\"#L534\">534</a></th><td></td></tr><tr><th id=\"L535\"><a href=\"#L535\">535</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0base <span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__bases__<span class=\"p\">:</span></td></tr><tr><th id=\"L536\"><a href=\"#L536\">536</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 r<span class=\"o\">.</span>update<span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"o\">.</span>fromkeys<span class=\"p\">(</span>base<span class=\"o\">.</span>names<span class=\"p\">(</span><span class=\"nb\">all</span><span class=\"p\">)))</span></td></tr><tr><th id=\"L537\"><a href=\"#L537\">537</a></th><td></td></tr><tr><th id=\"L538\"><a href=\"#L538\">538</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0r<span class=\"o\">.</span>keys<span class=\"p\">()</span></td></tr><tr><th id=\"L539\"><a href=\"#L539\">539</a></th><td></td></tr><tr><th id=\"L540\"><a href=\"#L540\">540</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__iter__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L541\"><a href=\"#L541\">541</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"nb\">iter</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>names<span class=\"p\">(</span><span class=\"nb\">all</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">))</span></td></tr><tr><th id=\"L542\"><a href=\"#L542\">542</a></th><td></td></tr><tr><th id=\"L543\"><a href=\"#L543\">543</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">namesAndDescriptions</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"nb\">all</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">):</span></td></tr><tr><th id=\"L544\"><a href=\"#L544\">544</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Return attribute names and descriptions defined by interface.\"\"\"</span></td></tr><tr><th id=\"L545\"><a href=\"#L545\">545</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"nb\">all</span><span class=\"p\">:</span></td></tr><tr><th id=\"L546\"><a href=\"#L546\">546</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__attrs<span class=\"o\">.</span>items<span class=\"p\">()</span></td></tr><tr><th id=\"L547\"><a href=\"#L547\">547</a></th><td></td></tr><tr><th id=\"L548\"><a href=\"#L548\">548</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 r <span class=\"o\">=</span>\u00a0<span class=\"p\">{}</span></td></tr><tr><th id=\"L549\"><a href=\"#L549\">549</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0base <span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__bases__<span class=\"p\">[::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]:</span></td></tr><tr><th id=\"L550\"><a href=\"#L550\">550</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 r<span class=\"o\">.</span>update<span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"p\">(</span>base<span class=\"o\">.</span>namesAndDescriptions<span class=\"p\">(</span><span class=\"nb\">all</span><span class=\"p\">)))</span></td></tr><tr><th id=\"L551\"><a href=\"#L551\">551</a></th><td></td></tr><tr><th id=\"L552\"><a href=\"#L552\">552</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 r<span class=\"o\">.</span>update<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>__attrs<span class=\"p\">)</span></td></tr><tr><th id=\"L553\"><a href=\"#L553\">553</a></th><td></td></tr><tr><th id=\"L554\"><a href=\"#L554\">554</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0r<span class=\"o\">.</span>items<span class=\"p\">()</span></td></tr><tr><th id=\"L555\"><a href=\"#L555\">555</a></th><td></td></tr><tr><th id=\"L556\"><a href=\"#L556\">556</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getDescriptionFor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0name<span class=\"p\">):</span></td></tr><tr><th id=\"L557\"><a href=\"#L557\">557</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Return the attribute description for the given name.\"\"\"</span></td></tr><tr><th id=\"L558\"><a href=\"#L558\">558</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 r <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>get<span class=\"p\">(</span>name<span class=\"p\">)</span></td></tr><tr><th id=\"L559\"><a href=\"#L559\">559</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0r <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L560\"><a href=\"#L560\">560</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0r</td></tr><tr><th id=\"L561\"><a href=\"#L561\">561</a></th><td></td></tr><tr><th id=\"L562\"><a href=\"#L562\">562</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">KeyError</span><span class=\"p\">(</span>name<span class=\"p\">)</span></td></tr><tr><th id=\"L563\"><a href=\"#L563\">563</a></th><td></td></tr><tr><th id=\"L564\"><a href=\"#L564\">564</a></th><td>\u00a0 \u00a0 __getitem__ <span class=\"o\">=</span>\u00a0getDescriptionFor</td></tr><tr><th id=\"L565\"><a href=\"#L565\">565</a></th><td></td></tr><tr><th id=\"L566\"><a href=\"#L566\">566</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__contains__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0name<span class=\"p\">):</span></td></tr><tr><th id=\"L567\"><a href=\"#L567\">567</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>get<span class=\"p\">(</span>name<span class=\"p\">)</span>\u00a0<span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L568\"><a href=\"#L568\">568</a></th><td></td></tr><tr><th id=\"L569\"><a href=\"#L569\">569</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">direct</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0name<span class=\"p\">):</span></td></tr><tr><th id=\"L570\"><a href=\"#L570\">570</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__attrs<span class=\"o\">.</span>get<span class=\"p\">(</span>name<span class=\"p\">)</span></td></tr><tr><th id=\"L571\"><a href=\"#L571\">571</a></th><td></td></tr><tr><th id=\"L572\"><a href=\"#L572\">572</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">queryDescriptionFor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0name<span class=\"p\">,</span>\u00a0default<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L573\"><a href=\"#L573\">573</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>get<span class=\"p\">(</span>name<span class=\"p\">,</span>\u00a0default<span class=\"p\">)</span></td></tr><tr><th id=\"L574\"><a href=\"#L574\">574</a></th><td></td></tr><tr><th id=\"L575\"><a href=\"#L575\">575</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">deferred</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L576\"><a href=\"#L576\">576</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Return a defered class corresponding to the interface.\"\"\"</span></td></tr><tr><th id=\"L577\"><a href=\"#L577\">577</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"_deferred\"</span><span class=\"p\">):</span>\u00a0<span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_deferred</td></tr><tr><th id=\"L578\"><a href=\"#L578\">578</a></th><td></td></tr><tr><th id=\"L579\"><a href=\"#L579\">579</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 klass<span class=\"o\">=</span><span class=\"p\">{}</span></td></tr><tr><th id=\"L580\"><a href=\"#L580\">580</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">exec</span>\u00a0<span class=\"s\">\"class </span><span class=\"si\">%s</span><span class=\"s\">: pass\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__name__ <span class=\"ow\">in</span>\u00a0klass</td></tr><tr><th id=\"L581\"><a href=\"#L581\">581</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 klass<span class=\"o\">=</span>klass<span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span>__name__<span class=\"p\">]</span></td></tr><tr><th id=\"L582\"><a href=\"#L582\">582</a></th><td></td></tr><tr><th id=\"L583\"><a href=\"#L583\">583</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>__d<span class=\"p\">(</span>klass<span class=\"o\">.</span>__dict__<span class=\"p\">)</span></td></tr><tr><th id=\"L584\"><a href=\"#L584\">584</a></th><td></td></tr><tr><th id=\"L585\"><a href=\"#L585\">585</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_deferred<span class=\"o\">=</span>klass</td></tr><tr><th id=\"L586\"><a href=\"#L586\">586</a></th><td></td></tr><tr><th id=\"L587\"><a href=\"#L587\">587</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0klass</td></tr><tr><th id=\"L588\"><a href=\"#L588\">588</a></th><td></td></tr><tr><th id=\"L589\"><a href=\"#L589\">589</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">validateInvariants</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0obj<span class=\"p\">,</span>\u00a0errors<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L590\"><a href=\"#L590\">590</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"validate object to defined invariants.\"\"\"</span></td></tr><tr><th id=\"L591\"><a href=\"#L591\">591</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0call <span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>queryTaggedValue<span class=\"p\">(</span><span class=\"s\">'invariants'</span><span class=\"p\">,</span>\u00a0<span class=\"p\">[]):</span></td></tr><tr><th id=\"L592\"><a href=\"#L592\">592</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L593\"><a href=\"#L593\">593</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 call<span class=\"p\">(</span>obj<span class=\"p\">)</span></td></tr><tr><th id=\"L594\"><a href=\"#L594\">594</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0Invalid<span class=\"p\">,</span>\u00a0e<span class=\"p\">:</span></td></tr><tr><th id=\"L595\"><a href=\"#L595\">595</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0errors <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L596\"><a href=\"#L596\">596</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span></td></tr><tr><th id=\"L597\"><a href=\"#L597\">597</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L598\"><a href=\"#L598\">598</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 errors<span class=\"o\">.</span>append<span class=\"p\">(</span>e<span class=\"p\">)</span></td></tr><tr><th id=\"L599\"><a href=\"#L599\">599</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0base <span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__bases__<span class=\"p\">:</span></td></tr><tr><th id=\"L600\"><a href=\"#L600\">600</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L601\"><a href=\"#L601\">601</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 base<span class=\"o\">.</span>validateInvariants<span class=\"p\">(</span>obj<span class=\"p\">,</span>\u00a0errors<span class=\"p\">)</span></td></tr><tr><th id=\"L602\"><a href=\"#L602\">602</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0Invalid<span class=\"p\">:</span></td></tr><tr><th id=\"L603\"><a href=\"#L603\">603</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0errors <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L604\"><a href=\"#L604\">604</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span></td></tr><tr><th id=\"L605\"><a href=\"#L605\">605</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0errors<span class=\"p\">:</span></td></tr><tr><th id=\"L606\"><a href=\"#L606\">606</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0Invalid<span class=\"p\">(</span>errors<span class=\"p\">)</span></td></tr><tr><th id=\"L607\"><a href=\"#L607\">607</a></th><td></td></tr><tr><th id=\"L608\"><a href=\"#L608\">608</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_getInterface</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0ob<span class=\"p\">,</span>\u00a0name<span class=\"p\">):</span></td></tr><tr><th id=\"L609\"><a href=\"#L609\">609</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Retrieve a named interface.\"\"\"</span></td></tr><tr><th id=\"L610\"><a href=\"#L610\">610</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L611\"><a href=\"#L611\">611</a></th><td></td></tr><tr><th id=\"L612\"><a href=\"#L612\">612</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__d</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"nb\">dict</span><span class=\"p\">):</span></td></tr><tr><th id=\"L613\"><a href=\"#L613\">613</a></th><td></td></tr><tr><th id=\"L614\"><a href=\"#L614\">614</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0k<span class=\"p\">,</span>\u00a0v <span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__attrs<span class=\"o\">.</span>items<span class=\"p\">():</span></td></tr><tr><th id=\"L615\"><a href=\"#L615\">615</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">isinstance</span><span class=\"p\">(</span>v<span class=\"p\">,</span>\u00a0Method<span class=\"p\">)</span>\u00a0<span class=\"ow\">and</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"p\">(</span>k <span class=\"ow\">in</span>\u00a0<span class=\"nb\">dict</span><span class=\"p\">):</span></td></tr><tr><th id=\"L616\"><a href=\"#L616\">616</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">dict</span><span class=\"p\">[</span>k<span class=\"p\">]</span><span class=\"o\">=</span>v</td></tr><tr><th id=\"L617\"><a href=\"#L617\">617</a></th><td></td></tr><tr><th id=\"L618\"><a href=\"#L618\">618</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0b <span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__bases__<span class=\"p\">:</span></td></tr><tr><th id=\"L619\"><a href=\"#L619\">619</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 b<span class=\"o\">.</span>__d<span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"p\">)</span></td></tr><tr><th id=\"L620\"><a href=\"#L620\">620</a></th><td></td></tr><tr><th id=\"L621\"><a href=\"#L621\">621</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L622\"><a href=\"#L622\">622</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L623\"><a href=\"#L623\">623</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_v_repr</td></tr><tr><th id=\"L624\"><a href=\"#L624\">624</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">AttributeError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L625\"><a href=\"#L625\">625</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 name <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__name__</td></tr><tr><th id=\"L626\"><a href=\"#L626\">626</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 m <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__module__</td></tr><tr><th id=\"L627\"><a href=\"#L627\">627</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0m<span class=\"p\">:</span></td></tr><tr><th id=\"L628\"><a href=\"#L628\">628</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 name <span class=\"o\">=</span>\u00a0<span class=\"s\">'</span><span class=\"si\">%s</span><span class=\"s\">.</span><span class=\"si\">%s</span><span class=\"s\">'</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span>m<span class=\"p\">,</span>\u00a0name<span class=\"p\">)</span></td></tr><tr><th id=\"L629\"><a href=\"#L629\">629</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 r <span class=\"o\">=</span>\u00a0<span class=\"s\">\"&lt;</span><span class=\"si\">%s</span><span class=\"s\">\u00a0</span><span class=\"si\">%s</span><span class=\"s\">&gt;\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>__class__<span class=\"o\">.</span>__name__<span class=\"p\">,</span>\u00a0name<span class=\"p\">)</span></td></tr><tr><th id=\"L630\"><a href=\"#L630\">630</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_v_repr <span class=\"o\">=</span>\u00a0r</td></tr><tr><th id=\"L631\"><a href=\"#L631\">631</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0r</td></tr><tr><th id=\"L632\"><a href=\"#L632\">632</a></th><td></td></tr><tr><th id=\"L633\"><a href=\"#L633\">633</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_call_conform</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0conform<span class=\"p\">):</span></td></tr><tr><th id=\"L634\"><a href=\"#L634\">634</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L635\"><a href=\"#L635\">635</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0conform<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L636\"><a href=\"#L636\">636</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">TypeError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L637\"><a href=\"#L637\">637</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># We got a TypeError. It might be an error raised by</span></td></tr><tr><th id=\"L638\"><a href=\"#L638\">638</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># the __conform__ implementation, or *we* may have</span></td></tr><tr><th id=\"L639\"><a href=\"#L639\">639</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># made the TypeError by calling an unbound method</span></td></tr><tr><th id=\"L640\"><a href=\"#L640\">640</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># (object is a class).\u00a0 In the later case, we behave</span></td></tr><tr><th id=\"L641\"><a href=\"#L641\">641</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># as though there is no __conform__ method. We can</span></td></tr><tr><th id=\"L642\"><a href=\"#L642\">642</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># detect this case by checking whether there is more</span></td></tr><tr><th id=\"L643\"><a href=\"#L643\">643</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># than one traceback object in the traceback chain:</span></td></tr><tr><th id=\"L644\"><a href=\"#L644\">644</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0sys<span class=\"o\">.</span>exc_info<span class=\"p\">()[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span>tb_next <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L645\"><a href=\"#L645\">645</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># There is more than one entry in the chain, so</span></td></tr><tr><th id=\"L646\"><a href=\"#L646\">646</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># reraise the error:</span></td></tr><tr><th id=\"L647\"><a href=\"#L647\">647</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span></td></tr><tr><th id=\"L648\"><a href=\"#L648\">648</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># This clever trick is from Phillip Eby</span></td></tr><tr><th id=\"L649\"><a href=\"#L649\">649</a></th><td></td></tr><tr><th id=\"L650\"><a href=\"#L650\">650</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L651\"><a href=\"#L651\">651</a></th><td></td></tr><tr><th id=\"L652\"><a href=\"#L652\">652</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__reduce__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L653\"><a href=\"#L653\">653</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__name__</td></tr><tr><th id=\"L654\"><a href=\"#L654\">654</a></th><td></td></tr><tr><th id=\"L655\"><a href=\"#L655\">655</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__cmp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0o1<span class=\"p\">,</span>\u00a0o2<span class=\"p\">):</span></td></tr><tr><th id=\"L656\"><a href=\"#L656\">656</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Yes, I did mean to name this __cmp, rather than __cmp__.</span></td></tr><tr><th id=\"L657\"><a href=\"#L657\">657</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># It is a private method used by __lt__ and __gt__.</span></td></tr><tr><th id=\"L658\"><a href=\"#L658\">658</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># I don't want to override __eq__ because I want the default</span></td></tr><tr><th id=\"L659\"><a href=\"#L659\">659</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># __eq__, which is really fast.</span></td></tr><tr><th id=\"L660\"><a href=\"#L660\">660</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Make interfaces sortable</span></td></tr><tr><th id=\"L661\"><a href=\"#L661\">661</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L662\"><a href=\"#L662\">662</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 TODO: It would ne nice if:</span></td></tr><tr><th id=\"L663\"><a href=\"#L663\">663</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L664\"><a href=\"#L664\">664</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0More specific interfaces should sort before less specific ones.</span></td></tr><tr><th id=\"L665\"><a href=\"#L665\">665</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Otherwise, sort on name and module.</span></td></tr><tr><th id=\"L666\"><a href=\"#L666\">666</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L667\"><a href=\"#L667\">667</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0But this is too complicated, and we're going to punt on it</span></td></tr><tr><th id=\"L668\"><a href=\"#L668\">668</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0for now.</span></td></tr><tr><th id=\"L669\"><a href=\"#L669\">669</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L670\"><a href=\"#L670\">670</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 For now, sort on interface and module name.</span></td></tr><tr><th id=\"L671\"><a href=\"#L671\">671</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L672\"><a href=\"#L672\">672</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 None is treated as a pseudo interface that implies the loosest</span></td></tr><tr><th id=\"L673\"><a href=\"#L673\">673</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 contact possible, no contract. For that reason, all interfaces</span></td></tr><tr><th id=\"L674\"><a href=\"#L674\">674</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 sort before None.</span></td></tr><tr><th id=\"L675\"><a href=\"#L675\">675</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L676\"><a href=\"#L676\">676</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L677\"><a href=\"#L677\">677</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0o1 <span class=\"o\">==</span>\u00a0o2<span class=\"p\">:</span></td></tr><tr><th id=\"L678\"><a href=\"#L678\">678</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L679\"><a href=\"#L679\">679</a></th><td></td></tr><tr><th id=\"L680\"><a href=\"#L680\">680</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0o1 <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L681\"><a href=\"#L681\">681</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L682\"><a href=\"#L682\">682</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0o2 <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L683\"><a href=\"#L683\">683</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"o\">-</span><span class=\"mi\">1</span></td></tr><tr><th id=\"L684\"><a href=\"#L684\">684</a></th><td></td></tr><tr><th id=\"L685\"><a href=\"#L685\">685</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 n1 <span class=\"o\">=</span>\u00a0<span class=\"p\">(</span><span class=\"nb\">getattr</span><span class=\"p\">(</span>o1<span class=\"p\">,</span>\u00a0<span class=\"s\">'__name__'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">''</span><span class=\"p\">),</span></td></tr><tr><th id=\"L686\"><a href=\"#L686\">686</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"nb\">getattr</span><span class=\"p\">(</span>o1<span class=\"p\">,</span>\u00a0 <span class=\"s\">'__module__'</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">),</span>\u00a0<span class=\"s\">'__name__'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">''</span><span class=\"p\">))</span></td></tr><tr><th id=\"L687\"><a href=\"#L687\">687</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 n2 <span class=\"o\">=</span>\u00a0<span class=\"p\">(</span><span class=\"nb\">getattr</span><span class=\"p\">(</span>o2<span class=\"p\">,</span>\u00a0<span class=\"s\">'__name__'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">''</span><span class=\"p\">),</span></td></tr><tr><th id=\"L688\"><a href=\"#L688\">688</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"nb\">getattr</span><span class=\"p\">(</span>o2<span class=\"p\">,</span>\u00a0 <span class=\"s\">'__module__'</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">),</span>\u00a0<span class=\"s\">'__name__'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">''</span><span class=\"p\">))</span></td></tr><tr><th id=\"L689\"><a href=\"#L689\">689</a></th><td></td></tr><tr><th id=\"L690\"><a href=\"#L690\">690</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"nb\">cmp</span><span class=\"p\">(</span>n1<span class=\"p\">,</span>\u00a0n2<span class=\"p\">)</span></td></tr><tr><th id=\"L691\"><a href=\"#L691\">691</a></th><td></td></tr><tr><th id=\"L692\"><a href=\"#L692\">692</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__lt__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0other<span class=\"p\">):</span></td></tr><tr><th id=\"L693\"><a href=\"#L693\">693</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 c <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__cmp<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0other<span class=\"p\">)</span></td></tr><tr><th id=\"L694\"><a href=\"#L694\">694</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\">#print '&lt;', self, other, c &lt; 0, c</span></td></tr><tr><th id=\"L695\"><a href=\"#L695\">695</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0c <span class=\"o\">&lt;</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L696\"><a href=\"#L696\">696</a></th><td></td></tr><tr><th id=\"L697\"><a href=\"#L697\">697</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__gt__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0other<span class=\"p\">):</span></td></tr><tr><th id=\"L698\"><a href=\"#L698\">698</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 c <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__cmp<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0other<span class=\"p\">)</span></td></tr><tr><th id=\"L699\"><a href=\"#L699\">699</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\">#print '&gt;', self, other, c &gt; 0, c</span></td></tr><tr><th id=\"L700\"><a href=\"#L700\">700</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0c <span class=\"o\">&gt;</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L701\"><a href=\"#L701\">701</a></th><td></td></tr><tr><th id=\"L702\"><a href=\"#L702\">702</a></th><td></td></tr><tr><th id=\"L703\"><a href=\"#L703\">703</a></th><td>Interface <span class=\"o\">=</span>\u00a0InterfaceClass<span class=\"p\">(</span><span class=\"s\">\"Interface\"</span><span class=\"p\">,</span>\u00a0__module__ <span class=\"o\">=</span>\u00a0<span class=\"s\">'zope.interface'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L704\"><a href=\"#L704\">704</a></th><td></td></tr><tr><th id=\"L705\"><a href=\"#L705\">705</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">Attribute</span><span class=\"p\">(</span>Element<span class=\"p\">):</span></td></tr><tr><th id=\"L706\"><a href=\"#L706\">706</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Attribute descriptions</span></td></tr><tr><th id=\"L707\"><a href=\"#L707\">707</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L708\"><a href=\"#L708\">708</a></th><td></td></tr><tr><th id=\"L709\"><a href=\"#L709\">709</a></th><td>\u00a0 \u00a0 <span class=\"c\"># We can't say this yet because we don't have enough</span></td></tr><tr><th id=\"L710\"><a href=\"#L710\">710</a></th><td>\u00a0 \u00a0 <span class=\"c\"># infrastructure in place.</span></td></tr><tr><th id=\"L711\"><a href=\"#L711\">711</a></th><td>\u00a0 \u00a0 <span class=\"c\">#</span></td></tr><tr><th id=\"L712\"><a href=\"#L712\">712</a></th><td>\u00a0 \u00a0 <span class=\"c\"># implements(IAttribute)</span></td></tr><tr><th id=\"L713\"><a href=\"#L713\">713</a></th><td></td></tr><tr><th id=\"L714\"><a href=\"#L714\">714</a></th><td>\u00a0 \u00a0 interface <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L715\"><a href=\"#L715\">715</a></th><td></td></tr><tr><th id=\"L716\"><a href=\"#L716\">716</a></th><td></td></tr><tr><th id=\"L717\"><a href=\"#L717\">717</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">Method</span><span class=\"p\">(</span>Attribute<span class=\"p\">):</span></td></tr><tr><th id=\"L718\"><a href=\"#L718\">718</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Method interfaces</span></td></tr><tr><th id=\"L719\"><a href=\"#L719\">719</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L720\"><a href=\"#L720\">720</a></th><td><span class=\"sd\">\u00a0 \u00a0 The idea here is that you have objects that describe methods.</span></td></tr><tr><th id=\"L721\"><a href=\"#L721\">721</a></th><td><span class=\"sd\">\u00a0 \u00a0 This provides an opportunity for rich meta-data.</span></td></tr><tr><th id=\"L722\"><a href=\"#L722\">722</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L723\"><a href=\"#L723\">723</a></th><td></td></tr><tr><th id=\"L724\"><a href=\"#L724\">724</a></th><td>\u00a0 \u00a0 <span class=\"c\"># We can't say this yet because we don't have enough</span></td></tr><tr><th id=\"L725\"><a href=\"#L725\">725</a></th><td>\u00a0 \u00a0 <span class=\"c\"># infrastructure in place.</span></td></tr><tr><th id=\"L726\"><a href=\"#L726\">726</a></th><td>\u00a0 \u00a0 <span class=\"c\">#</span></td></tr><tr><th id=\"L727\"><a href=\"#L727\">727</a></th><td>\u00a0 \u00a0 <span class=\"c\"># implements(IMethod)</span></td></tr><tr><th id=\"L728\"><a href=\"#L728\">728</a></th><td></td></tr><tr><th id=\"L729\"><a href=\"#L729\">729</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"o\">*</span>args<span class=\"p\">,</span>\u00a0<span class=\"o\">**</span>kw<span class=\"p\">):</span></td></tr><tr><th id=\"L730\"><a href=\"#L730\">730</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0BrokenImplementation<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>interface<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__name__<span class=\"p\">)</span></td></tr><tr><th id=\"L731\"><a href=\"#L731\">731</a></th><td></td></tr><tr><th id=\"L732\"><a href=\"#L732\">732</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getSignatureInfo</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L733\"><a href=\"#L733\">733</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"p\">{</span><span class=\"s\">'positional'</span><span class=\"p\">:</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>positional<span class=\"p\">,</span></td></tr><tr><th id=\"L734\"><a href=\"#L734\">734</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">'required'</span><span class=\"p\">:</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>required<span class=\"p\">,</span></td></tr><tr><th id=\"L735\"><a href=\"#L735\">735</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">'optional'</span><span class=\"p\">:</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>optional<span class=\"p\">,</span></td></tr><tr><th id=\"L736\"><a href=\"#L736\">736</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">'varargs'</span><span class=\"p\">:</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>varargs<span class=\"p\">,</span></td></tr><tr><th id=\"L737\"><a href=\"#L737\">737</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">'kwargs'</span><span class=\"p\">:</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>kwargs<span class=\"p\">,</span></td></tr><tr><th id=\"L738\"><a href=\"#L738\">738</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"p\">}</span></td></tr><tr><th id=\"L739\"><a href=\"#L739\">739</a></th><td></td></tr><tr><th id=\"L740\"><a href=\"#L740\">740</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getSignatureString</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L741\"><a href=\"#L741\">741</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 sig <span class=\"o\">=</span>\u00a0<span class=\"p\">[]</span></td></tr><tr><th id=\"L742\"><a href=\"#L742\">742</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0v <span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>positional<span class=\"p\">:</span></td></tr><tr><th id=\"L743\"><a href=\"#L743\">743</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 sig<span class=\"o\">.</span>append<span class=\"p\">(</span>v<span class=\"p\">)</span></td></tr><tr><th id=\"L744\"><a href=\"#L744\">744</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0v <span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>optional<span class=\"o\">.</span>keys<span class=\"p\">():</span></td></tr><tr><th id=\"L745\"><a href=\"#L745\">745</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 sig<span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\u00a0<span class=\"o\">+=</span>\u00a0<span class=\"s\">\"=\"</span>\u00a0<span class=\"o\">+</span>\u00a0<span class=\"sb\">`self.optional[v]`</span></td></tr><tr><th id=\"L746\"><a href=\"#L746\">746</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>varargs<span class=\"p\">:</span></td></tr><tr><th id=\"L747\"><a href=\"#L747\">747</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 sig<span class=\"o\">.</span>append<span class=\"p\">(</span><span class=\"s\">\"*\"</span>\u00a0<span class=\"o\">+</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>varargs<span class=\"p\">)</span></td></tr><tr><th id=\"L748\"><a href=\"#L748\">748</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>kwargs<span class=\"p\">:</span></td></tr><tr><th id=\"L749\"><a href=\"#L749\">749</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 sig<span class=\"o\">.</span>append<span class=\"p\">(</span><span class=\"s\">\"**\"</span>\u00a0<span class=\"o\">+</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>kwargs<span class=\"p\">)</span></td></tr><tr><th id=\"L750\"><a href=\"#L750\">750</a></th><td></td></tr><tr><th id=\"L751\"><a href=\"#L751\">751</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"s\">\"(</span><span class=\"si\">%s</span><span class=\"s\">)\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"s\">\", \"</span><span class=\"o\">.</span>join<span class=\"p\">(</span>sig<span class=\"p\">)</span></td></tr><tr><th id=\"L752\"><a href=\"#L752\">752</a></th><td></td></tr><tr><th id=\"L753\"><a href=\"#L753\">753</a></th><td></td></tr><tr><th id=\"L754\"><a href=\"#L754\">754</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">fromFunction</span><span class=\"p\">(</span>func<span class=\"p\">,</span>\u00a0interface<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\u00a0imlevel<span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\u00a0name<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L755\"><a href=\"#L755\">755</a></th><td>\u00a0 \u00a0 name <span class=\"o\">=</span>\u00a0name <span class=\"ow\">or</span>\u00a0func<span class=\"o\">.</span>__name__</td></tr><tr><th id=\"L756\"><a href=\"#L756\">756</a></th><td>\u00a0 \u00a0 method <span class=\"o\">=</span>\u00a0Method<span class=\"p\">(</span>name<span class=\"p\">,</span>\u00a0func<span class=\"o\">.</span>__doc__<span class=\"p\">)</span></td></tr><tr><th id=\"L757\"><a href=\"#L757\">757</a></th><td>\u00a0 \u00a0 defaults <span class=\"o\">=</span>\u00a0func<span class=\"o\">.</span>func_defaults <span class=\"ow\">or</span>\u00a0<span class=\"p\">()</span></td></tr><tr><th id=\"L758\"><a href=\"#L758\">758</a></th><td>\u00a0 \u00a0 code <span class=\"o\">=</span>\u00a0func<span class=\"o\">.</span>func_code</td></tr><tr><th id=\"L759\"><a href=\"#L759\">759</a></th><td>\u00a0 \u00a0 <span class=\"c\"># Number of positional arguments</span></td></tr><tr><th id=\"L760\"><a href=\"#L760\">760</a></th><td>\u00a0 \u00a0 na <span class=\"o\">=</span>\u00a0code<span class=\"o\">.</span>co_argcount<span class=\"o\">-</span>imlevel</td></tr><tr><th id=\"L761\"><a href=\"#L761\">761</a></th><td>\u00a0 \u00a0 names <span class=\"o\">=</span>\u00a0code<span class=\"o\">.</span>co_varnames<span class=\"p\">[</span>imlevel<span class=\"p\">:]</span></td></tr><tr><th id=\"L762\"><a href=\"#L762\">762</a></th><td>\u00a0 \u00a0 opt <span class=\"o\">=</span>\u00a0<span class=\"p\">{}</span></td></tr><tr><th id=\"L763\"><a href=\"#L763\">763</a></th><td>\u00a0 \u00a0 <span class=\"c\"># Number of required arguments</span></td></tr><tr><th id=\"L764\"><a href=\"#L764\">764</a></th><td>\u00a0 \u00a0 nr <span class=\"o\">=</span>\u00a0na<span class=\"o\">-</span><span class=\"nb\">len</span><span class=\"p\">(</span>defaults<span class=\"p\">)</span></td></tr><tr><th id=\"L765\"><a href=\"#L765\">765</a></th><td>\u00a0 \u00a0 <span class=\"k\">if</span>\u00a0nr <span class=\"o\">&lt;</span>\u00a0<span class=\"mi\">0</span><span class=\"p\">:</span></td></tr><tr><th id=\"L766\"><a href=\"#L766\">766</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 defaults<span class=\"o\">=</span>defaults<span class=\"p\">[</span><span class=\"o\">-</span>nr<span class=\"p\">:]</span></td></tr><tr><th id=\"L767\"><a href=\"#L767\">767</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 nr <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L768\"><a href=\"#L768\">768</a></th><td></td></tr><tr><th id=\"L769\"><a href=\"#L769\">769</a></th><td>\u00a0 \u00a0 <span class=\"c\"># Determine the optional arguments.</span></td></tr><tr><th id=\"L770\"><a href=\"#L770\">770</a></th><td>\u00a0 \u00a0 opt<span class=\"o\">.</span>update<span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"nb\">zip</span><span class=\"p\">(</span>names<span class=\"p\">[</span>nr<span class=\"p\">:],</span>\u00a0defaults<span class=\"p\">)))</span></td></tr><tr><th id=\"L771\"><a href=\"#L771\">771</a></th><td></td></tr><tr><th id=\"L772\"><a href=\"#L772\">772</a></th><td>\u00a0 \u00a0 method<span class=\"o\">.</span>positional <span class=\"o\">=</span>\u00a0names<span class=\"p\">[:</span>na<span class=\"p\">]</span></td></tr><tr><th id=\"L773\"><a href=\"#L773\">773</a></th><td>\u00a0 \u00a0 method<span class=\"o\">.</span>required <span class=\"o\">=</span>\u00a0names<span class=\"p\">[:</span>nr<span class=\"p\">]</span></td></tr><tr><th id=\"L774\"><a href=\"#L774\">774</a></th><td>\u00a0 \u00a0 method<span class=\"o\">.</span>optional <span class=\"o\">=</span>\u00a0opt</td></tr><tr><th id=\"L775\"><a href=\"#L775\">775</a></th><td></td></tr><tr><th id=\"L776\"><a href=\"#L776\">776</a></th><td>\u00a0 \u00a0 argno <span class=\"o\">=</span>\u00a0na</td></tr><tr><th id=\"L777\"><a href=\"#L777\">777</a></th><td></td></tr><tr><th id=\"L778\"><a href=\"#L778\">778</a></th><td>\u00a0 \u00a0 <span class=\"c\"># Determine the function's variable argument's name (i.e. *args)</span></td></tr><tr><th id=\"L779\"><a href=\"#L779\">779</a></th><td>\u00a0 \u00a0 <span class=\"k\">if</span>\u00a0code<span class=\"o\">.</span>co_flags <span class=\"o\">&amp;</span>\u00a0CO_VARARGS<span class=\"p\">:</span></td></tr><tr><th id=\"L780\"><a href=\"#L780\">780</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 method<span class=\"o\">.</span>varargs <span class=\"o\">=</span>\u00a0names<span class=\"p\">[</span>argno<span class=\"p\">]</span></td></tr><tr><th id=\"L781\"><a href=\"#L781\">781</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 argno <span class=\"o\">=</span>\u00a0argno <span class=\"o\">+</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L782\"><a href=\"#L782\">782</a></th><td>\u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L783\"><a href=\"#L783\">783</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 method<span class=\"o\">.</span>varargs <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L784\"><a href=\"#L784\">784</a></th><td></td></tr><tr><th id=\"L785\"><a href=\"#L785\">785</a></th><td>\u00a0 \u00a0 <span class=\"c\"># Determine the function's keyword argument's name (i.e. **kw)</span></td></tr><tr><th id=\"L786\"><a href=\"#L786\">786</a></th><td>\u00a0 \u00a0 <span class=\"k\">if</span>\u00a0code<span class=\"o\">.</span>co_flags <span class=\"o\">&amp;</span>\u00a0CO_VARKEYWORDS<span class=\"p\">:</span></td></tr><tr><th id=\"L787\"><a href=\"#L787\">787</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 method<span class=\"o\">.</span>kwargs <span class=\"o\">=</span>\u00a0names<span class=\"p\">[</span>argno<span class=\"p\">]</span></td></tr><tr><th id=\"L788\"><a href=\"#L788\">788</a></th><td>\u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L789\"><a href=\"#L789\">789</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 method<span class=\"o\">.</span>kwargs <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L790\"><a href=\"#L790\">790</a></th><td></td></tr><tr><th id=\"L791\"><a href=\"#L791\">791</a></th><td>\u00a0 \u00a0 method<span class=\"o\">.</span>interface <span class=\"o\">=</span>\u00a0interface</td></tr><tr><th id=\"L792\"><a href=\"#L792\">792</a></th><td></td></tr><tr><th id=\"L793\"><a href=\"#L793\">793</a></th><td>\u00a0 \u00a0 <span class=\"k\">for</span>\u00a0key<span class=\"p\">,</span>\u00a0value <span class=\"ow\">in</span>\u00a0func<span class=\"o\">.</span>__dict__<span class=\"o\">.</span>items<span class=\"p\">():</span></td></tr><tr><th id=\"L794\"><a href=\"#L794\">794</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 method<span class=\"o\">.</span>setTaggedValue<span class=\"p\">(</span>key<span class=\"p\">,</span>\u00a0value<span class=\"p\">)</span></td></tr><tr><th id=\"L795\"><a href=\"#L795\">795</a></th><td></td></tr><tr><th id=\"L796\"><a href=\"#L796\">796</a></th><td>\u00a0 \u00a0 <span class=\"k\">return</span>\u00a0method</td></tr><tr><th id=\"L797\"><a href=\"#L797\">797</a></th><td></td></tr><tr><th id=\"L798\"><a href=\"#L798\">798</a></th><td></td></tr><tr><th id=\"L799\"><a href=\"#L799\">799</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">fromMethod</span><span class=\"p\">(</span>meth<span class=\"p\">,</span>\u00a0interface<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\u00a0name<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L800\"><a href=\"#L800\">800</a></th><td>\u00a0 \u00a0 func <span class=\"o\">=</span>\u00a0meth<span class=\"o\">.</span>im_func</td></tr><tr><th id=\"L801\"><a href=\"#L801\">801</a></th><td>\u00a0 \u00a0 <span class=\"k\">return</span>\u00a0fromFunction<span class=\"p\">(</span>func<span class=\"p\">,</span>\u00a0interface<span class=\"p\">,</span>\u00a0imlevel<span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\u00a0name<span class=\"o\">=</span>name<span class=\"p\">)</span></td></tr><tr><th id=\"L802\"><a href=\"#L802\">802</a></th><td></td></tr><tr><th id=\"L803\"><a href=\"#L803\">803</a></th><td></td></tr><tr><th id=\"L804\"><a href=\"#L804\">804</a></th><td><span class=\"c\"># Now we can create the interesting interfaces and wire them up:</span></td></tr><tr><th id=\"L805\"><a href=\"#L805\">805</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">_wire</span><span class=\"p\">():</span></td></tr><tr><th id=\"L806\"><a href=\"#L806\">806</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">zope.interface.declarations</span>\u00a0<span class=\"kn\">import</span>\u00a0classImplements</td></tr><tr><th id=\"L807\"><a href=\"#L807\">807</a></th><td></td></tr><tr><th id=\"L808\"><a href=\"#L808\">808</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">zope.interface.interfaces</span>\u00a0<span class=\"kn\">import</span>\u00a0IAttribute</td></tr><tr><th id=\"L809\"><a href=\"#L809\">809</a></th><td>\u00a0 \u00a0 classImplements<span class=\"p\">(</span>Attribute<span class=\"p\">,</span>\u00a0IAttribute<span class=\"p\">)</span></td></tr><tr><th id=\"L810\"><a href=\"#L810\">810</a></th><td></td></tr><tr><th id=\"L811\"><a href=\"#L811\">811</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">zope.interface.interfaces</span>\u00a0<span class=\"kn\">import</span>\u00a0IMethod</td></tr><tr><th id=\"L812\"><a href=\"#L812\">812</a></th><td>\u00a0 \u00a0 classImplements<span class=\"p\">(</span>Method<span class=\"p\">,</span>\u00a0IMethod<span class=\"p\">)</span></td></tr><tr><th id=\"L813\"><a href=\"#L813\">813</a></th><td></td></tr><tr><th id=\"L814\"><a href=\"#L814\">814</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">zope.interface.interfaces</span>\u00a0<span class=\"kn\">import</span>\u00a0IInterface<span class=\"p\">,</span>\u00a0ISpecification</td></tr><tr><th id=\"L815\"><a href=\"#L815\">815</a></th><td>\u00a0 \u00a0 classImplements<span class=\"p\">(</span>InterfaceClass<span class=\"p\">,</span>\u00a0IInterface<span class=\"p\">)</span></td></tr><tr><th id=\"L816\"><a href=\"#L816\">816</a></th><td>\u00a0 \u00a0 classImplements<span class=\"p\">(</span>Specification<span class=\"p\">,</span>\u00a0ISpecification<span class=\"p\">)</span></td></tr><tr><th id=\"L817\"><a href=\"#L817\">817</a></th><td></td></tr><tr><th id=\"L818\"><a href=\"#L818\">818</a></th><td><span class=\"c\"># We import this here to deal with module dependencies.</span></td></tr><tr><th id=\"L819\"><a href=\"#L819\">819</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">zope.interface.declarations</span>\u00a0<span class=\"kn\">import</span>\u00a0providedBy<span class=\"p\">,</span>\u00a0implementedBy</td></tr><tr><th id=\"L820\"><a href=\"#L820\">820</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">zope.interface.exceptions</span>\u00a0<span class=\"kn\">import</span>\u00a0InvalidInterface</td></tr><tr><th id=\"L821\"><a href=\"#L821\">821</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">zope.interface.exceptions</span>\u00a0<span class=\"kn\">import</span>\u00a0BrokenImplementation</td></tr></tbody></table>\n\n      </div>\n      <div id=\"anydiff\">\n        <form action=\"/LUCICodeRepository/nomaticIM/diff\" method=\"get\">\n          <div class=\"buttons\">\n            <input type=\"hidden\" name=\"new_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/zope/interface/interface.py\" />\n            <input type=\"hidden\" name=\"old_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/zope/interface/interface.py\" />\n            <input type=\"hidden\" name=\"new_rev\" />\n            <input type=\"hidden\" name=\"old_rev\" />\n            <input type=\"submit\" value=\"View changes...\" title=\"Select paths and revs for Diff\" />\n          </div>\n        </form>\n      </div>\n      <div id=\"help\"><strong>Note:</strong> See <a href=\"/LUCICodeRepository/nomaticIM/wiki/TracBrowser\">TracBrowser</a>\n        for help on using the repository browser.</div>\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"first\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/zope/interface/interface.py?format=txt\">Plain Text</a>\n        </li><li class=\"last\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/zope/interface/interface.py\">Original Format</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/LUCICodeRepository/nomaticIM/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/LUCICodeRepository/nomaticIM/about\"><strong>Trac 1.0.1</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">All content copyright 2007-2008 by LUCI <br /><a href=\"http://luci.ics.uci.edu/\">http://luci.ics.uci.edu/</a></p>\n    </div>\n\t\t<div id=\"sitefooter\">\n\t\t\t<script src=\"http://www.google-analytics.com/urchin.js\" type=\"text/javascript\">\n\t\t\t</script>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t\t_uacct = \"UA-338915-2\";\n\t\t\t\turchinTracker();\n\t\t\t</script>\n\t\t</div>\n\t</body>\n</html>", "id": 44155.0}