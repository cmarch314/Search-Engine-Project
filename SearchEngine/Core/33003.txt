{"text": "View Javadoc 1 package swirl workspace 2 3 import java io IOException 4 5 import javax servlet http HttpServletRequest 6 import javax servlet http HttpServletResponse 7 8 import org apache commons httpclient HttpMethod 9 import org apache commons logging Log 1 import org apache commons logging LogFactory 11 import org apache webdav lib methods LockMethod 12 13 14 Proxies an WebDAV LOCK command to a specific peer 15 16 author Kari Nies 17 18 public class LockCommand extends ProxyCommand 19 2 commons logging log that maps to this Command 21 private Log log LogFactory getLog this getClass 22 23 24 Constructor that calls super constructor 25 26 param req see super 27 param resp see super 28 param host see super 29 param path see super 3 param peerManager see super 31 32 public LockCommand final HttpServletRequest req 33 final HttpServletResponse resp final String host 34 final String path final PeerManager peerManager 35 36 super req resp host path peerManager 37 38 39 4 Implements the abstract method from ProxyCommand to return a WebDAV LOCK 41 method 42 43 param url the url to execute the method on 44 45 return an instance of LockMethod 46 47 public HttpMethod createMethod final String url 48 49 LockMethod method new LockMethod url 5 51 set Depth header if unspecified default to infinity 52 String depthHeader getRequest getHeader Depth 53 54 if log isDebugEnabled 55 56 log debug depth depthHeader 57 58 59 method setDepth parseDepthHeader depthHeader 6 61 set Timeout header to INFINITY ALWAYS 62 String timeoutHeader getRequest getHeader Timeout 63 64 method setRequestHeader Timeout timeoutHeader 65 66 set If header only if it exists 67 String ifHeader getRequest getHeader If 68 69 if log isDebugEnabled 7 71 log debug If ifHeader 72 73 74 if ifHeader null 75 76 method setRequestHeader If ifHeader 77 78 79 set request body contains lockinfo 8 try 81 82 method setRequestBody getRequest getInputStream 83 84 catch IOException ex 85 86 log error ex ex 87 88 89 return method 9 91 92 93 Figure out what the depth header is as an integer defaults to infinity 94 if it can t figure it out 95 96 param depthHeader the string version 97 98 return the int version 99 1 public int parseDepthHeader final String depthHeader 1 1 1 2 if depthHeader null 1 3 1 4 if depthHeader trim equalsIgnoreCase infinity 1 5 1 6 return LockMethod DEPTH INFINITY 1 7 1 8 else 1 9 11 return Integer parseInt depthHeader 111 112 113 else 114 115 return LockMethod DEPTH INFINITY 116 117 118 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.20/xref/swirl/workspace/LockCommand.html", "title": "lockcommand xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>LockCommand xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../stylesheet.css\" />\n</head>\n<body>\n<div id=\"overview\"><a href=\"../../../apidocs/swirl/workspace/LockCommand.html\">View Javadoc</a></div><pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <strong>package</strong> <a href=\"../../swirl/workspace/package-summary.html\">swirl.workspace</a>;\n<a name=\"2\" href=\"#2\">2</a>   \n<a name=\"3\" href=\"#3\">3</a>   <strong>import</strong> java.io.IOException;\n<a name=\"4\" href=\"#4\">4</a>   \n<a name=\"5\" href=\"#5\">5</a>   <strong>import</strong> javax.servlet.http.HttpServletRequest;\n<a name=\"6\" href=\"#6\">6</a>   <strong>import</strong> javax.servlet.http.HttpServletResponse;\n<a name=\"7\" href=\"#7\">7</a>   \n<a name=\"8\" href=\"#8\">8</a>   <strong>import</strong> org.apache.commons.httpclient.HttpMethod;\n<a name=\"9\" href=\"#9\">9</a>   <strong>import</strong> org.apache.commons.logging.Log;\n<a name=\"10\" href=\"#10\">10</a>  <strong>import</strong> org.apache.commons.logging.LogFactory;\n<a name=\"11\" href=\"#11\">11</a>  <strong>import</strong> org.apache.webdav.lib.methods.LockMethod;\n<a name=\"12\" href=\"#12\">12</a>  \n<a name=\"13\" href=\"#13\">13</a>  <em>/**<em>*</em></em>\n<a name=\"14\" href=\"#14\">14</a>  <em> * Proxies an WebDAV LOCK command to a specific peer</em>\n<a name=\"15\" href=\"#15\">15</a>  <em> *</em>\n<a name=\"16\" href=\"#16\">16</a>  <em> * @author Kari Nies</em>\n<a name=\"17\" href=\"#17\">17</a>  <em> */</em>\n<a name=\"18\" href=\"#18\">18</a>  <strong>public</strong> <strong>class</strong> <a href=\"../../swirl/workspace/LockCommand.html\">LockCommand</a> <strong>extends</strong> <a href=\"../../swirl/workspace/ProxyCommand.html\">ProxyCommand</a>\n<a name=\"19\" href=\"#19\">19</a>  {\n<a name=\"20\" href=\"#20\">20</a>      <em>/**<em>* commons-logging log that maps to this Command */</em></em>\n<a name=\"21\" href=\"#21\">21</a>      <strong>private</strong> Log log = LogFactory.getLog(<strong>this</strong>.getClass());\n<a name=\"22\" href=\"#22\">22</a>  \n<a name=\"23\" href=\"#23\">23</a>      <em>/**<em>*</em></em>\n<a name=\"24\" href=\"#24\">24</a>  <em>     * Constructor that calls super constructor</em>\n<a name=\"25\" href=\"#25\">25</a>  <em>     *</em>\n<a name=\"26\" href=\"#26\">26</a>  <em>     * @param req see super</em>\n<a name=\"27\" href=\"#27\">27</a>  <em>     * @param resp see super</em>\n<a name=\"28\" href=\"#28\">28</a>  <em>     * @param host see super</em>\n<a name=\"29\" href=\"#29\">29</a>  <em>     * @param path see super</em>\n<a name=\"30\" href=\"#30\">30</a>  <em>     * @param peerManager see super</em>\n<a name=\"31\" href=\"#31\">31</a>  <em>     */</em>\n<a name=\"32\" href=\"#32\">32</a>      <strong>public</strong> <a href=\"../../swirl/workspace/LockCommand.html\">LockCommand</a>(<strong>final</strong> HttpServletRequest req,\n<a name=\"33\" href=\"#33\">33</a>                         <strong>final</strong> HttpServletResponse resp, <strong>final</strong> String host,\n<a name=\"34\" href=\"#34\">34</a>                         <strong>final</strong> String path, <strong>final</strong> <a href=\"../../swirl/workspace/PeerManager.html\">PeerManager</a> peerManager)\n<a name=\"35\" href=\"#35\">35</a>      {\n<a name=\"36\" href=\"#36\">36</a>          <strong>super</strong>(req, resp, host, path, peerManager);\n<a name=\"37\" href=\"#37\">37</a>      }\n<a name=\"38\" href=\"#38\">38</a>  \n<a name=\"39\" href=\"#39\">39</a>      <em>/**<em>*</em></em>\n<a name=\"40\" href=\"#40\">40</a>  <em>     * Implements the abstract method from ProxyCommand to return a WebDAV LOCK</em>\n<a name=\"41\" href=\"#41\">41</a>  <em>     * method</em>\n<a name=\"42\" href=\"#42\">42</a>  <em>     *</em>\n<a name=\"43\" href=\"#43\">43</a>  <em>     * @param url the url to execute the method on</em>\n<a name=\"44\" href=\"#44\">44</a>  <em>     *</em>\n<a name=\"45\" href=\"#45\">45</a>  <em>     * @return an instance of LockMethod</em>\n<a name=\"46\" href=\"#46\">46</a>  <em>     */</em>\n<a name=\"47\" href=\"#47\">47</a>      <strong>public</strong> HttpMethod createMethod(<strong>final</strong> String url)\n<a name=\"48\" href=\"#48\">48</a>      {\n<a name=\"49\" href=\"#49\">49</a>          LockMethod method = <strong>new</strong> LockMethod(url);\n<a name=\"50\" href=\"#50\">50</a>  \n<a name=\"51\" href=\"#51\">51</a>          <em class=\"comment\">//set Depth header, if unspecified, default to infinity</em>\n<a name=\"52\" href=\"#52\">52</a>          String depthHeader = getRequest().getHeader(<span class=\"string\">\"Depth\"</span>);\n<a name=\"53\" href=\"#53\">53</a>  \n<a name=\"54\" href=\"#54\">54</a>          <strong>if</strong>(log.isDebugEnabled())\n<a name=\"55\" href=\"#55\">55</a>          {\n<a name=\"56\" href=\"#56\">56</a>              log.debug(<span class=\"string\">\"depth: \"</span> + depthHeader);\n<a name=\"57\" href=\"#57\">57</a>          }\n<a name=\"58\" href=\"#58\">58</a>  \n<a name=\"59\" href=\"#59\">59</a>          method.setDepth(parseDepthHeader(depthHeader));\n<a name=\"60\" href=\"#60\">60</a>  \n<a name=\"61\" href=\"#61\">61</a>          <em class=\"comment\">//set Timeout header, to INFINITY - ALWAYS</em>\n<a name=\"62\" href=\"#62\">62</a>          String timeoutHeader = getRequest().getHeader(<span class=\"string\">\"Timeout\"</span>);\n<a name=\"63\" href=\"#63\">63</a>  \n<a name=\"64\" href=\"#64\">64</a>          method.setRequestHeader(<span class=\"string\">\"Timeout\"</span>, timeoutHeader);\n<a name=\"65\" href=\"#65\">65</a>  \n<a name=\"66\" href=\"#66\">66</a>          <em class=\"comment\">//set If header only if it exists</em>\n<a name=\"67\" href=\"#67\">67</a>          String ifHeader = getRequest().getHeader(<span class=\"string\">\"If\"</span>);\n<a name=\"68\" href=\"#68\">68</a>  \n<a name=\"69\" href=\"#69\">69</a>          <strong>if</strong>(log.isDebugEnabled())\n<a name=\"70\" href=\"#70\">70</a>          {\n<a name=\"71\" href=\"#71\">71</a>              log.debug(<span class=\"string\">\"If: \"</span> + ifHeader);\n<a name=\"72\" href=\"#72\">72</a>          }\n<a name=\"73\" href=\"#73\">73</a>  \n<a name=\"74\" href=\"#74\">74</a>          <strong>if</strong>(<strong>if</strong>Header != <strong>null</strong>)\n<a name=\"75\" href=\"#75\">75</a>          {\n<a name=\"76\" href=\"#76\">76</a>              method.setRequestHeader(<span class=\"string\">\"If\"</span>, ifHeader);\n<a name=\"77\" href=\"#77\">77</a>          }\n<a name=\"78\" href=\"#78\">78</a>  \n<a name=\"79\" href=\"#79\">79</a>          <em class=\"comment\">// set request body, contains lockinfo</em>\n<a name=\"80\" href=\"#80\">80</a>          <strong>try</strong>\n<a name=\"81\" href=\"#81\">81</a>          {\n<a name=\"82\" href=\"#82\">82</a>              method.setRequestBody(getRequest().getInputStream());\n<a name=\"83\" href=\"#83\">83</a>          }\n<a name=\"84\" href=\"#84\">84</a>          <strong>catch</strong>(IOException ex)\n<a name=\"85\" href=\"#85\">85</a>          {\n<a name=\"86\" href=\"#86\">86</a>              log.error(ex, ex);\n<a name=\"87\" href=\"#87\">87</a>          }\n<a name=\"88\" href=\"#88\">88</a>  \n<a name=\"89\" href=\"#89\">89</a>          <strong>return</strong> method;\n<a name=\"90\" href=\"#90\">90</a>      }\n<a name=\"91\" href=\"#91\">91</a>  \n<a name=\"92\" href=\"#92\">92</a>      <em>/**<em>*</em></em>\n<a name=\"93\" href=\"#93\">93</a>  <em>     * Figure out what the depth header is as an integer.  defaults to infinity</em>\n<a name=\"94\" href=\"#94\">94</a>  <em>     * if it can't figure it out.</em>\n<a name=\"95\" href=\"#95\">95</a>  <em>     *</em>\n<a name=\"96\" href=\"#96\">96</a>  <em>     * @param depthHeader the string version</em>\n<a name=\"97\" href=\"#97\">97</a>  <em>     *</em>\n<a name=\"98\" href=\"#98\">98</a>  <em>     * @return the int version</em>\n<a name=\"99\" href=\"#99\">99</a>  <em>     */</em>\n<a name=\"100\" href=\"#100\">100</a>     <strong>public</strong> <strong>int</strong> parseDepthHeader(<strong>final</strong> String depthHeader)\n<a name=\"101\" href=\"#101\">101</a>     {\n<a name=\"102\" href=\"#102\">102</a>         <strong>if</strong>(depthHeader != <strong>null</strong>)\n<a name=\"103\" href=\"#103\">103</a>         {\n<a name=\"104\" href=\"#104\">104</a>             <strong>if</strong>(depthHeader.trim().equalsIgnoreCase(<span class=\"string\">\"infinity\"</span>))\n<a name=\"105\" href=\"#105\">105</a>             {\n<a name=\"106\" href=\"#106\">106</a>                 <strong>return</strong> LockMethod.DEPTH_INFINITY;\n<a name=\"107\" href=\"#107\">107</a>             }\n<a name=\"108\" href=\"#108\">108</a>             <strong>else</strong>\n<a name=\"109\" href=\"#109\">109</a>             {\n<a name=\"110\" href=\"#110\">110</a>                 <strong>return</strong> Integer.parseInt(depthHeader);\n<a name=\"111\" href=\"#111\">111</a>             }\n<a name=\"112\" href=\"#112\">112</a>         }\n<a name=\"113\" href=\"#113\">113</a>         <strong>else</strong>\n<a name=\"114\" href=\"#114\">114</a>         {\n<a name=\"115\" href=\"#115\">115</a>             <strong>return</strong> LockMethod.DEPTH_INFINITY;\n<a name=\"116\" href=\"#116\">116</a>         }\n<a name=\"117\" href=\"#117\">117</a>     }\n<a name=\"118\" href=\"#118\">118</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 33003.0}