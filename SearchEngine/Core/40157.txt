{"text": "Main Page Modules Data Structures File List Data Fields Globals Related Pages vclist hGo to the documentation of this file 1 49 ifndef VCLIST H 5 define VCLIST H 51 52 Generic headers 53 include maloc maloc h 54 include apbs vhal h 55 56 Headers specific to this file 57 include apbs valist h 58 include apbs vatom h 59 include apbs vunit h 6 66 enum eVclist DomainMode 67 CLIST AUTO DOMAIN 69 CLIST MANUAL DOMAIN 71 72 78 typedef enum eVclist DomainMode Vclist DomainMode 79 85 struct sVclistCell 86 Vatom atoms 87 int natoms 88 89 94 typedef struct sVclistCell VclistCell 95 1 1 struct sVclist 1 2 1 3 Vmem vmem 1 4 Valist alist 1 5 Vclist DomainMode mode 1 6 int npts VAPBS DIM 1 7 int n 1 8 double max radius 1 9 VclistCell cells 11 double lower corner VAPBS DIM 111 double upper corner VAPBS DIM 112 double spacs VAPBS DIM 114 115 12 typedef struct sVclist Vclist 121 122 if defined VINLINE VCLIST 123 129 unsigned long int Vclist memChk 13 Vclist thee 131 132 14 double Vclist maxRadius 141 Vclist thee 142 143 144 else if defined VINLINE VCLIST 145 146 define Vclist memChk thee Vmem bytes thee vmem 147 define Vclist maxRadius thee thee max radius 148 149 endif if defined VINLINE VCLIST 15 151 152 Class Vclist Non Inlineable methods vclist c 154 159 Vclist Vclist ctor 16 Valist alist 161 double max radius 162 int npts VAPBS DIM 164 Vclist DomainMode mode 165 double lower corner VAPBS DIM 168 double upper corner VAPBS DIM 171 172 177 int Vclist ctor2 178 Vclist thee 179 Valist alist 18 double max radius 181 int npts VAPBS DIM 183 Vclist DomainMode mode 184 double lower corner VAPBS DIM 187 double upper corner VAPBS DIM 19 191 196 void Vclist dtor 197 Vclist thee 198 199 2 4 void Vclist dtor2 2 5 Vclist thee 2 6 2 7 215 VclistCell Vclist getCell 216 Vclist thee 217 double position VAPBS DIM 218 219 226 VclistCell VclistCell ctor 227 int natoms 228 229 236 int VclistCell ctor2 237 VclistCell thee 238 int natoms 239 24 245 void VclistCell dtor 246 VclistCell thee 247 248 253 void VclistCell dtor2 254 VclistCell thee 255 256 257 endif ifndef VCLIST H 258 Generated on Tue Dec 6 1 5 31 2 5 for APBS by 1 3 5", "_id": "http://www.ics.uci.edu/~dock/manuals/apbs/html/programmer/vclist_8h-source.html", "title": "apbs: vclist.h source file", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=iso-8859-1\">\n<title>APBS: vclist.h Source File</title>\n<link href=\"apbs.css\" rel=\"stylesheet\" type=\"text/css\">\n</head><body>\n<!-- Generated by Doxygen 1.3.5 -->\n<div class=\"qindex\"><a class=\"qindex\" href=\"index.html\">Main&nbsp;Page</a> | <a class=\"qindex\" href=\"modules.html\">Modules</a> | <a class=\"qindex\" href=\"annotated.html\">Data&nbsp;Structures</a> | <a class=\"qindex\" href=\"files.html\">File&nbsp;List</a> | <a class=\"qindex\" href=\"functions.html\">Data&nbsp;Fields</a> | <a class=\"qindex\" href=\"globals.html\">Globals</a> | <a class=\"qindex\" href=\"pages.html\">Related&nbsp;Pages</a></div>\n<h1>vclist.h</h1><a href=\"vclist_8h.html\">Go to the documentation of this file.</a><div class=\"fragment\"><pre>00001 \n00049 <span class=\"preprocessor\">#ifndef _VCLIST_H_</span>\n00050 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#define _VCLIST_H_</span>\n00051 <span class=\"preprocessor\"></span>\n00052 <span class=\"comment\">/* Generic headers */</span>\n00053 <span class=\"preprocessor\">#include \"maloc/maloc.h\"</span>\n00054 <span class=\"preprocessor\">#include \"<a class=\"code\" href=\"vhal_8h.html\">apbs/vhal.h</a>\"</span>\n00055 \n00056 <span class=\"comment\">/* Headers specific to this file */</span>\n00057 <span class=\"preprocessor\">#include \"<a class=\"code\" href=\"valist_8h.html\">apbs/valist.h</a>\"</span>\n00058 <span class=\"preprocessor\">#include \"<a class=\"code\" href=\"vatom_8h.html\">apbs/vatom.h</a>\"</span>\n00059 <span class=\"preprocessor\">#include \"<a class=\"code\" href=\"vunit_8h.html\">apbs/vunit.h</a>\"</span>\n00060 \n<a name=\"l00066\"></a><a class=\"code\" href=\"group__Vclist.html#ga13\">00066</a> <span class=\"keyword\">enum</span> <a class=\"code\" href=\"group__Vclist.html#ga13\">eVclist_DomainMode</a> {\n00067     <a class=\"code\" href=\"group__Vclist.html#gga13a3\">CLIST_AUTO_DOMAIN</a>,  \n00069     <a class=\"code\" href=\"group__Vclist.html#gga13a4\">CLIST_MANUAL_DOMAIN</a>   \n00071 };\n00072 \n<a name=\"l00078\"></a><a class=\"code\" href=\"group__Vclist.html#ga14\">00078</a> <span class=\"keyword\">typedef</span> <span class=\"keyword\">enum</span> <a class=\"code\" href=\"group__Vclist.html#ga13\">eVclist_DomainMode</a> <a class=\"code\" href=\"group__Vclist.html#ga14\">Vclist_DomainMode</a>;\n00079 \n<a name=\"l00085\"></a><a class=\"code\" href=\"structsVclistCell.html\">00085</a> <span class=\"keyword\">struct </span><a class=\"code\" href=\"structsVclistCell.html\">sVclistCell</a> {\n<a name=\"l00086\"></a><a class=\"code\" href=\"structsVclistCell.html#o0\">00086</a>     <a class=\"code\" href=\"structsVatom.html\">Vatom</a> **<a class=\"code\" href=\"structsVclistCell.html#o0\">atoms</a>;  \n<a name=\"l00087\"></a><a class=\"code\" href=\"structsVclistCell.html#o1\">00087</a>     <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"structsVclistCell.html#o1\">natoms</a>;  \n00088 };\n00089 \n<a name=\"l00094\"></a><a class=\"code\" href=\"group__Vclist.html#ga0\">00094</a> <span class=\"keyword\">typedef</span> <span class=\"keyword\">struct </span><a class=\"code\" href=\"structsVclistCell.html\">sVclistCell</a> <a class=\"code\" href=\"group__Vclist.html#ga0\">VclistCell</a>;\n00095 \n<a name=\"l00101\"></a><a class=\"code\" href=\"structsVclist.html\">00101</a> <span class=\"keyword\">struct </span><a class=\"code\" href=\"structsVclist.html\">sVclist</a> {\n00102 \n<a name=\"l00103\"></a><a class=\"code\" href=\"structsVclist.html#o0\">00103</a>   Vmem *<a class=\"code\" href=\"structsVclist.html#o0\">vmem</a>;  \n<a name=\"l00104\"></a><a class=\"code\" href=\"structsVclist.html#o1\">00104</a>   <a class=\"code\" href=\"structsValist.html\">Valist</a> *<a class=\"code\" href=\"structsVclist.html#o1\">alist</a>;  \n<a name=\"l00105\"></a><a class=\"code\" href=\"structsVclist.html#o2\">00105</a>   <a class=\"code\" href=\"group__Vclist.html#ga14\">Vclist_DomainMode</a> <a class=\"code\" href=\"structsVclist.html#o2\">mode</a>;  \n<a name=\"l00106\"></a><a class=\"code\" href=\"structsVclist.html#o3\">00106</a>   <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"structsVclist.html#o3\">npts</a>[<a class=\"code\" href=\"group__Vhal.html#ga15\">VAPBS_DIM</a>];  \n<a name=\"l00107\"></a><a class=\"code\" href=\"structsVclist.html#o4\">00107</a>   <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"structsVclist.html#o4\">n</a>;  \n<a name=\"l00108\"></a><a class=\"code\" href=\"structsVclist.html#o5\">00108</a>   <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsVclist.html#o5\">max_radius</a>;  \n<a name=\"l00109\"></a><a class=\"code\" href=\"structsVclist.html#o6\">00109</a>   <a class=\"code\" href=\"group__Vclist.html#ga0\">VclistCell</a> *<a class=\"code\" href=\"structsVclist.html#o6\">cells</a>;  \n<a name=\"l00110\"></a><a class=\"code\" href=\"structsVclist.html#o7\">00110</a>   <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsVclist.html#o7\">lower_corner</a>[<a class=\"code\" href=\"group__Vhal.html#ga15\">VAPBS_DIM</a>]; \n<a name=\"l00111\"></a><a class=\"code\" href=\"structsVclist.html#o8\">00111</a>   <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsVclist.html#o8\">upper_corner</a>[<a class=\"code\" href=\"group__Vhal.html#ga15\">VAPBS_DIM</a>]; \n<a name=\"l00112\"></a><a class=\"code\" href=\"structsVclist.html#o9\">00112</a>   <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsVclist.html#o9\">spacs</a>[<a class=\"code\" href=\"group__Vhal.html#ga15\">VAPBS_DIM</a>];  \n00114 };\n00115 \n<a name=\"l00120\"></a><a class=\"code\" href=\"group__Vclist.html#ga1\">00120</a> <span class=\"keyword\">typedef</span> <span class=\"keyword\">struct </span><a class=\"code\" href=\"structsVclist.html\">sVclist</a> <a class=\"code\" href=\"group__Vclist.html#ga1\">Vclist</a>;\n00121 \n00122 <span class=\"preprocessor\">#if !defined(VINLINE_VCLIST)</span>\n00123 <span class=\"preprocessor\"></span>\n00129     <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">long</span> <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"group__Vclist.html#ga2\">Vclist_memChk</a>(\n00130             Vclist *thee \n00131             );\n00132 \n00140     <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"group__Vclist.html#ga3\">Vclist_maxRadius</a>(\n00141             Vclist *thee \n00142             );\n00143 \n00144 <span class=\"preprocessor\">#else </span><span class=\"comment\">/* if defined(VINLINE_VCLIST) */</span>\n00145 \n00146 <span class=\"preprocessor\">#   define Vclist_memChk(thee) (Vmem_bytes((thee)-&gt;vmem))</span>\n00147 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#   define Vclist_maxRadius(thee) ((thee)-&gt;max_radius)</span>\n00148 <span class=\"preprocessor\"></span>\n00149 <span class=\"preprocessor\">#endif </span><span class=\"comment\">/* if !defined(VINLINE_VCLIST) */</span>\n00150 \n00151 <span class=\"comment\">/* ///////////////////////////////////////////////////////////////////////////</span>\n00152 <span class=\"comment\">// Class Vclist: Non-Inlineable methods (vclist.c)</span>\n00154 <span class=\"comment\"></span>\n00159 <span class=\"comment\">Vclist* Vclist_ctor(</span>\n00160 <span class=\"comment\">        Valist *alist, </span>\n00161 <span class=\"comment\">        double max_radius, </span>\n00162 <span class=\"comment\">        int npts[VAPBS_DIM], </span>\n00164 <span class=\"comment\">        Vclist_DomainMode mode, </span>\n00165 <span class=\"comment\">        double lower_corner[VAPBS_DIM],  </span>\n00168 <span class=\"comment\">        double upper_corner[VAPBS_DIM]   </span>\n00171 <span class=\"comment\">        );</span>\n00172 <span class=\"comment\"></span>\n00177 <span class=\"comment\">int Vclist_ctor2(</span>\n00178 <span class=\"comment\">        Vclist *thee, </span>\n00179 <span class=\"comment\">        Valist *alist, </span>\n00180 <span class=\"comment\">        double max_radius, </span>\n00181 <span class=\"comment\">        int npts[VAPBS_DIM], </span>\n00183 <span class=\"comment\">        Vclist_DomainMode mode, </span>\n00184 <span class=\"comment\">        double lower_corner[VAPBS_DIM],  </span>\n00187 <span class=\"comment\">        double upper_corner[VAPBS_DIM]   </span>\n00190 <span class=\"comment\">        );</span>\n00191 <span class=\"comment\"></span>\n00196 <span class=\"comment\">void Vclist_dtor(</span>\n00197 <span class=\"comment\">        Vclist **thee </span>\n00198 <span class=\"comment\">        );</span>\n00199 <span class=\"comment\"></span>\n00204 <span class=\"comment\">void Vclist_dtor2(</span>\n00205 <span class=\"comment\">        Vclist *thee </span>\n00206 <span class=\"comment\">        );</span>\n00207 <span class=\"comment\"></span>\n00215 <span class=\"comment\">VclistCell* Vclist_getCell(</span>\n00216 <span class=\"comment\">        Vclist *thee, </span>\n00217 <span class=\"comment\">        double position[VAPBS_DIM] </span>\n00218 <span class=\"comment\">        );</span>\n00219 <span class=\"comment\"></span>\n00226 <span class=\"comment\">VclistCell* VclistCell_ctor(</span>\n00227 <span class=\"comment\">        int natoms  </span>\n00228 <span class=\"comment\">        );</span>\n00229 <span class=\"comment\"></span>\n00236 <span class=\"comment\">int VclistCell_ctor2(</span>\n00237 <span class=\"comment\">        VclistCell *thee,  </span>\n00238 <span class=\"comment\">        int natoms  </span>\n00239 <span class=\"comment\">        );</span>\n00240 <span class=\"comment\"></span>\n00245 <span class=\"comment\">void VclistCell_dtor(</span>\n00246 <span class=\"comment\">        VclistCell **thee </span>\n00247 <span class=\"comment\">        );</span>\n00248 <span class=\"comment\"></span>\n00253 <span class=\"comment\">void VclistCell_dtor2(</span>\n00254 <span class=\"comment\">        VclistCell *thee </span>\n00255 <span class=\"comment\">        );</span>\n00256 <span class=\"comment\"></span>\n00257 <span class=\"comment\">#endif    /* ifndef _VCLIST_H_ */</span>\n00258 \n</pre></div><hr size=\"1\"><address style=\"align: right;\"><small>Generated on Tue Dec 6 10:05:31 2005 for APBS by\n<a href=\"http://www.doxygen.org/index.html\">\n<img src=\"doxygen.png\" alt=\"doxygen\" align=\"middle\" border=0 > \n</a>1.3.5 </small></address>\n</body>\n</html>\n", "id": 40157.0}