{"text": "Pair Programming Guidelines Adapted from notes crafted by David G Kay Two heads are better than one according to an old saying This even applies to writing programs A pair of programmers working as described here nearly always beats the stereotypical solitary loner The pair produces more high quality code in less time by far more than two to one In pair programming two programmers share one computer One is the driver who controls the keyboard and mouse The other is the navigator who observes asks questions suggests solutions and thinks about slightly longer term strategies The two programmers switch roles frequently every 15 minutes could be a good interval though that s flexible Even the activities of the driver and navigator are flexible except for who does the typing the goal is to work together collaboratively each partner assisting the other as needed to produce the best joint result possible It is not pair programming if one person does all the work or if the partners just split up the work and each does half independently That s the basic idea You do need to arrange times to meet We expect everyone to be as flexible and professional as possible in arranging those times as necessary if your schedule is highly constrained explore possible meeting times with your prospective partners before you commit to the partnership You may enjoy reading this paper about pair programming All I Really Need to Know About Pair Programming I Learned in Kindergarten by Laurie A Williams and Robert R Kessler Communications of the ACM May 2 Alternate link What about individual differences People new to pair programming often ask what happens if the members of the pair have different abilities Actually that will be true of any pair of people in the world probably even including identical twins The differences may be great or small one member may have more strengths than the other but this is exactly like most real world working situations Part of accomplishing a task is to get the most out of each member and make each member stronger and more productive on subsequent tasks A clearly stronger partner may feel frustrated or slowed down by the other partner but the stronger partner still benefits from the teamwork in many ways The other partner s requests for clarification often point out flaws in the approach or solution the teamwork skills gained have great value in the job market and the exercise of providing a clear explanation solidifies and deepens the explainer s own understanding The less strong partner may feel that questions hold the other partner back or that there is no benefit to participating actively but pair programming studies show that paired work is consistently better than work the stronger partner does individually It is part of each partner s job to understand the whole task that means asking questions when necessary and answering them when possible You will choose a different partner for every assignment so your partners skill levels are certain to vary during the quarter Still when you have a choice you should try to pick a partner whose skill level is close to your own This won t always be possible and it s sometimes hard to compare skill levels at all but we find that pairs are most productive when the partners are at about the same level there s a more balanced give and take How does this affect my grade Participation in pair programming won t be the cause of any low grades Failure to participate fully and cooperatively on the other hand could be a problem Each pair will submit one solution Just the head member of the pair should submit the solution via Checkmate which must contain both partners names at the top of the files Make sure that your pairing is registered with the class Grader by the registration due date for that assignment Each pair will receive a single score on the assignment Typically all CompSci 165 students are capable and professional We expect that the answers to all of the following questions would be yes Did your partner come to the scheduled meetings on time and ready to work Did your partner read the assignment and preparatory materials before coming to the scheduled meetings showing up either with specific questions or ready to contribute Did your partner cooperatively follow the pair programming model rotating roles of driver and navigator questioning and making observations as the navigator Did your partner contribute fully fairly and actively to the best of his or her ability to the completion of the lab assignment Was your partner s participation professional and cooperative overall If you believe that your partner did not participate fully and cooperatively you should submit an email to the instructor indicating your concerns Any such emails will be kept confidential A lack of such an email is an indication that your partner participated professionally and cooperatively Students for whom there is no indication that they participated professionally and cooperatively on at least two of the project assignments may have their final course grade lowered The two requirement is reduced to one if the student had no partner for one of the class projects It may be instructive to read a selection of students partner evaluation comments from a previous course they give a picture of what good partnerships are like and a few disasters too ", "_id": "http://www.ics.uci.edu/~dan/class/165/pair.html", "title": " pair programming guidelines\n", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\"\n      \"http://www.w3.org/TR/REC-html40/loose.dtd\">\n<HTML><HEAD>\n<TITLE> Pair Programming Guidelines\n</TITLE>\n</HEAD><BODY>\n<span style=\"color:#000000; font:16px Arial, Helvetica, sans-serif;\">\n\n<center>\n<H2>Pair Programming Guidelines</H2>\n</center>\n\n(Adapted from notes crafted by David G Kay.)\n<P>\nTwo heads are better than one, according to an old saying. This even applies to writing programs: A pair of programmers (working as described here) nearly always beats the stereotypical solitary loner. The pair produces more high-quality code in less time, by far more than two-to-one.\n<P>\nIn pair programming, two programmers share one computer. One is the &quot;driver,&quot; who controls the keyboard and mouse. The other is the &quot;navigator,&quot; who observes, asks questions, suggests solutions, and thinks about slightly longer-term strategies. The two programmers switch roles frequently &mdash; every 15 minutes could be a good interval, though that's flexible. Even the activities of the driver and navigator are flexible (except for who does the typing); the goal is to work together collaboratively, each partner assisting the other as needed, to produce the best joint result possible. It is not pair programming if one person does all the work or if the partners just split up the work and each does half independently.\n<P>\nThat's the basic idea:  You do need to arrange times to meet. We expect everyone to be as flexible and professional as possible in arranging those times as necessary; if your schedule is highly constrained, explore possible meeting times with your prospective partners before you commit to the partnership.\n<P>\nYou may enjoy reading this paper about pair programming: <a href=\"http://portal.acm.org/ft_gateway.cfm?id=332848&type=pdf&coll=ACM&dl=ACM&CFID=12916017&CFTOKEN=16268370\">All I Really Need to Know About Pair Programming I Learned in Kindergarten</a>, by Laurie A. Williams and Robert R. Kessler (Communications of the ACM, May 2000). [<a href=\"http://collaboration.csc.ncsu.edu/laurie/Papers/Kindergarten.PDF\">Alternate link</a>]\n<P>\n<B>What about individual differences?</B> People new to pair programming often ask what happens if the members of the pair have different abilities. Actually, that will be true of any pair of people in the world, probably even including identical twins. The differences may be great or small, one member may have more strengths than the other, but this is exactly like most real-world working situations. Part of accomplishing a task is to get the most out of each member and make each member stronger and more productive on subsequent tasks.\n<P>\nA clearly stronger partner may feel frustrated or slowed down by the other partner, but the stronger partner still benefits from the teamwork in many ways: The other partner's requests for clarification often point out flaws in the approach or solution, the teamwork skills gained have great value in the job market, and the exercise of providing a clear explanation solidifies and deepens the explainer's own understanding.\n<P>\nThe less strong partner may feel that questions hold the other partner back or that there is no benefit to participating actively, but pair programming studies show that paired work is consistently better than work the stronger partner does individually. It is part of each partner's job to understand the whole task; that means asking questions when necessary and answering them when possible.\n<P>\nYou will choose a different partner for every assignment, so your partners' skill levels are certain to vary during the quarter. Still, when you have a choice, you should try to pick a partner whose skill level is close to your own. This won't always be possible, and it's sometimes hard to compare skill levels at all, but we find that pairs are most productive when the partners are at about the same level &mdash; there's a more balanced give-and-take.\n<P>\n<B>How does this affect my grade?</B> Participation in pair programming won't be the cause of any low grades. (Failure to participate fully and cooperatively, on the other hand, could be a problem.) Each pair will submit one solution. Just the &quot;head member&quot; of the pair should submit the solution via Checkmate, which must contain both partners' names at the top of the files. Make sure that your pairing is registered with the class Grader by the <I>registration due date</I> for that assignment. Each pair will receive a single score on the assignment.\n<P>\nTypically, all CompSci 165 students are capable and professional.\nWe expect that the answers to all of the following questions would be &quot;yes&quot;:\n<UL>\n<LI> Did your partner come to the scheduled meetings on time and ready to work?\n<LI> Did your partner read the assignment and preparatory materials before coming to the scheduled meetings, showing up either with specific questions or ready to contribute?\n<LI> Did your partner cooperatively follow the pair programming model (rotating roles of driver and navigator, questioning and making observations as the navigator)?\n<LI> Did your partner contribute fully, fairly, and actively, to the best of his or her ability, to the completion of the lab assignment?\n<LI> Was your partner's participation professional and cooperative overall?\n</UL>\nIf you believe that your partner did not participate fully and cooperatively,\nyou should submit an email to the instructor indicating your concerns.\nAny such emails will be kept confidential.\nA lack of such an email is an indication that your partner participated professionally and cooperatively.\nStudents for whom there is no indication that they participated professionally and cooperatively on at least two of the project assignments may have their final course grade lowered. (The &quot;two&quot; requirement is reduced to &quot;one&quot; if the student had no partner for one of the class projects.)\n<!--\n<P>\nFilling out the evaluation is required of each student for each assignment; forgetting the evaluation will lower your participation score. We will tally these evaluation scores and use them in computing the participation part of the grade (taking care that nobody's score is hurt by a single bad partnership).\n-->\n<P>\nIt may be instructive to read a selection of students' <a href=\"http://www.ics.uci.edu/~kay/courses/i41/hw/evalcomments.html\">partner evaluation comments</a> from a previous course; they give a picture of what good partnerships are like (and a few disasters, too).\n</span>\n</BODY></HTML>\n", "id": 1183.0}