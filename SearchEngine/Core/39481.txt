{"text": "Navigation Up Table of Contents Bibliography Index Title Page TopologicalMapDcel A DCEL Doubly Connected Edge List consists of vertices V edges E facets F and an incidence relation on them Each edge is represented by two halfedges with opposite orientations A DCEL serves as an interface for the Topological map Dcel so a model of it must be provided as a template parameter The predefined DCEL class implementation described in the next section can be used as a starting point for building one s own DCEL class The naming conventions were chosen to comply with those of the Halfedge data structure A model for the TopologicalMapDcel concept must provide the following types and operations In addition to the requirements here the local types Vertex Halfedge and Face must be models of the concepts TopologicalMapDcelVertex TopologicalMapDcelHalfedge and TopologicalMapDcelFace respectively Types TopologicalMapDcel Vertex vertex type TopologicalMapDcel Halfedge halfedge type TopologicalMapDcel Face face type TopologicalMapDcel Size type for size values TopologicalMapDcel Vertex iterator a bidirectional iterator over the vertices Its value type is Vertex TopologicalMapDcel Halfedge iterator a bidirectional iterator over the halfedges Its value type is Halfedge TopologicalMapDcel Face iterator a bidirectional iterator over the faces Its value type is Face Creation TopologicalMapDcel d constructs an empty DCEL with one unbouned face Access Functions Size d size of vertices number of vertices Size d size of halfedges number of halfedges always even Size d size of faces number of faces The following operations have an equivalent const operations such as Vertex const iterator vertices begin etc Vertex iterator d vertices begin returns the begin iterator of the vertices in d Vertex iterator d vertices end returns the past the end iterator of the vertices in d Halfedge iterator d halfedges begin returns the begin iterator of the halfedges in d Halfedge iterator d halfedges end returns the past the end iterator of the halfedges in d Vertex iterator d faces begin returns the begin iterator of the faces in d Vertex iterator d faces end returns the past the end iterator of the faces in d Modifiers The following operations allocate a new element of the respective type Halfedges are always allocated in pairs of opposite halfedges The twin pointers are automatically set Vertex d new vertex creates a default vertex Halfedge d new edge creates a new pair of opposite halfedges Face d new face creates a new face void d delete vertex Vertex v deletes the vertex v void d delete edge Halfedge h deletes the pair of opposite halfedges h void d delete face Face f deletes the face f Has Models Pm dcel V H F See AlsoTopologicalMapDcelVertex TopologicalMapDcelHalfedge TopologicalMapDcelFace Next TopologicalMapDcelVertex Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Topological_map_ref/Concept_TopologicalMapDcel.html", "title": "topologicalmapdcel", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Topological_map_ref/Topological_map_Dcel.tex' -->\n<html> <head>  \n<title>TopologicalMapDcel</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_776\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_786\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Concept.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_TopologicalMapDcel\"></A>\n<h2><I>TopologicalMapDcel</I></h2>\n<P>\n\nA <I>DCEL</I> (Doubly Connected Edge List) consists of vertices V, edges E, facets F and an incidence relation on them. Each edge is\nrepresented by two halfedges with <A HREF=\"../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243\">opposite</A> orientations. \nA <I>DCEL</I> serves as an interface for the <I><A HREF=\"Class_Topological_map.html#Cross_link_anchor_769\">Topological_map</A>&lt;Dcel&gt;</I> so a model of it must be provided as a template parameter.\nThe predefined DCEL class\nimplementation described in the next section can be used \nas a starting point for\nbuilding one's own DCEL class. (The naming conventions were chosen to comply \nwith those of the <I>Halfedge_data_structure</I>.)\n<P>\n\nA model for the <I><A HREF=\"Concept_TopologicalMapDcel.html#Cross_link_anchor_776\">TopologicalMapDcel</A></I> concept must provide the following types and operations. \n(In addition to the requirements here, the local types \n\n<!-- REMOVE_LINKS_BEGIN -->\n<I>Vertex</I>,<I>Halfedge</I> and <I>Face</I>\n<!-- REMOVE_LINKS_END -->\n\nmust be models of the concepts \n<I><A HREF=\"Concept_TopologicalMapDcelVertex.html#Cross_link_anchor_777\">TopologicalMapDcelVertex</A></I>,\n<I><A HREF=\"Concept_TopologicalMapDcelHalfedge.html#Cross_link_anchor_778\">TopologicalMapDcelHalfedge</A></I> and\n<I><A HREF=\"Concept_TopologicalMapDcelFace.html#Cross_link_anchor_779\">TopologicalMapDcelFace</A></I> respectively.)\n<P>\n\n<H3>Types</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_TopologicalMapDcel.html#Cross_link_anchor_776\">TopologicalMapDcel</A>::Vertex\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    vertex type.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_TopologicalMapDcel.html#Cross_link_anchor_776\">TopologicalMapDcel</A>::Halfedge\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    halfedge type.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_TopologicalMapDcel.html#Cross_link_anchor_776\">TopologicalMapDcel</A>::Face\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    face type.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_TopologicalMapDcel.html#Cross_link_anchor_776\">TopologicalMapDcel</A>::Size\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    type for size values.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_TopologicalMapDcel.html#Cross_link_anchor_776\">TopologicalMapDcel</A>::Vertex_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    a bidirectional iterator over the\n\t       vertices. Its value-type is \n               <I>Vertex</I>.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_TopologicalMapDcel.html#Cross_link_anchor_776\">TopologicalMapDcel</A>::Halfedge_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    a bidirectional iterator over the\n\t       halfedges. Its value-type is \n               <I>Halfedge</I>.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_TopologicalMapDcel.html#Cross_link_anchor_776\">TopologicalMapDcel</A>::Face_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    a bidirectional iterator over the\n\t       faces. Its value-type is \n               <I>Face</I>.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Creation</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_TopologicalMapDcel.html#Cross_link_anchor_776\">TopologicalMapDcel</A> d;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    constructs an\n       empty DCEL with one unbouned face.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Access Functions</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Size_size_of_vertices69_const;\"></A>\nSize\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    d.size_of_vertices ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    number of vertices.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Size_size_of_halfedges69_const;\"></A>\nSize\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    d.size_of_halfedges ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    number of halfedges (always even).\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Size_size_of_faces69_const;\"></A>\nSize\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    d.size_of_faces ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    number of faces.\n        </TD></TR>\n        </TABLE>\n<P>\n\nThe following operations have an equivalent <I>const</I> operations\n     such as <I>Vertex_const_iterator  vertices_begin();</I> etc.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Vertex_iterator_vertices_begin69;\"></A>\nVertex_iterator\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    d.vertices_begin ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the begin-iterator of the vertices in <I>d</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Vertex_iterator_vertices_end69;\"></A>\nVertex_iterator\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    d.vertices_end ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the past-the-end iterator of the vertices in <I>d</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Halfedge_iterator_halfedges_begin69;\"></A>\nHalfedge_iterator\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    d.halfedges_begin ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the begin-iterator of the halfedges in <I>d</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Halfedge_iterator_halfedges_end69;\"></A>\nHalfedge_iterator\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    d.halfedges_end ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the past-the-end iterator of the halfedges in <I>d</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Vertex_iterator_faces_begin69;\"></A>\nVertex_iterator\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    d.faces_begin ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the begin-iterator of the faces in <I>d</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Vertex_iterator_faces_end69;\"></A>\nVertex_iterator\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    d.faces_end ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the past-the-end iterator of the faces in <I>d</I>.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Modifiers</H3>\n<P>\n\nThe following operations allocate a new element of the respective type. Halfedges \nare always allocated in pairs of <A HREF=\"../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243\">opposite</A> halfedges. The twin pointers are \nautomatically set.\n<P>\n\n<!-- REMOVE_LINKS_BEGIN -->\n \n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Vertex*_new_vertex69;\"></A>\nVertex*\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    d.new_vertex ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    creates a default vertex.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Halfedge*_new_edge69;\"></A>\nHalfedge*\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    d.new_edge ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    creates a new pair of \n     opposite halfedges.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Face*_new_face69;\"></A>\nFace*\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    d.new_face ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    creates a new face.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_delete_vertex6Vertex*_v9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    d.delete_vertex ( Vertex* v)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    deletes the vertex <MATH><I>v</I></MATH>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_delete_edge6Halfedge*_h9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    d.delete_edge ( Halfedge* h)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    deletes the pair of opposite \n     halfedges <MATH><I>h</I></MATH>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_delete_face6Face*_f9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    d.delete_face ( Face* f)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    deletes the face <MATH><I>f</I></MATH>.\n        </TD></TR>\n        </TABLE>\n\n     \n<!-- REMOVE_LINKS_END -->\n <H3>Has Models</H3>\n<P>\n\n<I><A HREF=\"../Planar_map_ref/Class_Pm_dcel.html#Cross_link_anchor_799\">Pm_dcel</A>&lt;V,H,F&gt;</I><BR>\n\n\n<P>\n\n<H3>See Also</H3><I><A HREF=\"Concept_TopologicalMapDcelVertex.html#Cross_link_anchor_777\">TopologicalMapDcelVertex</A></I><BR>\n\n<I><A HREF=\"Concept_TopologicalMapDcelHalfedge.html#Cross_link_anchor_778\">TopologicalMapDcelHalfedge</A></I><BR>\n\n<I><A HREF=\"Concept_TopologicalMapDcelFace.html#Cross_link_anchor_779\">TopologicalMapDcelFace</A></I>\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Concept_TopologicalMapDcelVertex.html\"><I>TopologicalMapDcelVertex</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_18!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 39481.0}