{"text": "WEBDAV WORKING GROUP Meeting Minutes Washington DC IETF December 8 9 1997 The WEBDAV working group met two times at the Washington IETF meeting on Monday and Tuesday December 8 9 1997 and 78 people attended one or both of the sessions The chair was Jim Whitehead and notes were recorded by Alec Dun Del Jensen and Rohit Khare then edited by Jim Whitehead DASL MINI BOF The Monday session began with a mini BOF on the topic of WEBDAV searching and locating DASL led by Saveen Reddy Saveen began by presenting slides on the goals of searching and locating Efficient searching Properties content Data model for resources Query languages Result set languages Typing Simple complex properties Effects on the HTTP WebDAV protocol Requirements terms search criteria result set result record search scope criteria boolean expressions and or not relative comparators searches on content variants near operator results result record definition standardization results format paged search results search qualifiers scope set of resources depth recursion references delegate the search query language simple query syntax extensible syntax query syntax discovery misc access control internationalization Attendees noted that there was overlap between the issues being considered by LESSOR and DASL as well as between the searching in IMAP LDAP and ACAP and the searching proposed for DASL Specifically it was suggested that search comparators be leveraged from the Lessor group Also a note was made that reusing an existing search syntax would be a good idea A thread of discussion investigated the interaction between DASL and LESSOR asking whether they should have separate or overlapping spheres of work There was a sentiment that DASL would be able to build upon the work of the LESSOR group Saveen gave information on how to become involved in the working group The mailing list is www webdav dasl w3 org send a message with subject subscribe to www webdav dasl request w3 org and the web page for the working group is http www ics uci edu pub ietf dasl Towards the end of the Monday session a participant asked to see the proposed charter of the DASL working group Unfortunately though a proposed charter had been written no slides were available with the proposed charter During the Tuesday session Saveen briefly presented the charter The charter is also available via the DASL web page At the end of the mini BOF a straw poll of the attendees found substantial but not unanimous support for having a DASL working group in the IETF WEBDAV WORKING GROUP MEETING After the DASL mini BOF the WEBDAV session began with a status report on the current documents being developed by the working group This discussion was led by Jim Whitehead and the slides he presented can be found at http www ics uci edu pub ietf webdav washington jim DOCUMENT STATUS REVIEW Requirements Approved as Informational RFC RFC number is still pending Many thanks to Judith Slein for her hard work on this document Distributed Authoring DA Protocol Specification A schedule for completion of this document was presented The chair announced that there will be a working group last call on this document in January ACL Requirements Draft ACL Protocol Draft WebDAV ACL issues are new and not well understood Active participation from the working group is strongly encouraged Initial drafts of both documents are now available Howard Palmer is the editor of the ACL Requirements and Paul Leach and Yaron Goland are the editors of the ACL Protocol document Versioning Protocol Draft Deferred to a later time proposed schedule outlined No objections voiced but clarification asked for time frame Several voiced concern that versioning be done in a timely manner Tree recursive operations Document This draft has been merged into the DA protocol specification No objections raised Scenarios Document There was a call for volunteers to become editor of this document and bring it to completion Walter Houser volunteered ORDERED COLLECTIONS A discussion of open issues in the distributed authoring protocol specification took place during the remainder of the Monday session Jim began by presenting slides summarizing the discussion on the mailing list Functionality for ordered collections was discussed with debate centering on what kind of ordered collection support should be provided and whether the support should be mandatory given the processing burden on servers Why have support for ordered collections Larry Masinter It s not that ordered collections makes products easier to build it s that ordering is inherent anytime there s export for example there needs to be a generic way to traverse it Either of two protocols could work BUT if there s an order property PROPFIND should return them in that order Yaron Goland Ordering can be useful in some scenarios sure The key is should this feature be made mandatory As an implementor most servers don t want to be saddled with this feature LM BUT when you do a PROPFIND it has to come back in SOME order can t you expect to do a PROPFIND twice and get the same ordered response Paul Leach I think you re making a third proposal that there be some consistent ordering e g alphabetical LM are there any implementations where order will NOT be consistent YG if it relates to disk defragmentation ordering Someone Shouldn t order be part of a query language i e deferred to DASL PL does sound reasonable YG In a base WebDAV implementation the client does sorting storage into the order property a DASL enhanced one would do the sort on the server LM There is some natural order the natural way an implementation sends things back in a predictable way BUT if the ordering is not in the spec clients can t rely on it clients that don t know the server s BEST consistent ordering either have to spend time resorting it or have the server sort oddly Alex Hopmann there are two cases 1 clients care about ordering or 2 client wants results returned in ordered fashion We need to handle both cases and not preclude being able to get back in natural fast order A thread of discussion centered on whether the client should maintain the ordering e g with an ordering property which it maintains or whether the server should maintain the ordering Someone It is easy to devise a scenario where the client or the server needs the resources in a specific order These are both valid cases so the protocol needs to provide a way to support both LM The performance argument for ordered collections is that most underlying storage will maintain an order If we don t provide a consistent natural order then we will reduce performance because we will force clients to always do a search on a key We don t enable a solution that works without requiring a search AH If we have a consistent underlying order what constraints based on adds deletes do you make LM There should be a property whose value is used to persist the order PL So if I have 1 item property and delete an entry do I have to reorder all the items LM It doesn t matter just remove that entry and you have a new order PL This is very expensive it will cost a lot to maintain this property properly It s more complex than this Rob We need 3 things no order client can request order server can provide order Someone I agree that collections should have a natural order Does not matter on order alpha etc PL Slight correction the natural ordering of a collection for any given replica of a collection e g a collection in a replicated store will vary from replica to replica No resolution was reached discussion will continue on the list There was much sentiment in favor of creating a separate document to address ordering with some dissenters feeling the issue can be brought to a speedy close on the mailing list There was a final correction by Larry Masinter to the presented slides The multipart related MIME type is not ordered however the multipart mixed MIME type is ordered The multipart alternative MIME type can be considered to be ordered by quality SECURITY CONSIDERATIONS Security considerations were discussed next beginning with a slide presentation reviewing open security issues Keith Moore noted that WebDAV should review the security considerations in the HTTP specification to ensure that no assumptions are broken when performing document authoring A participant raised the question why won t the area directors go with Digest Authentication Keith Moore Thinking out loud Hmmm Digest Authentication might be acceptable since scaling isn t such an issue for authoring I m a little uneasy with the way passwords are handled on the server Are all servers busted if a password is compromised on just one Paul responds No to this Keith continues Gee why not go with Digest Authentication Why don t you guys run this past Jeff Schiller If he buys it so will I The group reached agreement that a the security considerations from HTTP 1 1 need to be reviewed to ensure they are unchanged for the domain of distributed authoring b WEBDAV will mandate use of digest authentication c for cases where greater security that an unencoded session is needed use of TLS will be recommended INDEX and RECURSIVE PROPFIND Finally the working group agreed with the decisions of the Design Team that the INDEX method be removed in conjunction with adding recursive capability to PROPFIND and the PATCH method be moved to the versioning specification ACCESS CONTROL Access Control was the topic of the Tuesday WEBDAV session Howard Palmer led discussion on WEBDAV access control by presenting a series of slides highlighting design issues These slides can be accessed at http www ics uci edu pub ietf webdav washington acl One thread discussed the problem of underlying repositories having access control schemes which vary e g by operating system the difficulty of mapping different schemes into each other and the challenge this poses for WEBDAV access control Since potentially many protocols can access the same resources e g FTP and HTTP access to the same resource perhaps access control is best addressed by a separate working group which considers cross protocol access control However Nick Shelness pointed out that for other working groups which have addressed access control the largest problems were how ACLs are granted or denied in a single overall model Mark Day discouraged spinning off a separate group to address access control opining that a WebDAV protocol without access control is not sufficient for authoring There was no disagreement with this sentiment Nick Shelness There are three options here 1 don t address access control at all 2 since authoring implies identity and AC specification add that to the protocol and 3 the tar pit is any form of prescriptive access control Scott Lawrence You can t get away from 1 the real access control is always going to trump DAV 2 it will differ on different servers by OS etc 3 reflection acting on the AC protocol is important A link based proposal was discussed where each resource has a link to an access control resource which contains an access control specification which can vary across underlying storage repositories This has the advantage that different underlying access control mechanisms can be easily accommodated However Yaron Goland raised concerns about this due to user interface complexity For each access control scheme supported there may need to be a separate user interface and users find access control to be confusing as is Finally Paul Leach recounted an experience he had trying to map an access control list mechanism into the Unix access control mechanism supported by NFS He found it to be very tricky mapping from one to the other using an impedance mismatch analogy No consensus was reached none was expected Discussion on access control will continue on the mailing list ", "_id": "http://www.ics.uci.edu/~ejw/authoring/washington/minutes.html", "title": "webdav wg washington ietf minutes", "html": "<HTML>\n<HEAD>\n<TITLE>WEBDAV WG Washington IETF Minutes</TITLE>\n</HEAD>\n<BODY>\n\n<h2>WEBDAV WORKING GROUP</h2>\n<h3>Meeting Minutes<BR>\nWashington, DC IETF<BR>\nDecember 8-9, 1997</h3>\n\n<P>The WEBDAV working group met two times at the Washington IETF meeting,\non Monday and Tuesday, December 8-9, 1997, and 78 people attended one\nor both of the sessions. The chair was Jim Whitehead, and notes were\nrecorded by Alec Dun, Del Jensen, and Rohit Khare, then edited by Jim\nWhitehead.\n\n<h3>DASL MINI-BOF</h3>\n\n<P>The Monday session began with a mini-BOF on the topic of WEBDAV\nsearching and locating (DASL), led by Saveen Reddy. Saveen began by\npresenting slides on the goals of searching and locating:\n\n<ul>\n<li>Efficient searching\n<li>Properties & content\n<li>Data model for resources\n<li>Query languages\n<li>Result set languages\n<li>Typing\n<li>Simple & complex properties\n<li>Effects on the HTTP + WebDAV protocol\n</ul>\n\n<P>Requirements\n<ul>\n<li>terms:\n<ul>\n<li>search criteria\n<li>result set\n<li>result record\n<li>search scope\n</ul>\n\n<li>criteria:\n<ul>\n<li>boolean expressions: and, or, not\n<li>relative comparators <, >, !=, <=, >=\n<li>searches on content\n<li>variants\n<li>near operator\n</ul>\n\n<li>results\n<ul>\n<li>result record definition\n<li>standardization results format\n<li>paged search results\n</ul>\n\n<li>search qualifiers\n<ul>\n<li>scope: set of resources\n<li>depth: recursion\n<li>references: delegate the search\n</ul>\n\n<li>query language\n<ul>\n<li>simple query syntax\n<li>extensible syntax\n<li>query syntax discovery\n</ul>\n\n<li>misc\n<ul>\n<li>access control\n<li>internationalization\n</ul>\n</ul>\n\n<P>Attendees noted that there was overlap between the issues being\nconsidered by LESSOR and DASL, as well as between the searching in\nIMAP, LDAP, and ACAP and the searching proposed for\nDASL. Specifically, it was suggested that search comparators be\nleveraged from the Lessor group. Also, a note was made that reusing an\nexisting search syntax would be a good idea. A thread of discussion\ninvestigated the interaction between DASL and LESSOR, asking whether\nthey should have separate or overlapping spheres of work. There was a\nsentiment that DASL would be able to build upon the work of the LESSOR\ngroup.\n\n<P>Saveen gave information on how to become involved in the working\ngroup.  The mailing list is www-webdav-dasl@w3.org (send a message\nwith subject \"subscribe\" to www-webdav-dasl-request@w3.org), and the\nweb page for the working group is\n<A HREF=\"http://www.ics.uci.edu/pub/ietf/dasl/\">\nhttp://www.ics.uci.edu/pub/ietf/dasl/</A>.\n\n<P>Towards the end of the Monday session a participant asked to see the\nproposed charter of the DASL working group.  Unfortunately, though a\nproposed charter had been written, no slides were available with the\nproposed charter.  During the Tuesday session, Saveen briefly\npresented the charter.  The charter is also available via the DASL web\npage.\n\n<P>At the end of the mini-BOF, a straw poll of the attendees found\nsubstantial, but not unanimous, support for having a DASL working\ngroup in the IETF.\n\n<h3>WEBDAV WORKING GROUP MEETING</h3>\n\n<P>After the DASL mini-BOF, the WEBDAV session began with a status report\non the current documents being developed by the working group. This\ndiscussion was led by Jim Whitehead, and the slides he presented can\nbe found at\n<A HREF=\"http://www.ics.uci.edu/pub/ietf/webdav/washington/jim/\">\nhttp://www.ics.uci.edu/pub/ietf/webdav/washington/jim/</A>.\n\n<h3>DOCUMENT STATUS REVIEW</h3>\n\n<P><B>Requirements:</b> Approved as Informational RFC, RFC number is still\npending.  Many thanks to Judith Slein for her hard work on this\ndocument.\n\n<P><B>Distributed Authoring (DA) Protocol Specification:</B> A schedule for\ncompletion of this document was presented.  The chair announced that\nthere will be a working group last call on this document in January.\n\n<P><B>ACL Requirements Draft, ACL Protocol Draft:</B> WebDAV ACL\nissues are new, and not well understood.  Active participation from\nthe working group is strongly encouraged. Initial drafts of both\ndocuments are now available.  Howard Palmer is the editor of the ACL\nRequirements, and Paul Leach and Yaron Goland are the editors of the\nACL Protocol document.\n\n<P><B>Versioning Protocol Draft:</B> Deferred to a later time\n(proposed schedule outlined).  No objections voiced, but clarification\nasked for time frame.  Several voiced concern that versioning be done\nin a timely manner.\n\n<P><B>Tree (recursive operations) Document:</B> This draft has been\nmerged into the DA protocol specification. No objections raised.\n\n<P><B>Scenarios Document:</B> There was a call for volunteers to\nbecome editor of this document, and bring it to completion. Walter\nHouser volunteered.\n\n<h3>ORDERED COLLECTIONS</h3>\n\n<P>A discussion of open issues in the distributed authoring protocol\nspecification took place during the remainder of the Monday session.\nJim began by presenting slides summarizing the discussion on the\nmailing list. Functionality for ordered collections was discussed,\nwith debate centering on what kind of ordered collection support\nshould be provided, and whether the support should be mandatory given\nthe processing burden on servers.\n\n<P>Why have support for ordered collections?\n\n<P>Larry Masinter: It's not that ordered collections makes products\neasier to build; it's that ordering is inherent, anytime there's\nexport, for example, there needs to be a generic way to traverse\nit. Either of two protocols could work. BUT, if there's an order\nproperty, PROPFIND should return them in that order.\n\n<P>Yaron Goland: Ordering can be useful in some scenarios, sure. The key\nis, \"should this feature be made mandatory?\" As an implementor, most\nservers don't want to be saddled with this feature.\n\n<P>LM: BUT, when you do a PROPFIND, it has to come back in SOME order --\ncan't you expect to do a PROPFIND twice and get the same ordered\nresponse?\n\n<P>Paul Leach: I think you're making a *third* proposal: that there be\nsome consistent ordering (e.g. alphabetical).\n\n<P>LM: are there any implementations where order will NOT be consistent?\n(YG: if it relates to disk defragmentation ordering...)\n\n<P>Someone: Shouldn't order be part of a query language, i.e. deferred to\nDASL?\n\n<P>PL: does sound reasonable.\n\n<P>YG: In a base WebDAV implementation, the client does sorting, storage\ninto the order property; a DASL-enhanced one would do the sort on the\nserver.\n\n<P>LM: There is some natural order; the natural way an implementation\nsends things back in a predictable way. BUT, if the ordering is not in\nthe spec, clients can't rely on it; clients that don't know the\nserver's BEST consistent ordering either have to spend time resorting\nit, or have the server sort oddly.\n\n<P>Alex Hopmann: there are two cases: (1) clients care about ordering or\n(2) client wants results returned in ordered fashion.  We need to\nhandle both cases and not preclude being able to get back in natural\n(fast) order.\n\n<P>A thread of discussion centered on whether the client should maintain\nthe ordering (e.g., with an ordering property which it maintains), or\nwhether the server should maintain the ordering.\n\n<P>Someone: It is easy to devise a scenario where the client or the\nserver needs the resources in a specific order.  These are both valid\ncases, so the protocol needs to provide a way to support both.\n\n<P>LM: The performance argument for ordered collections is that most\nunderlying storage will maintain an order.  If we don't provide a\nconsistent natural order, then we will reduce performance because we\nwill force clients to always do a search on a key.  We don't enable a\nsolution that works without requiring a search.\n\n<P>AH: If we have a consistent underlying order, what constraints based\non adds/deletes do you make?\n\n<P>LM: There should be a property whose value is used to persist the order.\n\n<P>PL: So if I have 100,000 item property and delete an entry, do I have\nto reorder all the items?\n\n<P>LM: It doesn't matter, just remove that entry and you have a new order.\n\n<P>PL: This is very expensive, it will cost a lot to maintain this\nproperty properly.  It's more complex than this.\n\n<P>Rob: We need 3 things, no order, client can request order, server can\nprovide order.\n\n<P>Someone: I agree that collections should have a natural order.  Does\nnot matter on order (alpha, etc).\n\n<P>PL: Slight correction, the natural ordering of a collection for any\ngiven replica of a collection (e.g., a collection in a replicated\nstore) will vary from replica to replica.\n\n<P>No resolution was reached, discussion will continue on the list.\nThere was much sentiment in favor of creating a separate document to\naddress ordering, with some dissenters feeling the issue can be\nbrought to a speedy close on the mailing list.\n\n<P>There was a final correction (by Larry Masinter) to the presented\nslides: The multipart/related MIME type is not ordered, however, the\nmultipart/mixed MIME type is ordered.  The multipart/alternative MIME\ntype can be considered to be ordered by quality.\n\n<h3>SECURITY CONSIDERATIONS</h3>\n\n<P>Security considerations were discussed next, beginning with a slide\npresentation reviewing open security issues.  Keith Moore noted that\nWebDAV should review the security considerations in the HTTP\nspecification to ensure that no assumptions are broken when performing\ndocument authoring.\n\n<P>A participant raised the question: why won't the area directors go\nwith Digest Authentication?\n\n<P>Keith Moore: (Thinking out loud) Hmmm.  Digest Authentication might be\nacceptable since scaling isn't such an issue for authoring.  I'm a\nlittle uneasy with the way passwords are handled on the server.  Are\nall servers busted if a password is compromised on just one? (Paul\nresponds 'No' to this.  Keith continues.)  Gee, why not go with Digest\nAuthentication?  Why don't you guys run this past Jeff Schiller.  If\nhe buys it, so will I.\n\n<P>The group reached agreement that a) the security considerations from\nHTTP/1.1 need to be reviewed to ensure they are unchanged for the\ndomain of distributed authoring, b) WEBDAV will mandate use of digest\nauthentication, c) for cases where greater security that an unencoded\nsession is needed, use of TLS will be recommended.\n\n<h3>INDEX and RECURSIVE PROPFIND</h3>\n\n<P>Finally, the working group agreed with the decisions of the Design\nTeam that the INDEX method be removed in conjunction with adding\nrecursive capability to PROPFIND, and the PATCH method be moved to the\nversioning specification.\n\n<h3>ACCESS CONTROL</h3>\n\n<P>Access Control was the topic of the Tuesday WEBDAV session.  Howard\nPalmer led discussion on WEBDAV access control by presenting a series\nof slides highlighting design issues. These slides can be accessed at\n<A HREF=\"http://www.ics.uci.edu/pub/ietf/webdav/washington/acl/\">\nhttp://www.ics.uci.edu/pub/ietf/webdav/washington/acl/</A>.\n\n<P>One thread discussed the problem of underlying repositories having\naccess control schemes which vary (e.g., by operating system), the\ndifficulty of mapping different schemes into each other, and the\nchallenge this poses for WEBDAV access control.  Since potentially\nmany protocols can access the same resources (e.g., FTP and HTTP\naccess to the same resource), perhaps access control is best addressed\nby a separate working group which considers cross-protocol access\ncontrol. However, Nick Shelness pointed out that for other working\ngroups which have addressed access control, the largest problems were\nhow ACLs are granted or denied in a single overall model.  Mark Day\ndiscouraged spinning off a separate group to address access control,\nopining that a WebDAV protocol without access control is not\nsufficient for authoring. There was no disagreement with this\nsentiment.\n\n<P>Nick Shelness: There are three options here: 1) don't address access\ncontrol at all, 2) since authoring implies identity and AC\nspecification, add that to the protocol, and 3) (the tar pit) is any\nform of prescriptive access control.\n\n<P>Scott Lawrence: You can't get away from: 1) the real access control is\nalways going to trump DAV, 2) it will differ on different servers (by\nOS, etc), 3) reflection (acting on the AC protocol) is important.\n\n<P>A link-based proposal was discussed, where each resource has a link to\nan access control resource which contains an access control\nspecification, which can vary across underlying storage\nrepositories. This has the advantage that different underlying access\ncontrol mechanisms can be easily accommodated.  However, Yaron Goland\nraised concerns about this due to user interface complexity.  For each\naccess control scheme supported, there may need to be a separate user\ninterface, and users find access control to be confusing as-is.\n\n<P>Finally, Paul Leach recounted an experience he had trying to map an\naccess control list mechanism into the Unix access control mechanism\nsupported by NFS.  He found it to be very tricky mapping from one to\nthe other, using an \"impedance mismatch\" analogy.\n\n<P>No consensus was reached (none was expected). Discussion on access\ncontrol will continue on the mailing list.\n\n</BODY>\n</HTML>", "id": 32464.0}