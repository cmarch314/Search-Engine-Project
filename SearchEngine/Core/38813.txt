{"text": "Navigation Up Table of Contents Bibliography Index Title Page MeshingCriteria 2 Definition The concept MeshingCriteria 2 defines the meshing criteria to be used in the algorithm It provides a predicate Is bad that tests a triangle according to criteria The return type of Is bad is an enum Mesh 2 Face badness The possible values of Mesh 2 Face badness are NOT BAD BAD and IMPERATIVELY BAD If the predicate returns BAD the triangle is marked as bad and the algorithm will try to destroy it If the predicates returns IMPERATIVELY BAD the algorithm will destroy the triangle unconditionally during its execution The termination of the algorithm is guaranteed when criteria are shape criteria corresponding to a bound on smallest angles not less than 2 7 degrees this corresponds to a radius edge ratio bound not less than sqrt 2 Any size criteria that are satisfied by small enough tetrahedra can be added to the set of criteria without compromising the termination Note that in the presence of input angles smaller than 6 degrees some bad shaped triangles can appear in the finale mesh in the neighboring of small angles To achieve termination and the respect of size criteria everywhere the Is bad predicate has to return IMPERATIVELY BAD when size criteria are not satisfied and BAD when shape criteria are not satisfied MeshingCriteria 2 also provides a type Quality designed to code a quality measure for triangles The type Quality must be less than comparable as the meshing algorithm will order bad triangles by quality to split those with smallest quality first The predicate Is bad computes the quality of the triangle as a by product Types MeshingCriteria 2 Face handle Handle to a face of the triangulation MeshingCriteria 2 Quality Copy constructible assignable and less than comparable type MeshingCriteria 2 Is bad Predicate object Must provide two operators The first operator Mesh 2 Face badness operator Face handle fh Quality q returns NOT BAD if it satisfies the desired criteria for mesh triangles BAD if it does not and IMPERATIVELY BAD if it does not and should be refined unconditionally In addition this operator assigns to q a value measuring the quality of the triangle pointed by fh The second operator Mesh 2 Face badness operator Quality q returns NOT BAD if q is the quality of a good triangle BAD if the q represents a poor quality and IMPERATIVELY BAD if q represents the quality of a bad triangle that should be refined unconditionally Access to predicate and constructor objects Is bad traits is bad object Has ModelsDelaunay mesh criteria 2 CDT Delaunay mesh size criteria 2 CDT Next DelaunayMeshFaceBase 2 Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Mesh_2_ref/Concept_MeshingCriteria_2.html", "title": "meshingcriteria_2", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Mesh_2_ref/MeshingCriteria_2.tex' -->\n<html> <head>  \n<title>MeshingCriteria_2</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_1087\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_993\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Concept.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_MeshingCriteria_2\"></A>\n<h2><I>MeshingCriteria_2</I></h2>\n<P>\n\n<H3>Definition</H3>\n<P>\n\nThe concept <I><A HREF=\"Concept_MeshingCriteria_2.html#Cross_link_anchor_1087\">MeshingCriteria_2</A></I> defines the meshing criteria to be used in the\nalgorithm. It provides a predicate <I>Is_bad</I> that tests a triangle\naccording to criteria. The return type of <I>Is_bad</I> is an <A HREF=\"../Polyhedron_ref/Class_Polyhedron_incremental_builder_3#Enum_enum\">enum</A>\n<I><A HREF=\"Enum_Mesh_2--Face_badness.html#Cross_link_anchor_1100\">Mesh_2::Face_badness</A></I>.\n<P>\n\nThe possible values of <I><A HREF=\"Enum_Mesh_2--Face_badness.html#Cross_link_anchor_1100\">Mesh_2::Face_badness</A></I> are <I><A HREF=\"Enum_Mesh_2--Face_badness#Enum_Face_badness\">NOT_BAD</A></I>,\n<I><A HREF=\"Enum_Mesh_2--Face_badness#Enum_Face_badness\">BAD</A></I> and <I><A HREF=\"Enum_Mesh_2--Face_badness#Enum_Face_badness\">IMPERATIVELY_BAD</A></I>. If the predicate returns <I><A HREF=\"Enum_Mesh_2--Face_badness#Enum_Face_badness\">BAD</A></I>,\nthe triangle is marked as bad and the algorithm will try to destroy it. If\nthe predicates returns <I><A HREF=\"Enum_Mesh_2--Face_badness#Enum_Face_badness\">IMPERATIVELY_BAD</A></I>, the algorithm will destroy\nthe triangle unconditionally during its execution.\n<P>\n\nThe termination of the algorithm is guaranteed when criteria are shape\ncriteria corresponding to a bound on smallest angles not less than\n<MATH><I>20.7</I></MATH> degrees (this corresponds to a radius-edge ratio bound not less\nthan <MATH><I><A HREF=\"../NumberTypeSupport_ref/Function_sqrt.html#Cross_link_anchor_1414\">sqrt</A>(2)</I></MATH>). Any size criteria that are satisfied by small enough\ntetrahedra can be added to the set of criteria without compromising\nthe termination.\n<P>\n\nNote that, in the presence of input angles smaller than <MATH><I>60</I></MATH>&nbsp;degrees,\nsome bad shaped triangles can appear in the finale mesh in the\nneighboring of small angles. To achieve termination and the respect of\nsize criteria everywhere, the <I>Is_bad</I> predicate has to return\n<I><A HREF=\"Enum_Mesh_2--Face_badness#Enum_Face_badness\">IMPERATIVELY_BAD</A></I> when size criteria are not satisfied, and\n<I><A HREF=\"Enum_Mesh_2--Face_badness#Enum_Face_badness\">BAD</A></I> when shape criteria are not satisfied.\n<P>\n\n<I><A HREF=\"Concept_MeshingCriteria_2.html#Cross_link_anchor_1087\">MeshingCriteria_2</A></I> also provides a type <I>Quality</I> designed to code a quality\nmeasure for triangles.  The type <I>Quality</I> must be <I>less-than\n  comparable</I> as the meshing algorithm will order bad triangles by quality,\nto split those with smallest quality first. The predicate <I>Is_bad</I>\ncomputes the quality of the triangle as a by-product.\n<P>\n\n<H3>Types</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_MeshingCriteria_2.html#Cross_link_anchor_1087\">MeshingCriteria_2</A>::Face_handle\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    <A HREF=\"../Handle_ref/Concept_Handle.html#Cross_link_anchor_1663\">Handle</A> to a face of the triangulation.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_MeshingCriteria_2.html#Cross_link_anchor_1087\">MeshingCriteria_2</A>::Quality\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Copy constructible, assignable, and less-than\n  comparable type.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_MeshingCriteria_2.html#Cross_link_anchor_1087\">MeshingCriteria_2</A>::Is_bad\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Predicate object. Must provide two operators. The\n  first operator <I><A HREF=\"Enum_Mesh_2--Face_badness.html#Cross_link_anchor_1100\">Mesh_2::Face_badness</A> operator()(Face_handle fh,     Quality&amp; q)</I> returns <I><A HREF=\"Enum_Mesh_2--Face_badness#Enum_Face_badness\">NOT_BAD</A></I> if it satisfies the desired criteria\n  for mesh triangles, <I><A HREF=\"Enum_Mesh_2--Face_badness#Enum_Face_badness\">BAD</A></I> if it does not, and <I><A HREF=\"Enum_Mesh_2--Face_badness#Enum_Face_badness\">IMPERATIVELY_BAD</A></I>\n  if it does not and should be refined unconditionally. In addition, this\n  operator assigns to <I>q</I> a value measuring the quality of the triangle\n  pointed by <I>fh</I>. The second operator <I><A HREF=\"Enum_Mesh_2--Face_badness.html#Cross_link_anchor_1100\">Mesh_2::Face_badness</A>     operator()(Quality q)</I> returns <I><A HREF=\"Enum_Mesh_2--Face_badness#Enum_Face_badness\">NOT_BAD</A></I> if <I>q</I> is the quality\n  of a good triangle, <I><A HREF=\"Enum_Mesh_2--Face_badness#Enum_Face_badness\">BAD</A></I> if the <I>q</I> represents a poor quality,\n  and <I><A HREF=\"Enum_Mesh_2--Face_badness#Enum_Face_badness\">IMPERATIVELY_BAD</A></I> if <I>q</I> represents the quality of a bad\n  triangle that should be refined unconditionally.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Access to predicate and constructor objects</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Is_bad_is_bad_object69;\"></A>\nIs_bad\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.is_bad_object ()\n        </I></NOBR>\n        \n    \n        </TR>\n        </TABLE>\n<P>\n\n<H3>Has Models</H3><I><A HREF=\"Class_Delaunay_mesh_criteria_2.html#Cross_link_anchor_1094\">Delaunay_mesh_criteria_2</A>&lt;CDT&gt;</I><BR>\n\n<I><A HREF=\"Class_Delaunay_mesh_size_criteria_2.html#Cross_link_anchor_1096\">Delaunay_mesh_size_criteria_2</A>&lt;CDT&gt;</I>\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Concept_DelaunayMeshFaceBase_2.html\"><I>DelaunayMeshFaceBase_2</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_48!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 38813.0}