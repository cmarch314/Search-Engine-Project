{"text": "View Javadoc 1 2 Created on Oct 19 2 4 3 4 To change the template for this generated file go to 5 Window gt Preferences gt Java gt Code Generation gt Code and Comments 6 7 package swirl workspace persistence 8 9 1 import java io IOException 11 import java util HashMap 12 import java util Iterator 13 import java util Map 14 15 import org apache commons httpclient methods DeleteMethod 16 import org apache commons httpclient methods GetMethod 17 import org apache commons httpclient methods PutMethod 18 import org apache commons logging Log 19 import org apache commons logging LogFactory 2 import org apache webdav lib methods MkcolMethod 21 import org apache webdav lib methods MoveMethod 22 import org apache webdav lib methods PropFindMethod 23 import org picocontainer Startable 24 25 import swirl workspace App 26 import swirl workspace Peer 27 import swirl workspace PeerManager 28 import swirl workspace messages MessageProcessor 29 import swirl workspace security SecurityManager 3 import swirl workspace security SwirlSecurity 31 import swirl workspace viz Model 32 import swirl workspace viz ModelListener 33 import swirl workspace viz SharingLevel 34 import swirl workspace viz pie FileElement 35 36 37 author Kari 38 39 To change the template for this generated type comment go to 4 Window gt Preferences gt Java gt Code Generation gt Code and Comments 41 42 public class PersistenceManager implements Startable MessageProcessor ModelListener 43 44 PeerManager peerManager 45 SecurityManager securityManager 46 47 public static final String SLIDE slide 48 public static final String LOCALHOST http localhost App PORT 49 public static final String BACKUPDIR backupdir 5 public static final String BACKUPPREFIX SLIDE BACKUPDIR 51 52 public static final String BACKUPDIRPATH LOCALHOST BACKUPPREFIX 53 public static final String TESTFILE BACKUPDIRPATH testfile txt 54 55 56 private Map persistentFiles 57 58 private Peer me 59 6 private Model model 61 62 63 TODO 64 protected Log log LogFactory getLog this getClass 65 66 67 68 non Javadoc 69 see org picocontainer Startable start 7 71 public void start 72 TODO Auto generated method stub 73 if log isDebugEnabled 74 75 log debug In PersistenceManager start 76 77 78 String myId PeerManager getLocalUserID 79 if log isDebugEnabled 8 81 log debug LocalUserId is myId 82 83 me peerManager getPeer myId 84 if log isDebugEnabled 85 86 log debug Me peer me 87 88 89 initialize the local ist of perssitent files 9 persistentFiles new HashMap 91 92 clean out any existing backup directory 93 deleteHiddenBackupDir 94 95 create a hidden backup directory 96 MkcolMethod mkcol new MkcolMethod BACKUPDIRPATH 97 try 98 if log isDebugEnabled 99 1 log debug executing mkcol for backup dir me 1 1 1 2 me executeHttpRequestMethodWithoutLog mkcol 1 3 if log isDebugEnabled 1 4 1 5 log debug put status mkcol getStatusText 1 6 1 7 1 8 catch Exception ex 1 9 11 System err println error 111 ex printStackTrace 112 113 set permissions on backup directory 114 if log isDebugEnabled 115 116 log debug Setting backupdir permissions 117 118 securityManager setSecurityLevel BACKUPDIRPATH SwirlSecurity BACKUP SwirlSecurity READ WRITE COPY 119 if log isDebugEnabled 12 121 log debug BACKUP set 122 123 securityManager setSecurityLevel BACKUPDIRPATH SwirlSecurity OTHERS SwirlSecurity HIDDEN 124 if log isDebugEnabled 125 126 log debug OTHERS set 127 128 securityManager setSecurityLevel BACKUPDIRPATH SwirlSecurity ME SwirlSecurity HIDDEN 129 if log isDebugEnabled 13 131 log debug ME set 132 133 134 now we need to populate it with the persitent files acquired from the model 135 FileElement allFiles model getFiles 136 this filesAdded allFiles 137 138 register as a model listener 139 model addModelChangeListener this 14 141 142 non Javadoc 143 see org picocontainer Startable stop 144 145 public void stop 146 TODO Auto generated method stub 147 148 149 15 non Javadoc 151 see swirl workspace messages MessageProcessor processMessage java util Map 152 153 public void processMessage Map msg 154 TODO Auto generated method stub 155 156 157 158 public PersistenceManager PeerManager peerManager SecurityManager securityManager Model model 159 this peerManager peerManager 16 this securityManager securityManager 161 this model model 162 163 164 non Javadoc 165 see swirl workspace viz ModelListener swirl workspace viz pie FileElement 166 167 public synchronized void fileAdded FileElement file 168 if log isDebugEnabled 169 17 log debug in PersistenceManager fileAdded getSwirlURI file 171 172 check if file is persistence 173 174 if fileIsPersistent file 175 if log isDebugEnabled 176 177 log debug file is persistent 178 179 if isMyFile file 18 if log isDebugEnabled 181 182 log debug file is not mine 183 184 persistentFiles put getSwirlURI file file 185 putHiddenBackup file 186 187 188 189 19 non Javadoc 191 see swirl workspace viz ModelListener swirl workspace viz pie FileElement 192 193 public synchronized void fileUpdated FileElement file 194 if log isDebugEnabled 195 196 log debug in PersistenceManager fileUpdated getSwirlURI file 197 198 fileAdded file 199 2 2 1 non Javadoc 2 2 see swirl workspace viz ModelListener fileDeleted swirl workspace viz pie FileElement 2 3 2 4 public void fileDeleted FileElement file 2 5 if log isDebugEnabled 2 6 2 7 log debug in fileDeleted file getKey 2 8 2 9 if perisitent and not mine remove from list and remove backup 21 if isMyFile file 211 remove from persistent files map 212 persistentFiles remove getSwirlURI file 213 delete hidden backup 214 deleteHiddenBackup file 215 216 217 218 non Javadoc 219 see swirl workspace viz ModelListener filesAdded swirl workspace viz pie FileElement 22 221 public void filesAdded FileElement files 222 if log isDebugEnabled 223 224 log debug in PersistenceManager filesAdded number of files files length 225 226 for int i i files length i 227 fileAdded files i 228 229 23 231 232 non Javadoc 233 see swirl workspace viz ModelListener replaceFiles java lang String swirl workspace viz pie FileElement 234 235 public void replaceFiles String peerId FileElement files 236 log warn WARNING PersistentManager recieved replaceFiles notification 237 238 239 non Javadoc 24 see swirl workspace viz ModelListener propertiesChanged swirl workspace viz pie FileElement 241 242 We need to synchronize this method because as we drag the file through the 243 cirles in the GUI this method gets called multiple times It may happen that two 244 threads get to execute this method at the same time creating a backup file on 245 top of an existing one in progress of being created 246 247 public synchronized void propertiesChanged FileElement file java util Map msg 248 see if we have a sharing degree change 249 if msg containsKey SET SharingLevel SHARING PROPERTY NAME 25 String path getSwirlURI file 251 if log isDebugEnabled 252 253 log debug in PersistenceManager propertiesChanged path 254 255 check if file is persistence 256 if fileIsPersistent file 257 if isMyFile file 258 check if it is in our list of persistent files if so then we already have a backup 259 in the case where a backup file has been recovered elsewhere avoid recreating backup 26 if persistentFiles containsKey path 261 putHiddenBackup file 262 263 persistentFiles put path file 264 265 else 266 check if files was moved out of persistent sharing level 267 if persistentFiles containsKey path 268 if log isDebugEnabled 269 27 log debug file path moved out of persistent level deleting hidden backup 271 272 persistentFiles remove path 273 deleteHiddenBackup file 274 275 276 277 278 279 non Javadoc 28 see swirl workspace viz ModelListener userJoined swirl workspace Peer 281 282 public void userJoined Peer peer 283 TODO Auto generated method stub 284 285 286 287 non Javadoc 288 see swirl workspace viz ModelListener userLeft java lang String 289 29 public synchronized void userLeft String peerId 291 check if I am the next master 292 boolean iAmNext amINextMaster 293 if log isDebugEnabled 294 295 log debug in userLeft peerId iAmNext iAmNext 296 297 did they have any persistent files check the map 298 if log isDebugEnabled 299 3 log debug number of entries in persistentFiles map persistentFiles entrySet size 3 1 3 2 FileElement files new FileElement persistentFiles entrySet size 3 3 if log isDebugEnabled 3 4 3 5 log debug number of files in files array files length 3 6 3 7 persistentFiles values toArray files 3 8 FileElement fe 3 9 31 if iAmNext 311 for int i i files length i 312 fe files i 313 if log isDebugEnabled 314 315 log debug fe getOwnerKey 316 317 if fe getOwnerKey equals peerId 318 if log isDebugEnabled 319 32 log debug promoting file fe getKey 321 322 promoteBackupToMaster fe 323 persistentFiles remove getSwirlURI fe 324 325 326 327 else 328 for int i i files length i 329 fe files i 33 if log isDebugEnabled 331 332 log debug fe getOwnerKey 333 334 if fe getOwnerKey equals peerId 335 if log isDebugEnabled 336 337 log debug urlmapping update file fe getKey 338 339 updateUrlToHostMapping fe 34 341 342 343 344 345 346 non Javadoc 347 see swirl workspace viz ModelListener flashIt swirl workspace viz pie FileElement java lang String 348 349 public void flashIt FileElement fe String uColor 35 TODO Auto generated method stub 351 352 353 354 private boolean fileIsPersistent FileElement file 355 int SharingLevel file getShareDegree getValue 356 if log isDebugEnabled 357 358 log debug in fileIsPersistent sharing level for file getKey is SharingLevel 359 36 return SharingLevel 4 361 362 363 private String getSwirlURI FileElement file 364 return getSlideURI file replaceFirst slide swirl 365 366 367 private String getSlideURI FileElement file 368 String slidePath file getKey 369 return LOCALHOST slidePath 37 371 372 private boolean equals FileElement file1 FileElement file2 373 return getSwirlURI file1 equals getSwirlURI file2 374 375 376 private boolean isMyFile FileElement file 377 return file getOwnerKey equals me getUniqueID 378 379 38 private String createBackupPath String path 381 String backupPath 382 int i path lastIndexOf 383 String front path substring i 1 384 String back path substring i 1 385 backupPath front BACKUPDIR back 386 return backupPath replaceFirst swirl slide 387 388 389 39 return returns true if my peerID is the smallest lexographically in the list of existing peers 391 392 private boolean amINextMaster 393 Map peers peerManager getPeers 394 Iterator iter peers values iterator 395 String smallestID 396 if iter hasNext 397 smallestID Peer iter next getUniqueID 398 else return false 399 4 while iter hasNext 4 1 Peer peer Peer iter next 4 2 String id peer getUniqueID 4 3 if id compareTo smallestID 4 4 smallestID id 4 5 4 6 4 7 return smallestID equals me getUniqueID 4 8 4 9 41 411 private void putHiddenBackup FileElement file 412 get contents of file 413 if log isDebugEnabled 414 415 log debug in putHiddenBackup 416 417 String path getSlideURI file getSwirlURI file 418 Peer peer peerManager getPeer file getOwnerKey 419 42 if log isDebugEnabled 421 422 log debug constructing GetMethod on path path 423 424 425 boolean getDone false 426 GetMethod get null 427 while getDone 428 get new GetMethod path 429 if log isDebugEnabled 43 431 log debug after constructing a new GetMethod 432 433 try 434 if log isDebugEnabled 435 436 log debug executing get for backup file contents peer 437 438 make slide call directly to peer to allow filtering 439 this hides the get when making a backup copy 44 int status peer executeHttpRequestMethodWithoutLog get 441 if status 2 ugly 442 getDone true 443 if log isDebugEnabled 444 445 log debug get status get getStatusText 446 447 448 catch Exception ex 449 45 System err println error 451 ex printStackTrace 452 453 454 455 String backupPath createBackupPath path 456 if log isDebugEnabled 457 458 log debug creating backup file at backupPath 459 46 PutMethod put new PutMethod backupPath 461 put setRequestBody get getResponseBodyAsString 462 try 463 if log isDebugEnabled 464 465 log debug executing put for backup file me 466 467 me executeHttpRequestMethodWithoutLog put 468 if log isDebugEnabled 469 47 log debug put status put getStatusText 471 472 473 catch Exception ex 474 475 System err println error 476 ex printStackTrace 477 478 479 48 private void deleteHiddenBackup FileElement file 481 DeleteMethod delete new DeleteMethod createBackupPath getSwirlURI file 482 try 483 log debug executing delete for backup file me 484 me executeHttpRequestMethodWithoutLog delete 485 log debug get status delete getStatusText 486 487 catch Exception ex 488 489 System err println error 49 ex printStackTrace 491 492 493 494 private void deleteHiddenBackupDir 495 DeleteMethod delete new DeleteMethod BACKUPDIRPATH 496 try 497 if log isDebugEnabled 498 499 log debug executing delete for backup dir me 5 5 1 me executeHttpRequestMethodWithoutLog delete 5 2 if log isDebugEnabled 5 3 5 4 log debug get status delete getStatusText 5 5 5 6 5 7 catch Exception ex 5 8 5 9 System err println error 51 ex printStackTrace 511 512 513 514 515 private void promoteBackupToMaster FileElement file 516 String path file getKey 517 518 String backupPath createBackupPath path 519 move backup file out of backup directory 52 if log isDebugEnabled 521 522 log debug moving backup from backupPath to path 523 524 MoveMethod move new MoveMethod backupPath path true 525 try 526 if log isDebugEnabled 527 528 log debug executing move for backup file me 529 53 me executeHttpRequestMethod move 531 if log isDebugEnabled 532 533 log debug move status move getStatusText 534 535 536 catch Exception ex 537 538 System err println error 539 ex printStackTrace 54 541 if log isDebugEnabled 542 543 log debug setting sharing level on path 544 545 model setSharingDegree file new SharingLevel 4 546 updateUrlToHostMapping file 547 548 549 private void updateUrlToHostMapping FileElement file 55 try 551 Thread sleep 1 552 catch InterruptedException e1 553 TODO Auto generated catch block 554 e1 printStackTrace 555 556 557 String path file getKey 558 559 String backupPath createBackupPath path 56 561 execute a propfind to try to force the host file mapping to update in the proxy 562 int retry 1 563 try 564 for int i i retry i 565 PropFindMethod propFind new PropFindMethod swirl 1 566 int status me executeHttpRequestMethodWithoutLog propFind 567 if log isDebugEnabled 568 569 log debug Second Propfind Integer toString status 57 571 if status 2 status 2 7 572 break 573 574 catch IOException e 575 e printStackTrace 576 577 String swirlPath path replaceFirst slide swirl 578 try 579 for int i i retry i 58 PropFindMethod propFind2 new PropFindMethod swirlPath 1 581 int status me executeHttpRequestMethodWithoutLog propFind2 582 if log isDebugEnabled 583 584 log debug Second Propfind Integer toString status 585 586 if status 2 status 2 7 587 break 588 589 catch IOException e 59 e printStackTrace 591 592 593 594 non Javadoc 595 see swirl workspace viz ModelListener backupPromotedToPersistent swirl workspace viz pie FileElement 596 597 public void backupPromotedToPersistent FileElement file 598 TODO Auto generated method stub 599 6 6 1 6 2 non Javadoc 6 3 see swirl workspace messages MessageProcessor initialMessageProcessor 6 4 6 5 public void initializeMessageProcessor 6 6 TODO Auto generated method stub 6 7 6 8 6 9 61 611 612 613 614 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.20/xref/swirl/workspace/persistence/PersistenceManager.html", "title": "persistencemanager xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>PersistenceManager xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../../stylesheet.css\" />\n</head>\n<body>\n<div id=\"overview\"><a href=\"../../../../apidocs/swirl/workspace/persistence/PersistenceManager.html\">View Javadoc</a></div><pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <em class=\"comment\">/*</em>\n<a name=\"2\" href=\"#2\">2</a>   <em class=\"comment\"> * Created on Oct 19, 2004</em>\n<a name=\"3\" href=\"#3\">3</a>   <em class=\"comment\"> *</em>\n<a name=\"4\" href=\"#4\">4</a>   <em class=\"comment\"> * To change the template for this generated file go to</em>\n<a name=\"5\" href=\"#5\">5</a>   <em class=\"comment\"> * Window&amp;gt;Preferences&amp;gt;Java&amp;gt;Code Generation&amp;gt;Code and Comments</em>\n<a name=\"6\" href=\"#6\">6</a>   <em class=\"comment\"> */</em>\n<a name=\"7\" href=\"#7\">7</a>   <strong>package</strong> <a href=\"../../../swirl/workspace/persistence/package-summary.html\">swirl.workspace.persistence</a>;\n<a name=\"8\" href=\"#8\">8</a>   \n<a name=\"9\" href=\"#9\">9</a>   \n<a name=\"10\" href=\"#10\">10</a>  <strong>import</strong> java.io.IOException;\n<a name=\"11\" href=\"#11\">11</a>  <strong>import</strong> java.util.HashMap;\n<a name=\"12\" href=\"#12\">12</a>  <strong>import</strong> java.util.Iterator;\n<a name=\"13\" href=\"#13\">13</a>  <strong>import</strong> java.util.Map;\n<a name=\"14\" href=\"#14\">14</a>  \n<a name=\"15\" href=\"#15\">15</a>  <strong>import</strong> org.apache.commons.httpclient.methods.DeleteMethod;\n<a name=\"16\" href=\"#16\">16</a>  <strong>import</strong> org.apache.commons.httpclient.methods.GetMethod;\n<a name=\"17\" href=\"#17\">17</a>  <strong>import</strong> org.apache.commons.httpclient.methods.PutMethod;\n<a name=\"18\" href=\"#18\">18</a>  <strong>import</strong> org.apache.commons.logging.Log;\n<a name=\"19\" href=\"#19\">19</a>  <strong>import</strong> org.apache.commons.logging.LogFactory;\n<a name=\"20\" href=\"#20\">20</a>  <strong>import</strong> org.apache.webdav.lib.methods.MkcolMethod;\n<a name=\"21\" href=\"#21\">21</a>  <strong>import</strong> org.apache.webdav.lib.methods.MoveMethod;\n<a name=\"22\" href=\"#22\">22</a>  <strong>import</strong> org.apache.webdav.lib.methods.PropFindMethod;\n<a name=\"23\" href=\"#23\">23</a>  <strong>import</strong> org.picocontainer.Startable;\n<a name=\"24\" href=\"#24\">24</a>  \n<a name=\"25\" href=\"#25\">25</a>  <strong>import</strong> swirl.workspace.App;\n<a name=\"26\" href=\"#26\">26</a>  <strong>import</strong> swirl.workspace.Peer;\n<a name=\"27\" href=\"#27\">27</a>  <strong>import</strong> swirl.workspace.PeerManager;\n<a name=\"28\" href=\"#28\">28</a>  <strong>import</strong> swirl.workspace.messages.MessageProcessor;\n<a name=\"29\" href=\"#29\">29</a>  <strong>import</strong> swirl.workspace.security.SecurityManager;\n<a name=\"30\" href=\"#30\">30</a>  <strong>import</strong> swirl.workspace.security.SwirlSecurity;\n<a name=\"31\" href=\"#31\">31</a>  <strong>import</strong> swirl.workspace.viz.Model;\n<a name=\"32\" href=\"#32\">32</a>  <strong>import</strong> swirl.workspace.viz.ModelListener;\n<a name=\"33\" href=\"#33\">33</a>  <strong>import</strong> swirl.workspace.viz.SharingLevel;\n<a name=\"34\" href=\"#34\">34</a>  <strong>import</strong> swirl.workspace.viz.pie.FileElement;\n<a name=\"35\" href=\"#35\">35</a>  \n<a name=\"36\" href=\"#36\">36</a>  <em>/**<em>*</em></em>\n<a name=\"37\" href=\"#37\">37</a>  <em> * @author Kari</em>\n<a name=\"38\" href=\"#38\">38</a>  <em> *</em>\n<a name=\"39\" href=\"#39\">39</a>  <em> * To change the template for this generated type comment go to</em>\n<a name=\"40\" href=\"#40\">40</a>  <em> * Window&amp;gt;Preferences&amp;gt;Java&amp;gt;Code Generation&amp;gt;Code and Comments</em>\n<a name=\"41\" href=\"#41\">41</a>  <em> */</em>\n<a name=\"42\" href=\"#42\">42</a>  <strong>public</strong> <strong>class</strong> <a href=\"../../../swirl/workspace/persistence/PersistenceManager.html\">PersistenceManager</a> implements Startable, MessageProcessor, <a href=\"../../../swirl/workspace/viz/ModelListener.html\">ModelListener</a> {\n<a name=\"43\" href=\"#43\">43</a>  \t\n<a name=\"44\" href=\"#44\">44</a>  \tPeerManager peerManager;\n<a name=\"45\" href=\"#45\">45</a>  \tSecurityManager securityManager;\n<a name=\"46\" href=\"#46\">46</a>  \t\n<a name=\"47\" href=\"#47\">47</a>  \t<strong>public</strong> <strong>static</strong> <strong>final</strong> String SLIDE = <span class=\"string\">\"/slide\"</span>;\n<a name=\"48\" href=\"#48\">48</a>  \t<strong>public</strong> <strong>static</strong> <strong>final</strong> String LOCALHOST = <span class=\"string\">\"http://localhost:\"</span> + App.PORT;\n<a name=\"49\" href=\"#49\">49</a>  \t<strong>public</strong> <strong>static</strong> <strong>final</strong> String BACKUPDIR = <span class=\"string\">\"~backupdir/\"</span>;\n<a name=\"50\" href=\"#50\">50</a>  \t<strong>public</strong> <strong>static</strong> <strong>final</strong> String BACKUPPREFIX = SLIDE + <span class=\"string\">\"/\"</span> + BACKUPDIR;\n<a name=\"51\" href=\"#51\">51</a>  \n<a name=\"52\" href=\"#52\">52</a>  \t<strong>public</strong> <strong>static</strong> <strong>final</strong> String BACKUPDIRPATH = LOCALHOST + BACKUPPREFIX;\t\n<a name=\"53\" href=\"#53\">53</a>  \t<strong>public</strong> <strong>static</strong> <strong>final</strong> String TESTFILE = BACKUPDIRPATH + <span class=\"string\">\"testfile.txt\"</span>;\n<a name=\"54\" href=\"#54\">54</a>  \n<a name=\"55\" href=\"#55\">55</a>  \t\n<a name=\"56\" href=\"#56\">56</a>  \t<strong>private</strong> Map persistentFiles;\n<a name=\"57\" href=\"#57\">57</a>  \t\n<a name=\"58\" href=\"#58\">58</a>  \t<strong>private</strong> <a href=\"../../../swirl/workspace/Peer.html\">Peer</a> me;\n<a name=\"59\" href=\"#59\">59</a>  \t\n<a name=\"60\" href=\"#60\">60</a>  \t<strong>private</strong> <a href=\"../../../swirl/workspace/viz/Model.html\">Model</a> model;\n<a name=\"61\" href=\"#61\">61</a>  \t\n<a name=\"62\" href=\"#62\">62</a>  \t\n<a name=\"63\" href=\"#63\">63</a>  \t<em>/**<em>* TODO */</em></em>\n<a name=\"64\" href=\"#64\">64</a>  \t<strong>protected</strong> Log log = LogFactory.getLog(<strong>this</strong>.getClass());\n<a name=\"65\" href=\"#65\">65</a>  \t\n<a name=\"66\" href=\"#66\">66</a>  \t\n<a name=\"67\" href=\"#67\">67</a>  \n<a name=\"68\" href=\"#68\">68</a>  \t<em class=\"comment\">/*<em class=\"comment\"> (non-Javadoc)</em></em>\n<a name=\"69\" href=\"#69\">69</a>  <em class=\"comment\">\t * @see org.picocontainer.Startable#start()</em>\n<a name=\"70\" href=\"#70\">70</a>  <em class=\"comment\">\t */</em>\n<a name=\"71\" href=\"#71\">71</a>  \t<strong>public</strong> <strong>void</strong> start() {\n<a name=\"72\" href=\"#72\">72</a>  \t\t<em class=\"comment\">// TODO Auto-generated method stub</em>\n<a name=\"73\" href=\"#73\">73</a>  \t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"74\" href=\"#74\">74</a>          {\n<a name=\"75\" href=\"#75\">75</a>  \t\t\tlog.debug(<span class=\"string\">\"In PersistenceManager start()\"</span>);\n<a name=\"76\" href=\"#76\">76</a>          }\n<a name=\"77\" href=\"#77\">77</a>  \n<a name=\"78\" href=\"#78\">78</a>  \t\tString myId = PeerManager.getLocalUserID();\n<a name=\"79\" href=\"#79\">79</a>  \t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"80\" href=\"#80\">80</a>          {\n<a name=\"81\" href=\"#81\">81</a>  \t\t\tlog.debug(<span class=\"string\">\"LocalUserId is + myId\"</span>);\n<a name=\"82\" href=\"#82\">82</a>          }\n<a name=\"83\" href=\"#83\">83</a>  \t\tme = peerManager.getPeer(myId);\n<a name=\"84\" href=\"#84\">84</a>  \t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"85\" href=\"#85\">85</a>          {\n<a name=\"86\" href=\"#86\">86</a>  \t\t\tlog.debug(<span class=\"string\">\"Me (peer): \"</span> + me);\n<a name=\"87\" href=\"#87\">87</a>          }\n<a name=\"88\" href=\"#88\">88</a>  \t\t\n<a name=\"89\" href=\"#89\">89</a>  \t\t<em class=\"comment\">// initialize the local ist of perssitent files</em>\n<a name=\"90\" href=\"#90\">90</a>  \t\tpersistentFiles = <strong>new</strong> HashMap();\n<a name=\"91\" href=\"#91\">91</a>  \t\t\n<a name=\"92\" href=\"#92\">92</a>  \t\t<em class=\"comment\">// clean out any existing backup directory</em>\n<a name=\"93\" href=\"#93\">93</a>  \t\tdeleteHiddenBackupDir();\n<a name=\"94\" href=\"#94\">94</a>  \t\t\n<a name=\"95\" href=\"#95\">95</a>  \t\t<em class=\"comment\">// create a hidden backup directory</em>\n<a name=\"96\" href=\"#96\">96</a>  \t\tMkcolMethod mkcol = <strong>new</strong> MkcolMethod(BACKUPDIRPATH);\n<a name=\"97\" href=\"#97\">97</a>  \t\t<strong>try</strong> {\n<a name=\"98\" href=\"#98\">98</a>  \t\t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"99\" href=\"#99\">99</a>  \t        {\n<a name=\"100\" href=\"#100\">100</a> \t\t\t\tlog.debug(<span class=\"string\">\"executing mkcol for backup dir: \"</span> + me);\n<a name=\"101\" href=\"#101\">101</a> \t        }\n<a name=\"102\" href=\"#102\">102</a> \t\t\tme.executeHttpRequestMethodWithoutLog(mkcol);\n<a name=\"103\" href=\"#103\">103</a> \t\t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"104\" href=\"#104\">104</a> \t        {\n<a name=\"105\" href=\"#105\">105</a> \t\t\t\tlog.debug(<span class=\"string\">\"put status: \"</span> + mkcol.getStatusText());\n<a name=\"106\" href=\"#106\">106</a> \t        }\n<a name=\"107\" href=\"#107\">107</a> \t\t}\n<a name=\"108\" href=\"#108\">108</a> \t\t<strong>catch</strong>(Exception ex)\n<a name=\"109\" href=\"#109\">109</a> \t\t{\n<a name=\"110\" href=\"#110\">110</a> \t\t\tSystem.err.println(<span class=\"string\">\"----------error\"</span>);\n<a name=\"111\" href=\"#111\">111</a> \t\t\tex.printStackTrace();\n<a name=\"112\" href=\"#112\">112</a> \t\t}\n<a name=\"113\" href=\"#113\">113</a> \t\t<em class=\"comment\">// set permissions on backup directory</em>\n<a name=\"114\" href=\"#114\">114</a> \t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"115\" href=\"#115\">115</a>         {\n<a name=\"116\" href=\"#116\">116</a> \t\t\tlog.debug(<span class=\"string\">\"Setting backupdir permissions\"</span>);\n<a name=\"117\" href=\"#117\">117</a>         }\n<a name=\"118\" href=\"#118\">118</a> \t\tsecurityManager.setSecurityLevel(BACKUPDIRPATH, SwirlSecurity.BACKUP, SwirlSecurity.READ_WRITE_COPY);\n<a name=\"119\" href=\"#119\">119</a> \t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"120\" href=\"#120\">120</a>         {\n<a name=\"121\" href=\"#121\">121</a> \t\t\tlog.debug(<span class=\"string\">\"BACKUP set\"</span>);\n<a name=\"122\" href=\"#122\">122</a>         }\n<a name=\"123\" href=\"#123\">123</a> \t\tsecurityManager.setSecurityLevel(BACKUPDIRPATH, SwirlSecurity.OTHERS, SwirlSecurity.HIDDEN);\n<a name=\"124\" href=\"#124\">124</a> \t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"125\" href=\"#125\">125</a>         {\n<a name=\"126\" href=\"#126\">126</a> \t\t\tlog.debug(<span class=\"string\">\"OTHERS set\"</span>);\n<a name=\"127\" href=\"#127\">127</a>         }\n<a name=\"128\" href=\"#128\">128</a> \t\tsecurityManager.setSecurityLevel(BACKUPDIRPATH, SwirlSecurity.ME, SwirlSecurity.HIDDEN);\n<a name=\"129\" href=\"#129\">129</a> \t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"130\" href=\"#130\">130</a>         {\n<a name=\"131\" href=\"#131\">131</a> \t\t\tlog.debug(<span class=\"string\">\"ME set\"</span>);\n<a name=\"132\" href=\"#132\">132</a>         }\n<a name=\"133\" href=\"#133\">133</a> \t\t\n<a name=\"134\" href=\"#134\">134</a> \t\t<em class=\"comment\">// now we need to populate it with the persitent files acquired from the model</em>\n<a name=\"135\" href=\"#135\">135</a> \t\tFileElement[] allFiles = model.getFiles();\n<a name=\"136\" href=\"#136\">136</a> \t\t<strong>this</strong>.filesAdded(allFiles);\n<a name=\"137\" href=\"#137\">137</a> \t\t\n<a name=\"138\" href=\"#138\">138</a> \t\t<em class=\"comment\">// register as a model listener</em>\n<a name=\"139\" href=\"#139\">139</a> \t\tmodel.addModelChangeListener(<strong>this</strong>);\n<a name=\"140\" href=\"#140\">140</a> \t}\n<a name=\"141\" href=\"#141\">141</a> \n<a name=\"142\" href=\"#142\">142</a> \t<em class=\"comment\">/*<em class=\"comment\"> (non-Javadoc)</em></em>\n<a name=\"143\" href=\"#143\">143</a> <em class=\"comment\">\t * @see org.picocontainer.Startable#stop()</em>\n<a name=\"144\" href=\"#144\">144</a> <em class=\"comment\">\t */</em>\n<a name=\"145\" href=\"#145\">145</a> \t<strong>public</strong> <strong>void</strong> stop() {\n<a name=\"146\" href=\"#146\">146</a> \t\t<em class=\"comment\">// TODO Auto-generated method stub</em>\n<a name=\"147\" href=\"#147\">147</a> \n<a name=\"148\" href=\"#148\">148</a> \t}\n<a name=\"149\" href=\"#149\">149</a> \n<a name=\"150\" href=\"#150\">150</a> \t<em class=\"comment\">/*<em class=\"comment\"> (non-Javadoc)</em></em>\n<a name=\"151\" href=\"#151\">151</a> <em class=\"comment\">\t * @see swirl.workspace.messages.MessageProcessor#processMessage(java.util.Map)</em>\n<a name=\"152\" href=\"#152\">152</a> <em class=\"comment\">\t */</em>\n<a name=\"153\" href=\"#153\">153</a> \t<strong>public</strong> <strong>void</strong> processMessage(Map msg) {\n<a name=\"154\" href=\"#154\">154</a> \t\t<em class=\"comment\">// TODO Auto-generated method stub</em>\n<a name=\"155\" href=\"#155\">155</a> \t\t\n<a name=\"156\" href=\"#156\">156</a> \t}\n<a name=\"157\" href=\"#157\">157</a> \t\n<a name=\"158\" href=\"#158\">158</a> \t<strong>public</strong> <a href=\"../../../swirl/workspace/persistence/PersistenceManager.html\">PersistenceManager</a> (PeerManager peerManager, SecurityManager securityManager, Model model) {\n<a name=\"159\" href=\"#159\">159</a> \t\t<strong>this</strong>.peerManager = peerManager;\n<a name=\"160\" href=\"#160\">160</a> \t\t<strong>this</strong>.securityManager = securityManager;\n<a name=\"161\" href=\"#161\">161</a> \t\t<strong>this</strong>.model = model;\n<a name=\"162\" href=\"#162\">162</a> \t}\n<a name=\"163\" href=\"#163\">163</a> \t\n<a name=\"164\" href=\"#164\">164</a> \t<em class=\"comment\">/*<em class=\"comment\"> (non-Javadoc)</em></em>\n<a name=\"165\" href=\"#165\">165</a> <em class=\"comment\">\t * @see swirl.workspace.viz.ModelListener#/(swirl.workspace.viz.pie.FileElement)</em>\n<a name=\"166\" href=\"#166\">166</a> <em class=\"comment\">\t */</em>\n<a name=\"167\" href=\"#167\">167</a> \t<strong>public</strong> <strong>synchronized</strong> <strong>void</strong> fileAdded(<a href=\"../../../swirl/workspace/viz/pie/FileElement.html\">FileElement</a> file) {\n<a name=\"168\" href=\"#168\">168</a> \t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"169\" href=\"#169\">169</a>         {\n<a name=\"170\" href=\"#170\">170</a> \t\t\tlog.debug(<span class=\"string\">\"in PersistenceManager.fileAdded(\"</span> + getSwirlURI(file) + <span class=\"string\">\");\"</span>);\n<a name=\"171\" href=\"#171\">171</a>         }\n<a name=\"172\" href=\"#172\">172</a> \t\t<em class=\"comment\">// check if file is persistence</em>\n<a name=\"173\" href=\"#173\">173</a> \n<a name=\"174\" href=\"#174\">174</a> \t\t<strong>if</strong> (fileIsPersistent(file)) {\n<a name=\"175\" href=\"#175\">175</a> \t\t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"176\" href=\"#176\">176</a> \t        {\n<a name=\"177\" href=\"#177\">177</a> \t\t\t\tlog.debug(<span class=\"string\">\"file is persistent.\"</span>);\n<a name=\"178\" href=\"#178\">178</a> \t        }\n<a name=\"179\" href=\"#179\">179</a> \t\t\t<strong>if</strong> (!isMyFile(file)) {\n<a name=\"180\" href=\"#180\">180</a> \t\t\t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"181\" href=\"#181\">181</a> \t\t        {\n<a name=\"182\" href=\"#182\">182</a> \t\t\t\t\tlog.debug(<span class=\"string\">\"file is not mine.\"</span>);\n<a name=\"183\" href=\"#183\">183</a> \t\t        }\n<a name=\"184\" href=\"#184\">184</a> \t\t\t\tpersistentFiles.put(getSwirlURI(file), file);\n<a name=\"185\" href=\"#185\">185</a> \t\t\t\tputHiddenBackup(file);\n<a name=\"186\" href=\"#186\">186</a> \t\t\t}\n<a name=\"187\" href=\"#187\">187</a> \t\t}\n<a name=\"188\" href=\"#188\">188</a> \t}\n<a name=\"189\" href=\"#189\">189</a> \n<a name=\"190\" href=\"#190\">190</a> \t<em class=\"comment\">/*<em class=\"comment\"> (non-Javadoc)</em></em>\n<a name=\"191\" href=\"#191\">191</a> <em class=\"comment\">\t * @see swirl.workspace.viz.ModelListener#/(swirl.workspace.viz.pie.FileElement)</em>\n<a name=\"192\" href=\"#192\">192</a> <em class=\"comment\">\t */</em>\n<a name=\"193\" href=\"#193\">193</a> \t<strong>public</strong> <strong>synchronized</strong> <strong>void</strong> fileUpdated(<a href=\"../../../swirl/workspace/viz/pie/FileElement.html\">FileElement</a> file) {\n<a name=\"194\" href=\"#194\">194</a> \t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"195\" href=\"#195\">195</a>         {\n<a name=\"196\" href=\"#196\">196</a> \t\t\tlog.debug(<span class=\"string\">\"in PersistenceManager.fileUpdated(\"</span> + getSwirlURI(file) + <span class=\"string\">\");\"</span>);\n<a name=\"197\" href=\"#197\">197</a>         }\n<a name=\"198\" href=\"#198\">198</a> \t\tfileAdded(file);\n<a name=\"199\" href=\"#199\">199</a> \t}\n<a name=\"200\" href=\"#200\">200</a> \n<a name=\"201\" href=\"#201\">201</a> \t<em class=\"comment\">/*<em class=\"comment\"> (non-Javadoc)</em></em>\n<a name=\"202\" href=\"#202\">202</a> <em class=\"comment\">\t * @see swirl.workspace.viz.ModelListener#fileDeleted(swirl.workspace.viz.pie.FileElement)</em>\n<a name=\"203\" href=\"#203\">203</a> <em class=\"comment\">\t */</em>\n<a name=\"204\" href=\"#204\">204</a> \t<strong>public</strong> <strong>void</strong> fileDeleted(<a href=\"../../../swirl/workspace/viz/pie/FileElement.html\">FileElement</a> file) {\n<a name=\"205\" href=\"#205\">205</a> \t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"206\" href=\"#206\">206</a>         {\n<a name=\"207\" href=\"#207\">207</a> \t\t\tlog.debug(<span class=\"string\">\"in fileDeleted (\"</span> + file.getKey() + <span class=\"string\">\")\"</span>);\n<a name=\"208\" href=\"#208\">208</a>         }\n<a name=\"209\" href=\"#209\">209</a> \t\t<em class=\"comment\">// if perisitent and not mine remove from list, and remove backup</em>\n<a name=\"210\" href=\"#210\">210</a> \t\t<strong>if</strong> (! isMyFile(file)) {\n<a name=\"211\" href=\"#211\">211</a> \t\t\t<em class=\"comment\">// remove from persistent files map</em>\n<a name=\"212\" href=\"#212\">212</a> \t\t\tpersistentFiles.remove(getSwirlURI(file));\n<a name=\"213\" href=\"#213\">213</a> \t\t\t<em class=\"comment\">// delete hidden backup</em>\n<a name=\"214\" href=\"#214\">214</a> \t\t\tdeleteHiddenBackup(file);\n<a name=\"215\" href=\"#215\">215</a> \t\t}\n<a name=\"216\" href=\"#216\">216</a> \t}\n<a name=\"217\" href=\"#217\">217</a> \n<a name=\"218\" href=\"#218\">218</a> \t<em class=\"comment\">/*<em class=\"comment\"> (non-Javadoc)</em></em>\n<a name=\"219\" href=\"#219\">219</a> <em class=\"comment\">\t * @see swirl.workspace.viz.ModelListener#filesAdded(swirl.workspace.viz.pie.FileElement[])</em>\n<a name=\"220\" href=\"#220\">220</a> <em class=\"comment\">\t */</em>\n<a name=\"221\" href=\"#221\">221</a> \t<strong>public</strong> <strong>void</strong> filesAdded(<a href=\"../../../swirl/workspace/viz/pie/FileElement.html\">FileElement</a>[] files) {\n<a name=\"222\" href=\"#222\">222</a> \t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"223\" href=\"#223\">223</a>         {\n<a name=\"224\" href=\"#224\">224</a> \t\t\tlog.debug(<span class=\"string\">\"in PersistenceManager.filesAdded, number of files: \"</span> + files.length);\n<a name=\"225\" href=\"#225\">225</a>         }\n<a name=\"226\" href=\"#226\">226</a> \t\t<strong>for</strong> (<strong>int</strong> i = 0; i &lt; files.length; ++i) {\n<a name=\"227\" href=\"#227\">227</a> \t\t\tfileAdded(files[i]);\n<a name=\"228\" href=\"#228\">228</a> \t\t}\n<a name=\"229\" href=\"#229\">229</a> \t}\n<a name=\"230\" href=\"#230\">230</a> \n<a name=\"231\" href=\"#231\">231</a> \n<a name=\"232\" href=\"#232\">232</a> \t<em class=\"comment\">/*<em class=\"comment\"> (non-Javadoc)</em></em>\n<a name=\"233\" href=\"#233\">233</a> <em class=\"comment\">\t * @see swirl.workspace.viz.ModelListener#replaceFiles(java.lang.String, swirl.workspace.viz.pie.FileElement[])</em>\n<a name=\"234\" href=\"#234\">234</a> <em class=\"comment\">\t */</em>\n<a name=\"235\" href=\"#235\">235</a> \t<strong>public</strong> <strong>void</strong> replaceFiles(String peerId, <a href=\"../../../swirl/workspace/viz/pie/FileElement.html\">FileElement</a>[] files) {\n<a name=\"236\" href=\"#236\">236</a> \t\tlog.warn(<span class=\"string\">\"WARNING: PersistentManager recieved replaceFiles notification.\"</span>);\n<a name=\"237\" href=\"#237\">237</a> \t}\n<a name=\"238\" href=\"#238\">238</a> \n<a name=\"239\" href=\"#239\">239</a> \t<em class=\"comment\">/*<em class=\"comment\"> (non-Javadoc)</em></em>\n<a name=\"240\" href=\"#240\">240</a> <em class=\"comment\">\t * @see swirl.workspace.viz.ModelListener#propertiesChanged(swirl.workspace.viz.pie.FileElement)</em>\n<a name=\"241\" href=\"#241\">241</a> <em class=\"comment\">\t * </em>\n<a name=\"242\" href=\"#242\">242</a> <em class=\"comment\">\t * We need to synchronize this method because as we drag the file through the</em>\n<a name=\"243\" href=\"#243\">243</a> <em class=\"comment\">\t * cirles in the GUI, this method gets called multiple times. It may happen that two </em>\n<a name=\"244\" href=\"#244\">244</a> <em class=\"comment\">\t * threads get to execute this method at the same time, creating a backup file on</em>\n<a name=\"245\" href=\"#245\">245</a> <em class=\"comment\">\t * top of an existing one (in progress of being created).</em>\n<a name=\"246\" href=\"#246\">246</a> <em class=\"comment\">\t */</em>\n<a name=\"247\" href=\"#247\">247</a> \t<strong>public</strong> <strong>synchronized</strong> <strong>void</strong> propertiesChanged(<a href=\"../../../swirl/workspace/viz/pie/FileElement.html\">FileElement</a> file, java.util.Map msg) {\n<a name=\"248\" href=\"#248\">248</a> \t\t<em class=\"comment\">// see if we have a sharing degree change</em>\n<a name=\"249\" href=\"#249\">249</a> \t\t<strong>if</strong>(msg.containsKey(<span class=\"string\">\"SET_\"</span> + SharingLevel.SHARING_PROPERTY_NAME)) {\n<a name=\"250\" href=\"#250\">250</a> \t\t\tString path = getSwirlURI(file);\n<a name=\"251\" href=\"#251\">251</a> \t\t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"252\" href=\"#252\">252</a> \t        {\n<a name=\"253\" href=\"#253\">253</a> \t\t\t\tlog.debug(<span class=\"string\">\"in PersistenceManager.propertiesChanged(\"</span> + path + <span class=\"string\">\");\"</span>);\n<a name=\"254\" href=\"#254\">254</a> \t        }\n<a name=\"255\" href=\"#255\">255</a> \t\t\t<em class=\"comment\">// check if file is persistence</em>\n<a name=\"256\" href=\"#256\">256</a> \t\t\t<strong>if</strong> (fileIsPersistent(file)) {\n<a name=\"257\" href=\"#257\">257</a> \t\t\t\t<strong>if</strong> (!isMyFile(file)) {\n<a name=\"258\" href=\"#258\">258</a> \t\t\t\t\t<em class=\"comment\">// check if it is in our list of persistent files, if so, then we already have a backup</em>\n<a name=\"259\" href=\"#259\">259</a> \t\t\t\t\t<em class=\"comment\">// in the case where a backup file has been recovered elsewhere, avoid recreating backup\t\t</em>\n<a name=\"260\" href=\"#260\">260</a> \t\t\t\t\t<strong>if</strong> (!persistentFiles.containsKey(path)) {\n<a name=\"261\" href=\"#261\">261</a> \t\t\t\t\t\t putHiddenBackup(file);\n<a name=\"262\" href=\"#262\">262</a> \t\t\t\t\t}\n<a name=\"263\" href=\"#263\">263</a> \t\t\t\t\tpersistentFiles.put(path, file);\n<a name=\"264\" href=\"#264\">264</a> \t\t\t\t}\t\t\n<a name=\"265\" href=\"#265\">265</a> \t\t\t} <strong>else</strong> {\n<a name=\"266\" href=\"#266\">266</a> \t\t\t\t<em class=\"comment\">// check if files was moved out of persistent sharing level</em>\n<a name=\"267\" href=\"#267\">267</a> \t\t\t\t<strong>if</strong> (persistentFiles.containsKey(path)) {\n<a name=\"268\" href=\"#268\">268</a> \t\t\t\t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"269\" href=\"#269\">269</a> \t\t\t        {\n<a name=\"270\" href=\"#270\">270</a> \t\t\t\t\t\tlog.debug(<span class=\"string\">\"file \"</span> + path + <span class=\"string\">\" moved out of persistent level, deleting hidden backup\"</span>);\n<a name=\"271\" href=\"#271\">271</a> \t\t\t        }\n<a name=\"272\" href=\"#272\">272</a> \t\t\t\t\tpersistentFiles.remove(path);\n<a name=\"273\" href=\"#273\">273</a> \t\t\t\t\tdeleteHiddenBackup(file);\n<a name=\"274\" href=\"#274\">274</a> \t\t\t\t}\n<a name=\"275\" href=\"#275\">275</a> \t\t\t}\t\n<a name=\"276\" href=\"#276\">276</a> \t\t}\t\n<a name=\"277\" href=\"#277\">277</a> \t}\n<a name=\"278\" href=\"#278\">278</a> \n<a name=\"279\" href=\"#279\">279</a> \t<em class=\"comment\">/*<em class=\"comment\"> (non-Javadoc)</em></em>\n<a name=\"280\" href=\"#280\">280</a> <em class=\"comment\">\t * @see swirl.workspace.viz.ModelListener#userJoined(swirl.workspace.Peer)</em>\n<a name=\"281\" href=\"#281\">281</a> <em class=\"comment\">\t */</em>\n<a name=\"282\" href=\"#282\">282</a> \t<strong>public</strong> <strong>void</strong> userJoined(<a href=\"../../../swirl/workspace/Peer.html\">Peer</a> peer) {\n<a name=\"283\" href=\"#283\">283</a> \t\t<em class=\"comment\">// TODO Auto-generated method stub</em>\n<a name=\"284\" href=\"#284\">284</a> \t\t\n<a name=\"285\" href=\"#285\">285</a> \t}\n<a name=\"286\" href=\"#286\">286</a> \n<a name=\"287\" href=\"#287\">287</a> \t<em class=\"comment\">/*<em class=\"comment\"> (non-Javadoc)</em></em>\n<a name=\"288\" href=\"#288\">288</a> <em class=\"comment\">\t * @see swirl.workspace.viz.ModelListener#userLeft(java.lang.String)</em>\n<a name=\"289\" href=\"#289\">289</a> <em class=\"comment\">\t */</em>\n<a name=\"290\" href=\"#290\">290</a> \t<strong>public</strong> <strong>synchronized</strong> <strong>void</strong> userLeft(String peerId) {\n<a name=\"291\" href=\"#291\">291</a> \t\t<em class=\"comment\">// check if I am the next master</em>\n<a name=\"292\" href=\"#292\">292</a> \t\t<strong>boolean</strong> iAmNext = amINextMaster();\n<a name=\"293\" href=\"#293\">293</a> \t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"294\" href=\"#294\">294</a>         {\n<a name=\"295\" href=\"#295\">295</a> \t\t\tlog.debug(<span class=\"string\">\"in userLeft(\"</span> + peerId + <span class=\"string\">\"): iAmNext = \"</span> + iAmNext);\n<a name=\"296\" href=\"#296\">296</a>         }\n<a name=\"297\" href=\"#297\">297</a> \t\t<em class=\"comment\">// did they have any persistent files?  check the map</em>\n<a name=\"298\" href=\"#298\">298</a> \t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"299\" href=\"#299\">299</a>         {\n<a name=\"300\" href=\"#300\">300</a> \t\t\tlog.debug(<span class=\"string\">\"number of entries in persistentFiles map: \"</span> + persistentFiles.entrySet().size());\n<a name=\"301\" href=\"#301\">301</a>         }\n<a name=\"302\" href=\"#302\">302</a> \t\tFileElement[] files = <strong>new</strong> <a href=\"../../../swirl/workspace/viz/pie/FileElement.html\">FileElement</a>[persistentFiles.entrySet().size()];\n<a name=\"303\" href=\"#303\">303</a> \t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"304\" href=\"#304\">304</a>         {\n<a name=\"305\" href=\"#305\">305</a> \t\t\tlog.debug(<span class=\"string\">\"number of files in files array: \"</span> + files.length);\n<a name=\"306\" href=\"#306\">306</a>         }\n<a name=\"307\" href=\"#307\">307</a> \t\tpersistentFiles.values().toArray(files);\n<a name=\"308\" href=\"#308\">308</a> \t\tFileElement fe;\n<a name=\"309\" href=\"#309\">309</a> \t\t\n<a name=\"310\" href=\"#310\">310</a> \t\t<strong>if</strong> (iAmNext) {\n<a name=\"311\" href=\"#311\">311</a> \t\t\t<strong>for</strong> (<strong>int</strong> i = 0; i &lt; files.length; i++) {\n<a name=\"312\" href=\"#312\">312</a> \t\t\t\tfe = files[i];\t\n<a name=\"313\" href=\"#313\">313</a> \t\t\t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"314\" href=\"#314\">314</a> \t\t        {\n<a name=\"315\" href=\"#315\">315</a> \t\t\t\t\tlog.debug(fe.getOwnerKey());\n<a name=\"316\" href=\"#316\">316</a> \t\t        }\n<a name=\"317\" href=\"#317\">317</a> \t\t\t\t<strong>if</strong> (fe.getOwnerKey().equals(peerId)) {\n<a name=\"318\" href=\"#318\">318</a> \t\t\t\t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"319\" href=\"#319\">319</a> \t\t\t        {\n<a name=\"320\" href=\"#320\">320</a> \t\t\t\t\t\tlog.debug(<span class=\"string\">\"promoting file \"</span> + fe.getKey());\n<a name=\"321\" href=\"#321\">321</a> \t\t\t        }\n<a name=\"322\" href=\"#322\">322</a> \t\t\t\t\tpromoteBackupToMaster(fe);\n<a name=\"323\" href=\"#323\">323</a> \t\t\t\t\tpersistentFiles.remove(getSwirlURI(fe));\n<a name=\"324\" href=\"#324\">324</a> \t\t\t\t}\t\n<a name=\"325\" href=\"#325\">325</a> \t\t\t}\n<a name=\"326\" href=\"#326\">326</a> \t\t}\n<a name=\"327\" href=\"#327\">327</a> \t\t<strong>else</strong> {\n<a name=\"328\" href=\"#328\">328</a> \t\t\t<strong>for</strong> (<strong>int</strong> i = 0; i &lt; files.length; i++) {\n<a name=\"329\" href=\"#329\">329</a> \t\t\t\tfe = files[i];\t\n<a name=\"330\" href=\"#330\">330</a> \t\t\t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"331\" href=\"#331\">331</a> \t\t        {\n<a name=\"332\" href=\"#332\">332</a> \t\t\t\t\tlog.debug(fe.getOwnerKey());\n<a name=\"333\" href=\"#333\">333</a> \t\t        }\n<a name=\"334\" href=\"#334\">334</a> \t\t\t\t<strong>if</strong> (fe.getOwnerKey().equals(peerId)) {\n<a name=\"335\" href=\"#335\">335</a> \t\t\t\t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"336\" href=\"#336\">336</a> \t\t\t        {\n<a name=\"337\" href=\"#337\">337</a> \t\t\t\t\t\tlog.debug(<span class=\"string\">\"urlmapping update file \"</span> + fe.getKey());\n<a name=\"338\" href=\"#338\">338</a> \t\t\t        }\n<a name=\"339\" href=\"#339\">339</a> \t\t\t\t\tupdateUrlToHostMapping(fe);\n<a name=\"340\" href=\"#340\">340</a> \t\t\t\t}\t\n<a name=\"341\" href=\"#341\">341</a> \t\t\t}\n<a name=\"342\" href=\"#342\">342</a> \t\t}\n<a name=\"343\" href=\"#343\">343</a> \t}\n<a name=\"344\" href=\"#344\">344</a> \n<a name=\"345\" href=\"#345\">345</a> \n<a name=\"346\" href=\"#346\">346</a> \t<em class=\"comment\">/*<em class=\"comment\"> (non-Javadoc)</em></em>\n<a name=\"347\" href=\"#347\">347</a> <em class=\"comment\">\t * @see swirl.workspace.viz.ModelListener#flashIt(swirl.workspace.viz.pie.FileElement, java.lang.String)</em>\n<a name=\"348\" href=\"#348\">348</a> <em class=\"comment\">\t */</em>\n<a name=\"349\" href=\"#349\">349</a> \t<strong>public</strong> <strong>void</strong> flashIt(<a href=\"../../../swirl/workspace/viz/pie/FileElement.html\">FileElement</a> fe, String uColor) {\n<a name=\"350\" href=\"#350\">350</a> \t\t<em class=\"comment\">// TODO Auto-generated method stub</em>\n<a name=\"351\" href=\"#351\">351</a> \t\t\n<a name=\"352\" href=\"#352\">352</a> \t}\n<a name=\"353\" href=\"#353\">353</a> \t\n<a name=\"354\" href=\"#354\">354</a> \t<strong>private</strong> <strong>boolean</strong> fileIsPersistent (FileElement file) {\n<a name=\"355\" href=\"#355\">355</a> \t\t<strong>int</strong> <a href=\"../../../swirl/workspace/viz/SharingLevel.html\">SharingLevel</a> = file.getShareDegree().getValue();\n<a name=\"356\" href=\"#356\">356</a> \t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"357\" href=\"#357\">357</a>         {\n<a name=\"358\" href=\"#358\">358</a> \t\t\tlog.debug(<span class=\"string\">\"in fileIsPersistent:  sharing level for \"</span> + file.getKey() + <span class=\"string\">\" is \"</span> + <a href=\"../../../swirl/workspace/viz/SharingLevel.html\">SharingLevel</a>);\n<a name=\"359\" href=\"#359\">359</a>         }\n<a name=\"360\" href=\"#360\">360</a> \t\t<strong>return</strong>  SharingLevel == 4;\n<a name=\"361\" href=\"#361\">361</a> \t}\n<a name=\"362\" href=\"#362\">362</a> \t\n<a name=\"363\" href=\"#363\">363</a> \t<strong>private</strong> String getSwirlURI (FileElement file) {\t\t\n<a name=\"364\" href=\"#364\">364</a> \t\t<strong>return</strong> getSlideURI(file).replaceFirst(<span class=\"string\">\"slide\"</span>, <span class=\"string\">\"swirl\"</span>);\n<a name=\"365\" href=\"#365\">365</a> \t}\n<a name=\"366\" href=\"#366\">366</a> \t\n<a name=\"367\" href=\"#367\">367</a> \t<strong>private</strong> String getSlideURI (FileElement file) {\n<a name=\"368\" href=\"#368\">368</a> \t\tString slidePath = file.getKey();\n<a name=\"369\" href=\"#369\">369</a> \t\t<strong>return</strong> LOCALHOST + slidePath;\n<a name=\"370\" href=\"#370\">370</a> \t}\n<a name=\"371\" href=\"#371\">371</a> \t\n<a name=\"372\" href=\"#372\">372</a> \t<strong>private</strong> <strong>boolean</strong> equals (FileElement file1, FileElement file2) {\n<a name=\"373\" href=\"#373\">373</a> \t\t<strong>return</strong> getSwirlURI(file1).equals(getSwirlURI(file2));\n<a name=\"374\" href=\"#374\">374</a> \t}\n<a name=\"375\" href=\"#375\">375</a> \t\n<a name=\"376\" href=\"#376\">376</a> \t<strong>private</strong> <strong>boolean</strong> isMyFile (FileElement file) {\n<a name=\"377\" href=\"#377\">377</a> \t\t<strong>return</strong> file.getOwnerKey().equals(me.getUniqueID());\n<a name=\"378\" href=\"#378\">378</a> \t}\n<a name=\"379\" href=\"#379\">379</a> \t\n<a name=\"380\" href=\"#380\">380</a> \t<strong>private</strong> String createBackupPath (String path) {\n<a name=\"381\" href=\"#381\">381</a> \t\tString backupPath;\n<a name=\"382\" href=\"#382\">382</a> \t\t<strong>int</strong> i = path.lastIndexOf('/');\n<a name=\"383\" href=\"#383\">383</a> \t\tString front = path.substring(0,i+1);\n<a name=\"384\" href=\"#384\">384</a> \t\tString back = path.substring(i+1);\n<a name=\"385\" href=\"#385\">385</a> \t\tbackupPath = front + BACKUPDIR + back;\n<a name=\"386\" href=\"#386\">386</a> \t\t<strong>return</strong> backupPath.replaceFirst(<span class=\"string\">\"swirl\"</span>, <span class=\"string\">\"slide\"</span>);\n<a name=\"387\" href=\"#387\">387</a> \t}\n<a name=\"388\" href=\"#388\">388</a> \n<a name=\"389\" href=\"#389\">389</a> \t<em>/**<em>*</em></em>\n<a name=\"390\" href=\"#390\">390</a> <em>\t * @return\treturns true if my peerID is the smallest (lexographically) in the list of existing peers</em>\n<a name=\"391\" href=\"#391\">391</a> <em>\t */</em>\n<a name=\"392\" href=\"#392\">392</a> \t<strong>private</strong> <strong>boolean</strong> amINextMaster() {\n<a name=\"393\" href=\"#393\">393</a> \t\tMap peers = peerManager.getPeers();\n<a name=\"394\" href=\"#394\">394</a> \t\tIterator iter = peers.values().iterator();\n<a name=\"395\" href=\"#395\">395</a> \t\tString smallestID;\n<a name=\"396\" href=\"#396\">396</a> \t\t<strong>if</strong> (iter.hasNext()) {\n<a name=\"397\" href=\"#397\">397</a> \t\t\tsmallestID = ((Peer)iter.next()).getUniqueID();\n<a name=\"398\" href=\"#398\">398</a> \t\t} <strong>else</strong> { <strong>return</strong> false; }\n<a name=\"399\" href=\"#399\">399</a> \n<a name=\"400\" href=\"#400\">400</a> \t\t<strong>while</strong> (iter.hasNext()) {\n<a name=\"401\" href=\"#401\">401</a> \t\t\tPeer peer = (Peer) iter.next();\n<a name=\"402\" href=\"#402\">402</a> \t\t\tString id = peer.getUniqueID();\n<a name=\"403\" href=\"#403\">403</a> \t\t\t<strong>if</strong> (id.compareTo(smallestID) > 0) {\n<a name=\"404\" href=\"#404\">404</a> \t\t\t\tsmallestID = id;\n<a name=\"405\" href=\"#405\">405</a> \t\t\t}\n<a name=\"406\" href=\"#406\">406</a> \t\t}\n<a name=\"407\" href=\"#407\">407</a> \t\t<strong>return</strong> smallestID.equals (me.getUniqueID());\n<a name=\"408\" href=\"#408\">408</a> \t}\n<a name=\"409\" href=\"#409\">409</a> \n<a name=\"410\" href=\"#410\">410</a> \n<a name=\"411\" href=\"#411\">411</a> \t<strong>private</strong> <strong>void</strong> putHiddenBackup (FileElement file) {\n<a name=\"412\" href=\"#412\">412</a> \t\t<em class=\"comment\">// get contents of file</em>\n<a name=\"413\" href=\"#413\">413</a> \t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"414\" href=\"#414\">414</a>         {\n<a name=\"415\" href=\"#415\">415</a> \t\t\tlog.debug(<span class=\"string\">\"in putHiddenBackup\"</span>);\n<a name=\"416\" href=\"#416\">416</a>         }\n<a name=\"417\" href=\"#417\">417</a> \t\tString path = getSlideURI(file); <em class=\"comment\">//getSwirlURI(file);</em>\n<a name=\"418\" href=\"#418\">418</a> \t\tPeer peer = peerManager.getPeer(file.getOwnerKey());\n<a name=\"419\" href=\"#419\">419</a> \t\t\n<a name=\"420\" href=\"#420\">420</a> \t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"421\" href=\"#421\">421</a>         {\n<a name=\"422\" href=\"#422\">422</a> \t\t\tlog.debug(<span class=\"string\">\"constructing GetMethod on path: \"</span> + path);\n<a name=\"423\" href=\"#423\">423</a>         }\n<a name=\"424\" href=\"#424\">424</a> \t\t\n<a name=\"425\" href=\"#425\">425</a> \t\t<strong>boolean</strong> getDone = false;\n<a name=\"426\" href=\"#426\">426</a> \t\tGetMethod get = <strong>null</strong>;\n<a name=\"427\" href=\"#427\">427</a> \t\t<strong>while</strong>(!getDone) {\n<a name=\"428\" href=\"#428\">428</a> \t\tget = <strong>new</strong> GetMethod(path);\n<a name=\"429\" href=\"#429\">429</a> \t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"430\" href=\"#430\">430</a>         {\n<a name=\"431\" href=\"#431\">431</a> \t\t\tlog.debug(<span class=\"string\">\"after constructing a new GetMethod\"</span>);\n<a name=\"432\" href=\"#432\">432</a>         }\n<a name=\"433\" href=\"#433\">433</a> \t\t<strong>try</strong> {\n<a name=\"434\" href=\"#434\">434</a> \t\t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"435\" href=\"#435\">435</a> \t        {\n<a name=\"436\" href=\"#436\">436</a> \t\t\t\tlog.debug(<span class=\"string\">\"executing get for backup file contents: \"</span> + peer);\n<a name=\"437\" href=\"#437\">437</a> \t        }\n<a name=\"438\" href=\"#438\">438</a> \t\t\t<em class=\"comment\">// make slide call directly to peer to allow filtering</em>\n<a name=\"439\" href=\"#439\">439</a> \t\t\t<em class=\"comment\">// this hides the \"get\" when making a backup copy</em>\n<a name=\"440\" href=\"#440\">440</a> \t\t\t<strong>int</strong> status = peer.executeHttpRequestMethodWithoutLog(get);\n<a name=\"441\" href=\"#441\">441</a> \t\t\t<strong>if</strong> (status == 200) <em class=\"comment\">// ugly</em>\n<a name=\"442\" href=\"#442\">442</a> \t\t\t    getDone = <strong>true</strong>;\n<a name=\"443\" href=\"#443\">443</a> \t\t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"444\" href=\"#444\">444</a> \t        {\n<a name=\"445\" href=\"#445\">445</a> \t\t\t\tlog.debug(<span class=\"string\">\"get status: \"</span> + get.getStatusText());\n<a name=\"446\" href=\"#446\">446</a> \t        }\n<a name=\"447\" href=\"#447\">447</a> \t\t}\n<a name=\"448\" href=\"#448\">448</a> \t\t<strong>catch</strong>(Exception ex)\n<a name=\"449\" href=\"#449\">449</a> \t\t{\n<a name=\"450\" href=\"#450\">450</a> \t\t\tSystem.err.println(<span class=\"string\">\"----------error\"</span>);\n<a name=\"451\" href=\"#451\">451</a> \t\t\tex.printStackTrace();\n<a name=\"452\" href=\"#452\">452</a> \t\t}\n<a name=\"453\" href=\"#453\">453</a> \t\t}\n<a name=\"454\" href=\"#454\">454</a> \t\t\n<a name=\"455\" href=\"#455\">455</a> \t\tString backupPath = createBackupPath(path);\n<a name=\"456\" href=\"#456\">456</a> \t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"457\" href=\"#457\">457</a>         {\n<a name=\"458\" href=\"#458\">458</a> \t\t\tlog.debug(<span class=\"string\">\"creating backup file at:\"</span> + backupPath);\n<a name=\"459\" href=\"#459\">459</a>         }\n<a name=\"460\" href=\"#460\">460</a> \t\tPutMethod put = <strong>new</strong> PutMethod(backupPath);\n<a name=\"461\" href=\"#461\">461</a> \t\tput.setRequestBody(get.getResponseBodyAsString());\n<a name=\"462\" href=\"#462\">462</a> \t\t<strong>try</strong> {\n<a name=\"463\" href=\"#463\">463</a> \t\t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"464\" href=\"#464\">464</a> \t        {\n<a name=\"465\" href=\"#465\">465</a> \t\t\t\tlog.debug(<span class=\"string\">\"executing put for backup file: \"</span> + me);\n<a name=\"466\" href=\"#466\">466</a> \t        }\n<a name=\"467\" href=\"#467\">467</a> \t\t\tme.executeHttpRequestMethodWithoutLog(put);\n<a name=\"468\" href=\"#468\">468</a> \t\t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"469\" href=\"#469\">469</a> \t        {\n<a name=\"470\" href=\"#470\">470</a> \t\t\t\tlog.debug(<span class=\"string\">\"put status: \"</span> + put.getStatusText());\n<a name=\"471\" href=\"#471\">471</a> \t        }\n<a name=\"472\" href=\"#472\">472</a> \t\t}\n<a name=\"473\" href=\"#473\">473</a> \t\t<strong>catch</strong>(Exception ex)\n<a name=\"474\" href=\"#474\">474</a> \t\t{\n<a name=\"475\" href=\"#475\">475</a> \t\t\tSystem.err.println(<span class=\"string\">\"----------error\"</span>);\n<a name=\"476\" href=\"#476\">476</a> \t\t\tex.printStackTrace();\n<a name=\"477\" href=\"#477\">477</a> \t\t}\n<a name=\"478\" href=\"#478\">478</a> \t}\n<a name=\"479\" href=\"#479\">479</a> \t\n<a name=\"480\" href=\"#480\">480</a> \t<strong>private</strong> <strong>void</strong> deleteHiddenBackup (FileElement file) {\n<a name=\"481\" href=\"#481\">481</a> \t\tDeleteMethod delete = <strong>new</strong> DeleteMethod(createBackupPath(getSwirlURI(file)));\n<a name=\"482\" href=\"#482\">482</a> \t\t<strong>try</strong> {\n<a name=\"483\" href=\"#483\">483</a> \t\t\tlog.debug(<span class=\"string\">\"executing delete for backup file: \"</span> + me);\n<a name=\"484\" href=\"#484\">484</a> \t\t\tme.executeHttpRequestMethodWithoutLog(delete);\n<a name=\"485\" href=\"#485\">485</a> \t\t\tlog.debug(<span class=\"string\">\"get status: \"</span> + delete.getStatusText());\n<a name=\"486\" href=\"#486\">486</a> \t\t}\n<a name=\"487\" href=\"#487\">487</a> \t\t<strong>catch</strong>(Exception ex)\n<a name=\"488\" href=\"#488\">488</a> \t\t{\n<a name=\"489\" href=\"#489\">489</a> \t\t\tSystem.err.println(<span class=\"string\">\"----------error\"</span>);\n<a name=\"490\" href=\"#490\">490</a> \t\t\tex.printStackTrace();\n<a name=\"491\" href=\"#491\">491</a> \t\t}\n<a name=\"492\" href=\"#492\">492</a> \t}\n<a name=\"493\" href=\"#493\">493</a> \t\n<a name=\"494\" href=\"#494\">494</a> \t<strong>private</strong> <strong>void</strong> deleteHiddenBackupDir () {\n<a name=\"495\" href=\"#495\">495</a> \t\tDeleteMethod delete = <strong>new</strong> DeleteMethod(BACKUPDIRPATH);\n<a name=\"496\" href=\"#496\">496</a> \t\t<strong>try</strong> {\n<a name=\"497\" href=\"#497\">497</a> \t\t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"498\" href=\"#498\">498</a> \t        {\n<a name=\"499\" href=\"#499\">499</a> \t\t\t\tlog.debug(<span class=\"string\">\"executing delete for backup dir: \"</span> + me);\n<a name=\"500\" href=\"#500\">500</a> \t        }\n<a name=\"501\" href=\"#501\">501</a> \t\t\tme.executeHttpRequestMethodWithoutLog(delete);\n<a name=\"502\" href=\"#502\">502</a> \t\t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"503\" href=\"#503\">503</a> \t        {\n<a name=\"504\" href=\"#504\">504</a> \t\t\t\tlog.debug(<span class=\"string\">\"get status: \"</span> + delete.getStatusText());\n<a name=\"505\" href=\"#505\">505</a> \t        }\n<a name=\"506\" href=\"#506\">506</a> \t\t}\n<a name=\"507\" href=\"#507\">507</a> \t\t<strong>catch</strong>(Exception ex)\n<a name=\"508\" href=\"#508\">508</a> \t\t{\n<a name=\"509\" href=\"#509\">509</a> \t\t\tSystem.err.println(<span class=\"string\">\"----------error\"</span>);\n<a name=\"510\" href=\"#510\">510</a> \t\t\tex.printStackTrace();\n<a name=\"511\" href=\"#511\">511</a> \t\t}\n<a name=\"512\" href=\"#512\">512</a> \t}\n<a name=\"513\" href=\"#513\">513</a> \n<a name=\"514\" href=\"#514\">514</a> \n<a name=\"515\" href=\"#515\">515</a> \t<strong>private</strong> <strong>void</strong> promoteBackupToMaster(<a href=\"../../../swirl/workspace/viz/pie/FileElement.html\">FileElement</a> file) {\n<a name=\"516\" href=\"#516\">516</a> \t\tString path = file.getKey();\n<a name=\"517\" href=\"#517\">517</a> \n<a name=\"518\" href=\"#518\">518</a> \t\tString backupPath = createBackupPath(path);\n<a name=\"519\" href=\"#519\">519</a> \t\t<em class=\"comment\">//move backup file out of backup directory</em>\n<a name=\"520\" href=\"#520\">520</a> \t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"521\" href=\"#521\">521</a>         {\n<a name=\"522\" href=\"#522\">522</a> \t\t\tlog.debug(<span class=\"string\">\"moving backup from \"</span> + backupPath + <span class=\"string\">\" to \"</span> + path);\n<a name=\"523\" href=\"#523\">523</a>         }\n<a name=\"524\" href=\"#524\">524</a> \t\tMoveMethod move = <strong>new</strong> MoveMethod(backupPath, path, <strong>true</strong>);\n<a name=\"525\" href=\"#525\">525</a> \t\t<strong>try</strong> {\n<a name=\"526\" href=\"#526\">526</a> \t\t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"527\" href=\"#527\">527</a> \t        {\n<a name=\"528\" href=\"#528\">528</a> \t\t\t\tlog.debug(<span class=\"string\">\"executing move for backup file: \"</span> + me);\n<a name=\"529\" href=\"#529\">529</a> \t        }\n<a name=\"530\" href=\"#530\">530</a> \t\t\tme.executeHttpRequestMethod(move);\n<a name=\"531\" href=\"#531\">531</a> \t\t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"532\" href=\"#532\">532</a> \t        {\n<a name=\"533\" href=\"#533\">533</a> \t\t\t\tlog.debug(<span class=\"string\">\"move status: \"</span> + move.getStatusText());\n<a name=\"534\" href=\"#534\">534</a> \t        }\n<a name=\"535\" href=\"#535\">535</a> \t\t}\n<a name=\"536\" href=\"#536\">536</a> \t\t<strong>catch</strong>(Exception ex)\n<a name=\"537\" href=\"#537\">537</a> \t\t{\n<a name=\"538\" href=\"#538\">538</a> \t\t\tSystem.err.println(<span class=\"string\">\"----------error\"</span>);\n<a name=\"539\" href=\"#539\">539</a> \t\t\tex.printStackTrace();\n<a name=\"540\" href=\"#540\">540</a> \t\t}\n<a name=\"541\" href=\"#541\">541</a> \t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"542\" href=\"#542\">542</a>         {\n<a name=\"543\" href=\"#543\">543</a> \t\t\tlog.debug(<span class=\"string\">\"setting sharing level on :\"</span> + path);\n<a name=\"544\" href=\"#544\">544</a>         }\n<a name=\"545\" href=\"#545\">545</a> \t\tmodel.setSharingDegree(file, <strong>new</strong> <a href=\"../../../swirl/workspace/viz/SharingLevel.html\">SharingLevel</a>(4));\n<a name=\"546\" href=\"#546\">546</a> \t\tupdateUrlToHostMapping(file);\n<a name=\"547\" href=\"#547\">547</a> \t}\n<a name=\"548\" href=\"#548\">548</a> \n<a name=\"549\" href=\"#549\">549</a> \t<strong>private</strong> <strong>void</strong> updateUrlToHostMapping(<a href=\"../../../swirl/workspace/viz/pie/FileElement.html\">FileElement</a> file) {\n<a name=\"550\" href=\"#550\">550</a> \t    <strong>try</strong> {\n<a name=\"551\" href=\"#551\">551</a>             Thread.sleep(10000);\n<a name=\"552\" href=\"#552\">552</a>         } <strong>catch</strong> (InterruptedException e1) {\n<a name=\"553\" href=\"#553\">553</a>             <em class=\"comment\">// TODO Auto-generated catch block</em>\n<a name=\"554\" href=\"#554\">554</a>             e1.printStackTrace();\n<a name=\"555\" href=\"#555\">555</a>         }\n<a name=\"556\" href=\"#556\">556</a> \t    \n<a name=\"557\" href=\"#557\">557</a> \t\tString path = file.getKey();\n<a name=\"558\" href=\"#558\">558</a> \n<a name=\"559\" href=\"#559\">559</a> \t\tString backupPath = createBackupPath(path);\n<a name=\"560\" href=\"#560\">560</a> \n<a name=\"561\" href=\"#561\">561</a> \t\t<em class=\"comment\">//execute a propfind to try to force the host/file mapping to update in the proxy</em>\n<a name=\"562\" href=\"#562\">562</a> \t\t<strong>int</strong>\t\t\tretry = 1;\n<a name=\"563\" href=\"#563\">563</a> \t\t<strong>try</strong> {\n<a name=\"564\" href=\"#564\">564</a> \t\t    <strong>for</strong> (<strong>int</strong> i = 0; i&lt;retry; i++) {\n<a name=\"565\" href=\"#565\">565</a> \t\t\t\tPropFindMethod propFind = <strong>new</strong> PropFindMethod(<span class=\"string\">\"/swirl/\"</span>, 1);\n<a name=\"566\" href=\"#566\">566</a> \t\t        <strong>int</strong> status = me.executeHttpRequestMethodWithoutLog(propFind);\n<a name=\"567\" href=\"#567\">567</a> \t\t        <strong>if</strong>(log.isDebugEnabled())\n<a name=\"568\" href=\"#568\">568</a> \t\t        {\n<a name=\"569\" href=\"#569\">569</a> \t\t        \tlog.debug(<span class=\"string\">\"Second Propfind: \"</span> + Integer.toString(status));\n<a name=\"570\" href=\"#570\">570</a> \t\t        }\n<a name=\"571\" href=\"#571\">571</a> \t\t        <strong>if</strong> (status == 200 || status == 207)\n<a name=\"572\" href=\"#572\">572</a> \t\t            <strong>break</strong>;\n<a name=\"573\" href=\"#573\">573</a> \t\t    }\n<a name=\"574\" href=\"#574\">574</a> \t\t} <strong>catch</strong> (IOException e) {\n<a name=\"575\" href=\"#575\">575</a> \t\t\te.printStackTrace();\n<a name=\"576\" href=\"#576\">576</a> \t\t}\n<a name=\"577\" href=\"#577\">577</a> \t\tString swirlPath = path.replaceFirst(<span class=\"string\">\"slide\"</span>, <span class=\"string\">\"swirl\"</span>);\n<a name=\"578\" href=\"#578\">578</a> \t\t<strong>try</strong> {\n<a name=\"579\" href=\"#579\">579</a> \t\t    <strong>for</strong> (<strong>int</strong> i = 0; i&lt;retry; i++) {\n<a name=\"580\" href=\"#580\">580</a> \t\t\t\tPropFindMethod propFind2 = <strong>new</strong> PropFindMethod(swirlPath, 1);\n<a name=\"581\" href=\"#581\">581</a> \t\t\t\t<strong>int</strong> status = me.executeHttpRequestMethodWithoutLog(propFind2);\n<a name=\"582\" href=\"#582\">582</a> \t\t\t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"583\" href=\"#583\">583</a> \t\t        {\n<a name=\"584\" href=\"#584\">584</a> \t\t\t\t\tlog.debug(<span class=\"string\">\"Second Propfind: \"</span> + Integer.toString(status));\n<a name=\"585\" href=\"#585\">585</a> \t\t        }\n<a name=\"586\" href=\"#586\">586</a> \t\t        <strong>if</strong> (status == 200 || status == 207)\n<a name=\"587\" href=\"#587\">587</a> \t\t            <strong>break</strong>;\n<a name=\"588\" href=\"#588\">588</a> \t\t    }\n<a name=\"589\" href=\"#589\">589</a> \t\t} <strong>catch</strong> (IOException e) {\n<a name=\"590\" href=\"#590\">590</a> \t\t\te.printStackTrace();\n<a name=\"591\" href=\"#591\">591</a> \t\t}\n<a name=\"592\" href=\"#592\">592</a> \t}\n<a name=\"593\" href=\"#593\">593</a> \n<a name=\"594\" href=\"#594\">594</a> \t<em class=\"comment\">/*<em class=\"comment\"> (non-Javadoc)</em></em>\n<a name=\"595\" href=\"#595\">595</a> <em class=\"comment\">\t * @see swirl.workspace.viz.ModelListener#backupPromotedToPersistent(swirl.workspace.viz.pie.FileElement)</em>\n<a name=\"596\" href=\"#596\">596</a> <em class=\"comment\">\t */</em>\n<a name=\"597\" href=\"#597\">597</a> \t<strong>public</strong> <strong>void</strong> backupPromotedToPersistent(<a href=\"../../../swirl/workspace/viz/pie/FileElement.html\">FileElement</a> file) {\n<a name=\"598\" href=\"#598\">598</a> \t\t<em class=\"comment\">// TODO Auto-generated method stub</em>\n<a name=\"599\" href=\"#599\">599</a> \t\t\n<a name=\"600\" href=\"#600\">600</a> \t}\n<a name=\"601\" href=\"#601\">601</a> \n<a name=\"602\" href=\"#602\">602</a> \t<em class=\"comment\">/*<em class=\"comment\"> (non-Javadoc)</em></em>\n<a name=\"603\" href=\"#603\">603</a> <em class=\"comment\">\t * @see swirl.workspace.messages.MessageProcessor#initialMessageProcessor()</em>\n<a name=\"604\" href=\"#604\">604</a> <em class=\"comment\">\t */</em>\n<a name=\"605\" href=\"#605\">605</a> \t<strong>public</strong> <strong>void</strong> initializeMessageProcessor() {\n<a name=\"606\" href=\"#606\">606</a> \t\t<em class=\"comment\">// TODO Auto-generated method stub</em>\n<a name=\"607\" href=\"#607\">607</a> \t\t\n<a name=\"608\" href=\"#608\">608</a> \t}\n<a name=\"609\" href=\"#609\">609</a> \n<a name=\"610\" href=\"#610\">610</a> \n<a name=\"611\" href=\"#611\">611</a> \n<a name=\"612\" href=\"#612\">612</a> \n<a name=\"613\" href=\"#613\">613</a> \n<a name=\"614\" href=\"#614\">614</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 32941.0}