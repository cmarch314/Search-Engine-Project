{"text": "Navigation Up Table of Contents Bibliography Index Title Page Matrix Definition An instance of data type Matrix is a matrix of variables of number type NT The types Matrix and Vector together realize many functions of basic linear algebra Types Matrix NT the ring type of the components Matrix iterator bidirectional iterator for accessing all components row wise Matrix row iterator random access iterator for accessing row entries Matrix column iterator random access iterator for accessing column entries There also constant versions of the above iterators const iterator row const iterator and column const iterator Matrix Identity a tag class for identity initialization Matrix Vector the vector type used Creation Matrix M creates an instance M of type Matrix Matrix M int n creates an instance M of type Matrix of dimension n n initialized to the zero matrix Matrix M int m int n creates an instance M of type Matrix of dimension m n initialized to the zero matrix Matrix M std pair int int p creates an instance M of type Matrix of dimension p first p second initialized to the zero matrix Matrix M int n Identity NT x NT 1 creates an instance M of type Matrix of dimension n n initialized to the identity matrix times x Matrix M int m int n NT x creates an instance M of type Matrix of dimension m n initialized to the matrix with x entries template class Forward iterator Matrix M Forward iterator first Forward iterator last creates an instance M of type Matrix Let S be the ordered set of n column vectors of common dimension m as given by the iterator range first last M is initialized to an m n matrix with the columns as specified by S Precondition Forward iterator has a value type V from which we require to provide a iterator type V const iterator to have V value type NT Note that Vector or std vector NT fulfill these requirements Matrix M std vector Vector A creates an instance M of type Matrix Let A be an array of n column vectors of common dimension m M is initialized to an m n matrix with the columns as specified by A Operations int M row dimension returns n the number of rows of M int M column dimension returns m the number of columns of M std pair int int M dimension returns m n the dimension pair of M Vector M row int i returns the i th row of M an m vector Precondition i m 1 Vector M column int i returns the i th column of M an n vector Precondition i n 1 NT M int i int j returns Mi j Precondition i m 1 and j n 1 void M swap rows int i int j swaps rows i and j Precondition i m 1 and j m 1 void M swap columns int i int j swaps columns i and j Precondition i n 1 and j n 1 row iterator M row begin int i an iterator pointing to the first entry of the ith row Precondition i m 1 row iterator M row end int i an iterator pointing beyond the last entry of the ith row Precondition i m 1 column iterator M column begin int i an iterator pointing to the first entry of the ith column Precondition i n 1 column iterator M column end int i an iterator pointing beyond the last entry of the ith column Precondition i n 1 iterator M begin an iterator pointing to the first entry of M terator M end an iterator pointing beyond the last entry of M The same operations exist for row const iterator column const iterator and const iterator bool M M1 Test for equality bool M M1 Test for inequality Arithmetic Operators Matrix M M1 Addition Precondition M row dimension M1 row dimension and M column dimension M1 column dimension Matrix M M1 Subtraction Precondition M row dimension M1 row dimension and M column dimension M1 column dimension Matrix M Negation Matrix M M1 Multiplication Precondition M column dimension M1 row dimension Vector M Vector vec Multiplication with vector Precondition M column dimension vec dimension Matrix NT x M Multiplication of every entry with x Matrix M NT x Multiplication of every entry with x Next Linear algebraCd FT Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Kernel_d_ref/Concept_Matrix.html", "title": "matrix", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Kernel_d_ref/Matrix.tex' -->\n<html> <head>  \n<title>Matrix</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_main.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_481\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_358\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Concept.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_Matrix\"></A>\n<h2><I>Matrix</I></h2>\n<P>\n\n<H3>Definition</H3>\n<P>\n\nAn instance of data type <I><A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A></I> is a matrix of\nvariables of number type <I>NT</I>. The types <I><A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A></I> and <I><A HREF=\"Concept_Vector.html#Cross_link_anchor_480\">Vector</A></I>\ntogether realize many functions of basic linear algebra.\n<P>\n\n<H3>Types</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A>::NT\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    the ring type of the components.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A>::iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    bidirectional iterator for accessing\nall components row-wise.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A>::row_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    random access iterator for accessing row\n  entries.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A>::column_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    random access iterator for accessing\ncolumn entries.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\nThere also constant versions of the above iterators:\n<I>const_iterator</I>, <I>row_const_iterator</I>, and\n<I>column_const_iterator</I>.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A>::<A HREF=\"../STL_Extension_ref/FunctionObjectClass_Identity.html#Cross_link_anchor_1530\">Identity</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    a tag class for identity initialization\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A>::<A HREF=\"Concept_Vector.html#Cross_link_anchor_480\">Vector</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    the vector type used.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Creation</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A> M;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    creates an instance <I>M</I> of type\n<I><A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A></I>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A> M ( int n);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    creates an instance <I>M</I> of type\n<I><A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A></I> of dimension <MATH><I>n  &times; n</I></MATH> initialized to the zero matrix.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A> M ( int m,  int n);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    creates an instance <I>M</I> of\ntype <I><A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A></I> of dimension <MATH><I>m  &times; n</I></MATH> initialized to the zero\nmatrix.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A> M ( std::pair&lt;int,int&gt; p);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    creates an instance\n<I>M</I> of type <I><A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A></I> of dimension\n<I>p.first</I><MATH><I> &times; </I></MATH><I>p.second</I> initialized to the zero matrix.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A> M ( int n,  <A HREF=\"../STL_Extension_ref/FunctionObjectClass_Identity.html#Cross_link_anchor_1530\">Identity</A>,  NT x = NT(1));\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    creates an\ninstance <I>M</I> of type <I><A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A></I> of dimension <MATH><I>n  &times; n</I></MATH>\ninitialized to the identity matrix (times <I>x</I>).\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A> M ( int m,  int n,  NT x);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    creates an instance <I>M</I>\nof type <I><A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A></I> of dimension <MATH><I>m  &times; n</I></MATH> initialized to the\nmatrix with <I>x</I> entries.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    template &lt;class Forward_iterator&gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A> M ( Forward_iterator first,  Forward_iterator last);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    creates an\ninstance <I>M</I> of type <I><A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A></I>. Let <MATH><I>S</I></MATH> be the ordered set of\n<MATH><I>n</I></MATH> column-vectors of common dimension <MATH><I>m</I></MATH> as given by the iterator\nrange <I>[first,last)</I>.  <I>M</I> is initialized to an <MATH><I>m  &times; n</I></MATH>\nmatrix with the columns as specified by <MATH><I>S</I></MATH>.<BR>\n\n<EM>Precondition: </EM><I>Forward_iterator</I> has a value type <I>V</I> from which we require\nto provide a iterator type <I>V::const_iterator</I>, to have\n<I>V::value_type == NT</I>.<BR>\n\nNote that <I><A HREF=\"Concept_Vector.html#Cross_link_anchor_480\">Vector</A></I> or\n<I>std::vector&lt;NT&gt;</I> fulfill these requirements.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A> M ( std::vector&lt; <A HREF=\"Concept_Vector.html#Cross_link_anchor_480\">Vector</A> &gt; A);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    creates an instance\n<I>M</I> of type <I><A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A></I>. Let <MATH><I>A</I></MATH> be an array of <MATH><I>n</I></MATH>\ncolumn-vectors of common dimension <MATH><I>m</I></MATH>.  <I>M</I> is initialized to an\n<MATH><I>m  &times; n</I></MATH> matrix with the columns as specified by <MATH><I>A</I></MATH>.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Operations</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_int_row_dimension69_;\"></A>\nint\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    M.row_dimension ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns <MATH><I>n</I></MATH>, the number of rows of\n<I>M</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_int_column_dimension69_;\"></A>\nint\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    M.column_dimension ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns <MATH><I>m</I></MATH>, the number of columns\nof <I>M</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_std::pair6int+int9_dimension69_;\"></A>\nstd::pair&lt;int,int&gt;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    M.dimension ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns <MATH><I>(m,n)</I></MATH>, the\ndimension pair of <I>M</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Vector_row6int_i9_;\"></A>\n<A HREF=\"Concept_Vector.html#Cross_link_anchor_480\">Vector</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    M.row ( int i)\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the <MATH><I>i</I></MATH>-th row of <I>M</I> (an\n<MATH><I>m</I></MATH> - vector).<BR>\n\n<EM>Precondition: </EM><MATH><I>0  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> m - 1</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Vector_column6int_i9_;\"></A>\n<A HREF=\"Concept_Vector.html#Cross_link_anchor_480\">Vector</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    M.column ( int i)\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the <MATH><I>i</I></MATH>-th column of <I>M</I>\n(an <MATH><I>n</I></MATH> - vector).<BR>\n\n<EM>Precondition: </EM><MATH><I>0  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> n - 1</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    NT&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     M ( int i,  int j)<A NAME=\"Function_NT__operator696int_i+_int_j9_;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns <MATH><I>M<SUB>i,j</SUB></I></MATH>.<BR>\n\n<EM>Precondition: </EM><MATH><I>0 <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> m-1</I></MATH> and <MATH><I>0 <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> j <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> n-1</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_swap_rows6int_i+_int_j9_;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    M.swap_rows ( int i,  int j)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    swaps rows <MATH><I>i</I></MATH> and <MATH><I>j</I></MATH>.<BR>\n\n<EM>Precondition: </EM><MATH><I>0 <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> m-1</I></MATH> and <MATH><I>0 <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> j <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> m-1</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_swap_columns6int_i+_int_j9_;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    M.swap_columns ( int i,  int j)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    swaps columns <MATH><I>i</I></MATH> and\n<MATH><I>j</I></MATH>.<BR>\n\n<EM>Precondition: </EM><MATH><I>0 <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> n-1</I></MATH> and <MATH><I>0 <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> j <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> n-1</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_row_iterator_row_begin6int_i9_;\"></A>\nrow_iterator\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    M.row_begin ( int i)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    an iterator pointing to the\nfirst entry of the <MATH><I>i</I></MATH>th row.<BR>\n\n<EM>Precondition: </EM><MATH><I>0 <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> m-1</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_row_iterator_row_end6int_i9_;\"></A>\nrow_iterator\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    M.row_end ( int i)\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    an iterator pointing beyond\nthe last entry of the <MATH><I>i</I></MATH>th row.<BR>\n\n<EM>Precondition: </EM><MATH><I>0 <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> m-1</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_column_iterator_column_begin6int_i9_;\"></A>\ncolumn_iterator\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    M.column_begin ( int i)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    an iterator pointing\nto the first entry of the <MATH><I>i</I></MATH>th column.<BR>\n\n<EM>Precondition: </EM><MATH><I>0 <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> n-1</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_column_iterator_column_end6int_i9_;\"></A>\ncolumn_iterator\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    M.column_end ( int i)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    an iterator pointing\nbeyond the last entry of the <MATH><I>i</I></MATH>th column.<BR>\n\n<EM>Precondition: </EM><MATH><I>0 <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> n-1</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_iterator_begin69;\"></A>\niterator\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    M.begin ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    an iterator pointing to the first entry\nof <MATH><I>M</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_terator_end69;\"></A>\nterator\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    M.end ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    an iterator pointing beyond the last entry\nof <MATH><I>M</I></MATH>.\n        </TD></TR>\n        </TABLE>\n<P>\n\nThe same operations exist for <I>row_const_iterator</I>,\n<I>column_const_iterator</I> and <I>const_iterator</I>.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    bool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     M ==  M1<A NAME=\"Function_bool_operator==6const_Matrix__M19_;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Test for equality.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    bool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     M !=  M1<A NAME=\"Function_bool_operator!=6const_Matrix__M19_;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Test for inequality.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Arithmetic Operators</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     M +  M1<A NAME=\"Function_Matrix_operator+_6const_Matrix__M19;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Addition.<BR>\n\n<EM>Precondition: </EM><BR>\n\n<I>M.row_dimension() == M1.row_dimension()</I> and<BR>\n\n<I>M.column_dimension() == M1.column_dimension()</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     M -  M1<A NAME=\"Function_Matrix_operator-_6const_Matrix__M19;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Subtraction.<BR>\n\n<EM>Precondition: </EM><BR>\n\n<I>M.row_dimension() == M1.row_dimension()</I> and<BR>\n\n<I>M.column_dimension() == M1.column_dimension()</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    - M  <A NAME=\"Function_Matrix_operator-69;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Negation.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     M *  M1<A NAME=\"Function_Matrix_operator*6const_Matrix__M19_;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Multiplication.<BR>\n\n<EM>Precondition: </EM><BR>\n\n<I>M.column_dimension() = M1.row_dimension()</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Concept_Vector.html#Cross_link_anchor_480\">Vector</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     M *  <A HREF=\"Concept_Vector.html#Cross_link_anchor_480\">Vector</A> vec<A NAME=\"Function_Vector_operator*6const_Vector__vec9_;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Multiplication with\nvector.<BR>\n\n<EM>Precondition: </EM><BR>\n\n<I>M.column_dimension() = vec.dimension()</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n      NT x *  M<A NAME=\"Function_Matrix_operator*6const_NT__x+_const_Matrix__M9_;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Multiplication of every entry with <I>x</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Concept_Matrix.html#Cross_link_anchor_481\">Matrix</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n      M *  NT x<A NAME=\"Function_Matrix_operator*6const_Matrix__M+_const_NT__x9_;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Multiplication of every entry with <I>x</I>.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Class_Linear_algebraCd.html\"><I>Linear_algebraCd&lt;FT&gt;</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_5!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 37531.0}