{"text": "View Javadoc 1 package swirl workspace 2 3 import java io IOException 4 import java util List 5 import java util Collections 6 7 import javax servlet Filter 8 import javax servlet FilterChain 9 import javax servlet FilterConfig 1 import javax servlet ServletException 11 import javax servlet ServletRequest 12 import javax servlet ServletResponse 13 import javax servlet http HttpServletRequest 14 import javax servlet http HttpServletResponse 15 16 import org apache commons logging Log 17 import org apache commons logging LogFactory 18 19 import swirl workspace common NetUtils 2 import swirl workspace persistence PersistenceManager 21 22 23 Filter that listens for sucessfull updates to swirl resources and maintains a list of modified resources 24 author kari and bpillet 25 26 public class ResourceUpdateFilter implements Filter 27 28 29 the logger for this class 3 private Log log LogFactory getLog this getClass 31 32 private List updateList 33 private Object updateListMutex 34 35 filter configuration passed into init method but not currently used 36 private FilterConfig config 37 38 status codes of interest 39 private static final int OK 2 4 private static final int NOCONTENT 2 4 41 42 43 constructor 44 45 public ResourceUpdateFilter 46 if log isDebugEnabled 47 48 log debug 49 5 51 52 53 see javax servlet Filter init javax servlet FilterConfig 54 55 public void init FilterConfig conf throws ServletException 56 57 config conf 58 try 59 6 if log isDebugEnabled 61 62 log debug initialize 63 64 this needs to be thread safe 65 the list should be wrapped using the Collections synchronizedList method 66 updateList Collections synchronizedList List config getServletContext getAttribute update list 67 updateListMutex config getServletContext getAttribute updateListMutex 68 updateList List config getServletContext getAttribute update list 69 if log isDebugEnabled 7 71 log debug updateList updateList 72 73 74 catch Exception ex 75 76 log error problem starting yancees client ex 77 78 79 8 81 82 see javax servlet Filter doFilter javax servlet ServletRequest javax servlet ServletResponse javax servlet FilterChain 83 84 public void doFilter ServletRequest request ServletResponse response FilterChain chain 85 throws IOException ServletException 86 87 try 88 89 HttpServletRequest req HttpServletRequest request 9 HttpServletResponse res HttpServletResponse response 91 WrappedResponse wrappedRes new WrappedResponse res 92 pass to next filter 93 chain doFilter req wrappedRes 94 now the response should be set 95 String path req getServletPath 96 String method req getMethod 97 int status wrappedRes getStatus 98 if log isDebugEnabled 99 1 log debug 1 1 doFilter in ResourceUpdateFilter nreq method method n req path path 1 2 log debug 1 3 doFilter in ResourceUpdateFilter nStatus status 1 4 1 5 1 6 1 7 if status OK status NOCONTENT 1 8 note we are purposely ignoring status 2 1 CREATED 1 9 if path startsWith PersistenceManager BACKUPPREFIX 11 note we are also ignoring hidden backup files 111 if method equals PUT 112 if log isDebugEnabled 113 114 log debug before adding to updatelist path 115 116 addToUpdateList path 117 else if method equals DELETE 118 removeFromUpdateList path 119 else if method equals MOVE 12 String dest req getHeader Destination 121 if removeFromUpdateList path 122 addToUpdateList dest 123 124 TODO Implement 125 126 else if method equals MKCOL 127 if log isDebugEnabled 128 129 log debug changing MKCOL path 13 131 132 133 134 135 catch Exception ex 136 137 log error problem in resource update filter ex 138 139 14 141 142 see javax servlet Filter destroy 143 144 public void destroy 145 146 147 148 149 Add path to list of resources that have been updated 15 param path path to udated resource 151 152 public void addToUpdateList String path 153 154 String path path substring 1 NetUtils encode path substring 1 155 synchronized updateListMutex 156 if updateList contains path updateList add path 157 log info addToUpdateList updateList 158 159 16 161 162 Remove path from list of resources that have been updated 163 param path updated path to remove from update list 164 return if delete is successful 165 166 public boolean removeFromUpdateList String path 167 168 String path path substring 1 NetUtils encode path substring 1 169 boolean result false 17 synchronized updateListMutex 171 if log isDebugEnabled 172 log debug removeFromUpdateList updateList 173 174 result updateList remove path 175 176 return result 177 178 179 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.20/xref/swirl/workspace/ResourceUpdateFilter.html", "title": "resourceupdatefilter xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>ResourceUpdateFilter xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../stylesheet.css\" />\n</head>\n<body>\n<div id=\"overview\"><a href=\"../../../apidocs/swirl/workspace/ResourceUpdateFilter.html\">View Javadoc</a></div><pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <strong>package</strong> <a href=\"../../swirl/workspace/package-summary.html\">swirl.workspace</a>;\n<a name=\"2\" href=\"#2\">2</a>   \n<a name=\"3\" href=\"#3\">3</a>   <strong>import</strong> java.io.IOException;\n<a name=\"4\" href=\"#4\">4</a>   <strong>import</strong> java.util.List;\n<a name=\"5\" href=\"#5\">5</a>   <strong>import</strong> java.util.Collections;\n<a name=\"6\" href=\"#6\">6</a>   \n<a name=\"7\" href=\"#7\">7</a>   <strong>import</strong> javax.servlet.Filter;\n<a name=\"8\" href=\"#8\">8</a>   <strong>import</strong> javax.servlet.FilterChain;\n<a name=\"9\" href=\"#9\">9</a>   <strong>import</strong> javax.servlet.FilterConfig;\n<a name=\"10\" href=\"#10\">10</a>  <strong>import</strong> javax.servlet.ServletException;\n<a name=\"11\" href=\"#11\">11</a>  <strong>import</strong> javax.servlet.ServletRequest;\n<a name=\"12\" href=\"#12\">12</a>  <strong>import</strong> javax.servlet.ServletResponse;\n<a name=\"13\" href=\"#13\">13</a>  <strong>import</strong> javax.servlet.http.HttpServletRequest;\n<a name=\"14\" href=\"#14\">14</a>  <strong>import</strong> javax.servlet.http.HttpServletResponse;\n<a name=\"15\" href=\"#15\">15</a>  \n<a name=\"16\" href=\"#16\">16</a>  <strong>import</strong> org.apache.commons.logging.Log;\n<a name=\"17\" href=\"#17\">17</a>  <strong>import</strong> org.apache.commons.logging.LogFactory;\n<a name=\"18\" href=\"#18\">18</a>  \n<a name=\"19\" href=\"#19\">19</a>  <strong>import</strong> swirl.workspace.common.NetUtils;\n<a name=\"20\" href=\"#20\">20</a>  <strong>import</strong> swirl.workspace.persistence.PersistenceManager;\n<a name=\"21\" href=\"#21\">21</a>  \n<a name=\"22\" href=\"#22\">22</a>  <em>/**<em>*</em></em>\n<a name=\"23\" href=\"#23\">23</a>  <em> * Filter that listens for sucessfull updates to swirl resources and maintains a list of modified resources.</em>\n<a name=\"24\" href=\"#24\">24</a>  <em> * @author kari and bpillet</em>\n<a name=\"25\" href=\"#25\">25</a>  <em> */</em>\n<a name=\"26\" href=\"#26\">26</a>  <strong>public</strong> <strong>class</strong> <a href=\"../../swirl/workspace/ResourceUpdateFilter.html\">ResourceUpdateFilter</a> implements Filter\n<a name=\"27\" href=\"#27\">27</a>  {\n<a name=\"28\" href=\"#28\">28</a>  \n<a name=\"29\" href=\"#29\">29</a>  \t<em>/**<em>* the logger for this class */</em></em>\n<a name=\"30\" href=\"#30\">30</a>  \t<strong>private</strong> Log log = LogFactory.getLog(<strong>this</strong>.getClass());\n<a name=\"31\" href=\"#31\">31</a>  \t\n<a name=\"32\" href=\"#32\">32</a>  \t<strong>private</strong> List updateList;\n<a name=\"33\" href=\"#33\">33</a>  \t<strong>private</strong> Object updateListMutex;\n<a name=\"34\" href=\"#34\">34</a>  \t\n<a name=\"35\" href=\"#35\">35</a>  \t<em>/**<em>* filter configuration, passed into init method but not currently used */</em></em>\n<a name=\"36\" href=\"#36\">36</a>  \t<strong>private</strong> FilterConfig config;\n<a name=\"37\" href=\"#37\">37</a>  \t\n<a name=\"38\" href=\"#38\">38</a>  \t<em class=\"comment\">// status codes of interest</em>\n<a name=\"39\" href=\"#39\">39</a>  \t<strong>private</strong> <strong>static</strong> <strong>final</strong> <strong>int</strong> OK = 200;\n<a name=\"40\" href=\"#40\">40</a>  \t<strong>private</strong> <strong>static</strong> <strong>final</strong> <strong>int</strong> NOCONTENT = 204;\n<a name=\"41\" href=\"#41\">41</a>  \n<a name=\"42\" href=\"#42\">42</a>  \t<em>/**<em>*</em></em>\n<a name=\"43\" href=\"#43\">43</a>  <em>\t * \tconstructor</em>\n<a name=\"44\" href=\"#44\">44</a>  <em>\t */</em>\n<a name=\"45\" href=\"#45\">45</a>  \t<strong>public</strong> <a href=\"../../swirl/workspace/ResourceUpdateFilter.html\">ResourceUpdateFilter</a>() {\n<a name=\"46\" href=\"#46\">46</a>  \t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"47\" href=\"#47\">47</a>          {\n<a name=\"48\" href=\"#48\">48</a>  \t\t\tlog.debug(<span class=\"string\">\"()\"</span>);\t\n<a name=\"49\" href=\"#49\">49</a>          }\n<a name=\"50\" href=\"#50\">50</a>  \t}\n<a name=\"51\" href=\"#51\">51</a>  \n<a name=\"52\" href=\"#52\">52</a>  \t<em>/**<em>*</em></em>\n<a name=\"53\" href=\"#53\">53</a>  <em>\t * @see javax.servlet.Filter#init(javax.servlet.FilterConfig)</em>\n<a name=\"54\" href=\"#54\">54</a>  <em>\t */</em>\n<a name=\"55\" href=\"#55\">55</a>  \t<strong>public</strong> <strong>void</strong> init(FilterConfig conf) throws ServletException \n<a name=\"56\" href=\"#56\">56</a>  \t{\n<a name=\"57\" href=\"#57\">57</a>  \t\tconfig = conf;\n<a name=\"58\" href=\"#58\">58</a>  \t\t<strong>try</strong>\n<a name=\"59\" href=\"#59\">59</a>  \t\t{\n<a name=\"60\" href=\"#60\">60</a>  \t\t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"61\" href=\"#61\">61</a>  \t        {\n<a name=\"62\" href=\"#62\">62</a>  \t\t\t\tlog.debug(<span class=\"string\">\"initialize()\"</span>);\n<a name=\"63\" href=\"#63\">63</a>  \t        }\n<a name=\"64\" href=\"#64\">64</a>  \t\t\t<em class=\"comment\">// this needs to be thread-safe</em>\n<a name=\"65\" href=\"#65\">65</a>  \t\t\t<em class=\"comment\">// the list should be \"wrapped\" using the  Collections.synchronizedList method</em>\n<a name=\"66\" href=\"#66\">66</a>  \t\t\tupdateList = Collections.synchronizedList((List)config.getServletContext().getAttribute(<span class=\"string\">\"update.list\"</span>));\n<a name=\"67\" href=\"#67\">67</a>  \t\t\tupdateListMutex = config.getServletContext().getAttribute(<span class=\"string\">\"updateListMutex\"</span>); \n<a name=\"68\" href=\"#68\">68</a>  \t\t\t<em class=\"comment\">//updateList = (List)config.getServletContext().getAttribute(\"update.list\");</em>\n<a name=\"69\" href=\"#69\">69</a>  \t\t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"70\" href=\"#70\">70</a>  \t        {\n<a name=\"71\" href=\"#71\">71</a>  \t\t\t\tlog.debug(<span class=\"string\">\"updateList: \"</span> + updateList);\n<a name=\"72\" href=\"#72\">72</a>  \t        }\n<a name=\"73\" href=\"#73\">73</a>  \t\t}\n<a name=\"74\" href=\"#74\">74</a>  \t\t<strong>catch</strong>(Exception ex)\n<a name=\"75\" href=\"#75\">75</a>  \t\t{\n<a name=\"76\" href=\"#76\">76</a>  \t\t\tlog.error(<span class=\"string\">\"problem starting yancees client\"</span>, ex);\n<a name=\"77\" href=\"#77\">77</a>  \t\t}\n<a name=\"78\" href=\"#78\">78</a>  \n<a name=\"79\" href=\"#79\">79</a>  \t}\n<a name=\"80\" href=\"#80\">80</a>  \n<a name=\"81\" href=\"#81\">81</a>  \t<em>/**<em>*</em></em>\n<a name=\"82\" href=\"#82\">82</a>  <em>\t * @see javax.servlet.Filter#doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)</em>\n<a name=\"83\" href=\"#83\">83</a>  <em>\t */</em>\n<a name=\"84\" href=\"#84\">84</a>  \t<strong>public</strong> <strong>void</strong> doFilter(ServletRequest request, ServletResponse response, FilterChain chain) \n<a name=\"85\" href=\"#85\">85</a>  \tthrows IOException, ServletException\n<a name=\"86\" href=\"#86\">86</a>  \t{\t\t\n<a name=\"87\" href=\"#87\">87</a>  \t\t<strong>try</strong> \n<a name=\"88\" href=\"#88\">88</a>  \t\t{\n<a name=\"89\" href=\"#89\">89</a>  \t\t\tHttpServletRequest req = (HttpServletRequest)request;\n<a name=\"90\" href=\"#90\">90</a>  \t\t\tHttpServletResponse res = (HttpServletResponse)response;\n<a name=\"91\" href=\"#91\">91</a>  \t\t\tWrappedResponse wrappedRes = <strong>new</strong> <a href=\"../../swirl/workspace/WrappedResponse.html\">WrappedResponse</a>(res);\n<a name=\"92\" href=\"#92\">92</a>  \t\t\t<em class=\"comment\">// pass to next filter</em>\n<a name=\"93\" href=\"#93\">93</a>  \t\t\tchain.doFilter(req, wrappedRes);\n<a name=\"94\" href=\"#94\">94</a>  \t\t\t<em class=\"comment\">// now the response should be set</em>\n<a name=\"95\" href=\"#95\">95</a>  \t\t\tString path = req.getServletPath();\n<a name=\"96\" href=\"#96\">96</a>  \t\t\tString method = req.getMethod();\n<a name=\"97\" href=\"#97\">97</a>  \t\t\t<strong>int</strong> status = wrappedRes.getStatus();\n<a name=\"98\" href=\"#98\">98</a>  \t\t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"99\" href=\"#99\">99</a>  \t        {\n<a name=\"100\" href=\"#100\">100</a> \t\t\t\tlog.debug(\n<a name=\"101\" href=\"#101\">101</a> \t\t\t\t\t<span class=\"string\">\"doFilter() in ResourceUpdateFilter \\nreq.method: \"</span> + method + <span class=\"string\">\"\\n req.path: \"</span> + path);\n<a name=\"102\" href=\"#102\">102</a> \t\t\t\tlog.debug(\n<a name=\"103\" href=\"#103\">103</a> \t\t\t\t\t<span class=\"string\">\"doFilter() in ResourceUpdateFilter \\nStatus: \"</span> + status);\n<a name=\"104\" href=\"#104\">104</a> \t        }\n<a name=\"105\" href=\"#105\">105</a> \t\t\t\n<a name=\"106\" href=\"#106\">106</a> \n<a name=\"107\" href=\"#107\">107</a> \t\t\t<strong>if</strong> ((status == OK)||(status == NOCONTENT)) {\n<a name=\"108\" href=\"#108\">108</a> \t\t\t\t<em class=\"comment\">// note: we are purposely ignoring status 201, CREATED</em>\n<a name=\"109\" href=\"#109\">109</a> \t\t\t\t<strong>if</strong> (!path.startsWith(PersistenceManager.BACKUPPREFIX)) {\n<a name=\"110\" href=\"#110\">110</a> \t\t\t\t\t<em class=\"comment\">// note: we are also ignoring hidden backup files</em>\n<a name=\"111\" href=\"#111\">111</a> \t\t\t\t\t<strong>if</strong> (method.equals(<span class=\"string\">\"PUT\"</span>)) {\n<a name=\"112\" href=\"#112\">112</a> \t\t\t\t\t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"113\" href=\"#113\">113</a> \t\t\t\t        {\n<a name=\"114\" href=\"#114\">114</a> \t\t\t\t\t\t\tlog.debug(<span class=\"string\">\"before adding to updatelist: \"</span> + path);\n<a name=\"115\" href=\"#115\">115</a> \t\t\t\t        }\n<a name=\"116\" href=\"#116\">116</a> \t\t\t\t\t\taddToUpdateList(path);\n<a name=\"117\" href=\"#117\">117</a> \t\t\t\t\t} <strong>else</strong> <strong>if</strong> (method.equals(<span class=\"string\">\"DELETE\"</span>)) {\n<a name=\"118\" href=\"#118\">118</a> \t\t\t\t\t\tremoveFromUpdateList(path);\n<a name=\"119\" href=\"#119\">119</a> \t\t\t\t\t} <strong>else</strong> <strong>if</strong> (method.equals(<span class=\"string\">\"MOVE\"</span>)) {\n<a name=\"120\" href=\"#120\">120</a> \t\t\t\t\t\t<em class=\"comment\">//String dest = req.getHeader(\"Destination\");</em>\n<a name=\"121\" href=\"#121\">121</a> \t\t\t\t\t\t<em class=\"comment\">//if (removeFromUpdateList(path)) {</em>\n<a name=\"122\" href=\"#122\">122</a> \t\t\t\t\t\t<em class=\"comment\">//\taddToUpdateList(dest);</em>\n<a name=\"123\" href=\"#123\">123</a> \t\t\t\t\t\t<em class=\"comment\">//}</em>\n<a name=\"124\" href=\"#124\">124</a> \t\t\t\t\t\t<em>/**<em>* TODO Implement */</em></em>\n<a name=\"125\" href=\"#125\">125</a> \t\t\t\t\t}\n<a name=\"126\" href=\"#126\">126</a> \t\t\t\t\t<strong>else</strong> <strong>if</strong> (method.equals(<span class=\"string\">\"MKCOL\"</span>)) {\n<a name=\"127\" href=\"#127\">127</a> \t\t\t\t\t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"128\" href=\"#128\">128</a> \t\t\t\t        {\n<a name=\"129\" href=\"#129\">129</a> \t\t\t\t\t\t\tlog.debug(<span class=\"string\">\"changing MKCOL: \"</span> + path);\n<a name=\"130\" href=\"#130\">130</a> \t\t\t\t        }\n<a name=\"131\" href=\"#131\">131</a> \t\t\t\t\t}\n<a name=\"132\" href=\"#132\">132</a> \t\t\t\t}\n<a name=\"133\" href=\"#133\">133</a> \t\t\t}\n<a name=\"134\" href=\"#134\">134</a> \t\t}\n<a name=\"135\" href=\"#135\">135</a> \t\t<strong>catch</strong>(Exception ex)\n<a name=\"136\" href=\"#136\">136</a> \t\t{\n<a name=\"137\" href=\"#137\">137</a> \t\t\tlog.error(<span class=\"string\">\"problem in resource update filter: \"</span>, ex);\n<a name=\"138\" href=\"#138\">138</a> \t\t}\n<a name=\"139\" href=\"#139\">139</a> \t}\n<a name=\"140\" href=\"#140\">140</a> \t\n<a name=\"141\" href=\"#141\">141</a> \t<em>/**<em>*</em></em>\n<a name=\"142\" href=\"#142\">142</a> <em>\t * @see javax.servlet.Filter#destroy()</em>\n<a name=\"143\" href=\"#143\">143</a> <em>\t */</em>\n<a name=\"144\" href=\"#144\">144</a> \t<strong>public</strong> <strong>void</strong> destroy() {\n<a name=\"145\" href=\"#145\">145</a> \t\t\n<a name=\"146\" href=\"#146\">146</a> \t}\n<a name=\"147\" href=\"#147\">147</a> \n<a name=\"148\" href=\"#148\">148</a> \t<em>/**<em>*</em></em>\n<a name=\"149\" href=\"#149\">149</a> <em>\t * Add path to list of resources that have been updated</em>\n<a name=\"150\" href=\"#150\">150</a> <em>\t * @param path path to udated resource</em>\n<a name=\"151\" href=\"#151\">151</a> <em>\t */</em>\n<a name=\"152\" href=\"#152\">152</a> \t<strong>public</strong> <strong>void</strong> addToUpdateList(String _path) \n<a name=\"153\" href=\"#153\">153</a> \t{\n<a name=\"154\" href=\"#154\">154</a> \t    String path = _path.substring(0, 1) + NetUtils.encode(_path.substring(1));\n<a name=\"155\" href=\"#155\">155</a> \t    <strong>synchronized</strong>(updateListMutex) {\n<a name=\"156\" href=\"#156\">156</a> \t\t\t<strong>if</strong> (!updateList.contains(path)) updateList.add(path);\n<a name=\"157\" href=\"#157\">157</a> \t\t\tlog.info(<span class=\"string\">\"addToUpdateList: \"</span> + updateList);\n<a name=\"158\" href=\"#158\">158</a> \t    }\n<a name=\"159\" href=\"#159\">159</a> \t}\n<a name=\"160\" href=\"#160\">160</a> \t\n<a name=\"161\" href=\"#161\">161</a> \t<em>/**<em>*</em></em>\n<a name=\"162\" href=\"#162\">162</a> <em>\t * Remove path from list of resources that have been updated</em>\n<a name=\"163\" href=\"#163\">163</a> <em>\t * @param path updated path to remove from update list</em>\n<a name=\"164\" href=\"#164\">164</a> <em>\t * @return if delete is successful</em>\n<a name=\"165\" href=\"#165\">165</a> <em>\t */</em>\n<a name=\"166\" href=\"#166\">166</a> \t<strong>public</strong> <strong>boolean</strong> removeFromUpdateList (String _path)\n<a name=\"167\" href=\"#167\">167</a> \t{\n<a name=\"168\" href=\"#168\">168</a> \t    String path = _path.substring(0, 1) + NetUtils.encode(_path.substring(1));\n<a name=\"169\" href=\"#169\">169</a> \t    <strong>boolean</strong> result = false; \n<a name=\"170\" href=\"#170\">170</a> \t    <strong>synchronized</strong>(updateListMutex) {\n<a name=\"171\" href=\"#171\">171</a> \t    \t<strong>if</strong>(log.isDebugEnabled()) {\n<a name=\"172\" href=\"#172\">172</a> \t    \t\tlog.debug(<span class=\"string\">\"removeFromUpdateList: \"</span> + updateList);\n<a name=\"173\" href=\"#173\">173</a> \t    \t}\n<a name=\"174\" href=\"#174\">174</a> \t\t\tresult = updateList.remove(path);\n<a name=\"175\" href=\"#175\">175</a> \t    }\n<a name=\"176\" href=\"#176\">176</a> \t    <strong>return</strong> result;\n<a name=\"177\" href=\"#177\">177</a> \t}\n<a name=\"178\" href=\"#178\">178</a> \t\n<a name=\"179\" href=\"#179\">179</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 32924.0}