{"text": "OEChem C Theory Manual Version 1 3 1 Previous 1 6 Sprouting Hydrogens in Up 1 Creating Atoms Bonds Next 11 Connectivity Processing 1 7 Using NewConf The most common method to create conformers in a molecule is by reading a molecule from a file see chapter Reading and Writing Molecules However when manipulating molecules it is often necessary to create conformers on the fly In OEChem this is done with the OEMCMolBase NewConf function There are five prominent overloads of NewConf All of the overloads create conformers with the capacity to store coordinates for the current number of atoms in the molecule NewAtom and NewBond adjust this capacity as necessary The default OEMCMolBase constructor puts the molecule in a state with a single empty conformer as does the OEMCMolBase Clear function The DeleteConfs function of the OEMCMolBase removes all of the conformers of the molecule include oechem h include oesystem h using namespace OEChem using namespace std int main OEMol mol cerr Default NumConfs mol NumConfs endl mol NewConf cerr After One Additional NumConfs mol NumConfs endl mol DeleteConfs cerr After Deletion NumConfs mol NumConfs endl return Download as text The code above will produce the output 1 2 The overloads of the NewConf function are NewConf NewConf const float coords NewConf const OEMolBase mol NewConf const OEConfBase conf After the NewConf with no arguments has been called the coordinates of individual atoms can be set using the OEConfBase SetCoords function which takes an atom or all of the atoms can be set at once with the OEConfBase SetCoords which takes only a float or only a double The NewConf overload which takes an argument float is expecting an array of size 3 GetMaxAtomIdx sizeof float with the Cartesian coordinates of each OEAtomBase atom of the new conformer in coords atom GetIdx 3 The NewConf which takes a pointer to a OEMolBase is expecting the molecule passed in to have the same graph as the OEMCMolBase which is the parent of the new conformer It is important to note that this version of NewConf can take an OEGraphMol OEMol or OEMCMol In the latter two cases the coordinates of the new conformer will come from the active conformation of the molecule passed Finally there is an overload which takes a pointer to a conformer This function behaves the same as the overload which takes an OEMolBase include oesystem h include oechem h using namespace OESystem using namespace OEChem void GetGoodMol OEMCMolBase destination const OEMCMolBase source destination DeleteConfs OEConfBase newConf char buf 2 48 OEIter OEConfBase conf for conf source GetConfs conf conf if conf GetEnergy 15 5f newConf destination NewConf conf sprintf buf Low Energy Conformer energy 3f newConf GetEnergy newConf SetTitle buf int main OEMol mol OEMol goodmol oemolistream mis input oeb oemolostream mos output sdf while OEReadMolecule mis mol GetGoodMol goodmol mol OEWriteMolecule mos goodmol return Download as text The Example above demonstrates copying conformers from one OEMol to another using the NewConf and DeleteConfs functions The main routine reads all of the molecules from the file input oeb and writes the molecules with only their low energy conformations to output sdf The function GetGoodMol generates a destination molecule that contains only the low energy conformations of the source molecule The title of each new conformer is set to reflect its energy OEChem C Theory Manual Version 1 3 1 Previous 1 6 Sprouting Hydrogens in Up 1 Creating Atoms Bonds Next 11 Connectivity Processing Documentation released on July 3 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/oechem/cplusprog/node115.html", "title": "10.7 using newconf", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<html>\n<head>\n<title>10.7 Using NewConf</title>\n<META NAME=\"description\" CONTENT=\"10.7 Using NewConf\">\n<META NAME=\"keywords\" CONTENT=\"cplusprog\">\n<META NAME=\"resource-type\" CONTENT=\"document\">\n<META NAME=\"distribution\" CONTENT=\"global\">\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n<link rel=\"STYLESHEET\" href=\"cplusprog.css\">\n<link rel=\"first\" href=\"cplusprog.html\">\n<link rel=\"contents\" href=\"contents.html\" title=\"Contents\">\n\n<LINK REL=\"previous\" HREF=\"node114.html\">\n<LINK REL=\"up\" HREF=\"node108.html\">\n<LINK REL=\"next\" HREF=\"node116.html\">\n</head>\n<body>\n<DIV CLASS=\"navigation\">\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node114.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node108.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node116.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - C++ Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><img src=\"../icons/blank_4.gif\"\n  border=\"0\" alt=\"\"></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node114.html\">10.6 Sprouting Hydrogens in</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node108.html\">10. Creating Atoms, Bonds,</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node116.html\">11. Connectivity Processing</A>\n<br><hr>\n</DIV>\n<!--End of Navigation Panel-->\n\n<H1><A NAME=\"SECTION0013700000000000000000\">\n10.7 Using NewConf</A>\n</H1>\n\n<P>\nThe most common method to create conformers in a molecule is by reading a\nmolecule from a file (see chapter \"Reading and Writing Molecules\").\nHowever, when manipulating molecules it is often necessary to create\nconformers on-the-fly.  In OEChem, this is done with the\n<code>OEMCMolBase::NewConf</code> function.  There are five prominent overloads\nof <code>NewConf</code>.  All of the overloads create conformers with the\ncapacity to store coordinates for the current number of atoms in the\nmolecule.  <code>NewAtom</code> and <code>NewBond</code> adjust this capacity as\nnecessary.  The default OEMCMolBase constructor puts the molecule in a\nstate with a single empty conformer (as does the <code>OEMCMolBase::Clear</code>\nfunction).  The <code>DeleteConfs</code> function of the OEMCMolBase removes\n<i>all</i> of the conformers of the molecule.\n\n<P>\n<dl><dd><pre class=\"verbatim\">#include \"oechem.h\"\n#include \"oesystem.h\"\n\nusing namespace OEChem;\nusing namespace std;\n\nint main()\n{\n  OEMol mol;\n\n  cerr &lt;&#60; \"Default NumConfs = \" &lt;&#60; mol.NumConfs() &lt;&#60; endl;\n\n  mol.NewConf();\n\n  cerr &lt;&#60; \"After One Additional, NumConfs = \" &lt;&#60; mol.NumConfs() &lt;&#60; endl;\n\n  mol.DeleteConfs();\n\n  cerr &lt;&#60; \"After Deletion, NumConfs = \" &lt;&#60; mol.NumConfs() &lt;&#60; endl;\n\n  return 0;\n}\n</pre>\n<div class=\"verbatiminput-footer\">\n<a href=\"ch10-5.txt\" type=\"text/plain\">Download as text.</a>\n</div>\n</dd></dl>\n\n<P>\nThe code above will produce the output:\n<dl><dd><pre class=\"verbatim\">1\n2\n0\n</pre></dl>\n\n<P>\nThe overloads of the <code>NewConf</code> function are:\n<dl><dd><pre class=\"verbatim\">NewConf()\nNewConf(const float *coords)\nNewConf(const OEMolBase *mol)\nNewConf(const OEConfBase *conf)\n</pre></dl>\n\n<P>\nAfter the <code>NewConf</code> with no arguments has been called, the coordinates\nof individual atoms can be set using the <code>OEConfBase::SetCoords</code>\nfunction which takes an atom, or all of the atoms can be set at once with\nthe <code>OEConfBase::SetCoords</code> which takes only a <code>float*</code> or only a\n<code>double*</code>.\n\n<P>\nThe <code>NewConf</code> overload which takes an argument float* is expecting an\narray of size <code>3*GetMaxAtomIdx()*sizeof(float)</code> with the Cartesian\ncoordinates of each <code>OEAtomBase atom</code> of the new conformer in\n<code>coords[atom-&gt;GetIdx()*3]</code>.\n\n<P>\nThe <code>NewConf</code> which takes a pointer to a OEMolBase is expecting the\nmolecule passed in to have the same graph as the OEMCMolBase which is the\nparent of the new conformer.  It is important to note that this version of\n<code>NewConf</code> can take an OEGraphMol, OEMol, or OEMCMol.  In the latter\ntwo cases, the coordinates of the new conformer will come from the active\nconformation of the molecule passed.\n\n<P>\nFinally, there is an overload which takes a pointer to a conformer.  This\nfunction behaves the same as the overload which takes an OEMolBase.\n\n<P>\n<dl><dd><pre class=\"verbatim\">#include \"oesystem.h\"\n#include \"oechem.h\"\n\nusing namespace OESystem;\nusing namespace OEChem;\n\nvoid GetGoodMol(OEMCMolBase &amp;destination,const OEMCMolBase &amp;source)\n{\n  destination.DeleteConfs();\n  OEConfBase *newConf;\n  char buf[2048];\n\n  OEIter&lt;OEConfBase&gt; conf;\n  for(conf = source.GetConfs();conf;++conf)\n  {\n    if(conf-&gt;GetEnergy() &lt; -15.5f)\n    {\n      newConf = destination.NewConf(conf);\n      sprintf(buf,\"Low Energy Conformer: energy = %.3f\",newConf-&gt;GetEnergy());\n      newConf-&gt;SetTitle(buf);\n    }\n  }\n}\n\nint main()\n{\n  OEMol mol;\n  OEMol goodmol;\n\n  oemolistream mis(\"input.oeb\");\n  oemolostream mos(\"output.sdf\");\n\n  while(OEReadMolecule(mis,mol))\n  {\n    GetGoodMol(goodmol,mol);\n    OEWriteMolecule(mos,goodmol);\n  }\n\n  return 0;\n}\n</pre>\n<div class=\"verbatiminput-footer\">\n<a href=\"ch10-6.txt\" type=\"text/plain\">Download as text.</a>\n</div>\n</dd></dl>\n\n<P>\nThe Example above demonstrates copying conformers from one OEMol to another\nusing the <code>NewConf</code> and <code>DeleteConfs</code> functions.  The main\nroutine reads all of the molecules from the file \"input.oeb\" and writes the\nmolecules with only their low-energy conformations to \"output.sdf\".  The\nfunction <code>GetGoodMol</code> generates a destination molecule that contains\nonly the low-energy conformations of the source molecule.  The title of\neach new conformer is set to reflect its energy.\n\n<P>\n\n<DIV CLASS=\"navigation\">\n<p><hr>\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node114.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node108.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node116.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - C++ Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><img src=\"../icons/blank_4.gif\"\n  border=\"0\" alt=\"\"></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node114.html\">10.6 Sprouting Hydrogens in</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node108.html\">10. Creating Atoms, Bonds,</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node116.html\">11. Connectivity Processing</A>\n<hr>\n<span class=\"release-info\">Documentation released on July 30, 2004.</span>\n</DIV>\n<!--End of Navigation Panel-->\n\n</BODY>\n</HTML>\n", "id": 38656.0}