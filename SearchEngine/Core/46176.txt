{"text": "Search LoginPreferencesHelp GuideAbout Trac WikiTimelineRoadmapBrowse SourceView TicketsSearch Context Navigation Previous ChangeNext Change Changeset 116 for trunk Nomatic GAIM current gtk plugins nomatic nomatic c View differences inlineside by side Show lines around each change Show the changes in full context Ignore Blank lines Case changes White space changes Timestamp Nov 17 2 6 5 4 PM 8 years ago Author djp3Message Getting ready to split client and server File 1 edited trunk Nomatic GAIM current gtk plugins nomatic nomatic c modified 13 diffs Legend UnmodifiedAddedRemoved trunk Nomatic GAIM current gtk plugins nomatic nomatic c r113 r116 2121 include glib h 2222 include gdk gdkkeysyms h 23 include gtk gtk h 24 25 2326 include libgaim protocols yahoo yahoo h 2427 include libgaim protocols oscar oscar h 3336 include nomatic h 3437 include completionField h 35 include featureVector h 36 include featureVectors h 38 include feature h 39 include featureCollection h 4 include classification h 3741 include networkHelper h 3842 39 43 Local function declarations 44static void makeGUI GaimBuddyList blist GaimPlugin plugin 4 45 4146 4247 Declarations of the individual widgets 4348GtkWidget button NULL textbox NULL label NULL 49 5 GtkWidget locationTextbox NULL 51GtkWidget activityTextbox NULL 52GtkWidget socialStatusTextbox NULL 53GtkWidget freeFormTextbox NULL 54 4455GtkWidget hbox labels NULL hbox text NULL hbox cus NULL hbox options NULL hbox cusLab NULL hbox buts NULL 4556GtkTooltips tooltips 496 5 61 51 Function declarations 52 static gboolean customMessageCB GtkEntry entry GdkEventKey event gpointer data 53 5462 5563void clearCurrentStatus 6371 6472 73static char freeFormStatus NULL 74static char locationStatus NULL 75static char activityStatus NULL 76static char socialStatusStatus NULL 77 78 Returns true if there is a change 79bool setParse char status const char p 8 81 Degenerate case 82 if status NULL 83 gaim debug fatal NULL Nomatic setParse called with NULL parameter n 84 85 86 if status NULL 87 if p NULL 88 return FALSE 89 9 else 91 status strdup p 92 return TRUE 93 94 95 else 96 if p NULL 97 free status 98 status NULL 99 return TRUE 1 1 1 else 1 2 if strcmp status p 1 3 return FALSE 1 4 1 5 else 1 6 free status 1 7 status strdup p 1 8 return TRUE 1 9 11 111 112 113 114bool setFreeFormStatus const char p 115 116 return setParse freeFormStatus p 117 118 119const char getFreeFormStatus 12 121 return freeFormStatus 122 123 124bool setParseLocation const char p 125 126 return setParse locationStatus p 127 128 129const char getParseLocation 13 131 return locationStatus 132 133 134bool setParseActivity const char p 135 136 return setParse activityStatus p 137 138 139const char getParseActivity 14 141 return activityStatus 142 143 144bool setParseSocialStatus const char p 145 146 return setParse socialStatusStatus p 147 148 149const char getParseSocialStatus 15 151 return socialStatusStatus 152 153 154 155char makeStatusFromStoredParse 156 157 return makeStatusFromParse locationStatus activityStatus socialStatusStatus 158 159 16 char makeStatusFromParse char l char a char ss 161 162char string 163 164 string char calloc 1 24 sizeof char 165 166 snprintf string 1 24 sizeof char s s s l a ss 167 168 return string 169 17 171 65172void setCurrentStatus gchar phrase 66173 79186time t tim time NULL 8 187struct tm timeinfo localtime tim http www cplusplus com ref ctime tm html 81 featureVector fv 82 featureVector nn 188feature f 189classification nn 8319 84191 86193 lastCheck timeinfo tm min 87194 88 fv senseFeatureVector 89 nn findNearestNeighborFeatureVector fv 195 f senseFeature 196 if f NULL 197 gaim debug misc NULL Nomatic Sensing status minutes d day d ip d d d d n f minutes f wday f ip4 f ip3 f ip2 f ip1 198 nn findNearestNeighborFeature f 199 freeFeature f 9 2 91 if nn NULL 92 Probably because there is nothing to train on 93 94 else 95 if nn phrase NULL 96 gaim debug fatal NULL Nomatic NULL NN phrase n 2 1 if nn NULL 2 2 Probably because there is nothing to train on 972 3 98 99 setCurrentStatus nn phrase 1 gtk entry set text GTK ENTRY textbox nn phrase 1 1 1 2 gaim debug misc NULL Nomatic Sensing status minutes d day d ip d d d d phrase s n fv minutes fv wday fv ip4 fv ip3 fv ip2 fv ip1 fv phrase 1 3 gaim debug misc NULL Nomatic Predicting by NN minutes d day d ip d d d d phrase s n nn minutes nn wday nn ip4 nn ip3 nn ip2 nn ip1 nn phrase 1 4 1 5 1 6 1 7 if fv NULL 1 8 freeFeatureVector fv 2 4 else 2 5 if nn isFreeForm 2 6 setCurrentStatus nn context freeForm 2 7 gtk entry set text GTK ENTRY freeFormTextbox nn context freeForm 2 8 gaim debug misc NULL Nomatic Predicting by NN Free Form s n nn context freeForm 2 9 21 else 211 setParseLocation nn context parsed location 212 gtk entry set text GTK ENTRY locationTextbox nn context parsed location 213 214 setParseActivity nn context parsed activity 215 gtk entry set text GTK ENTRY activityTextbox nn context parsed activity 216 217 setParseSocialStatus nn context parsed socialStatus 218 gtk entry set text GTK ENTRY socialStatusTextbox nn context parsed socialStatus 219 22 char s makeStatusFromStoredParse 221 setCurrentStatus s 222 gaim debug misc NULL Nomatic Predicting by NN Parsed s n s 223 free s 224 225 226 1 9227 11 228 19231 gboolean plugin load GaimPlugin plugin 193311 194 featureVector fv NULL 312feature fv NULL 313classification c NULL 195314 196315 Create data storage 197 featureVectorsInit 316 featureCollectionInit 198317 199318 Open the file with stored feature vectors 2 5324 gaim debug misc NULL Nomatic Opened a stored data file for Nomatic n 2 6325 while feof dataFile 2 7 if inputFeatureVector dataFile fv 2 8 storeFeatureVector fv 326 if inputFeature dataFile fv 327 if inputClassification dataFile c 328 storeFeature fv c 329 2 933 21 331 223344plugin unload GaimPlugin plugin 224345 225 featureVectorsShutdown 346 featureCollectionShutdown 226347 227348 return TRUE 228349 22935 23 231 This function is triggered when the Nomatic Custom Message Box is updated 232351static gboolean 233 customMessageCB GtkEntry entry GdkEventKey event gpointer data 234 235 gboolean handleIt FALSE 236 gchar phrase 237 featureVector fv NULL 238 239 if data NULL 24 return FALSE 241 242 352isReturnKey GdkEventKey event gpointer data 353 243354 if strcmp data key press event 244355 if event keyval GDK Return 245 gaim debug misc NULL Nomatic customMessageCB called on return key n 246 handleIt TRUE 247 248 249 else if strcmp data focus out event 25 gaim debug misc NULL Nomatic customMessageCB called on focus out event n 251 handleIt TRUE 252 253 254 if handleIt TRUE 356 gaim debug misc NULL Nomatic Classification Updated from return key n 357 return TRUE 358 359 36 return FALSE 361 362 363static gboolean 364isFocusOutEvent GdkEventKey event gpointer data 365 366 if strcmp data focus out event 367 gaim debug misc NULL Nomatic Classification Updated from focus out event n 368 return TRUE 369 37 return FALSE 371 372 373 This function is triggered when the Nomatic Free Form Status is updated 374static gboolean 375setClassificationFreeForm GtkEntry entry GdkEventKey event gpointer data 376 377gboolean handleIt FALSE 378gboolean completionSelected TRUE 379gchar phrase 38 static int lastKey 1 381 382 handleIt handleIt isReturnKey event data 383 handleIt handleIt isFocusOutEvent event data 384 385 This is a wierd corner case when the completion list is empty the user enters some text and then hits tab 386 if lastKey GDK Tab event keyval isFocusOutEvent event data 387 completionSelected FALSE 388 389 if isReturnKey event data 39 completionSelected FALSE 391 392 lastKey event keyval 393 394 if handleIt 395 GtkEntryCompletion completion 396 if completionSelected 397 completion gtk entry get completion entry 398 int selection completion priv current selected 399 4 if selection 1 4 1 GtkListStore store 4 2 store GTK LIST STORE gtk entry completion get model completion 4 3 4 4 Modify a particular row 4 5 GtkTreeIter iter 4 6 GtkTreePath path 4 7 path gtk tree path new from indices selection 1 4 8 if gtk tree model get iter GTK TREE MODEL store iter path 4 9 gaim debug fatal NULL Nomatic Got a bad path n 41 411 gtk tree path free path 412 413 char str data 414 gtk tree model get GTK TREE MODEL store iter str data 1 415 gaim debug misc NULL Nomatic Completion Selected s n str data 416 gtk entry set text GTK ENTRY entry str data 417 g free str data 418 419 25542 256421 Manage the widget box 422 GtkEntryCompletion completion 423 completion gtk entry get completion GTK ENTRY entry 424 phrase gchar gtk entry get text GTK ENTRY entry 425 addCompletionString completion phrase 426 427 Change the displayed status 428 if setFreeFormStatus phrase 429 setCurrentStatus phrase 43 431 Add this instance to the training data 432 classification c newClassificationFreeForm phrase 433 featureCollectionAddTrainingData c 434 freeClassification c 435 436 437 return FALSE 438 439 44 static void updateStatusFromLocation GtkEntry entry 441 442 gchar phrase 443 444 phrase gchar gtk entry get text GTK ENTRY entry 445 setParseLocation phrase 446 char newStatus makeStatusFromStoredParse 447 setCurrentStatus newStatus 448 free newStatus 449 45 451static gboolean matchSelectedLocationCB GtkEntryCompletion widget GtkTreeModel model GtkTreeIter iter GtkEntry entry 452 453 updateStatusFromLocation entry 454 455 456 This function is triggered when the Nomatic Location Status is updated 457static gboolean 458setClassificationLocation GtkEntry entry GdkEventKey event gpointer data 459 46 gboolean handleIt FALSE 461gboolean completionSelected TRUE 462gchar phrase 463static int lastKey 1 464 465 handleIt handleIt isReturnKey event data 466 handleIt handleIt isFocusOutEvent event data 467 468 gaim debug misc NULL Nomatic last key d current key d event is s n lastKey event keyval data 469 This is a wierd corner case when the completion list is empty the user enters some text and then hits tab 47 if lastKey GDK Tab event keyval isFocusOutEvent event data 471 completionSelected FALSE 472 473 If the user hits Return and the textbox finds out about it then we don t want to get the phrase 474 from the completion Entry 475 if isReturnKey event data 476 completionSelected FALSE 477 478 lastKey event keyval 479 48 if handleIt 257481 GtkEntryCompletion completion 482 if completionSelected 483 completion gtk entry get completion entry 484 int selection completion priv current selected 485 486 if selection 1 487 GtkListStore store 488 store GTK LIST STORE gtk entry completion get model completion 489 49 Modify a particular row 491 GtkTreeIter iter 492 GtkTreePath path 493 path gtk tree path new from indices selection 1 494 if gtk tree model get iter GTK TREE MODEL store iter path 495 gaim debug fatal NULL Nomatic Got a bad path n 496 497 gtk tree path free path 498 499 char str data 5 gtk tree model get GTK TREE MODEL store iter str data 1 5 1 gaim debug misc NULL Nomatic Completion Selected s n str data 5 2 gtk entry set text GTK ENTRY entry str data 5 3 g free str data 5 4 5 5 5 6 5 7 Manage the widget box 5 8 GtkEntryCompletion completion 2585 9 completion gtk entry get completion GTK ENTRY entry 259 26 51 phrase gchar gtk entry get text GTK ENTRY entry 261 262511 addCompletionString completion phrase 263512 264 setCurrentStatus phrase 265 266 fv senseFeatureVector 267 g free fv phrase 268 fv phrase g strdup phrase 513 Change the displayed status 514 updateStatusFromLocation entry 515 516 Add this instance to the training data 517 classification c newClassificationParsed getParseLocation getParseActivity getParseSocialStatus 518 featureCollectionAddTrainingData c 519 freeClassification c 52 521 return FALSE 522 523 524 This function is triggered when the Nomatic Activity Status is updated 525static gboolean 526setClassificationActivity GtkEntry entry GdkEventKey event gpointer data 527 528gboolean handleIt FALSE 529gboolean completionSelected TRUE 53 gchar phrase 531static int lastKey 1 532 533 handleIt handleIt isReturnKey event data 534 handleIt handleIt isFocusOutEvent event data 535 536 This is a wierd corner case when the completion list is empty the user enters some text and then hits tab 537 if lastKey GDK Tab event keyval isFocusOutEvent event data 538 completionSelected FALSE 539 54 if isReturnKey event data 541 completionSelected FALSE 542 543 lastKey event keyval 544 545 if handleIt 546 GtkEntryCompletion completion 547 if completionSelected 548 completion gtk entry get completion entry 549 int selection completion priv current selected 55 551 if selection 1 552 GtkListStore store 553 store GTK LIST STORE gtk entry completion get model completion 554 555 Modify a particular row 556 GtkTreeIter iter 557 GtkTreePath path 558 path gtk tree path new from indices selection 1 559 if gtk tree model get iter GTK TREE MODEL store iter path 56 gaim debug fatal NULL Nomatic Got a bad path n 561 562 gtk tree path free path 563 564 char str data 565 gtk tree model get GTK TREE MODEL store iter str data 1 566 gaim debug misc NULL Nomatic Completion Selected s n str data 567 gtk entry set text GTK ENTRY entry str data 568 g free str data 569 57 571 572 Manage the widget box 573 GtkEntryCompletion completion 574 completion gtk entry get completion GTK ENTRY entry 575 phrase gchar gtk entry get text GTK ENTRY entry 576 addCompletionString completion phrase 577 578 Change the displayed status 579 if setParseActivity phrase 58 char newStatus makeStatusFromStoredParse 581 setCurrentStatus newStatus 582 free newStatus 583 584 Add this instance to the training data 585 classification c newClassificationParsed getParseLocation getParseActivity getParseSocialStatus 586 featureCollectionAddTrainingData c 587 freeClassification c 588 589 59 return FALSE 591 592 593 This function is triggered when the Nomatic Social Status is updated 594static gboolean 595setClassificationSocialStatus GtkEntry entry GdkEventKey event gpointer data 596 597gboolean handleIt FALSE 598gboolean completionSelected TRUE 599gchar phrase 6 static int lastKey 1 6 1 6 2 handleIt handleIt isReturnKey event data 6 3 handleIt handleIt isFocusOutEvent event data 6 4 6 5 This is a wierd corner case when the completion list is empty the user enters some text and then hits tab 6 6 if lastKey GDK Tab event keyval isFocusOutEvent event data 6 7 completionSelected FALSE 6 8 6 9 if isReturnKey event data 61 completionSelected FALSE 611 612 lastKey event keyval 613 614 if handleIt 615 GtkEntryCompletion completion 616 if completionSelected 617 completion gtk entry get completion entry 618 int selection completion priv current selected 619 62 if selection 1 621 GtkListStore store 622 store GTK LIST STORE gtk entry completion get model completion 623 624 Modify a particular row 625 GtkTreeIter iter 626 GtkTreePath path 627 path gtk tree path new from indices selection 1 628 if gtk tree model get iter GTK TREE MODEL store iter path 629 gaim debug fatal NULL Nomatic Got a bad path n 63 631 gtk tree path free path 632 633 char str data 634 gtk tree model get GTK TREE MODEL store iter str data 1 635 gaim debug misc NULL Nomatic Completion Selected s n str data 636 gtk entry set text GTK ENTRY entry str data 637 g free str data 638 639 64 641 Manage the widget box 642 GtkEntryCompletion completion 643 completion gtk entry get completion GTK ENTRY entry 644 phrase gchar gtk entry get text GTK ENTRY entry 645 addCompletionString completion phrase 646 647 Change the displayed status 648 if setParseSocialStatus phrase 649 char newStatus makeStatusFromStoredParse 65 setCurrentStatus newStatus 651 free newStatus 652 653 Add this instance to the training data 654 classification c newClassificationParsed getParseLocation getParseActivity getParseSocialStatus 655 featureCollectionAddTrainingData c 656 freeClassification c 657 658 659 return FALSE 66 661 662 269663 27 664 Insert some entries in the feature vector 271665 Insert it three times so that nearest neighbor works with a wrap 272666 around time scale 273 storeFeatureVector fv 274 275 fv cloneFeatureVector fv 276 fv minutes 24 6 277 storeFeatureVector fv 278 279 fv cloneFeatureVector fv 28 fv minutes 48 6 281 storeFeatureVector fv 282 283 284 return FALSE 285 286 667 storeFeature fv 668 669 fv cloneFeature fv 67 fv minutes 24 6 671 storeFeature fv 672 673 fv cloneFeature fv 674 fv minutes 48 6 675 storeFeature fv 676 287677 This function is triggered when the check box is toggled and will show hide the plugin 288678static void toggled GaimBuddyList blist GtkWidget button 36 75 label gtk label new Name 361751 gtk box pack start GTK BOX hbox labels label TRUE TRUE 362 label gtk label new Location 363 gtk box pack start GTK BOX hbox labels label TRUE TRUE 364 label gtk label new Activity 365 gtk box pack start GTK BOX hbox labels label TRUE TRUE 752 753 label gtk label new Location 754 gtk box pack start GTK BOX hbox labels label TRUE TRUE 755 label gtk label new Activity 756 gtk box pack start GTK BOX hbox labels label TRUE TRUE 757 label gtk label new Social Status 758 gtk box pack start GTK BOX hbox labels label TRUE TRUE 366759 36776 Elements of hbox text 373766 label gtk label new am 374767 gtk box pack start GTK BOX hbox text label TRUE TRUE 768 375769 Drop down menu of prep phrases 37677 textbox gtk combo new 382776 gtk widget set size request textbox 3 2 383777 gtk box pack start GTK BOX hbox text textbox TRUE TRUE 778 779 GtkEntryCompletion completion 78 384781 Textbox Location 385 textbox gtk entry new 386 gtk entry set text GTK ENTRY textbox home 387 gtk widget set size request textbox 3 2 388 gtk box pack start GTK BOX hbox text textbox TRUE TRUE 782 locationTextbox gtk entry new 783 gtk entry set text GTK ENTRY locationTextbox at home 784 setParseLocation gtk entry get text GTK ENTRY locationTextbox 785 gtk widget set size request locationTextbox 3 2 786 gtk box pack start GTK BOX hbox text locationTextbox TRUE TRUE 787 788 completion initializeTextBoxWithCompletionField locationTextbox 789 g signal connect G OBJECT completion match selected G CALLBACK matchSelectedLocationCB textbox 79 791 g signal connect G OBJECT locationTextbox key press event 792 G CALLBACK setClassificationLocation key press event 793 794 g signal connect G OBJECT locationTextbox focus out event 795 G CALLBACK setClassificationLocation focus out event 796 797 798 389799 Textbox Activity 39 textbox gtk entry new 391 gtk entry set text GTK ENTRY textbox using Nomatic GAIM 392 gtk widget set size request textbox 3 2 393 gtk box pack start GTK BOX hbox text textbox TRUE TRUE 394 395 8 activityTextbox gtk entry new 8 1 gtk entry set text GTK ENTRY activityTextbox using Nomatic Gaim 8 2 setParseActivity gtk entry get text GTK ENTRY activityTextbox 8 3 gtk widget set size request activityTextbox 3 2 8 4 gtk box pack start GTK BOX hbox text activityTextbox TRUE TRUE 8 5 initializeTextBoxWithCompletionField activityTextbox 8 6 8 7 Textbox Social Status 8 8 socialStatusTextbox gtk entry new 8 9 gtk entry set text GTK ENTRY socialStatusTextbox by myself 81 setParseSocialStatus gtk entry get text GTK ENTRY socialStatusTextbox 811 gtk widget set size request socialStatusTextbox 3 2 812 gtk box pack start GTK BOX hbox text socialStatusTextbox TRUE TRUE 813 initializeTextBoxWithCompletionField socialStatusTextbox 814 396815 Elements of hbox cusLab Label of Custom Message 397 label gtk label new Nomatic Managed Custom Message 398 gtk box pack start GTK BOX hbox cusLab label TRUE TRUE 816 label gtk label new Free Form Status Message 817 gtk box pack start GTK BOX hbox cusLab label TRUE TRUE 399818 4 819 Elements of hbox cus Textfield of Custom Message 4 1 textbox gtk entry new 4 2 const char message gaim savedstatus get message gaim savedstatus get current 4 3 if message NULL 4 4 gtk entry set text GTK ENTRY textbox gaim savedstatus get message gaim savedstatus get current 4 5 else 4 6 gtk entry set text GTK ENTRY textbox 4 7 4 8 Create the completion object 4 9 GtkEntryCompletion completion 41 completion gtk entry completion new 411 gtk entry set completion GTK ENTRY textbox completion 412 413 Create the tree model use it as the completion model 414 tree completionModelInit 415 gtk entry completion set model completion tree 416 417 g object unref tree 418 g object unref completion 419 42 gtk entry completion set text column completion 421 422 featureVectorsTransferToCompletionField completion 423 424 425 gtk box pack start GTK BOX hbox cus textbox TRUE TRUE 426 g signal connect G OBJECT textbox key press event 427 G CALLBACK customMessageCB key press event 428 g signal connect G OBJECT textbox focus out event 429 G CALLBACK customMessageCB focus out event 82 freeFormTextbox gtk entry new 821 822 This loads the custom status box with the current status when the plug in kicks off 823 824 const char message gaim savedstatus get message gaim savedstatus get current 825 if message NULL 826 gtk entry set text GTK ENTRY freeFormTextbox gaim savedstatus get message gaim savedstatus get current 827 else 828 gtk entry set text GTK ENTRY freeFormTextbox 829 83 setFreeFormStatus gtk entry get text GTK ENTRY freeFormTextbox 831 gtk box pack start GTK BOX hbox cus freeFormTextbox TRUE TRUE 832 initializeTextBoxWithCompletionField freeFormTextbox 833 834 featureCollectionTransferToCompletionField locationTextbox 835 activityTextbox 836 socialStatusTextbox 837 freeFormTextbox 838 839 g signal connect G OBJECT activityTextbox key press event 84 G CALLBACK setClassificationActivity key press event 841 g signal connect G OBJECT socialStatusTextbox key press event 842 G CALLBACK setClassificationSocialStatus key press event 843 g signal connect G OBJECT freeFormTextbox key press event 844 G CALLBACK setClassificationFreeForm key press event 845 846 g signal connect G OBJECT activityTextbox focus out event 847 G CALLBACK setClassificationActivity focus out event 848 g signal connect G OBJECT socialStatusTextbox focus out event 849 G CALLBACK setClassificationSocialStatus focus out event 85 g signal connect G OBJECT freeFormTextbox focus out event 851 G CALLBACK setClassificationFreeForm focus out event 852 43 853 431854 Elements of hbox options 55 973init plugin GaimPlugin plugin 551974 Add preferences here when its time 975 freeFormStatus strdup I m busy 976 locationStatus strdup at home 977 activityStatus strdup using Nomatic Gaim 978 socialStatusStatus strdup by myself 552979 55398 Note See TracChangeset for help on using the changeset viewer Download in other formats Unified Diff Zip Archive Powered by Trac 1 1 By Edgewall Software All content copyright 2 7 2 8 by LUCI http luci ics uci edu ", "_id": "http://djp3-pc2.ics.uci.edu/LUCICodeRepository/nomaticIM/changeset/116/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c", "title": "\n      changeset 116 for trunk/nomatic*gaim/current/gtk/plugins/nomatic/nomatic.c \u2013 nomatic*im\n    ", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n  \n\n\n  <head>\n\t\t<title>\n      Changeset 116 for trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c \u2013 Nomatic*IM\n    </title><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><link rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search\" /><link rel=\"help\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\" /><link rel=\"alternate\" href=\"?format=diff&amp;new=116\" type=\"text/plain\" class=\"diff\" title=\"Unified Diff\" /><link rel=\"alternate\" href=\"?format=zip&amp;new=116\" type=\"application/zip\" class=\"zip\" title=\"Zip Archive\" /><link rel=\"next\" href=\"/LUCICodeRepository/nomaticIM/changeset/118/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c\" title=\"Changeset 118 for trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c\" /><link rel=\"start\" href=\"/LUCICodeRepository/nomaticIM/wiki\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/changeset.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/diff.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/code.css\" type=\"text/css\" /><link rel=\"prev\" href=\"/LUCICodeRepository/nomaticIM/changeset/113/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c\" title=\"Changeset 113 for trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c\" /><link rel=\"shortcut icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link rel=\"icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link type=\"application/opensearchdescription+xml\" rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search/opensearch\" title=\"Search Nomatic*IM\" /><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/jquery.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/babel.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/messages/en_US.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/trac.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/search.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/diff.js\"></script><script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\".trac-toggledeleted\").show().click(function() {\n                  $(this).siblings().find(\".trac-deleted\").toggle();\n                  return false;\n        }).click();\n        $(\"#content\").find(\"li.entry h2 a\").parent().addAnchor(_(\"Link to this diff\"));\n      });\n    </script>\n\t</head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://luci.ics.uci.edu/#code\"><img src=\"http://luci.ics.uci.edu/blog/archives/LUCIhorzTight.jpg\" alt=\"LUCI Code Repository\" /></a>\n      </div>\n      <form id=\"search\" action=\"/LUCICodeRepository/nomaticIM/search\" method=\"get\">\n        <div>\n          <label for=\"proj-search\">Search:</label>\n          <input type=\"text\" id=\"proj-search\" name=\"q\" size=\"18\" value=\"\" />\n          <input type=\"submit\" value=\"Search\" />\n        </div>\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/login\">Login</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/prefs\">Preferences</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\">Help/Guide</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/wiki\">Wiki</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/timeline\">Timeline</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/roadmap\">Roadmap</a></li><li class=\"active\"><a href=\"/LUCICodeRepository/nomaticIM/browser\">Browse Source</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/report\">View Tickets</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/search\">Search</a></li>\n    </ul>\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><span>&larr; <a class=\"prev\" href=\"/LUCICodeRepository/nomaticIM/changeset/113/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c\" title=\"Changeset 113 for trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c\">Previous Change</a></span></li><li class=\"last\"><span><a class=\"next\" href=\"/LUCICodeRepository/nomaticIM/changeset/118/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c\" title=\"Changeset 118 for trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c\">Next Change</a> &rarr;</span></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"changeset\">\n      <div id=\"title\">\n            <h1>Changeset <a title=\"Show full changeset\" href=\"/LUCICodeRepository/nomaticIM/changeset/116\">116</a>\n              for <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c?rev=116\">trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c</a></h1>\n      </div>\n      <form id=\"prefs\" action=\"\">\n        <div>\n          \n  <label for=\"style\">View differences</label>\n  <select id=\"style\" name=\"style\">\n    <option selected=\"selected\" value=\"inline\">inline</option>\n    <option value=\"sidebyside\">side by side</option>\n  </select>\n  <div class=\"field\">\n    <label><input type=\"radio\" name=\"contextall\" value=\"0\" checked=\"checked\" />\n             Show</label>\n      <label><input type=\"text\" name=\"contextlines\" id=\"contextlines\" size=\"2\" maxlength=\"3\" value=\"2\" />\n             lines around each change</label><br />\n    <label><input type=\"radio\" name=\"contextall\" value=\"1\" />\n           Show the changes in full context</label>\n  </div>\n  <fieldset id=\"ignore\">\n    <legend>Ignore:</legend>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignoreblanklines\" name=\"ignoreblanklines\" />\n      <label for=\"ignoreblanklines\">Blank lines</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorecase\" name=\"ignorecase\" />\n      <label for=\"ignorecase\">Case changes</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorewhitespace\" name=\"ignorewhitespace\" />\n      <label for=\"ignorewhitespace\">White space changes</label>\n    </div>\n  </fieldset>\n  <div class=\"buttons\">\n    <input type=\"submit\" name=\"update\" value=\"Update\" />\n  </div>\n\n        </div>\n      </form>\n      <dl id=\"overview\">\n          <dt class=\"property time\">Timestamp:</dt>\n          <dd class=\"time\">\n             Nov 17, 2006, 5:00:40 PM\n             (<a class=\"timeline\" href=\"/LUCICodeRepository/nomaticIM/timeline?from=2006-11-17T17%3A00%3A40-08%3A00&amp;precision=second\" title=\"See timeline at Nov 17, 2006, 5:00:40 PM\">8 years</a> ago)\n          </dd>\n          <dt class=\"property author\">Author:</dt>\n          <dd class=\"author\">djp3</dd>\n          <dt class=\"property message\">Message:</dt>\n          <dd class=\"message searchable\">\n            \n            \n              <p>\nGetting ready to split client and server<br />\n</p>\n\n            \n            \n          </dd>\n        <dt class=\"property files\">\n          File:\n        </dt>\n        <dd class=\"files\">\n          <div class=\"legend\" id=\"file-legend\">\n            <dl>\n              <dt class=\"mod\"></dt><dd>1 edited</dd>\n            </dl>\n          </div>\n          <br />\n          <ul>\n            <li>\n          <div class=\"mod\"> </div>\n            <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c?rev=116\">\n              trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c\n            </a>\n          <span class=\"comment\">(modified)</span>\n              (<a title=\"Show differences\" href=\"#file0\">13 diffs</a>)\n            </li>\n          </ul>\n        </dd>\n      </dl>\n      <div class=\"diff\">\n        <div class=\"legend\" id=\"diff-legend\">\n          <h3>Legend:</h3>\n          <dl>\n            <dt class=\"unmod\"></dt><dd>Unmodified</dd>\n            <dt class=\"add\"></dt><dd>Added</dd>\n            <dt class=\"rem\"></dt><dd>Removed</dd>\n          </dl>\n        </div>\n        <div class=\"diff\">\n  <ul class=\"entries\">\n      <li class=\"entry\">\n        <h2 id=\"file0\">\n          <a href=\"/LUCICodeRepository/nomaticIM/changeset/116/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c\" title=\"Show the changeset 116 restricted to trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c\">trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c</a>\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"Revision 113\">\n                    <a title=\"Show revision 113 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c?rev=113#L21\">\n                      r113</a>\n                  </th>\n                  <th title=\"Revision 116\">\n                    <a title=\"Show revision 116 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c?rev=116#L21\">\n                      r116</a>\n                  </th>\n                  <td>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>21</th><th>21</th><td class=\"l\"><span>#include &lt;glib.h&gt;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>22</th><th>22</th><td class=\"l\"><span>#include &lt;gdk/gdkkeysyms.h&gt;</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>23</th><td class=\"r\"><ins>#include &lt;gtk/gtk.h&gt;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>24</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>25</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>23</th><th>26</th><td class=\"l\"><span>#include &lt;libgaim/protocols/yahoo/yahoo.h&gt;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>24</th><th>27</th><td class=\"l\"><span>#include &lt;libgaim/protocols/oscar/oscar.h&gt;</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c?rev=113#L33\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c?rev=116#L36\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>33</th><th>36</th><td class=\"l\"><span>#include \"nomatic.h\"</span>\u00a0</td>\n                  </tr><tr>\n                          <th>34</th><th>37</th><td class=\"l\"><span>#include \"completionField.h\"</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>35</th><th>\u00a0</th><td class=\"l\"><span>#include \"featureVector.h\"</span>\u00a0</td>\n                      </tr><tr>\n                        <th>36</th><th>\u00a0</th><td class=\"l\"><span>#include \"featureVectors.h\"</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>38</th><td class=\"r\"><span>#include \"feature.h\"</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>39</th><td class=\"r\"><span>#include \"featureCollection.h\"</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>40</th><td class=\"r\"><span>#include \"classification.h\"</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>37</th><th>41</th><td class=\"l\"><span>#include \"networkHelper.h\"</span>\u00a0</td>\n                  </tr><tr>\n                          <th>38</th><th>42</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>39</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>43</th><td class=\"r\"><span>//Local function declarations</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>44</th><td class=\"r\"><span>static void makeGUI(GaimBuddyList *blist,GaimPlugin *plugin);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>40</th><th>45</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>41</th><th>46</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>42</th><th>47</th><td class=\"l\"><span>// Declarations of the individual widgets</span>\u00a0</td>\n                  </tr><tr>\n                          <th>43</th><th>48</th><td class=\"l\"><span>GtkWidget *button = NULL, *textbox = NULL, *label = NULL;</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>49</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>50</th><td class=\"r\"><ins>GtkWidget *locationTextbox = NULL;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>51</th><td class=\"r\"><ins>GtkWidget *activityTextbox = NULL;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>52</th><td class=\"r\"><ins>GtkWidget *socialStatusTextbox = NULL;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>53</th><td class=\"r\"><ins>GtkWidget *freeFormTextbox = NULL;</ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>54</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>44</th><th>55</th><td class=\"l\"><span>GtkWidget *hbox_labels = NULL, *hbox_text = NULL, *hbox_cus = NULL, *hbox_options = NULL, *hbox_cusLab = NULL, *hbox_buts = NULL;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>45</th><th>56</th><td class=\"l\"><span>GtkTooltips *tooltips;</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c?rev=113#L49\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c?rev=116#L60\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>49</th><th>60</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>50</th><th>61</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"first\">\n                          <th>51</th><th>\u00a0</th><td class=\"l\"><del>/*Function declarations*/</del>\u00a0</td>\n                  </tr><tr>\n                          <th>52</th><th>\u00a0</th><td class=\"l\"><del>static gboolean customMessageCB(GtkEntry *entry, GdkEventKey *event, gpointer data);</del>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>53</th><th>\u00a0</th><td class=\"l\"><del></del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>54</th><th>62</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>55</th><th>63</th><td class=\"l\"><span>void clearCurrentStatus()</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c?rev=113#L63\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c?rev=116#L71\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>63</th><th>71</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>64</th><th>72</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>73</th><td class=\"r\"><ins>static char *freeFormStatus=NULL;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>74</th><td class=\"r\"><ins>static char *locationStatus=NULL;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>75</th><td class=\"r\"><ins>static char *activityStatus=NULL;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>76</th><td class=\"r\"><ins>static char *socialStatusStatus=NULL;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>77</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>78</th><td class=\"r\"><ins>/* Returns true if there is a change */</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>79</th><td class=\"r\"><ins>bool setParse(char **status,const char *p)</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>80</th><td class=\"r\"><ins>{</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>81</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; //Degenerate case</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>82</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(status == NULL){</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>83</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_fatal(NULL,\"Nomatic: setParse called with NULL parameter\\n\");</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>84</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>85</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>86</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(*status == NULL){</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>87</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(p == NULL){</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>88</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>89</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>90</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>91</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *status = strdup(p);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>92</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(TRUE);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>93</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>94</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>95</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; else{</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>96</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(p == NULL){</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>97</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(*status);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>98</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *status = NULL;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>99</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(TRUE);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>100</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>101</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>102</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(strcmp(*status,p)==0){</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>103</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>104</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>105</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>106</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(*status);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>107</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *status = strdup(p);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>108</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(TRUE);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>109</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>110</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>111</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>112</th><td class=\"r\"><ins>}&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>113</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>114</th><td class=\"r\"><ins>bool setFreeFormStatus(const char *p)</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>115</th><td class=\"r\"><ins>{</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>116</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return(setParse(&amp;freeFormStatus,p));</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>117</th><td class=\"r\"><ins>}</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>118</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>119</th><td class=\"r\"><ins>const char *getFreeFormStatus()</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>120</th><td class=\"r\"><ins>{</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>121</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return(freeFormStatus);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>122</th><td class=\"r\"><ins>}</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>123</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>124</th><td class=\"r\"><ins>bool setParseLocation(const char *p)</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>125</th><td class=\"r\"><ins>{</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>126</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return(setParse(&amp;locationStatus,p));</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>127</th><td class=\"r\"><ins>}</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>128</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>129</th><td class=\"r\"><ins>const char *getParseLocation()</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>130</th><td class=\"r\"><ins>{</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>131</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return(locationStatus);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>132</th><td class=\"r\"><ins>}</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>133</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>134</th><td class=\"r\"><ins>bool setParseActivity(const char *p)</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>135</th><td class=\"r\"><ins>{</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>136</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return(setParse(&amp;activityStatus,p));</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>137</th><td class=\"r\"><ins>}</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>138</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>139</th><td class=\"r\"><ins>const char *getParseActivity()</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>140</th><td class=\"r\"><ins>{</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>141</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return(activityStatus);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>142</th><td class=\"r\"><ins>}</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>143</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>144</th><td class=\"r\"><ins>bool setParseSocialStatus(const char *p)</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>145</th><td class=\"r\"><ins>{</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>146</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return(setParse(&amp;socialStatusStatus,p));</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>147</th><td class=\"r\"><ins>}</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>148</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>149</th><td class=\"r\"><ins>const char *getParseSocialStatus()</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>150</th><td class=\"r\"><ins>{</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>151</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return(socialStatusStatus);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>152</th><td class=\"r\"><ins>}</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>153</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>154</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>155</th><td class=\"r\"><ins>char *makeStatusFromStoredParse()</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>156</th><td class=\"r\"><ins>{</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>157</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return(makeStatusFromParse(locationStatus,activityStatus,socialStatusStatus));</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>158</th><td class=\"r\"><ins>}</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>159</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>160</th><td class=\"r\"><ins>char *makeStatusFromParse(char *l,char *a,char *ss)</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>161</th><td class=\"r\"><ins>{</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>162</th><td class=\"r\"><ins>char *string;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>163</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>164</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; string = (char *)calloc(1024,sizeof(char));</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>165</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>166</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; snprintf(string,1024*sizeof(char),\"%s %s %s\",l,a,ss);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>167</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>168</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return(string);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>169</th><td class=\"r\"><ins>}</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>170</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>171</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>65</th><th>172</th><td class=\"l\"><span>void setCurrentStatus(gchar *phrase)</span>\u00a0</td>\n                  </tr><tr>\n                          <th>66</th><th>173</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c?rev=113#L79\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c?rev=116#L186\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>79</th><th>186</th><td class=\"l\"><span>time_t tim = time(NULL);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>80</th><th>187</th><td class=\"l\"><span>struct tm *timeinfo= localtime(&amp;tim); /**http://www.cplusplus.com/ref/ctime/tm.html**/</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>81</th><th>\u00a0</th><td class=\"l\"><span>feature<del>Vector *fv</del>;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>82</th><th>\u00a0</th><td class=\"l\"><span><del>featureVector</del> *nn;</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>188</th><td class=\"r\"><span>feature<ins>&nbsp;*f</ins>;</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>189</th><td class=\"r\"><span><ins>classification</ins> *nn;</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>83</th><th>190</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>84</th><th>191</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c?rev=113#L86\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c?rev=116#L193\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>86</th><th>193</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lastCheck = timeinfo-&gt;tm_min;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>87</th><th>194</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>88</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fv = senseFeatureVector();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>89</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nn = findNearestNeighborFeatureVector(fv);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>195</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; f = senseFeature();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>196</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(f != NULL){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>197</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_misc(NULL,\"Nomatic: Sensing status: minutes:%d, day:%d, ip %d.%d.%d.%d\\n\",f-&gt;minutes,f-&gt;wday,f-&gt;ip4,f-&gt;ip3,f-&gt;ip2,f-&gt;ip1);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>198</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nn = findNearestNeighborFeature(f);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>199</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; freeFeature(f);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>90</th><th>200</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>91</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(nn == NULL){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>92</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //Probably because there is nothing to train on </span>\u00a0</td>\n                      </tr><tr>\n                        <th>93</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>94</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>95</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(nn-&gt;phrase == NULL){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>96</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_fatal(NULL,\"Nomatic: NULL NN-&gt;phrase\\n\");</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>201</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(nn == NULL){</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>202</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //Probably because there is nothing to train on </span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>97</th><th>203</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>98</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>99</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setCurrentStatus(nn-&gt;phrase);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>100</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text(GTK_ENTRY(textbox),nn-&gt;phrase);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>101</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>102</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_misc(NULL,\"Nomatic: Sensing status: minutes:%d, day:%d, ip %d.%d.%d.%d, phrase:%s\\n\",fv-&gt;minutes,fv-&gt;wday,fv-&gt;ip4,fv-&gt;ip3,fv-&gt;ip2,fv-&gt;ip1,fv-&gt;phrase);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>103</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_misc(NULL,\"Nomatic: Predicting by NN: minutes:%d, day:%d, ip %d.%d.%d.%d, phrase:%s\\n\",nn-&gt;minutes,nn-&gt;wday,nn-&gt;ip4,nn-&gt;ip3,nn-&gt;ip2,nn-&gt;ip1,nn-&gt;phrase);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>104</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>105</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>106</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>107</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(fv != NULL){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>108</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; freeFeatureVector(fv);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>204</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>205</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(nn-&gt;isFreeForm){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>206</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setCurrentStatus(nn-&gt;context.freeForm);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>207</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text(GTK_ENTRY(freeFormTextbox),nn-&gt;context.freeForm);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>208</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_misc(NULL,\"Nomatic: Predicting by NN: Free Form:%s\\n\",nn-&gt;context.freeForm);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>209</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>210</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>211</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setParseLocation(nn-&gt;context.parsed.location);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>212</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text(GTK_ENTRY(locationTextbox),nn-&gt;context.parsed.location);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>213</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>214</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setParseActivity(nn-&gt;context.parsed.activity);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>215</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text(GTK_ENTRY(activityTextbox),nn-&gt;context.parsed.activity);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>216</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>217</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setParseSocialStatus(nn-&gt;context.parsed.socialStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>218</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text(GTK_ENTRY(socialStatusTextbox),nn-&gt;context.parsed.socialStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>219</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>220</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char *s=makeStatusFromStoredParse();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>221</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setCurrentStatus(s);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>222</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_misc(NULL,\"Nomatic: Predicting by NN: Parsed :%s\\n\",s);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>223</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(s);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>224</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>225</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>226</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>109</th><th>227</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>110</th><th>228</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c?rev=113#L192\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c?rev=116#L310\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>192</th><th>310</th><td class=\"l\"><span>gboolean plugin_load(GaimPlugin *plugin) </span>\u00a0</td>\n                  </tr><tr>\n                          <th>193</th><th>311</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>194</th><th>\u00a0</th><td class=\"l\"><span>featureVector *fv = NULL;</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>312</th><td class=\"r\"><span>feature *fv = NULL;</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>313</th><td class=\"r\"><span>classification *c = NULL;</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>195</th><th>314</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>196</th><th>315</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /*Create data storage */</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>197</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; feature<del>Vectors</del>Init();</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>316</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; feature<ins>Collection</ins>Init();</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>198</th><th>317</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>199</th><th>318</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* Open the file with stored feature vectors*/</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c?rev=113#L205\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c?rev=116#L324\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>205</th><th>324</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_misc(NULL,\"Nomatic: Opened a stored data file for Nomatic\\n\");</span>\u00a0</td>\n                  </tr><tr>\n                          <th>206</th><th>325</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; while(!feof(dataFile)){</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>207</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(inputFeatureVector(dataFile,&amp;fv)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>208</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; storeFeatureVector(fv);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>326</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(inputFeature(dataFile,&amp;fv)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>327</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(inputClassification(dataFile,&amp;c)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>328</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; storeFeature(fv,c);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>329</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>209</th><th>330</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>210</th><th>331</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c?rev=113#L223\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c?rev=116#L344\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>223</th><th>344</th><td class=\"l\"><span>plugin_unload(GaimPlugin *plugin)</span>\u00a0</td>\n                  </tr><tr>\n                          <th>224</th><th>345</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>225</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; feature<del>Vectors</del>Shutdown();</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>346</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; feature<ins>Collection</ins>Shutdown();</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>226</th><th>347</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>227</th><th>348</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return TRUE;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>228</th><th>349</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>229</th><th>350</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"first\">\n                          <th>230</th><th>\u00a0</th><td class=\"l\"><del></del>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>231</th><th>\u00a0</th><td class=\"l\"><del>// This function is triggered when the Nomatic Custom Message Box is updated</del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>232</th><th>351</th><td class=\"l\"><span>static gboolean</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>233</th><th>\u00a0</th><td class=\"l\"><span>customMessageCB(GtkEntry *entry, GdkEventKey *event, gpointer data)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>234</th><th>\u00a0</th><td class=\"l\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>235</th><th>\u00a0</th><td class=\"l\"><span>gboolean handleIt = FALSE;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>236</th><th>\u00a0</th><td class=\"l\"><span>gchar *phrase;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>237</th><th>\u00a0</th><td class=\"l\"><span>featureVector *fv = NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>238</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>239</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(data == NULL){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>240</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return FALSE;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>241</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>242</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>352</th><td class=\"r\"><span>isReturnKey (GdkEventKey *event, gpointer data)</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>353</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>243</th><th>354</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(!strcmp(data, \"key_press_event\")){</span>\u00a0</td>\n                  </tr><tr>\n                          <th>244</th><th>355</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(event-&gt;keyval == GDK_Return){&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>245</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_misc(NULL,\"Nomatic: customMessageCB() called on return key\\n\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>246</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; handleIt = TRUE;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>247</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>248</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>249</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; else if(!strcmp(data, \"focus_out_event\")){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>250</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_misc(NULL,\"Nomatic: customMessageCB() called on focus out event\\n\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>251</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; handleIt = TRUE;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>252</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>253</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>254</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(handleIt == TRUE){</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>356</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //gaim_debug_misc(NULL,\"Nomatic: Classification Updated from return key\\n\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>357</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(TRUE);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>358</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>359</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>360</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>361</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>362</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>363</th><td class=\"r\"><span>static gboolean</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>364</th><td class=\"r\"><span>isFocusOutEvent (GdkEventKey *event, gpointer data)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>365</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>366</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(!strcmp(data, \"focus_out_event\")){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>367</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //gaim_debug_misc(NULL,\"Nomatic: Classification Updated from focus out event\\n\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>368</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(TRUE);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>369</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>370</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>371</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>372</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>373</th><td class=\"r\"><span>// This function is triggered when the Nomatic Free Form Status is updated</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>374</th><td class=\"r\"><span>static gboolean</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>375</th><td class=\"r\"><span>setClassificationFreeForm (GtkEntry *entry, GdkEventKey *event, gpointer data)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>376</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>377</th><td class=\"r\"><span>gboolean handleIt = FALSE;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>378</th><td class=\"r\"><span>gboolean completionSelected = TRUE;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>379</th><td class=\"r\"><span>gchar *phrase;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>380</th><td class=\"r\"><span>static int lastKey = -1;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>381</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>382</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; handleIt = handleIt || isReturnKey(event,data);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>383</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; handleIt = handleIt || isFocusOutEvent(event,data);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>384</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>385</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /*This is a wierd corner case when the completion list is empty, the user enters some text and then hits tab */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>386</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if((lastKey == GDK_Tab) &amp;&amp; (event-&gt;keyval == 0) &amp;&amp; isFocusOutEvent(event,data)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>387</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completionSelected = FALSE;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>388</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>389</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(isReturnKey(event,data)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>390</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completionSelected = FALSE;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>391</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>392</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; lastKey = event-&gt;keyval;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>393</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>394</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(handleIt){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>395</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkEntryCompletion *completion;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>396</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(completionSelected){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>397</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completion = gtk_entry_get_completion(entry);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>398</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int selection = completion-&gt;priv-&gt;current_selected;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>399</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>400</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(selection != -1){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>401</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkListStore *store;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>402</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; store = GTK_LIST_STORE(gtk_entry_completion_get_model(completion));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>403</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>404</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Modify a particular row */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>405</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkTreeIter iter;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>406</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkTreePath *path;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>407</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; path = gtk_tree_path_new_from_indices (selection,-1);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>408</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!gtk_tree_model_get_iter (GTK_TREE_MODEL (store),&amp;iter, path)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>409</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_fatal(NULL,\"Nomatic: Got a bad path\\n\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>410</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>411</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_tree_path_free (path);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>412</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>413</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char *str_data;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>414</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_tree_model_get(GTK_TREE_MODEL(store),&amp;iter,0,&amp;str_data,-1);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>415</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_misc(NULL,\"Nomatic: Completion Selected %s\\n\",str_data);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>416</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text(GTK_ENTRY(entry),str_data);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>417</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; g_free(str_data);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>418</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>419</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>255</th><th>420</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>256</th><th>421</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Manage the widget box */</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>422</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //GtkEntryCompletion *completion;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>423</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completion = gtk_entry_get_completion(GTK_ENTRY(entry));</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>424</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; phrase = (gchar *)gtk_entry_get_text(GTK_ENTRY(entry));</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>425</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; addCompletionString(completion,phrase);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>426</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>427</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Change the displayed status */</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>428</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(setFreeFormStatus(phrase)){</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>429</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setCurrentStatus(phrase);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>430</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>431</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Add this instance to the training data */</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>432</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /*classification *c = newClassificationFreeForm(phrase);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>433</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureCollectionAddTrainingData(c);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>434</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; freeClassification(c);*/</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>435</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>436</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>437</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>438</th><td class=\"r\"><ins>}</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>439</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>440</th><td class=\"r\"><ins>static void updateStatusFromLocation(GtkEntry *entry)</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>441</th><td class=\"r\"><ins>{</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>442</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; gchar *phrase;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>443</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>444</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; phrase = (gchar *)gtk_entry_get_text(GTK_ENTRY(entry));</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>445</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; setParseLocation(phrase);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>446</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; char *newStatus = makeStatusFromStoredParse();</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>447</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; setCurrentStatus(newStatus);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>448</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; free(newStatus);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>449</th><td class=\"r\"><ins>}</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>450</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>451</th><td class=\"r\"><ins>static gboolean matchSelectedLocationCB(GtkEntryCompletion *widget,GtkTreeModel *model,GtkTreeIter *iter,GtkEntry *entry)&nbsp; &nbsp;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>452</th><td class=\"r\"><ins>{</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>453</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; updateStatusFromLocation(entry);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>454</th><td class=\"r\"><ins>}</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>455</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>456</th><td class=\"r\"><ins>// This function is triggered when the Nomatic Location Status is updated</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>457</th><td class=\"r\"><ins>static gboolean</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>458</th><td class=\"r\"><ins>setClassificationLocation (GtkEntry *entry, GdkEventKey *event, gpointer data)</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>459</th><td class=\"r\"><ins>{</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>460</th><td class=\"r\"><ins>gboolean handleIt = FALSE;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>461</th><td class=\"r\"><ins>gboolean completionSelected = TRUE;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>462</th><td class=\"r\"><ins>gchar *phrase;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>463</th><td class=\"r\"><ins>static int lastKey = -1;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>464</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>465</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; handleIt = handleIt || isReturnKey(event,data);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>466</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; handleIt = handleIt || isFocusOutEvent(event,data);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>467</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>468</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_misc(NULL,\"Nomatic: last key = %d, current key = %d, event is %s\\n\",lastKey, event-&gt;keyval, data);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>469</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; /*This is a wierd corner case when the completion list is empty, the user enters some text and then hits tab */</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>470</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if((lastKey == GDK_Tab) &amp;&amp; (event-&gt;keyval == 0) &amp;&amp; isFocusOutEvent(event,data)){</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>471</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completionSelected = FALSE;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>472</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>473</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; /* If the user hits Return and the textbox finds out about it then we don't want to get the phrase </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>474</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* from the completion Entry*/</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>475</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(isReturnKey(event,data)){</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>476</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completionSelected = FALSE;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>477</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>478</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; lastKey = event-&gt;keyval;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>479</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>480</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(handleIt){</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>257</th><th>481</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkEntryCompletion *completion;</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>482</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(completionSelected){</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>483</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completion = gtk_entry_get_completion(entry);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>484</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int selection = completion-&gt;priv-&gt;current_selected;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>485</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>486</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(selection != -1){</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>487</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkListStore *store;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>488</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; store = GTK_LIST_STORE(gtk_entry_completion_get_model(completion));</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>489</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>490</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Modify a particular row */</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>491</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkTreeIter iter;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>492</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkTreePath *path;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>493</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; path = gtk_tree_path_new_from_indices (selection,-1);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>494</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!gtk_tree_model_get_iter (GTK_TREE_MODEL (store),&amp;iter, path)){</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>495</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_fatal(NULL,\"Nomatic: Got a bad path\\n\");</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>496</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>497</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_tree_path_free (path);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>498</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>499</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char *str_data;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>500</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_tree_model_get(GTK_TREE_MODEL(store),&amp;iter,0,&amp;str_data,-1);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>501</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_misc(NULL,\"Nomatic: Completion Selected %s\\n\",str_data);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>502</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text(GTK_ENTRY(entry),str_data);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>503</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; g_free(str_data);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>504</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>505</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>506</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>507</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Manage the widget box */</ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>508</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //GtkEntryCompletion *completion;</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>258</th><th>509</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completion = gtk_entry_get_completion(GTK_ENTRY(entry));</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"last first\">\n                          <th>259</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>260</th><th>510</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; phrase = (gchar *)gtk_entry_get_text(GTK_ENTRY(entry));</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"last first\">\n                          <th>261</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>262</th><th>511</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; addCompletionString(completion,phrase);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>263</th><th>512</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>264</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setCurrentStatus(phrase);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>265</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>266</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fv = senseFeatureVector();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>267</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; g_free(fv-&gt;phrase);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>268</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;phrase = g_strdup(phrase);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>513</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Change the displayed status */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>514</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; updateStatusFromLocation(entry);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>515</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>516</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Add this instance to the training data */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>517</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /*classification *c = newClassificationParsed(getParseLocation(),getParseActivity(),getParseSocialStatus());</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>518</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureCollectionAddTrainingData(c);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>519</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; freeClassification(c);*/</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>520</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>521</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>522</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>523</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>524</th><td class=\"r\"><span>// This function is triggered when the Nomatic Activity Status is updated</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>525</th><td class=\"r\"><span>static gboolean</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>526</th><td class=\"r\"><span>setClassificationActivity (GtkEntry *entry, GdkEventKey *event, gpointer data)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>527</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>528</th><td class=\"r\"><span>gboolean handleIt = FALSE;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>529</th><td class=\"r\"><span>gboolean completionSelected = TRUE;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>530</th><td class=\"r\"><span>gchar *phrase;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>531</th><td class=\"r\"><span>static int lastKey = -1;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>532</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>533</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; handleIt = handleIt || isReturnKey(event,data);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>534</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; handleIt = handleIt || isFocusOutEvent(event,data);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>535</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>536</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /*This is a wierd corner case when the completion list is empty, the user enters some text and then hits tab */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>537</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if((lastKey == GDK_Tab) &amp;&amp; (event-&gt;keyval == 0) &amp;&amp; isFocusOutEvent(event,data)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>538</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completionSelected = FALSE;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>539</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>540</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(isReturnKey(event,data)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>541</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completionSelected = FALSE;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>542</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>543</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; lastKey = event-&gt;keyval;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>544</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>545</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(handleIt){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>546</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkEntryCompletion *completion;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>547</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(completionSelected){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>548</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completion = gtk_entry_get_completion(entry);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>549</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int selection = completion-&gt;priv-&gt;current_selected;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>550</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>551</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(selection != -1){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>552</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkListStore *store;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>553</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; store = GTK_LIST_STORE(gtk_entry_completion_get_model(completion));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>554</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>555</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Modify a particular row */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>556</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkTreeIter iter;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>557</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkTreePath *path;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>558</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; path = gtk_tree_path_new_from_indices (selection,-1);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>559</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!gtk_tree_model_get_iter (GTK_TREE_MODEL (store),&amp;iter, path)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>560</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_fatal(NULL,\"Nomatic: Got a bad path\\n\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>561</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>562</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_tree_path_free (path);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>563</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>564</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char *str_data;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>565</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_tree_model_get(GTK_TREE_MODEL(store),&amp;iter,0,&amp;str_data,-1);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>566</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_misc(NULL,\"Nomatic: Completion Selected %s\\n\",str_data);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>567</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text(GTK_ENTRY(entry),str_data);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>568</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; g_free(str_data);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>569</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>570</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>571</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>572</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Manage the widget box */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>573</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //GtkEntryCompletion *completion;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>574</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completion = gtk_entry_get_completion(GTK_ENTRY(entry));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>575</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; phrase = (gchar *)gtk_entry_get_text(GTK_ENTRY(entry));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>576</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; addCompletionString(completion,phrase);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>577</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>578</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Change the displayed status */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>579</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(setParseActivity(phrase)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>580</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char *newStatus = makeStatusFromStoredParse();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>581</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setCurrentStatus(newStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>582</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //free(newStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>583</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>584</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Add this instance to the training data */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>585</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /*classification *c = newClassificationParsed(getParseLocation(),getParseActivity(),getParseSocialStatus());</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>586</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureCollectionAddTrainingData(c);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>587</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; freeClassification(c);*/</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>588</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>589</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>590</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>591</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>592</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>593</th><td class=\"r\"><span>// This function is triggered when the Nomatic Social Status is updated</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>594</th><td class=\"r\"><span>static gboolean</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>595</th><td class=\"r\"><span>setClassificationSocialStatus (GtkEntry *entry, GdkEventKey *event, gpointer data)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>596</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>597</th><td class=\"r\"><span>gboolean handleIt = FALSE;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>598</th><td class=\"r\"><span>gboolean completionSelected = TRUE;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>599</th><td class=\"r\"><span>gchar *phrase;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>600</th><td class=\"r\"><span>static int lastKey = -1;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>601</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>602</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; handleIt = handleIt || isReturnKey(event,data);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>603</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; handleIt = handleIt || isFocusOutEvent(event,data);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>604</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>605</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /*This is a wierd corner case when the completion list is empty, the user enters some text and then hits tab */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>606</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if((lastKey == GDK_Tab) &amp;&amp; (event-&gt;keyval == 0) &amp;&amp; isFocusOutEvent(event,data)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>607</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completionSelected = FALSE;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>608</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>609</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(isReturnKey(event,data)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>610</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completionSelected = FALSE;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>611</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>612</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; lastKey = event-&gt;keyval;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>613</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>614</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(handleIt){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>615</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkEntryCompletion *completion;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>616</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(completionSelected){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>617</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completion = gtk_entry_get_completion(entry);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>618</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int selection = completion-&gt;priv-&gt;current_selected;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>619</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>620</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(selection != -1){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>621</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkListStore *store;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>622</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; store = GTK_LIST_STORE(gtk_entry_completion_get_model(completion));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>623</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>624</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Modify a particular row */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>625</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkTreeIter iter;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>626</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkTreePath *path;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>627</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; path = gtk_tree_path_new_from_indices (selection,-1);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>628</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!gtk_tree_model_get_iter (GTK_TREE_MODEL (store),&amp;iter, path)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>629</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_fatal(NULL,\"Nomatic: Got a bad path\\n\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>630</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>631</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_tree_path_free (path);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>632</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>633</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char *str_data;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>634</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_tree_model_get(GTK_TREE_MODEL(store),&amp;iter,0,&amp;str_data,-1);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>635</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_misc(NULL,\"Nomatic: Completion Selected %s\\n\",str_data);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>636</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text(GTK_ENTRY(entry),str_data);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>637</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; g_free(str_data);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>638</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>639</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>640</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>641</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Manage the widget box */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>642</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //GtkEntryCompletion *completion;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>643</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completion = gtk_entry_get_completion(GTK_ENTRY(entry));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>644</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; phrase = (gchar *)gtk_entry_get_text(GTK_ENTRY(entry));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>645</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; addCompletionString(completion,phrase);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>646</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>647</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Change the displayed status */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>648</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(setParseSocialStatus(phrase)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>649</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char *newStatus = makeStatusFromStoredParse();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>650</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setCurrentStatus(newStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>651</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //free(newStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>652</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>653</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Add this instance to the training data */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>654</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /*classification *c = newClassificationParsed(getParseLocation(),getParseActivity(),getParseSocialStatus());</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>655</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureCollectionAddTrainingData(c);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>656</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; freeClassification(c);*/</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>657</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>658</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>659</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>660</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>661</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>662</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>269</th><th>663</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>270</th><th>664</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Insert some entries in the feature vector */</span>\u00a0</td>\n                  </tr><tr>\n                          <th>271</th><th>665</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Insert it three times so that nearest neighbor works with a wrap</span>\u00a0</td>\n                  </tr><tr>\n                          <th>272</th><th>666</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* around time scale */</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>273</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; storeFeatureVector(fv);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>274</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>275</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fv = cloneFeatureVector(fv);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>276</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;minutes -= 24*60;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>277</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; storeFeatureVector(fv);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>278</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>279</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fv = cloneFeatureVector(fv);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>280</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;minutes += 48*60;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>281</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; storeFeatureVector(fv);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>282</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }&nbsp; &nbsp; &nbsp; &nbsp;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>283</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>284</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return FALSE;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>285</th><th>\u00a0</th><td class=\"l\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>286</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>667</th><td class=\"r\"><span>//&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; storeFeature(fv);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>668</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>669</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; &nbsp; fv = cloneFeature(fv);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>670</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; &nbsp; fv-&gt;minutes -= 24*60;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>671</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; &nbsp; storeFeature(fv);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>672</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>673</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; &nbsp; fv = cloneFeature(fv);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>674</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; &nbsp; fv-&gt;minutes += 48*60;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>675</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; //&nbsp; &nbsp; &nbsp; storeFeature(fv);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>676</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>287</th><th>677</th><td class=\"l\"><span>// This function is triggered when the check box is toggled and will show/hide the plugin.</span>\u00a0</td>\n                  </tr><tr>\n                          <th>288</th><th>678</th><td class=\"l\"><span>static void toggled( GaimBuddyList *blist,GtkWidget *button )</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c?rev=113#L360\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c?rev=116#L750\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>360</th><th>750</th><td class=\"l\"><span>//&nbsp; &nbsp; &nbsp; label = gtk_label_new (\"Name\");</span>\u00a0</td>\n                  </tr><tr>\n                          <th>361</th><th>751</th><td class=\"l\"><span>//&nbsp; &nbsp; &nbsp; gtk_box_pack_start(GTK_BOX(hbox_labels), label, TRUE, TRUE, 0);</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>362</th><th>\u00a0</th><td class=\"l\"><span>//&nbsp; &nbsp; &nbsp; label = gtk_label_new (\"Location\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>363</th><th>\u00a0</th><td class=\"l\"><span>//&nbsp; &nbsp; &nbsp; gtk_box_pack_start(GTK_BOX(hbox_labels), label, TRUE, TRUE, 0);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>364</th><th>\u00a0</th><td class=\"l\"><span>//&nbsp; &nbsp; &nbsp; label = gtk_label_new (\"Activity\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>365</th><th>\u00a0</th><td class=\"l\"><span>//&nbsp; &nbsp; &nbsp; gtk_box_pack_start(GTK_BOX(hbox_labels), label, TRUE, TRUE, 0);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>752</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>753</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; label = gtk_label_new (\"Location\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>754</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_box_pack_start(GTK_BOX(hbox_labels), label, TRUE, TRUE, 0);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>755</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; label = gtk_label_new (\"Activity\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>756</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_box_pack_start(GTK_BOX(hbox_labels), label, TRUE, TRUE, 0);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>757</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; label = gtk_label_new (\"Social Status\");</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>758</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_box_pack_start(GTK_BOX(hbox_labels), label, TRUE, TRUE, 0);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>366</th><th>759</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>367</th><th>760</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; // Elements of hbox_text</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c?rev=113#L373\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c?rev=116#L766\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>373</th><th>766</th><td class=\"l\"><span>//&nbsp; &nbsp; &nbsp; label = gtk_label_new (\"am\");</span>\u00a0</td>\n                  </tr><tr>\n                          <th>374</th><th>767</th><td class=\"l\"><span>//&nbsp; &nbsp; &nbsp; gtk_box_pack_start(GTK_BOX(hbox_text), label, TRUE, TRUE, 0);</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"last first\">\n                          <th>\u00a0</th><th>768</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>375</th><th>769</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Drop down menu of prep. phrases.</span>\u00a0</td>\n                  </tr><tr>\n                          <th>376</th><th>770</th><td class=\"l\"><span>//&nbsp; &nbsp; &nbsp; textbox = gtk_combo_new();</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c?rev=113#L382\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c?rev=116#L776\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>382</th><th>776</th><td class=\"l\"><span>//&nbsp; &nbsp; &nbsp; gtk_widget_set_size_request (textbox, 30, 20);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>383</th><th>777</th><td class=\"l\"><span>//&nbsp; &nbsp; &nbsp; gtk_box_pack_start(GTK_BOX(hbox_text), textbox, TRUE, TRUE, 0);</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>778</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>779</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; GtkEntryCompletion *completion;</ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>780</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>384</th><th>781</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Textbox - Location</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>385</th><th>\u00a0</th><td class=\"l\"><span>//&nbsp; &nbsp; &nbsp; textbox = gtk_entry_new();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>386</th><th>\u00a0</th><td class=\"l\"><span>//&nbsp; &nbsp; &nbsp; gtk_entry_set_text (GTK_ENTRY (textbox), \"home\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>387</th><th>\u00a0</th><td class=\"l\"><span>//&nbsp; &nbsp; &nbsp; gtk_widget_set_size_request (textbox, 30, 20);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>388</th><th>\u00a0</th><td class=\"l\"><span>//&nbsp; &nbsp; &nbsp; gtk_box_pack_start(GTK_BOX(hbox_text), textbox, TRUE, TRUE, 0);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>782</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; locationTextbox = gtk_entry_new();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>783</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text (GTK_ENTRY (locationTextbox), \"at home\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>784</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setParseLocation(gtk_entry_get_text(GTK_ENTRY (locationTextbox)));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>785</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_widget_set_size_request(locationTextbox, 30, 20);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>786</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_box_pack_start(GTK_BOX(hbox_text), locationTextbox, TRUE, TRUE, 0);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>787</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>788</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; completion=initializeTextBoxWithCompletionField(locationTextbox);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>789</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; g_signal_connect (G_OBJECT (completion), \"match-selected\", G_CALLBACK (matchSelectedLocationCB), textbox);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>790</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>791</th><td class=\"r\"><span>&nbsp; &nbsp; g_signal_connect (G_OBJECT (locationTextbox), \"key_press_event\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>792</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (setClassificationLocation), \"key_press_event\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>793</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>794</th><td class=\"r\"><span>&nbsp; &nbsp; g_signal_connect (G_OBJECT (locationTextbox), \"focus_out_event\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>795</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (setClassificationLocation), \"focus_out_event\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>796</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>797</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>798</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>389</th><th>799</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Textbox - Activity</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>390</th><th>\u00a0</th><td class=\"l\"><span>//&nbsp; &nbsp; &nbsp; textbox = gtk_entry_new();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>391</th><th>\u00a0</th><td class=\"l\"><span>//&nbsp; &nbsp; &nbsp; gtk_entry_set_text (GTK_ENTRY (textbox), \"using Nomatic*GAIM\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>392</th><th>\u00a0</th><td class=\"l\"><span>//&nbsp; &nbsp; &nbsp; gtk_widget_set_size_request (textbox, 30, 20);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>393</th><th>\u00a0</th><td class=\"l\"><span>//&nbsp; &nbsp; &nbsp; gtk_box_pack_start(GTK_BOX(hbox_text), textbox, TRUE, TRUE, 0);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>394</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>395</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>800</th><td class=\"r\"><span>/*&nbsp; &nbsp; &nbsp; activityTextbox = gtk_entry_new();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>801</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text (GTK_ENTRY (activityTextbox), \"using Nomatic*Gaim\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>802</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setParseActivity(gtk_entry_get_text(GTK_ENTRY (activityTextbox)));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>803</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_widget_set_size_request (activityTextbox, 30, 20);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>804</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_box_pack_start(GTK_BOX(hbox_text), activityTextbox, TRUE, TRUE, 0);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>805</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; initializeTextBoxWithCompletionField(activityTextbox);*/</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>806</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>807</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Textbox - Social Status</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>808</th><td class=\"r\"><span>/*&nbsp; &nbsp; &nbsp; socialStatusTextbox = gtk_entry_new();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>809</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text (GTK_ENTRY (socialStatusTextbox), \"by myself\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>810</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setParseSocialStatus(gtk_entry_get_text(GTK_ENTRY (socialStatusTextbox)));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>811</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_widget_set_size_request (socialStatusTextbox, 30, 20);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>812</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_box_pack_start(GTK_BOX(hbox_text), socialStatusTextbox, TRUE, TRUE, 0);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>813</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; initializeTextBoxWithCompletionField(socialStatusTextbox);*/</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>814</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>396</th><th>815</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; // Elements of hbox_cusLab - Label of Custom Message</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>397</th><th>\u00a0</th><td class=\"l\"><span><del>&nbsp; &nbsp; &nbsp; &nbsp; label = gtk_label_new (\"Nomatic Managed Custom</del> Message\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>398</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_box_pack_start(GTK_BOX(hbox_cusLab), label, TRUE, TRUE, 0);<del></del></span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>816</th><td class=\"r\"><span><ins>/*&nbsp; &nbsp; &nbsp; label = gtk_label_new (\"Free Form Status</ins> Message\");</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>817</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_box_pack_start(GTK_BOX(hbox_cusLab), label, TRUE, TRUE, 0);<ins>*/</ins></span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>399</th><th>818</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>400</th><th>819</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; // Elements of hbox_cus - Textfield of Custom Message</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>401</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; textbox = gtk_entry_new();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>402</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; const char *message = gaim_savedstatus_get_message(gaim_savedstatus_get_current());</span>\u00a0</td>\n                      </tr><tr>\n                        <th>403</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(message != NULL)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>404</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text(GTK_ENTRY(textbox), gaim_savedstatus_get_message(gaim_savedstatus_get_current()));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>405</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; else</span>\u00a0</td>\n                      </tr><tr>\n                        <th>406</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text(GTK_ENTRY(textbox), \"\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>407</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>408</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /*Create the completion object */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>409</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; GtkEntryCompletion *completion;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>410</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; completion = gtk_entry_completion_new();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>411</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_completion(GTK_ENTRY(textbox),completion);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>412</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>413</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /*Create the tree model use it as the completion model*/&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>414</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; tree = completionModelInit();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>415</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_completion_set_model(completion,tree);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>416</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>417</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; g_object_unref(tree);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>418</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; g_object_unref(completion);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>419</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>420</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_completion_set_text_column(completion,0);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>421</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>422</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; featureVectorsTransferToCompletionField(completion);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>423</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>424</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>425</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_box_pack_start(GTK_BOX(hbox_cus), textbox, TRUE, TRUE, 0);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>426</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; g_signal_connect (G_OBJECT (textbox), \"key_press_event\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>427</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (customMessageCB), \"key_press_event\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>428</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; g_signal_connect (G_OBJECT (textbox), \"focus_out_event\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>429</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (customMessageCB), \"focus_out_event\");</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>820</th><td class=\"r\"><span>/*&nbsp; &nbsp; &nbsp; freeFormTextbox = gtk_entry_new();*/</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>821</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>822</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; //This loads the custom status box with the current status when the plug in kicks off</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>823</th><td class=\"r\"><span>/*&nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>824</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const char *message = gaim_savedstatus_get_message(gaim_savedstatus_get_current());</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>825</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(message != NULL)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>826</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text(GTK_ENTRY(freeFormTextbox), gaim_savedstatus_get_message(gaim_savedstatus_get_current()));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>827</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>828</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text(GTK_ENTRY(freeFormTextbox), \"\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>829</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>830</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setFreeFormStatus(gtk_entry_get_text(GTK_ENTRY (freeFormTextbox)));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>831</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_box_pack_start(GTK_BOX(hbox_cus), freeFormTextbox, TRUE, TRUE, 0);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>832</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; initializeTextBoxWithCompletionField(freeFormTextbox);*/</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>833</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>834</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /*featureCollectionTransferToCompletionField( locationTextbox,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>835</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; activityTextbox,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>836</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; socialStatusTextbox,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>837</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; freeFormTextbox);*/</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>838</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>839</th><td class=\"r\"><span>/*&nbsp; &nbsp; g_signal_connect (G_OBJECT (activityTextbox), \"key_press_event\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>840</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (setClassificationActivity), \"key_press_event\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>841</th><td class=\"r\"><span>&nbsp; &nbsp; g_signal_connect (G_OBJECT (socialStatusTextbox), \"key_press_event\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>842</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (setClassificationSocialStatus), \"key_press_event\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>843</th><td class=\"r\"><span>&nbsp; &nbsp; g_signal_connect (G_OBJECT (freeFormTextbox), \"key_press_event\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>844</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (setClassificationFreeForm), \"key_press_event\");*/</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>845</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>846</th><td class=\"r\"><span>/*&nbsp; &nbsp; g_signal_connect (G_OBJECT (activityTextbox), \"focus_out_event\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>847</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (setClassificationActivity), \"focus_out_event\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>848</th><td class=\"r\"><span>&nbsp; &nbsp; g_signal_connect (G_OBJECT (socialStatusTextbox), \"focus_out_event\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>849</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (setClassificationSocialStatus), \"focus_out_event\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>850</th><td class=\"r\"><span>&nbsp; &nbsp; g_signal_connect (G_OBJECT (freeFormTextbox), \"focus_out_event\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>851</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (setClassificationFreeForm), \"focus_out_event\");*/</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>852</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>430</th><th>853</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>431</th><th>854</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; // Elements of hbox_options</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c?rev=113#L550\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.c?rev=116#L973\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>550</th><th>973</th><td class=\"l\"><span>init_plugin(GaimPlugin *plugin) {</span>\u00a0</td>\n                  </tr><tr>\n                          <th>551</th><th>974</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; //Add preferences here when its time</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>975</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; freeFormStatus=strdup(\"I'm busy\");</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>976</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; locationStatus=strdup(\"at home\");</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>977</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; activityStatus=strdup(\"using Nomatic*Gaim\");</ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>978</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; socialStatusStatus=strdup(\"by myself\");</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>552</th><th>979</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>553</th><th>980</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n  </ul>\n</div>\n        <div id=\"help\"><strong>Note:</strong> See <a href=\"/LUCICodeRepository/nomaticIM/wiki/TracChangeset\">TracChangeset</a>\n          for help on using the changeset viewer.</div>\n      </div>\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"first\">\n          <a rel=\"nofollow\" href=\"?format=diff&amp;new=116\" class=\"diff\">Unified Diff</a>\n        </li><li class=\"last\">\n          <a rel=\"nofollow\" href=\"?format=zip&amp;new=116\" class=\"zip\">Zip Archive</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/LUCICodeRepository/nomaticIM/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/LUCICodeRepository/nomaticIM/about\"><strong>Trac 1.0.1</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">All content copyright 2007-2008 by LUCI <br /><a href=\"http://luci.ics.uci.edu/\">http://luci.ics.uci.edu/</a></p>\n    </div>\n\t\t<div id=\"sitefooter\">\n\t\t\t<script src=\"http://www.google-analytics.com/urchin.js\" type=\"text/javascript\">\n\t\t\t</script>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t\t_uacct = \"UA-338915-2\";\n\t\t\t\turchinTracker();\n\t\t\t</script>\n\t\t</div>\n\t</body>\n</html>", "id": 46176.0}