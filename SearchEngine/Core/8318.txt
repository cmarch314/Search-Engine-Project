{"text": "CS 263 Spring 2 14 Analysis of Algorithms This course meets Monday Wednesday and Fridays 3 3 5 in Bren 1429 Coursework will consist of weekly homeworks graded during the class period on which they are due and a final exam Group work on homeworks is permitted and encouraged Knowledge of a previous course in the design and analysis of algorithms such as the CS 161 or CS 26 courses taught at UCI is expected but otherwise all CS graduate students are welcome The textbook for this course will be Approximation Algorithms by Vijay Vazirani The tentative schedule of topics is to go through the chapters of this book at a rate of approximately one chapter per lecture Tentative schedule Week 1 Chapters 1 2 combinatorial algorithms Homework due in class Friday Jan 16 Exercises 1 1 1 3 2 8 2 14 Week 2 Chapters 3 5 combinatorial algorithms Homework due in class Friday Jan 23 Exercises 3 2 3 5 4 7 5 1Week 3 Holiday Monday Chapters 6 7 combinatorial algorithms Week 4 Chapters 8 1 approximation schemes Homework due in class Friday Jan 3 1 Exercise 3 of this blog post 2 Find a counterexample to the clearly equality on page 56 mentioned in the footnote of the blog post 3 4 Exercises 6 1 7 1 Week 5 Chapters 11 12 geometric approximation linear programming duality minimax and Yao s principle Homework due in class Friday Feb 6 8 1 8 3 9 9 1 2Week 6 Chapters 13 15 LP based approximation for set cover method of conditional expectations as an explanation for greedy set cover Homework due in class Friday Feb 13 11 3 12 3 12 7 Problem 4 use Yao s principle and the decision tree lower bound for comparison sorting to prove that every randomized comparison based sorting algorithm must use n log n comparisons to sort n items Hint in a binary tree with k leaves the average distance to a leaf is at least log2k Week 7 Holiday Monday Chapters 16 26 Max sat and semidefinite programming Homework due in class Friday Feb 2 14 4 14 5 15 3 15 5 Week 8 TBAWeek 9 TBAWeek 1 No class David Eppstein ICS UC Irvine ", "_id": "http://www.ics.uci.edu/~eppstein/263/", "title": "analysis of algorithms", "html": "<html>\n<head>\n<title>Analysis of Algorithms</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body bgcolor=\"#ffffff\" text=\"#000000\">\n<h1>CS 263, Spring 2014: Analysis of Algorithms</h1>\n\n<p>This course meets Monday, Wednesday, and Fridays, 3:00 - 3:50 in Bren 1429.\nCoursework will consist of weekly homeworks, graded during the\nclass period on which they are due, and a final exam. Group work on\nhomeworks is permitted and encouraged. Knowledge of a previous course in\nthe design and analysis of algorithms (such as the CS 161 or CS 260\ncourses taught at UCI) is expected, but otherwise all CS graduate\nstudents are welcome.</p>\n\n<p>The textbook for this course will\nbe <a href=\"http://www.cc.gatech.edu/fac/Vijay.Vazirani/book.pdf\"><i>Approximation\nAlgorithms</i></a>, by Vijay Vazirani.\nThe tentative schedule of topics is to go through the chapters of this book at a rate of approximately one chapter per lecture.</p>\n\n<p>Tentative schedule:</p>\n<ul>\n<li>Week 1: Chapters 1-2 (combinatorial algorithms). Homework, due in class Friday, Jan 16: Exercises 1.1, 1.3, 2.8, 2.14.</li>\n<li>Week 2: Chapters 3-5 (combinatorial algorithms). Homework, due in class Friday, Jan 23: Exercises 3.2, 3.5, 4.7, 5.1</li>\n<li>Week 3: Holiday Monday. Chapters 6-7 (combinatorial algorithms).</li>\n<li>Week 4: Chapters 8-10 (approximation schemes). Homework, due in\n  class Friday, Jan 30: (1) Exercise 3\n  of <a href=\"http://11011110.livejournal.com/304362.html\">this blog post</a>.\n  (2) Find a counterexample to the \"clearly\" equality on page 56,\n  mentioned in the footnote of the blog post. (3,4) Exercises 6.1, 7.1.\n<li>Week 5: Chapters 11-12 (geometric approximation; linear\n  programming\n  duality); <a href=\"https://en.wikipedia.org/wiki/Minimax\">minimax</a>\n  and <a href=\"https://en.wikipedia.org/wiki/Yao%27s_principle\">Yao's\n  principle</a>. Homework, due in class Friday, Feb 6: 8.1, 8.3, 9.9,\n  10.2</li>\n<li>Week 6: Chapters 13-15 (LP-based approximation for set\n  cover; <a href=\"https://nickhar.wordpress.com/2012/03/05/lecture-16-derandomization-method-of-conditional-expectations-method-of-pessimistic-estimators/\">method\n  of conditional expectations</a> as\n  an <a href=\"http://www.cs.ucr.edu/~neal/Slides/oblivious_randomized_rounding/2007_summary.pdf\">explanation\n  for greedy set cover</a>). Homework, due in\n  class Friday, Feb 13: 11.3, 12.3, 12.7; Problem 4: use Yao's principle\n  and\n  the <a href=\"http://www.ics.uci.edu/~eppstein/161/960116.html\">decision\n  tree lower bound for comparison sorting</a> to prove that every\n  randomized comparison-based sorting algorithm must use\n  &Omega;(n&nbsp;log&nbsp;n) comparisons to sort n items. (Hint: in a\n  binary tree with k leaves, the average distance to a leaf is at least\n  log<sub>2</sub>k.)</li>\n<li>Week 7: Holiday Monday. Chapters 16 & 26 (Max sat and semidefinite\n  programming). Homework, due in class Friday, Feb 20: 14.4, 14.5, 15.3,\n  15.5.</li>\n<li>Week 8: TBA</li>\n<li>Week 9: TBA</li>\n<li>Week 10: No class.</li>\n</ul>\n\n<hr>\n<p><a href=\"/~eppstein/\">David Eppstein</a>, \n<a href=\"/\">ICS</a>, <a href=\"http://www.uci.edu/\">UC Irvine</a>.<br>\n</body>\n</html>\n", "id": 8318.0}