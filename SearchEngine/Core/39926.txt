{"text": "Main Page Modules Data Structures File List Data Fields Globals Related Pages valist hGo to the documentation of this file 1 49 ifndef VALIST H 5 define VALIST H 51 52 Generic headers 53 include maloc maloc h 54 include apbs vhal h 55 56 Headers specific to this file 57 include apbs vatom h 58 include apbs vparam h 59 65 struct sValist 66 67 int number 68 double center 3 69 double mincrd 3 7 double maxcrd 3 71 double maxrad 72 double charge 73 Vatom atoms 74 Vmem vmem 76 77 82 typedef struct sValist Valist 83 84 if defined VINLINE VATOM 85 92 Vatom Valist getAtomList 93 Valist thee 94 95 1 1 double Valist getCenterX 1 2 Valist thee 1 3 1 4 11 double Valist getCenterY 111 Valist thee 112 113 119 double Valist getCenterZ 12 Valist thee 121 122 128 int Valist getNumberAtoms 129 Valist thee 13 131 137 Vatom Valist getAtom 138 Valist thee 139 int i 14 141 147 unsigned long int Valist memChk 148 Valist thee 149 15 151 else if defined VINLINE VATOM 152 define Valist getAtomList thee thee atoms 153 define Valist getNumberAtoms thee thee number 154 define Valist getAtom thee i thee atoms i 155 define Valist memChk thee Vmem bytes thee vmem 156 define Valist getCenterX thee thee center 157 define Valist getCenterY thee thee center 1 158 define Valist getCenterZ thee thee center 2 159 endif if defined VINLINE VATOM 16 166 Valist Valist ctor 167 173 int Valist ctor2 174 Valist thee 175 176 181 void Valist dtor 182 Valist thee 183 184 189 void Valist dtor2 19 Valist thee 191 192 2 4 int Valist readPQR 2 5 Valist thee 2 6 Vio sock 2 7 2 8 218 int Valist readPDB 219 Valist thee 22 Vparam param 221 Vio sock 222 223 224 endif ifndef VALIST H 225 Generated on Tue Dec 6 1 5 31 2 5 for APBS by 1 3 5", "_id": "http://www.ics.uci.edu/~dock/manuals/apbs/html/programmer/valist_8h-source.html", "title": "apbs: valist.h source file", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=iso-8859-1\">\n<title>APBS: valist.h Source File</title>\n<link href=\"apbs.css\" rel=\"stylesheet\" type=\"text/css\">\n</head><body>\n<!-- Generated by Doxygen 1.3.5 -->\n<div class=\"qindex\"><a class=\"qindex\" href=\"index.html\">Main&nbsp;Page</a> | <a class=\"qindex\" href=\"modules.html\">Modules</a> | <a class=\"qindex\" href=\"annotated.html\">Data&nbsp;Structures</a> | <a class=\"qindex\" href=\"files.html\">File&nbsp;List</a> | <a class=\"qindex\" href=\"functions.html\">Data&nbsp;Fields</a> | <a class=\"qindex\" href=\"globals.html\">Globals</a> | <a class=\"qindex\" href=\"pages.html\">Related&nbsp;Pages</a></div>\n<h1>valist.h</h1><a href=\"valist_8h.html\">Go to the documentation of this file.</a><div class=\"fragment\"><pre>00001 \n00049 <span class=\"preprocessor\">#ifndef _VALIST_H_</span>\n00050 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#define _VALIST_H_</span>\n00051 <span class=\"preprocessor\"></span>\n00052 <span class=\"comment\">/* Generic headers */</span>\n00053 <span class=\"preprocessor\">#include \"maloc/maloc.h\"</span>\n00054 <span class=\"preprocessor\">#include \"<a class=\"code\" href=\"vhal_8h.html\">apbs/vhal.h</a>\"</span>\n00055 \n00056 <span class=\"comment\">/* Headers specific to this file */</span>\n00057 <span class=\"preprocessor\">#include \"<a class=\"code\" href=\"vatom_8h.html\">apbs/vatom.h</a>\"</span>\n00058 <span class=\"preprocessor\">#include \"<a class=\"code\" href=\"vparam_8h.html\">apbs/vparam.h</a>\"</span>\n00059 \n<a name=\"l00065\"></a><a class=\"code\" href=\"structsValist.html\">00065</a> <span class=\"keyword\">struct </span><a class=\"code\" href=\"structsValist.html\">sValist</a> { \n00066 \n<a name=\"l00067\"></a><a class=\"code\" href=\"structsValist.html#o0\">00067</a>   <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"structsValist.html#o0\">number</a>;         \n<a name=\"l00068\"></a><a class=\"code\" href=\"structsValist.html#o1\">00068</a>   <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsValist.html#o1\">center</a>[3];   \n<a name=\"l00069\"></a><a class=\"code\" href=\"structsValist.html#o2\">00069</a>   <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsValist.html#o2\">mincrd</a>[3];   \n<a name=\"l00070\"></a><a class=\"code\" href=\"structsValist.html#o3\">00070</a>   <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsValist.html#o3\">maxcrd</a>[3];   \n<a name=\"l00071\"></a><a class=\"code\" href=\"structsValist.html#o4\">00071</a>   <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsValist.html#o4\">maxrad</a>;      \n<a name=\"l00072\"></a><a class=\"code\" href=\"structsValist.html#o5\">00072</a>   <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsValist.html#o5\">charge</a>;      \n<a name=\"l00073\"></a><a class=\"code\" href=\"structsValist.html#o6\">00073</a>   <a class=\"code\" href=\"structsVatom.html\">Vatom</a> *<a class=\"code\" href=\"structsValist.html#o6\">atoms</a>;       \n<a name=\"l00074\"></a><a class=\"code\" href=\"structsValist.html#o7\">00074</a>   Vmem *<a class=\"code\" href=\"structsValist.html#o7\">vmem</a>;         \n00076 };\n00077 \n<a name=\"l00082\"></a><a class=\"code\" href=\"group__Valist.html#ga0\">00082</a> <span class=\"keyword\">typedef</span> <span class=\"keyword\">struct </span><a class=\"code\" href=\"structsValist.html\">sValist</a> <a class=\"code\" href=\"group__Valist.html#ga0\">Valist</a>;\n00083 \n00084 <span class=\"preprocessor\">#if !defined(VINLINE_VATOM)</span>\n00085 <span class=\"preprocessor\"></span>\n00092 <a class=\"code\" href=\"structsVatom.html\">Vatom</a>* <a class=\"code\" href=\"group__Valist.html#ga1\">Valist_getAtomList</a>(\n00093         Valist *thee \n00094         );\n00095 \n00101 <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"group__Valist.html#ga2\">Valist_getCenterX</a>(\n00102         Valist *thee \n00103         );\n00104 \n00110 <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"group__Valist.html#ga3\">Valist_getCenterY</a>(\n00111         Valist *thee \n00112         );\n00113 \n00119 <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"group__Valist.html#ga4\">Valist_getCenterZ</a>(\n00120         Valist *thee \n00121         );\n00122 \n00128 <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"group__Valist.html#ga5\">Valist_getNumberAtoms</a>(\n00129         Valist *thee \n00130         );\n00131 \n00137 <a class=\"code\" href=\"structsVatom.html\">Vatom</a>* <a class=\"code\" href=\"group__Valist.html#ga6\">Valist_getAtom</a>(\n00138         Valist *thee, \n00139         <span class=\"keywordtype\">int</span> i \n00140         );\n00141 \n00147 <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">long</span> <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"group__Valist.html#ga7\">Valist_memChk</a>(\n00148         Valist *thee \n00149         );\n00150 \n00151 <span class=\"preprocessor\">#else </span><span class=\"comment\">/* if defined(VINLINE_VATOM) */</span>\n00152 <span class=\"preprocessor\">#   define Valist_getAtomList(thee) ((thee)-&gt;atoms)</span>\n00153 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#   define Valist_getNumberAtoms(thee) ((thee)-&gt;number)</span>\n00154 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#   define Valist_getAtom(thee, i) (&amp;((thee)-&gt;atoms[i]))</span>\n00155 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#   define Valist_memChk(thee) (Vmem_bytes((thee)-&gt;vmem))</span>\n00156 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#   define Valist_getCenterX(thee) ((thee)-&gt;center[0])</span>\n00157 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#   define Valist_getCenterY(thee) ((thee)-&gt;center[1])</span>\n00158 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#   define Valist_getCenterZ(thee) ((thee)-&gt;center[2])</span>\n00159 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#endif </span><span class=\"comment\">/* if !defined(VINLINE_VATOM) */</span>\n00160 \n00166 <a class=\"code\" href=\"group__Valist.html#ga0\">Valist</a>* <a class=\"code\" href=\"group__Valist.html#ga8\">Valist_ctor</a>();\n00167 \n00173 <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"group__Valist.html#ga9\">Valist_ctor2</a>(\n00174         Valist *thee \n00175         );\n00176 \n00181 <span class=\"keywordtype\">void</span> <a class=\"code\" href=\"group__Valist.html#ga10\">Valist_dtor</a>(\n00182         Valist **thee \n00183         );\n00184 \n00189 <span class=\"keywordtype\">void</span> <a class=\"code\" href=\"group__Valist.html#ga11\">Valist_dtor2</a>(\n00190         Valist *thee \n00191         );\n00192 \n00204 <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"group__Valist.html#ga12\">Valist_readPQR</a>(\n00205         Valist *thee, \n00206         Vio *sock \n00207         );\n00208 \n00218 <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"group__Valist.html#ga13\">Valist_readPDB</a>(\n00219         Valist *thee, \n00220         <a class=\"code\" href=\"structVparam.html\">Vparam</a> *param, \n00221         Vio *sock \n00222         );\n00223 \n00224 <span class=\"preprocessor\">#endif </span><span class=\"comment\">/* ifndef _VALIST_H_ */</span>\n00225 \n</pre></div><hr size=\"1\"><address style=\"align: right;\"><small>Generated on Tue Dec 6 10:05:31 2005 for APBS by\n<a href=\"http://www.doxygen.org/index.html\">\n<img src=\"doxygen.png\" alt=\"doxygen\" align=\"middle\" border=0 > \n</a>1.3.5 </small></address>\n</body>\n</html>\n", "id": 39926.0}