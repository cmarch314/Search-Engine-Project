{"text": " Account New User Guide Activation Password Change Reset Quota Renewal Mapping Network Drive Windows Mac FAQs E mail ICS Google Mail Specify Delivery Point Webmail Thunderbird for ICS Gmail Thunderbird Mailing Lists Forwarding Vacation Spam Settings Email Servers Information Checking Group Account Email Network UCInet Mobile VPN ICS Netreg UCI Weather Report Open Port Request Linux ICS hosts Changing shell Using modules Security Group account access gsu Sun Grid Engine Other Services Labs Printing Activate MS Office Sophos Windows Mac MSDNAA File Restore Self restore snapshot Restore request Quarterly announcements Web Personal Webpage General Information Policies Ethics Ethics Summary Contact Helpdesk Support Staff Who To Contact File Security Understanding and Setting UNIX File Permissions 1 Introduction This guide gives a brief introduction to UNIX file permissions provides instructions on how to perform simple configuration of UNIX file permissions and shows how to find files that may have more permissive settings than intended 2 Theory of Operation UNIX assigns file permissions to three broad categories The user that owns the fileThe group that owns the fileEveryone else a k a world or other Each permission category can be assigned three permissions r ead w ritee x ecute UNIX permissions can be represented as symbols and as octal digits Fig 1 shows a table of possible values OctalSymbolPermission No Permissions1 xExecute2 w Write3 wxWrite and Execute4r Read5r xRead and Execute6rw Read and Write7rwxRead Write and Execute Fig 1 Table of Permission Combinations The effect of these permissions varies by file type There are numerous file types but this guide will only deal with the following types Regular file d Directory When applied to a regular file UNIX permissions have the following effect Read permission allows the file to be openedWrite permission allows the file to be modifiedExecute permission allows the file to be executed directly from the shell if it is a script or binary file When applied to a directory UNIX permissions have the following effect Read permission allows the directory contents to be listedWrite permission allows files or directories to be created or deleted within the directoryExecute permission allows the directory contents to be accessed UNIX permissions closest to the user take precedence User permissions take priority over group permissions for the user who owns a file or directory and both user and group permissions take priority over the other permissions for the user and group who owns the file 3 Setting UNIX File Permissions There are three utilities used for managing UNIX permissions ls l Displays a detailed list of directory contents chmod Changes permissions chgrp Changes group owners 3 1 ls l The ls commands outputs a list of files and directories within a given directory and the l option provides a detailed list of the directory contents including permissions Fig 2 shows the output of ls l on a test file with each section labeled The portions of the output related to UNIX file system permissions are colored red Fig 2 Labeled output of ls l The output of Fig 2 tells us the following The file type indicates that this is a regular file rwx permissions for user indicates that the user who owns this file has read write and execute permissions for the file r x permissions for group indicates that the group who owns this file has read and execute permissions for the file permissions for other i e everyone else means that everyone other than the user or group who owns the file has no access to the file The file is owned by user walbert and group support 3 2 chmod The chmod command changes the permission on a given file or directory chmod sets permissions in two ways Using symbolsUsing octal values This guide uses primarily octal values because they can be entered quickly For more information on using symbols refer to the chmod man page When using octal values a series of three digits defines the permissions for user group and other in that order For example a three digit octal value of 64 would translate to read and write permissions for the user read permission for the group and no permission for others When using octal values to define permissions the new octal value entered will replace the existing permissions on the file or directory There is an optional leading digit which sets the setuid setgid and sticky bits Usage of these permissions bits are outside the scope of this guide The following examples show common uses of chmod After the chmod command the output of the ls l command is shown to demonstrate how the file permissions should look Refer to the table in Fig 1 for explanations of the octal values 3 2 1 Access for Only Yourself chmod 6 test file ls l test file rw 1 walbert ugrad Nov 5 15 58 test file 3 2 2 Write Access for Yourself and Read Access for Your Group chmod 64 test file ls l test file rw r 1 walbert ugrad Nov 5 15 58 test file 3 2 3 Write Access for Yourself and Read Access for Everyone Else chmod 644 test file ls l test file rw r r 1 walbert ugrad Nov 5 15 58 test file 3 2 4 Write and Execute Access for Yourself Only chmod 7 test file ls l test file rwx 1 walbert ugrad Nov 5 15 58 test file 3 2 5 Write and Execute Access for Yourself and Execute Access for Everyone chmod 755 test file ls l test file rwxr xr x 1 walbert ugrad Nov 5 15 58 test file 3 2 6 Write Access to a Directory for Yourself and Read Access for Your Group chmod 75 test directory ls l d test directory drwxr x 2 walbert ugrad 2 K Nov 5 15 59 test directory 3 2 7 Remove All Non User Access to a Directory and its Sub directories chmod R go rwx test directory ls l R test directory test directory total 4 K drwx 3 walbert ugrad 2 K Nov 5 16 53 foo rw 1 walbert ugrad Nov 5 16 2 test file test directory foo total 4 K drwx 3 walbert ugrad 2 K Nov 5 16 53 bar rw 1 walbert ugrad Nov 5 16 53 test1 test directory foo bar total 4 K drwx 2 walbert ugrad 2 K Nov 5 16 53 baz rw 1 walbert ugrad Nov 5 16 53 test2 test directory foo bar baz total rw 1 walbert ugrad Nov 5 16 53 test3 In this case symbolic permission assignment was used as octal permission assignments usually do not produce the intended result when applied recursively The symbolic permissions used in this example go rwx can be translated as for group and other remove read write and execute permissions 3 3 chgrp The chgrp command changes the group ownership on a given file or directory Changing group ownership may be necessary when sharing files and directories with other members of your research group 3 3 1 Changing the Group Ownership of a File chgrp support test file ls l test file rw rw 1 walbert support Nov 5 15 58 test file 3 3 2 Changing the Group Ownership of a Directory and its Contents chgrp R support test directory ls l R test directory test directory total 4 K drwx 3 walbert support 2 K Nov 5 16 53 foo rw 1 walbert support Nov 5 16 2 test file test directory foo total 4 K drwx 3 walbert support 2 K Nov 5 16 53 bar rw 1 walbert support Nov 5 16 53 test1 test directory foo bar total 4 K drwx 2 walbert support 2 K Nov 5 16 53 baz rw 1 walbert support Nov 5 16 53 test2 test directory foo bar baz total rw 1 walbert support Nov 5 16 53 test3 4 Finding Files with Unwanted Permissions This section provides information on the use of the find command to find and display files and directories with permissions that may be undesirable All examples in this section will output results in the format typically provided by ls l All examples will use the following format find dir name perm 5 type f print xargs ls l Explanation of these options dir name Directory being searched perm Instructs find to match files based on given permissions type f Instructs find to match only regular files print Sends output to stdout using the null character xargs Command that builds another command to execute based on the content of stdin Use the null character as the item delimiter 4 1 Find All Files Accessible by Other in Any Way find perm 7 type f print xargs ls l This will display all files within your home directory that have read write or execute permissions for other This is useful for getting a general idea of what others can access in your home directory 4 2 Find All Files Readable by Other find perm 4 type f print xargs ls l This will display all files within the current working directory that are world readable Many of these files will be common files such as shared libraries icons etc located in hidden directories which are generally harmless Any private files that appear on this list e g private SSH keys or files on non hidden directories should be investigated 4 3 Find All Files Writable by Other find extra research perm 2 type f print xargs ls l This will display all files in the extra research directory that are writable by other Any files that appear in this list should be investigated and in most cases permissions should be changed to something more restrictive 4 4 Find All Files Executable by User or Group and Writable by Other find perm 1 2 type f print xargs ls l User find perm 12 type f print xargs ls l Group This will display all files in your home directory that are both world writable and executable by either the user or the group that owns the file Files that are user executable and world writable are a major security vulnerability and should be fixed immediately unless you know exactly what you are doing 4 5 Find All Files Owned by a Specific Group find group NameOfGroup type f print xargs ls l This will display all files in your home directory that are owned by the specified group 4 6 Find All Files Not Owned by a Specific Group find not group NameOfGroup type f print xargs ls l This will display all files in the current working directory that are not owned by the specified group 5 Further Resources For detailed documentation on the commands used in this guide see the man pages for the following commands lschmodchgrpfindxargs For other resources on the commands used in this guide and UNIX file system permissions in general Wikipedia File system permissionsWikipedia chmodWikipedia chgrpIBM Learn Linux 1 1 Manage file permissions and ownershipTLDP 3 4 1 Access rights Linux s first line of defense UC copyright UCI directory Intranet Site Map icswebmaster ics uci edu Updated November 19 2 13", "_id": "http://www.ics.uci.edu/computing/linux/file-security.php", "title": "file security", "html": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n                <title>File Security</title>\n                \n                \n                <meta content=\"Tue, 19 Nov 2013 10:26:17 -0320\" name=\"date\"/>\n                \n<link href=\"../bin/styles/stylesheet_nosidebar.css\" rel=\"stylesheet\" type=\"text/css\"/>\n<script language=\"JavaScript\">\n<!-- \nfunction clear_textbox()\n{\nif (document.searchform.q.value == \"Search ICS\")\ndocument.searchform.q.value = \"\";\n} \n-->\n</script>\n</head>\n<body>\n\n<div id=\"wrapper\">\n<script type=\"text/javascript\">\r\n\r\nsfHover = function() {\r\n    var sfEls = document.getElementById(\"navcontainer\").getElementsByTagName(\"LI\");\r\n    for (var i=0; i<sfEls.length; i++) \r\n    {\r\n        sfEls[i].onmouseover=function()\r\n        {\r\n            this.className+=\" sfhover\";\r\n        }\r\n        \r\n        sfEls[i].onmouseout=function() \r\n        {\r\n            this.className=this.className.replace(new RegExp(\" sfhover\\\\b\"), \"\");\r\n        }\r\n    }\r\n}\r\n\r\nif (window.attachEvent) window.attachEvent(\"onload\", sfHover);\r\n\r\n</script>\r\n\r\n\r\n<div id=\"header\" title=\"Welcome to the Donald Bren School of Information and Computer Sciences @ UC Irvine\">\r\n\r\n    <a id=\"bren_link\" href=\"/\"></a>\r\n\r\n        <a id=\"uci_link\" href=\"http://www.uci.edu/\"></a>\r\n\r\n</div>\r\n\r\n\r\n    <div CLASS=\"newbar\"><p style=\"line-height: 0px; display: none; \"></p></div>\r\n\r\n    \r\n<div id=\"navcontainer\">\r\n\r\n\r\n<ul>\r\n\r\n<li>\r\n\r\n    <a href='/computing/account/' title='account'>&raquo; Account</a>\r\n\r\n    <ul>\r\n    <li><a href=\"/computing/account/new.php\">&raquo; New User Guide</a></li>\r\n    <li><a href=\"/computing/account/activate.php\">&raquo; Activation</a></li>\r\n    <li><a href=\"/computing/account/password.php\">&raquo; Password Change/Reset</a></li>\r\n    <li><a href=\"/computing/account/quota.php\">&raquo; Quota</a></li>\r\n    <li><a href=\"/computing/account/renewal.php\">&raquo; Renewal</a></li>\r\n    <li><a href='#'>&raquo; Mapping Network Drive</a>\r\n      <ul>\r\n      <li><a href=\"/computing/account/mapdrive_win.php\">&raquo; Windows</a></li>\r\n      <li><a href=\"/computing/account/mapdrive_mac.php\">&raquo; Mac</a></li>\r\n      </ul></li>\r\n    <li><a href=\"/computing/account/faqs.php\">&raquo; FAQs</a></li>     \r\n    </ul>\r\n</li>\r\n\r\n<li>\r\n\r\n    <a href='/computing/email/' title='e-mail'>&raquo; E-mail</a>\r\n\r\n    <ul>\r\n    <li><a href=\"/computing/email/google_apps.php\">&raquo; ICS Google Mail</a></li>\r\n    <li><a href=\"/computing/email/delivery_point.php\">&raquo; Specify Delivery Point</a></li>\r\n    <li><a href=\"http://webmail.ics.uci.edu\">&raquo; Webmail</a></li>\r\n    <li><a href=\"/computing/email/thunderbird_Gmail.php\">&raquo; Thunderbird for ICS Gmail</a></li>\r\n    <li><a href=\"/computing/email/thunderbird_setup.php\">&raquo; Thunderbird</a></li>\r\n    <li><a href=\"/computing/email/\">&raquo; Mailing Lists</a></li>\r\n    <li><a href=\"/computing/email/mailboss.php\">&raquo; Forwarding/Vacation/Spam Settings</a></li>\r\n    <li><a href=\"/computing/email/\">&raquo; Email Servers Information</a></li>\r\n    <li><a href=\"/computing/email/group_email.php\">&raquo; Checking Group Account Email</a></li>\r\n    </ul>\r\n</li>\r\n\r\n<li>\r\n\r\n    <a href='/computing/network/' title='network'>&raquo; Network</a>\r\n\r\n    <ul>\r\n    <li><a href=\"http://www.oit.uci.edu/mobile/\">&raquo; UCInet Mobile</a></li>\r\n    <li><a href=\"http://www.oit.uci.edu/security/vpn/\">&raquo; VPN</a></li>\r\n    <li><a href=\"https://netreg.ics.uci.edu/\">&raquo; ICS Netreg</a></li>\r\n    <li><a href=\"http://weather.uci.edu/\">&raquo; UCI Weather Report</a></li>\r\n    <li><a href=\"/computing/network/\">&raquo; Open Port Request</a></li>\r\n    </ul>\r\n</li>\r\n\r\n<li>\r\n\r\n    <a href='#' title='linux'>&raquo; Linux</a>\r\n    \r\n    <ul>\r\n    <li><a href=\"/computing/linux/hosts.php\">&raquo; ICS hosts</a></li>\r\n    <li><a href=\"/computing/linux/shell.php\">&raquo; Changing shell</a></li>\r\n    <li><a href=\"/computing/linux/modules.php\">&raquo; Using modules</a></li>\r\n    <li><a href=\"/computing/linux/security.php\">&raquo; Security</a></li>\r\n    <li><a href=\"/computing/linux/gsu.php\">&raquo; Group account access (gsu)</a></li>\r\n    <li><a href=\"/computing/linux/sge.php\">&raquo; Sun Grid Engine</a></li>\r\n        </ul>\r\n</li>\r\n\r\n<li>\r\n\r\n    <a href='#' title='services'>&raquo; Other Services</a>\r\n\r\n    <ul>\r\n    <li><a href=\"http://www.ics.uci.edu/~lab\">&raquo; Labs</a></li>\r\n    <li><a href=\"/computing/services/printing.php\">&raquo; Printing</a></li>\r\n    <li><a href=\"/computing/services/msoffice.php\">&raquo; Activate MS Office</a></li>\r\n    <li><a href='#'>&raquo; Sophos</a>\r\n      <ul>\r\n      <li><a href=\"/computing/services/sophos_win.php\">&raquo; Windows</a></li>\r\n      <li><a href=\"/computing/services/sophos_mac.php\">&raquo; Mac</a></li>\r\n      </ul></li>    \r\n    <li><a href=\"/computing/services/msdnaa_faq.php\">&raquo; MSDNAA</a></li>\r\n    <li><a href='#'>&raquo; File Restore</a>\r\n      <ul>\r\n      <li><a href=\"/computing/services/snapshot.php\">&raquo; Self-restore snapshot</a></li>\r\n      <li><a href=\"/computing/services/restore.php\">&raquo; Restore request</a></li>\r\n      </ul></li>\r\n      <li><a href=\"/computing/quarterlyAnnouncement/index.php\">&raquo; Quarterly announcements</a></li>\r\n    </ul>   \r\n</li>\r\n\r\n<li> \r\n\r\n    <a href='#' title='web'>&raquo; Web</a>\r\n    \r\n    <ul>\r\n    <li><a href=\"/computing/web/personalpage.php\">&raquo; Personal Webpage</a></li>\r\n    <li><a href=\"/computing/web/faqs.php\">&raquo; General Information</a></li>\r\n    </ul>   \r\n</li>\r\n\r\n<li>\r\n\r\n    <a href='/computing/policy/' title='contact'>&raquo; Policies</a>\r\n    \r\n    <ul>\r\n    <li><a href=\"/computing/policy/ethics.php\">&raquo; Ethics</a></li>\r\n    <li><a href=\"/computing/policy/ethics_summary.php\">&raquo; Ethics Summary</a></li>\r\n    </ul>\r\n</li>\r\n\r\n<li>\r\n\r\n    <a href='/computing/contact/' title='contact'>&raquo; Contact</a>\r\n    \r\n    <ul>\r\n    <li><a href=\"/computing/contact/helpdesk.php\">&raquo; Helpdesk</a></li>\r\n    <li><a href=\"/computing/contact/staff.php\">&raquo; Support Staff</a></li>\r\n    <li><a href=\"/computing/contact/who.php\">&raquo; Who To Contact</a></li>\r\n    </ul>\r\n</li>\r\n\r\n</ul>\r\n\r\n<style type=\"text/css\">@import url(\"/bin/icssearchstyle/css/icssearch.css\");</style>\r\n<script src=\"/bin/icssearchstyle/js/icssearch.js\" type=\"text/javascript\"></script>\r\n<script src=\"/bin/icssearchstyle/js/icssearchform.js\" type=\"text/javascript\"></script>\r\n\r\n</div><div id=\"content\"><a id=\"startcontent\" name=\"startcontent\"></a>  \n<div id=\"content_title\">File Security</div>\n\n<blockquote>\n<div id=\"content_text\">\n\n<meta content=\"text/html; charset=windows-1252\" http-equiv=\"content-type\"/>\n<title>Understanding and Setting UNIX File Permissions</title>\n<h1>Understanding and Setting UNIX File Permissions</h1>\n<h2>1. Introduction</h2>\n<p>This guide gives a brief introduction to UNIX file permissions, provides\n      instructions on how to perform simple configuration of UNIX file\n      permissions, and shows how to find files that may have more permissive\n      settings than intended.</p>\n<h2>2. Theory of Operation</h2>\n<p>UNIX assigns file permissions to three broad categories:</p>\n<ol>\n<li>The user that owns the file</li>\n<li>The group that owns the file</li>\n<li>Everyone else (a.k.a 'world' or 'other')</li>\n</ol>\n<p>Each permission category can be assigned three permissions:</p>\n<ol>\n<li>(r)ead</li>\n<li>(w)rite</li>\n<li>e(x)ecute</li>\n</ol>\n<p>UNIX permissions can be represented as symbols and as octal digits. Fig.\n      1 shows a table of possible values:</p>\n<table border=\"1\" cellpadding=\"0\" cellspacing=\"0\" style=\"width: 319px; height: 191px;\" summary=\"Permission Settings\">\n<tbody>\n<tr>\n<td style=\"text-align: center;\"><span style=\"font-weight: bold;\">Octal</span></td>\n<td style=\"text-align: center;\"><span style=\"font-weight: bold;\">Symbol</span></td>\n<td><span style=\"font-weight: bold;\">Permission</span></td>\n</tr>\n<tr>\n<td style=\"text-align: center;\"><span style=\"font-family: monospace;\">0</span></td>\n<td style=\"text-align: center;\"><span style=\"font-family: monospace;\">---</span></td>\n<td>No Permissions</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\"><span style=\"font-family: monospace;\">1</span></td>\n<td style=\"text-align: center;\"><span style=\"font-family: monospace;\">--x</span></td>\n<td>Execute</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\"><span style=\"font-family: monospace;\">2</span></td>\n<td style=\"text-align: center;\"><span style=\"font-family: monospace;\">-w-</span></td>\n<td>Write</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\"><span style=\"font-family: monospace;\">3</span></td>\n<td style=\"text-align: center;\"><span style=\"font-family: monospace;\">-wx</span></td>\n<td>Write and Execute</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\"><span style=\"font-family: monospace;\">4</span></td>\n<td style=\"text-align: center;\"><span style=\"font-family: monospace;\">r--</span></td>\n<td>Read</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\"><span style=\"font-family: monospace;\">5</span></td>\n<td style=\"text-align: center;\"><span style=\"font-family: monospace;\">r-x</span></td>\n<td>Read and Execute</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\"><span style=\"font-family: monospace;\">6</span></td>\n<td style=\"text-align: center;\"><span style=\"font-family: monospace;\">rw-</span></td>\n<td>Read and Write</td>\n</tr>\n<tr>\n<td style=\"text-align: center;\"><span style=\"font-family: monospace;\">7</span></td>\n<td style=\"text-align: center;\"><span style=\"font-family: monospace;\">rwx</span></td>\n<td>Read, Write, and Execute</td>\n</tr>\n</tbody>\n</table>\n<span style=\"font-style: italic;\">Fig. 1: Table of Permission Combinations</span><br/>\n<p>The effect of these permissions varies by file type. There are numerous\n      file types, but this guide will only deal with the following types:</p>\n<ol>\n<li><span style=\"font-family: monospace;\">'-'</span> &#8212; Regular file</li>\n<li><span style=\"font-family: monospace;\">'d'</span> &#8212; Directory</li>\n</ol>\n<p>When applied to a regular file, UNIX permissions have the following\n      effect:</p>\n<ol>\n<li>Read permission allows the file to be opened</li>\n<li>Write permission allows the file to be modified</li>\n<li>Execute permission allows the file to be executed directly from the\n        shell, if it is a script or binary file</li>\n</ol>\n<p>When applied to a directory, UNIX permissions have the following effect:</p>\n<ol>\n<li>Read permission allows the directory contents to be listed</li>\n<li>Write permission allows files or directories to be created or deleted\n        within the directory</li>\n<li>Execute permission allows the directory contents to be accessed</li>\n</ol>\n<p>UNIX permissions closest to the user take precedence. User permissions\n      take priority over group permissions for the user who owns a file or\n      directory, and both user and group permissions take priority over the\n      'other' permissions for the user and group who owns the file.</p>\n<h2>3. Setting UNIX File Permissions</h2>\n<p>There are three utilities used for managing UNIX permissions:</p>\n<ol>\n<li><span style=\"font-family: monospace;\">'ls -l'</span> &#8212; Displays a\n        detailed list of directory contents</li>\n<li><span style=\"font-family: monospace;\">'chmod'</span> &#8212; Changes\n        permissions</li>\n<li><span style=\"font-family: monospace;\">'chgrp'</span> &#8212; Changes group\n        owners</li>\n</ol>\n<h3>3.1. <span style=\"font-family: monospace;\">'ls -l'</span></h3>\n<p>The ls commands outputs a list of files and directories within a given\n      directory, and the <span style=\"font-family: monospace;\">'-l'</span>\n      option provides a detailed list of the directory contents (including\n      permissions).<br/>\n      <br/>\n      Fig. 2 shows the output of <span style=\"font-family: monospace;\">'ls -l'</span>\n      on a test file, with each section labeled. The portions of the output\n      related to UNIX file system permissions are colored red:</p>\n<img alt=\"Permissions\" height=\"205\" src=\"../bin/img/perms1.png\" width=\"743\"/><br/>\n    <span style=\"font-style: italic;\"> Fig. 2: Labeled output of <span style=\"font-family: monospace;\">'ls\n        -l'</span></span><br/>\n<p>The output of Fig. 2 tells us the following:</p>\n<ol>\n<li>The <span style=\"font-family: monospace;\">'-'</span> file type\n        indicates that this is a regular file</li>\n<li><span style=\"font-family: monospace;\">'rwx'</span> permissions for\n        user indicates that the user who owns this file has read, write, and\n        execute permissions for the file</li>\n<li><span style=\"font-family: monospace;\">'r-x'</span> permissions for\n        group indicates that the group who owns this file has read and execute\n        permissions for the file</li>\n<li><span style=\"font-family: monospace;\">'---'</span> permissions for\n        'other' (i.e., everyone else) means that everyone other than the user or\n        group who owns the file has no access to the file.</li>\n<li>The file is owned by user 'walbert' and group 'support'</li>\n</ol>\n<p>&#160;</p>\n<h3>3.2. <span style=\"font-family: monospace;\">'chmod'</span></h3>\n<p>The <span style=\"font-family: monospace;\">chmod</span> command changes\n      the permission on a given file or directory.<br/>\n      <br/>\n      <span style=\"font-family: monospace;\">chmod</span> sets permissions in two\n      ways.</p>\n<ol>\n<li>Using symbols</li>\n<li>Using octal values</li>\n</ol>\n<p>This guide uses primarily octal values because they can be entered\n      quickly. For more information on using symbols, refer to the <span style=\"font-family: monospace;\">chmod</span>\n      man page.<br/>\n      <br/>\n      When using octal values, a series of three digits defines the permissions\n      for user, group, and other in that order. For example, a three-digit octal\n      value of 640 would translate to read and write permissions for the user,\n      read permission for the group, and no permission for others. When using\n      octal values to define permissions, the new octal value entered will\n      replace the existing permissions on the file or directory.<br/>\n      <br/>\n      (There is an optional leading digit which sets the setuid, setgid, and\n      sticky bits. Usage of these permissions bits are outside the scope of this\n      guide.)<br/>\n      <br/>\n      The following examples show common uses of <span style=\"font-family: monospace;\">chmod</span>.\n      After the <span style=\"font-family: monospace;\">chmod</span> command, the\n      output of the <span style=\"font-family: monospace;\">ls -l</span> command\n      is shown to demonstrate how the file permissions should look. Refer to the\n      table in Fig. 1 for explanations of the octal values.</p>\n<p><strong>3.2.1. Access for Only Yourself</strong></p>\n<p><span style=\"font-family: monospace;\">$ chmod 600 test_file<br/>\n        $ ls -l test_file<br/>\n        -rw------- 1 walbert ugrad 0 Nov&#160; 5 15:58 test_file</span></p>\n<p><strong>3.2.2. Write Access for Yourself and Read Access for Your Group</strong></p>\n<p><span style=\"font-family: monospace;\">$ chmod 640 test_file<br/>\n        $ ls -l test_file<br/>\n        -rw-r----- 1 walbert ugrad 0 Nov&#160; 5 15:58 test_file</span></p>\n<p><strong>3.2.3. Write Access for Yourself and Read Access for Everyone Else</strong></p>\n<p><span style=\"font-family: monospace;\">$ chmod 644 test_file<br/>\n        $ ls -l test_file<br/>\n        -rw-r--r-- 1 walbert ugrad 0 Nov&#160; 5 15:58 test_file</span></p>\n<p><strong>3.2.4. Write and Execute Access for Yourself Only</strong></p>\n<p><span style=\"font-family: monospace;\">$ chmod 700 test_file<br/>\n        $ ls -l test_file<br/>\n        -rwx------ 1 walbert ugrad 0 Nov&#160; 5 15:58 test_file</span></p>\n<p><strong>3.2.5. Write and Execute Access for Yourself, and Execute Access for\n      Everyone</strong></p>\n<p><span style=\"font-family: monospace;\">$ chmod 755 test_file<br/>\n        $ ls -l test_file<br/>\n        -rwxr-xr-x 1 walbert ugrad 0 Nov&#160; 5 15:58 test_file</span></p>\n<p><strong>3.2.6. Write Access to a Directory for Yourself, and Read Access for\n      Your Group</strong></p>\n<p><span style=\"font-family: monospace;\">$ chmod 750 test_directory<br/>\n        $ ls -l -d test_directory<br/>\n        drwxr-x--- 2 walbert ugrad 2.0K Nov&#160; 5 15:59 test_directory/</span></p>\n<p><strong>3.2.7. Remove All Non-User Access to a Directory and its Sub-directories</strong></p>\n<p><span style=\"font-family: monospace;\">$ chmod -R go-rwx test_directory<br/>\n        $ ls -l -R test_directory<br/>\n        test_directory/:<br/>\n        total 4.0K<br/>\n        drwx------ 3 walbert ugrad 2.0K Nov&#160; 5 16:53 foo/<br/>\n        -rw------- 1 walbert ugrad&#160;&#160;&#160; 0 Nov&#160; 5 16:20\n        test_file<br/>\n        <br/>\n        test_directory/foo:<br/>\n        total 4.0K<br/>\n        drwx------ 3 walbert ugrad 2.0K Nov&#160; 5 16:53 bar/<br/>\n        -rw------- 1 walbert ugrad&#160;&#160;&#160; 0 Nov&#160; 5 16:53 test1<br/>\n        <br/>\n        test_directory/foo/bar:<br/>\n        total 4.0K<br/>\n        drwx------ 2 walbert ugrad 2.0K Nov&#160; 5 16:53 baz/<br/>\n        -rw------- 1 walbert ugrad&#160;&#160;&#160; 0 Nov&#160; 5 16:53 test2<br/>\n        <br/>\n        test_directory/foo/bar/baz:<br/>\n        total 0<br/>\n        -rw------- 1 walbert ugrad 0 Nov&#160; 5 16:53 test3<br/>\n      </span><br/>\n      In this case, symbolic permission assignment was used, as octal permission\n      assignments usually do not produce the intended result when applied\n      recursively. The symbolic permissions used in this example, 'go-rwx', can\n      be translated as &#8220;for group and other&#8212;remove read, write, and execute\n      permissions.&#8221;</p>\n<h3>3.3. <span style=\"font-family: monospace;\">'chgrp'</span></h3>\n<p>The <span style=\"font-family: monospace;\">chgrp</span> command changes\n      the group ownership on a given file or directory.<br/>\n      <br/>\n      Changing group ownership may be necessary when sharing files and\n      directories with other members of your research group.</p>\n<p><strong>3.3.1. Changing the Group Ownership of a File</strong></p>\n<p><span style=\"font-family: monospace;\">$ chgrp support test_file<br/>\n        $ ls -l test_file<br/>\n        -rw-rw---- 1 walbert support 0 Nov&#160; 5 15:58 test_file</span></p>\n<p><strong>3.3.2. Changing the Group Ownership of a Directory and its Contents</strong></p>\n<p><span style=\"font-family: monospace;\">$ chgrp -R support test_directory<br/>\n        $ ls -l -R test_directory<br/>\n        test_directory:<br/>\n        total 4.0K<br/>\n        drwx------ 3 walbert support 2.0K Nov&#160; 5 16:53 foo/<br/>\n        -rw------- 1 walbert support&#160;&#160;&#160; 0 Nov&#160; 5 16:20\n        test_file<br/>\n        <br/>\n        test_directory/foo:<br/>\n        total 4.0K<br/>\n        drwx------ 3 walbert support 2.0K Nov&#160; 5 16:53 bar/<br/>\n        -rw------- 1 walbert support&#160;&#160;&#160; 0 Nov&#160; 5 16:53 test1<br/>\n        <br/>\n        test_directory/foo/bar:<br/>\n        total 4.0K<br/>\n        drwx------ 2 walbert support 2.0K Nov&#160; 5 16:53 baz/<br/>\n        -rw------- 1 walbert support&#160;&#160;&#160; 0 Nov&#160; 5 16:53 test2<br/>\n        <br/>\n        test_directory/foo/bar/baz:<br/>\n        total 0<br/>\n        -rw------- 1 walbert support 0 Nov&#160; 5 16:53 test3</span></p>\n<h2>4. Finding Files with Unwanted Permissions</h2>\n<p>This section provides information on the use of the find command to find\n      and display files and directories with permissions that may be\n      undesirable. All examples in this section will output results in the\n      format typically provided by <span style=\"font-family: monospace;\">ls -l</span>.<br/>\n      <br/>\n      All examples will use the following format:<br/>\n      <br/>\n      <span style=\"font-family: monospace;\">find /dir/name -perm /005 -type f\n        -print0 | xargs -0 ls -l</span><br/>\n      <br/>\n      Explanation of these options:<br/>\n      <span style=\"font-family: monospace;\">/dir/name</span> &#8212; Directory being\n      searched<br/>\n      <span style=\"font-family: monospace;\">-perm</span> &#8212; Instructs <span style=\"font-family: monospace;\">find</span>\n      to match files based on given permissions<br/>\n      <span style=\"font-family: monospace;\">-type f</span> &#8212; Instructs <span style=\"font-family: monospace;\">find</span>\n      to match only regular files<br/>\n      <span style=\"font-family: monospace;\">-print0</span> &#8212; Sends output to\n      stdout using the null character<br/>\n      <span style=\"font-family: monospace;\">xargs</span> &#8212; Command that builds\n      another command to execute based on the content of stdin<br/>\n      <span style=\"font-family: monospace;\">-0</span> &#8212; Use the null character\n      as the item delimiter</p>\n<h3>4.1. Find All Files Accessible by 'Other' in Any Way</h3>\n<p><span style=\"font-family: monospace;\">$ find &#126; -perm /007 -type f -print0\n        | xargs -0 ls -l<br/>\n      </span><br/>\n      This will display all files within your home directory that have read,\n      write, or execute permissions for 'other.' This is useful for getting a\n      general idea of what others can access in your home directory.</p>\n<h3>4.2. Find All Files Readable by 'Other'</h3>\n<p><span style=\"font-family: monospace;\">$ find . -perm /004 -type f -print0\n        | xargs -0 ls -l</span><br/>\n      <br/>\n      This will display all files within the current working directory that are\n      world-readable. Many of these files will be 'common' files (such as shared\n      libraries, icons, etc.) located in hidden directories, which are generally\n      harmless. Any private files that appear on this list (e.g., private SSH\n      keys or files on non-hidden directories) should be investigated.</p>\n<h3>4.3. Find All Files Writable by 'Other'</h3>\n<p><span style=\"font-family: monospace;\">$ find /extra/research0 -perm /002\n        -type f -print0 | xargs -0 ls -l</span><br/>\n      <br/>\n      This will display all files in the /extra/research0 directory that are\n      writable by 'other.' Any files that appear in this list should be\n      investigated, and in most cases, permissions should be changed to\n      something more restrictive.</p>\n<h3>4.4. Find All Files Executable by User or Group, and Writable by 'Other'</h3>\n<p><span style=\"font-family: monospace;\">$ find &#126; -perm -102 -type f -print0\n        | xargs -0 ls -l&#160; # User<br/>\n        $ find &#126; -perm -012 -type f -print0 | xargs -0 ls -l&#160; # Group</span><br/>\n      <br/>\n      This will display all files in your home directory that are both\n      world-writable and executable by either the user or the group that owns\n      the file. Files that are user-executable and world-writable are a major\n      security vulnerability and should be fixed immediately unless you know\n      exactly what you are doing.</p>\n<h3>4.5. Find All Files Owned by a Specific Group</h3>\n<p><span style=\"font-family: monospace;\">$ find &#126; -group NameOfGroup -type f\n        -print0 | xargs -0 ls -l</span><br/>\n      <br/>\n      This will display all files in your home directory that are owned by the\n      specified group.</p>\n<h3>4.6. Find All Files Not Owned by a Specific Group</h3>\n<p><span style=\"font-family: monospace;\">$ find . -not -group NameOfGroup\n        -type f -print0 | xargs -0 ls -l</span><br/>\n      <br/>\n      This will display all files in the current working directory that are not\n      owned by the specified group.</p>\n<h2>5. Further Resources</h2>\n<p>For detailed documentation on the commands used in this guide, see the\n      man pages for the following commands</p>\n<ul>\n<li><a href=\"http://linux.die.net/man/1/ls\">ls</a></li>\n<li><a href=\"http://linux.die.net/man/1/chmod\">chmod</a></li>\n<li><a href=\"http://linux.die.net/man/1/chgrp\">chgrp</a></li>\n<li><a href=\"http://linux.die.net/man/1/find\">find</a></li>\n<li><a href=\"http://linux.die.net/man/1/xargs\">xargs</a></li>\n</ul>\n<p>For other resources on the commands used in this guide (and UNIX file\n      system permissions in general):</p>\n<ul>\n<li><a href=\"http://en.wikipedia.org/wiki/File_system_permissions\">Wikipedia\n          &#8212; File system permissions</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Chmod\">Wikipedia &#8212; chmod</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Chgrp\">Wikipedia &#8212; chgrp</a></li>\n<li><a href=\"http://www.ibm.com/developerworks/linux/library/l-lpic1-v3-104-5/\">IBM\n          &#8212; Learn Linux, 101: Manage file permissions and ownership</a></li>\n<li><a href=\"http://tldp.org/LDP/intro-linux/html/sect_03_04.html\">TLDP &#8212;\n          3.4.1. Access rights: Linux's first line of defense</a></li>\n</ul>\n\n\n</div>\n</blockquote>\n</div>\n<div id=\"sidebar\"></div>\n<div id=\"footer\"><a href=\"http://www.universityofcalifornia.edu/copyright/\">UC copyright</a> | <a href=\"http://www.uci.edu/cgi-bin/phonebook\">UCI directory</a> | <a href=\"http://intranet.ics.uci.edu/\">Intranet</a> | <a href=\"../../computerscience/sitemap.php\">Site Map</a> | <a href=\"mailto: i%63%73%77%65%62m%61s%74%65r@%69c%73%2e%75c%69%2eedu\">icswebmaster@ics.uci.edu</a> | <a href=\"http://www.youtube.com/UCIBrenICS\"><img alt=\"link::youtube page\" border=\"0\" height=\"15\" src=\"http://www.ics.uci.edu/bin/img/graphics/iconyoutube.gif\" width=\"40\"/></a> &#160; <a href=\"http://www.ics.uci.edu/facebook\"><img alt=\"link::facebook page\" border=\"0\" height=\"14\" src=\"http://www.ics.uci.edu/bin/img/graphics/iconfacebook.gif\" width=\"14\"/></a> | Updated: November 19 2013</div>\n</div>\n<script type=\"text/javascript\">\nvar gaJsHost = ((\"https:\" == document.location.protocol) ? \"https://ssl.\" : \"http://www.\");\ndocument.write(unescape(\"%3Cscript src='\" + gaJsHost + \"google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E\"));\n</script>\n<script type=\"text/javascript\">\nvar pageTracker = _gat._getTracker(\"UA-605898-1\");\npageTracker._trackPageview();\n</script>\n</body>\n</html>", "id": 4427.0}