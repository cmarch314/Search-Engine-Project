{"text": "Navigation Up Table of Contents Bibliography Index Title Page advanced CGAL partition is valid 2 Definition Function that determines if a given set of polygons represents a valid partition for a given sequence of points that define a simple counterclockwise oriented polygon A valid partition is one in which the polygons are nonoverlapping and the union of the polygons is the same as the original polygon include CGAL partition is valid 2 h template class InputIterator class ForwardIterator class Traits bool partition is valid 2 InputIterator point first InputIterator point beyond ForwardIterator poly first ForwardIterator poly beyond Traits traits Default traits returns true iff the polygons in the range poly first poly beyond define a valid partition of the polygon defined by the points in the range point first point beyond and false otherwise Each polygon must also satisfy the property tested by Traits Is valid Precondition Points in the range point first point beyond define a simple counterclockwise oriented polygon Requirements Traits is a model of the concept PartitionIsValidTraits 2 and the concept defining the requirements for the validity test implemented by Traits Is valid InputIterator value type should be Traits Point 2 which should also be the type of the points stored in an object of type Traits Polygon 2 ForwardIterator value type should be Traits Polygon 2 The default traits class Default traits is Partition traits 2 with the representation type determined by InputIterator value type See Also CGAL approx convex partition 2 CGAL greene approx convex partition 2 CGAL is y monotone 2 CGAL optimal convex partition 2 CGAL Partition is valid traits 2 Traits PolygonIsValid CGAL y monotone partition 2 CGAL is convex 2 Implementation This function requires O n logn e loge i 1p mi where n is the total number of vertices of the p partition polygons e is the total number of edges of the partition polygons and mi is the time required by Traits Is valid to test if partition polygon pi is valid Example See the example presented with the function optimal convex partition 2 for an illustration of the use of this function advanced Next y monotone partition 2 Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Partition_2_ref/Function_partition_is_valid_2.html", "title": "partition_is_valid_2", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Partition_2_ref/partition_is_valid_2.tex' -->\n<html> <head>  \n<title>partition_is_valid_2</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_707\"></A>\n\n<A NAME=\"Cross_link_anchor_708\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_729\"></A><BR>\n\n<div class=\"AdvancedBlock\">\n  <table><tr><td valign=\"top\">\n  <img border=\"0\" src=\"cc_advanced_begin1.gif\" alt=\"begin of advanced section\">\n  </td><td valign=\"top\">\n  <em class=\"AdvancedBlockLabel\">&nbsp;advanced&nbsp;</em>\n  </td><td valign=\"top\">\n  <img border=\"0\" src=\"cc_advanced_begin2.gif\" alt=\"begin of advanced section\">\n  </td></tr></table>\n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Function.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_CGAL::partition_is_valid_2\"></A>\n<h2><I>CGAL::partition_is_valid_2</I></h2>\n<P>\n\n<H3>Definition</H3>\n<P>\n\nFunction that determines if a given set of polygons represents\na valid partition for a given sequence of points that \ndefine a simple, counterclockwise-oriented polygon.  A valid partition is one in\nwhich the polygons are nonoverlapping and the union of the polygons is the \nsame as the original polygon.\n   \n     \n     \n<A NAME=\"Index_anchor_730\"></A> \n\n   \n\n   \n     \n     \n     \n<A NAME=\"Index_anchor_731\"></A> \n\n   \n\n   \n     \n     \n     \n<A NAME=\"Index_anchor_732\"></A>\n<P>\n\n<I>#include &lt;<A HREF=\"../../../include/CGAL/partition_is_valid_2.h\">CGAL/partition_is_valid_2.h</A>&gt;</I>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    template&lt;class InputIterator, class ForwardIterator, class Traits&gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_partition_is_valid_2_6InputIterator_point_first+_InputIterator_point_beyond+_ForwardIterator_poly_first+_ForwardIterator_poly_beyond+_const_Traits__traits_=_Default_traits9;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    <A HREF=\"Function_partition_is_valid_2.html#Cross_link_anchor_708\">partition_is_valid_2</A> ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    InputIterator point_first,<BR>\n\nInputIterator point_beyond,<BR>\n\nForwardIterator poly_first,<BR>\n\nForwardIterator poly_beyond,<BR>\n\nTraits traits = Default_traits)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns <I>true</I> iff the polygons in the range [<I>poly_first</I>, \n<I>poly_beyond</I>) define a valid partition of the polygon defined by the \npoints in the range [<I>point_first</I>, <I>point_beyond</I>) and \n<I>false</I> otherwise.  \nEach polygon must also satisfy the property \ntested by <I>Traits::Is_valid()</I>.<BR>\n\n<EM>Precondition: </EM>Points in the range [<I>point_first</I>, <I>point_beyond</I>) define\na simple, counterclockwise-oriented polygon.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Requirements</H3>\n<OL>\n    <LI><I>Traits</I> is a model of the concept \n          <I><A HREF=\"Concept_PartitionIsValidTraits_2.html#Cross_link_anchor_683\">PartitionIsValidTraits_2</A></I>\n<A NAME=\"Index_anchor_733\"></A> \n and the\n          concept defining the requirements for the validity test \n          implemented by <I>Traits::Is_valid()</I>.\n    <LI><I>InputIterator::value_type</I> should be <I>Traits::<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A></I>,\n          which should also be the type of the points stored in an object\n          of type <I>Traits::<A HREF=\"../Polygon_ref/Class_Polygon_2.html#Cross_link_anchor_672\">Polygon_2</A></I>.\n    <LI><I>ForwardIterator::value_type</I> should be \n          <I>Traits::<A HREF=\"../Polygon_ref/Class_Polygon_2.html#Cross_link_anchor_672\">Polygon_2</A></I>.\n</OL>\n<P>\n\nThe default traits class <I>Default_traits</I> is <I><A HREF=\"Class_Partition_traits_2.html#Cross_link_anchor_690\">Partition_traits_2</A></I>,\n     \n     \n     \n<A NAME=\"Index_anchor_734\"></A> \n\n   \n \n   \n\nwith the representation type determined by <I>InputIterator::value_type</I>.\n<P>\n\n<H3>See Also</H3>\n<P>\n\n<I><A HREF=\"Function_approx_convex_partition_2.html#Cross_link_anchor_697\">CGAL::approx_convex_partition_2</A></I><BR>\n\n<I><A HREF=\"Function_greene_approx_convex_partition_2.html#Cross_link_anchor_701\">CGAL::greene_approx_convex_partition_2</A></I><BR>\n\n<I><A HREF=\"Function_is_y_monotone_2.html#Cross_link_anchor_703\">CGAL::is_y_monotone_2</A></I><BR>\n\n<I><A HREF=\"Function_optimal_convex_partition_2.html#Cross_link_anchor_705\">CGAL::optimal_convex_partition_2</A></I><BR>\n\n<I><A HREF=\"Class_Partition_is_valid_traits_2.html#Cross_link_anchor_687\">CGAL::Partition_is_valid_traits_2</A>&lt;Traits, <A HREF=\"FunctionObjectConcept_PolygonIsValid.html#Cross_link_anchor_686\">PolygonIsValid</A>&gt;</I><BR>\n\n<I><A HREF=\"Function_y_monotone_partition_2.html#Cross_link_anchor_709\">CGAL::y_monotone_partition_2</A></I><BR>\n\n<I><A HREF=\"../Polygon_ref/Function_is_convex_2.html#Cross_link_anchor_660\">CGAL::is_convex_2</A></I>\n<P>\n\n<H3>Implementation</H3>\n<P>\n\nThis function requires <MATH><I>O(n </I></MATH>log<MATH><I>n + e </I></MATH>log<MATH><I>e + <IMG BORDER=0 WIDTH=10 HEIGHT=12 ALIGN=BOTTOM SRC=\"cc_Sigma.gif\"><SUB>i=1</SUB><SUP>p</SUP> m<SUB>i</SUB>)</I></MATH> where <MATH><I>n</I></MATH> \nis the total number of vertices of the <MATH><I>p</I></MATH> partition polygons, <MATH><I>e</I></MATH> is the \ntotal number of edges of the partition polygons and <MATH><I>m<SUB>i</SUB></I></MATH> is the time required \nby <I>Traits::Is_valid()</I> to test if partition polygon <MATH><I>p<SUB>i</SUB></I></MATH> is valid.\n<P>\n\n<H3>Example</H3>\n<P>\n\nSee the example presented with the function <I><A HREF=\"Function_optimal_convex_partition_2.html#Cross_link_anchor_706\">optimal_convex_partition_2</A></I>\nfor an illustration of the use of this function.\n<P>\n\n<table><tr><td valign=\"bottom\">\n  <img border=\"0\" src=\"cc_advanced_end1.gif\" alt=\"end of advanced section\">\n  </td><td valign=\"bottom\">\n  <em class=\"AdvancedBlockLabel\">&nbsp;advanced&nbsp;</em>\n  </td><td valign=\"bottom\">\n  <img border=\"0\" src=\"cc_advanced_end2.gif\" alt=\"end of advanced section\">\n  </td></tr></table></div>\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Function_y_monotone_partition_2.html\"><I>y_monotone_partition_2</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_10!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 39326.0}