{"text": "OEChem Python Theory Manual Version 1 3 1 Previous 3 1 Creating Molecule Objects Up 3 Manipulating Molecules Next 3 3 Creating a Molecule 3 2 Reusing Molecules OEChem also provides a mechanism for reusing a molecule For example when processing multiple sequential molecules in a database or input file instead of requiring a new molecule to be allocated and destroyed for each iteration OEMolBase s provides a Clear method to reset a molecule to its initial empty state The following example demonstrates calling the Clear method of our molecule Note that the Clear in the following example is not required as the molecule is already initialized empty by the creation function The code does demonstrate that the OEMol does behave as an OEMolBase allowing it to be used with any of OEChem s OEMolBase methods or functions from openeye oechem import mol OEMol mol Clear OEChem Python Theory Manual Version 1 3 1 Previous 3 1 Creating Molecule Objects Up 3 Manipulating Molecules Next 3 3 Creating a Molecule Documentation released on July 3 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/oechem/pyprog/node13.html", "title": "3.2 reusing molecules", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<html>\n<head>\n<title>3.2 Reusing Molecules</title>\n<META NAME=\"description\" CONTENT=\"3.2 Reusing Molecules\">\n<META NAME=\"keywords\" CONTENT=\"pyprog\">\n<META NAME=\"resource-type\" CONTENT=\"document\">\n<META NAME=\"distribution\" CONTENT=\"global\">\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n<link rel=\"STYLESHEET\" href=\"pyprog.css\">\n<link rel=\"first\" href=\"pyprog.html\">\n<link rel=\"contents\" href=\"contents.html\" title=\"Contents\">\n\n<LINK REL=\"next\" HREF=\"node14.html\">\n<LINK REL=\"previous\" HREF=\"node12.html\">\n<LINK REL=\"up\" HREF=\"node11.html\">\n<LINK REL=\"next\" HREF=\"node14.html\">\n</head>\n<body>\n<DIV CLASS=\"navigation\">\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node12.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node11.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node14.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - Python Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"genindex.html\"><img src=\"../icons/index.gif\"\n  border=\"0\" alt=\"Index\"></A></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node12.html\">3.1 Creating Molecule Objects</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node11.html\">3. Manipulating Molecules</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node14.html\">3.3 Creating a Molecule</A>\n<br><hr>\n</DIV>\n<!--End of Navigation Panel-->\n\n<H1><A NAME=\"SECTION005200000000000000000\">\n3.2 Reusing Molecules</A>\n</H1>\n\n<P>\nOEChem also provides a mechanism for reusing a molecule. For\nexample, when processing multiple, sequential molecules in a database\nor input file, instead of requiring a new molecule to be allocated and\ndestroyed for each iteration, OEMolBase's provides a Clear method to\nreset a molecule to its initial (empty) state.\n\n<P>\nThe following example demonstrates calling the Clear method of our\nmolecule. Note that the Clear in the following example is not\nrequired as the molecule is already initialized (empty) by the\ncreation function. The code does demonstrate that the OEMol does\nbehave as an OEMolBase allowing it to be used with any of OEChem's\nOEMolBase methods or functions.\n\n<P>\n<dl><dd><pre class=\"verbatim\">from openeye.oechem import *\nmol = OEMol()\nmol.Clear()\n</pre></dl>\n\n<P>\n\n<DIV CLASS=\"navigation\">\n<p><hr>\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node12.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node11.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node14.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - Python Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"genindex.html\"><img src=\"../icons/index.gif\"\n  border=\"0\" alt=\"Index\"></A></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node12.html\">3.1 Creating Molecule Objects</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node11.html\">3. Manipulating Molecules</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node14.html\">3.3 Creating a Molecule</A>\n<hr>\n<span class=\"release-info\">Documentation released on July 30, 2004.</span>\n</DIV>\n<!--End of Navigation Panel-->\n\n</BODY>\n</HTML>\n", "id": 37548.0}