{"text": "View Javadoc 1 package swirl workspace viz 2 3 import java awt Color 4 import java io File 5 import java net URL 6 import java util HashMap 7 import java util Vector 8 9 import junit framework TestCase 1 11 import org apache commons logging Log 12 import org apache commons logging LogFactory 13 14 import swirl workspace Peer 15 import swirl workspace PeerManager 16 import swirl workspace viz pie FileElement 17 18 19 author bpillet 2 21 public class ModelTest extends TestCase 22 private Log log LogFactory getLog this getClass 23 SwirlModel model 24 String localUser PeerManager getLocalUserID 25 26 public ModelTest Model model String testName 27 super testName 28 this model SwirlModel model 29 log debug localUser localUser 3 31 32 public void testGetPeerNumber 33 34 int num model getPeerNumber 35 log debug num num 36 assertEquals Please test this with 2 peers 2 num 37 38 39 String goodFiles new String txt 1 txt 2 txt 3 txt 4 txt 4 1 svg 2 svg 3 svg 4 svg 41 42 public void testGetFiles1 43 44 FileElement files model getFiles 45 46 make sure txt 1 txt 2 txt 3 txt and 4 txt are in files 47 and 1 svg 2 svg 3 svg 4 svg are in files 48 for int i i goodFiles length i 49 5 boolean hasFile contains files goodFiles i 51 assertTrue The files that came back don t contain goodFiles i hasFile 52 53 54 55 private boolean contains FileElement files String file 56 57 log debug contains files file 58 boolean hasFile false 59 for int j j files length j 6 61 log debug files j getName file 62 files j getName equals file 63 if files j getName equals file 64 hasFile true 65 66 return hasFile 67 68 69 public void testGetFiles2 7 71 log debug testGetFiles2 72 Peer peers model getPeers 73 for int i i peers length i 74 75 FileElement files model getFiles peers i getUniqueID 76 log debug peers uniqueId peers i getUniqueID nlocalUser localUser 77 for int j j 5 j 78 79 if peers i getUniqueID equals localUser 8 assertTrue The files that came back from peers i getUserName at peers i getUniqueID 81 doesn t contain j txt contains files j txt 82 else if j 83 assertTrue The files that came back from peers i getUserName at peers i getUniqueID 84 doesn t contain j svg contains files j svg 85 86 87 88 89 public void testImportAndDelete 9 91 URL u Thread currentThread getContextClassLoader getResource log4j properties 92 log debug u u nu 1 u getFile nu 2 u getPath 93 File f new File u getFile substring 1 94 95 log debug f f 96 assertTrue file doesn t exist f exists 97 Vector v new Vector 98 v add f 99 model importFiles v 1 1 1 FileElement files model getFiles localUser 1 2 assertTrue didn t import file to workspace f getName contains files f getName 1 3 1 4 FileElement file null 1 5 for int i i files length i 1 6 1 7 if files i getName equals f getName 1 8 file files i 1 9 11 log debug file file 111 112 model delete file 113 114 files model getFiles localUser 115 assertTrue didn t delete file from workspace f getName 116 contains files f getName 117 118 119 public void testGetFiles3 12 121 122 for int j j 5 j 123 124 log debug testGetFiles3 j j 125 FileElement file model getFiles localUser slide j txt 126 for int i i file length i 127 128 log debug testGetFiles3 file i file i getName 129 13 assertEquals file should be length 1 for j txt 1 file length 131 assertEquals j txt file getName 132 assertEquals slide file getPath 133 assertEquals file getOwnerKey localUser 134 assertFalse file isDir 135 136 137 for int j 1 j 5 j 138 139 log debug testGetFiles3 j j 14 FileElement file model getFiles 128 195 3 1 5 9876 slide j svg 141 for int i i file length i 142 143 log debug testGetFiles3 file i file i getName 144 145 assertEquals file should be length 1 for j svg 1 file length 146 assertEquals j svg file getName 147 assertEquals slide file getPath 148 assertEquals file getOwnerKey 128 195 3 1 5 9876 149 assertFalse file isDir 15 151 152 153 public void testGetPeer 154 155 Peer mePeer model getPeer localUser 156 assertNotNull mePeer 157 assertEquals mePeer getUniqueID localUser 158 159 16 public void testGetPeers 161 162 Peer peers model getPeers 163 assertEquals There must be only 2 peers online for accurate testing 2 peers length 164 165 boolean iExist false 166 for int i i peers length i 167 168 if peers i getUniqueID equals localUser 169 iExist true 17 171 172 assertTrue I don t exist iExist 173 174 175 public void testGetUserColor 176 177 Color c model getUserColor localUser 178 assertEquals Color BLUE c 179 18 181 public void testProcessMessage1 182 183 PUT 184 HashMap msg new HashMap 185 msg put WEBDAV COMMAND PUT 186 msg put WEBDAV PATH slide web xml 187 msg put WEBDAV CLIENT PeerManager getLocalAddress getHostAddress 188 189 model processMessage msg 19 191 FileElement files model getFiles localUser 192 log debug processMessage1 193 assertTrue told model that web xml was added but it isn t in files list 194 contains files web xml 195 196 197 public void testProcessMessage2 198 199 PROPPATCH 2 HashMap msg new HashMap 2 1 msg put WEBDAV COMMAND PROPPATCH 2 2 msg put WEBDAV PATH slide 1 txt 2 3 msg put WEBDAV CLIENT PeerManager getLocalAddress getHostAddress 2 4 2 5 model processMessage msg 2 6 2 7 2 8 public void testResetLocalSharingDegree 2 9 21 model resetLocalSharingDegree 211 FileElement files model getFiles localUser 212 assertTrue files shouldn t be empty files length 213 for int i i files length i 214 215 assertEquals files i getName should have a sharing level of 216 files i getNumberDegree 217 218 219 22 public void testSetSharingDegree1 221 222 log debug testSetSharingDegree1 223 224 for int i i SharingLevel SHARING LEVEL i 225 226 FileElement file model getFiles localUser slide i txt 227 model setSharingDegree file new SharingLevel i 228 FileElement newFile model getFiles localUser slide i txt 229 assertEquals newFile getName should have a sharing level of i i 23 newFile getNumberDegree 231 232 233 234 public void testSetSharingDegree2 235 236 for int i i SharingLevel SHARING LEVEL i 237 238 model setSharingDegree slide i txt new SharingLevel i 239 FileElement newFile model getFiles localUser slide i txt 24 assertEquals newFile getName should have a sharing level of i i 241 newFile getNumberDegree 242 243 244 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.20/xref/swirl/workspace/viz/ModelTest.html", "title": "modeltest xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>ModelTest xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../../stylesheet.css\" />\n</head>\n<body>\n<div id=\"overview\"><a href=\"../../../../apidocs/swirl/workspace/viz/ModelTest.html\">View Javadoc</a></div><pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <strong>package</strong> <a href=\"../../../swirl/workspace/viz/package-summary.html\">swirl.workspace.viz</a>;\n<a name=\"2\" href=\"#2\">2</a>   \n<a name=\"3\" href=\"#3\">3</a>   <strong>import</strong> java.awt.Color;\n<a name=\"4\" href=\"#4\">4</a>   <strong>import</strong> java.io.File;\n<a name=\"5\" href=\"#5\">5</a>   <strong>import</strong> java.net.URL;\n<a name=\"6\" href=\"#6\">6</a>   <strong>import</strong> java.util.HashMap;\n<a name=\"7\" href=\"#7\">7</a>   <strong>import</strong> java.util.Vector;\n<a name=\"8\" href=\"#8\">8</a>   \n<a name=\"9\" href=\"#9\">9</a>   <strong>import</strong> junit.framework.TestCase;\n<a name=\"10\" href=\"#10\">10</a>  \n<a name=\"11\" href=\"#11\">11</a>  <strong>import</strong> org.apache.commons.logging.Log;\n<a name=\"12\" href=\"#12\">12</a>  <strong>import</strong> org.apache.commons.logging.LogFactory;\n<a name=\"13\" href=\"#13\">13</a>  \n<a name=\"14\" href=\"#14\">14</a>  <strong>import</strong> swirl.workspace.Peer;\n<a name=\"15\" href=\"#15\">15</a>  <strong>import</strong> swirl.workspace.PeerManager;\n<a name=\"16\" href=\"#16\">16</a>  <strong>import</strong> swirl.workspace.viz.pie.FileElement;\n<a name=\"17\" href=\"#17\">17</a>  \n<a name=\"18\" href=\"#18\">18</a>  <em>/**<em>*</em></em>\n<a name=\"19\" href=\"#19\">19</a>  <em> * @author bpillet</em>\n<a name=\"20\" href=\"#20\">20</a>  <em> */</em>\n<a name=\"21\" href=\"#21\">21</a>  <strong>public</strong> <strong>class</strong> <a href=\"../../../swirl/workspace/viz/ModelTest.html\">ModelTest</a> <strong>extends</strong> TestCase {\n<a name=\"22\" href=\"#22\">22</a>      <strong>private</strong> Log log = LogFactory.getLog(<strong>this</strong>.getClass());\n<a name=\"23\" href=\"#23\">23</a>      <a href=\"../../../swirl/workspace/viz/SwirlModel.html\">SwirlModel</a> model;\n<a name=\"24\" href=\"#24\">24</a>      String localUser = PeerManager.getLocalUserID();\n<a name=\"25\" href=\"#25\">25</a>  \n<a name=\"26\" href=\"#26\">26</a>  \t<strong>public</strong> <a href=\"../../../swirl/workspace/viz/ModelTest.html\">ModelTest</a>(<a href=\"../../../swirl/workspace/viz/Model.html\">Model</a> model, String testName) {\n<a name=\"27\" href=\"#27\">27</a>  \t\t<strong>super</strong>(testName);\n<a name=\"28\" href=\"#28\">28</a>  \t\t<strong>this</strong>.model = (SwirlModel)model;\n<a name=\"29\" href=\"#29\">29</a>  \t\tlog.debug(<span class=\"string\">\"localUser: \"</span> + localUser);\n<a name=\"30\" href=\"#30\">30</a>  \t}\n<a name=\"31\" href=\"#31\">31</a>  \n<a name=\"32\" href=\"#32\">32</a>  \t<strong>public</strong> <strong>void</strong> testGetPeerNumber()\n<a name=\"33\" href=\"#33\">33</a>  \t{\n<a name=\"34\" href=\"#34\">34</a>  \t\t<strong>int</strong> num = model.getPeerNumber();\n<a name=\"35\" href=\"#35\">35</a>  \t\tlog.debug(<span class=\"string\">\"num: \"</span> + num);\n<a name=\"36\" href=\"#36\">36</a>  \t\tassertEquals(<span class=\"string\">\"Please test this with 2 peers\"</span>, 2, num);\n<a name=\"37\" href=\"#37\">37</a>  \t}\n<a name=\"38\" href=\"#38\">38</a>  \n<a name=\"39\" href=\"#39\">39</a>  \tString[] goodFiles = <strong>new</strong> String[]{<span class=\"string\">\"0.txt\"</span>, <span class=\"string\">\"1.txt\"</span>, <span class=\"string\">\"2.txt\"</span>, <span class=\"string\">\"3.txt\"</span>, <span class=\"string\">\"4.txt\"</span>,\n<a name=\"40\" href=\"#40\">40</a>  \t\t\t<span class=\"string\">\"1.svg\"</span>, <span class=\"string\">\"2.svg\"</span>, <span class=\"string\">\"3.svg\"</span>, <span class=\"string\">\"4.svg\"</span>};\n<a name=\"41\" href=\"#41\">41</a>  \t\n<a name=\"42\" href=\"#42\">42</a>  \t<strong>public</strong> <strong>void</strong> testGetFiles1()\n<a name=\"43\" href=\"#43\">43</a>  \t{\n<a name=\"44\" href=\"#44\">44</a>  \t\tFileElement[] files = model.getFiles();\n<a name=\"45\" href=\"#45\">45</a>  \t\t\n<a name=\"46\" href=\"#46\">46</a>  \t\t<em class=\"comment\">// make sure 0.txt, 1.txt, 2.txt, 3.txt, and 4.txt are in files</em>\n<a name=\"47\" href=\"#47\">47</a>  \t\t<em class=\"comment\">// and 1.svg, 2.svg, 3.svg, 4.svg are in files</em>\n<a name=\"48\" href=\"#48\">48</a>  \t\t<strong>for</strong>(<strong>int</strong> i = 0; i &lt; goodFiles.length; ++i)\n<a name=\"49\" href=\"#49\">49</a>  \t\t{\n<a name=\"50\" href=\"#50\">50</a>  \t\t\t<strong>boolean</strong> hasFile = contains(files, goodFiles[i]);\n<a name=\"51\" href=\"#51\">51</a>  \t\t\tassertTrue(<span class=\"string\">\"The files that came back don't contain \"</span> + goodFiles[i], hasFile);\n<a name=\"52\" href=\"#52\">52</a>  \t\t}\n<a name=\"53\" href=\"#53\">53</a>  \t}\n<a name=\"54\" href=\"#54\">54</a>  \t\n<a name=\"55\" href=\"#55\">55</a>  \t<strong>private</strong> <strong>boolean</strong> contains(<a href=\"../../../swirl/workspace/viz/pie/FileElement.html\">FileElement</a>[] files, String file)\n<a name=\"56\" href=\"#56\">56</a>  \t{\n<a name=\"57\" href=\"#57\">57</a>  \t\tlog.debug(<span class=\"string\">\"contains(\"</span> + files + <span class=\"string\">\", \"</span> + file + <span class=\"string\">\")\"</span>);\n<a name=\"58\" href=\"#58\">58</a>  \t\t<strong>boolean</strong> hasFile = false;\n<a name=\"59\" href=\"#59\">59</a>  \t\t<strong>for</strong>(<strong>int</strong> j = 0; j &lt; files.length; ++j)\n<a name=\"60\" href=\"#60\">60</a>  \t\t{\n<a name=\"61\" href=\"#61\">61</a>  \t\t\tlog.debug(files[j].getName() + <span class=\"string\">\" ?= \"</span> + file + <span class=\"string\">\": \"</span> +\n<a name=\"62\" href=\"#62\">62</a>  \t\t\t\t\t(files[j].getName().equals(file)));\n<a name=\"63\" href=\"#63\">63</a>  \t\t\t<strong>if</strong>(files[j].getName().equals(file))\n<a name=\"64\" href=\"#64\">64</a>  \t\t\t\thasFile = <strong>true</strong>;\n<a name=\"65\" href=\"#65\">65</a>  \t\t}\n<a name=\"66\" href=\"#66\">66</a>  \t\t<strong>return</strong> hasFile;\n<a name=\"67\" href=\"#67\">67</a>  \t}\n<a name=\"68\" href=\"#68\">68</a>  \t\n<a name=\"69\" href=\"#69\">69</a>  \t<strong>public</strong> <strong>void</strong> testGetFiles2()\n<a name=\"70\" href=\"#70\">70</a>  \t{\n<a name=\"71\" href=\"#71\">71</a>  \t\tlog.debug(<span class=\"string\">\"testGetFiles2----------------------------------------------\"</span>);\n<a name=\"72\" href=\"#72\">72</a>  \t\tPeer[] peers = model.getPeers();\n<a name=\"73\" href=\"#73\">73</a>  \t\t<strong>for</strong>(<strong>int</strong> i = 0; i &lt; peers.length; ++i)\n<a name=\"74\" href=\"#74\">74</a>  \t\t{\n<a name=\"75\" href=\"#75\">75</a>  \t\t\tFileElement[] files = model.getFiles(peers[i].getUniqueID());\n<a name=\"76\" href=\"#76\">76</a>  \t\t\tlog.debug(<span class=\"string\">\"peers.uniqueId: \"</span> + peers[i].getUniqueID() + <span class=\"string\">\"\\nlocalUser: \"</span> + localUser);\n<a name=\"77\" href=\"#77\">77</a>  \t\t\t<strong>for</strong>(<strong>int</strong> j = 0; j &lt; 5; ++j)\n<a name=\"78\" href=\"#78\">78</a>  \t\t\t{\n<a name=\"79\" href=\"#79\">79</a>  \t\t\t\t<strong>if</strong>(peers[i].getUniqueID().equals(localUser))\n<a name=\"80\" href=\"#80\">80</a>  \t\t\t\t\tassertTrue(<span class=\"string\">\"The files that came back from \"</span> + peers[i].getUserName() + <span class=\"string\">\" at \"</span> + peers[i].getUniqueID() +\n<a name=\"81\" href=\"#81\">81</a>  \t\t\t\t\t\t\t<span class=\"string\">\" doesn't contain \"</span> + j + <span class=\"string\">\".txt\"</span>, contains(files, j + <span class=\"string\">\".txt\"</span>));\n<a name=\"82\" href=\"#82\">82</a>  \t\t\t\t<strong>else</strong> <strong>if</strong>(j > 0)\n<a name=\"83\" href=\"#83\">83</a>  \t\t\t\t\tassertTrue(<span class=\"string\">\"The files that came back from \"</span> + peers[i].getUserName() + <span class=\"string\">\" at \"</span> + peers[i].getUniqueID() +\n<a name=\"84\" href=\"#84\">84</a>  \t\t\t\t\t\t<span class=\"string\">\" doesn't contain \"</span> + j + <span class=\"string\">\".svg\"</span>, contains(files, j + <span class=\"string\">\".svg\"</span>));\n<a name=\"85\" href=\"#85\">85</a>  \t\t\t}\n<a name=\"86\" href=\"#86\">86</a>  \t\t}\n<a name=\"87\" href=\"#87\">87</a>  \t}\n<a name=\"88\" href=\"#88\">88</a>  \n<a name=\"89\" href=\"#89\">89</a>  \t<strong>public</strong> <strong>void</strong> testImportAndDelete()\n<a name=\"90\" href=\"#90\">90</a>  \t{\n<a name=\"91\" href=\"#91\">91</a>  \t\tURL u = Thread.currentThread().getContextClassLoader().getResource(<span class=\"string\">\"log4j.properties\"</span>);\n<a name=\"92\" href=\"#92\">92</a>  \t\tlog.debug(<span class=\"string\">\"u: \"</span> + u + <span class=\"string\">\"\\nu.1: \"</span> + u.getFile() + <span class=\"string\">\"\\nu.2: \"</span> + u.getPath());\n<a name=\"93\" href=\"#93\">93</a>  \t\tFile f = <strong>new</strong> File(u.getFile().substring(1));\n<a name=\"94\" href=\"#94\">94</a>  \t\t\n<a name=\"95\" href=\"#95\">95</a>  \t\tlog.debug(<span class=\"string\">\"f: \"</span> + f);\n<a name=\"96\" href=\"#96\">96</a>  \t\tassertTrue(<span class=\"string\">\"file doesn't exist\"</span>, f.exists());\n<a name=\"97\" href=\"#97\">97</a>  \t\tVector v= <strong>new</strong> Vector();\n<a name=\"98\" href=\"#98\">98</a>  \t\tv.add(f);\n<a name=\"99\" href=\"#99\">99</a>  \t\tmodel.importFiles(v);\n<a name=\"100\" href=\"#100\">100</a> \t\t\n<a name=\"101\" href=\"#101\">101</a> \t\tFileElement[] files = model.getFiles(localUser);\n<a name=\"102\" href=\"#102\">102</a> \t\tassertTrue(<span class=\"string\">\"didn't import file to workspace: \"</span> + f.getName(), contains(files, f.getName()));\n<a name=\"103\" href=\"#103\">103</a> \t\t\n<a name=\"104\" href=\"#104\">104</a> \t\tFileElement file = <strong>null</strong>;\n<a name=\"105\" href=\"#105\">105</a> \t\t<strong>for</strong>(<strong>int</strong> i = 0; i &lt; files.length; ++i)\n<a name=\"106\" href=\"#106\">106</a> \t\t{\n<a name=\"107\" href=\"#107\">107</a> \t\t\t<strong>if</strong>(files[i].getName().equals(f.getName()))\n<a name=\"108\" href=\"#108\">108</a> \t\t\t\tfile = files[i];\n<a name=\"109\" href=\"#109\">109</a> \t\t}\n<a name=\"110\" href=\"#110\">110</a> \t\tlog.debug(<span class=\"string\">\"file: \"</span> + file);\n<a name=\"111\" href=\"#111\">111</a> \t\t\n<a name=\"112\" href=\"#112\">112</a> \t\tmodel.delete(file);\n<a name=\"113\" href=\"#113\">113</a> \n<a name=\"114\" href=\"#114\">114</a> \t\tfiles = model.getFiles(localUser);\n<a name=\"115\" href=\"#115\">115</a> \t\tassertTrue(<span class=\"string\">\"didn't delete file from workspace: \"</span> + f.getName(),\n<a name=\"116\" href=\"#116\">116</a> \t\t\t\t!contains(files, f.getName()));\n<a name=\"117\" href=\"#117\">117</a> \t}\n<a name=\"118\" href=\"#118\">118</a> \t\n<a name=\"119\" href=\"#119\">119</a> \t<strong>public</strong> <strong>void</strong> testGetFiles3()\n<a name=\"120\" href=\"#120\">120</a> \t{\n<a name=\"121\" href=\"#121\">121</a> \t\t\n<a name=\"122\" href=\"#122\">122</a> \t\t<strong>for</strong>(<strong>int</strong> j = 0; j &lt; 5; ++j)\n<a name=\"123\" href=\"#123\">123</a> \t\t{\n<a name=\"124\" href=\"#124\">124</a> \t\t\tlog.debug(<span class=\"string\">\"testGetFiles3 j: \"</span> + j);\n<a name=\"125\" href=\"#125\">125</a> \t\t\tFileElement[] file = model.getFiles(localUser, <span class=\"string\">\"/slide/\"</span> + j + <span class=\"string\">\".txt\"</span>);\n<a name=\"126\" href=\"#126\">126</a> \t\t\t<strong>for</strong>(<strong>int</strong> i = 0; i &lt; file.length; ++i)\n<a name=\"127\" href=\"#127\">127</a> \t\t\t{\n<a name=\"128\" href=\"#128\">128</a> \t\t\t\tlog.debug(<span class=\"string\">\"testGetFiles3 - file[i]: \"</span> + file[i].getName());\n<a name=\"129\" href=\"#129\">129</a> \t\t\t}\n<a name=\"130\" href=\"#130\">130</a> \t\t\tassertEquals(<span class=\"string\">\"file should be length 1 for \"</span> + j + <span class=\"string\">\".txt\"</span>, 1, file.length);\n<a name=\"131\" href=\"#131\">131</a> \t\t\tassertEquals(j + <span class=\"string\">\".txt\"</span>, file[0].getName());\n<a name=\"132\" href=\"#132\">132</a> \t\t\t<em class=\"comment\">//assertEquals(\"/slide\", file[0].getPath());</em>\n<a name=\"133\" href=\"#133\">133</a> \t\t\tassertEquals(file[0].getOwnerKey(), localUser);\n<a name=\"134\" href=\"#134\">134</a> \t\t\tassertFalse(file[0].isDir());\n<a name=\"135\" href=\"#135\">135</a> \t\t}\n<a name=\"136\" href=\"#136\">136</a> \n<a name=\"137\" href=\"#137\">137</a> \t\t<strong>for</strong>(<strong>int</strong> j = 1; j &lt; 5; ++j)\n<a name=\"138\" href=\"#138\">138</a> \t\t{\n<a name=\"139\" href=\"#139\">139</a> \t\t\tlog.debug(<span class=\"string\">\"testGetFiles3 j: \"</span> + j);\n<a name=\"140\" href=\"#140\">140</a> \t\t\tFileElement[] file = model.getFiles(<span class=\"string\">\"128.195.30.105:9876\"</span>, <span class=\"string\">\"/slide/\"</span> + j + <span class=\"string\">\".svg\"</span>);\n<a name=\"141\" href=\"#141\">141</a> \t\t\t<strong>for</strong>(<strong>int</strong> i = 0; i &lt; file.length; ++i)\n<a name=\"142\" href=\"#142\">142</a> \t\t\t{\n<a name=\"143\" href=\"#143\">143</a> \t\t\t\tlog.debug(<span class=\"string\">\"testGetFiles3 - file[i]: \"</span> + file[i].getName());\n<a name=\"144\" href=\"#144\">144</a> \t\t\t}\n<a name=\"145\" href=\"#145\">145</a> \t\t\tassertEquals(<span class=\"string\">\"file should be length 1 for \"</span> + j + <span class=\"string\">\".svg\"</span>, 1, file.length);\n<a name=\"146\" href=\"#146\">146</a> \t\t\tassertEquals(j + <span class=\"string\">\".svg\"</span>, file[0].getName());\n<a name=\"147\" href=\"#147\">147</a> \t\t\t<em class=\"comment\">//assertEquals(\"/slide\", file[0].getPath());</em>\n<a name=\"148\" href=\"#148\">148</a> \t\t\tassertEquals(file[0].getOwnerKey(), <span class=\"string\">\"128.195.30.105:9876\"</span>);\n<a name=\"149\" href=\"#149\">149</a> \t\t\tassertFalse(file[0].isDir());\n<a name=\"150\" href=\"#150\">150</a> \t\t}\n<a name=\"151\" href=\"#151\">151</a> \t}\n<a name=\"152\" href=\"#152\">152</a> \t\n<a name=\"153\" href=\"#153\">153</a> \t<strong>public</strong> <strong>void</strong> testGetPeer()\n<a name=\"154\" href=\"#154\">154</a> \t{\n<a name=\"155\" href=\"#155\">155</a> \t\tPeer mePeer = model.getPeer(localUser);\n<a name=\"156\" href=\"#156\">156</a> \t\tassertNotNull(mePeer);\n<a name=\"157\" href=\"#157\">157</a> \t\tassertEquals(mePeer.getUniqueID(), localUser);\n<a name=\"158\" href=\"#158\">158</a> \t}\n<a name=\"159\" href=\"#159\">159</a> \t\n<a name=\"160\" href=\"#160\">160</a> \t<strong>public</strong> <strong>void</strong> testGetPeers()\n<a name=\"161\" href=\"#161\">161</a> \t{\n<a name=\"162\" href=\"#162\">162</a> \t\tPeer[] peers = model.getPeers();\n<a name=\"163\" href=\"#163\">163</a> \t\tassertEquals(<span class=\"string\">\"There must be only 2 peers online for accurate testing\"</span>, 2, peers.length);\n<a name=\"164\" href=\"#164\">164</a> \t\t\n<a name=\"165\" href=\"#165\">165</a> \t\t<strong>boolean</strong> iExist = false;\n<a name=\"166\" href=\"#166\">166</a> \t\t<strong>for</strong>(<strong>int</strong> i = 0; i &lt; peers.length; ++i)\n<a name=\"167\" href=\"#167\">167</a> \t\t{\n<a name=\"168\" href=\"#168\">168</a> \t\t\t<strong>if</strong>(peers[i].getUniqueID().equals(localUser))\n<a name=\"169\" href=\"#169\">169</a> \t\t\t\tiExist = <strong>true</strong>;\n<a name=\"170\" href=\"#170\">170</a> \t\t}\n<a name=\"171\" href=\"#171\">171</a> \t\t\n<a name=\"172\" href=\"#172\">172</a> \t\tassertTrue(<span class=\"string\">\"I don't exist\"</span>, iExist);\n<a name=\"173\" href=\"#173\">173</a> \t}\n<a name=\"174\" href=\"#174\">174</a> \t\n<a name=\"175\" href=\"#175\">175</a> \t<strong>public</strong> <strong>void</strong> testGetUserColor()\n<a name=\"176\" href=\"#176\">176</a> \t{\n<a name=\"177\" href=\"#177\">177</a> \t\tColor c = model.getUserColor(localUser);\n<a name=\"178\" href=\"#178\">178</a> \t\tassertEquals(Color.BLUE, c);\n<a name=\"179\" href=\"#179\">179</a> \t}\n<a name=\"180\" href=\"#180\">180</a> \t\t\n<a name=\"181\" href=\"#181\">181</a> \t<strong>public</strong> <strong>void</strong> testProcessMessage1()\n<a name=\"182\" href=\"#182\">182</a> \t{\n<a name=\"183\" href=\"#183\">183</a> \t\t<em class=\"comment\">//PUT</em>\n<a name=\"184\" href=\"#184\">184</a> \t\tHashMap msg = <strong>new</strong> HashMap();\n<a name=\"185\" href=\"#185\">185</a>         msg.put(<span class=\"string\">\"WEBDAV_COMMAND\"</span>, <span class=\"string\">\"PUT\"</span>);\n<a name=\"186\" href=\"#186\">186</a>         msg.put(<span class=\"string\">\"WEBDAV_PATH\"</span>, <span class=\"string\">\"/slide/web.xml\"</span>);\n<a name=\"187\" href=\"#187\">187</a>         msg.put(<span class=\"string\">\"WEBDAV_CLIENT\"</span>, PeerManager.getLocalAddress().getHostAddress());\n<a name=\"188\" href=\"#188\">188</a> \n<a name=\"189\" href=\"#189\">189</a>         model.processMessage(msg);\n<a name=\"190\" href=\"#190\">190</a>         \n<a name=\"191\" href=\"#191\">191</a>         <a href=\"../../../swirl/workspace/viz/pie/FileElement.html\">FileElement</a>[] files = model.getFiles(localUser);\n<a name=\"192\" href=\"#192\">192</a>         log.debug(<span class=\"string\">\"processMessage1\"</span>);\n<a name=\"193\" href=\"#193\">193</a> \t\tassertTrue(<span class=\"string\">\"told model that web.xml was added, but it isn't in files list\"</span>,\n<a name=\"194\" href=\"#194\">194</a> \t\t\t\tcontains(files, <span class=\"string\">\"web.xml\"</span>));\n<a name=\"195\" href=\"#195\">195</a> \t}\n<a name=\"196\" href=\"#196\">196</a> \n<a name=\"197\" href=\"#197\">197</a> \t<strong>public</strong> <strong>void</strong> testProcessMessage2()\n<a name=\"198\" href=\"#198\">198</a> \t{\n<a name=\"199\" href=\"#199\">199</a> \t\t<em class=\"comment\">//PROPPATCH</em>\n<a name=\"200\" href=\"#200\">200</a> \t\tHashMap msg = <strong>new</strong> HashMap();\n<a name=\"201\" href=\"#201\">201</a>         msg.put(<span class=\"string\">\"WEBDAV_COMMAND\"</span>, <span class=\"string\">\"PROPPATCH\"</span>);\n<a name=\"202\" href=\"#202\">202</a>         msg.put(<span class=\"string\">\"WEBDAV_PATH\"</span>, <span class=\"string\">\"/slide/1.txt\"</span>);\n<a name=\"203\" href=\"#203\">203</a>         msg.put(<span class=\"string\">\"WEBDAV_CLIENT\"</span>, PeerManager.getLocalAddress().getHostAddress());\n<a name=\"204\" href=\"#204\">204</a> \n<a name=\"205\" href=\"#205\">205</a>         model.processMessage(msg);\n<a name=\"206\" href=\"#206\">206</a> \t}\n<a name=\"207\" href=\"#207\">207</a> \t\n<a name=\"208\" href=\"#208\">208</a> \t<strong>public</strong> <strong>void</strong> testResetLocalSharingDegree()\n<a name=\"209\" href=\"#209\">209</a> \t{\n<a name=\"210\" href=\"#210\">210</a> \t\tmodel.resetLocalSharingDegree();\n<a name=\"211\" href=\"#211\">211</a> \t\tFileElement[] files = model.getFiles(localUser);\n<a name=\"212\" href=\"#212\">212</a> \t\tassertTrue(<span class=\"string\">\"files shouldn't be empty\"</span>, files.length > 0);\n<a name=\"213\" href=\"#213\">213</a> \t\t<strong>for</strong>(<strong>int</strong> i = 0; i &lt; files.length; ++i)\n<a name=\"214\" href=\"#214\">214</a> \t\t{\n<a name=\"215\" href=\"#215\">215</a> \t\t\tassertEquals(files[i].getName() + <span class=\"string\">\" should have a sharing level of 0\"</span>, 0,\n<a name=\"216\" href=\"#216\">216</a> \t\t\t\t\tfiles[i].getNumberDegree());\n<a name=\"217\" href=\"#217\">217</a> \t\t}\n<a name=\"218\" href=\"#218\">218</a> \t}\n<a name=\"219\" href=\"#219\">219</a> \t\n<a name=\"220\" href=\"#220\">220</a> \t<strong>public</strong> <strong>void</strong> testSetSharingDegree1()\n<a name=\"221\" href=\"#221\">221</a> \t{\n<a name=\"222\" href=\"#222\">222</a> \t\tlog.debug(<span class=\"string\">\"testSetSharingDegree1\"</span>);\n<a name=\"223\" href=\"#223\">223</a> \t\t\n<a name=\"224\" href=\"#224\">224</a> \t\t<strong>for</strong>(<strong>int</strong> i = 0; i &lt;= SharingLevel.SHARING_LEVEL; ++i)\n<a name=\"225\" href=\"#225\">225</a> \t\t{\n<a name=\"226\" href=\"#226\">226</a> \t\t\tFileElement[] file = model.getFiles(localUser, <span class=\"string\">\"/slide/\"</span> + i + <span class=\"string\">\".txt\"</span>);\n<a name=\"227\" href=\"#227\">227</a> \t\t\tmodel.setSharingDegree(file[0], <strong>new</strong> <a href=\"../../../swirl/workspace/viz/SharingLevel.html\">SharingLevel</a>(i));\n<a name=\"228\" href=\"#228\">228</a> \t\t\tFileElement[] newFile = model.getFiles(localUser, <span class=\"string\">\"/slide/\"</span> + i + <span class=\"string\">\".txt\"</span>);\n<a name=\"229\" href=\"#229\">229</a> \t\t\tassertEquals(newFile[0].getName() + <span class=\"string\">\" should have a sharing level of \"</span> + i, i,\n<a name=\"230\" href=\"#230\">230</a> \t\t\t\t\tnewFile[0].getNumberDegree());\n<a name=\"231\" href=\"#231\">231</a> \t\t}\n<a name=\"232\" href=\"#232\">232</a> \t}\n<a name=\"233\" href=\"#233\">233</a> \t\n<a name=\"234\" href=\"#234\">234</a> \t<strong>public</strong> <strong>void</strong> testSetSharingDegree2()\n<a name=\"235\" href=\"#235\">235</a> \t{\n<a name=\"236\" href=\"#236\">236</a> \t\t<strong>for</strong>(<strong>int</strong> i = 0; i &lt;= SharingLevel.SHARING_LEVEL; ++i)\n<a name=\"237\" href=\"#237\">237</a> \t\t{\n<a name=\"238\" href=\"#238\">238</a> \t\t\tmodel.setSharingDegree(<span class=\"string\">\"/slide/\"</span> + i + <span class=\"string\">\".txt\"</span>, <strong>new</strong> <a href=\"../../../swirl/workspace/viz/SharingLevel.html\">SharingLevel</a>(i));\n<a name=\"239\" href=\"#239\">239</a> \t\t\tFileElement[] newFile = model.getFiles(localUser, <span class=\"string\">\"/slide/\"</span> + i + <span class=\"string\">\".txt\"</span>);\n<a name=\"240\" href=\"#240\">240</a> \t\t\tassertEquals(newFile[0].getName() + <span class=\"string\">\" should have a sharing level of \"</span> + i, i,\n<a name=\"241\" href=\"#241\">241</a> \t\t\t\t\tnewFile[0].getNumberDegree());\n<a name=\"242\" href=\"#242\">242</a> \t\t}\n<a name=\"243\" href=\"#243\">243</a> \t}\n<a name=\"244\" href=\"#244\">244</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 33023.0}