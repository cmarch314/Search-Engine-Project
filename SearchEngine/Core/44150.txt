{"text": "Search LoginPreferencesHelp GuideAbout Trac WikiTimelineRoadmapBrowse SourceView TicketsSearch Context Navigation BlameRevision Log source nomatic tags NomaticIM 5 buddy bots src twisted protocols socks py View diff against View revision Visit trunk Last change on this file was 712 checked in by cbaker 7 years ago First draft of nomatic buddy bots oscar bot is functional if you give it good authentication credentials jabber bot is just an example from the web File size 5 3 KB Line 1 Copyright c 2 1 2 4 Twisted Matrix Laboratories 2 See LICENSE for details 345 6Implementation of the SOCKSv4 protocol 7 89 twisted imports1 from twisted internet import reactor protocol defer11from twisted python import log1213 python imports14import struct15import string16import socket17import time18192 class SOCKSv4Outgoing protocol Protocol 21 22 def init self socks 23 self socks socks2425 def connectionMade self 26 peer self transport getPeer 27 self socks makeReply 9 port peer port ip peer host 28 self socks otherConn self293 def connectionLost self reason 31 self socks transport loseConnection 3233 def dataReceived self data 34 self socks write data 3536 def write self data 37 self socks log self data 38 self transport write data 394 41class SOCKSv4Incoming protocol Protocol 42 43 def init self socks 44 self socks socks45 self socks otherConn self46 47 def connectionLost self reason 48 self socks transport loseConnection 49 5 def dataReceived self data 51 self socks write data 52 53 def write self data 54 self socks log self data 55 self transport write data 565758class SOCKSv4 protocol Protocol 59 6 def init self logging None 61 self logging logging62 63 def connectionMade self 64 self buf 65 self otherConn None6667 def dataReceived self data 68 if self otherConn 69 self otherConn write data 7 return71 self buf self buf data72 if in self buf 8 73 head self buf self buf 8 self buf 8 74 try 75 version code port struct unpack BBH head 4 76 except struct error 77 raise RuntimeError struct error with head s and buf s repr head repr self buf 78 user self buf string split self buf 1 79 if head 4 7 domain is after8 server self buf string split self buf 1 81 server gethostbyname server 82 else 83 server socket inet ntoa head 4 8 84 assert version 4 Bad version code s version85 if not self authorize code server port user 86 self makeReply 91 87 return88 if code 1 CONNECT89 d self connectClass server port SOCKSv4Outgoing self 9 d addErrback lambda result self self self makeReply 91 91 elif code 2 BIND92 ip socket gethostbyname server 93 d self listenClass SOCKSv4IncomingFactory self ip 94 d addCallback lambda h p self self self makeReply 9 p h 95 else 96 raise RuntimeError Bad Connect Code s code97 assert self buf hmm still stuff in buffer s repr self buf 9899 def connectionLost self reason 1 if self otherConn 1 1 self otherConn transport loseConnection 1 21 3 def authorize self code server port user 1 4 log msg code s connection to s s user s authorized code server port user 1 5 return 11 61 7 def connectClass self host port klass args 1 8 return protocol ClientCreator reactor klass args connectTCP host port 1 911 def listenClass self port klass args 111 serv reactor listenTCP port klass args 112 return defer succeed serv getHost 1 113114 def makeReply self reply version port ip 115 self transport write struct pack BBH version reply port socket inet aton ip 116 if reply 9 self transport loseConnection 117118 def write self data 119 self log self data 12 self transport write data 121122 def log self proto data 123 if not self logging return124 peer self transport getPeer 125 their peer self otherConn transport getPeer 126 f open self logging a 127 f write s t s d s s d n time ctime 128 peer host peer port 129 proto self and or 13 their peer host their peer port 131 while data 132 p data data 16 data 16 133 f write string join map lambda x 2X ord x p 134 f write 16 len p 3 135 for c in p 136 if len repr c 3 f write 137 else f write c 138 f write n 139 f write n 14 f close 141142143class SOCKSv4Factory protocol Factory 144 A factory for a SOCKSv4 proxy 145 146 Constructor accepts one argument a log file name 147 148 149 def init self log 15 self logging log151 152 def buildProtocol self addr 153 return SOCKSv4 self logging 154155156class SOCKSv4IncomingFactory protocol Factory 157 A utility class for building protocols for incoming connections 158 159 def init self socks ip 16 self socks socks161 self ip ip162 163 def buildProtocol self addr 164 if addr self ip 165 self ip 166 self socks makeReply 9 167 return SOCKSv4Incoming self socks 168 elif self ip 169 return None17 else 171 self socks makeReply 91 172 self ip 173 return None Note See TracBrowser for help on using the repository browser Download in other formats Plain Text Original Format Powered by Trac 1 1 By Edgewall Software All content copyright 2 7 2 8 by LUCI http luci ics uci edu ", "_id": "http://djp3-pc2.ics.uci.edu/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/socks.py", "title": "\n      socks.py in nomatic/tags/nomaticim-0.0.5/buddy_bots/src/twisted/protocols\n     \u2013 nomatic*im\n    ", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n  \n\n\n  <head>\n\t\t<title>\n      socks.py in nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols\n     \u2013 Nomatic*IM\n    </title><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><link rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search\" /><link rel=\"help\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/socks.py?format=txt\" type=\"text/plain\" title=\"Plain Text\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/socks.py\" type=\"application/x-python; charset=iso-8859-15\" title=\"Original Format\" /><link rel=\"start\" href=\"/LUCICodeRepository/nomaticIM/wiki\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/code.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/pygments/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/browser.css\" type=\"text/css\" /><link rel=\"shortcut icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link rel=\"icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link type=\"application/opensearchdescription+xml\" rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search/opensearch\" title=\"Search Nomatic*IM\" /><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/jquery.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/babel.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/messages/en_US.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/trac.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/search.js\"></script><script type=\"text/javascript\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/folding.js\"></script><script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\".trac-toggledeleted\").show().click(function() {\n                  $(this).siblings().find(\".trac-deleted\").toggle();\n                  return false;\n        }).click();\n        $(\"#jumploc input\").hide();\n        $(\"#jumploc select\").change(function () {\n          this.parentNode.parentNode.submit();\n        });\n          $('#preview table.code').enableCollapsibleColumns($('#preview table.code thead th.content'));\n      });\n    </script>\n\t</head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://luci.ics.uci.edu/#code\"><img src=\"http://luci.ics.uci.edu/blog/archives/LUCIhorzTight.jpg\" alt=\"LUCI Code Repository\" /></a>\n      </div>\n      <form id=\"search\" action=\"/LUCICodeRepository/nomaticIM/search\" method=\"get\">\n        <div>\n          <label for=\"proj-search\">Search:</label>\n          <input type=\"text\" id=\"proj-search\" name=\"q\" size=\"18\" value=\"\" />\n          <input type=\"submit\" value=\"Search\" />\n        </div>\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/login\">Login</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/prefs\">Preferences</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\">Help/Guide</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/wiki\">Wiki</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/timeline\">Timeline</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/roadmap\">Roadmap</a></li><li class=\"active\"><a href=\"/LUCICodeRepository/nomaticIM/browser\">Browse Source</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/report\">View Tickets</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/search\">Search</a></li>\n    </ul>\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/buddy_bots/twisted/protocols/socks.py?annotate=blame\" title=\"Annotate each line with the last changed revision (this can be time consuming...)\">Blame</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/log/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/socks.py\">Revision Log</a></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"browser\">\n        <h1>\n          \n<a class=\"pathentry first\" href=\"/LUCICodeRepository/nomaticIM/browser?order=name\" title=\"Go to repository root\">source:</a>\n<a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic?order=name\" title=\"View nomatic\">nomatic</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags?order=name\" title=\"View tags\">tags</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5?order=name\" title=\"View NomaticIM-0.0.5\">NomaticIM-0.0.5</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots?order=name\" title=\"View buddy_bots\">buddy_bots</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src?order=name\" title=\"View src\">src</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted?order=name\" title=\"View twisted\">twisted</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols?order=name\" title=\"View protocols\">protocols</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/socks.py?order=name\" title=\"View socks.py\">socks.py</a>\n<br style=\"clear: both\" />\n\n        </h1>\n        <div id=\"diffrev\">\n          <form action=\"/LUCICodeRepository/nomaticIM/changeset\" method=\"get\">\n            <div>\n              <label title=\"Show the diff against a specific revision\">\n                View diff against: <input type=\"text\" name=\"old\" size=\"6\" />\n                <input type=\"hidden\" name=\"old_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/socks.py\" />\n                <input type=\"hidden\" name=\"new\" />\n                <input type=\"hidden\" name=\"new_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/socks.py\" />\n              </label>\n            </div>\n          </form>\n        </div>\n        <div id=\"jumprev\">\n          <form action=\"\" method=\"get\">\n            <div>\n              <label for=\"rev\">\n                View revision:</label>\n              <input type=\"text\" id=\"rev\" name=\"rev\" size=\"6\" />\n            </div>\n          </form>\n        </div>\n        <div id=\"jumploc\">\n          <form action=\"\" method=\"get\">\n            <div class=\"buttons\">\n              <label for=\"preselected\">Visit:</label>\n              <select id=\"preselected\" name=\"preselected\">\n                <option selected=\"selected\"></option>\n                <optgroup label=\"branches\">\n                  <option value=\"/LUCICodeRepository/nomaticIM/browser/trunk\">trunk</option>\n                </optgroup>\n              </select>\n              <input type=\"submit\" value=\"Go!\" title=\"Jump to the chosen preselected path\" />\n            </div>\n          </form>\n        </div>\n        <div class=\"trac-tags\">\n        </div>\n      <table id=\"info\" summary=\"Revision info\">\n        <tr>\n          <th>\n                <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/nomatic/trunk/buddy_bots/twisted/protocols/socks.py\" title=\"View differences\">Last change</a>\n                  on this file was\n                  <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/\" title=\"View changeset 712\">712</a>,\n                  checked in by cbaker, <a class=\"timeline\" href=\"/LUCICodeRepository/nomaticIM/timeline?from=2008-02-16T08%3A16%3A53-08%3A00&amp;precision=second\" title=\"See timeline at Feb 16, 2008, 8:16:53 AM\">7 years ago</a>\n          </th>\n        </tr>\n        <tr>\n          <td class=\"message searchable\">\n              <p>\nFirst draft of nomatic buddy bots. oscar_bot is functional if you give it good authentication credentials, jabber_bot is just an example from the web <br />\n</p>\n          </td>\n        </tr>\n        <tr><td colspan=\"2\">\n            <strong>File size:</strong>\n            <span title=\"5441 bytes\">5.3 KB</span>\n          </td></tr>\n      </table>\n      <div id=\"preview\" class=\"searchable\">\n        \n  <table class=\"code\"><thead><tr><th class=\"lineno\" title=\"Line numbers\">Line</th><th class=\"content\">\u00a0</th></tr></thead><tbody><tr><th id=\"L1\"><a href=\"#L1\">1</a></th><td><span class=\"c\"># Copyright (c) 2001-2004 Twisted Matrix Laboratories.</span></td></tr><tr><th id=\"L2\"><a href=\"#L2\">2</a></th><td><span class=\"c\"># See LICENSE for details.</span></td></tr><tr><th id=\"L3\"><a href=\"#L3\">3</a></th><td></td></tr><tr><th id=\"L4\"><a href=\"#L4\">4</a></th><td></td></tr><tr><th id=\"L5\"><a href=\"#L5\">5</a></th><td><span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L6\"><a href=\"#L6\">6</a></th><td><span class=\"sd\">Implementation of the SOCKSv4 protocol.</span></td></tr><tr><th id=\"L7\"><a href=\"#L7\">7</a></th><td><span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L8\"><a href=\"#L8\">8</a></th><td></td></tr><tr><th id=\"L9\"><a href=\"#L9\">9</a></th><td><span class=\"c\"># twisted imports</span></td></tr><tr><th id=\"L10\"><a href=\"#L10\">10</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet</span>\u00a0<span class=\"kn\">import</span>\u00a0reactor<span class=\"p\">,</span>\u00a0protocol<span class=\"p\">,</span>\u00a0defer</td></tr><tr><th id=\"L11\"><a href=\"#L11\">11</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.python</span>\u00a0<span class=\"kn\">import</span>\u00a0log</td></tr><tr><th id=\"L12\"><a href=\"#L12\">12</a></th><td></td></tr><tr><th id=\"L13\"><a href=\"#L13\">13</a></th><td><span class=\"c\"># python imports</span></td></tr><tr><th id=\"L14\"><a href=\"#L14\">14</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">struct</span></td></tr><tr><th id=\"L15\"><a href=\"#L15\">15</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">string</span></td></tr><tr><th id=\"L16\"><a href=\"#L16\">16</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">socket</span></td></tr><tr><th id=\"L17\"><a href=\"#L17\">17</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">time</span></td></tr><tr><th id=\"L18\"><a href=\"#L18\">18</a></th><td></td></tr><tr><th id=\"L19\"><a href=\"#L19\">19</a></th><td></td></tr><tr><th id=\"L20\"><a href=\"#L20\">20</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">SOCKSv4Outgoing</span><span class=\"p\">(</span>protocol<span class=\"o\">.</span>Protocol<span class=\"p\">):</span></td></tr><tr><th id=\"L21\"><a href=\"#L21\">21</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L22\"><a href=\"#L22\">22</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>socks<span class=\"p\">):</span></td></tr><tr><th id=\"L23\"><a href=\"#L23\">23</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socks<span class=\"o\">=</span>socks</td></tr><tr><th id=\"L24\"><a href=\"#L24\">24</a></th><td></td></tr><tr><th id=\"L25\"><a href=\"#L25\">25</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectionMade</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L26\"><a href=\"#L26\">26</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 peer <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>transport<span class=\"o\">.</span>getPeer<span class=\"p\">()</span></td></tr><tr><th id=\"L27\"><a href=\"#L27\">27</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socks<span class=\"o\">.</span>makeReply<span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">,</span>\u00a0<span class=\"mi\">0</span><span class=\"p\">,</span>\u00a0port<span class=\"o\">=</span>peer<span class=\"o\">.</span>port<span class=\"p\">,</span>\u00a0ip<span class=\"o\">=</span>peer<span class=\"o\">.</span>host<span class=\"p\">)</span></td></tr><tr><th id=\"L28\"><a href=\"#L28\">28</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socks<span class=\"o\">.</span>otherConn<span class=\"o\">=</span><span class=\"bp\">self</span></td></tr><tr><th id=\"L29\"><a href=\"#L29\">29</a></th><td></td></tr><tr><th id=\"L30\"><a href=\"#L30\">30</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectionLost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reason<span class=\"p\">):</span></td></tr><tr><th id=\"L31\"><a href=\"#L31\">31</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socks<span class=\"o\">.</span>transport<span class=\"o\">.</span>loseConnection<span class=\"p\">()</span></td></tr><tr><th id=\"L32\"><a href=\"#L32\">32</a></th><td></td></tr><tr><th id=\"L33\"><a href=\"#L33\">33</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">dataReceived</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>data<span class=\"p\">):</span></td></tr><tr><th id=\"L34\"><a href=\"#L34\">34</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socks<span class=\"o\">.</span>write<span class=\"p\">(</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L35\"><a href=\"#L35\">35</a></th><td></td></tr><tr><th id=\"L36\"><a href=\"#L36\">36</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">write</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>data<span class=\"p\">):</span></td></tr><tr><th id=\"L37\"><a href=\"#L37\">37</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socks<span class=\"o\">.</span>log<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L38\"><a href=\"#L38\">38</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>transport<span class=\"o\">.</span>write<span class=\"p\">(</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L39\"><a href=\"#L39\">39</a></th><td></td></tr><tr><th id=\"L40\"><a href=\"#L40\">40</a></th><td></td></tr><tr><th id=\"L41\"><a href=\"#L41\">41</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">SOCKSv4Incoming</span><span class=\"p\">(</span>protocol<span class=\"o\">.</span>Protocol<span class=\"p\">):</span></td></tr><tr><th id=\"L42\"><a href=\"#L42\">42</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L43\"><a href=\"#L43\">43</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>socks<span class=\"p\">):</span></td></tr><tr><th id=\"L44\"><a href=\"#L44\">44</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socks<span class=\"o\">=</span>socks</td></tr><tr><th id=\"L45\"><a href=\"#L45\">45</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socks<span class=\"o\">.</span>otherConn<span class=\"o\">=</span><span class=\"bp\">self</span></td></tr><tr><th id=\"L46\"><a href=\"#L46\">46</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L47\"><a href=\"#L47\">47</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectionLost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reason<span class=\"p\">):</span></td></tr><tr><th id=\"L48\"><a href=\"#L48\">48</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socks<span class=\"o\">.</span>transport<span class=\"o\">.</span>loseConnection<span class=\"p\">()</span></td></tr><tr><th id=\"L49\"><a href=\"#L49\">49</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L50\"><a href=\"#L50\">50</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">dataReceived</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>data<span class=\"p\">):</span></td></tr><tr><th id=\"L51\"><a href=\"#L51\">51</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socks<span class=\"o\">.</span>write<span class=\"p\">(</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L52\"><a href=\"#L52\">52</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L53\"><a href=\"#L53\">53</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">write</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>data<span class=\"p\">):</span></td></tr><tr><th id=\"L54\"><a href=\"#L54\">54</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socks<span class=\"o\">.</span>log<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L55\"><a href=\"#L55\">55</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>transport<span class=\"o\">.</span>write<span class=\"p\">(</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L56\"><a href=\"#L56\">56</a></th><td></td></tr><tr><th id=\"L57\"><a href=\"#L57\">57</a></th><td></td></tr><tr><th id=\"L58\"><a href=\"#L58\">58</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">SOCKSv4</span><span class=\"p\">(</span>protocol<span class=\"o\">.</span>Protocol<span class=\"p\">):</span></td></tr><tr><th id=\"L59\"><a href=\"#L59\">59</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L60\"><a href=\"#L60\">60</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>logging<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L61\"><a href=\"#L61\">61</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>logging<span class=\"o\">=</span>logging</td></tr><tr><th id=\"L62\"><a href=\"#L62\">62</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L63\"><a href=\"#L63\">63</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectionMade</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L64\"><a href=\"#L64\">64</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>buf<span class=\"o\">=</span><span class=\"s\">\"\"</span></td></tr><tr><th id=\"L65\"><a href=\"#L65\">65</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>otherConn<span class=\"o\">=</span><span class=\"bp\">None</span></td></tr><tr><th id=\"L66\"><a href=\"#L66\">66</a></th><td></td></tr><tr><th id=\"L67\"><a href=\"#L67\">67</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">dataReceived</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>data<span class=\"p\">):</span></td></tr><tr><th id=\"L68\"><a href=\"#L68\">68</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>otherConn<span class=\"p\">:</span></td></tr><tr><th id=\"L69\"><a href=\"#L69\">69</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>otherConn<span class=\"o\">.</span>write<span class=\"p\">(</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L70\"><a href=\"#L70\">70</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span></td></tr><tr><th id=\"L71\"><a href=\"#L71\">71</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>buf<span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span>buf<span class=\"o\">+</span>data</td></tr><tr><th id=\"L72\"><a href=\"#L72\">72</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"s\">'</span><span class=\"se\">\\000</span><span class=\"s\">'</span>\u00a0<span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>buf<span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">:]:</span></td></tr><tr><th id=\"L73\"><a href=\"#L73\">73</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 head<span class=\"p\">,</span><span class=\"bp\">self</span><span class=\"o\">.</span>buf<span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span>buf<span class=\"p\">[:</span><span class=\"mi\">8</span><span class=\"p\">],</span><span class=\"bp\">self</span><span class=\"o\">.</span>buf<span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">:]</span></td></tr><tr><th id=\"L74\"><a href=\"#L74\">74</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L75\"><a href=\"#L75\">75</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 version<span class=\"p\">,</span>code<span class=\"p\">,</span>port<span class=\"o\">=</span>struct<span class=\"o\">.</span>unpack<span class=\"p\">(</span><span class=\"s\">\"!BBH\"</span><span class=\"p\">,</span>head<span class=\"p\">[:</span><span class=\"mi\">4</span><span class=\"p\">])</span></td></tr><tr><th id=\"L76\"><a href=\"#L76\">76</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0struct<span class=\"o\">.</span>error<span class=\"p\">:</span></td></tr><tr><th id=\"L77\"><a href=\"#L77\">77</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">RuntimeError</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"struct error with head='</span><span class=\"si\">%s</span><span class=\"s\">' and buf='</span><span class=\"si\">%s</span><span class=\"s\">'\"</span><span class=\"o\">%</span><span class=\"p\">(</span><span class=\"nb\">repr</span><span class=\"p\">(</span>head<span class=\"p\">),</span><span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>buf<span class=\"p\">))</span></td></tr><tr><th id=\"L78\"><a href=\"#L78\">78</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 user<span class=\"p\">,</span><span class=\"bp\">self</span><span class=\"o\">.</span>buf<span class=\"o\">=</span>string<span class=\"o\">.</span>split<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>buf<span class=\"p\">,</span><span class=\"s\">\"</span><span class=\"se\">\\000</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span></td></tr><tr><th id=\"L79\"><a href=\"#L79\">79</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0head<span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">:</span><span class=\"mi\">7</span><span class=\"p\">]</span><span class=\"o\">==</span><span class=\"s\">\"</span><span class=\"se\">\\000\\000\\000</span><span class=\"s\">\"</span><span class=\"p\">:</span>\u00a0<span class=\"c\"># domain is after</span></td></tr><tr><th id=\"L80\"><a href=\"#L80\">80</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 server<span class=\"p\">,</span><span class=\"bp\">self</span><span class=\"o\">.</span>buf<span class=\"o\">=</span>string<span class=\"o\">.</span>split<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>buf<span class=\"p\">,</span><span class=\"s\">'</span><span class=\"se\">\\000</span><span class=\"s\">'</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span></td></tr><tr><th id=\"L81\"><a href=\"#L81\">81</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\">#server=gethostbyname(server)</span></td></tr><tr><th id=\"L82\"><a href=\"#L82\">82</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L83\"><a href=\"#L83\">83</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 server<span class=\"o\">=</span>socket<span class=\"o\">.</span>inet_ntoa<span class=\"p\">(</span>head<span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">:</span><span class=\"mi\">8</span><span class=\"p\">])</span></td></tr><tr><th id=\"L84\"><a href=\"#L84\">84</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">assert</span>\u00a0version<span class=\"o\">==</span><span class=\"mi\">4</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"Bad version code: </span><span class=\"si\">%s</span><span class=\"s\">\"</span><span class=\"o\">%</span>version</td></tr><tr><th id=\"L85\"><a href=\"#L85\">85</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>authorize<span class=\"p\">(</span>code<span class=\"p\">,</span>server<span class=\"p\">,</span>port<span class=\"p\">,</span>user<span class=\"p\">):</span></td></tr><tr><th id=\"L86\"><a href=\"#L86\">86</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>makeReply<span class=\"p\">(</span><span class=\"mi\">91</span><span class=\"p\">)</span></td></tr><tr><th id=\"L87\"><a href=\"#L87\">87</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span></td></tr><tr><th id=\"L88\"><a href=\"#L88\">88</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0code<span class=\"o\">==</span><span class=\"mi\">1</span><span class=\"p\">:</span>\u00a0<span class=\"c\"># CONNECT</span></td></tr><tr><th id=\"L89\"><a href=\"#L89\">89</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 d <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>connectClass<span class=\"p\">(</span>server<span class=\"p\">,</span>\u00a0port<span class=\"p\">,</span>\u00a0SOCKSv4Outgoing<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L90\"><a href=\"#L90\">90</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 d<span class=\"o\">.</span>addErrback<span class=\"p\">(</span><span class=\"k\">lambda</span>\u00a0result<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"p\">:</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>makeReply<span class=\"p\">(</span><span class=\"mi\">91</span><span class=\"p\">))</span></td></tr><tr><th id=\"L91\"><a href=\"#L91\">91</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0code<span class=\"o\">==</span><span class=\"mi\">2</span><span class=\"p\">:</span>\u00a0<span class=\"c\"># BIND</span></td></tr><tr><th id=\"L92\"><a href=\"#L92\">92</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ip <span class=\"o\">=</span>\u00a0socket<span class=\"o\">.</span>gethostbyname<span class=\"p\">(</span>server<span class=\"p\">)</span></td></tr><tr><th id=\"L93\"><a href=\"#L93\">93</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 d <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>listenClass<span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span>\u00a0SOCKSv4IncomingFactory<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0ip<span class=\"p\">)</span></td></tr><tr><th id=\"L94\"><a href=\"#L94\">94</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 d<span class=\"o\">.</span>addCallback<span class=\"p\">(</span><span class=\"k\">lambda</span>\u00a0<span class=\"p\">(</span>h<span class=\"p\">,</span>\u00a0p<span class=\"p\">),</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"p\">:</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>makeReply<span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">,</span>\u00a0<span class=\"mi\">0</span><span class=\"p\">,</span>\u00a0p<span class=\"p\">,</span>\u00a0h<span class=\"p\">))</span></td></tr><tr><th id=\"L95\"><a href=\"#L95\">95</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L96\"><a href=\"#L96\">96</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">RuntimeError</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"Bad Connect Code: </span><span class=\"si\">%s</span><span class=\"s\">\"</span>\u00a0<span class=\"o\">%</span>\u00a0code</td></tr><tr><th id=\"L97\"><a href=\"#L97\">97</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">assert</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>buf<span class=\"o\">==</span><span class=\"s\">\"\"</span><span class=\"p\">,</span><span class=\"s\">\"hmm, still stuff in buffer... </span><span class=\"si\">%s</span><span class=\"s\">\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>buf<span class=\"p\">)</span></td></tr><tr><th id=\"L98\"><a href=\"#L98\">98</a></th><td></td></tr><tr><th id=\"L99\"><a href=\"#L99\">99</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectionLost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reason<span class=\"p\">):</span></td></tr><tr><th id=\"L100\"><a href=\"#L100\">100</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>otherConn<span class=\"p\">:</span></td></tr><tr><th id=\"L101\"><a href=\"#L101\">101</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>otherConn<span class=\"o\">.</span>transport<span class=\"o\">.</span>loseConnection<span class=\"p\">()</span></td></tr><tr><th id=\"L102\"><a href=\"#L102\">102</a></th><td></td></tr><tr><th id=\"L103\"><a href=\"#L103\">103</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">authorize</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>code<span class=\"p\">,</span>server<span class=\"p\">,</span>port<span class=\"p\">,</span>user<span class=\"p\">):</span></td></tr><tr><th id=\"L104\"><a href=\"#L104\">104</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 log<span class=\"o\">.</span>msg<span class=\"p\">(</span><span class=\"s\">\"code </span><span class=\"si\">%s</span><span class=\"s\">\u00a0connection to </span><span class=\"si\">%s</span><span class=\"s\">:</span><span class=\"si\">%s</span><span class=\"s\">\u00a0(user </span><span class=\"si\">%s</span><span class=\"s\">) authorized\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span>code<span class=\"p\">,</span>server<span class=\"p\">,</span>port<span class=\"p\">,</span>user<span class=\"p\">))</span></td></tr><tr><th id=\"L105\"><a href=\"#L105\">105</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L106\"><a href=\"#L106\">106</a></th><td></td></tr><tr><th id=\"L107\"><a href=\"#L107\">107</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectClass</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0host<span class=\"p\">,</span>\u00a0port<span class=\"p\">,</span>\u00a0klass<span class=\"p\">,</span>\u00a0<span class=\"o\">*</span>args<span class=\"p\">):</span></td></tr><tr><th id=\"L108\"><a href=\"#L108\">108</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0protocol<span class=\"o\">.</span>ClientCreator<span class=\"p\">(</span>reactor<span class=\"p\">,</span>\u00a0klass<span class=\"p\">,</span>\u00a0<span class=\"o\">*</span>args<span class=\"p\">)</span><span class=\"o\">.</span>connectTCP<span class=\"p\">(</span>host<span class=\"p\">,</span>port<span class=\"p\">)</span></td></tr><tr><th id=\"L109\"><a href=\"#L109\">109</a></th><td></td></tr><tr><th id=\"L110\"><a href=\"#L110\">110</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">listenClass</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0port<span class=\"p\">,</span>\u00a0klass<span class=\"p\">,</span>\u00a0<span class=\"o\">*</span>args<span class=\"p\">):</span></td></tr><tr><th id=\"L111\"><a href=\"#L111\">111</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 serv <span class=\"o\">=</span>\u00a0reactor<span class=\"o\">.</span>listenTCP<span class=\"p\">(</span>port<span class=\"p\">,</span>\u00a0klass<span class=\"p\">(</span><span class=\"o\">*</span>args<span class=\"p\">))</span></td></tr><tr><th id=\"L112\"><a href=\"#L112\">112</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0defer<span class=\"o\">.</span>succeed<span class=\"p\">(</span>serv<span class=\"o\">.</span>getHost<span class=\"p\">()[</span><span class=\"mi\">1</span><span class=\"p\">:])</span></td></tr><tr><th id=\"L113\"><a href=\"#L113\">113</a></th><td></td></tr><tr><th id=\"L114\"><a href=\"#L114\">114</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">makeReply</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>reply<span class=\"p\">,</span>version<span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>port<span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>ip<span class=\"o\">=</span><span class=\"s\">\"0.0.0.0\"</span><span class=\"p\">):</span></td></tr><tr><th id=\"L115\"><a href=\"#L115\">115</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>transport<span class=\"o\">.</span>write<span class=\"p\">(</span>struct<span class=\"o\">.</span>pack<span class=\"p\">(</span><span class=\"s\">\"!BBH\"</span><span class=\"p\">,</span>version<span class=\"p\">,</span>reply<span class=\"p\">,</span>port<span class=\"p\">)</span><span class=\"o\">+</span>socket<span class=\"o\">.</span>inet_aton<span class=\"p\">(</span>ip<span class=\"p\">))</span></td></tr><tr><th id=\"L116\"><a href=\"#L116\">116</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0reply<span class=\"o\">!=</span><span class=\"mi\">90</span><span class=\"p\">:</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>transport<span class=\"o\">.</span>loseConnection<span class=\"p\">()</span></td></tr><tr><th id=\"L117\"><a href=\"#L117\">117</a></th><td></td></tr><tr><th id=\"L118\"><a href=\"#L118\">118</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">write</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>data<span class=\"p\">):</span></td></tr><tr><th id=\"L119\"><a href=\"#L119\">119</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>log<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L120\"><a href=\"#L120\">120</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>transport<span class=\"o\">.</span>write<span class=\"p\">(</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L121\"><a href=\"#L121\">121</a></th><td></td></tr><tr><th id=\"L122\"><a href=\"#L122\">122</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">log</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>proto<span class=\"p\">,</span>data<span class=\"p\">):</span></td></tr><tr><th id=\"L123\"><a href=\"#L123\">123</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>logging<span class=\"p\">:</span>\u00a0<span class=\"k\">return</span></td></tr><tr><th id=\"L124\"><a href=\"#L124\">124</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 peer <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>transport<span class=\"o\">.</span>getPeer<span class=\"p\">()</span></td></tr><tr><th id=\"L125\"><a href=\"#L125\">125</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 their_peer <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>otherConn<span class=\"o\">.</span>transport<span class=\"o\">.</span>getPeer<span class=\"p\">()</span></td></tr><tr><th id=\"L126\"><a href=\"#L126\">126</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 f<span class=\"o\">=</span><span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>logging<span class=\"p\">,</span><span class=\"s\">\"a\"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L127\"><a href=\"#L127\">127</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 f<span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"s\">\"</span><span class=\"si\">%s</span><span class=\"se\">\\t</span><span class=\"si\">%s</span><span class=\"s\">:</span><span class=\"si\">%d</span><span class=\"s\">\u00a0</span><span class=\"si\">%s</span><span class=\"s\">\u00a0</span><span class=\"si\">%s</span><span class=\"s\">:</span><span class=\"si\">%d</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"o\">%</span><span class=\"p\">(</span>time<span class=\"o\">.</span>ctime<span class=\"p\">(),</span></td></tr><tr><th id=\"L128\"><a href=\"#L128\">128</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 peer<span class=\"o\">.</span>host<span class=\"p\">,</span>peer<span class=\"o\">.</span>port<span class=\"p\">,</span></td></tr><tr><th id=\"L129\"><a href=\"#L129\">129</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"p\">((</span>proto<span class=\"o\">==</span><span class=\"bp\">self</span>\u00a0<span class=\"ow\">and</span>\u00a0<span class=\"s\">'&lt;'</span><span class=\"p\">)</span>\u00a0<span class=\"ow\">or</span>\u00a0<span class=\"s\">'&gt;'</span><span class=\"p\">),</span></td></tr><tr><th id=\"L130\"><a href=\"#L130\">130</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 their_peer<span class=\"o\">.</span>host<span class=\"p\">,</span>their_peer<span class=\"o\">.</span>port<span class=\"p\">))</span></td></tr><tr><th id=\"L131\"><a href=\"#L131\">131</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">while</span>\u00a0data<span class=\"p\">:</span></td></tr><tr><th id=\"L132\"><a href=\"#L132\">132</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 p<span class=\"p\">,</span>data<span class=\"o\">=</span>data<span class=\"p\">[:</span><span class=\"mi\">16</span><span class=\"p\">],</span>data<span class=\"p\">[</span><span class=\"mi\">16</span><span class=\"p\">:]</span></td></tr><tr><th id=\"L133\"><a href=\"#L133\">133</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 f<span class=\"o\">.</span>write<span class=\"p\">(</span>string<span class=\"o\">.</span>join<span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"k\">lambda</span>\u00a0x<span class=\"p\">:</span><span class=\"s\">'</span><span class=\"si\">%02X</span><span class=\"s\">'</span><span class=\"o\">%</span><span class=\"nb\">ord</span><span class=\"p\">(</span>x<span class=\"p\">),</span>p<span class=\"p\">),</span><span class=\"s\">' '</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"s\">' '</span><span class=\"p\">)</span></td></tr><tr><th id=\"L134\"><a href=\"#L134\">134</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 f<span class=\"o\">.</span>write<span class=\"p\">((</span><span class=\"mi\">16</span><span class=\"o\">-</span><span class=\"nb\">len</span><span class=\"p\">(</span>p<span class=\"p\">))</span><span class=\"o\">*</span><span class=\"mi\">3</span><span class=\"o\">*</span><span class=\"s\">' '</span><span class=\"p\">)</span></td></tr><tr><th id=\"L135\"><a href=\"#L135\">135</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0c <span class=\"ow\">in</span>\u00a0p<span class=\"p\">:</span></td></tr><tr><th id=\"L136\"><a href=\"#L136\">136</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"nb\">repr</span><span class=\"p\">(</span>c<span class=\"p\">))</span><span class=\"o\">&gt;</span><span class=\"mi\">3</span><span class=\"p\">:</span>\u00a0f<span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"s\">'.'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L137\"><a href=\"#L137\">137</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span>\u00a0f<span class=\"o\">.</span>write<span class=\"p\">(</span>c<span class=\"p\">)</span></td></tr><tr><th id=\"L138\"><a href=\"#L138\">138</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 f<span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"s\">'</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L139\"><a href=\"#L139\">139</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 f<span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"s\">'</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L140\"><a href=\"#L140\">140</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 f<span class=\"o\">.</span>close<span class=\"p\">()</span></td></tr><tr><th id=\"L141\"><a href=\"#L141\">141</a></th><td></td></tr><tr><th id=\"L142\"><a href=\"#L142\">142</a></th><td></td></tr><tr><th id=\"L143\"><a href=\"#L143\">143</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">SOCKSv4Factory</span><span class=\"p\">(</span>protocol<span class=\"o\">.</span>Factory<span class=\"p\">):</span></td></tr><tr><th id=\"L144\"><a href=\"#L144\">144</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"A factory for a SOCKSv4 proxy.</span></td></tr><tr><th id=\"L145\"><a href=\"#L145\">145</a></th><td><span class=\"sd\">\u00a0 \u00a0 </span></td></tr><tr><th id=\"L146\"><a href=\"#L146\">146</a></th><td><span class=\"sd\">\u00a0 \u00a0 Constructor accepts one argument, a log file name.</span></td></tr><tr><th id=\"L147\"><a href=\"#L147\">147</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L148\"><a href=\"#L148\">148</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L149\"><a href=\"#L149\">149</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0log<span class=\"p\">):</span></td></tr><tr><th id=\"L150\"><a href=\"#L150\">150</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>logging <span class=\"o\">=</span>\u00a0log</td></tr><tr><th id=\"L151\"><a href=\"#L151\">151</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L152\"><a href=\"#L152\">152</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">buildProtocol</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0addr<span class=\"p\">):</span></td></tr><tr><th id=\"L153\"><a href=\"#L153\">153</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0SOCKSv4<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>logging<span class=\"p\">)</span></td></tr><tr><th id=\"L154\"><a href=\"#L154\">154</a></th><td></td></tr><tr><th id=\"L155\"><a href=\"#L155\">155</a></th><td></td></tr><tr><th id=\"L156\"><a href=\"#L156\">156</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">SOCKSv4IncomingFactory</span><span class=\"p\">(</span>protocol<span class=\"o\">.</span>Factory<span class=\"p\">):</span></td></tr><tr><th id=\"L157\"><a href=\"#L157\">157</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"A utility class for building protocols for incoming connections.\"\"\"</span></td></tr><tr><th id=\"L158\"><a href=\"#L158\">158</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L159\"><a href=\"#L159\">159</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0socks<span class=\"p\">,</span>\u00a0ip<span class=\"p\">):</span></td></tr><tr><th id=\"L160\"><a href=\"#L160\">160</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socks <span class=\"o\">=</span>\u00a0socks</td></tr><tr><th id=\"L161\"><a href=\"#L161\">161</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>ip <span class=\"o\">=</span>\u00a0ip</td></tr><tr><th id=\"L162\"><a href=\"#L162\">162</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L163\"><a href=\"#L163\">163</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">buildProtocol</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0addr<span class=\"p\">):</span></td></tr><tr><th id=\"L164\"><a href=\"#L164\">164</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0addr<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\u00a0<span class=\"o\">==</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>ip<span class=\"p\">:</span></td></tr><tr><th id=\"L165\"><a href=\"#L165\">165</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>ip <span class=\"o\">=</span>\u00a0<span class=\"s\">\"\"</span></td></tr><tr><th id=\"L166\"><a href=\"#L166\">166</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socks<span class=\"o\">.</span>makeReply<span class=\"p\">(</span><span class=\"mi\">90</span><span class=\"p\">,</span>\u00a0<span class=\"mi\">0</span><span class=\"p\">)</span></td></tr><tr><th id=\"L167\"><a href=\"#L167\">167</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0SOCKSv4Incoming<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>socks<span class=\"p\">)</span></td></tr><tr><th id=\"L168\"><a href=\"#L168\">168</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>ip <span class=\"o\">==</span>\u00a0<span class=\"s\">\"\"</span><span class=\"p\">:</span></td></tr><tr><th id=\"L169\"><a href=\"#L169\">169</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L170\"><a href=\"#L170\">170</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L171\"><a href=\"#L171\">171</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>socks<span class=\"o\">.</span>makeReply<span class=\"p\">(</span><span class=\"mi\">91</span><span class=\"p\">,</span>\u00a0<span class=\"mi\">0</span><span class=\"p\">)</span></td></tr><tr><th id=\"L172\"><a href=\"#L172\">172</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>ip <span class=\"o\">=</span>\u00a0<span class=\"s\">\"\"</span></td></tr><tr><th id=\"L173\"><a href=\"#L173\">173</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">None</span></td></tr></tbody></table>\n\n      </div>\n      <div id=\"anydiff\">\n        <form action=\"/LUCICodeRepository/nomaticIM/diff\" method=\"get\">\n          <div class=\"buttons\">\n            <input type=\"hidden\" name=\"new_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/socks.py\" />\n            <input type=\"hidden\" name=\"old_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/socks.py\" />\n            <input type=\"hidden\" name=\"new_rev\" />\n            <input type=\"hidden\" name=\"old_rev\" />\n            <input type=\"submit\" value=\"View changes...\" title=\"Select paths and revs for Diff\" />\n          </div>\n        </form>\n      </div>\n      <div id=\"help\"><strong>Note:</strong> See <a href=\"/LUCICodeRepository/nomaticIM/wiki/TracBrowser\">TracBrowser</a>\n        for help on using the repository browser.</div>\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"first\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/socks.py?format=txt\">Plain Text</a>\n        </li><li class=\"last\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/socks.py\">Original Format</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/LUCICodeRepository/nomaticIM/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/LUCICodeRepository/nomaticIM/about\"><strong>Trac 1.0.1</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">All content copyright 2007-2008 by LUCI <br /><a href=\"http://luci.ics.uci.edu/\">http://luci.ics.uci.edu/</a></p>\n    </div>\n\t\t<div id=\"sitefooter\">\n\t\t\t<script src=\"http://www.google-analytics.com/urchin.js\" type=\"text/javascript\">\n\t\t\t</script>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t\t_uacct = \"UA-338915-2\";\n\t\t\t\turchinTracker();\n\t\t\t</script>\n\t\t</div>\n\t</body>\n</html>", "id": 44150.0}