{"text": "View Javadoc 1 2 Copyright c 2 3 Regents of the University of California 3 All rights reserved 4 5 6 The Apache Software License Version 1 1 7 8 Redistribution and use in source and binary forms with or without 9 modification are permitted provided that the following conditions 1 are met 11 12 1 Redistributions of source code must retain the above copyright 13 notice this list of conditions and the following disclaimer 14 15 2 Redistributions in binary form must reproduce the above copyright 16 notice this list of conditions and the following disclaimer in 17 the documentation and or other materials provided with the 18 distribution 19 2 3 The end user documentation included with the redistribution if 21 any must include the following acknowledgment 22 This product includes software developed by 23 the Institute for Software Research at 24 University of California Irvine 25 Alternately this acknowledgment may appear in the software 26 itself if and wherever such third party acknowledgments normally 27 appear 28 29 4 The names YANCEES Institute for Software Research and 3 University of California must not be used to 31 endorse or promote products derived from this software without 32 prior written permission For written permission please contact 33 rsilvafi ics uci edu or redmiles ics uci edu 34 35 5 Products derived from this software may not be called 36 YANCEES nor may YANCEES appear in their name without 37 prior written permission of the University of California Regents 38 39 THIS SOFTWARE IS PROVIDED AS IS AND ANY EXPRESSED OR IMPLIED 4 WARRANTIES INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF 41 MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED 42 IN NO EVENT SHALL THE INSTITUTE FOR SOFTWARE RESEARCH AT THE UNIVERSITY 43 OF CALIFORNIA IRVINE OR ITS CONTRIBUTORS BE LIABLE FOR 44 ANY DIRECT INDIRECT INCIDENTAL SPECIAL EXEMPLARY OR 45 CONSEQUENTIAL DAMAGES INCLUDING BUT NOT LIMITED TO PROCUREMENT OF 46 SUBSTITUTE GOODS OR SERVICES LOSS OF USE DATA OR PROFITS OR 47 BUSINESS INTERRUPTION HOWEVER CAUSED AND ON ANY THEORY OF 48 LIABILITY WHETHER IN CONTRACT STRICT LIABILITY OR TORT INCLUDING 49 NEGLIGENCE OR OTHERWISE ARISING IN ANY WAY OUT OF THE USE OF THIS 5 SOFTWARE EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE 51 52 53 54 package edu uci isr impromptu pocketpc 55 56 import java net InetAddress 57 import java net UnknownHostException 58 import java util Iterator 59 import java util StringTokenizer 6 61 import org eclipse swt graphics Color 62 import org eclipse swt graphics RGB 63 64 import edu uci isr impromptu common MessageProcessor 65 import edu uci isr yancees AttributeNotFoundException 66 import edu uci isr yancees EventInterface 67 import edu uci isr yancees GenericMessage 68 import edu uci isr yancees SubscriberInterface 69 import edu uci isr yancees WrongAttributeTypeException 7 import edu uci isr yancees YanceesEvent 71 import edu uci isr yancees YanceesException 72 import edu uci isr yancees client rmi YanceesRMIClient 73 import edu uci isr yancees server filter peerpublisher PeerPublisherInputFilter 74 75 76 Receives events from the peers and process them 77 author rsilvafi class created at Aug 1 2 5 78 79 public class EventProcessor extends Thread implements SubscriberInterface 8 81 boolean print true 82 boolean createdInitialModel false prevents duplicated message processing 83 84 TinyImpromptuGUI model null 85 86 The Yancees client 87 private YanceesRMIClient client 88 89 private String hostname TinyImpromptu yanceesHostname 9 91 the name under which this remote interface will be registered with 92 the rmiregistry 93 private String instanceName 94 Utils getImpromptuName edu uci isr impromptu common Configuration REPOSITORY CHARACTER 95 private String instanceName 96 Utils getImpromptuName edu uci isr impromptu common Configuration PIE CHARACTER 97 private String instanceName getImpromptuName 98 99 1 1 1 Get the name used to designate the impromptu instance 1 2 return the name It is the property user name unless 1 3 the property impromptu name is set 1 4 1 5 private String getImpromptuName 1 6 String impromptuName TinyImpromptu instanceName 1 7 1 8 1 9 String impromptuName System getProperty impromptu name 11 if impromptuName null 111 impromptuName System getProperty user name 112 113 114 115 return impromptuName 116 117 118 119 constructor 12 121 param gui 122 is a reference to the application GUI that will be updated 123 as new peers get in and out and files get dragged around 124 125 public EventProcessor TinyImpromptuGUI gui 126 model gui 127 128 129 13 Connects to the local version of YANCEES and subscribes to all the 131 events being produced by it 132 133 private void connectAndSubscribeToLocalYancees 134 135 try 136 System out println hostname hostname 137 System out println instanceName instanceName 138 139 connects to the local server through a client interface 14 client new YanceesRMIClient hostname instanceName 141 GenericMessage msg new GenericMessage 142 subscription filter EQ name yancees version name 143 value type yanceesString 1 value EQ filter subscription 144 client subscribe msg this 145 146 catch Exception e 147 System out println e 148 149 15 151 152 153 We pack a list of files with their owners name and their sharing 154 level in order to send the results back to the requestor 155 156 param id 157 is the identifier of the request that will issue in this 158 response 159 return 16 161 protected YanceesEvent generatePeerQueryREQUEST 162 YanceesEvent request new YanceesEvent 163 164 generates a response to certain session id 165 request put PeerQueryProtocol MESSAGE TYPE 166 PeerQueryProtocol REQ MESSAGE TYPE 167 request put PeerQueryProtocol SESSION ID generateUniqueId 168 169 We ask the YANCEES server only without inquiring other peers 17 to prevent 171 response flood 172 173 174 request put PeerPublisherInputFilter PUBLISH TO PEERS 175 PeerPublisherInputFilter FALSE 176 177 request put PeerPublisherInputFilter PUBLISH TO PEERS 178 PeerPublisherInputFilter TRUE 179 18 181 request put PeerQueryProtocol QUERY COMMAND 182 PeerQueryProtocol CMD LIST GLOBAL FILES 183 184 return request 185 186 187 188 generates a unique identifier based on current timestamp and this 189 host address This is may be used to match responses to requests 19 191 return the unique id 192 193 protected String generateUniqueId 194 String hostname null 195 try 196 hostname InetAddress getLocalHost getHostAddress 197 catch UnknownHostException e 198 e printStackTrace 199 2 2 1 String id System currentTimeMillis hostname 2 2 2 3 return id 2 4 2 5 2 6 main application process 2 7 public void run 2 8 2 9 System out print EventProcessor connecting to local yancees 21 connectAndSubscribeToLocalYancees 211 System out println OK 212 System out print EventProcessor generating peer query request 213 YanceesEvent requrest generatePeerQueryREQUEST 214 try 215 client publish requrest 216 catch YanceesException e 217 e printStackTrace 218 219 System out println OK 22 221 waits indefinitely until the application is terminated 222 223 while true 224 try 225 Thread sleep 1 226 catch InterruptedException e 227 e printStackTrace 228 229 23 231 232 233 SubscriberInterface implementation 234 235 236 Get eventual response notification in the form of a pattern 237 238 see edu uci isr yancees SubscriberInterface notify edu uci isr yancees EventInterface 239 24 public void notify EventInterface pattern 241 for int i i pattern length i 242 notify pattern i 243 244 245 246 public void notify EventInterface msg 247 if print 248 System out println EventViewer got event msg toString 249 25 final YanceesEvent message YanceesEvent msg 251 252 If the message received is a response 253 if message containsAttribute PeerQueryProtocol MESSAGE TYPE 254 String message get PeerQueryProtocol MESSAGE TYPE 255 equals PeerQueryProtocol RESP MESSAGE TYPE 256 257 String sessionId String message 258 get PeerQueryProtocol SESSION ID 259 if print 26 System out 261 println EventViewer got event response for session 262 sessionId 263 264 if the model was already created do not create again 265 if this createdInitialModel 266 267 synchronized model getDisplay 268 269 This is necessary to prevent org eclipse swt SWTException Invalid thread access exception 27 model getDisplay syncExec new Runnable 271 public void run 272 System out println Creating thead to call createDistributedModel 273 createDistributedModel message 274 275 System out println Finish thead that called createDistributedModel 276 277 278 model getDisplay update 279 28 281 282 283 else 284 285 synchronized model getDisplay 286 This is necessary to prevent org eclipse swt SWTException Invalid thread access exception 287 model getDisplay syncExec new Runnable 288 public void run 289 System out println Creating thead to call updateDistributedModel 29 updateDistributedModel message 291 292 System out println Finish thead that called updateDistributedModel 293 294 295 296 model getDisplay update 297 298 299 3 3 1 3 2 public RGB getRGBFromString String str 3 3 RGB rgb null 3 4 3 5 if str startsWith rgb 3 6 3 7 String tail str substring 4 remove the rgb 3 8 tail tail substring tail length 1 remove the 3 9 31 StringTokenizer st new StringTokenizer tail 311 312 int r Integer parseInt st nextToken 313 int g Integer parseInt st nextToken 314 int b Integer parseInt st nextToken 315 316 317 System out print RGB 318 System out print r 319 System out print g 32 System out println b 321 322 323 rgb new RGB r g b 324 325 else 326 System out println Not a valid RGB format str 327 328 329 return rgb 33 331 332 333 private void updateDistributedModel YanceesEvent message 334 if message containsAttribute MessageProcessor ATTR ACTION 335 String actionCommand null 336 String ownerPeer null 337 338 if print 339 System out println EventProcessor updateDistirbutedModel for message message 34 341 try 342 343 actionCommand message getString MessageProcessor ATTR ACTION 344 ownerPeer message getString MessageProcessor ATTR PEER NAME 345 346 if actionCommand equals MessageProcessor ACTION ADD 347 int level Integer parseInt message 348 getString MessageProcessor ATTR LEVEL 349 String filename message 35 getString MessageProcessor ATTR FILE NAME 351 model addFile ownerPeer filename level 352 353 else if actionCommand 354 equals MessageProcessor ACTION ADD PEER 355 356 String rgbColorString message getString MessageProcessor ATTR COLOR 357 System out println Read Color rgbColorString 358 359 model addPeer ownerPeer new Color model getDisplay getRGBFromString rgbColorString 36 361 else if actionCommand 362 equals MessageProcessor ACTION MOVE 363 int level Integer parseInt message 364 getString MessageProcessor ATTR LEVEL 365 String filename message 366 getString MessageProcessor ATTR FILE NAME 367 model moveFile ownerPeer filename level 368 369 else if actionCommand 37 equals MessageProcessor ACTION REMOVE 371 String filename message 372 getString MessageProcessor ATTR FILE NAME 373 model removeFile ownerPeer filename 374 375 else if actionCommand 376 equals MessageProcessor ACTION SHUTDOWN 377 model shutdownPeer ownerPeer 378 379 else if actionCommand 38 equals MessageProcessor ACTION READ 381 String filename message 382 getString MessageProcessor ATTR FILE NAME 383 String actor message 384 getString MessageProcessor ATTR ACTOR 385 model readFile ownerPeer filename actor 386 387 else if actionCommand 388 equals MessageProcessor ACTION WRITE 389 String filename message 39 getString MessageProcessor ATTR FILE NAME 391 String actor message 392 getString MessageProcessor ATTR ACTOR 393 model writeFile ownerPeer filename actor 394 395 396 397 catch WrongAttributeTypeException e 398 TODO Auto generated catch block 399 e printStackTrace 4 catch AttributeNotFoundException e 4 1 TODO Auto generated catch block 4 2 e printStackTrace 4 3 4 4 if actionCommand null 4 5 if actionCommand 4 6 equalsIgnoreCase MessageProcessor ACTION ADD 4 7 4 8 4 9 41 411 412 413 414 415 Processes initial model as returned by the peer query requrest 416 417 param message 418 is the return message having a list of peers their files 419 with their respective sharing levels 42 421 422 private void createDistributedModel YanceesEvent message 423 424 if print 425 System out println EventProcessor createDistirbutedModel for message message 426 427 First add all peers 428 for Iterator iter message getAttributeNamesIterator iter 429 hasNext 43 String attName String iter next 431 432 try 433 434 if attName startsWith PeerQueryProtocol PEER 435 436 String ownerPeer attName substring PeerQueryProtocol PEER length 437 String ownerColorRGBString message getString attName 438 439 model addPeer ownerPeer new org eclipse swt graphics Color model getDisplay this getRGBFromString ownerColorRGBString 44 441 442 catch NumberFormatException e 443 TODO Auto generated catch block 444 e printStackTrace 445 catch WrongAttributeTypeException e 446 TODO Auto generated catch block 447 e printStackTrace 448 catch AttributeNotFoundException e 449 TODO Auto generated catch block 45 e printStackTrace 451 452 453 454 Then add all files 455 for Iterator iter message getAttributeNamesIterator iter 456 hasNext 457 String attName String iter next 458 459 try 46 if attName startsWith PeerQueryProtocol FILE 461 462 int sharingLevel Integer parseInt message 463 getString attName 464 String ownerFile attName substring PeerQueryProtocol FILE length 465 System out println owner File ownerFile 466 467 String owner ownerFile substring ownerFile indexOf 468 String file ownerFile substring ownerFile indexOf 1 469 47 471 System out println got owner owner 472 System out println got file file 473 474 475 model addFile owner file sharingLevel 476 477 catch NumberFormatException e 478 TODO Auto generated catch block 479 e printStackTrace 48 catch WrongAttributeTypeException e 481 TODO Auto generated catch block 482 e printStackTrace 483 catch AttributeNotFoundException e 484 TODO Auto generated catch block 485 e printStackTrace 486 487 488 489 this createdInitialModel true 49 491 492 493 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.30/xref/edu/uci/isr/impromptu/pocketpc/EventProcessor.html", "title": "eventprocessor xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>EventProcessor xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../../../../stylesheet.css\" />\n</head>\n<body>\n<div id=\"overview\"><a href=\"../../../../../../apidocs/edu/uci/isr/impromptu/pocketpc/EventProcessor.html\">View Javadoc</a></div><pre>\n\n<a name=\"1\" href=\"#1\">1</a>    <em class=\"comment\">/*</em>\n<a name=\"2\" href=\"#2\">2</a>   <em class=\"comment\"> * Copyright (c) 2003, Regents of the University of California.</em>\n<a name=\"3\" href=\"#3\">3</a>   <em class=\"comment\"> * All rights reserved.</em>\n<a name=\"4\" href=\"#4\">4</a>   <em class=\"comment\"> * </em>\n<a name=\"5\" href=\"#5\">5</a>   <em class=\"comment\"> * ===================================================================</em>\n<a name=\"6\" href=\"#6\">6</a>   <em class=\"comment\"> * The Apache Software License, Version 1.1</em>\n<a name=\"7\" href=\"#7\">7</a>   <em class=\"comment\"> * </em>\n<a name=\"8\" href=\"#8\">8</a>   <em class=\"comment\"> * Redistribution and use in source and binary forms, with or without</em>\n<a name=\"9\" href=\"#9\">9</a>   <em class=\"comment\"> * modification, are permitted provided that the following conditions</em>\n<a name=\"10\" href=\"#10\">10</a>  <em class=\"comment\"> * are met:</em>\n<a name=\"11\" href=\"#11\">11</a>  <em class=\"comment\"> * </em>\n<a name=\"12\" href=\"#12\">12</a>  <em class=\"comment\"> * 1. Redistributions of source code must retain the above copyright</em>\n<a name=\"13\" href=\"#13\">13</a>  <em class=\"comment\"> *    notice, this list of conditions and the following disclaimer.</em>\n<a name=\"14\" href=\"#14\">14</a>  <em class=\"comment\"> * </em>\n<a name=\"15\" href=\"#15\">15</a>  <em class=\"comment\"> * 2. Redistributions in binary form must reproduce the above copyright</em>\n<a name=\"16\" href=\"#16\">16</a>  <em class=\"comment\"> *    notice, this list of conditions and the following disclaimer in</em>\n<a name=\"17\" href=\"#17\">17</a>  <em class=\"comment\"> *    the documentation and/or other materials provided with the</em>\n<a name=\"18\" href=\"#18\">18</a>  <em class=\"comment\"> *    distribution.</em>\n<a name=\"19\" href=\"#19\">19</a>  <em class=\"comment\"> * </em>\n<a name=\"20\" href=\"#20\">20</a>  <em class=\"comment\"> * 3. The end-user documentation included with the redistribution, if</em>\n<a name=\"21\" href=\"#21\">21</a>  <em class=\"comment\"> *    any, must include the following acknowledgment:</em>\n<a name=\"22\" href=\"#22\">22</a>  <em class=\"comment\"> *       \"This product includes software developed by</em>\n<a name=\"23\" href=\"#23\">23</a>  <em class=\"comment\"> *        the Institute for Software Research at  </em>\n<a name=\"24\" href=\"#24\">24</a>  <em class=\"comment\"> *        University of California, Irvine\"</em>\n<a name=\"25\" href=\"#25\">25</a>  <em class=\"comment\"> *    Alternately, this acknowledgment may appear in the software</em>\n<a name=\"26\" href=\"#26\">26</a>  <em class=\"comment\"> *    itself, if and wherever such third-party acknowledgments normally</em>\n<a name=\"27\" href=\"#27\">27</a>  <em class=\"comment\"> *    appear.</em>\n<a name=\"28\" href=\"#28\">28</a>  <em class=\"comment\"> * </em>\n<a name=\"29\" href=\"#29\">29</a>  <em class=\"comment\"> * 4. The names \"YANCEES\", \"Institute for Software Research\" and</em>\n<a name=\"30\" href=\"#30\">30</a>  <em class=\"comment\"> *    \"University of California\" must not be used to</em>\n<a name=\"31\" href=\"#31\">31</a>  <em class=\"comment\"> *    endorse or promote products derived from this software without</em>\n<a name=\"32\" href=\"#32\">32</a>  <em class=\"comment\"> *    prior written permission. For written permission, please contact</em>\n<a name=\"33\" href=\"#33\">33</a>  <em class=\"comment\"> *    rsilvafi@ics.uci.edu or redmiles@ics.uci.edu.</em>\n<a name=\"34\" href=\"#34\">34</a>  <em class=\"comment\"> * </em>\n<a name=\"35\" href=\"#35\">35</a>  <em class=\"comment\"> * 5. Products derived from this software may not be called</em>\n<a name=\"36\" href=\"#36\">36</a>  <em class=\"comment\"> *    \"YANCEES\", nor may \"YANCEES\" appear in their name, without</em>\n<a name=\"37\" href=\"#37\">37</a>  <em class=\"comment\"> *    prior written permission of the University of California Regents.</em>\n<a name=\"38\" href=\"#38\">38</a>  <em class=\"comment\"> * </em>\n<a name=\"39\" href=\"#39\">39</a>  <em class=\"comment\"> * THIS SOFTWARE IS PROVIDED \"AS IS\" AND ANY EXPRESSED OR IMPLIED</em>\n<a name=\"40\" href=\"#40\">40</a>  <em class=\"comment\"> * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF</em>\n<a name=\"41\" href=\"#41\">41</a>  <em class=\"comment\"> * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.</em>\n<a name=\"42\" href=\"#42\">42</a>  <em class=\"comment\"> * IN NO EVENT SHALL THE INSTITUTE FOR SOFTWARE RESEARCH AT THE UNIVERSITY</em>\n<a name=\"43\" href=\"#43\">43</a>  <em class=\"comment\"> * OF CALIFORNIA, IRVINE, OR ITS CONTRIBUTORS BE LIABLE FOR</em>\n<a name=\"44\" href=\"#44\">44</a>  <em class=\"comment\"> * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR</em>\n<a name=\"45\" href=\"#45\">45</a>  <em class=\"comment\"> * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF</em>\n<a name=\"46\" href=\"#46\">46</a>  <em class=\"comment\"> * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR</em>\n<a name=\"47\" href=\"#47\">47</a>  <em class=\"comment\"> * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF</em>\n<a name=\"48\" href=\"#48\">48</a>  <em class=\"comment\"> * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING</em>\n<a name=\"49\" href=\"#49\">49</a>  <em class=\"comment\"> * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS</em>\n<a name=\"50\" href=\"#50\">50</a>  <em class=\"comment\"> * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</em>\n<a name=\"51\" href=\"#51\">51</a>  <em class=\"comment\"> * ====================================================================</em>\n<a name=\"52\" href=\"#52\">52</a>  <em class=\"comment\"> */</em>\n<a name=\"53\" href=\"#53\">53</a>   \n<a name=\"54\" href=\"#54\">54</a>  <strong>package</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pocketpc/package-summary.html\">edu.uci.isr.impromptu.pocketpc</a>;\n<a name=\"55\" href=\"#55\">55</a>  \n<a name=\"56\" href=\"#56\">56</a>  <strong>import</strong> java.net.InetAddress;\n<a name=\"57\" href=\"#57\">57</a>  <strong>import</strong> java.net.UnknownHostException;\n<a name=\"58\" href=\"#58\">58</a>  <strong>import</strong> java.util.Iterator;\n<a name=\"59\" href=\"#59\">59</a>  <strong>import</strong> java.util.StringTokenizer;\n<a name=\"60\" href=\"#60\">60</a>  \n<a name=\"61\" href=\"#61\">61</a>  <strong>import</strong> org.eclipse.swt.graphics.Color;\n<a name=\"62\" href=\"#62\">62</a>  <strong>import</strong> org.eclipse.swt.graphics.RGB;\n<a name=\"63\" href=\"#63\">63</a>  \n<a name=\"64\" href=\"#64\">64</a>  <strong>import</strong> edu.uci.isr.impromptu.common.MessageProcessor;\n<a name=\"65\" href=\"#65\">65</a>  <strong>import</strong> edu.uci.isr.yancees.AttributeNotFoundException;\n<a name=\"66\" href=\"#66\">66</a>  <strong>import</strong> edu.uci.isr.yancees.EventInterface;\n<a name=\"67\" href=\"#67\">67</a>  <strong>import</strong> edu.uci.isr.yancees.GenericMessage;\n<a name=\"68\" href=\"#68\">68</a>  <strong>import</strong> edu.uci.isr.yancees.SubscriberInterface;\n<a name=\"69\" href=\"#69\">69</a>  <strong>import</strong> edu.uci.isr.yancees.WrongAttributeTypeException;\n<a name=\"70\" href=\"#70\">70</a>  <strong>import</strong> edu.uci.isr.yancees.YanceesEvent;\n<a name=\"71\" href=\"#71\">71</a>  <strong>import</strong> edu.uci.isr.yancees.YanceesException;\n<a name=\"72\" href=\"#72\">72</a>  <strong>import</strong> edu.uci.isr.yancees.client.rmi.YanceesRMIClient;\n<a name=\"73\" href=\"#73\">73</a>  <strong>import</strong> edu.uci.isr.yancees.server.filter.peerpublisher.PeerPublisherInputFilter;\n<a name=\"74\" href=\"#74\">74</a>  \n<a name=\"75\" href=\"#75\">75</a>  <em>/**<em>*</em></em>\n<a name=\"76\" href=\"#76\">76</a>  <em> * Receives events from the peers and process them.</em>\n<a name=\"77\" href=\"#77\">77</a>  <em> * @author rsilvafi class created at Aug 1, 2005</em>\n<a name=\"78\" href=\"#78\">78</a>  <em> */</em>\n<a name=\"79\" href=\"#79\">79</a>  <strong>public</strong> <strong>class</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pocketpc/EventProcessor.html\">EventProcessor</a> <strong>extends</strong> Thread implements SubscriberInterface {\n<a name=\"80\" href=\"#80\">80</a>  \n<a name=\"81\" href=\"#81\">81</a>  \t<strong>boolean</strong> print = <strong>true</strong>;\n<a name=\"82\" href=\"#82\">82</a>  \t<strong>boolean</strong> createdInitialModel = false; <em class=\"comment\">// prevents duplicated message processing</em>\n<a name=\"83\" href=\"#83\">83</a>  \t\n<a name=\"84\" href=\"#84\">84</a>  \tTinyImpromptuGUI model = <strong>null</strong>;\n<a name=\"85\" href=\"#85\">85</a>  \n<a name=\"86\" href=\"#86\">86</a>  \t<em class=\"comment\">// The Yancees client</em>\n<a name=\"87\" href=\"#87\">87</a>  \t<strong>private</strong> YanceesRMIClient client;\n<a name=\"88\" href=\"#88\">88</a>  \n<a name=\"89\" href=\"#89\">89</a>  \t<strong>private</strong> String hostname = TinyImpromptu.yanceesHostname;\n<a name=\"90\" href=\"#90\">90</a>  \n<a name=\"91\" href=\"#91\">91</a>  \t<em class=\"comment\">// the name under which this remote interface will be registered with</em>\n<a name=\"92\" href=\"#92\">92</a>  \t<em class=\"comment\">// the rmiregistry</em>\n<a name=\"93\" href=\"#93\">93</a>  \t<em class=\"comment\">// private String instanceName =</em>\n<a name=\"94\" href=\"#94\">94</a>  \t<em class=\"comment\">// Utils.getImpromptuName()+edu.uci.isr.impromptu.common.Configuration.REPOSITORY_CHARACTER;</em>\n<a name=\"95\" href=\"#95\">95</a>  \t<em class=\"comment\">// private String instanceName =</em>\n<a name=\"96\" href=\"#96\">96</a>  \t<em class=\"comment\">// Utils.getImpromptuName()+edu.uci.isr.impromptu.common.Configuration.PIE_CHARACTER;</em>\n<a name=\"97\" href=\"#97\">97</a>  \t<strong>private</strong> String instanceName = getImpromptuName();\n<a name=\"98\" href=\"#98\">98</a>  \n<a name=\"99\" href=\"#99\">99</a>  \t\n<a name=\"100\" href=\"#100\">100</a> \t<em>/**<em>*</em></em>\n<a name=\"101\" href=\"#101\">101</a> <em>     * Get the name used to designate the impromptu instance</em>\n<a name=\"102\" href=\"#102\">102</a> <em>     * @return the name. It is the property user.name, unless</em>\n<a name=\"103\" href=\"#103\">103</a> <em>     * the property impromptu.name is set.</em>\n<a name=\"104\" href=\"#104\">104</a> <em>     */</em>\n<a name=\"105\" href=\"#105\">105</a>     <strong>private</strong> String getImpromptuName() {\n<a name=\"106\" href=\"#106\">106</a>     \tString impromptuName = TinyImpromptu.instanceName;\n<a name=\"107\" href=\"#107\">107</a>     \t\n<a name=\"108\" href=\"#108\">108</a>     \t<em class=\"comment\">/*</em>\n<a name=\"109\" href=\"#109\">109</a> <em class=\"comment\">    \tString impromptuName = System.getProperty(\"impromptu.name\"); \t</em>\n<a name=\"110\" href=\"#110\">110</a> <em class=\"comment\">\t\tif (impromptuName==null) {</em>\n<a name=\"111\" href=\"#111\">111</a> <em class=\"comment\">            impromptuName = System.getProperty(\"user.name\");</em>\n<a name=\"112\" href=\"#112\">112</a> <em class=\"comment\">        }</em>\n<a name=\"113\" href=\"#113\">113</a> <em class=\"comment\">        */</em>\n<a name=\"114\" href=\"#114\">114</a> \t\t\n<a name=\"115\" href=\"#115\">115</a>         <strong>return</strong> impromptuName;\n<a name=\"116\" href=\"#116\">116</a>     }\n<a name=\"117\" href=\"#117\">117</a> \t\n<a name=\"118\" href=\"#118\">118</a> \t<em>/**<em>*</em></em>\n<a name=\"119\" href=\"#119\">119</a> <em>\t * constructor</em>\n<a name=\"120\" href=\"#120\">120</a> <em>\t * </em>\n<a name=\"121\" href=\"#121\">121</a> <em>\t * @param gui</em>\n<a name=\"122\" href=\"#122\">122</a> <em>\t *            is a reference to the application GUI that will be updated</em>\n<a name=\"123\" href=\"#123\">123</a> <em>\t *            as new peers get in and out and files get dragged around.</em>\n<a name=\"124\" href=\"#124\">124</a> <em>\t */</em>\n<a name=\"125\" href=\"#125\">125</a> \t<strong>public</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pocketpc/EventProcessor.html\">EventProcessor</a>(<a href=\"../../../../../edu/uci/isr/impromptu/pocketpc/TinyImpromptuGUI.html\">TinyImpromptuGUI</a> gui) {\n<a name=\"126\" href=\"#126\">126</a> \t\tmodel = gui;\t\t\n<a name=\"127\" href=\"#127\">127</a> \t}\n<a name=\"128\" href=\"#128\">128</a> \n<a name=\"129\" href=\"#129\">129</a> \t<em>/**<em>*</em></em>\n<a name=\"130\" href=\"#130\">130</a> <em>\t * Connects to the local version of YANCEES and subscribes to all the</em>\n<a name=\"131\" href=\"#131\">131</a> <em>\t * events being produced by it.</em>\n<a name=\"132\" href=\"#132\">132</a> <em>\t */</em>\n<a name=\"133\" href=\"#133\">133</a> \t<strong>private</strong> <strong>void</strong> connectAndSubscribeToLocalYancees() {\n<a name=\"134\" href=\"#134\">134</a> \n<a name=\"135\" href=\"#135\">135</a> \t\t<strong>try</strong> {\n<a name=\"136\" href=\"#136\">136</a> \t\t\tSystem.out.println(<span class=\"string\">\"hostname = \"</span> + hostname);\n<a name=\"137\" href=\"#137\">137</a> \t\t\tSystem.out.println(<span class=\"string\">\"instanceName = \"</span> + instanceName);\n<a name=\"138\" href=\"#138\">138</a> \n<a name=\"139\" href=\"#139\">139</a> \t\t\t<em class=\"comment\">// connects to the local server through a client interface</em>\n<a name=\"140\" href=\"#140\">140</a> \t\t\tclient = <strong>new</strong> YanceesRMIClient(hostname, instanceName);\n<a name=\"141\" href=\"#141\">141</a> \t\t\tGenericMessage msg = <strong>new</strong> GenericMessage(\n<a name=\"142\" href=\"#142\">142</a> \t\t\t\t\t<span class=\"string\">\"&lt;subscription>&lt;filter>&lt;EQ>&lt;name>yancees.version&lt;/name>\"</span>\n<a name=\"143\" href=\"#143\">143</a> \t\t\t\t\t\t\t+ <span class=\"string\">\"&lt;value type=\\&quot;yanceesString\\&quot;>1.0&lt;/value>&lt;/EQ>&lt;/filter>&lt;/subscription>\"</span>);\n<a name=\"144\" href=\"#144\">144</a> \t\t\tclient.subscribe(msg, <strong>this</strong>);\n<a name=\"145\" href=\"#145\">145</a> \n<a name=\"146\" href=\"#146\">146</a> \t\t} <strong>catch</strong> (Exception e) {\n<a name=\"147\" href=\"#147\">147</a> \t\t\tSystem.out.println(e);\n<a name=\"148\" href=\"#148\">148</a> \t\t}\n<a name=\"149\" href=\"#149\">149</a> \n<a name=\"150\" href=\"#150\">150</a> \t}\n<a name=\"151\" href=\"#151\">151</a> \n<a name=\"152\" href=\"#152\">152</a> \t<em>/**<em>*</em></em>\n<a name=\"153\" href=\"#153\">153</a> <em>\t * We pack a list of files, with their owners/name, and their sharing</em>\n<a name=\"154\" href=\"#154\">154</a> <em>\t * level in order to send the results back to the requestor.</em>\n<a name=\"155\" href=\"#155\">155</a> <em>\t * </em>\n<a name=\"156\" href=\"#156\">156</a> <em>\t * @param id</em>\n<a name=\"157\" href=\"#157\">157</a> <em>\t *            is the identifier of the request that will issue in this</em>\n<a name=\"158\" href=\"#158\">158</a> <em>\t *            response</em>\n<a name=\"159\" href=\"#159\">159</a> <em>\t * @return</em>\n<a name=\"160\" href=\"#160\">160</a> <em>\t */</em>\n<a name=\"161\" href=\"#161\">161</a> \t<strong>protected</strong> YanceesEvent generatePeerQueryREQUEST() {\n<a name=\"162\" href=\"#162\">162</a> \t\tYanceesEvent request = <strong>new</strong> YanceesEvent();\n<a name=\"163\" href=\"#163\">163</a> \n<a name=\"164\" href=\"#164\">164</a> \t\t<em class=\"comment\">// generates a response to certain session id.</em>\n<a name=\"165\" href=\"#165\">165</a> \t\trequest.put(PeerQueryProtocol.MESSAGE_TYPE,\n<a name=\"166\" href=\"#166\">166</a> \t\t\t\tPeerQueryProtocol.REQ_MESSAGE_TYPE);\n<a name=\"167\" href=\"#167\">167</a> \t\trequest.put(PeerQueryProtocol.SESSION_ID, generateUniqueId());\n<a name=\"168\" href=\"#168\">168</a> \n<a name=\"169\" href=\"#169\">169</a> \t\t<em class=\"comment\">// We ask the YANCEES server only (without inquiring other peers),</em>\n<a name=\"170\" href=\"#170\">170</a> \t\t<em class=\"comment\">// to prevent</em>\n<a name=\"171\" href=\"#171\">171</a> \t\t<em class=\"comment\">// response flood.</em>\n<a name=\"172\" href=\"#172\">172</a> \t\t\n<a name=\"173\" href=\"#173\">173</a> \t\t<em class=\"comment\">/*</em>\n<a name=\"174\" href=\"#174\">174</a> <em class=\"comment\">\t\trequest.put(PeerPublisherInputFilter.PUBLISH_TO_PEERS,</em>\n<a name=\"175\" href=\"#175\">175</a> <em class=\"comment\">\t\t\t\tPeerPublisherInputFilter.FALSE);</em>\n<a name=\"176\" href=\"#176\">176</a> <em class=\"comment\">\t\t*/</em>\n<a name=\"177\" href=\"#177\">177</a> \t\trequest.put(PeerPublisherInputFilter.PUBLISH_TO_PEERS,\n<a name=\"178\" href=\"#178\">178</a> \t\t\t\tPeerPublisherInputFilter.TRUE);\n<a name=\"179\" href=\"#179\">179</a> \t\t\n<a name=\"180\" href=\"#180\">180</a> \t\t\n<a name=\"181\" href=\"#181\">181</a> \t\trequest.put(PeerQueryProtocol.QUERY_COMMAND,\n<a name=\"182\" href=\"#182\">182</a> \t\t\t\tPeerQueryProtocol.CMD_LIST_GLOBAL_FILES);\n<a name=\"183\" href=\"#183\">183</a> \n<a name=\"184\" href=\"#184\">184</a> \t\t<strong>return</strong> request;\n<a name=\"185\" href=\"#185\">185</a> \t}\n<a name=\"186\" href=\"#186\">186</a> \n<a name=\"187\" href=\"#187\">187</a> \t<em>/**<em>*</em></em>\n<a name=\"188\" href=\"#188\">188</a> <em>\t * generates a unique identifier based on current timestamp and this</em>\n<a name=\"189\" href=\"#189\">189</a> <em>\t * host address. This is may be used to match responses to requests</em>\n<a name=\"190\" href=\"#190\">190</a> <em>\t * </em>\n<a name=\"191\" href=\"#191\">191</a> <em>\t * @return the unique id</em>\n<a name=\"192\" href=\"#192\">192</a> <em>\t */</em>\n<a name=\"193\" href=\"#193\">193</a> \t<strong>protected</strong> String generateUniqueId() {\n<a name=\"194\" href=\"#194\">194</a> \t\tString hostname = <strong>null</strong>;\n<a name=\"195\" href=\"#195\">195</a> \t\t<strong>try</strong> {\n<a name=\"196\" href=\"#196\">196</a> \t\t\thostname = InetAddress.getLocalHost().getHostAddress();\n<a name=\"197\" href=\"#197\">197</a> \t\t} <strong>catch</strong> (UnknownHostException e) {\n<a name=\"198\" href=\"#198\">198</a> \t\t\te.printStackTrace();\n<a name=\"199\" href=\"#199\">199</a> \t\t}\n<a name=\"200\" href=\"#200\">200</a> \n<a name=\"201\" href=\"#201\">201</a> \t\tString id = System.currentTimeMillis() + <span class=\"string\">\"-\"</span> + hostname;\n<a name=\"202\" href=\"#202\">202</a> \n<a name=\"203\" href=\"#203\">203</a> \t\t<strong>return</strong> id;\n<a name=\"204\" href=\"#204\">204</a> \t}\n<a name=\"205\" href=\"#205\">205</a> \n<a name=\"206\" href=\"#206\">206</a> \t<em class=\"comment\">// main application process</em>\n<a name=\"207\" href=\"#207\">207</a> \t<strong>public</strong> <strong>void</strong> run() {\n<a name=\"208\" href=\"#208\">208</a> \n<a name=\"209\" href=\"#209\">209</a> \t\tSystem.out.print(<span class=\"string\">\"EventProcessor: connecting to local yancees... \"</span>);\n<a name=\"210\" href=\"#210\">210</a> \t\tconnectAndSubscribeToLocalYancees();\n<a name=\"211\" href=\"#211\">211</a> \t\tSystem.out.println(<span class=\"string\">\"[OK]\"</span>);\n<a name=\"212\" href=\"#212\">212</a> \t\tSystem.out.print(<span class=\"string\">\"EventProcessor: generating peer query request...\"</span>);\n<a name=\"213\" href=\"#213\">213</a> \t\tYanceesEvent requrest = generatePeerQueryREQUEST();\n<a name=\"214\" href=\"#214\">214</a> \t\t<strong>try</strong> {\n<a name=\"215\" href=\"#215\">215</a> \t\t\tclient.publish(requrest);\n<a name=\"216\" href=\"#216\">216</a> \t\t} <strong>catch</strong> (YanceesException e) {\n<a name=\"217\" href=\"#217\">217</a> \t\t\te.printStackTrace();\n<a name=\"218\" href=\"#218\">218</a> \t\t}\n<a name=\"219\" href=\"#219\">219</a> \t\tSystem.out.println(<span class=\"string\">\"[OK]\"</span>);\n<a name=\"220\" href=\"#220\">220</a> \n<a name=\"221\" href=\"#221\">221</a> \t\t<em class=\"comment\">// waits indefinitely until the application is terminated.</em>\n<a name=\"222\" href=\"#222\">222</a> \t\t\n<a name=\"223\" href=\"#223\">223</a> \t\t<strong>while</strong> (<strong>true</strong>) {\n<a name=\"224\" href=\"#224\">224</a> \t\t\t<strong>try</strong> {\n<a name=\"225\" href=\"#225\">225</a> \t\t\t\tThread.sleep(100);\n<a name=\"226\" href=\"#226\">226</a> \t\t\t} <strong>catch</strong> (InterruptedException e) {\n<a name=\"227\" href=\"#227\">227</a> \t\t\t\te.printStackTrace();\n<a name=\"228\" href=\"#228\">228</a> \t\t\t}\n<a name=\"229\" href=\"#229\">229</a> \t\t}\n<a name=\"230\" href=\"#230\">230</a> \t\t\n<a name=\"231\" href=\"#231\">231</a> \t}\n<a name=\"232\" href=\"#232\">232</a> \n<a name=\"233\" href=\"#233\">233</a> <em class=\"comment\">// ******************** SubscriberInterface implementation *****************</em>\n<a name=\"234\" href=\"#234\">234</a> \n<a name=\"235\" href=\"#235\">235</a> \t<em>/**<em>*</em></em>\n<a name=\"236\" href=\"#236\">236</a> <em>\t * Get eventual response notification in the form of a pattern</em>\n<a name=\"237\" href=\"#237\">237</a> <em>\t * </em>\n<a name=\"238\" href=\"#238\">238</a> <em>\t * @see edu.uci.isr.yancees.SubscriberInterface#notify(edu.uci.isr.yancees.EventInterface)</em>\n<a name=\"239\" href=\"#239\">239</a> <em>\t */</em>\n<a name=\"240\" href=\"#240\">240</a> \t<strong>public</strong> <strong>void</strong> notify(EventInterface[] pattern) {\n<a name=\"241\" href=\"#241\">241</a> \t\t<strong>for</strong> (<strong>int</strong> i = 0; i &lt; pattern.length; i++) {\n<a name=\"242\" href=\"#242\">242</a> \t\t\tnotify(pattern[i]);\n<a name=\"243\" href=\"#243\">243</a> \t\t}\n<a name=\"244\" href=\"#244\">244</a> \t}\n<a name=\"245\" href=\"#245\">245</a> \n<a name=\"246\" href=\"#246\">246</a> \t<strong>public</strong> <strong>void</strong> notify(EventInterface msg) {\n<a name=\"247\" href=\"#247\">247</a> \t\t<strong>if</strong> (print)\n<a name=\"248\" href=\"#248\">248</a> \t\t\tSystem.out.println(<span class=\"string\">\"EventViewer: got event \"</span> + msg.toString());\n<a name=\"249\" href=\"#249\">249</a> \n<a name=\"250\" href=\"#250\">250</a> \t\t<strong>final</strong> YanceesEvent message = (YanceesEvent) msg;\n<a name=\"251\" href=\"#251\">251</a> \n<a name=\"252\" href=\"#252\">252</a> \t\t<em class=\"comment\">// If the message received is a response</em>\n<a name=\"253\" href=\"#253\">253</a> \t\t<strong>if</strong> (message.containsAttribute(PeerQueryProtocol.MESSAGE_TYPE)\n<a name=\"254\" href=\"#254\">254</a> \t\t\t\t&amp;&amp; ((String) message.get(PeerQueryProtocol.MESSAGE_TYPE))\n<a name=\"255\" href=\"#255\">255</a> \t\t\t\t\t\t.equals(PeerQueryProtocol.RESP_MESSAGE_TYPE)) {\n<a name=\"256\" href=\"#256\">256</a> \n<a name=\"257\" href=\"#257\">257</a> \t\t\tString sessionId = (String) message\n<a name=\"258\" href=\"#258\">258</a> \t\t\t\t\t.get(PeerQueryProtocol.SESSION_ID);\n<a name=\"259\" href=\"#259\">259</a> \t\t\t<strong>if</strong> (print)\n<a name=\"260\" href=\"#260\">260</a> \t\t\t\tSystem.out\n<a name=\"261\" href=\"#261\">261</a> \t\t\t\t\t\t.println(<span class=\"string\">\"EventViewer: got event response for session: \"</span>\n<a name=\"262\" href=\"#262\">262</a> \t\t\t\t\t\t\t\t+ sessionId);\n<a name=\"263\" href=\"#263\">263</a> \n<a name=\"264\" href=\"#264\">264</a> \t\t\t<em class=\"comment\">// if the model was already created, do not create again..</em>\n<a name=\"265\" href=\"#265\">265</a> \t\t\t<strong>if</strong> (! <strong>this</strong>.createdInitialModel) {\n<a name=\"266\" href=\"#266\">266</a> \t\t\t\t\n<a name=\"267\" href=\"#267\">267</a> \t\t\t\t<strong>synchronized</strong>(model.getDisplay()) {\n<a name=\"268\" href=\"#268\">268</a> \t\t\t\t\n<a name=\"269\" href=\"#269\">269</a> \t\t\t\t\t<em class=\"comment\">// This is necessary to prevent org.eclipse.swt.SWTException: Invalid thread access exception</em>\n<a name=\"270\" href=\"#270\">270</a> \t\t\t\t\tmodel.getDisplay().syncExec (<strong>new</strong> Runnable () {\n<a name=\"271\" href=\"#271\">271</a> \t\t\t\t\t\t<strong>public</strong> <strong>void</strong> run () {\n<a name=\"272\" href=\"#272\">272</a> \t\t\t\t\t\t\tSystem.out.println(<span class=\"string\">\"Creating thead to call createDistributedModel()\"</span>);\n<a name=\"273\" href=\"#273\">273</a> \t\t\t\t\t\t\tcreateDistributedModel(message);\n<a name=\"274\" href=\"#274\">274</a> \t\t\t\t\t\t\t\n<a name=\"275\" href=\"#275\">275</a> \t\t\t\t\t\t\tSystem.out.println(<span class=\"string\">\"Finish thead that called createDistributedModel()\"</span>);\n<a name=\"276\" href=\"#276\">276</a> \t\t\t\t\t\t}\n<a name=\"277\" href=\"#277\">277</a> \t\t\t\t\t});\n<a name=\"278\" href=\"#278\">278</a> \t\t\t\t\t<em class=\"comment\">//model.getDisplay().update();</em>\n<a name=\"279\" href=\"#279\">279</a> \t\t\t\t\n<a name=\"280\" href=\"#280\">280</a> \t\t\t\t}\n<a name=\"281\" href=\"#281\">281</a> \t\t\t}\n<a name=\"282\" href=\"#282\">282</a> \t\t\t\n<a name=\"283\" href=\"#283\">283</a> \t\t} <strong>else</strong> {\n<a name=\"284\" href=\"#284\">284</a> \t\t\t\n<a name=\"285\" href=\"#285\">285</a> \t\t\t<strong>synchronized</strong>(model.getDisplay()) {\n<a name=\"286\" href=\"#286\">286</a> \t\t\t\t<em class=\"comment\">// This is necessary to prevent org.eclipse.swt.SWTException: Invalid thread access exception</em>\n<a name=\"287\" href=\"#287\">287</a> \t\t\t\tmodel.getDisplay().syncExec (<strong>new</strong> Runnable () {\n<a name=\"288\" href=\"#288\">288</a> \t\t\t\t\t<strong>public</strong> <strong>void</strong> run () {\n<a name=\"289\" href=\"#289\">289</a> \t\t\t\t\t\tSystem.out.println(<span class=\"string\">\"Creating thead to call updateDistributedModel()\"</span>);\n<a name=\"290\" href=\"#290\">290</a> \t\t\t\t\t\tupdateDistributedModel(message);\n<a name=\"291\" href=\"#291\">291</a> \t\t\t\t\t\t\n<a name=\"292\" href=\"#292\">292</a> \t\t\t\t\t\tSystem.out.println(<span class=\"string\">\"Finish thead that called updateDistributedModel()\"</span>);\n<a name=\"293\" href=\"#293\">293</a> \t\t\t\t\t}\n<a name=\"294\" href=\"#294\">294</a> \t\t\t\t});\n<a name=\"295\" href=\"#295\">295</a> \t\t\t\t\n<a name=\"296\" href=\"#296\">296</a> \t\t\t\t<em class=\"comment\">//model.getDisplay().update();</em>\n<a name=\"297\" href=\"#297\">297</a> \t\t\t\n<a name=\"298\" href=\"#298\">298</a> \t\t\t}\n<a name=\"299\" href=\"#299\">299</a> \t\t}\n<a name=\"300\" href=\"#300\">300</a> \t}\n<a name=\"301\" href=\"#301\">301</a> \n<a name=\"302\" href=\"#302\">302</a> \t<strong>public</strong> RGB getRGBFromString(String str) {\n<a name=\"303\" href=\"#303\">303</a> \t\tRGB rgb = <strong>null</strong>;\n<a name=\"304\" href=\"#304\">304</a> \t\t\n<a name=\"305\" href=\"#305\">305</a> \t\t<strong>if</strong> (str.startsWith(<span class=\"string\">\"rgb(\"</span>)) {\n<a name=\"306\" href=\"#306\">306</a> \t\t\t\n<a name=\"307\" href=\"#307\">307</a> \t\t\tString tail = str.substring(4); <em class=\"comment\">// remove the \"rgb(\"</em>\n<a name=\"308\" href=\"#308\">308</a> \t\t\ttail = tail.substring(0,tail.length()-1); <em class=\"comment\">// remove the \")\"</em>\n<a name=\"309\" href=\"#309\">309</a> \t\t\t\n<a name=\"310\" href=\"#310\">310</a> \t\t\tStringTokenizer st = <strong>new</strong> StringTokenizer(tail,<span class=\"string\">\",\"</span>);\n<a name=\"311\" href=\"#311\">311</a> \t\t\t\n<a name=\"312\" href=\"#312\">312</a> \t\t\t<strong>int</strong> r = Integer.parseInt(st.nextToken());\n<a name=\"313\" href=\"#313\">313</a> \t\t\t<strong>int</strong> g = Integer.parseInt(st.nextToken());\n<a name=\"314\" href=\"#314\">314</a> \t\t\t<strong>int</strong> b = Integer.parseInt(st.nextToken());\n<a name=\"315\" href=\"#315\">315</a> \t\t\t\n<a name=\"316\" href=\"#316\">316</a> \t\t\t<em class=\"comment\">/*</em>\n<a name=\"317\" href=\"#317\">317</a> <em class=\"comment\">\t\t\tSystem.out.print(\"RGB: \");</em>\n<a name=\"318\" href=\"#318\">318</a> <em class=\"comment\">\t\t\tSystem.out.print(r+\", \");</em>\n<a name=\"319\" href=\"#319\">319</a> <em class=\"comment\">\t\t\tSystem.out.print(g+\", \");</em>\n<a name=\"320\" href=\"#320\">320</a> <em class=\"comment\">\t\t\tSystem.out.println(b);</em>\n<a name=\"321\" href=\"#321\">321</a> <em class=\"comment\">\t\t\t*/</em>\n<a name=\"322\" href=\"#322\">322</a> \t\t\t\n<a name=\"323\" href=\"#323\">323</a> \t\t\trgb = <strong>new</strong> RGB(r,g,b);\n<a name=\"324\" href=\"#324\">324</a> \t\t\t\n<a name=\"325\" href=\"#325\">325</a> \t\t} <strong>else</strong> {\n<a name=\"326\" href=\"#326\">326</a> \t\t\tSystem.out.println(<span class=\"string\">\"Not a valid RGB format: \"</span>+str);\n<a name=\"327\" href=\"#327\">327</a> \t\t}\n<a name=\"328\" href=\"#328\">328</a> \t\t\n<a name=\"329\" href=\"#329\">329</a> \t\t<strong>return</strong> rgb;\n<a name=\"330\" href=\"#330\">330</a> \t}\n<a name=\"331\" href=\"#331\">331</a> \t\n<a name=\"332\" href=\"#332\">332</a> \t\n<a name=\"333\" href=\"#333\">333</a> \t<strong>private</strong> <strong>void</strong> updateDistributedModel(YanceesEvent message) {\n<a name=\"334\" href=\"#334\">334</a> \t\t<strong>if</strong> (message.containsAttribute(MessageProcessor.ATTR_ACTION)) {\n<a name=\"335\" href=\"#335\">335</a> \t\t\tString actionCommand = <strong>null</strong>;\n<a name=\"336\" href=\"#336\">336</a> \t\t\tString ownerPeer = <strong>null</strong>;\n<a name=\"337\" href=\"#337\">337</a> \t\t\t\n<a name=\"338\" href=\"#338\">338</a> \t\t\t<strong>if</strong> (print)\n<a name=\"339\" href=\"#339\">339</a> \t\t\t\tSystem.out.println(<span class=\"string\">\"EventProcessor: updateDistirbutedModel() for message \"</span>+message);\n<a name=\"340\" href=\"#340\">340</a> \n<a name=\"341\" href=\"#341\">341</a> \t\t\t<strong>try</strong> {\n<a name=\"342\" href=\"#342\">342</a> \n<a name=\"343\" href=\"#343\">343</a> \t\t\t\tactionCommand = message.getString(MessageProcessor.ATTR_ACTION);\n<a name=\"344\" href=\"#344\">344</a> \t\t\t\townerPeer = message.getString(MessageProcessor.ATTR_PEER_NAME);\n<a name=\"345\" href=\"#345\">345</a> \n<a name=\"346\" href=\"#346\">346</a> \t\t\t\t<strong>if</strong> (actionCommand.equals(MessageProcessor.ACTION_ADD)) {\n<a name=\"347\" href=\"#347\">347</a> \t\t\t\t\t<strong>int</strong> level = Integer.parseInt(message\n<a name=\"348\" href=\"#348\">348</a> \t\t\t\t\t\t\t.getString(MessageProcessor.ATTR_LEVEL));\n<a name=\"349\" href=\"#349\">349</a> \t\t\t\t\tString filename = message\n<a name=\"350\" href=\"#350\">350</a> \t\t\t\t\t\t\t.getString(MessageProcessor.ATTR_FILE_NAME);\n<a name=\"351\" href=\"#351\">351</a> \t\t\t\t\tmodel.addFile(ownerPeer, filename, level);\n<a name=\"352\" href=\"#352\">352</a> \n<a name=\"353\" href=\"#353\">353</a> \t\t\t\t} <strong>else</strong> <strong>if</strong> (actionCommand\n<a name=\"354\" href=\"#354\">354</a> \t\t\t\t\t\t.equals(MessageProcessor.ACTION_ADD_PEER)) {\n<a name=\"355\" href=\"#355\">355</a> \t\t\t\t\t\n<a name=\"356\" href=\"#356\">356</a> \t\t\t\t\tString rgbColorString = message.getString(MessageProcessor.ATTR_COLOR);\n<a name=\"357\" href=\"#357\">357</a> \t\t\t\t\tSystem.out.println(<span class=\"string\">\"Read Color: \"</span>+rgbColorString);\n<a name=\"358\" href=\"#358\">358</a> \t\t\t\t\t\n<a name=\"359\" href=\"#359\">359</a> \t\t\t\t\tmodel.addPeer(ownerPeer, <strong>new</strong> Color(model.getDisplay(), getRGBFromString(rgbColorString)));\n<a name=\"360\" href=\"#360\">360</a> \n<a name=\"361\" href=\"#361\">361</a> \t\t\t\t} <strong>else</strong> <strong>if</strong> (actionCommand\n<a name=\"362\" href=\"#362\">362</a> \t\t\t\t\t\t.equals(MessageProcessor.ACTION_MOVE)) {\n<a name=\"363\" href=\"#363\">363</a> \t\t\t\t\t<strong>int</strong> level = Integer.parseInt(message\n<a name=\"364\" href=\"#364\">364</a> \t\t\t\t\t\t\t.getString(MessageProcessor.ATTR_LEVEL));\n<a name=\"365\" href=\"#365\">365</a> \t\t\t\t\tString filename = message\n<a name=\"366\" href=\"#366\">366</a> \t\t\t\t\t\t\t.getString(MessageProcessor.ATTR_FILE_NAME);\n<a name=\"367\" href=\"#367\">367</a> \t\t\t\t\tmodel.moveFile(ownerPeer, filename, level);\n<a name=\"368\" href=\"#368\">368</a> \n<a name=\"369\" href=\"#369\">369</a> \t\t\t\t} <strong>else</strong> <strong>if</strong> (actionCommand\n<a name=\"370\" href=\"#370\">370</a> \t\t\t\t\t\t.equals(MessageProcessor.ACTION_REMOVE)) {\n<a name=\"371\" href=\"#371\">371</a> \t\t\t\t\tString filename = message\n<a name=\"372\" href=\"#372\">372</a> \t\t\t\t\t\t\t.getString(MessageProcessor.ATTR_FILE_NAME);\n<a name=\"373\" href=\"#373\">373</a> \t\t\t\t\tmodel.removeFile(ownerPeer, filename);\n<a name=\"374\" href=\"#374\">374</a> \n<a name=\"375\" href=\"#375\">375</a> \t\t\t\t} <strong>else</strong> <strong>if</strong> (actionCommand\n<a name=\"376\" href=\"#376\">376</a> \t\t\t\t\t\t.equals(MessageProcessor.ACTION_SHUTDOWN)) {\n<a name=\"377\" href=\"#377\">377</a> \t\t\t\t\tmodel.shutdownPeer(ownerPeer);\n<a name=\"378\" href=\"#378\">378</a> \n<a name=\"379\" href=\"#379\">379</a> \t\t\t\t} <strong>else</strong> <strong>if</strong> (actionCommand\n<a name=\"380\" href=\"#380\">380</a> \t\t\t\t\t\t.equals(MessageProcessor.ACTION_READ)) {\n<a name=\"381\" href=\"#381\">381</a> \t\t\t\t\tString filename = message\n<a name=\"382\" href=\"#382\">382</a> \t\t\t\t\t\t\t.getString(MessageProcessor.ATTR_FILE_NAME);\n<a name=\"383\" href=\"#383\">383</a> \t\t\t\t\tString actor = message\n<a name=\"384\" href=\"#384\">384</a> \t\t\t\t\t\t\t.getString(MessageProcessor.ATTR_ACTOR);\n<a name=\"385\" href=\"#385\">385</a> \t\t\t\t\tmodel.readFile(ownerPeer, filename, actor);\n<a name=\"386\" href=\"#386\">386</a> \n<a name=\"387\" href=\"#387\">387</a> \t\t\t\t} <strong>else</strong> <strong>if</strong> (actionCommand\n<a name=\"388\" href=\"#388\">388</a> \t\t\t\t\t\t.equals(MessageProcessor.ACTION_WRITE)) {\n<a name=\"389\" href=\"#389\">389</a> \t\t\t\t\tString filename = message\n<a name=\"390\" href=\"#390\">390</a> \t\t\t\t\t\t\t.getString(MessageProcessor.ATTR_FILE_NAME);\n<a name=\"391\" href=\"#391\">391</a> \t\t\t\t\tString actor = message\n<a name=\"392\" href=\"#392\">392</a> \t\t\t\t\t\t\t.getString(MessageProcessor.ATTR_ACTOR);\n<a name=\"393\" href=\"#393\">393</a> \t\t\t\t\tmodel.writeFile(ownerPeer, filename, actor);\n<a name=\"394\" href=\"#394\">394</a> \n<a name=\"395\" href=\"#395\">395</a> \t\t\t\t}\n<a name=\"396\" href=\"#396\">396</a> \n<a name=\"397\" href=\"#397\">397</a> \t\t\t} <strong>catch</strong> (WrongAttributeTypeException e) {\n<a name=\"398\" href=\"#398\">398</a> \t\t\t\t<em class=\"comment\">// TODO Auto-generated catch block</em>\n<a name=\"399\" href=\"#399\">399</a> \t\t\t\te.printStackTrace();\n<a name=\"400\" href=\"#400\">400</a> \t\t\t} <strong>catch</strong> (AttributeNotFoundException e) {\n<a name=\"401\" href=\"#401\">401</a> \t\t\t\t<em class=\"comment\">// TODO Auto-generated catch block</em>\n<a name=\"402\" href=\"#402\">402</a> \t\t\t\te.printStackTrace();\n<a name=\"403\" href=\"#403\">403</a> \t\t\t}\n<a name=\"404\" href=\"#404\">404</a> \t\t\t<strong>if</strong> (actionCommand != <strong>null</strong>) {\n<a name=\"405\" href=\"#405\">405</a> \t\t\t\t<strong>if</strong> (actionCommand\n<a name=\"406\" href=\"#406\">406</a> \t\t\t\t\t\t.equalsIgnoreCase(MessageProcessor.ACTION_ADD)) {\n<a name=\"407\" href=\"#407\">407</a> \n<a name=\"408\" href=\"#408\">408</a> \t\t\t\t}\n<a name=\"409\" href=\"#409\">409</a> \t\t\t}\n<a name=\"410\" href=\"#410\">410</a> \t\t}\n<a name=\"411\" href=\"#411\">411</a> \n<a name=\"412\" href=\"#412\">412</a> \t}\n<a name=\"413\" href=\"#413\">413</a> \n<a name=\"414\" href=\"#414\">414</a> \t<em>/**<em>*</em></em>\n<a name=\"415\" href=\"#415\">415</a> <em>\t * Processes initial model as returned by the peer query requrest.</em>\n<a name=\"416\" href=\"#416\">416</a> <em>\t * </em>\n<a name=\"417\" href=\"#417\">417</a> <em>\t * @param message</em>\n<a name=\"418\" href=\"#418\">418</a> <em>\t *            is the return message having a list of peers, their files</em>\n<a name=\"419\" href=\"#419\">419</a> <em>\t *            with their respective sharing levels.</em>\n<a name=\"420\" href=\"#420\">420</a> <em>\t */</em>\n<a name=\"421\" href=\"#421\">421</a> \n<a name=\"422\" href=\"#422\">422</a> \t<strong>private</strong> <strong>void</strong> createDistributedModel(YanceesEvent message) {\n<a name=\"423\" href=\"#423\">423</a> \n<a name=\"424\" href=\"#424\">424</a> \t\t<strong>if</strong> (print)\n<a name=\"425\" href=\"#425\">425</a> \t\t\tSystem.out.println(<span class=\"string\">\"EventProcessor: createDistirbutedModel() for message \"</span>+message);\n<a name=\"426\" href=\"#426\">426</a> \t\t\n<a name=\"427\" href=\"#427\">427</a> \t\t<em class=\"comment\">// First add all peers</em>\n<a name=\"428\" href=\"#428\">428</a> \t\t<strong>for</strong> (Iterator iter = message.getAttributeNamesIterator(); iter\n<a name=\"429\" href=\"#429\">429</a> \t\t\t\t.hasNext();) {\n<a name=\"430\" href=\"#430\">430</a> \t\t\tString attName = (String) iter.next();\n<a name=\"431\" href=\"#431\">431</a> \n<a name=\"432\" href=\"#432\">432</a> \t\t\t<strong>try</strong> {\n<a name=\"433\" href=\"#433\">433</a> \n<a name=\"434\" href=\"#434\">434</a> \t\t\t\t<strong>if</strong> (attName.startsWith(PeerQueryProtocol.PEER)) {\n<a name=\"435\" href=\"#435\">435</a> \t\t\t\t\t\n<a name=\"436\" href=\"#436\">436</a> \t\t\t\t\tString ownerPeer = attName.substring(PeerQueryProtocol.PEER.length());\n<a name=\"437\" href=\"#437\">437</a> \t\t\t\t\tString ownerColorRGBString = message.getString(attName);\n<a name=\"438\" href=\"#438\">438</a> \t\t\t\t\t\n<a name=\"439\" href=\"#439\">439</a> \t\t\t\t\tmodel.addPeer(ownerPeer, <strong>new</strong> org.eclipse.swt.graphics.Color(model.getDisplay(), <strong>this</strong>.getRGBFromString(ownerColorRGBString)));\n<a name=\"440\" href=\"#440\">440</a> \t\t\t\t}\n<a name=\"441\" href=\"#441\">441</a> \n<a name=\"442\" href=\"#442\">442</a> \t\t\t} <strong>catch</strong> (NumberFormatException e) {\n<a name=\"443\" href=\"#443\">443</a> \t\t\t\t<em class=\"comment\">// TODO Auto-generated catch block</em>\n<a name=\"444\" href=\"#444\">444</a> \t\t\t\te.printStackTrace();\n<a name=\"445\" href=\"#445\">445</a> \t\t\t} <strong>catch</strong> (WrongAttributeTypeException e) {\n<a name=\"446\" href=\"#446\">446</a> \t\t\t\t<em class=\"comment\">// TODO Auto-generated catch block</em>\n<a name=\"447\" href=\"#447\">447</a> \t\t\t\te.printStackTrace();\n<a name=\"448\" href=\"#448\">448</a> \t\t\t} <strong>catch</strong> (AttributeNotFoundException e) {\n<a name=\"449\" href=\"#449\">449</a> \t\t\t\t<em class=\"comment\">// TODO Auto-generated catch block</em>\n<a name=\"450\" href=\"#450\">450</a> \t\t\t\te.printStackTrace();\n<a name=\"451\" href=\"#451\">451</a> \t\t\t}\n<a name=\"452\" href=\"#452\">452</a> \t\t}\n<a name=\"453\" href=\"#453\">453</a> \n<a name=\"454\" href=\"#454\">454</a> \t\t<em class=\"comment\">// Then add all files</em>\n<a name=\"455\" href=\"#455\">455</a> \t\t<strong>for</strong> (Iterator iter = message.getAttributeNamesIterator(); iter\n<a name=\"456\" href=\"#456\">456</a> \t\t\t\t.hasNext();) {\n<a name=\"457\" href=\"#457\">457</a> \t\t\tString attName = (String) iter.next();\n<a name=\"458\" href=\"#458\">458</a> \n<a name=\"459\" href=\"#459\">459</a> \t\t\t<strong>try</strong> {\n<a name=\"460\" href=\"#460\">460</a> \t\t\t\t<strong>if</strong> (attName.startsWith(PeerQueryProtocol.FILE)) {\n<a name=\"461\" href=\"#461\">461</a> \n<a name=\"462\" href=\"#462\">462</a> \t\t\t\t\t<strong>int</strong> sharingLevel = Integer.parseInt(message\n<a name=\"463\" href=\"#463\">463</a> \t\t\t\t\t\t\t.getString(attName));\n<a name=\"464\" href=\"#464\">464</a> \t\t\t\t\tString ownerFile = attName.substring(PeerQueryProtocol.FILE.length());\n<a name=\"465\" href=\"#465\">465</a> \t\t\t\t\t<em class=\"comment\">//System.out.println(\"owner+File = \"+ownerFile);</em>\n<a name=\"466\" href=\"#466\">466</a> \t\t\t\t\t\n<a name=\"467\" href=\"#467\">467</a> \t\t\t\t\tString owner = ownerFile.substring(0, ownerFile.indexOf(<span class=\"string\">\"/\"</span>));\n<a name=\"468\" href=\"#468\">468</a> \t\t\t\t\tString file = ownerFile.substring(ownerFile.indexOf(<span class=\"string\">\"/\"</span>)+1); \n<a name=\"469\" href=\"#469\">469</a> \t\t\t\t\t\t\t\t\t\n<a name=\"470\" href=\"#470\">470</a> \t\t\t\t\t<em class=\"comment\">/*</em>\n<a name=\"471\" href=\"#471\">471</a> <em class=\"comment\">\t\t\t\t\tSystem.out.println(\"got owner \"+owner);</em>\n<a name=\"472\" href=\"#472\">472</a> <em class=\"comment\">\t\t\t\t\tSystem.out.println(\"got file \"+file);</em>\n<a name=\"473\" href=\"#473\">473</a> <em class=\"comment\">\t\t\t\t\t*/</em>\n<a name=\"474\" href=\"#474\">474</a> \t\t\t\t\t\n<a name=\"475\" href=\"#475\">475</a> \t\t\t\t\tmodel.addFile(owner, file, sharingLevel);\n<a name=\"476\" href=\"#476\">476</a> \t\t\t\t}\n<a name=\"477\" href=\"#477\">477</a> \t\t\t} <strong>catch</strong> (NumberFormatException e) {\n<a name=\"478\" href=\"#478\">478</a> \t\t\t\t<em class=\"comment\">// TODO Auto-generated catch block</em>\n<a name=\"479\" href=\"#479\">479</a> \t\t\t\te.printStackTrace();\n<a name=\"480\" href=\"#480\">480</a> \t\t\t} <strong>catch</strong> (WrongAttributeTypeException e) {\n<a name=\"481\" href=\"#481\">481</a> \t\t\t\t<em class=\"comment\">// TODO Auto-generated catch block</em>\n<a name=\"482\" href=\"#482\">482</a> \t\t\t\te.printStackTrace();\n<a name=\"483\" href=\"#483\">483</a> \t\t\t} <strong>catch</strong> (AttributeNotFoundException e) {\n<a name=\"484\" href=\"#484\">484</a> \t\t\t\t<em class=\"comment\">// TODO Auto-generated catch block</em>\n<a name=\"485\" href=\"#485\">485</a> \t\t\t\te.printStackTrace();\n<a name=\"486\" href=\"#486\">486</a> \t\t\t}\n<a name=\"487\" href=\"#487\">487</a> \n<a name=\"488\" href=\"#488\">488</a> \t\t}\n<a name=\"489\" href=\"#489\">489</a> \t\t<strong>this</strong>.createdInitialModel = <strong>true</strong>;\n<a name=\"490\" href=\"#490\">490</a> \n<a name=\"491\" href=\"#491\">491</a> \t}\n<a name=\"492\" href=\"#492\">492</a> \n<a name=\"493\" href=\"#493\">493</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 32724.0}