{"text": "This is Google s cache of http www vdlande com VHDL sig dec html It is a snapshot of the page as it appeared on Oct 15 2 9 21 46 38 GMT The current page could have changed in the meantime Learn moreText only version These search terms are highlighted vhdl These terms only appear in links pointing to this page reference guide vdlande Signal DeclarationDeclaration used in Architecture Syntax signal signal name type signal signal name type initial value See LRM section 4 3 1 2 Rules and Examples signal SUM CARRY1 CARRY2 bit signal COUNT integer range to 15 signal CLK RESET std ulogic signal ALARM TIME T CLOCK TIME 1 2 signal CONDITION boolean false During elaboration eacg signal is set to an initial value If a signal is not given an explicit initial value it will default to the leftmost value left of its declared type signal I integer range to 3 I will initialise to signal X std logic X will initialise to U A signal which is driven by more than one process concurrentstatement or component instance must be declared with a resolved type e g std logic or std logic vector architecture COND of TRI STATE is signal TRI BIT std logic begin TRI BIT BIT 1 when EN 1 1 else Z TRI BIT BIT 2 when EN 2 1 else Z end COND Signals may not be declared in a processor subprogram except as formal parameters Ports declared in an entity are accessible as signals within the associated architecture s and do not need to be redeclared A signal of a resolved type may be declared as a guarded resolved signal This is required if all drivers to a signal may be turned off through guarded assignments signal signal name resolved type signal kind The signal kind keyword may be register or bus Guarded resolved signals of kind register retain their current value when drive is turned off whereas signals of kind bus rely on the resolution function to provide a no drive value Synthesis Issues Signals are supported for synthesis providing they are of a type acceptable to the logic synthesis tool The signal kinds register of bus are usually ignored Only certain resolved signal types are supported Most tools recognise the std logic 1164 types Whats New in 93 Signal Declarations have not changed in VHDL 93 ", "_id": "http://www.ics.uci.edu/~jmoorkan/vhdlref/sig_dec.html", "title": "vhdl reference guide - signal declaration", "html": "<html><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\">\n<!-- base href=\"http://www.vdlande.com/VHDL/sig_dec.html\" --><title>VHDL Reference Guide - Signal Declaration</title></head><body bgcolor=\"mintcream\"><div style=\"border: 1px solid rgb(153, 153, 153); margin: -1px -1px 0pt; padding: 0pt; background: rgb(255, 255, 255) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial;\"><div style=\"border: 1px solid rgb(153, 153, 153); margin: 12px; padding: 8px; background: rgb(221, 221, 221) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; font-family: arial,sans-serif; font-style: normal; font-variant: normal; font-size: 13px; line-height: normal; font-size-adjust: none; font-stretch: normal; -x-system-font: none; color: rgb(0, 0, 0); font-weight: normal; text-align: left;\">This is Google's cache of <a href=\"http://www.vdlande.com/VHDL/sig_dec.html\" style=\"text-decoration: underline; color: rgb(0, 0, 204);\">http://www.vdlande.com/VHDL/sig_dec.html</a>. It is a snapshot of the page as it appeared on Oct 15, 2009 21:46:38 GMT. The <a href=\"http://www.vdlande.com/VHDL/sig_dec.html\" style=\"text-decoration: underline; color: rgb(0, 0, 204);\">current page</a> could have changed in the meantime. <a href=\"http://www.google.com/intl/en/help/features_list.html#cached\" style=\"text-decoration: underline; color: rgb(0, 0, 204);\">Learn more</a><br><br><div style=\"float: right;\"><a href=\"http://74.125.155.132/search?q=cache:Lln2fpfu5zsJ:www.vdlande.com/VHDL/sig_dec.html+site:www.vdlande.com+VHDL+reference+guide+vdlande&amp;hl=en&amp;client=firefox-a&amp;gl=us&amp;strip=1\" style=\"text-decoration: underline; color: rgb(0, 0, 204);\">Text-only version</a></div>\n<div>These search terms are highlighted: <span style=\"background: rgb(255, 255, 102) none repeat scroll 0% 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; color: black; font-weight: bold;\">vhdl</span>&nbsp;These terms only appear in links pointing to this page: <span style=\"font-weight: bold;\">reference</span>&nbsp;<span style=\"font-weight: bold;\">guide</span>&nbsp;<span style=\"font-weight: bold;\">vdlande</span>&nbsp;&nbsp;</div></div></div><div style=\"position: relative;\">\n\n\n\n\n\n<div align=\"center\">\n<table border=\"0\" cellpadding=\"5\">\n<caption><b>Signal Declaration</b></caption>\n<tbody><tr><td colspan=\"3\"><hr></td></tr>\n<tr>\n<td bgcolor=\"lightcyan\">Declaration</td>\n<td>---- used in ----&gt;</td>\n<td bgcolor=\"lightgreen\">Architecture</td>\n</tr>\n</tbody></table>\n\n<p><table border=\"0\">\n<tbody><tr><td><hr width=\"150\"></td><td>Syntax</td><td><hr width=\"150\"></td></tr>\n</tbody></table></p><p>\n</p></div>\n\n<div align=\"center\">\n<table border=\"1\" cellpadding=\"5\" width=\"40%\">\n<tbody><tr>\n<td><pre>signal signal_name : type;</pre></td>\n</tr>\n</tbody></table><p>\n</p></div>\n\n<div align=\"center\">\n<table border=\"1\" cellpadding=\"5\" width=\"40%\">\n<tbody><tr>\n<td><pre>signal signal_name : type := initial_value;</pre></td>\n</tr>\n</tbody></table><p>\n</p></div>\n\n<div align=\"center\">\nSee LRM section 4.3.1.2\n\n<p><table align=\"center\" border=\"0\">\n<tbody><tr><td><hr width=\"150\"></td><td>Rules and Examples</td><td><hr width=\"150\"></td></tr>\n</tbody></table></p><p>\n</p></div>\n\n<div align=\"left\">\n<table border=\"1\" cellpadding=\"5\" width=\"80%\">\n<tbody><tr>\n<td><pre>signal SUM, CARRY1, CARRY2 : bit;\nsignal COUNT : integer range 0 to 15;\nsignal CLK, RESET : std_ulogic := '0';\nsignal ALARM_TIME : T_CLOCK_TIME := (1,2,0,0);\nsignal CONDITION : boolean := false;\n</pre></td>\n</tr>\n</tbody></table><p>\n</p></div>\n\n<div align=\"center\">\n<table border=\"1\" cellpadding=\"5\" width=\"60%\">\n<tbody><tr>\n<td>During elaboration, eacg signal is set to an initial value. If a\nsignal is not given an explicit initial value, it will default to the\nleftmost value (<b>'left</b>) of its declared type:\n<pre>signal I : integer range 0 to 3;\n-- I will initialise to 0\nsignal X : std_logic;\n-- X will initialise to 'U'</pre></td>\n</tr>\n</tbody></table><p>\n</p></div>\n\n<div align=\"left\">\n<table border=\"1\" cellpadding=\"5\" width=\"70%\">\n<tbody><tr>\n<td>A signal which is driven by more than one process,\nconcurrentstatement or component instance, must be declared with a\n<b>resolved type</b>, e.g.std_logic or std_logic_vector:\n<pre>architecture COND of TRI_STATE is\n  signal TRI_BIT: std_logic;\nbegin\n  TRI_BIT &lt;= BIT_1 when EN_1 = '1'\n        else 'Z';\n  TRI_BIT &lt;= BIT_2 when EN_2 = '1'\n        else 'Z';\nend COND;</pre></td>\n</tr>\n</tbody></table><p>\n</p></div>\n\n<div align=\"left\">\n<table border=\"1\" cellpadding=\"5\" width=\"40%\">\n<tbody><tr>\n<td>Signals may not be declared in a processor subprogram (except as\nformal parameters).</td>\n</tr>\n</tbody></table><p>\n</p></div>\n\n<div align=\"right\">\n<table border=\"1\" cellpadding=\"5\" width=\"40%\">\n<tbody><tr>\n<td>Ports declared in an entity are accessible as signals within the\nassociated architecture(s) and do not need to be redeclared.</td>\n</tr>\n</tbody></table><p>\n</p></div>\n\n<div align=\"center\">\n<table border=\"1\" cellpadding=\"5\" width=\"60%\">\n<tbody><tr>\n<td>A signal of a <b>resolved type</b> may be declared as a <b>guarded\nresolved</b> signal. This is required if all drivers to a signal may be\nturned off, through guarded assignments.\n<p>\nsignal signal_name : resolved_type signal_kind;\n</p><p>\nThe \"signal kind\" keyword may be <b>register</b> or <b>bus</b>. Guarded\nresolved signals of kind <b>register</b> retain their current value when\ndrive is turned off, whereas signals of kind <b>bus</b> rely on the\nresolution function to provide a \"no-drive\" value.</p></td>\n</tr>\n</tbody></table><p>\n</p></div>\n\n\n\n<div align=\"center\">\n<p><table align=\"center\" border=\"0\">\n<tbody><tr><td><hr width=\"150\"></td><td>Synthesis Issues</td><td><hr width=\"150\"></td></tr>\n</tbody></table></p><p>\n</p></div>\n\nSignals are supported for synthesis, providing they are of a type\nacceptable to the logic synthesis tool.\n<p>\nThe signal kinds <b>register</b> of <b>bus</b> are usually ignored.\n</p><p>\nOnly certain resolved signal types are supported. Most tools recognise\nthe <b>std_logic_1164</b> types.\n\n</p><div align=\"center\">\n<p><table border=\"0\">\n<tbody><tr><td><hr width=\"150\"></td><td>Whats New in '93</td><td><hr width=\"150\"></td></tr>\n</tbody></table></p><p>\n\nSignal Declarations have not changed in <b style=\"color: black; background-color: rgb(255, 255, 102);\">VHDL</b>-93.\n\n</p></div>\n\n<hr width=\"80%\">\n</div></body></html>", "id": 10800.0}