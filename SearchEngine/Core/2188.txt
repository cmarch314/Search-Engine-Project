{"text": "Here s the rubric that you will use for the peer grading for HW 7 If the source code doesn t compile run or produces the wrong output you will receive zero points Just to clarify your program must produce exactly this https raw githubusercontent com crista exercises in programming style master test pride and prejudice txt for pride and prejudice txt Remember that this is expected for all exercises If the exercise requires an extra output like the words containing z it also needs to be printed into the console Style constraints are violated Form is it only one source file per exercise There has to be exactly one file per exercise Four files in total plus the summary 5 points You will get points deducted if Hardcode the input file 5 points Don t take stop words txt from the parent folder 5 points Inappropriate data structures we mean inefficient or less than optimal for the constraints or lack of thereof at hand For example if there are no special constraints on the use of data structures lists are inappropriate for storing a large number of items that need to be searched up to 5 points per deduction Severe inefficiencies in algorithms To clarify your algorithms don t need to be perfect but there are some things that just shouldn t happen unless there s no other way to do it e g Reading stop words txt multiple times instead of keeping it in a collection Up to 5 points per deduction The code isn t written following good programming practices descriptive names short methods proper use of the language up to 5 points per deduction The file has been modified after Saturday 11 59 pm 1 per hour up to 25 of the final score As you can notice the maximum possible score is 1 Although we will normalize the score later on to adjust it with the readings and peer grading if we end up doing it Specific to HW7 In order to grade your assignment I will need both your compiled custom implementations e g JAR so files and the source code of all your files Of course if you re using an interpreted language such as php or Javascript you will only include the source code For statically typed languages remember that you need to architect your program in the following way I will use Java as an example 1 JAR file with the main program This one will define the skeleton of your program It will only read the config file and delegate the real work to the custom implementations It is also responsible for dynamically loading and instantiating them 1 JAR file with the interfaces 1 JAR file with the first set of alternatives i e ExtractWords Frequencies and Print for 19 4 1 JAR file with the second set of alternatives A readme file stating which commands I must run to 1 compile your code and 2 run your program This requirement is particularly important for this exercise since you will have different dependencies at compile time and run time You can make your JAR files as you want but I guess the easiest way is using the Export feature in Eclipse or other IDE you use You could also use Maven or ANT to create them but it is going to be more difficult Once you have your files upload them to C9 Again do not forget to also include the source code of all of your files or I won t be able to grade your assignment Folder structure Please follow this folder structure for exercise 19 ", "_id": "http://www.ics.uci.edu/~mgiorgio/inf212/rubric-hw6.html", "title": "rubric hw7", "html": "<html>\n<head>\n<title>Rubric HW7</title>\n</head>\n<body>\n<p>Here's the rubric that you will use for the peer-grading for HW 7:</p>\n<ol>\n\t<li>If the source code doesn't compile/run <b>or produces the wrong output</b>, you will receive zero points. Just to clarify, your program must produce <b>exactly</b> this: <A href=\"https://raw.githubusercontent.com/crista/exercises-in-programming-style/master/test/pride-and-prejudice.txt\">https://raw.githubusercontent.com/crista/exercises-in-programming-style/master/test/pride-and-prejudice.txt</A> for pride-and-prejudice.txt. Remember that this is expected for all exercises. If the exercise requires an extra output (like the words containing \"z\"), it also needs to be printed into the console.</li>\n\t<li>Style constraints are violated.</li>\n\t<li>Form: is it only one source file per exercise? There has to be exactly one file per exercise. Four files in total (plus the summary) <i>(5 points)</i></li>\n\t<li>You will get points deducted if:\n\t\t<ol>\n\t\t\t<li>Hardcode the input file. <i>(5 points)</i></li>\n\t\t\t<li>Don't take stop_words.txt from the parent folder. <i>(5 points)</i></li>\n\t\t\t<li>Inappropriate data structures: we mean inefficient, or less than optimal, for the constraints (or lack of thereof) at hand. For example, if there are no special constraints on the use of data structures, lists are inappropriate for storing a large number of items that need to be searched. <i>(up to 5 points per deduction)</i></li>\n\t\t\t<li>Severe inefficiencies in algorithms. To clarify, your algorithms don't need to be perfect but there are some things that just shouldn't happen unless there's no other way to do it (e.g. Reading stop_words.txt multiple times instead of keeping it in a collection). <i>(Up to 5 points per deduction)</i></li>\n\t\t\t<li>The code isn't written following good programming practices (descriptive names, short methods, proper use of the language)? <i>(up to 5 points per deduction)</i></li>\n\t\t\t<li>The file has been modified after Saturday 11:59 pm. <i>(1% per hour up to 25% of the final score)</i></li>\n\t\t</ol>\n\t</li>\n\t</ol>\n\t</li>\n</ol>\n<p>As you can notice, the maximum possible score is 100. (Although, we will normalize the score later on to adjust it with the readings and peer grading, if we end up doing it)</p>\n\n<p><b>Specific to HW7:</b></p>\n<ul>\n\t<li>In order to grade your assignment, I will need <b>both</b> your compiled custom implementations (e.g. JAR, .so files) <b>and the source code of all your files</b>. Of course, if you're using an interpreted language such as php or Javascript, you will only include the source code.</li>\n\t<li>For statically typed languages, remember that you need to architect your program in the following way (I will use Java as an example):\n\t\t<ul>\n\t\t\t<li>1 JAR file with the main program: This one will define the \"skeleton\" of your program. It will only read the config file and delegate the real work to the custom implementations. It is also responsible for dynamically loading and instantiating them.</li>\n\t\t\t<li>1 JAR file with the interfaces.</li>\n\t\t\t<li>1 JAR file with the first set of alternatives (i.e. ExtractWords, Frequencies and Print [for 19.4])</li>\n\t\t\t<li>1 JAR file with the second set of alternatives.\n\t\t\t<li><b>A readme file stating which commands I must run to 1) compile your code and 2) run your program.</b>. This requirement is particularly important for this exercise since you will have different dependencies at compile time and run time.</li>\n\t\t</ul>\n\t</li>\n\t<li>You can make your JAR files as you want but I guess the easiest way is using the Export feature in Eclipse or other IDE you use. You could also use Maven or ANT to create them but it is going to be more difficult. Once you have your files, upload them to C9. Again, do <b>not</b> forget to also include the source code of all of your files or I won't be able to grade your assignment.</li>\n</ul>\n<p><b>Folder structure</b></p>\n<p>Please, follow this folder structure for exercise 19:</p>\n<img src=\"folder_structure_hw6.png\" />\n</body>\n</html>\n", "id": 2188.0}