{"text": "Main Page Modules Data Structures File List Data Fields Globals Related Pages Vpmg classA wrapper for Mike Holst s PMG multigrid code More Filesfile vpmg h Contains declarations for class Vpmg Data Structuresstruct sVpmg Contains public data members for Vpmg class module More Defines define VPMGMAXPART 2 Typedefs typedef sVpmg Vpmg Declaration of the Vpmg class as the Vpmg structure Functionsunsigned long int Vpmg memChk Vpmg thee Return the memory used by this structure and its contents in bytes Vpmg Vpmg ctor Vpmgp parms Vpbe pbe int focusFlag Vpmg pmgOLD MGparm mgparm PBEparm calcEnergy energyFlag Constructor for the Vpmg class allocates new memory int Vpmg ctor2 Vpmg thee Vpmgp parms Vpbe pbe int focusFlag Vpmg pmgOLD MGparm mgparm PBEparm calcEnergy energyFlag FORTRAN stub constructor for the Vpmg class uses previously allocated memory void Vpmg dtor Vpmg thee Object destructor void Vpmg dtor2 Vpmg thee FORTRAN stub object destructor int Vpmg fillco Vpmg thee Vsurf Meth surfMeth double splineWin Vchrg Meth chargeMeth int useDielXMap Vgrid dielXMap int useDielYMap Vgrid dielYMap int useDielZMap Vgrid dielZMap int useKappaMap Vgrid kappaMap int useChargeMap Vgrid chargeMap Fill the coefficient arrays prior to solving the equation int Vpmg solve Vpmg thee Solve the PBE using PMG int Vpmg solveLaplace Vpmg thee Solve Poisson s equation with a homogeneous Laplacian operator using the solvent dielectric constant This solution is performed by a sine wave decomposition double Vpmg energy Vpmg thee int extFlag Get the total electrostatic energy double Vpmg qfEnergy Vpmg thee int extFlag Get the fixed charge contribution to the electrostatic energy double Vpmg qfAtomEnergy Vpmg thee Vatom atom Get the per atom fixed charge contribution to the electrostatic energy double Vpmg qmEnergy Vpmg thee int extFlag Get the mobile charge contribution to the electrostatic energy double Vpmg dielEnergy Vpmg thee int extFlag Get the polarization contribution to the electrostatic energy double Vpmg npEnergy Vpmg thee int extFlag Get the apolar energy double Vpmg dielGradNorm Vpmg thee Get the integral of the gradient of the dielectric function int Vpmg force Vpmg thee double force int atomID Vsurf Meth srfm Vchrg Meth chgm Calculate the total force on the specified atom in units of k B T AA int Vpmg qfForce Vpmg thee double force int atomID Vchrg Meth chgm Calculate the charge field force on the specified atom in units of k B T AA int Vpmg dbnpForce Vpmg thee double dbForce double npForce int atomID Vsurf Meth srfm Calculate the dielectric boundary and apolar forces on the specified atom in units of k B T AA int Vpmg ibForce Vpmg thee double force int atomID Vsurf Meth srfm Calculate the osmotic pressure on the specified atom in units of k B T AA void Vpmg setPart Vpmg thee double lowerCorner 3 double upperCorner 3 int bflags 6 Set partition information which restricts the calculation of observables to a rectangular subset of the problem domain void Vpmg unsetPart Vpmg thee Remove partition restrictions int Vpmg fillArray Vpmg thee double vec Vdata Type type double parm Vhal PBEType pbetype Fill the specified array with accessibility values void Vpmg printColComp Vpmg thee char path 72 char title 72 char mxtype 3 int flag Print out a column compressed sparse matrix in Harwell Boeing format Detailed Description A wrapper for Mike Holst s PMG multigrid code Note Many of the routines and macros are borrowed from the main c driver written by Mike Holst provided with the PMG code Define Documentation define VPMGMAXPART 2 The maximum number of partitions the mesh can be divided into Function Documentation Vpmg Vpmg ctor Vpmgp parms Vpbe pbe int focusFlag Vpmg pmgOLD MGparm mgparm PBEparm calcEnergy energyFlag Constructor for the Vpmg class allocates new memory Author Nathan Baker Returns Pointer to newly allocated Vpmg object Parameters pbe PMG parameter object focusFlag PBE specific variables pmgOLD 1 for focusing otherwise mgparm Old Vpmg object to use for boundary conditions energyFlag MGparm parameter object for boundary conditions What types of energies to calculate int Vpmg ctor2 Vpmg thee Vpmgp parms Vpbe pbe int focusFlag Vpmg pmgOLD MGparm mgparm PBEparm calcEnergy energyFlag FORTRAN stub constructor for the Vpmg class uses previously allocated memory Author Nathan Baker Returns 1 if successful otherwise Parameters parms Memory location for object pbe PMG parameter object focusFlag PBE specific variables pmgOLD 1 for focusing otherwise mgparm Old Vpmg object to use for boundary conditions can be VNULL if focusFlag energyFlag MGparm parameter object for boundary conditions can be VNULL if focusFlag What types of energies to calculate ignored if focusFlag int Vpmg dbnpForce Vpmg thee double dbForce double npForce int atomID Vsurf Meth srfm Calculate the dielectric boundary and apolar forces on the specified atom in units of k B T AA Author Nathan Baker Note Using the force evaluation methods of Im et al Roux group Comput Phys Commun 111 59 75 1998 However this gives the whole self interactions included force reaction field forces will have to be calculated at higher level No contributions are made from higher levels of focusing Returns 1 if successful otherwise Parameters dbForce Vpmg object npForce 3 sizeof double space to hold the dielectric boundary force in units of k B T AA atomID 3 sizeof double space to hold the apolar boundary force in units of k B T AA srfm Valist ID of desired atom Surface discretization method double Vpmg dielEnergy Vpmg thee int extFlag Get the polarization contribution to the electrostatic energy Using the solution at the finest mesh level get the electrostatic energy due to the interaction of the mobile charges with the potential where epsilon is the dielectric parameter and u x is the dimensionless electrostatic potential The energy is scaled to units of k b T Author Nathan Baker Note The value of this observable may be modified by setting restrictions on the subdomain over which it is calculated Such limits can be set via Vpmg setPart and are generally useful for parallel runs Returns The polarization electrostatic energy in units of k B T Parameters extFlag Vpmg object If this was a focused calculation include 1 for serial calculations or ignore for parallel calculations energy contributions from outside the focusing domain double Vpmg dielGradNorm Vpmg thee Get the integral of the gradient of the dielectric function Using the dielectric map at the finest mesh level calculate the integral of the norm of the dielectric function gradient routines of Im et al see Vpmg dbnpForce for reference where epsilon is the dielectric parameter The integral is returned in units of A 2 Author Nathan Baker restrictions on the subdomain over which it is calculated Such limits can be set via Vpmg setPart and are generally useful for parallel runs Returns The integral in units of A 2 Parameters thee Vpmg object void Vpmg dtor Vpmg thee Object destructor Author Nathan Baker Parameters thee Pointer to memory location of object to be destroyed void Vpmg dtor2 Vpmg thee FORTRAN stub object destructor Author Nathan Baker Parameters thee Pointer to object to be destroyed double Vpmg energy Vpmg thee int extFlag Get the total electrostatic energy Author Nathan Baker Note The value of this observable may be modified by setting restrictions on the subdomain over which it is calculated Such limits can be set via Vpmg setPart and are generally useful for parallel runs Returns The electrostatic energy in units of k B T Parameters extFlag Vpmg object If this was a focused calculation include 1 for serial calculations or ignore for parallel calculations energy contributions from outside the focusing domain int Vpmg fillArray Vpmg thee double vec Vdata Type type double parm Vhal PBEType pbetype Fill the specified array with accessibility values Author Nathan Baker Returns 1 if successful otherwise Parameters vec Vpmg object type A nx ny nz sizeof double array to contain the values to be written parm What to write pbetype Parameter for data type definition if needed Parameter for PBE type if needed int Vpmg fillco Vpmg thee Vsurf Meth surfMeth double splineWin Vchrg Meth chargeMeth int useDielXMap Vgrid dielXMap int useDielYMap Vgrid dielYMap int useDielZMap Vgrid dielZMap int useKappaMap Vgrid kappaMap int useChargeMap Vgrid chargeMap Fill the coefficient arrays prior to solving the equation Author Nathan Baker Returns 1 if successful otherwise Parameters surfMeth Vpmg object splineWin Surface discretization method chargeMeth Spline window in A for surfMeth VSM SPLINE useDielXMap Charge discretization method dielXMap Boolean to use dielectric map argument useDielYMap External dielectric map dielYMap Boolean to use dielectric map argument useDielZMap External dielectric map dielZMap Boolean to use dielectric map argument useKappaMap External dielectric map kappaMap Boolean to use kappa map argument useChargeMap External kappa map chargeMap Boolean to use charge map argument External charge map int Vpmg force Vpmg thee double force int atomID Vsurf Meth srfm Vchrg Meth chgm Calculate the total force on the specified atom in units of k B T AA Author Nathan Baker Note Using the force evaluation methods of Im et al Roux group Comput Phys Commun 111 59 75 1998 However this gives the whole self interactions included force reaction field forces will have to be calculated at higher level No contributions are made from higher levels of focusing Returns 1 if successful otherwise Parameters force Vpmg object atomID 3 sizeof double space to hold the force in units of k B T AA srfm Valist ID of desired atom chgm Surface discretization method Charge discretization method int Vpmg ibForce Vpmg thee double force int atomID Vsurf Meth srfm Calculate the osmotic pressure on the specified atom in units of k B T AA Author Nathan Baker Note Using the force evaluation methods of Im et al Roux group Comput Phys Commun 111 59 75 1998 However this gives the whole self interactions included force reaction field forces will have to be calculated at higher level No contributions are made from higher levels of focusing Returns 1 if successful otherwise Parameters force Vpmg object atomID 3 sizeof double space to hold the boundary force in units of k B T AA srfm Valist ID of desired atom Surface discretization method unsigned long int Vpmg memChk Vpmg thee Return the memory used by this structure and its contents in bytes Author Nathan Baker Returns The memory used by this structure and its contents in bytes Parameters thee Object for memory check double Vpmg npEnergy Vpmg thee int extFlag Get the apolar energy Using the dielectric map at the finest mesh level calculate the surface area in a manner consistent with the force evaluation routines of Im et al see Vpmg dbnpForce and Vpmg dielGradNorm where epsilon is the dielectric parameter epsilon s is the dielectric constant for the solvent and epsilon p is the dielectric constant for the protein The apolar energy is then where gamma is the apolar coefficient set in Vpbe see Vpbe ctor The energy is returned in units of k b T Author Nathan Baker Note I personally feel that this routine should not find its way into the main APBS driver In this case the apolar energy is calculated in a manner consistent with the force evaluation but it is not the only possible apolar energy definition The value of this observable may be modified by setting restrictions on the subdomain over which it is calculated Such limits can be set via Vpmg setPart and are generally useful for parallel runs Returns The apolar energy in units of k B T Parameters extFlag Vpmg object If this was a focused calculation include 1 for serial calculations or ignore for parallel calculations energy contributions from outside the focusing domain void Vpmg printColComp Vpmg thee char path 72 char title 72 char mxtype 3 int flag Print out a column compressed sparse matrix in Harwell Boeing format Author Nathan Baker Bug Can this path variable be replaced with a Vio socket Parameters path Vpmg object title The file to which the matrix is to be written mxtype The title of the matrix flag The type of REAL valued matrix a 3 character string of the form R A where the can be one of S symmetric matrix U unsymmetric matrix H Hermitian matrix Z skew symmetric matrix R rectangular matrix The operator to compress Poisson operator 1 Linearization of the full Poisson Boltzmann operator around the current solution double Vpmg qfAtomEnergy Vpmg thee Vatom atom Get the per atom fixed charge contribution to the electrostatic energy Using the solution at the finest mesh level get the electrostatic energy due to the interaction of the fixed charges with the potential where q is the charge and r is the location of the atom of interest The result is returned in units of k B T Clearly no self interaction terms are removed A factor a 1 2 has to be included to convert this to a real energy Author Nathan Baker Note The value of this observable may be modified by setting restrictions on the subdomain over which it is calculated Such limits can be set via Vpmg setPart and are generally useful for parallel runs Returns The fixed charge electrostatic energy in units of k B T Parameters atom The Vpmg object The atom for energy calculations double Vpmg qfEnergy Vpmg thee int extFlag Get the fixed charge contribution to the electrostatic energy Using the solution at the finest mesh level get the electrostatic energy due to the interaction of the fixed charges with the potential and return the result in units of k B T Clearly no self interaction terms are removed A factor a 1 2 has to be included to convert this to a real energy Author Nathan Baker Note The value of this observable may be modified by setting restrictions on the subdomain over which it is calculated Such limits can be set via Vpmg setPart and are generally useful for parallel runs Returns The fixed charge electrostatic energy in units of k B T Parameters extFlag Vpmg object If this was a focused calculation include 1 for serial calculations or ignore for parallel calculations energy contributions from outside the focusing domain int Vpmg qfForce Vpmg thee double force int atomID Vchrg Meth chgm Calculate the charge field force on the specified atom in units of k B T AA Author Nathan Baker Note Using the force evaluation methods of Im et al Roux group Comput Phys Commun 111 59 75 1998 However this gives the whole self interactions included force reaction field forces will have to be calculated at higher level No contributions are made from higher levels of focusing Returns 1 if sucessful otherwise Parameters force Vpmg object atomID 3 sizeof double space to hold the force in units of k B T A chgm Valist ID of desired atom Charge discretization method double Vpmg qmEnergy Vpmg thee int extFlag Get the mobile charge contribution to the electrostatic energy Using the solution at the finest mesh level get the electrostatic energy due to the interaction of the mobile charges with the potential for the NPBE and for the LPBE Here i denotes the counterion species I s is the bulk ionic strength kappa 2 x is the modified Debye Huckel parameter c i is the concentration of species i q i is the charge of species i and u x is the dimensionless electrostatic potential The energy is scaled to units of k b T Author Nathan Baker Note The value of this observable may be modified by setting restrictions on the subdomain over which it is calculated Such limits can be set via Vpmg setPart and are generally useful for parallel runs Returns The mobile charge electrostatic energy in units of k B T Parameters extFlag Vpmg object If this was a focused calculation include 1 for serial calculations or ignore for parallel calculations energy contributions from outside the focusing domain void Vpmg setPart Vpmg thee double lowerCorner 3 double upperCorner 3 int bflags 6 Set partition information which restricts the calculation of observables to a rectangular subset of the problem domain Author Nathan Baker Parameters lowerCorner Vpmg object upperCorner Partition lower corner bflags Partition upper corner Booleans indicating whether a particular processor is on the boundary with another partition if the face is not bounded next to another partition and 1 otherwise int Vpmg solve Vpmg thee Solve the PBE using PMG Author Nathan Baker Returns 1 if successful otherwise Parameters thee Vpmg object int Vpmg solveLaplace Vpmg thee Solve Poisson s equation with a homogeneous Laplacian operator using the solvent dielectric constant This solution is performed by a sine wave decomposition Author Nathan Baker Returns 1 if successful otherwise Note This function is really only for testing purposes as the PMG multigrid solver can solve the homogeneous system much more quickly Perhaps we should implement an FFT version at some point Parameters thee Vpmg object void Vpmg unsetPart Vpmg thee Remove partition restrictions Author Nathan Baker Parameters thee Vpmg object Generated on Tue Dec 6 1 5 59 2 5 for APBS by 1 3 5", "_id": "http://www.ics.uci.edu/~dock/manuals/apbs/html/programmer/group__Vpmg.html", "title": "apbs: vpmg class", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=iso-8859-1\">\n<title>APBS: Vpmg class</title>\n<link href=\"apbs.css\" rel=\"stylesheet\" type=\"text/css\">\n</head><body>\n<!-- Generated by Doxygen 1.3.5 -->\n<div class=\"qindex\"><a class=\"qindex\" href=\"index.html\">Main&nbsp;Page</a> | <a class=\"qindex\" href=\"modules.html\">Modules</a> | <a class=\"qindex\" href=\"annotated.html\">Data&nbsp;Structures</a> | <a class=\"qindex\" href=\"files.html\">File&nbsp;List</a> | <a class=\"qindex\" href=\"functions.html\">Data&nbsp;Fields</a> | <a class=\"qindex\" href=\"globals.html\">Globals</a> | <a class=\"qindex\" href=\"pages.html\">Related&nbsp;Pages</a></div>\n<h1>Vpmg class</h1>A wrapper for Mike Holst's PMG multigrid code.  \n<a href=\"#_details\">More...</a><table border=0 cellpadding=0 cellspacing=0>\n<tr><td></td></tr>\n<tr><td colspan=2><br><h2>Files</h2></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>file &nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"vpmg_8h.html\">vpmg.h</a></td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Contains declarations for class Vpmg. <br><br></td></tr>\n\n<p>\n<tr><td colspan=2><br><h2>Data Structures</h2></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>struct &nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"structsVpmg.html\">sVpmg</a></td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Contains public data members for Vpmg class/module. </em> <a href=\"structsVpmg.html#_details\">More...</a><em><br><br></td></tr>\n<tr><td colspan=2><br><h2>Defines</h2></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>#define&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga24\">VPMGMAXPART</a>&nbsp;&nbsp;&nbsp;2000</td></tr>\n\n<tr><td colspan=2><br><h2>Typedefs</h2></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top><a class=\"anchor\" name=\"ga0\" doxytag=\"Vpmg::Vpmg\" ></a>\ntypedef <a class=\"el\" href=\"structsVpmg.html\">sVpmg</a>&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga0\">Vpmg</a></td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Declaration of the Vpmg class as the Vpmg structure. <br><br></td></tr>\n<tr><td colspan=2><br><h2>Functions</h2></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>unsigned long int&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga1\">Vpmg_memChk</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Return the memory used by this structure (and its contents) in bytes.  <a href=\"#ga1\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top><a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga2\">Vpmg_ctor</a> (<a class=\"el\" href=\"structsVpmgp.html\">Vpmgp</a> *parms, <a class=\"el\" href=\"structsVpbe.html\">Vpbe</a> *pbe, int focusFlag, <a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *pmgOLD, <a class=\"el\" href=\"structsMGparm.html\">MGparm</a> *mgparm, <a class=\"el\" href=\"group__PBEparm.html#ga0\">PBEparm_calcEnergy</a> energyFlag)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Constructor for the Vpmg class (allocates new memory).  <a href=\"#ga2\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>int&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga3\">Vpmg_ctor2</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, <a class=\"el\" href=\"structsVpmgp.html\">Vpmgp</a> *parms, <a class=\"el\" href=\"structsVpbe.html\">Vpbe</a> *pbe, int focusFlag, <a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *pmgOLD, <a class=\"el\" href=\"structsMGparm.html\">MGparm</a> *mgparm, <a class=\"el\" href=\"group__PBEparm.html#ga0\">PBEparm_calcEnergy</a> energyFlag)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">FORTRAN stub constructor for the Vpmg class (uses previously-allocated memory).  <a href=\"#ga3\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>void&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga4\">Vpmg_dtor</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> **thee)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Object destructor.  <a href=\"#ga4\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>void&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga5\">Vpmg_dtor2</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">FORTRAN stub object destructor.  <a href=\"#ga5\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>int&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga6\">Vpmg_fillco</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, <a class=\"el\" href=\"group__Vhal.html#ga32\">Vsurf_Meth</a> surfMeth, double splineWin, <a class=\"el\" href=\"group__Vhal.html#ga33\">Vchrg_Meth</a> chargeMeth, int useDielXMap, <a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *dielXMap, int useDielYMap, <a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *dielYMap, int useDielZMap, <a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *dielZMap, int useKappaMap, <a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *kappaMap, int useChargeMap, <a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *chargeMap)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Fill the coefficient arrays prior to solving the equation.  <a href=\"#ga6\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>int&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga7\">Vpmg_solve</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Solve the PBE using PMG.  <a href=\"#ga7\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>int&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga8\">Vpmg_solveLaplace</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Solve Poisson's equation with a homogeneous Laplacian operator using the solvent dielectric constant. This solution is performed by a sine wave decomposition.  <a href=\"#ga8\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga9\">Vpmg_energy</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, int extFlag)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Get the total electrostatic energy.  <a href=\"#ga9\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga10\">Vpmg_qfEnergy</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, int extFlag)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Get the \"fixed charge\" contribution to the electrostatic energy.  <a href=\"#ga10\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga11\">Vpmg_qfAtomEnergy</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, <a class=\"el\" href=\"structsVatom.html\">Vatom</a> *atom)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Get the per-atom \"fixed charge\" contribution to the electrostatic energy.  <a href=\"#ga11\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga12\">Vpmg_qmEnergy</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, int extFlag)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Get the \"mobile charge\" contribution to the electrostatic energy.  <a href=\"#ga12\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga13\">Vpmg_dielEnergy</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, int extFlag)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Get the \"polarization\" contribution to the electrostatic energy.  <a href=\"#ga13\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga14\">Vpmg_npEnergy</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, int extFlag)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Get the \"apolar\" energy.  <a href=\"#ga14\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga15\">Vpmg_dielGradNorm</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Get the integral of the gradient of the dielectric function.  <a href=\"#ga15\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>int&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga16\">Vpmg_force</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, double *force, int atomID, <a class=\"el\" href=\"group__Vhal.html#ga32\">Vsurf_Meth</a> srfm, <a class=\"el\" href=\"group__Vhal.html#ga33\">Vchrg_Meth</a> chgm)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Calculate the total force on the specified atom in units of k_B T/AA.  <a href=\"#ga16\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>int&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga17\">Vpmg_qfForce</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, double *force, int atomID, <a class=\"el\" href=\"group__Vhal.html#ga33\">Vchrg_Meth</a> chgm)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Calculate the \"charge-field\" force on the specified atom in units of k_B T/AA.  <a href=\"#ga17\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>int&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga18\">Vpmg_dbnpForce</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, double *dbForce, double *npForce, int atomID, <a class=\"el\" href=\"group__Vhal.html#ga32\">Vsurf_Meth</a> srfm)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Calculate the dielectric boundary and apolar forces on the specified atom in units of k_B T/AA.  <a href=\"#ga18\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>int&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga19\">Vpmg_ibForce</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, double *force, int atomID, <a class=\"el\" href=\"group__Vhal.html#ga32\">Vsurf_Meth</a> srfm)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Calculate the osmotic pressure on the specified atom in units of k_B T/AA.  <a href=\"#ga19\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>void&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga20\">Vpmg_setPart</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, double lowerCorner[3], double upperCorner[3], int bflags[6])</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Set partition information which restricts the calculation of observables to a (rectangular) subset of the problem domain.  <a href=\"#ga20\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>void&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga21\">Vpmg_unsetPart</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Remove partition restrictions.  <a href=\"#ga21\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>int&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga22\">Vpmg_fillArray</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, double *vec, <a class=\"el\" href=\"group__Vhal.html#ga34\">Vdata_Type</a> type, double parm, <a class=\"el\" href=\"group__Vhal.html#ga0\">Vhal_PBEType</a> pbetype)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Fill the specified array with accessibility values.  <a href=\"#ga22\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>void&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga23\">Vpmg_printColComp</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, char path[72], char title[72], char mxtype[3], int flag)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Print out a column-compressed sparse matrix in Harwell-Boeing format.  <a href=\"#ga23\"></a><br><br></td></tr>\n</table>\n<hr><a name=\"_details\"></a><h2>Detailed Description</h2>\nA wrapper for Mike Holst's PMG multigrid code. \n<p>\n<dl compact><dt><b>Note:</b></dt><dd>Many of the routines and macros are borrowed from the main.c driver (written by Mike Holst) provided with the PMG code. </dd></dl>\n<hr><h2>Define Documentation</h2>\n<a class=\"anchor\" name=\"ga24\" doxytag=\"vpmg.h::VPMGMAXPART\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> #define VPMGMAXPART&nbsp;&nbsp;&nbsp;2000\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nThe maximum number of partitions the mesh can be divided into     </td>\n  </tr>\n</table>\n<hr><h2>Function Documentation</h2>\n<a class=\"anchor\" name=\"ga2\" doxytag=\"vpmg.h::Vpmg_ctor\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> <a class=\"el\" href=\"structsVpmg.html\">Vpmg</a>* Vpmg_ctor </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVpmgp.html\">Vpmgp</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>parms</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap><a class=\"el\" href=\"structsVpbe.html\">Vpbe</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>pbe</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>int&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>focusFlag</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap><a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>pmgOLD</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap><a class=\"el\" href=\"structsMGparm.html\">MGparm</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>mgparm</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap><a class=\"el\" href=\"group__PBEparm.html#ga0\">PBEparm_calcEnergy</a>&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>energyFlag</em></td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"md\">)&nbsp;</td>\n          <td class=\"md\" colspan=\"2\"></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nConstructor for the Vpmg class (allocates new memory). \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Returns:</b></dt><dd>Pointer to newly allocated Vpmg object </dd></dl>\n<dl compact><dt><b>Parameters: </b></dt><dd>\n<table border=0 cellspacing=2 cellpadding=0>\n<tr><td valign=top><em>pbe</em>&nbsp;</td><td>\nPMG parameter object </td></tr>\n<tr><td valign=top><em>focusFlag</em>&nbsp;</td><td>\nPBE-specific variables </td></tr>\n<tr><td valign=top><em>pmgOLD</em>&nbsp;</td><td>\n1 for focusing, 0 otherwise </td></tr>\n<tr><td valign=top><em>mgparm</em>&nbsp;</td><td>\nOld Vpmg object to use for boundary conditions </td></tr>\n<tr><td valign=top><em>energyFlag</em>&nbsp;</td><td>\nMGparm parameter object for boundary conditions What types of energies to calculate </td></tr>\n</table>\n</dl>    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga3\" doxytag=\"vpmg.h::Vpmg_ctor2\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> int Vpmg_ctor2 </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>thee</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap><a class=\"el\" href=\"structsVpmgp.html\">Vpmgp</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>parms</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap><a class=\"el\" href=\"structsVpbe.html\">Vpbe</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>pbe</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>int&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>focusFlag</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap><a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>pmgOLD</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap><a class=\"el\" href=\"structsMGparm.html\">MGparm</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>mgparm</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap><a class=\"el\" href=\"group__PBEparm.html#ga0\">PBEparm_calcEnergy</a>&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>energyFlag</em></td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"md\">)&nbsp;</td>\n          <td class=\"md\" colspan=\"2\"></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nFORTRAN stub constructor for the Vpmg class (uses previously-allocated memory). \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Returns:</b></dt><dd>1 if successful, 0 otherwise </dd></dl>\n<dl compact><dt><b>Parameters: </b></dt><dd>\n<table border=0 cellspacing=2 cellpadding=0>\n<tr><td valign=top><em>parms</em>&nbsp;</td><td>\nMemory location for object </td></tr>\n<tr><td valign=top><em>pbe</em>&nbsp;</td><td>\nPMG parameter object </td></tr>\n<tr><td valign=top><em>focusFlag</em>&nbsp;</td><td>\nPBE-specific variables </td></tr>\n<tr><td valign=top><em>pmgOLD</em>&nbsp;</td><td>\n1 for focusing, 0 otherwise </td></tr>\n<tr><td valign=top><em>mgparm</em>&nbsp;</td><td>\nOld Vpmg object to use for boundary conditions (can be VNULL if focusFlag = 0) </td></tr>\n<tr><td valign=top><em>energyFlag</em>&nbsp;</td><td>\nMGparm parameter object for boundary conditions (can be VNULL if focusFlag = 0) What types of energies to calculate (ignored if focusFlag = 0) </td></tr>\n</table>\n</dl>    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga18\" doxytag=\"vpmg.h::Vpmg_dbnpForce\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> int Vpmg_dbnpForce </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>thee</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>dbForce</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>npForce</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>int&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>atomID</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap><a class=\"el\" href=\"group__Vhal.html#ga32\">Vsurf_Meth</a>&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>srfm</em></td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"md\">)&nbsp;</td>\n          <td class=\"md\" colspan=\"2\"></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nCalculate the dielectric boundary and apolar forces on the specified atom in units of k_B T/AA. \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Note:</b></dt><dd><ul>\n<li>Using the force evaluation methods of Im et al (Roux group), Comput Phys Commun, 111, 59--75 (1998). However, this gives the whole (self-interactions included) force -- reaction field forces will have to be calculated at higher level. </li>\n<li>No contributions are made from higher levels of focusing. </li>\n</ul>\n</dd></dl>\n<dl compact><dt><b>Returns:</b></dt><dd>1 if successful, 0 otherwise </dd></dl>\n<dl compact><dt><b>Parameters: </b></dt><dd>\n<table border=0 cellspacing=2 cellpadding=0>\n<tr><td valign=top><em>dbForce</em>&nbsp;</td><td>\nVpmg object </td></tr>\n<tr><td valign=top><em>npForce</em>&nbsp;</td><td>\n3*sizeof(double) space to hold the dielectric boundary force in units of k_B T/AA </td></tr>\n<tr><td valign=top><em>atomID</em>&nbsp;</td><td>\n3*sizeof(double) space to hold the apolar boundary force in units of k_B T/AA </td></tr>\n<tr><td valign=top><em>srfm</em>&nbsp;</td><td>\nValist ID of desired atom Surface discretization method </td></tr>\n</table>\n</dl>    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga13\" doxytag=\"vpmg.h::Vpmg_dielEnergy\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> double Vpmg_dielEnergy </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>thee</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>int&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>extFlag</em></td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"md\">)&nbsp;</td>\n          <td class=\"md\" colspan=\"2\"></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nGet the \"polarization\" contribution to the electrostatic energy. \n<p>\nUsing the solution at the finest mesh level, get the electrostatic energy due to the interaction of the mobile charges with the potential: <p class=formulaDsp>\n<img class=formulaDsp alt=\"\\[ G = \\frac{1}{2} \\int \\epsilon (\\nabla u)^2 dx \\]\" src=\"form_24.png\">\n<p>\n where epsilon is the dielectric parameter and u(x) is the dimensionless electrostatic potential. The energy is scaled to units of k_b T.<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Note:</b></dt><dd>The value of this observable may be modified by setting restrictions on the subdomain over which it is calculated. Such limits can be set via Vpmg_setPart and are generally useful for parallel runs. </dd></dl>\n<dl compact><dt><b>Returns:</b></dt><dd>The polarization electrostatic energy in units of k_B T. </dd></dl>\n<dl compact><dt><b>Parameters: </b></dt><dd>\n<table border=0 cellspacing=2 cellpadding=0>\n<tr><td valign=top><em>extFlag</em>&nbsp;</td><td>\nVpmg object If this was a focused calculation, include (1 -- for serial calculations) or ignore (0 -- for parallel calculations) energy contributions from outside the focusing domain </td></tr>\n</table>\n</dl>    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga15\" doxytag=\"vpmg.h::Vpmg_dielGradNorm\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> double Vpmg_dielGradNorm </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *&nbsp;</td>\n          <td class=\"mdname1\" valign=\"top\" nowrap> <em>thee</em>          </td>\n          <td class=\"md\" valign=\"top\">&nbsp;)&nbsp;</td>\n          <td class=\"md\" nowrap></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nGet the integral of the gradient of the dielectric function. \n<p>\nUsing the dielectric map at the finest mesh level, calculate the integral of the norm of the dielectric function gradient routines of Im et al (see Vpmg_dbnpForce for reference): <p class=formulaDsp>\n<img class=formulaDsp alt=\"\\[ \\int \\| \\nabla \\epsilon \\| dx \\]\" src=\"form_31.png\">\n<p>\n where epsilon is the dielectric parameter. The integral is returned in units of A^2.<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker restrictions on the subdomain over which it is calculated. Such limits can be set via Vpmg_setPart and are generally useful for parallel runs. </dd></dl>\n<dl compact><dt><b>Returns:</b></dt><dd>The integral in units of A^2. </dd></dl>\n<dl compact><dt><b>Parameters: </b></dt><dd>\n<table border=0 cellspacing=2 cellpadding=0>\n<tr><td valign=top><em>thee</em>&nbsp;</td><td>\nVpmg object </td></tr>\n</table>\n</dl>    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga4\" doxytag=\"vpmg.h::Vpmg_dtor\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> void Vpmg_dtor </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> **&nbsp;</td>\n          <td class=\"mdname1\" valign=\"top\" nowrap> <em>thee</em>          </td>\n          <td class=\"md\" valign=\"top\">&nbsp;)&nbsp;</td>\n          <td class=\"md\" nowrap></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nObject destructor. \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Parameters: </b></dt><dd>\n<table border=0 cellspacing=2 cellpadding=0>\n<tr><td valign=top><em>thee</em>&nbsp;</td><td>\nPointer to memory location of object to be destroyed </td></tr>\n</table>\n</dl>    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga5\" doxytag=\"vpmg.h::Vpmg_dtor2\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> void Vpmg_dtor2 </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *&nbsp;</td>\n          <td class=\"mdname1\" valign=\"top\" nowrap> <em>thee</em>          </td>\n          <td class=\"md\" valign=\"top\">&nbsp;)&nbsp;</td>\n          <td class=\"md\" nowrap></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nFORTRAN stub object destructor. \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Parameters: </b></dt><dd>\n<table border=0 cellspacing=2 cellpadding=0>\n<tr><td valign=top><em>thee</em>&nbsp;</td><td>\nPointer to object to be destroyed </td></tr>\n</table>\n</dl>    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga9\" doxytag=\"vpmg.h::Vpmg_energy\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> double Vpmg_energy </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>thee</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>int&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>extFlag</em></td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"md\">)&nbsp;</td>\n          <td class=\"md\" colspan=\"2\"></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nGet the total electrostatic energy. \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Note:</b></dt><dd>The value of this observable may be modified by setting restrictions on the subdomain over which it is calculated. Such limits can be set via Vpmg_setPart and are generally useful for parallel runs. </dd></dl>\n<dl compact><dt><b>Returns:</b></dt><dd>The electrostatic energy in units of k_B T. </dd></dl>\n<dl compact><dt><b>Parameters: </b></dt><dd>\n<table border=0 cellspacing=2 cellpadding=0>\n<tr><td valign=top><em>extFlag</em>&nbsp;</td><td>\nVpmg object If this was a focused calculation, include (1 -- for serial calculations) or ignore (0 -- for parallel calculations) energy contributions from outside the focusing domain </td></tr>\n</table>\n</dl>    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga22\" doxytag=\"vpmg.h::Vpmg_fillArray\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> int Vpmg_fillArray </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>thee</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>vec</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap><a class=\"el\" href=\"group__Vhal.html#ga34\">Vdata_Type</a>&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>type</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>parm</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap><a class=\"el\" href=\"group__Vhal.html#ga0\">Vhal_PBEType</a>&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>pbetype</em></td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"md\">)&nbsp;</td>\n          <td class=\"md\" colspan=\"2\"></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nFill the specified array with accessibility values. \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Returns:</b></dt><dd>1 if successful, 0 otherwise </dd></dl>\n<dl compact><dt><b>Parameters: </b></dt><dd>\n<table border=0 cellspacing=2 cellpadding=0>\n<tr><td valign=top><em>vec</em>&nbsp;</td><td>\nVpmg object </td></tr>\n<tr><td valign=top><em>type</em>&nbsp;</td><td>\nA nx*ny*nz*sizeof(double) array to contain the values to be written </td></tr>\n<tr><td valign=top><em>parm</em>&nbsp;</td><td>\nWhat to write </td></tr>\n<tr><td valign=top><em>pbetype</em>&nbsp;</td><td>\nParameter for data type definition (if needed) Parameter for PBE type (if needed) </td></tr>\n</table>\n</dl>    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga6\" doxytag=\"vpmg.h::Vpmg_fillco\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> int Vpmg_fillco </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>thee</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap><a class=\"el\" href=\"group__Vhal.html#ga32\">Vsurf_Meth</a>&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>surfMeth</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>splineWin</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap><a class=\"el\" href=\"group__Vhal.html#ga33\">Vchrg_Meth</a>&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>chargeMeth</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>int&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>useDielXMap</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap><a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>dielXMap</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>int&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>useDielYMap</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap><a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>dielYMap</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>int&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>useDielZMap</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap><a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>dielZMap</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>int&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>useKappaMap</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap><a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>kappaMap</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>int&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>useChargeMap</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap><a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>chargeMap</em></td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"md\">)&nbsp;</td>\n          <td class=\"md\" colspan=\"2\"></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nFill the coefficient arrays prior to solving the equation. \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Returns:</b></dt><dd>1 if successful, 0 otherwise </dd></dl>\n<dl compact><dt><b>Parameters: </b></dt><dd>\n<table border=0 cellspacing=2 cellpadding=0>\n<tr><td valign=top><em>surfMeth</em>&nbsp;</td><td>\nVpmg object </td></tr>\n<tr><td valign=top><em>splineWin</em>&nbsp;</td><td>\nSurface discretization method </td></tr>\n<tr><td valign=top><em>chargeMeth</em>&nbsp;</td><td>\nSpline window (in A) for surfMeth = VSM_SPLINE </td></tr>\n<tr><td valign=top><em>useDielXMap</em>&nbsp;</td><td>\nCharge discretization method </td></tr>\n<tr><td valign=top><em>dielXMap</em>&nbsp;</td><td>\nBoolean to use dielectric map argument </td></tr>\n<tr><td valign=top><em>useDielYMap</em>&nbsp;</td><td>\nExternal dielectric map </td></tr>\n<tr><td valign=top><em>dielYMap</em>&nbsp;</td><td>\nBoolean to use dielectric map argument </td></tr>\n<tr><td valign=top><em>useDielZMap</em>&nbsp;</td><td>\nExternal dielectric map </td></tr>\n<tr><td valign=top><em>dielZMap</em>&nbsp;</td><td>\nBoolean to use dielectric map argument </td></tr>\n<tr><td valign=top><em>useKappaMap</em>&nbsp;</td><td>\nExternal dielectric map </td></tr>\n<tr><td valign=top><em>kappaMap</em>&nbsp;</td><td>\nBoolean to use kappa map argument </td></tr>\n<tr><td valign=top><em>useChargeMap</em>&nbsp;</td><td>\nExternal kappa map </td></tr>\n<tr><td valign=top><em>chargeMap</em>&nbsp;</td><td>\nBoolean to use charge map argument External charge map </td></tr>\n</table>\n</dl>    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga16\" doxytag=\"vpmg.h::Vpmg_force\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> int Vpmg_force </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>thee</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>force</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>int&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>atomID</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap><a class=\"el\" href=\"group__Vhal.html#ga32\">Vsurf_Meth</a>&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>srfm</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap><a class=\"el\" href=\"group__Vhal.html#ga33\">Vchrg_Meth</a>&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>chgm</em></td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"md\">)&nbsp;</td>\n          <td class=\"md\" colspan=\"2\"></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nCalculate the total force on the specified atom in units of k_B T/AA. \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Note:</b></dt><dd><ul>\n<li>Using the force evaluation methods of Im et al (Roux group), Comput Phys Commun, 111, 59--75 (1998). However, this gives the whole (self-interactions included) force -- reaction field forces will have to be calculated at higher level. </li>\n<li>No contributions are made from higher levels of focusing. </li>\n</ul>\n</dd></dl>\n<dl compact><dt><b>Returns:</b></dt><dd>1 if successful, 0 otherwise </dd></dl>\n<dl compact><dt><b>Parameters: </b></dt><dd>\n<table border=0 cellspacing=2 cellpadding=0>\n<tr><td valign=top><em>force</em>&nbsp;</td><td>\nVpmg object </td></tr>\n<tr><td valign=top><em>atomID</em>&nbsp;</td><td>\n3*sizeof(double) space to hold the force in units of k_B T/AA </td></tr>\n<tr><td valign=top><em>srfm</em>&nbsp;</td><td>\nValist ID of desired atom </td></tr>\n<tr><td valign=top><em>chgm</em>&nbsp;</td><td>\nSurface discretization method Charge discretization method </td></tr>\n</table>\n</dl>    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga19\" doxytag=\"vpmg.h::Vpmg_ibForce\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> int Vpmg_ibForce </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>thee</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>force</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>int&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>atomID</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap><a class=\"el\" href=\"group__Vhal.html#ga32\">Vsurf_Meth</a>&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>srfm</em></td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"md\">)&nbsp;</td>\n          <td class=\"md\" colspan=\"2\"></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nCalculate the osmotic pressure on the specified atom in units of k_B T/AA. \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Note:</b></dt><dd><ul>\n<li>Using the force evaluation methods of Im et al (Roux group), Comput Phys Commun, 111, 59--75 (1998). However, this gives the whole (self-interactions included) force -- reaction field forces will have to be calculated at higher level. </li>\n<li>No contributions are made from higher levels of focusing. </li>\n</ul>\n</dd></dl>\n<dl compact><dt><b>Returns:</b></dt><dd>1 if successful, 0 otherwise </dd></dl>\n<dl compact><dt><b>Parameters: </b></dt><dd>\n<table border=0 cellspacing=2 cellpadding=0>\n<tr><td valign=top><em>force</em>&nbsp;</td><td>\nVpmg object </td></tr>\n<tr><td valign=top><em>atomID</em>&nbsp;</td><td>\n3*sizeof(double) space to hold the boundary force in units of k_B T/AA </td></tr>\n<tr><td valign=top><em>srfm</em>&nbsp;</td><td>\nValist ID of desired atom Surface discretization method </td></tr>\n</table>\n</dl>    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga1\" doxytag=\"vpmg.h::Vpmg_memChk\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> unsigned long int Vpmg_memChk </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *&nbsp;</td>\n          <td class=\"mdname1\" valign=\"top\" nowrap> <em>thee</em>          </td>\n          <td class=\"md\" valign=\"top\">&nbsp;)&nbsp;</td>\n          <td class=\"md\" nowrap></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nReturn the memory used by this structure (and its contents) in bytes. \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Returns:</b></dt><dd>The memory used by this structure and its contents in bytes </dd></dl>\n<dl compact><dt><b>Parameters: </b></dt><dd>\n<table border=0 cellspacing=2 cellpadding=0>\n<tr><td valign=top><em>thee</em>&nbsp;</td><td>\nObject for memory check </td></tr>\n</table>\n</dl>    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga14\" doxytag=\"vpmg.h::Vpmg_npEnergy\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> double Vpmg_npEnergy </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>thee</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>int&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>extFlag</em></td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"md\">)&nbsp;</td>\n          <td class=\"md\" colspan=\"2\"></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nGet the \"apolar\" energy. \n<p>\nUsing the dielectric map at the finest mesh level, calculate the surface area in a manner consistent with the force evaluation routines of Im et al (see Vpmg_dbnpForce and Vpmg_dielGradNorm): <p class=formulaDsp>\n<img class=formulaDsp alt=\"\\[ A = \\frac{1}{\\epsilon_s-\\epsilon_p} \\int \\| \\nabla \\epsilon \\| dx \\]\" src=\"form_26.png\">\n<p>\n where epsilon is the dielectric parameter, epsilon_s is the dielectric constant for the solvent and epsilon_p is the dielectric constant for the protein. The apolar energy is then, <p class=formulaDsp>\n<img class=formulaDsp alt=\"\\[G_{np} = \\gamma S \\]\" src=\"form_29.png\">\n<p>\n where gamma is the apolar coefficient set in Vpbe (see Vpbe_ctor). The energy is returned in units of k_b T. <dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Note:</b></dt><dd>I personally feel that this routine should not find its way into the main APBS driver. In this case, the apolar energy is calculated in a manner consistent with the force evaluation, but it is not the only possible apolar energy definition... The value of this observable may be modified by setting restrictions on the subdomain over which it is calculated. Such limits can be set via Vpmg_setPart and are generally useful for parallel runs. </dd></dl>\n<dl compact><dt><b>Returns:</b></dt><dd>The apolar energy in units of k_B T. </dd></dl>\n<dl compact><dt><b>Parameters: </b></dt><dd>\n<table border=0 cellspacing=2 cellpadding=0>\n<tr><td valign=top><em>extFlag</em>&nbsp;</td><td>\nVpmg object If this was a focused calculation, include (1 -- for serial calculations) or ignore (0 -- for parallel calculations) energy contributions from outside the focusing domain </td></tr>\n</table>\n</dl>    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga23\" doxytag=\"vpmg.h::Vpmg_printColComp\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> void Vpmg_printColComp </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>thee</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>char&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>path</em>[72], </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>char&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>title</em>[72], </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>char&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>mxtype</em>[3], </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>int&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>flag</em></td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"md\">)&nbsp;</td>\n          <td class=\"md\" colspan=\"2\"></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nPrint out a column-compressed sparse matrix in Harwell-Boeing format. \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b><a class=\"el\" href=\"bug.html#_bug000002\">Bug:</a></b></dt><dd>Can this path variable be replaced with a Vio socket? </dd></dl>\n<dl compact><dt><b>Parameters: </b></dt><dd>\n<table border=0 cellspacing=2 cellpadding=0>\n<tr><td valign=top><em>path</em>&nbsp;</td><td>\nVpmg object </td></tr>\n<tr><td valign=top><em>title</em>&nbsp;</td><td>\nThe file to which the matrix is to be written </td></tr>\n<tr><td valign=top><em>mxtype</em>&nbsp;</td><td>\nThe title of the matrix </td></tr>\n<tr><td valign=top><em>flag</em>&nbsp;</td><td>\nThe type of REAL-valued matrix, a 3-character string of the form \"R_A\" where the '_' can be one of: <ul>\n<li>S: symmetric matrix </li>\n<li>U: unsymmetric matrix </li>\n<li>H: Hermitian matrix </li>\n<li>Z: skew-symmetric matrix </li>\n<li>R: rectangular matrix The operator to compress: </li>\n<li>0: Poisson operator </li>\n<li>1: Linearization of the full Poisson-Boltzmann operator around the current solution </li>\n</ul>\n</td></tr>\n</table>\n</dl>    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga11\" doxytag=\"vpmg.h::Vpmg_qfAtomEnergy\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> double Vpmg_qfAtomEnergy </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>thee</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap><a class=\"el\" href=\"structsVatom.html\">Vatom</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>atom</em></td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"md\">)&nbsp;</td>\n          <td class=\"md\" colspan=\"2\"></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nGet the per-atom \"fixed charge\" contribution to the electrostatic energy. \n<p>\nUsing the solution at the finest mesh level, get the electrostatic energy due to the interaction of the fixed charges with the potential: <p class=formulaDsp>\n<img class=formulaDsp alt=\"\\[ G = q u(r), \\]\" src=\"form_12.png\">\n<p>\n where q$ is the charge and r is the location of the atom of interest. The result is returned in units of k_B T. Clearly, no self-interaction terms are removed. A factor a 1/2 has to be included to convert this to a real energy.<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Note:</b></dt><dd>The value of this observable may be modified by setting restrictions on the subdomain over which it is calculated. Such limits can be set via Vpmg_setPart and are generally useful for parallel runs. </dd></dl>\n<dl compact><dt><b>Returns:</b></dt><dd>The fixed charge electrostatic energy in units of k_B T. </dd></dl>\n<dl compact><dt><b>Parameters: </b></dt><dd>\n<table border=0 cellspacing=2 cellpadding=0>\n<tr><td valign=top><em>atom</em>&nbsp;</td><td>\nThe Vpmg object The atom for energy calculations </td></tr>\n</table>\n</dl>    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga10\" doxytag=\"vpmg.h::Vpmg_qfEnergy\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> double Vpmg_qfEnergy </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>thee</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>int&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>extFlag</em></td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"md\">)&nbsp;</td>\n          <td class=\"md\" colspan=\"2\"></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nGet the \"fixed charge\" contribution to the electrostatic energy. \n<p>\nUsing the solution at the finest mesh level, get the electrostatic energy due to the interaction of the fixed charges with the potential: <p class=formulaDsp>\n<img class=formulaDsp alt=\"\\[ G = \\sum_i q_i u(r_i) \\]\" src=\"form_11.png\">\n<p>\n and return the result in units of k_B T. Clearly, no self-interaction terms are removed. A factor a 1/2 has to be included to convert this to a real energy.<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Note:</b></dt><dd>The value of this observable may be modified by setting restrictions on the subdomain over which it is calculated. Such limits can be set via Vpmg_setPart and are generally useful for parallel runs. </dd></dl>\n<dl compact><dt><b>Returns:</b></dt><dd>The fixed charge electrostatic energy in units of k_B T. </dd></dl>\n<dl compact><dt><b>Parameters: </b></dt><dd>\n<table border=0 cellspacing=2 cellpadding=0>\n<tr><td valign=top><em>extFlag</em>&nbsp;</td><td>\nVpmg object If this was a focused calculation, include (1 -- for serial calculations) or ignore (0 -- for parallel calculations) energy contributions from outside the focusing domain </td></tr>\n</table>\n</dl>    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga17\" doxytag=\"vpmg.h::Vpmg_qfForce\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> int Vpmg_qfForce </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>thee</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>force</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>int&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>atomID</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap><a class=\"el\" href=\"group__Vhal.html#ga33\">Vchrg_Meth</a>&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>chgm</em></td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"md\">)&nbsp;</td>\n          <td class=\"md\" colspan=\"2\"></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nCalculate the \"charge-field\" force on the specified atom in units of k_B T/AA. \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Note:</b></dt><dd><ul>\n<li>Using the force evaluation methods of Im et al (Roux group), Comput Phys Commun, 111, 59--75 (1998). However, this gives the whole (self-interactions included) force -- reaction field forces will have to be calculated at higher level. </li>\n<li>No contributions are made from higher levels of focusing. </li>\n</ul>\n</dd></dl>\n<dl compact><dt><b>Returns:</b></dt><dd>1 if sucessful, 0 otherwise </dd></dl>\n<dl compact><dt><b>Parameters: </b></dt><dd>\n<table border=0 cellspacing=2 cellpadding=0>\n<tr><td valign=top><em>force</em>&nbsp;</td><td>\nVpmg object </td></tr>\n<tr><td valign=top><em>atomID</em>&nbsp;</td><td>\n3*sizeof(double) space to hold the force in units of k_B T/A </td></tr>\n<tr><td valign=top><em>chgm</em>&nbsp;</td><td>\nValist ID of desired atom Charge discretization method </td></tr>\n</table>\n</dl>    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga12\" doxytag=\"vpmg.h::Vpmg_qmEnergy\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> double Vpmg_qmEnergy </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>thee</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>int&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>extFlag</em></td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"md\">)&nbsp;</td>\n          <td class=\"md\" colspan=\"2\"></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nGet the \"mobile charge\" contribution to the electrostatic energy. \n<p>\nUsing the solution at the finest mesh level, get the electrostatic energy due to the interaction of the mobile charges with the potential: <p class=formulaDsp>\n<img class=formulaDsp alt=\"\\[ G = \\frac{1}{4 I_s} \\sum_i c_i q_i^2 \\int \\kappa^2(x) e^{-q_i u(x)} dx \\]\" src=\"form_88.png\">\n<p>\n for the NPBE and <p class=formulaDsp>\n<img class=formulaDsp alt=\"\\[ G = \\frac{1}{2} \\int \\overline{\\kappa}^2(x) u^2(x) dx \\]\" src=\"form_16.png\">\n<p>\n for the LPBE. Here i denotes the counterion species, I_s is the bulk ionic strength, kappa^2(x) is the modified Debye-Huckel parameter, c_i is the concentration of species i, q_i is the charge of species i, and u(x) is the dimensionless electrostatic potential. The energy is scaled to units of k_b T.<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Note:</b></dt><dd>The value of this observable may be modified by setting restrictions on the subdomain over which it is calculated. Such limits can be set via Vpmg_setPart and are generally useful for parallel runs. </dd></dl>\n<dl compact><dt><b>Returns:</b></dt><dd>The mobile charge electrostatic energy in units of k_B T. </dd></dl>\n<dl compact><dt><b>Parameters: </b></dt><dd>\n<table border=0 cellspacing=2 cellpadding=0>\n<tr><td valign=top><em>extFlag</em>&nbsp;</td><td>\nVpmg object If this was a focused calculation, include (1 -- for serial calculations) or ignore (0 -- for parallel calculations) energy contributions from outside the focusing domain </td></tr>\n</table>\n</dl>    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga20\" doxytag=\"vpmg.h::Vpmg_setPart\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> void Vpmg_setPart </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>thee</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>lowerCorner</em>[3], </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>upperCorner</em>[3], </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>int&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>bflags</em>[6]</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"md\">)&nbsp;</td>\n          <td class=\"md\" colspan=\"2\"></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nSet partition information which restricts the calculation of observables to a (rectangular) subset of the problem domain. \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Parameters: </b></dt><dd>\n<table border=0 cellspacing=2 cellpadding=0>\n<tr><td valign=top><em>lowerCorner</em>&nbsp;</td><td>\nVpmg object </td></tr>\n<tr><td valign=top><em>upperCorner</em>&nbsp;</td><td>\nPartition lower corner </td></tr>\n<tr><td valign=top><em>bflags</em>&nbsp;</td><td>\nPartition upper corner Booleans indicating whether a particular processor is on the boundary with another partition. 0 if the face is not bounded (next to) another partition, and 1 otherwise. </td></tr>\n</table>\n</dl>    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga7\" doxytag=\"vpmg.h::Vpmg_solve\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> int Vpmg_solve </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *&nbsp;</td>\n          <td class=\"mdname1\" valign=\"top\" nowrap> <em>thee</em>          </td>\n          <td class=\"md\" valign=\"top\">&nbsp;)&nbsp;</td>\n          <td class=\"md\" nowrap></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nSolve the PBE using PMG. \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Returns:</b></dt><dd>1 if successful, 0 otherwise </dd></dl>\n<dl compact><dt><b>Parameters: </b></dt><dd>\n<table border=0 cellspacing=2 cellpadding=0>\n<tr><td valign=top><em>thee</em>&nbsp;</td><td>\nVpmg object </td></tr>\n</table>\n</dl>    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga8\" doxytag=\"vpmg.h::Vpmg_solveLaplace\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> int Vpmg_solveLaplace </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *&nbsp;</td>\n          <td class=\"mdname1\" valign=\"top\" nowrap> <em>thee</em>          </td>\n          <td class=\"md\" valign=\"top\">&nbsp;)&nbsp;</td>\n          <td class=\"md\" nowrap></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nSolve Poisson's equation with a homogeneous Laplacian operator using the solvent dielectric constant. This solution is performed by a sine wave decomposition. \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Returns:</b></dt><dd>1 if successful, 0 otherwise </dd></dl>\n<dl compact><dt><b>Note:</b></dt><dd>This function is really only for testing purposes as the PMG multigrid solver can solve the homogeneous system much more quickly. Perhaps we should implement an FFT version at some point... </dd></dl>\n<dl compact><dt><b>Parameters: </b></dt><dd>\n<table border=0 cellspacing=2 cellpadding=0>\n<tr><td valign=top><em>thee</em>&nbsp;</td><td>\nVpmg object </td></tr>\n</table>\n</dl>    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga21\" doxytag=\"vpmg.h::Vpmg_unsetPart\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> void Vpmg_unsetPart </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *&nbsp;</td>\n          <td class=\"mdname1\" valign=\"top\" nowrap> <em>thee</em>          </td>\n          <td class=\"md\" valign=\"top\">&nbsp;)&nbsp;</td>\n          <td class=\"md\" nowrap></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nRemove partition restrictions. \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Parameters: </b></dt><dd>\n<table border=0 cellspacing=2 cellpadding=0>\n<tr><td valign=top><em>thee</em>&nbsp;</td><td>\nVpmg object </td></tr>\n</table>\n</dl>    </td>\n  </tr>\n</table>\n<hr size=\"1\"><address style=\"align: right;\"><small>Generated on Tue Dec 6 10:05:59 2005 for APBS by\n<a href=\"http://www.doxygen.org/index.html\">\n<img src=\"doxygen.png\" alt=\"doxygen\" align=\"middle\" border=0 > \n</a>1.3.5 </small></address>\n</body>\n</html>\n", "id": 42483.0}