{"text": "1 package swirl workspace viz pie 2 3 import java awt Point 4 5 import junit framework TestCase 6 7 public class CoordinateTest extends TestCase 8 9 public CoordinateTest String arg 1 11 super arg 12 13 14 these are just guesses they should be replaced with actual numbers 15 public static final double X 1 1 1 1 1 1 16 public static final double Y 1 1 1 1 1 1 17 public static final double RADIUS Math sqrt 2 Math sqrt 2 Math sqrt 2 1 1 1 1 Math sqrt 2 18 public static final double REL ANGLE 45 18 135 18 45 18 5 5 1 5 19 public static final int USERS 2 2 2 2 2 2 2 4 2 public static final int THIS USER 1 1 2 1 1 2 1 4 21 public static final double THETA 45 135 225 9 27 18 315 22 23 public static final double DELTA 3 margin for error in conversions Seems like 1 or 1 should be good 24 25 public void testCoordinate 26 27 for int i i X length i 28 29 one way 3 Coordinate c new Coordinate RADIUS i REL ANGLE i USERS i THIS USER i 31 String prefix Test i 1 For radius RADIUS i and relativeAngle 32 REL ANGLE i and userCount USERS i and user num THIS USER i 33 coordinate thinks 34 35 Point p c getPoint 36 assertEquals prefix x is p getX but it should be X i X i p getX DELTA 37 assertEquals prefix y is p getY but it should be Y i Y i p getY DELTA 38 assertEquals prefix theta is c getTheta but it should be THETA i THETA i c getTheta DELTA 39 4 the other way 41 Coordinate c2 new Coordinate new Point int X i int Y i USERS i THIS USER i 42 prefix Test i 1 For point int X i int Y i and userCount USERS i and user num THIS USER i 43 coordinate thinks 44 assertEquals prefix radius is c2 getRadius but it should be RADIUS i RADIUS i c2 getRadius DELTA 45 assertEquals prefix relativeAngle is c2 getRelativeAngle but it should be REL ANGLE i REL ANGLE i c2 getRelativeAngle DELTA 46 assertEquals prefix theta is c2 getTheta but it should be THETA i THETA i c2 getTheta DELTA 47 48 49 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.20/xref-test/swirl/workspace/viz/pie/CoordinateTest.html", "title": "coordinatetest xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>CoordinateTest xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../../../stylesheet.css\" />\n</head>\n<body>\n<pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <strong>package</strong> <a href=\"../../../../swirl/workspace/viz/pie/package-summary.html\">swirl.workspace.viz.pie</a>;\n<a name=\"2\" href=\"#2\">2</a>   \n<a name=\"3\" href=\"#3\">3</a>   <strong>import</strong> java.awt.Point;\n<a name=\"4\" href=\"#4\">4</a>   \n<a name=\"5\" href=\"#5\">5</a>   <strong>import</strong> junit.framework.TestCase;\n<a name=\"6\" href=\"#6\">6</a>   \n<a name=\"7\" href=\"#7\">7</a>   <strong>public</strong> <strong>class</strong> <a href=\"../../../../swirl/workspace/viz/pie/CoordinateTest.html\">CoordinateTest</a> <strong>extends</strong> TestCase\n<a name=\"8\" href=\"#8\">8</a>   {\n<a name=\"9\" href=\"#9\">9</a>   \t<strong>public</strong> <a href=\"../../../../swirl/workspace/viz/pie/CoordinateTest.html\">CoordinateTest</a>(String arg0)\n<a name=\"10\" href=\"#10\">10</a>  \t{\n<a name=\"11\" href=\"#11\">11</a>  \t\t<strong>super</strong>(arg0);\n<a name=\"12\" href=\"#12\">12</a>  \t}\n<a name=\"13\" href=\"#13\">13</a>  \n<a name=\"14\" href=\"#14\">14</a>  \t<em class=\"comment\">//these are just guesses, they should be replaced with actual numbers</em>\n<a name=\"15\" href=\"#15\">15</a>  \t<strong>public</strong> <strong>static</strong> <strong>final</strong> <strong>double</strong>[] X =      {1.0, -1.0, -1.0, 1.0, 0.0,  0.0, -1.0, 1.0};\n<a name=\"16\" href=\"#16\">16</a>  \t<strong>public</strong> <strong>static</strong> <strong>final</strong> <strong>double</strong>[] Y =      {1.0,  1.0, -1.0, 0.0, 1.0, -1.0,  0.0, -1.0};\n<a name=\"17\" href=\"#17\">17</a>  \t<strong>public</strong> <strong>static</strong> <strong>final</strong> <strong>double</strong>[] RADIUS = {Math.sqrt(2), Math.sqrt(2), Math.sqrt(2), 1.0, 1.0, 1.0, 1.0, Math.sqrt(2)};\n<a name=\"18\" href=\"#18\">18</a>  \t<strong>public</strong> <strong>static</strong> <strong>final</strong> <strong>double</strong>[] REL_ANGLE = {45.0/180, 135.0/180, 45.0/180, 0, 0.50, 0.50, 1.0, 0.50};\n<a name=\"19\" href=\"#19\">19</a>  \t<strong>public</strong> <strong>static</strong> <strong>final</strong> <strong>int</strong>[]     USERS = {2, 2, 2, 2, 2, 2, 2, 4};\n<a name=\"20\" href=\"#20\">20</a>  \t<strong>public</strong> <strong>static</strong> <strong>final</strong> <strong>int</strong>[] THIS_USER = {1, 1, 2, 1, 1, 2, 1, 4};\n<a name=\"21\" href=\"#21\">21</a>  \t<strong>public</strong> <strong>static</strong> <strong>final</strong> <strong>double</strong>[]  THETA = {45.0, 135.0, 225.0, 0.0, 90.0, 270.0, 180.0, 315.0};\n<a name=\"22\" href=\"#22\">22</a>  \n<a name=\"23\" href=\"#23\">23</a>  \t<strong>public</strong> <strong>static</strong> <strong>final</strong> <strong>double</strong> DELTA = .3;\t<em class=\"comment\">//margin for error in conversions.  Seems like .1 or .01 should be good</em>\n<a name=\"24\" href=\"#24\">24</a>  \t\n<a name=\"25\" href=\"#25\">25</a>  \t<strong>public</strong> <strong>void</strong> testCoordinate()\n<a name=\"26\" href=\"#26\">26</a>  \t{\n<a name=\"27\" href=\"#27\">27</a>  \t\t<strong>for</strong>(<strong>int</strong> i = 0; i &lt; X.length; ++i)\n<a name=\"28\" href=\"#28\">28</a>  \t\t{\n<a name=\"29\" href=\"#29\">29</a>  \t\t\t<em class=\"comment\">//one way</em>\n<a name=\"30\" href=\"#30\">30</a>  \t\t\tCoordinate c = <strong>new</strong> Coordinate(RADIUS[i], REL_ANGLE[i], USERS[i], THIS_USER[i]);\n<a name=\"31\" href=\"#31\">31</a>  \t\t\tString prefix = <span class=\"string\">\"Test #\"</span> + (i+1) + <span class=\"string\">\" For radius \"</span> + RADIUS[i] + <span class=\"string\">\" and relativeAngle \"</span> \n<a name=\"32\" href=\"#32\">32</a>  \t\t\t+ REL_ANGLE[i] + <span class=\"string\">\" and userCount \"</span> + USERS[i] + <span class=\"string\">\" and user num \"</span> + THIS_USER[i] +\n<a name=\"33\" href=\"#33\">33</a>  \t\t\t<span class=\"string\">\" coordinate thinks \"</span>;\n<a name=\"34\" href=\"#34\">34</a>  \n<a name=\"35\" href=\"#35\">35</a>  \t\t\tPoint p = c.getPoint();\n<a name=\"36\" href=\"#36\">36</a>  \t\t\tassertEquals(prefix + <span class=\"string\">\"x is \"</span> + p.getX() + <span class=\"string\">\" but it should be \"</span> + X[i], X[i], p.getX(), DELTA);\n<a name=\"37\" href=\"#37\">37</a>  \t\t\tassertEquals(prefix + <span class=\"string\">\"y is \"</span> + p.getY() + <span class=\"string\">\" but it should be \"</span> + Y[i], Y[i], p.getY(), DELTA);\n<a name=\"38\" href=\"#38\">38</a>  \t\t\tassertEquals(prefix + <span class=\"string\">\"theta is \"</span> + c.getTheta() + <span class=\"string\">\" but it should be \"</span> + THETA[i], THETA[i], c.getTheta(), DELTA);\n<a name=\"39\" href=\"#39\">39</a>  \t\t\t\n<a name=\"40\" href=\"#40\">40</a>  \t\t\t<em class=\"comment\">//the other way</em>\n<a name=\"41\" href=\"#41\">41</a>  \t\t\tCoordinate c2 = <strong>new</strong> Coordinate(<strong>new</strong> Po<strong>int</strong>((<strong>int</strong>)X[i], (<strong>int</strong>)Y[i]), USERS[i], THIS_USER[i]);\n<a name=\"42\" href=\"#42\">42</a>  \t\t\tprefix = <span class=\"string\">\"Test #\"</span> + (i+1) + <span class=\"string\">\" For point (\"</span> + (<strong>int</strong>)X[i] + <span class=\"string\">\", \"</span> + (<strong>int</strong>)Y[i] + <span class=\"string\">\") and userCount \"</span> + USERS[i] + <span class=\"string\">\" and user num \"</span> + THIS_USER[i] +\n<a name=\"43\" href=\"#43\">43</a>  \t\t\t<span class=\"string\">\" coordinate thinks \"</span>;\n<a name=\"44\" href=\"#44\">44</a>  \t\t\tassertEquals(prefix + <span class=\"string\">\"radius is \"</span> + c2.getRadius() + <span class=\"string\">\" but it should be \"</span> + RADIUS[i], RADIUS[i], c2.getRadius(), DELTA);\n<a name=\"45\" href=\"#45\">45</a>  \t\t\tassertEquals(prefix + <span class=\"string\">\"relativeAngle is \"</span> + c2.getRelativeAngle() + <span class=\"string\">\" but it should be \"</span> + REL_ANGLE[i], REL_ANGLE[i], c2.getRelativeAngle(), DELTA);\n<a name=\"46\" href=\"#46\">46</a>  \t\t\tassertEquals(prefix + <span class=\"string\">\"theta is \"</span> + c2.getTheta() + <span class=\"string\">\" but it should be \"</span> + THETA[i], THETA[i], c2.getTheta(), DELTA);\n<a name=\"47\" href=\"#47\">47</a>  \t\t}\n<a name=\"48\" href=\"#48\">48</a>  \t}\n<a name=\"49\" href=\"#49\">49</a>  }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 34395.0}