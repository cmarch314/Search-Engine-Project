{"text": "Search LoginPreferencesHelp GuideAbout Trac WikiTimelineRoadmapBrowse SourceView TicketsSearch Context Navigation BlameRevision Log source nomatic tags NomaticIM 3 buddy bots src twisted internet task py View diff against View revision Visit trunk Last change on this file was 712 checked in by cbaker 7 years ago First draft of nomatic buddy bots oscar bot is functional if you give it good authentication credentials jabber bot is just an example from the web File size 1 5 KB Line 1 test case name twisted test test task 2 Copyright c 2 1 2 4 Twisted Matrix Laboratories 3 See LICENSE for details 456 Scheduling utility methods and classes 78API Stability Unstable91 author U Jp Calderone mailto exarkun twistedmatrix com 11 1213 metaclass type1415import time1617from twisted python runtime import seconds18from twisted python import reflect192 from twisted internet import base defer212223class LoopingCall 24 Call a function repeatedly 2526 ivar f The function to call 27 ivar a A tuple of arguments to pass the function 28 ivar kw A dictionary of keyword arguments to pass to the function 293 If C f returns a deferred rescheduling will not take place until the31 deferred has fired The result value is ignored 32 3334 call None35 running False36 deferred None37 interval None38 count None39 starttime None4 41 def callLater self delay 42 from twisted internet import reactor43 return reactor callLater delay self 4445 seconds staticmethod seconds 4647 def init self f a kw 48 self f f49 self a a5 self kw kw5152 def start self interval now True 53 Start running function every interval seconds 5455 param interval The number of seconds between calls May be56 less than one Precision will depend on the underlying57 platform the available hardware and the load on the system 5859 param now If True run this call right now Otherwise wait6 until the interval has elapsed before beginning 6162 return A Deferred whose callback will be invoked with63 C self when C self stop is called or whose errback will be64 invoked when the function raises an exception or returned a65 deferred that has its errback invoked 66 67 assert not self running Tried to start an already running 68 LoopingCall 69 if interval 7 raise ValueError interval must be 71 self running True72 d self deferred defer Deferred 73 self starttime self seconds 74 self count 75 self interval interval76 if now 77 self 78 else 79 self reschedule 8 return d8182 def stop self 83 Stop running function 84 85 assert self running Tried to stop a LoopingCall that was 86 not running 87 self running False88 if self call is not None 89 self call cancel 9 self call None91 d self deferred self deferred None92 d callback self 9394 def call self 95 def cb result 96 if self running 97 self reschedule 98 else 99 d self deferred self deferred None1 d callback self 1 11 2 def eb failure 1 3 self running False1 4 d self deferred self deferred None1 5 d errback failure 1 61 7 self call None1 8 d defer maybeDeferred self f self a self kw 1 9 d addCallback cb 11 d addErrback eb 111112 def reschedule self 113 if self interval 114 self call self callLater 115 return116117 fromNow self starttime self seconds 118119 while self running 12 self count 1121 fromStart self count self interval122 delay fromNow fromStart123 if delay 124 self call self callLater delay 125 return126127 def repr self 128 if hasattr self f func name 129 func self f func name13 if hasattr self f im class 131 func self f im class name func132 else 133 func reflect safe repr self f 134135 return LoopingCall r s s s 136 self interval func reflect safe repr self a 137 reflect safe repr self kw 13813914 141class SchedulerStopped Exception 142 143 The operation could not complete because the scheduler was stopped in144 progress or was already stopped 145 146147148149class Timer object 15 MAX SLICE 1151 def init self 152 self end time time self MAX SLICE153154155 def call self 156 return time time self end15715815916 EPSILON 1161def defaultScheduler x 162 from twisted internet import reactor163 return reactor callLater EPSILON x 164165166167class Cooperator object 168 169 Cooperative task scheduler 17 171172 def init self 173 terminationPredicateFactory Timer 174 scheduler defaultScheduler 175 started True 176 177 Create a scheduler like object to which iterators may be added 178179 param terminationPredicateFactory A no argument callable which will18 be invoked at the beginning of each step and should return a181 no argument callable which will return False when the step should be182 terminated The default factory is time based and allows iterators to183 run for 1 1 th of a second at a time 184185 param scheduler A one argument callable which takes a no argument186 callable and should invoke it at some future point This will be used187 to schedule each step of this Cooperator 188189 param started A boolean which indicates whether iterators should be19 stepped as soon as they are added or if they will be queued up until191 L Cooperator start is called 192 193 self iterators 194 self metarator iter 195 self terminationPredicateFactory terminationPredicateFactory196 self scheduler scheduler197 self delayedCall None198 self stopped False199 self started started2 2 12 2 def coiterate self iterator doneDeferred None 2 3 2 4 Add an iterator to the list of iterators I am currently running 2 52 6 return a Deferred that will fire when the iterator finishes 2 7 2 8 if doneDeferred is None 2 9 doneDeferred defer Deferred 21 if self stopped 211 doneDeferred errback SchedulerStopped 212 return doneDeferred213 self iterators append iterator doneDeferred 214 self reschedule 215 return doneDeferred216217218 def tasks self 219 terminator self terminationPredicateFactory 22 while self iterators 221 for i in self metarator 222 yield i223 if terminator 224 return225 self metarator iter self iterators 226227228 def tick self 229 23 Run one scheduler tick 231 232 self delayedCall None233 for taskObj in self tasks 234 iterator doneDeferred taskObj235 try 236 result iterator next 237 except StopIteration 238 self iterators remove taskObj 239 doneDeferred callback iterator 24 except 241 self iterators remove taskObj 242 doneDeferred errback 243 else 244 if isinstance result defer Deferred 245 self iterators remove taskObj 246 def cbContinue result taskObj taskObj 247 self coiterate taskObj 248 result addCallbacks cbContinue doneDeferred errback 249 self reschedule 25 251252 mustScheduleOnStart False253 def reschedule self 254 if not self started 255 self mustScheduleOnStart True256 return257 if self delayedCall is None and self iterators 258 self delayedCall self scheduler self tick 25926 261 def start self 262 263 Begin scheduling steps 264 265 self stopped False266 self started True267 if self mustScheduleOnStart 268 del self mustScheduleOnStart269 self reschedule 27 271272 def stop self 273 274 Stop scheduling steps Errback the completion Deferreds of all275 iterators which have been added and forget about them 276 277 self stopped True278 for iterator doneDeferred in self iterators 279 doneDeferred errback SchedulerStopped 28 self iterators 281 if self delayedCall is not None 282 self delayedCall cancel 283 self delayedCall None284285286287 theCooperator Cooperator 288def coiterate iterator 289 29 Cooperatively iterate over the given iterator dividing runtime between it291 and all other iterators which have been passed to this function and not yet292 exhausted 293 294 return theCooperator coiterate iterator 295296297298class Clock 299 3 Provide a deterministic easily controlled implementation of3 1 L IReactorTime callLater This is commonly useful for writing3 2 deterministic unit tests for code which schedules events using this API 3 3 3 4 rightNow 3 53 6 def init self 3 7 self calls 3 83 9 def seconds self 31 311 Pretend to be time time This is used internally when an operation312 such as L IDelayedCall reset needs to determine a a time value313 relative to the current time 314315 rtype C float 316 return The time which should be considered the current time 317 318 return self rightNow31932 321 def callLater self when what a kw 322 323 See L twisted internet interfaces IReactorTime callLater 324 325 self calls append 326 base DelayedCall self seconds when 327 what a kw 328 self calls remove 329 lambda c None 33 self seconds 331 self calls sort lambda a b cmp a getTime b getTime 332 return self calls 1 333334335 def advance self amount 336 337 Move time on this clock forward by the given amount and run whatever338 pending calls should be run 33934 type amount C float 341 param amount The number of seconds which to advance this clock s342 time 343 344 self rightNow amount345 while self calls and self calls getTime self seconds 346 call self calls pop 347 call called 1348 call func call args call kw 34935 351 def pump self timings 352 353 Advance incrementally by the given set of times 354355 type timings iterable of C float 356 357 for amount in timings 358 self advance amount 35936 361362 all 363 LoopingCall 364365 Clock 366367 SchedulerStopped Cooperator coiterate 368 Note See TracBrowser for help on using the repository browser Download in other formats Plain Text Original Format Powered by Trac 1 1 By Edgewall Software All content copyright 2 7 2 8 by LUCI http luci ics uci edu ", "_id": "http://djp3-pc2.ics.uci.edu/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.3/buddy_bots/src/twisted/internet/task.py", "title": "\n      task.py in nomatic/tags/nomaticim-0.0.3/buddy_bots/src/twisted/internet\n     \u2013 nomatic*im\n    ", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n  \n\n\n  <head>\n\t\t<title>\n      task.py in nomatic/tags/NomaticIM-0.0.3/buddy_bots/src/twisted/internet\n     \u2013 Nomatic*IM\n    </title><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><link rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search\" /><link rel=\"help\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.3/buddy_bots/src/twisted/internet/task.py?format=txt\" type=\"text/plain\" title=\"Plain Text\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.3/buddy_bots/src/twisted/internet/task.py\" type=\"application/x-python; charset=iso-8859-15\" title=\"Original Format\" /><link rel=\"start\" href=\"/LUCICodeRepository/nomaticIM/wiki\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/code.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/pygments/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/browser.css\" type=\"text/css\" /><link rel=\"shortcut icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link rel=\"icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link type=\"application/opensearchdescription+xml\" rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search/opensearch\" title=\"Search Nomatic*IM\" /><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/jquery.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/babel.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/messages/en_US.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/trac.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/search.js\"></script><script type=\"text/javascript\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/folding.js\"></script><script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\".trac-toggledeleted\").show().click(function() {\n                  $(this).siblings().find(\".trac-deleted\").toggle();\n                  return false;\n        }).click();\n        $(\"#jumploc input\").hide();\n        $(\"#jumploc select\").change(function () {\n          this.parentNode.parentNode.submit();\n        });\n          $('#preview table.code').enableCollapsibleColumns($('#preview table.code thead th.content'));\n      });\n    </script>\n\t</head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://luci.ics.uci.edu/#code\"><img src=\"http://luci.ics.uci.edu/blog/archives/LUCIhorzTight.jpg\" alt=\"LUCI Code Repository\" /></a>\n      </div>\n      <form id=\"search\" action=\"/LUCICodeRepository/nomaticIM/search\" method=\"get\">\n        <div>\n          <label for=\"proj-search\">Search:</label>\n          <input type=\"text\" id=\"proj-search\" name=\"q\" size=\"18\" value=\"\" />\n          <input type=\"submit\" value=\"Search\" />\n        </div>\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/login\">Login</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/prefs\">Preferences</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\">Help/Guide</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/wiki\">Wiki</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/timeline\">Timeline</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/roadmap\">Roadmap</a></li><li class=\"active\"><a href=\"/LUCICodeRepository/nomaticIM/browser\">Browse Source</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/report\">View Tickets</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/search\">Search</a></li>\n    </ul>\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/buddy_bots/twisted/internet/task.py?annotate=blame\" title=\"Annotate each line with the last changed revision (this can be time consuming...)\">Blame</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/log/nomatic/tags/NomaticIM-0.0.3/buddy_bots/src/twisted/internet/task.py\">Revision Log</a></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"browser\">\n        <h1>\n          \n<a class=\"pathentry first\" href=\"/LUCICodeRepository/nomaticIM/browser?order=name\" title=\"Go to repository root\">source:</a>\n<a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic?order=name\" title=\"View nomatic\">nomatic</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags?order=name\" title=\"View tags\">tags</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.3?order=name\" title=\"View NomaticIM-0.0.3\">NomaticIM-0.0.3</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.3/buddy_bots?order=name\" title=\"View buddy_bots\">buddy_bots</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.3/buddy_bots/src?order=name\" title=\"View src\">src</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.3/buddy_bots/src/twisted?order=name\" title=\"View twisted\">twisted</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.3/buddy_bots/src/twisted/internet?order=name\" title=\"View internet\">internet</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.3/buddy_bots/src/twisted/internet/task.py?order=name\" title=\"View task.py\">task.py</a>\n<br style=\"clear: both\" />\n\n        </h1>\n        <div id=\"diffrev\">\n          <form action=\"/LUCICodeRepository/nomaticIM/changeset\" method=\"get\">\n            <div>\n              <label title=\"Show the diff against a specific revision\">\n                View diff against: <input type=\"text\" name=\"old\" size=\"6\" />\n                <input type=\"hidden\" name=\"old_path\" value=\"nomatic/tags/NomaticIM-0.0.3/buddy_bots/src/twisted/internet/task.py\" />\n                <input type=\"hidden\" name=\"new\" />\n                <input type=\"hidden\" name=\"new_path\" value=\"nomatic/tags/NomaticIM-0.0.3/buddy_bots/src/twisted/internet/task.py\" />\n              </label>\n            </div>\n          </form>\n        </div>\n        <div id=\"jumprev\">\n          <form action=\"\" method=\"get\">\n            <div>\n              <label for=\"rev\">\n                View revision:</label>\n              <input type=\"text\" id=\"rev\" name=\"rev\" size=\"6\" />\n            </div>\n          </form>\n        </div>\n        <div id=\"jumploc\">\n          <form action=\"\" method=\"get\">\n            <div class=\"buttons\">\n              <label for=\"preselected\">Visit:</label>\n              <select id=\"preselected\" name=\"preselected\">\n                <option selected=\"selected\"></option>\n                <optgroup label=\"branches\">\n                  <option value=\"/LUCICodeRepository/nomaticIM/browser/trunk\">trunk</option>\n                </optgroup>\n              </select>\n              <input type=\"submit\" value=\"Go!\" title=\"Jump to the chosen preselected path\" />\n            </div>\n          </form>\n        </div>\n        <div class=\"trac-tags\">\n        </div>\n      <table id=\"info\" summary=\"Revision info\">\n        <tr>\n          <th>\n                <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/nomatic/trunk/buddy_bots/twisted/internet/task.py\" title=\"View differences\">Last change</a>\n                  on this file was\n                  <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/\" title=\"View changeset 712\">712</a>,\n                  checked in by cbaker, <a class=\"timeline\" href=\"/LUCICodeRepository/nomaticIM/timeline?from=2008-02-16T08%3A16%3A53-08%3A00&amp;precision=second\" title=\"See timeline at Feb 16, 2008, 8:16:53 AM\">7 years ago</a>\n          </th>\n        </tr>\n        <tr>\n          <td class=\"message searchable\">\n              <p>\nFirst draft of nomatic buddy bots. oscar_bot is functional if you give it good authentication credentials, jabber_bot is just an example from the web <br />\n</p>\n          </td>\n        </tr>\n        <tr><td colspan=\"2\">\n            <strong>File size:</strong>\n            <span title=\"10780 bytes\">10.5 KB</span>\n          </td></tr>\n      </table>\n      <div id=\"preview\" class=\"searchable\">\n        \n  <table class=\"code\"><thead><tr><th class=\"lineno\" title=\"Line numbers\">Line</th><th class=\"content\">\u00a0</th></tr></thead><tbody><tr><th id=\"L1\"><a href=\"#L1\">1</a></th><td><span class=\"c\"># -*- test-case-name: twisted.test.test_task -*-</span></td></tr><tr><th id=\"L2\"><a href=\"#L2\">2</a></th><td><span class=\"c\"># Copyright (c) 2001-2004 Twisted Matrix Laboratories.</span></td></tr><tr><th id=\"L3\"><a href=\"#L3\">3</a></th><td><span class=\"c\"># See LICENSE for details.</span></td></tr><tr><th id=\"L4\"><a href=\"#L4\">4</a></th><td></td></tr><tr><th id=\"L5\"><a href=\"#L5\">5</a></th><td></td></tr><tr><th id=\"L6\"><a href=\"#L6\">6</a></th><td><span class=\"sd\">\"\"\"Scheduling utility methods and classes.</span></td></tr><tr><th id=\"L7\"><a href=\"#L7\">7</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L8\"><a href=\"#L8\">8</a></th><td><span class=\"sd\">API Stability: Unstable</span></td></tr><tr><th id=\"L9\"><a href=\"#L9\">9</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L10\"><a href=\"#L10\">10</a></th><td><span class=\"sd\">@author: U{Jp Calderone&lt;mailto:exarkun@twistedmatrix.com&gt;}</span></td></tr><tr><th id=\"L11\"><a href=\"#L11\">11</a></th><td><span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L12\"><a href=\"#L12\">12</a></th><td></td></tr><tr><th id=\"L13\"><a href=\"#L13\">13</a></th><td>__metaclass__ <span class=\"o\">=</span>\u00a0<span class=\"nb\">type</span></td></tr><tr><th id=\"L14\"><a href=\"#L14\">14</a></th><td></td></tr><tr><th id=\"L15\"><a href=\"#L15\">15</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">time</span></td></tr><tr><th id=\"L16\"><a href=\"#L16\">16</a></th><td></td></tr><tr><th id=\"L17\"><a href=\"#L17\">17</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.python.runtime</span>\u00a0<span class=\"kn\">import</span>\u00a0seconds</td></tr><tr><th id=\"L18\"><a href=\"#L18\">18</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.python</span>\u00a0<span class=\"kn\">import</span>\u00a0reflect</td></tr><tr><th id=\"L19\"><a href=\"#L19\">19</a></th><td></td></tr><tr><th id=\"L20\"><a href=\"#L20\">20</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet</span>\u00a0<span class=\"kn\">import</span>\u00a0base<span class=\"p\">,</span>\u00a0defer</td></tr><tr><th id=\"L21\"><a href=\"#L21\">21</a></th><td></td></tr><tr><th id=\"L22\"><a href=\"#L22\">22</a></th><td></td></tr><tr><th id=\"L23\"><a href=\"#L23\">23</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">LoopingCall</span><span class=\"p\">:</span></td></tr><tr><th id=\"L24\"><a href=\"#L24\">24</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Call a function repeatedly.</span></td></tr><tr><th id=\"L25\"><a href=\"#L25\">25</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L26\"><a href=\"#L26\">26</a></th><td><span class=\"sd\">\u00a0 \u00a0 @ivar f: The function to call.</span></td></tr><tr><th id=\"L27\"><a href=\"#L27\">27</a></th><td><span class=\"sd\">\u00a0 \u00a0 @ivar a: A tuple of arguments to pass the function.</span></td></tr><tr><th id=\"L28\"><a href=\"#L28\">28</a></th><td><span class=\"sd\">\u00a0 \u00a0 @ivar kw: A dictionary of keyword arguments to pass to the function.</span></td></tr><tr><th id=\"L29\"><a href=\"#L29\">29</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L30\"><a href=\"#L30\">30</a></th><td><span class=\"sd\">\u00a0 \u00a0 If C{f} returns a deferred, rescheduling will not take place until the</span></td></tr><tr><th id=\"L31\"><a href=\"#L31\">31</a></th><td><span class=\"sd\">\u00a0 \u00a0 deferred has fired. The result value is ignored.</span></td></tr><tr><th id=\"L32\"><a href=\"#L32\">32</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L33\"><a href=\"#L33\">33</a></th><td></td></tr><tr><th id=\"L34\"><a href=\"#L34\">34</a></th><td>\u00a0 \u00a0 call <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L35\"><a href=\"#L35\">35</a></th><td>\u00a0 \u00a0 running <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L36\"><a href=\"#L36\">36</a></th><td>\u00a0 \u00a0 deferred <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L37\"><a href=\"#L37\">37</a></th><td>\u00a0 \u00a0 interval <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L38\"><a href=\"#L38\">38</a></th><td>\u00a0 \u00a0 count <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L39\"><a href=\"#L39\">39</a></th><td>\u00a0 \u00a0 starttime <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L40\"><a href=\"#L40\">40</a></th><td></td></tr><tr><th id=\"L41\"><a href=\"#L41\">41</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_callLater</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0delay<span class=\"p\">):</span></td></tr><tr><th id=\"L42\"><a href=\"#L42\">42</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet</span>\u00a0<span class=\"kn\">import</span>\u00a0reactor</td></tr><tr><th id=\"L43\"><a href=\"#L43\">43</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0reactor<span class=\"o\">.</span>callLater<span class=\"p\">(</span>delay<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L44\"><a href=\"#L44\">44</a></th><td></td></tr><tr><th id=\"L45\"><a href=\"#L45\">45</a></th><td>\u00a0 \u00a0 _seconds <span class=\"o\">=</span>\u00a0<span class=\"nb\">staticmethod</span><span class=\"p\">(</span>seconds<span class=\"p\">)</span></td></tr><tr><th id=\"L46\"><a href=\"#L46\">46</a></th><td></td></tr><tr><th id=\"L47\"><a href=\"#L47\">47</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0f<span class=\"p\">,</span>\u00a0<span class=\"o\">*</span>a<span class=\"p\">,</span>\u00a0<span class=\"o\">**</span>kw<span class=\"p\">):</span></td></tr><tr><th id=\"L48\"><a href=\"#L48\">48</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>f <span class=\"o\">=</span>\u00a0f</td></tr><tr><th id=\"L49\"><a href=\"#L49\">49</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>a <span class=\"o\">=</span>\u00a0a</td></tr><tr><th id=\"L50\"><a href=\"#L50\">50</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>kw <span class=\"o\">=</span>\u00a0kw</td></tr><tr><th id=\"L51\"><a href=\"#L51\">51</a></th><td></td></tr><tr><th id=\"L52\"><a href=\"#L52\">52</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">start</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0interval<span class=\"p\">,</span>\u00a0now<span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">):</span></td></tr><tr><th id=\"L53\"><a href=\"#L53\">53</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Start running function every interval seconds.</span></td></tr><tr><th id=\"L54\"><a href=\"#L54\">54</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L55\"><a href=\"#L55\">55</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param interval: The number of seconds between calls.\u00a0 May be</span></td></tr><tr><th id=\"L56\"><a href=\"#L56\">56</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 less than one.\u00a0 Precision will depend on the underlying</span></td></tr><tr><th id=\"L57\"><a href=\"#L57\">57</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 platform, the available hardware, and the load on the system.</span></td></tr><tr><th id=\"L58\"><a href=\"#L58\">58</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L59\"><a href=\"#L59\">59</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param now: If True, run this call right now.\u00a0 Otherwise, wait</span></td></tr><tr><th id=\"L60\"><a href=\"#L60\">60</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 until the interval has elapsed before beginning.</span></td></tr><tr><th id=\"L61\"><a href=\"#L61\">61</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L62\"><a href=\"#L62\">62</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: A Deferred whose callback will be invoked with</span></td></tr><tr><th id=\"L63\"><a href=\"#L63\">63</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 C{self} when C{self.stop} is called, or whose errback will be</span></td></tr><tr><th id=\"L64\"><a href=\"#L64\">64</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 invoked when the function raises an exception or returned a</span></td></tr><tr><th id=\"L65\"><a href=\"#L65\">65</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 deferred that has its errback invoked.</span></td></tr><tr><th id=\"L66\"><a href=\"#L66\">66</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L67\"><a href=\"#L67\">67</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">assert</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>running<span class=\"p\">,</span>\u00a0<span class=\"p\">(</span><span class=\"s\">\"Tried to start an already running \"</span></td></tr><tr><th id=\"L68\"><a href=\"#L68\">68</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">\"LoopingCall.\"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L69\"><a href=\"#L69\">69</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0interval <span class=\"o\">&lt;</span>\u00a0<span class=\"mi\">0</span><span class=\"p\">:</span></td></tr><tr><th id=\"L70\"><a href=\"#L70\">70</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">ValueError</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"interval must be &gt;= 0\"</span></td></tr><tr><th id=\"L71\"><a href=\"#L71\">71</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>running <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L72\"><a href=\"#L72\">72</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 d <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>deferred <span class=\"o\">=</span>\u00a0defer<span class=\"o\">.</span>Deferred<span class=\"p\">()</span></td></tr><tr><th id=\"L73\"><a href=\"#L73\">73</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>starttime <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_seconds<span class=\"p\">()</span></td></tr><tr><th id=\"L74\"><a href=\"#L74\">74</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>count <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L75\"><a href=\"#L75\">75</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>interval <span class=\"o\">=</span>\u00a0interval</td></tr><tr><th id=\"L76\"><a href=\"#L76\">76</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0now<span class=\"p\">:</span></td></tr><tr><th id=\"L77\"><a href=\"#L77\">77</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"p\">()</span></td></tr><tr><th id=\"L78\"><a href=\"#L78\">78</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L79\"><a href=\"#L79\">79</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_reschedule<span class=\"p\">()</span></td></tr><tr><th id=\"L80\"><a href=\"#L80\">80</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0d</td></tr><tr><th id=\"L81\"><a href=\"#L81\">81</a></th><td></td></tr><tr><th id=\"L82\"><a href=\"#L82\">82</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">stop</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L83\"><a href=\"#L83\">83</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Stop running function.</span></td></tr><tr><th id=\"L84\"><a href=\"#L84\">84</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L85\"><a href=\"#L85\">85</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">assert</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>running<span class=\"p\">,</span>\u00a0<span class=\"p\">(</span><span class=\"s\">\"Tried to stop a LoopingCall that was \"</span></td></tr><tr><th id=\"L86\"><a href=\"#L86\">86</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">\"not running.\"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L87\"><a href=\"#L87\">87</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>running <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L88\"><a href=\"#L88\">88</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>call <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L89\"><a href=\"#L89\">89</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>call<span class=\"o\">.</span>cancel<span class=\"p\">()</span></td></tr><tr><th id=\"L90\"><a href=\"#L90\">90</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>call <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L91\"><a href=\"#L91\">91</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 d<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>deferred <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>deferred<span class=\"p\">,</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L92\"><a href=\"#L92\">92</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 d<span class=\"o\">.</span>callback<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L93\"><a href=\"#L93\">93</a></th><td></td></tr><tr><th id=\"L94\"><a href=\"#L94\">94</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L95\"><a href=\"#L95\">95</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">cb</span><span class=\"p\">(</span>result<span class=\"p\">):</span></td></tr><tr><th id=\"L96\"><a href=\"#L96\">96</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>running<span class=\"p\">:</span></td></tr><tr><th id=\"L97\"><a href=\"#L97\">97</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_reschedule<span class=\"p\">()</span></td></tr><tr><th id=\"L98\"><a href=\"#L98\">98</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L99\"><a href=\"#L99\">99</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 d<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>deferred <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>deferred<span class=\"p\">,</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L100\"><a href=\"#L100\">100</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 d<span class=\"o\">.</span>callback<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L101\"><a href=\"#L101\">101</a></th><td></td></tr><tr><th id=\"L102\"><a href=\"#L102\">102</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">eb</span><span class=\"p\">(</span>failure<span class=\"p\">):</span></td></tr><tr><th id=\"L103\"><a href=\"#L103\">103</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>running <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L104\"><a href=\"#L104\">104</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 d<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>deferred <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>deferred<span class=\"p\">,</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L105\"><a href=\"#L105\">105</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 d<span class=\"o\">.</span>errback<span class=\"p\">(</span>failure<span class=\"p\">)</span></td></tr><tr><th id=\"L106\"><a href=\"#L106\">106</a></th><td></td></tr><tr><th id=\"L107\"><a href=\"#L107\">107</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>call <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L108\"><a href=\"#L108\">108</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 d <span class=\"o\">=</span>\u00a0defer<span class=\"o\">.</span>maybeDeferred<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>f<span class=\"p\">,</span>\u00a0<span class=\"o\">*</span><span class=\"bp\">self</span><span class=\"o\">.</span>a<span class=\"p\">,</span>\u00a0<span class=\"o\">**</span><span class=\"bp\">self</span><span class=\"o\">.</span>kw<span class=\"p\">)</span></td></tr><tr><th id=\"L109\"><a href=\"#L109\">109</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 d<span class=\"o\">.</span>addCallback<span class=\"p\">(</span>cb<span class=\"p\">)</span></td></tr><tr><th id=\"L110\"><a href=\"#L110\">110</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 d<span class=\"o\">.</span>addErrback<span class=\"p\">(</span>eb<span class=\"p\">)</span></td></tr><tr><th id=\"L111\"><a href=\"#L111\">111</a></th><td></td></tr><tr><th id=\"L112\"><a href=\"#L112\">112</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_reschedule</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L113\"><a href=\"#L113\">113</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>interval <span class=\"o\">==</span>\u00a0<span class=\"mi\">0</span><span class=\"p\">:</span></td></tr><tr><th id=\"L114\"><a href=\"#L114\">114</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>call <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_callLater<span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span></td></tr><tr><th id=\"L115\"><a href=\"#L115\">115</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span></td></tr><tr><th id=\"L116\"><a href=\"#L116\">116</a></th><td></td></tr><tr><th id=\"L117\"><a href=\"#L117\">117</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 fromNow <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>starttime <span class=\"o\">-</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_seconds<span class=\"p\">()</span></td></tr><tr><th id=\"L118\"><a href=\"#L118\">118</a></th><td></td></tr><tr><th id=\"L119\"><a href=\"#L119\">119</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">while</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>running<span class=\"p\">:</span></td></tr><tr><th id=\"L120\"><a href=\"#L120\">120</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>count <span class=\"o\">+=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L121\"><a href=\"#L121\">121</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fromStart <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>count <span class=\"o\">*</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>interval</td></tr><tr><th id=\"L122\"><a href=\"#L122\">122</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 delay <span class=\"o\">=</span>\u00a0fromNow <span class=\"o\">+</span>\u00a0fromStart</td></tr><tr><th id=\"L123\"><a href=\"#L123\">123</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0delay <span class=\"o\">&gt;</span>\u00a0<span class=\"mi\">0</span><span class=\"p\">:</span></td></tr><tr><th id=\"L124\"><a href=\"#L124\">124</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>call <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_callLater<span class=\"p\">(</span>delay<span class=\"p\">)</span></td></tr><tr><th id=\"L125\"><a href=\"#L125\">125</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span></td></tr><tr><th id=\"L126\"><a href=\"#L126\">126</a></th><td></td></tr><tr><th id=\"L127\"><a href=\"#L127\">127</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L128\"><a href=\"#L128\">128</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>f<span class=\"p\">,</span>\u00a0<span class=\"s\">'func_name'</span><span class=\"p\">):</span></td></tr><tr><th id=\"L129\"><a href=\"#L129\">129</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 func <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>f<span class=\"o\">.</span>func_name</td></tr><tr><th id=\"L130\"><a href=\"#L130\">130</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>f<span class=\"p\">,</span>\u00a0<span class=\"s\">'im_class'</span><span class=\"p\">):</span></td></tr><tr><th id=\"L131\"><a href=\"#L131\">131</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 func <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>f<span class=\"o\">.</span>im_class<span class=\"o\">.</span>__name__ <span class=\"o\">+</span>\u00a0<span class=\"s\">'.'</span>\u00a0<span class=\"o\">+</span>\u00a0func</td></tr><tr><th id=\"L132\"><a href=\"#L132\">132</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L133\"><a href=\"#L133\">133</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 func <span class=\"o\">=</span>\u00a0reflect<span class=\"o\">.</span>safe_repr<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>f<span class=\"p\">)</span></td></tr><tr><th id=\"L134\"><a href=\"#L134\">134</a></th><td></td></tr><tr><th id=\"L135\"><a href=\"#L135\">135</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"s\">'LoopingCall&lt;</span><span class=\"si\">%r</span><span class=\"s\">&gt;(</span><span class=\"si\">%s</span><span class=\"s\">, *</span><span class=\"si\">%s</span><span class=\"s\">, **</span><span class=\"si\">%s</span><span class=\"s\">)'</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span></td></tr><tr><th id=\"L136\"><a href=\"#L136\">136</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>interval<span class=\"p\">,</span>\u00a0func<span class=\"p\">,</span>\u00a0reflect<span class=\"o\">.</span>safe_repr<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>a<span class=\"p\">),</span></td></tr><tr><th id=\"L137\"><a href=\"#L137\">137</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 reflect<span class=\"o\">.</span>safe_repr<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>kw<span class=\"p\">))</span></td></tr><tr><th id=\"L138\"><a href=\"#L138\">138</a></th><td></td></tr><tr><th id=\"L139\"><a href=\"#L139\">139</a></th><td></td></tr><tr><th id=\"L140\"><a href=\"#L140\">140</a></th><td></td></tr><tr><th id=\"L141\"><a href=\"#L141\">141</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">SchedulerStopped</span><span class=\"p\">(</span><span class=\"ne\">Exception</span><span class=\"p\">):</span></td></tr><tr><th id=\"L142\"><a href=\"#L142\">142</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L143\"><a href=\"#L143\">143</a></th><td><span class=\"sd\">\u00a0 \u00a0 The operation could not complete because the scheduler was stopped in</span></td></tr><tr><th id=\"L144\"><a href=\"#L144\">144</a></th><td><span class=\"sd\">\u00a0 \u00a0 progress or was already stopped.</span></td></tr><tr><th id=\"L145\"><a href=\"#L145\">145</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L146\"><a href=\"#L146\">146</a></th><td></td></tr><tr><th id=\"L147\"><a href=\"#L147\">147</a></th><td></td></tr><tr><th id=\"L148\"><a href=\"#L148\">148</a></th><td></td></tr><tr><th id=\"L149\"><a href=\"#L149\">149</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">_Timer</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span></td></tr><tr><th id=\"L150\"><a href=\"#L150\">150</a></th><td>\u00a0 \u00a0 MAX_SLICE <span class=\"o\">=</span>\u00a0<span class=\"mf\">0.01</span></td></tr><tr><th id=\"L151\"><a href=\"#L151\">151</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L152\"><a href=\"#L152\">152</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>end <span class=\"o\">=</span>\u00a0time<span class=\"o\">.</span>time<span class=\"p\">()</span>\u00a0<span class=\"o\">+</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>MAX_SLICE</td></tr><tr><th id=\"L153\"><a href=\"#L153\">153</a></th><td></td></tr><tr><th id=\"L154\"><a href=\"#L154\">154</a></th><td></td></tr><tr><th id=\"L155\"><a href=\"#L155\">155</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L156\"><a href=\"#L156\">156</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0time<span class=\"o\">.</span>time<span class=\"p\">()</span>\u00a0<span class=\"o\">&gt;=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>end</td></tr><tr><th id=\"L157\"><a href=\"#L157\">157</a></th><td></td></tr><tr><th id=\"L158\"><a href=\"#L158\">158</a></th><td></td></tr><tr><th id=\"L159\"><a href=\"#L159\">159</a></th><td></td></tr><tr><th id=\"L160\"><a href=\"#L160\">160</a></th><td>_EPSILON <span class=\"o\">=</span>\u00a0<span class=\"mf\">0.00000001</span></td></tr><tr><th id=\"L161\"><a href=\"#L161\">161</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">_defaultScheduler</span><span class=\"p\">(</span>x<span class=\"p\">):</span></td></tr><tr><th id=\"L162\"><a href=\"#L162\">162</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet</span>\u00a0<span class=\"kn\">import</span>\u00a0reactor</td></tr><tr><th id=\"L163\"><a href=\"#L163\">163</a></th><td>\u00a0 \u00a0 <span class=\"k\">return</span>\u00a0reactor<span class=\"o\">.</span>callLater<span class=\"p\">(</span>_EPSILON<span class=\"p\">,</span>\u00a0x<span class=\"p\">)</span></td></tr><tr><th id=\"L164\"><a href=\"#L164\">164</a></th><td></td></tr><tr><th id=\"L165\"><a href=\"#L165\">165</a></th><td></td></tr><tr><th id=\"L166\"><a href=\"#L166\">166</a></th><td></td></tr><tr><th id=\"L167\"><a href=\"#L167\">167</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">Cooperator</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span></td></tr><tr><th id=\"L168\"><a href=\"#L168\">168</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L169\"><a href=\"#L169\">169</a></th><td><span class=\"sd\">\u00a0 \u00a0 Cooperative task scheduler.</span></td></tr><tr><th id=\"L170\"><a href=\"#L170\">170</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L171\"><a href=\"#L171\">171</a></th><td></td></tr><tr><th id=\"L172\"><a href=\"#L172\">172</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span></td></tr><tr><th id=\"L173\"><a href=\"#L173\">173</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0terminationPredicateFactory<span class=\"o\">=</span>_Timer<span class=\"p\">,</span></td></tr><tr><th id=\"L174\"><a href=\"#L174\">174</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0scheduler<span class=\"o\">=</span>_defaultScheduler<span class=\"p\">,</span></td></tr><tr><th id=\"L175\"><a href=\"#L175\">175</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0started<span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">):</span></td></tr><tr><th id=\"L176\"><a href=\"#L176\">176</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L177\"><a href=\"#L177\">177</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Create a scheduler-like object to which iterators may be added.</span></td></tr><tr><th id=\"L178\"><a href=\"#L178\">178</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L179\"><a href=\"#L179\">179</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param terminationPredicateFactory: A no-argument callable which will</span></td></tr><tr><th id=\"L180\"><a href=\"#L180\">180</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 be invoked at the beginning of each step and should return a</span></td></tr><tr><th id=\"L181\"><a href=\"#L181\">181</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 no-argument callable which will return False when the step should be</span></td></tr><tr><th id=\"L182\"><a href=\"#L182\">182</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 terminated.\u00a0 The default factory is time-based and allows iterators to</span></td></tr><tr><th id=\"L183\"><a href=\"#L183\">183</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 run for 1/100th of a second at a time.</span></td></tr><tr><th id=\"L184\"><a href=\"#L184\">184</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L185\"><a href=\"#L185\">185</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param scheduler: A one-argument callable which takes a no-argument</span></td></tr><tr><th id=\"L186\"><a href=\"#L186\">186</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 callable and should invoke it at some future point.\u00a0 This will be used</span></td></tr><tr><th id=\"L187\"><a href=\"#L187\">187</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 to schedule each step of this Cooperator.</span></td></tr><tr><th id=\"L188\"><a href=\"#L188\">188</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L189\"><a href=\"#L189\">189</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param started: A boolean which indicates whether iterators should be</span></td></tr><tr><th id=\"L190\"><a href=\"#L190\">190</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 stepped as soon as they are added, or if they will be queued up until</span></td></tr><tr><th id=\"L191\"><a href=\"#L191\">191</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 L{Cooperator.start} is called.</span></td></tr><tr><th id=\"L192\"><a href=\"#L192\">192</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L193\"><a href=\"#L193\">193</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>iterators <span class=\"o\">=</span>\u00a0<span class=\"p\">[]</span></td></tr><tr><th id=\"L194\"><a href=\"#L194\">194</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_metarator <span class=\"o\">=</span>\u00a0<span class=\"nb\">iter</span><span class=\"p\">(())</span></td></tr><tr><th id=\"L195\"><a href=\"#L195\">195</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_terminationPredicateFactory <span class=\"o\">=</span>\u00a0terminationPredicateFactory</td></tr><tr><th id=\"L196\"><a href=\"#L196\">196</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_scheduler <span class=\"o\">=</span>\u00a0scheduler</td></tr><tr><th id=\"L197\"><a href=\"#L197\">197</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_delayedCall <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L198\"><a href=\"#L198\">198</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_stopped <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L199\"><a href=\"#L199\">199</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_started <span class=\"o\">=</span>\u00a0started</td></tr><tr><th id=\"L200\"><a href=\"#L200\">200</a></th><td></td></tr><tr><th id=\"L201\"><a href=\"#L201\">201</a></th><td></td></tr><tr><th id=\"L202\"><a href=\"#L202\">202</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">coiterate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0iterator<span class=\"p\">,</span>\u00a0doneDeferred<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L203\"><a href=\"#L203\">203</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L204\"><a href=\"#L204\">204</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Add an iterator to the list of iterators I am currently running.</span></td></tr><tr><th id=\"L205\"><a href=\"#L205\">205</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L206\"><a href=\"#L206\">206</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: a Deferred that will fire when the iterator finishes.</span></td></tr><tr><th id=\"L207\"><a href=\"#L207\">207</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L208\"><a href=\"#L208\">208</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0doneDeferred <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L209\"><a href=\"#L209\">209</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 doneDeferred <span class=\"o\">=</span>\u00a0defer<span class=\"o\">.</span>Deferred<span class=\"p\">()</span></td></tr><tr><th id=\"L210\"><a href=\"#L210\">210</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_stopped<span class=\"p\">:</span></td></tr><tr><th id=\"L211\"><a href=\"#L211\">211</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 doneDeferred<span class=\"o\">.</span>errback<span class=\"p\">(</span>SchedulerStopped<span class=\"p\">())</span></td></tr><tr><th id=\"L212\"><a href=\"#L212\">212</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0doneDeferred</td></tr><tr><th id=\"L213\"><a href=\"#L213\">213</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>iterators<span class=\"o\">.</span>append<span class=\"p\">((</span>iterator<span class=\"p\">,</span>\u00a0doneDeferred<span class=\"p\">))</span></td></tr><tr><th id=\"L214\"><a href=\"#L214\">214</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_reschedule<span class=\"p\">()</span></td></tr><tr><th id=\"L215\"><a href=\"#L215\">215</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0doneDeferred</td></tr><tr><th id=\"L216\"><a href=\"#L216\">216</a></th><td></td></tr><tr><th id=\"L217\"><a href=\"#L217\">217</a></th><td></td></tr><tr><th id=\"L218\"><a href=\"#L218\">218</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_tasks</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L219\"><a href=\"#L219\">219</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 terminator <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_terminationPredicateFactory<span class=\"p\">()</span></td></tr><tr><th id=\"L220\"><a href=\"#L220\">220</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">while</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>iterators<span class=\"p\">:</span></td></tr><tr><th id=\"L221\"><a href=\"#L221\">221</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0i <span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_metarator<span class=\"p\">:</span></td></tr><tr><th id=\"L222\"><a href=\"#L222\">222</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">yield</span>\u00a0i</td></tr><tr><th id=\"L223\"><a href=\"#L223\">223</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0terminator<span class=\"p\">():</span></td></tr><tr><th id=\"L224\"><a href=\"#L224\">224</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span></td></tr><tr><th id=\"L225\"><a href=\"#L225\">225</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_metarator <span class=\"o\">=</span>\u00a0<span class=\"nb\">iter</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>iterators<span class=\"p\">)</span></td></tr><tr><th id=\"L226\"><a href=\"#L226\">226</a></th><td></td></tr><tr><th id=\"L227\"><a href=\"#L227\">227</a></th><td></td></tr><tr><th id=\"L228\"><a href=\"#L228\">228</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_tick</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L229\"><a href=\"#L229\">229</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L230\"><a href=\"#L230\">230</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Run one scheduler tick.</span></td></tr><tr><th id=\"L231\"><a href=\"#L231\">231</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L232\"><a href=\"#L232\">232</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_delayedCall <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L233\"><a href=\"#L233\">233</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0taskObj <span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_tasks<span class=\"p\">():</span></td></tr><tr><th id=\"L234\"><a href=\"#L234\">234</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 iterator<span class=\"p\">,</span>\u00a0doneDeferred <span class=\"o\">=</span>\u00a0taskObj</td></tr><tr><th id=\"L235\"><a href=\"#L235\">235</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L236\"><a href=\"#L236\">236</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 result <span class=\"o\">=</span>\u00a0iterator<span class=\"o\">.</span>next<span class=\"p\">()</span></td></tr><tr><th id=\"L237\"><a href=\"#L237\">237</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">StopIteration</span><span class=\"p\">:</span></td></tr><tr><th id=\"L238\"><a href=\"#L238\">238</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>iterators<span class=\"o\">.</span>remove<span class=\"p\">(</span>taskObj<span class=\"p\">)</span></td></tr><tr><th id=\"L239\"><a href=\"#L239\">239</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 doneDeferred<span class=\"o\">.</span>callback<span class=\"p\">(</span>iterator<span class=\"p\">)</span></td></tr><tr><th id=\"L240\"><a href=\"#L240\">240</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span><span class=\"p\">:</span></td></tr><tr><th id=\"L241\"><a href=\"#L241\">241</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>iterators<span class=\"o\">.</span>remove<span class=\"p\">(</span>taskObj<span class=\"p\">)</span></td></tr><tr><th id=\"L242\"><a href=\"#L242\">242</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 doneDeferred<span class=\"o\">.</span>errback<span class=\"p\">()</span></td></tr><tr><th id=\"L243\"><a href=\"#L243\">243</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L244\"><a href=\"#L244\">244</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">isinstance</span><span class=\"p\">(</span>result<span class=\"p\">,</span>\u00a0defer<span class=\"o\">.</span>Deferred<span class=\"p\">):</span></td></tr><tr><th id=\"L245\"><a href=\"#L245\">245</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>iterators<span class=\"o\">.</span>remove<span class=\"p\">(</span>taskObj<span class=\"p\">)</span></td></tr><tr><th id=\"L246\"><a href=\"#L246\">246</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">cbContinue</span><span class=\"p\">(</span>result<span class=\"p\">,</span>\u00a0taskObj<span class=\"o\">=</span>taskObj<span class=\"p\">):</span></td></tr><tr><th id=\"L247\"><a href=\"#L247\">247</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>coiterate<span class=\"p\">(</span><span class=\"o\">*</span>taskObj<span class=\"p\">)</span></td></tr><tr><th id=\"L248\"><a href=\"#L248\">248</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 result<span class=\"o\">.</span>addCallbacks<span class=\"p\">(</span>cbContinue<span class=\"p\">,</span>\u00a0doneDeferred<span class=\"o\">.</span>errback<span class=\"p\">)</span></td></tr><tr><th id=\"L249\"><a href=\"#L249\">249</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_reschedule<span class=\"p\">()</span></td></tr><tr><th id=\"L250\"><a href=\"#L250\">250</a></th><td></td></tr><tr><th id=\"L251\"><a href=\"#L251\">251</a></th><td></td></tr><tr><th id=\"L252\"><a href=\"#L252\">252</a></th><td>\u00a0 \u00a0 _mustScheduleOnStart <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L253\"><a href=\"#L253\">253</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_reschedule</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L254\"><a href=\"#L254\">254</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_started<span class=\"p\">:</span></td></tr><tr><th id=\"L255\"><a href=\"#L255\">255</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_mustScheduleOnStart <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L256\"><a href=\"#L256\">256</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span></td></tr><tr><th id=\"L257\"><a href=\"#L257\">257</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_delayedCall <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span>\u00a0<span class=\"ow\">and</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>iterators<span class=\"p\">:</span></td></tr><tr><th id=\"L258\"><a href=\"#L258\">258</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_delayedCall <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_scheduler<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>_tick<span class=\"p\">)</span></td></tr><tr><th id=\"L259\"><a href=\"#L259\">259</a></th><td></td></tr><tr><th id=\"L260\"><a href=\"#L260\">260</a></th><td></td></tr><tr><th id=\"L261\"><a href=\"#L261\">261</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">start</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L262\"><a href=\"#L262\">262</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L263\"><a href=\"#L263\">263</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Begin scheduling steps.</span></td></tr><tr><th id=\"L264\"><a href=\"#L264\">264</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L265\"><a href=\"#L265\">265</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_stopped <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L266\"><a href=\"#L266\">266</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_started <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L267\"><a href=\"#L267\">267</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_mustScheduleOnStart<span class=\"p\">:</span></td></tr><tr><th id=\"L268\"><a href=\"#L268\">268</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_mustScheduleOnStart</td></tr><tr><th id=\"L269\"><a href=\"#L269\">269</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_reschedule<span class=\"p\">()</span></td></tr><tr><th id=\"L270\"><a href=\"#L270\">270</a></th><td></td></tr><tr><th id=\"L271\"><a href=\"#L271\">271</a></th><td></td></tr><tr><th id=\"L272\"><a href=\"#L272\">272</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">stop</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L273\"><a href=\"#L273\">273</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L274\"><a href=\"#L274\">274</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Stop scheduling steps.\u00a0 Errback the completion Deferreds of all</span></td></tr><tr><th id=\"L275\"><a href=\"#L275\">275</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 iterators which have been added and forget about them.</span></td></tr><tr><th id=\"L276\"><a href=\"#L276\">276</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L277\"><a href=\"#L277\">277</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_stopped <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L278\"><a href=\"#L278\">278</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0iterator<span class=\"p\">,</span>\u00a0doneDeferred <span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>iterators<span class=\"p\">:</span></td></tr><tr><th id=\"L279\"><a href=\"#L279\">279</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 doneDeferred<span class=\"o\">.</span>errback<span class=\"p\">(</span>SchedulerStopped<span class=\"p\">())</span></td></tr><tr><th id=\"L280\"><a href=\"#L280\">280</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>iterators <span class=\"o\">=</span>\u00a0<span class=\"p\">[]</span></td></tr><tr><th id=\"L281\"><a href=\"#L281\">281</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_delayedCall <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L282\"><a href=\"#L282\">282</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_delayedCall<span class=\"o\">.</span>cancel<span class=\"p\">()</span></td></tr><tr><th id=\"L283\"><a href=\"#L283\">283</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_delayedCall <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L284\"><a href=\"#L284\">284</a></th><td></td></tr><tr><th id=\"L285\"><a href=\"#L285\">285</a></th><td></td></tr><tr><th id=\"L286\"><a href=\"#L286\">286</a></th><td></td></tr><tr><th id=\"L287\"><a href=\"#L287\">287</a></th><td>_theCooperator <span class=\"o\">=</span>\u00a0Cooperator<span class=\"p\">()</span></td></tr><tr><th id=\"L288\"><a href=\"#L288\">288</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">coiterate</span><span class=\"p\">(</span>iterator<span class=\"p\">):</span></td></tr><tr><th id=\"L289\"><a href=\"#L289\">289</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L290\"><a href=\"#L290\">290</a></th><td><span class=\"sd\">\u00a0 \u00a0 Cooperatively iterate over the given iterator, dividing runtime between it</span></td></tr><tr><th id=\"L291\"><a href=\"#L291\">291</a></th><td><span class=\"sd\">\u00a0 \u00a0 and all other iterators which have been passed to this function and not yet</span></td></tr><tr><th id=\"L292\"><a href=\"#L292\">292</a></th><td><span class=\"sd\">\u00a0 \u00a0 exhausted.</span></td></tr><tr><th id=\"L293\"><a href=\"#L293\">293</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L294\"><a href=\"#L294\">294</a></th><td>\u00a0 \u00a0 <span class=\"k\">return</span>\u00a0_theCooperator<span class=\"o\">.</span>coiterate<span class=\"p\">(</span>iterator<span class=\"p\">)</span></td></tr><tr><th id=\"L295\"><a href=\"#L295\">295</a></th><td></td></tr><tr><th id=\"L296\"><a href=\"#L296\">296</a></th><td></td></tr><tr><th id=\"L297\"><a href=\"#L297\">297</a></th><td></td></tr><tr><th id=\"L298\"><a href=\"#L298\">298</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">Clock</span><span class=\"p\">:</span></td></tr><tr><th id=\"L299\"><a href=\"#L299\">299</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L300\"><a href=\"#L300\">300</a></th><td><span class=\"sd\">\u00a0 \u00a0 Provide a deterministic, easily-controlled implementation of</span></td></tr><tr><th id=\"L301\"><a href=\"#L301\">301</a></th><td><span class=\"sd\">\u00a0 \u00a0 L{IReactorTime.callLater}.\u00a0 This is commonly useful for writing</span></td></tr><tr><th id=\"L302\"><a href=\"#L302\">302</a></th><td><span class=\"sd\">\u00a0 \u00a0 deterministic unit tests for code which schedules events using this API.</span></td></tr><tr><th id=\"L303\"><a href=\"#L303\">303</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L304\"><a href=\"#L304\">304</a></th><td>\u00a0 \u00a0 rightNow <span class=\"o\">=</span>\u00a0<span class=\"mf\">0.0</span></td></tr><tr><th id=\"L305\"><a href=\"#L305\">305</a></th><td></td></tr><tr><th id=\"L306\"><a href=\"#L306\">306</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L307\"><a href=\"#L307\">307</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>calls <span class=\"o\">=</span>\u00a0<span class=\"p\">[]</span></td></tr><tr><th id=\"L308\"><a href=\"#L308\">308</a></th><td></td></tr><tr><th id=\"L309\"><a href=\"#L309\">309</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">seconds</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L310\"><a href=\"#L310\">310</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L311\"><a href=\"#L311\">311</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Pretend to be time.time().\u00a0 This is used internally when an operation</span></td></tr><tr><th id=\"L312\"><a href=\"#L312\">312</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 such as L{IDelayedCall.reset} needs to determine a a time value</span></td></tr><tr><th id=\"L313\"><a href=\"#L313\">313</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 relative to the current time.</span></td></tr><tr><th id=\"L314\"><a href=\"#L314\">314</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L315\"><a href=\"#L315\">315</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @rtype: C{float}</span></td></tr><tr><th id=\"L316\"><a href=\"#L316\">316</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: The time which should be considered the current time.</span></td></tr><tr><th id=\"L317\"><a href=\"#L317\">317</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L318\"><a href=\"#L318\">318</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>rightNow</td></tr><tr><th id=\"L319\"><a href=\"#L319\">319</a></th><td></td></tr><tr><th id=\"L320\"><a href=\"#L320\">320</a></th><td></td></tr><tr><th id=\"L321\"><a href=\"#L321\">321</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">callLater</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0when<span class=\"p\">,</span>\u00a0what<span class=\"p\">,</span>\u00a0<span class=\"o\">*</span>a<span class=\"p\">,</span>\u00a0<span class=\"o\">**</span>kw<span class=\"p\">):</span></td></tr><tr><th id=\"L322\"><a href=\"#L322\">322</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L323\"><a href=\"#L323\">323</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 See L{twisted.internet.interfaces.IReactorTime.callLater}.</span></td></tr><tr><th id=\"L324\"><a href=\"#L324\">324</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L325\"><a href=\"#L325\">325</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>calls<span class=\"o\">.</span>append<span class=\"p\">(</span></td></tr><tr><th id=\"L326\"><a href=\"#L326\">326</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 base<span class=\"o\">.</span>DelayedCall<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>seconds<span class=\"p\">()</span>\u00a0<span class=\"o\">+</span>\u00a0when<span class=\"p\">,</span></td></tr><tr><th id=\"L327\"><a href=\"#L327\">327</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0what<span class=\"p\">,</span>\u00a0a<span class=\"p\">,</span>\u00a0kw<span class=\"p\">,</span></td></tr><tr><th id=\"L328\"><a href=\"#L328\">328</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>calls<span class=\"o\">.</span>remove<span class=\"p\">,</span></td></tr><tr><th id=\"L329\"><a href=\"#L329\">329</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"k\">lambda</span>\u00a0c<span class=\"p\">:</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">,</span></td></tr><tr><th id=\"L330\"><a href=\"#L330\">330</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>seconds<span class=\"p\">))</span></td></tr><tr><th id=\"L331\"><a href=\"#L331\">331</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>calls<span class=\"o\">.</span>sort<span class=\"p\">(</span><span class=\"k\">lambda</span>\u00a0a<span class=\"p\">,</span>\u00a0b<span class=\"p\">:</span>\u00a0<span class=\"nb\">cmp</span><span class=\"p\">(</span>a<span class=\"o\">.</span>getTime<span class=\"p\">(),</span>\u00a0b<span class=\"o\">.</span>getTime<span class=\"p\">()))</span></td></tr><tr><th id=\"L332\"><a href=\"#L332\">332</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>calls<span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span></td></tr><tr><th id=\"L333\"><a href=\"#L333\">333</a></th><td></td></tr><tr><th id=\"L334\"><a href=\"#L334\">334</a></th><td></td></tr><tr><th id=\"L335\"><a href=\"#L335\">335</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">advance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0amount<span class=\"p\">):</span></td></tr><tr><th id=\"L336\"><a href=\"#L336\">336</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L337\"><a href=\"#L337\">337</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Move time on this clock forward by the given amount and run whatever</span></td></tr><tr><th id=\"L338\"><a href=\"#L338\">338</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 pending calls should be run.</span></td></tr><tr><th id=\"L339\"><a href=\"#L339\">339</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L340\"><a href=\"#L340\">340</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @type amount: C{float}</span></td></tr><tr><th id=\"L341\"><a href=\"#L341\">341</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param amount: The number of seconds which to advance this clock's</span></td></tr><tr><th id=\"L342\"><a href=\"#L342\">342</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 time.</span></td></tr><tr><th id=\"L343\"><a href=\"#L343\">343</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L344\"><a href=\"#L344\">344</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>rightNow <span class=\"o\">+=</span>\u00a0amount</td></tr><tr><th id=\"L345\"><a href=\"#L345\">345</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">while</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>calls <span class=\"ow\">and</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>calls<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span>getTime<span class=\"p\">()</span>\u00a0<span class=\"o\">&lt;=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>seconds<span class=\"p\">():</span></td></tr><tr><th id=\"L346\"><a href=\"#L346\">346</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 call <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>calls<span class=\"o\">.</span>pop<span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span></td></tr><tr><th id=\"L347\"><a href=\"#L347\">347</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 call<span class=\"o\">.</span>called <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L348\"><a href=\"#L348\">348</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 call<span class=\"o\">.</span>func<span class=\"p\">(</span><span class=\"o\">*</span>call<span class=\"o\">.</span>args<span class=\"p\">,</span>\u00a0<span class=\"o\">**</span>call<span class=\"o\">.</span>kw<span class=\"p\">)</span></td></tr><tr><th id=\"L349\"><a href=\"#L349\">349</a></th><td></td></tr><tr><th id=\"L350\"><a href=\"#L350\">350</a></th><td></td></tr><tr><th id=\"L351\"><a href=\"#L351\">351</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">pump</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0timings<span class=\"p\">):</span></td></tr><tr><th id=\"L352\"><a href=\"#L352\">352</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L353\"><a href=\"#L353\">353</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Advance incrementally by the given set of times.</span></td></tr><tr><th id=\"L354\"><a href=\"#L354\">354</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L355\"><a href=\"#L355\">355</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @type timings: iterable of C{float}</span></td></tr><tr><th id=\"L356\"><a href=\"#L356\">356</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L357\"><a href=\"#L357\">357</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0amount <span class=\"ow\">in</span>\u00a0timings<span class=\"p\">:</span></td></tr><tr><th id=\"L358\"><a href=\"#L358\">358</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>advance<span class=\"p\">(</span>amount<span class=\"p\">)</span></td></tr><tr><th id=\"L359\"><a href=\"#L359\">359</a></th><td></td></tr><tr><th id=\"L360\"><a href=\"#L360\">360</a></th><td></td></tr><tr><th id=\"L361\"><a href=\"#L361\">361</a></th><td></td></tr><tr><th id=\"L362\"><a href=\"#L362\">362</a></th><td>__all__ <span class=\"o\">=</span>\u00a0<span class=\"p\">[</span></td></tr><tr><th id=\"L363\"><a href=\"#L363\">363</a></th><td>\u00a0 \u00a0 <span class=\"s\">'LoopingCall'</span><span class=\"p\">,</span></td></tr><tr><th id=\"L364\"><a href=\"#L364\">364</a></th><td></td></tr><tr><th id=\"L365\"><a href=\"#L365\">365</a></th><td>\u00a0 \u00a0 <span class=\"s\">'Clock'</span><span class=\"p\">,</span></td></tr><tr><th id=\"L366\"><a href=\"#L366\">366</a></th><td></td></tr><tr><th id=\"L367\"><a href=\"#L367\">367</a></th><td>\u00a0 \u00a0 <span class=\"s\">'SchedulerStopped'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'Cooperator'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'coiterate'</span><span class=\"p\">,</span></td></tr><tr><th id=\"L368\"><a href=\"#L368\">368</a></th><td>\u00a0 \u00a0 <span class=\"p\">]</span></td></tr></tbody></table>\n\n      </div>\n      <div id=\"anydiff\">\n        <form action=\"/LUCICodeRepository/nomaticIM/diff\" method=\"get\">\n          <div class=\"buttons\">\n            <input type=\"hidden\" name=\"new_path\" value=\"/nomatic/tags/NomaticIM-0.0.3/buddy_bots/src/twisted/internet/task.py\" />\n            <input type=\"hidden\" name=\"old_path\" value=\"/nomatic/tags/NomaticIM-0.0.3/buddy_bots/src/twisted/internet/task.py\" />\n            <input type=\"hidden\" name=\"new_rev\" />\n            <input type=\"hidden\" name=\"old_rev\" />\n            <input type=\"submit\" value=\"View changes...\" title=\"Select paths and revs for Diff\" />\n          </div>\n        </form>\n      </div>\n      <div id=\"help\"><strong>Note:</strong> See <a href=\"/LUCICodeRepository/nomaticIM/wiki/TracBrowser\">TracBrowser</a>\n        for help on using the repository browser.</div>\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"first\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.3/buddy_bots/src/twisted/internet/task.py?format=txt\">Plain Text</a>\n        </li><li class=\"last\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.3/buddy_bots/src/twisted/internet/task.py\">Original Format</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/LUCICodeRepository/nomaticIM/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/LUCICodeRepository/nomaticIM/about\"><strong>Trac 1.0.1</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">All content copyright 2007-2008 by LUCI <br /><a href=\"http://luci.ics.uci.edu/\">http://luci.ics.uci.edu/</a></p>\n    </div>\n\t\t<div id=\"sitefooter\">\n\t\t\t<script src=\"http://www.google-analytics.com/urchin.js\" type=\"text/javascript\">\n\t\t\t</script>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t\t_uacct = \"UA-338915-2\";\n\t\t\t\turchinTracker();\n\t\t\t</script>\n\t\t</div>\n\t</body>\n</html>", "id": 44670.0}