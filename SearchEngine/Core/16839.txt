{"text": "ICS 16 E EECS 114 Programming Project 3 5 Points Due Friday May 27 2 5 at 7pm using the Checkmate Submission System In this project you are to build a Java program that schedules simulated CPU jobs Your program should run in a loop each iteration of which corresponds to a time slice for the CPU Each job is assigned a priority which is an integer between 2 highest priority and 19 lowest priority inclusive From among all jobs waiting to be processed in a time slice the CPU must work on a job with highest priority In this simulation each job will also come with a length value which is an integer between 1 and 1 inclusive indicating the number of time slices that are needed to process this job For simplicity you may assume jobs cannot be interrupted once it is scheduled on the CPU a job runs for a number of time slices equal to its length Your simulator must output the name of the job running on the CPU in each time slice and must process a sequence of commands one per time slice each of which is of one the following forms add name n p which adds the new job name with length n and priority p For example the following command adds a job DogFace of length 15 and priority 5 add DogFace 15 5 continue which indicates that there is no new job for this time slice kill name which kills the job name that is it removes it from the collection of waiting jobs If the job name is the one currently running it stops it and starts performing the next highest priority job waiting to be performed Note you may use the following class in your program java util Scanner java util PriorityQueue You should read commands from System in and output the name of the job running in each time slice to System out ", "_id": "http://www.ics.uci.edu/~goodrich/teach/ics160e/hw/proj3/", "title": "ics 160e / eecs 114  - programming project 3", "html": "<html>\n\n<head>\n<title>ICS 160E / EECS 114  - Programming Project 3</title>\n</head>\n\n<body bgcolor=\"#FFFFFF\">\n\n<center>\n\n<h2>ICS 160E / EECS 114 - Programming Project 3, 50 Points\n<br>\nDue: Friday, May 27, 2005, at 7pm,\nusing the\n<a href=\"http://checkmate.ics.uci.edu/index.jsp\">\nCheckmate Submission System</a>.\n</h2>\n\n</center>\n\n<p>\nIn this project you are to build a Java \nprogram that schedules simulated CPU jobs.\nYour program should run in a loop, \neach iteration of which corresponds to a <b>time slice</b> for the CPU.\nEach job is assigned a priority, which is an integer between -20\n(highest priority) and 19 (lowest priority), inclusive.\nFrom among all jobs waiting to be processed in a time slice, the CPU must\nwork on a job with highest priority.\nIn this simulation, each job will also come with a <i>length</i>\nvalue, which is an integer between 1 and 100, inclusive, \nindicating the number of time slices that are needed to process this\njob. For simplicity, you may assume \njobs cannot be interrupted--once it is scheduled on the CPU,\na job runs for a number of time slices equal to its length.\nYour simulator must output the name of the job running on the CPU in\neach time slice and must process a sequence of commands,\none per time slice, each of\nwhich is of one the following forms:\n<ul>\n<li> add <i>name</i> <i>n</i> <i>p</i>\n<br>\nwhich adds the new job, <i>name</i>, with length <i>n</i> and\npriority <i>p</i>. For example, the following command adds a job\nDogFace of length 15 and priority 5:\n<pre>\nadd DogFace 15 5\n</pre>\n<li>\ncontinue\n<br>\nwhich indicates that there is no new job for this time slice.\n<li>\nkill <i>name</i>\n<br>\nwhich kills the job, <i>name</i>, that is, it removes it from the collection\nof waiting jobs.  If the job, <i>name</i>, is the one currently\nrunning, it stops it and starts performing the next highest-priority\njob waiting to be performed.\n</ul>\n<p>\nNote: you may use the following class in your program:\n<ul>\n<li> <a href=\"http://java.sun.com/j2se/1.5.0/docs/api/java/util/Scanner.html\">\njava.util.Scanner</a>\n<li>\n<a\nhref=\"http://java.sun.com/j2se/1.5.0/docs/api/java/util/PriorityQueue.html\">\njava.util.PriorityQueue</a>\n</ul>\nYou should read commands from System.in and output the name of the\njob running in each time slice to System.out.\n</body>\n\n</html>\n", "id": 16839.0}