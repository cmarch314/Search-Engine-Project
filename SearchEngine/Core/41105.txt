{"text": " Home Trees Indices Help Package CHEM Package Common Module Smi2Depict Class Smi2Depict hide private frames no frames Class Smi2Depict Instance Methods hide private init self Constructor smi2depict self smilesFilename depictFilename Primary method reads the SMILES file to generate the Depict output file call self smiles Abbreviated synonym for depictImg method depictImg self smiles Top level function to generate and HTML image tag to display a depiction of the respective SMILES string oghamDepictImg self smiles Generate the HTML IMG tag for a SMILES string to reach our OGham service chemaxonMarvinDepictImg self smiles arrowCodes Generate the HTML IMG tag for a SMILES string to reach the ChemAxon Marvin service chemaxonMarvinViewApplet self smiles arrowCodes cgibinDir None Generate the HTML to load a MarvinView applet of the respective SMILES chemaxonMarvinSketchApplet self smiles arrowCodes cgibinDir None appletName MSketch Generate the HTML to load a MarvinSketch applet of the respective SMILES marvinStr self smi arrowStr cgibinDir Given a SMILES string and arrow codes generate the molecule string to feed to a Marvin applet patchMarvinLine self line Manual override corrections if needed daylightDepictImg self smiles Generate the HTML IMG tag for a SMILES string to reach the Daylight Depict server jmeDepictImg self smiles Generate the HTML to depict a SMILES string via the JME http www molinspiration com jme applet jmeMolText self smiles Given a SMILES string convert it into a 2D Mol2 format with in place of new line characters oghamEncryptDepictImg self smiles Generate the HTML IMG tag for a SMILES string to reach our OGham service via the encrypted obfuscated interface parseSmiles self smilesLine Given a string strip out the first white space separated token as the SMILES string Method Details hide private init self Constructor Constructor Set default parameters not all of which are used depending on the depiction format smi2depict self smilesFilename depictFilename Primary method reads the SMILES file to generate the Depict output file See module documentation for more information depictImg self smiles Top level function to generate and HTML image tag to display a depiction of the respective SMILES string The implementation will probably be updated towards an object oriented approach in the future chemaxonMarvinViewApplet self smiles arrowCodes cgibinDir None Generate the HTML to load a MarvinView applet of the respective SMILES Depends on generation of a temp file that the browser will load separately which means have to be careful about relative paths chemaxonMarvinSketchApplet self smiles arrowCodes cgibinDir None appletName MSketch Generate the HTML to load a MarvinSketch applet of the respective SMILES Depends on generation of a temp file that the browser will load separately which means have to be careful about relative paths MarvinSketch support options like detach to appear more like a viewer marvinStr self smi arrowStr cgibinDir Given a SMILES string and arrow codes generate the molecule string to feed to a Marvin applet In this case will actaully generate a temp file and the molecule string will be the temp filename Depending on how called e g CGI vs PSP have to be careful as the relative location of the temp file can differ between where this script is executing and where the web browser will try to retrieve it Use the cgibinDir parameter to try and figure things out jmeDepictImg self smiles Generate the HTML to depict a SMILES string via the JME http www molinspiration com jme applet Requires a combination with OEDepict since JME doesn t actually generate the 2D atom coordinates jmeMolText self smiles Given a SMILES string convert it into a 2D Mol2 format with in place of new line characters This is the format needed for JME depiction Note that JME cannot generate the 2D coordinates itself so this is based on the OEDepict library oghamEncryptDepictImg self smiles Generate the HTML IMG tag for a SMILES string to reach our OGham service via the encrypted obfuscated interface To decrypt the smiles string back to normal just do the following Of course this assumes you have access to the ENCRYPT KEY and that passing through an http request processor has already done the equivalent of urllib unquote plus import rotor smiles rotor newrotor ENCRYPT KEY decrypt smilesEncrypted Can accept options parameters to pass through query string expected as a dictionary of option values The smiles molecule title name may be specified to pass as well as the net location and path to find the depiction server parseSmiles self smilesLine Given a string strip out the first white space separated token as the SMILES string The remaining stripped text of the line if any will be returned as the molecule title Home Trees Indices Help Generated by Epydoc 3 beta1 on Thu Nov 8 17 49 28 2 7 http epydoc sourceforge net", "_id": "http://www.ics.uci.edu/~dock/CHEM_docs/CHEM.Common.Smi2Depict.Smi2Depict-class.html", "title": "chem.common.smi2depict.smi2depict", "html": "<?xml version=\"1.0\" encoding=\"ascii\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n          \"DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n  <title>CHEM.Common.Smi2Depict.Smi2Depict</title>\n  <link rel=\"stylesheet\" href=\"epydoc.css\" type=\"text/css\" />\n  <script type=\"text/javascript\" src=\"epydoc.js\"></script>\n</head>\n\n<body bgcolor=\"white\" text=\"black\" link=\"blue\" vlink=\"#204080\"\n      alink=\"#204080\">\n<!-- ==================== NAVIGATION BAR ==================== -->\n<table class=\"navbar\" border=\"0\" width=\"100%\" cellpadding=\"0\"\n       bgcolor=\"#a0c0ff\" cellspacing=\"0\">\n  <tr valign=\"middle\">\n  <!-- Home link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"CHEM-module.html\">Home</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Tree link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"module-tree.html\">Trees</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Index link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"identifier-index.html\">Indices</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Help link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"help.html\">Help</a>&nbsp;&nbsp;&nbsp;</th>\n\n      <th class=\"navbar\" width=\"100%\"></th>\n  </tr>\n</table>\n<table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n  <tr valign=\"top\">\n    <td width=\"100%\">\n      <span class=\"breadcrumbs\">\n        <a href=\"CHEM-module.html\">Package&nbsp;CHEM</a> ::\n        <a href=\"CHEM.Common-module.html\">Package&nbsp;Common</a> ::\n        <a href=\"CHEM.Common.Smi2Depict-module.html\">Module&nbsp;Smi2Depict</a> ::\n        Class&nbsp;Smi2Depict\n      </span>\n    </td>\n    <td>\n      <table cellpadding=\"0\" cellspacing=\"0\">\n        <!-- hide/show private -->\n        <tr><td align=\"right\"><span class=\"options\">[<a href=\"javascript:void(0);\" class=\"privatelink\"\n    onclick=\"toggle_private();\">hide&nbsp;private</a>]</span></td></tr>\n        <tr><td align=\"right\"><span class=\"options\"\n            >[<a href=\"frames.html\" target=\"_top\">frames</a\n            >]&nbsp;|&nbsp;<a href=\"CHEM.Common.Smi2Depict.Smi2Depict-class.html\"\n            target=\"_top\">no&nbsp;frames</a>]</span></td></tr>\n      </table>\n    </td>\n  </tr>\n</table>\n<!-- ==================== CLASS DESCRIPTION ==================== -->\n<h1 class=\"epydoc\">Class Smi2Depict</h1><br /><br />\n<!-- ==================== INSTANCE METHODS ==================== -->\n<a name=\"section-InstanceMethods\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Instance Methods</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-InstanceMethods\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.Smi2Depict.Smi2Depict-class.html#__init__\" class=\"summary-sig-name\">__init__</a>(<span class=\"summary-sig-arg\">self</span>)</span><br />\n      Constructor.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.Smi2Depict.Smi2Depict-class.html#smi2depict\" class=\"summary-sig-name\">smi2depict</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">smilesFilename</span>,\n        <span class=\"summary-sig-arg\">depictFilename</span>)</span><br />\n      Primary method, reads the SMILES file to generate the Depict \n      output file.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"__call__\"></a><span class=\"summary-sig-name\">__call__</span>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">smiles</span>)</span><br />\n      Abbreviated synonym for depictImg method</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.Smi2Depict.Smi2Depict-class.html#depictImg\" class=\"summary-sig-name\">depictImg</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">smiles</span>)</span><br />\n      Top level function to generate and HTML image tag to display a \n      depiction of the respective SMILES string.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"oghamDepictImg\"></a><span class=\"summary-sig-name\">oghamDepictImg</span>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">smiles</span>)</span><br />\n      Generate the HTML IMG tag for a SMILES string to reach our OGham \n      service</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"chemaxonMarvinDepictImg\"></a><span class=\"summary-sig-name\">chemaxonMarvinDepictImg</span>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">smiles</span>,\n        <span class=\"summary-sig-arg\">arrowCodes</span>=<span class=\"summary-sig-default\">&quot;&quot;</span>)</span><br />\n      Generate the HTML IMG tag for a SMILES string to reach the \n      ChemAxon Marvin service</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.Smi2Depict.Smi2Depict-class.html#chemaxonMarvinViewApplet\" class=\"summary-sig-name\">chemaxonMarvinViewApplet</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">smiles</span>,\n        <span class=\"summary-sig-arg\">arrowCodes</span>=<span class=\"summary-sig-default\">&quot;&quot;</span>,\n        <span class=\"summary-sig-arg\">cgibinDir</span>=<span class=\"summary-sig-default\">None</span>)</span><br />\n      Generate the HTML to load a MarvinView applet of the respective \n      SMILES.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.Smi2Depict.Smi2Depict-class.html#chemaxonMarvinSketchApplet\" class=\"summary-sig-name\">chemaxonMarvinSketchApplet</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">smiles</span>,\n        <span class=\"summary-sig-arg\">arrowCodes</span>=<span class=\"summary-sig-default\">&quot;&quot;</span>,\n        <span class=\"summary-sig-arg\">cgibinDir</span>=<span class=\"summary-sig-default\">None</span>,\n        <span class=\"summary-sig-arg\">appletName</span>=<span class=\"summary-sig-default\">&quot;MSketch&quot;</span>)</span><br />\n      Generate the HTML to load a MarvinSketch applet of the respective \n      SMILES.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr class=\"private\">\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.Smi2Depict.Smi2Depict-class.html#__marvinStr\" class=\"summary-sig-name\">__marvinStr</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">smi</span>,\n        <span class=\"summary-sig-arg\">arrowStr</span>,\n        <span class=\"summary-sig-arg\">cgibinDir</span>)</span><br />\n      Given a SMILES string and arrow codes, generate the molecule \n      string to feed to a Marvin applet.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr class=\"private\">\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"__patchMarvinLine\"></a><span class=\"summary-sig-name\">__patchMarvinLine</span>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">line</span>)</span><br />\n      Manual override corrections if needed</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"daylightDepictImg\"></a><span class=\"summary-sig-name\">daylightDepictImg</span>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">smiles</span>)</span><br />\n      Generate the HTML IMG tag for a SMILES string to reach the \n      Daylight Depict server</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.Smi2Depict.Smi2Depict-class.html#jmeDepictImg\" class=\"summary-sig-name\">jmeDepictImg</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">smiles</span>)</span><br />\n      Generate the HTML to depict a SMILES string via the JME \n      (http://www.molinspiration.com/jme) applet.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.Smi2Depict.Smi2Depict-class.html#jmeMolText\" class=\"summary-sig-name\">jmeMolText</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">smiles</span>)</span><br />\n      Given a SMILES string, convert it into a 2D Mol2 format, with \n      &quot;|&quot; in place of new line characters.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.Smi2Depict.Smi2Depict-class.html#oghamEncryptDepictImg\" class=\"summary-sig-name\">oghamEncryptDepictImg</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">smiles</span>)</span><br />\n      Generate the HTML IMG tag for a SMILES string to reach our OGham \n      service via the encrypted / obfuscated interface.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.Smi2Depict.Smi2Depict-class.html#parseSmiles\" class=\"summary-sig-name\">parseSmiles</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">smilesLine</span>)</span><br />\n      Given a string, strip out the first white-space separated token as\n      the SMILES string.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n</table>\n<!-- ==================== METHOD DETAILS ==================== -->\n<a name=\"section-MethodDetails\"></a>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Method Details</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-MethodDetails\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n</table>\n<a name=\"__init__\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">__init__</span>(<span class=\"sig-arg\">self</span>)</span>\n    <br /><em class=\"fname\">(Constructor)</em>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Constructor.  Set default parameters, not all of which are used, \n  depending on the depiction format.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"smi2depict\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">smi2depict</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">smilesFilename</span>,\n        <span class=\"sig-arg\">depictFilename</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Primary method, reads the SMILES file to generate the Depict output \n  file.  See module documentation for more information.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"depictImg\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">depictImg</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">smiles</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Top level function to generate and HTML image tag to display a \n  depiction of the respective SMILES string. The implementation will \n  probably be updated towards an object-oriented approach in the \n  future.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"chemaxonMarvinViewApplet\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">chemaxonMarvinViewApplet</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">smiles</span>,\n        <span class=\"sig-arg\">arrowCodes</span>=<span class=\"sig-default\">&quot;&quot;</span>,\n        <span class=\"sig-arg\">cgibinDir</span>=<span class=\"sig-default\">None</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Generate the HTML to load a MarvinView applet of the respective \n  SMILES. Depends on generation of a temp file that the browser will load \n  separately, which means have to be careful about relative paths.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"chemaxonMarvinSketchApplet\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">chemaxonMarvinSketchApplet</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">smiles</span>,\n        <span class=\"sig-arg\">arrowCodes</span>=<span class=\"sig-default\">&quot;&quot;</span>,\n        <span class=\"sig-arg\">cgibinDir</span>=<span class=\"sig-default\">None</span>,\n        <span class=\"sig-arg\">appletName</span>=<span class=\"sig-default\">&quot;MSketch&quot;</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <p>Generate the HTML to load a MarvinSketch applet of the respective \n  SMILES. Depends on generation of a temp file that the browser will load \n  separately, which means have to be careful about relative paths.</p>\n  MarvinSketch support options like &quot;detach&quot; to appear more \n  like a viewer.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"__marvinStr\"></a>\n<div class=\"private\">\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">__marvinStr</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">smi</span>,\n        <span class=\"sig-arg\">arrowStr</span>,\n        <span class=\"sig-arg\">cgibinDir</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <p>Given a SMILES string and arrow codes, generate the molecule string to\n  feed to a Marvin applet. In this case, will actaully generate a temp file\n  and the molecule string will be the temp filename.</p>\n  Depending on how called (e.g., CGI vs. PSP), have to be careful as the\n  relative location of the temp file can differ between where this script \n  is executing and where the web browser will try to retrieve it. Use the \n  cgibinDir parameter to try and figure things out\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"jmeDepictImg\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">jmeDepictImg</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">smiles</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Generate the HTML to depict a SMILES string via the JME \n  (http://www.molinspiration.com/jme) applet. Requires a combination with \n  OEDepict since JME doesn't actually generate the 2D atom coordinates.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"jmeMolText\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">jmeMolText</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">smiles</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Given a SMILES string, convert it into a 2D Mol2 format, with \n  &quot;|&quot; in place of new line characters.  This is the format needed\n  for JME depiction. Note that JME cannot generate the 2D coordinates \n  itself, so this is based on the OEDepict library.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"oghamEncryptDepictImg\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">oghamEncryptDepictImg</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">smiles</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <p>Generate the HTML IMG tag for a SMILES string to reach our OGham \n  service via the encrypted / obfuscated interface.</p>\n  <p>To decrypt the smiles string back to normal, just do the following. Of\n  course, this assumes you have access to the ENCRYPT_KEY and that passing \n  through an http request processor has already done the equivalent of \n  urllib.unquote_plus(...): &gt;&gt;&gt; import rotor &gt;&gt;&gt; smiles =\n  rotor.newrotor(ENCRYPT_KEY).decrypt(smilesEncrypted)</p>\n  Can accept options parameters to pass through query string, expected \n  as a dictionary of option:values.  The smiles (molecule) title / name may\n  be specified to pass as well as the net location and path to find the \n  depiction server.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"parseSmiles\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">parseSmiles</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">smilesLine</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Given a string, strip out the first white-space separated token as the\n  SMILES string. The remaining stripped text of the line, if any, will be \n  returned as the molecule title.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<br />\n<!-- ==================== NAVIGATION BAR ==================== -->\n<table class=\"navbar\" border=\"0\" width=\"100%\" cellpadding=\"0\"\n       bgcolor=\"#a0c0ff\" cellspacing=\"0\">\n  <tr valign=\"middle\">\n  <!-- Home link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"CHEM-module.html\">Home</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Tree link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"module-tree.html\">Trees</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Index link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"identifier-index.html\">Indices</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Help link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"help.html\">Help</a>&nbsp;&nbsp;&nbsp;</th>\n\n      <th class=\"navbar\" width=\"100%\"></th>\n  </tr>\n</table>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%%\">\n  <tr>\n    <td align=\"left\" class=\"footer\">\n    Generated by Epydoc 3.0beta1 on Thu Nov  8 17:49:28 2007\n    </td>\n    <td align=\"right\" class=\"footer\">\n      <a href=\"http://epydoc.sourceforge.net\">http://epydoc.sourceforge.net</a>\n    </td>\n  </tr>\n</table>\n\n<script type=\"text/javascript\">\n  <!--\n  // Private objects are initially displayed (because if\n  // javascript is turned off then we want them to be\n  // visible); but by default, we want to hide them.  So hide\n  // them unless we have a cookie that says to show them.\n  checkCookie()\n  // -->\n</script>\n  \n</body>\n</html>\n", "id": 41105.0}