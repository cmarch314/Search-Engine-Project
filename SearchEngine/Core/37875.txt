{"text": "Navigation Up Table of Contents Bibliography Index Title Page CGAL Quadruple T1 T2 T3 T4 DefinitionThe Quadruple class is an extension of std pair Quadruple T1 T2 T3 T4 is a heterogeneous quadruple it holds one object of type T1 one of type T2 one of type T3 and one of type T4 A Quadruple T1 T2 T3 T4 is much like a container in that it owns its elements It is not actually a model of container though because it does not support the standard methods such as iterators for accessing the elements of a container include CGAL utility h RequirementsT1 T2 T3 and T4 must be assignable Additional operations have additional requirements Types typedef T1 first type typedef T2 second type typedef T3 third type typedef T4 fourth type Variables T1 first first element T2 second second element T3 third third element T4 fourth fourth element Creation Quadruple T1 T2 T3 T4 t introduces a quadruple using the default constructor of the four elements Quadruple T1 T2 T3 T4 t T1 x T2 y T3 z T4 w constructs a quadruple such that first is constructed from x second is constructed from y third is constructed from z and fourth is constructed from w template class U class V class W class X Quadruple T1 T2 T3 T4 t U u V v W w X x constructs a quadruple such that first is constructed from u second is constructed from v third is constructed from w and fourth is constructed from x Requirement Proper conversion operators exist from U to T1 V to T2 W to T3 and X to T4 template class T1 class T2 class T3 class T4 bool x y The comparison operator It uses lexicographic comparison the return value is true if the first element of x is less than the first element of y and false if the first element of y is less than the first element of x If neither of these is the case then it returns true if the second element of x is less than the second element of y and false if the second element of y is less than the second element of x If neither of these is the case then it returns true if the third element of x is less than the third element of y and false if the third element of y is less than the third element of x If neither of these is the case then it returns the result of comparing the fourth elements of x and y This operator may only be used if T1 T2 T3 and T4 define the comparison operator template class T1 class T2 class T3 class T4 bool x y The equality operator The return value is true if and only the first elements of x and y are equal the second elements of x and y are equal the third elements of x and y are equal and the fourth elements of x and y are equal This operator may only be used if T1 T2 T3 and T4 define the equality operator template class T1 class T2 class T3 class T4 Quadruple T1 T2 T3 T4 make quadruple T1 x T2 y T3 z T4 w Equivalent to Quadruple T1 T2 T3 T4 x y z w Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/STL_Extension_ref/Class_Quadruple.html", "title": "quadruple&lt;t1, t2, t3, t4&gt;", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './STL_Extension_ref/stl_extension.tex' -->\n<html> <head>  \n<title>Quadruple&lt;T1, T2, T3, T4&gt;</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_1585\"></A>\n\n<A NAME=\"Cross_link_anchor_1586\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_1499\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Class.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_CGAL::Quadruple<T1, T2, T3, T4>\"></A>\n<h2><I>CGAL::Quadruple&lt;T1, T2, T3, T4&gt;</I></h2>\n<P>\n\n<H3>Definition</H3>The <A HREF=\"Class_Quadruple.html#Cross_link_anchor_1586\">Quadruple</A> class is an extension of\n  <I>std::pair</I>.  <I><A HREF=\"Class_Quadruple.html#Cross_link_anchor_1586\">Quadruple</A>&lt;T1, T2, T3, T4&gt;</I> is a heterogeneous quadruple: it holds\n  one object of type <I>T1</I>, one of type <I>T2</I>, one of type\n  <I>T3</I>, and one of type <I>T4</I>.  A <I><A HREF=\"Class_Quadruple.html#Cross_link_anchor_1586\">Quadruple</A>&lt;T1, T2, T3, T4&gt;</I> is much like a\n  container, in that it ``owns'' its elements. It is not actually a\n  model of container, though, because it does not support the standard\n  methods (such as iterators) for accessing the elements of a\n  container.\n<P>\n\n<I>#include &lt;<A HREF=\"../../../include/CGAL/utility.h\">CGAL/utility.h</A>&gt;</I>\n<P>\n\n<H3>Requirements</H3><I>T1</I>, <I>T2</I>, <I>T3</I> and <I>T4</I> must be\n  assignable. Additional operations have additional requirements.\n<P>\n\n<H3>Types</H3>\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_first_type\"></A>\n<A NAME=\"Typedef_first_type\"></A>\ntypedef T1\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    first_type;\n        </I></NOBR>\n        </TD>\n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_second_type\"></A>\n<A NAME=\"Typedef_second_type\"></A>\ntypedef T2\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    second_type;\n        </I></NOBR>\n        </TD>\n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_third_type\"></A>\n<A NAME=\"Typedef_third_type\"></A>\ntypedef T3\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    third_type;\n        </I></NOBR>\n        </TD>\n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_fourth_type\"></A>\n<A NAME=\"Typedef_fourth_type\"></A>\ntypedef T4\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    fourth_type;\n        </I></NOBR>\n        </TD>\n    \n        </TR>\n        </TABLE>\n<P>\n\n<H3>Variables</H3>\n  \n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_first\"></A>\n<A NAME=\"Var_first\"></A>\nT1\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    first;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    first element\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_second\"></A>\n<A NAME=\"Var_second\"></A>\nT2\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    second;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    second element\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_third\"></A>\n<A NAME=\"Var_third\"></A>\nT3\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    third;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    third element\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_fourth\"></A>\n<A NAME=\"Var_fourth\"></A>\nT4\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    fourth;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    fourth element\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Creation</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Quadruple.html#Cross_link_anchor_1586\">Quadruple</A>&lt;T1, T2, T3, T4&gt; t;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    introduces a quadruple using the\n    default constructor of the four elements.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Quadruple.html#Cross_link_anchor_1586\">Quadruple</A>&lt;T1, T2, T3, T4&gt; t ( T1 x,  T2 y,  T3 z,  T4 w);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    constructs a\n    quadruple such that <I>first</I> is constructed from <I>x</I>,\n    <I>second</I> is constructed from <I>y</I>, <I>third</I> is\n    constructed from <I>z</I>, and <I>fourth</I> is constructed from\n    <I>w</I>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    template &lt;class U, class V, class W, class X&gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Quadruple.html#Cross_link_anchor_1586\">Quadruple</A>&lt;T1, T2, T3, T4&gt; t ( U u,  V v,  W w,  X x);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    constructs a quadruple such that\n    <I>first</I> is constructed from <I>u</I>, <I>second</I> is\n    constructed from <I>v</I>, <I>third</I> is constructed from <I>w</I>,\n    and <I>fourth</I> is constructed from <I>x</I>.<BR>\n\n<EM>Requirement: </EM>Proper\n    conversion operators exist from <I>U</I> to <I>T1</I>, <I>V</I> to\n    <I>T2</I>, <I>W</I> to <I>T3</I>, and <I>X</I> to <I>T4</I>.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    template &lt;class T1, class T2, class T3, class T4&gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    bool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n      x &lt;  y<A NAME=\"Function_bool_operator66Quadruple6T1+_T2+_T3+_T49_x+_Quadruple6T1+_T2+_T3+_T49_y9;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    The comparison operator. It uses lexicographic comparison:\n    the return value is true if the first element of <I>x</I> is less\n    than the first element of <I>y</I>, and false if the first element\n    of <I>y</I> is less than the first element of <I>x</I>. If neither\n    of these is the case, then it returns true if the second element\n    of <I>x</I> is less than the second element of <I>y</I>, and false\n    if the second element of <I>y</I> is less than the second element\n    of <I>x</I>. If neither of these is the case, then it returns true\n    if the third element of <I>x</I> is less than the third element of\n    <I>y</I>, and false if the third element of <I>y</I> is less than\n    the third element of <I>x</I>.  If neither of these is the case,\n    then it returns the result of comparing the fourth elements of\n    <I>x</I> and <I>y</I>. This operator may only be used if <I>T1</I>,\n    <I>T2</I>, <I>T3</I>, and <I>T4</I> define the comparison operator.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    template &lt;class T1, class T2, class T3, class T4&gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    bool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n      x ==  y<A NAME=\"Function_bool_operator==6Quadruple6T1+_T2+_T3+_T49_x+_Quadruple6T1+_T2+_T3+_T49_y9;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    The equality operator. The return value is true if and only\n    the first elements of <I>x</I> and <I>y</I> are equal, the second\n    elements of <I>x</I> and <I>y</I> are equal, the third elements of\n    <I>x</I> and <I>y</I> are equal, and the fourth elements of <I>x</I>\n    and <I>y</I> are equal.  This operator may only be used if\n    <I>T1</I>, <I>T2</I>, <I>T3</I>, and <I>T4</I> define the equality\n    operator.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    template &lt;class T1, class T2, class T3, class T4&gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Quadruple6T1+_T2+_T3+_T49_make_quadruple6T1_x+_T2_y+_T3_z+_T4_w9;\"></A>\n<A HREF=\"Class_Quadruple.html#Cross_link_anchor_1586\">Quadruple</A>&lt;T1, T2, T3, T4&gt;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    make_quadruple ( T1 x,  T2 y,  T3 z,  T4 w)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Equivalent to <I><A HREF=\"Class_Quadruple.html#Cross_link_anchor_1586\">Quadruple</A>&lt;T1, T2, T3, T4&gt;(x, y, z, w)</I>.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<!Next_reference_link_10_3_80!>\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_3!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 37875.0}