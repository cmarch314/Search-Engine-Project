{"text": "View Javadoc 1 2 Copyright c 2 3 Regents of the University of California 3 All rights reserved 4 5 6 The Apache Software License Version 1 1 7 8 Redistribution and use in source and binary forms with or without 9 modification are permitted provided that the following conditions 1 are met 11 12 1 Redistributions of source code must retain the above copyright 13 notice this list of conditions and the following disclaimer 14 15 2 Redistributions in binary form must reproduce the above copyright 16 notice this list of conditions and the following disclaimer in 17 the documentation and or other materials provided with the 18 distribution 19 2 3 The end user documentation included with the redistribution if 21 any must include the following acknowledgment 22 This product includes software developed by 23 the Institute for Software Research at 24 University of California Irvine 25 Alternately this acknowledgment may appear in the software 26 itself if and wherever such third party acknowledgments normally 27 appear 28 29 4 The names YANCEES Institute for Software Research and 3 University of California must not be used to 31 endorse or promote products derived from this software without 32 prior written permission For written permission please contact 33 rsilvafi ics uci edu or redmiles ics uci edu 34 35 5 Products derived from this software may not be called 36 YANCEES nor may YANCEES appear in their name without 37 prior written permission of the University of California Regents 38 39 THIS SOFTWARE IS PROVIDED AS IS AND ANY EXPRESSED OR IMPLIED 4 WARRANTIES INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF 41 MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED 42 IN NO EVENT SHALL THE INSTITUTE FOR SOFTWARE RESEARCH AT THE UNIVERSITY 43 OF CALIFORNIA IRVINE OR ITS CONTRIBUTORS BE LIABLE FOR 44 ANY DIRECT INDIRECT INCIDENTAL SPECIAL EXEMPLARY OR 45 CONSEQUENTIAL DAMAGES INCLUDING BUT NOT LIMITED TO PROCUREMENT OF 46 SUBSTITUTE GOODS OR SERVICES LOSS OF USE DATA OR PROFITS OR 47 BUSINESS INTERRUPTION HOWEVER CAUSED AND ON ANY THEORY OF 48 LIABILITY WHETHER IN CONTRACT STRICT LIABILITY OR TORT INCLUDING 49 NEGLIGENCE OR OTHERWISE ARISING IN ANY WAY OUT OF THE USE OF THIS 5 SOFTWARE EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE 51 52 53 54 package edu uci isr impromptu pocketpc 55 56 57 import java util HashMap 58 import java util Iterator 59 6 import org eclipse swt SWT 61 import org eclipse swt graphics Color 62 import org eclipse swt layout FillLayout 63 import org eclipse swt widgets Display 64 import org eclipse swt widgets Menu 65 import org eclipse swt widgets Shell 66 67 import edu uci isr impromptu pocketpc model ModelPeer 68 69 7 71 This shell provides the GUI for the TinyImpromptu application 72 73 author rsilvafi 74 class created at Jul 29 2 5 75 76 77 public class TinyImpromptuGUI 78 79 public static int LEVEL PERSISTENT 4 8 public static int LEVEL READ WRITE 3 81 public static int LEVEL READ 2 82 public static int LEVEL SEE 1 83 public static int LEVEL PRIVATE 84 85 public static String PERSISTENT persistent 86 public static String READ WRITE read write 87 public static String READ read 88 public static String SEE see 89 public static String PRIVATE private 9 91 92 Color myColor null 93 EventProcessor eventProcessor null 94 95 turns on and off the debug information printing 96 boolean print true 97 98 private Shell shell 99 private Display display 1 1 1 peer database 1 2 HashMap peerMap new HashMap a map of ModelPeer elements indexed by the peer name 1 3 1 4 1 5 the name under which this remote interface will be registered with 1 6 the rmiregistry 1 7 private String instanceName 1 8 Utils getImpromptuName edu uci isr impromptu common Configuration REPOSITORY CHARACTER 1 9 private String instanceName 11 Utils getImpromptuName edu uci isr impromptu common Configuration PIE CHARACTER 111 112 private String instanceName Utils getImpromptuName 113 114 constructor 115 public TinyImpromptuGUI 116 117 setUpGUI 118 eventProcessor new EventProcessor this 119 eventProcessor start 12 121 after all the widgets are drawn we compress them to fit the screen 122 shell pack 123 shell open 124 125 waits while the main display is open i e the application is running 126 while shell null shell isDisposed 127 128 if display null display readAndDispatch 129 display sleep 13 131 132 if shell null 133 shell dispose 134 135 if display null 136 display dispose 137 138 139 14 public Shell getShell 141 return shell 142 143 144 public Display getDisplay 145 return display 146 147 148 Creates the initial display and shell 149 protected void setUpGUI 15 151 display new Display 152 153 154 Create a Shell with the default style i e full screen no decoration 155 on PocketPC Alternative new Shell display SWT CLOSE to get the 156 Pocket PC Ok button 157 158 Shell shell new Shell display SWT RESIZE SWT CLOSE 159 shell new Shell display SWT RESIZE 16 shell new Shell display 161 162 163 Set a text so that the top level Shell also appears in the Pocket PC 164 task list 165 166 shell setText TinyImpromptu 167 168 169 Set a menubar to follow UI guidelines on Pocket PC 17 171 Menu mb new Menu shell SWT BAR 172 shell setMenuBar mb 173 174 175 Add widgets 176 177 FillLayout layout new FillLayout 178 layout type SWT VERTICAL 179 shell setLayout layout 18 181 Display the interface 182 shell setSize 229 255 183 184 shell setRedraw true 185 shell layout 186 shell pack compresses widgets to fit minimal space 187 188 189 19 191 192 New peer arrived in the network 193 param peerName is the name of the peer 194 195 public void addPeer String peerName Color color 196 System out println TinyImpromptuGUI Got ADD PEER peerName 197 198 if peer was not added before 199 if peerMap containsKey peerName 2 ModelPeer newPeer new ModelPeer peerName shell color 2 1 synchronized peerMap 2 2 peerMap put peerName newPeer 2 3 2 4 2 5 2 6 2 7 2 8 The peer left the network with all its files 2 9 param peerName is the name of the peer 21 211 public void shutdownPeer String peerName 212 System out println TinyImpromptuGUI Got SHUTDOWN peerName 213 214 System out println peer for peerName is peerMap get peerName 215 216 ModelPeer existingPeer ModelPeer peerMap get peerName 217 218 if existingPeer null 219 existingPeer dispose 22 221 synchronized peerMap 222 peerMap remove peerName 223 224 225 226 227 A file was moved not necessarily to another sharing level hence we must 228 check for it 229 param ownerPeer is the peer who moved his own file 23 param filename is the name of the file 231 param newLevelNumber is the target level Maybe the same as before 232 233 public void moveFile String ownerPeer String filename int newLevelNumber 234 System out println TinyImpromptuGUI Got MOVE ownerPeer filename newLevelNumber 235 236 ModelPeer existingPeer ModelPeer peerMap get ownerPeer 237 if existingPeer null 238 existingPeer moveFile filename newLevelNumber 239 24 241 242 243 A file previously being shared was removed 244 param ownerPeer is the onwer of the file the one who removed it 245 param filename is the name of the file 246 247 public void removeFile String ownerPeer String filename 248 System out println TinyImpromptuGUI Got REMOVE ownerPeer filename 249 25 ModelPeer existingPeer ModelPeer peerMap get ownerPeer 251 if existingPeer null 252 existingPeer removeFile filename 253 254 255 256 257 A new file was added by a peer at a given sharing level 258 param onwerPeer is the owner of the new file 259 param filename is the name of the file 26 param levelNumber is the initial sharing level of the file 261 262 public void addFile String ownerPeer String filename int levelNumber 263 System out println TinyImpromptuGUI Got ADD ownerPeer filename levelNumber 264 265 ModelPeer existingPeer ModelPeer peerMap get ownerPeer 266 if existingPeer null 267 existingPeer addFile filename levelNumber 268 269 27 271 272 those are important methods that need to be shown in the visualization 273 274 275 276 A file owned by onwerPeer was read by some actor 277 param ownerPeer is the owner of the file 278 param filename is the name of the file 279 param actor is the peer who read the file 28 281 public void readFile String ownerPeer String filename String actor 282 System out println TinyImpromptuGUI Got READ ownerPeer filename actor 283 284 285 286 A file owned by onwerPeer was written by some actor 287 param ownerPeer is the owner of the file 288 param filename is the name of the file 289 param actor is the peer who read the file 29 291 public void writeFile String ownerPeer String filename String actor 292 System out println TinyImpromptuGUI Got WRITE ownerPeer filename actor 293 294 295 296 protected void finalize throws Throwable 297 super finalize 298 299 for Iterator iter peerMap entrySet iterator iter hasNext 3 ModelPeer element ModelPeer iter next 3 1 element dispose 3 2 3 3 3 4 3 5 3 6 3 7 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.30/xref/edu/uci/isr/impromptu/pocketpc/TinyImpromptuGUI.html", "title": "tinyimpromptugui xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>TinyImpromptuGUI xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../../../../stylesheet.css\" />\n</head>\n<body>\n<div id=\"overview\"><a href=\"../../../../../../apidocs/edu/uci/isr/impromptu/pocketpc/TinyImpromptuGUI.html\">View Javadoc</a></div><pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <em class=\"comment\">/*</em>\n<a name=\"2\" href=\"#2\">2</a>   <em class=\"comment\"> * Copyright (c) 2003, Regents of the University of California.</em>\n<a name=\"3\" href=\"#3\">3</a>   <em class=\"comment\"> * All rights reserved.</em>\n<a name=\"4\" href=\"#4\">4</a>   <em class=\"comment\"> * </em>\n<a name=\"5\" href=\"#5\">5</a>   <em class=\"comment\"> * ===================================================================</em>\n<a name=\"6\" href=\"#6\">6</a>   <em class=\"comment\"> * The Apache Software License, Version 1.1</em>\n<a name=\"7\" href=\"#7\">7</a>   <em class=\"comment\"> * </em>\n<a name=\"8\" href=\"#8\">8</a>   <em class=\"comment\"> * Redistribution and use in source and binary forms, with or without</em>\n<a name=\"9\" href=\"#9\">9</a>   <em class=\"comment\"> * modification, are permitted provided that the following conditions</em>\n<a name=\"10\" href=\"#10\">10</a>  <em class=\"comment\"> * are met:</em>\n<a name=\"11\" href=\"#11\">11</a>  <em class=\"comment\"> * </em>\n<a name=\"12\" href=\"#12\">12</a>  <em class=\"comment\"> * 1. Redistributions of source code must retain the above copyright</em>\n<a name=\"13\" href=\"#13\">13</a>  <em class=\"comment\"> *    notice, this list of conditions and the following disclaimer.</em>\n<a name=\"14\" href=\"#14\">14</a>  <em class=\"comment\"> * </em>\n<a name=\"15\" href=\"#15\">15</a>  <em class=\"comment\"> * 2. Redistributions in binary form must reproduce the above copyright</em>\n<a name=\"16\" href=\"#16\">16</a>  <em class=\"comment\"> *    notice, this list of conditions and the following disclaimer in</em>\n<a name=\"17\" href=\"#17\">17</a>  <em class=\"comment\"> *    the documentation and/or other materials provided with the</em>\n<a name=\"18\" href=\"#18\">18</a>  <em class=\"comment\"> *    distribution.</em>\n<a name=\"19\" href=\"#19\">19</a>  <em class=\"comment\"> * </em>\n<a name=\"20\" href=\"#20\">20</a>  <em class=\"comment\"> * 3. The end-user documentation included with the redistribution, if</em>\n<a name=\"21\" href=\"#21\">21</a>  <em class=\"comment\"> *    any, must include the following acknowledgment:</em>\n<a name=\"22\" href=\"#22\">22</a>  <em class=\"comment\"> *       \"This product includes software developed by</em>\n<a name=\"23\" href=\"#23\">23</a>  <em class=\"comment\"> *        the Institute for Software Research at  </em>\n<a name=\"24\" href=\"#24\">24</a>  <em class=\"comment\"> *        University of California, Irvine\"</em>\n<a name=\"25\" href=\"#25\">25</a>  <em class=\"comment\"> *    Alternately, this acknowledgment may appear in the software</em>\n<a name=\"26\" href=\"#26\">26</a>  <em class=\"comment\"> *    itself, if and wherever such third-party acknowledgments normally</em>\n<a name=\"27\" href=\"#27\">27</a>  <em class=\"comment\"> *    appear.</em>\n<a name=\"28\" href=\"#28\">28</a>  <em class=\"comment\"> * </em>\n<a name=\"29\" href=\"#29\">29</a>  <em class=\"comment\"> * 4. The names \"YANCEES\", \"Institute for Software Research\" and</em>\n<a name=\"30\" href=\"#30\">30</a>  <em class=\"comment\"> *    \"University of California\" must not be used to</em>\n<a name=\"31\" href=\"#31\">31</a>  <em class=\"comment\"> *    endorse or promote products derived from this software without</em>\n<a name=\"32\" href=\"#32\">32</a>  <em class=\"comment\"> *    prior written permission. For written permission, please contact</em>\n<a name=\"33\" href=\"#33\">33</a>  <em class=\"comment\"> *    rsilvafi@ics.uci.edu or redmiles@ics.uci.edu.</em>\n<a name=\"34\" href=\"#34\">34</a>  <em class=\"comment\"> * </em>\n<a name=\"35\" href=\"#35\">35</a>  <em class=\"comment\"> * 5. Products derived from this software may not be called</em>\n<a name=\"36\" href=\"#36\">36</a>  <em class=\"comment\"> *    \"YANCEES\", nor may \"YANCEES\" appear in their name, without</em>\n<a name=\"37\" href=\"#37\">37</a>  <em class=\"comment\"> *    prior written permission of the University of California Regents.</em>\n<a name=\"38\" href=\"#38\">38</a>  <em class=\"comment\"> * </em>\n<a name=\"39\" href=\"#39\">39</a>  <em class=\"comment\"> * THIS SOFTWARE IS PROVIDED \"AS IS\" AND ANY EXPRESSED OR IMPLIED</em>\n<a name=\"40\" href=\"#40\">40</a>  <em class=\"comment\"> * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF</em>\n<a name=\"41\" href=\"#41\">41</a>  <em class=\"comment\"> * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.</em>\n<a name=\"42\" href=\"#42\">42</a>  <em class=\"comment\"> * IN NO EVENT SHALL THE INSTITUTE FOR SOFTWARE RESEARCH AT THE UNIVERSITY</em>\n<a name=\"43\" href=\"#43\">43</a>  <em class=\"comment\"> * OF CALIFORNIA, IRVINE, OR ITS CONTRIBUTORS BE LIABLE FOR</em>\n<a name=\"44\" href=\"#44\">44</a>  <em class=\"comment\"> * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR</em>\n<a name=\"45\" href=\"#45\">45</a>  <em class=\"comment\"> * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF</em>\n<a name=\"46\" href=\"#46\">46</a>  <em class=\"comment\"> * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR</em>\n<a name=\"47\" href=\"#47\">47</a>  <em class=\"comment\"> * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF</em>\n<a name=\"48\" href=\"#48\">48</a>  <em class=\"comment\"> * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING</em>\n<a name=\"49\" href=\"#49\">49</a>  <em class=\"comment\"> * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS</em>\n<a name=\"50\" href=\"#50\">50</a>  <em class=\"comment\"> * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</em>\n<a name=\"51\" href=\"#51\">51</a>  <em class=\"comment\"> * ====================================================================</em>\n<a name=\"52\" href=\"#52\">52</a>  <em class=\"comment\"> */</em>\n<a name=\"53\" href=\"#53\">53</a>   \n<a name=\"54\" href=\"#54\">54</a>  <strong>package</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pocketpc/package-summary.html\">edu.uci.isr.impromptu.pocketpc</a>;\n<a name=\"55\" href=\"#55\">55</a>  \n<a name=\"56\" href=\"#56\">56</a>  \n<a name=\"57\" href=\"#57\">57</a>  <strong>import</strong> java.util.HashMap;\n<a name=\"58\" href=\"#58\">58</a>  <strong>import</strong> java.util.Iterator;\n<a name=\"59\" href=\"#59\">59</a>  \n<a name=\"60\" href=\"#60\">60</a>  <strong>import</strong> org.eclipse.swt.SWT;\n<a name=\"61\" href=\"#61\">61</a>  <strong>import</strong> org.eclipse.swt.graphics.Color;\n<a name=\"62\" href=\"#62\">62</a>  <strong>import</strong> org.eclipse.swt.layout.FillLayout;\n<a name=\"63\" href=\"#63\">63</a>  <strong>import</strong> org.eclipse.swt.widgets.Display;\n<a name=\"64\" href=\"#64\">64</a>  <strong>import</strong> org.eclipse.swt.widgets.Menu;\n<a name=\"65\" href=\"#65\">65</a>  <strong>import</strong> org.eclipse.swt.widgets.Shell;\n<a name=\"66\" href=\"#66\">66</a>  \n<a name=\"67\" href=\"#67\">67</a>  <strong>import</strong> edu.uci.isr.impromptu.pocketpc.model.ModelPeer;\n<a name=\"68\" href=\"#68\">68</a>  \n<a name=\"69\" href=\"#69\">69</a>  \n<a name=\"70\" href=\"#70\">70</a>  <em>/**<em>*</em></em>\n<a name=\"71\" href=\"#71\">71</a>  <em> * This shell provides the GUI for the TinyImpromptu application</em>\n<a name=\"72\" href=\"#72\">72</a>  <em> * </em>\n<a name=\"73\" href=\"#73\">73</a>  <em> * @author rsilvafi</em>\n<a name=\"74\" href=\"#74\">74</a>  <em> * class created at Jul 29, 2005</em>\n<a name=\"75\" href=\"#75\">75</a>  <em> *</em>\n<a name=\"76\" href=\"#76\">76</a>  <em> */</em>\n<a name=\"77\" href=\"#77\">77</a>  <strong>public</strong> <strong>class</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pocketpc/TinyImpromptuGUI.html\">TinyImpromptuGUI</a> {\n<a name=\"78\" href=\"#78\">78</a>  \n<a name=\"79\" href=\"#79\">79</a>  \t<strong>public</strong> <strong>static</strong> <strong>int</strong> LEVEL_PERSISTENT=4;\n<a name=\"80\" href=\"#80\">80</a>  \t<strong>public</strong> <strong>static</strong> <strong>int</strong> LEVEL_READ_WRITE=3;\n<a name=\"81\" href=\"#81\">81</a>  \t<strong>public</strong> <strong>static</strong> <strong>int</strong> LEVEL_READ=2;\n<a name=\"82\" href=\"#82\">82</a>  \t<strong>public</strong> <strong>static</strong> <strong>int</strong> LEVEL_SEE=1;\n<a name=\"83\" href=\"#83\">83</a>  \t<strong>public</strong> <strong>static</strong> <strong>int</strong> LEVEL_PRIVATE=0;\n<a name=\"84\" href=\"#84\">84</a>  \t\n<a name=\"85\" href=\"#85\">85</a>  \t<strong>public</strong> <strong>static</strong> String PERSISTENT=<span class=\"string\">\"persistent\"</span>;\n<a name=\"86\" href=\"#86\">86</a>  \t<strong>public</strong> <strong>static</strong> String READ_WRITE=<span class=\"string\">\"read/write\"</span>;\n<a name=\"87\" href=\"#87\">87</a>  \t<strong>public</strong> <strong>static</strong> String READ=<span class=\"string\">\"read\"</span>;\n<a name=\"88\" href=\"#88\">88</a>  \t<strong>public</strong> <strong>static</strong> String SEE=<span class=\"string\">\"see\"</span>;\n<a name=\"89\" href=\"#89\">89</a>  \t<strong>public</strong> <strong>static</strong> String PRIVATE=<span class=\"string\">\"private\"</span>;\n<a name=\"90\" href=\"#90\">90</a>  \t\n<a name=\"91\" href=\"#91\">91</a>  \n<a name=\"92\" href=\"#92\">92</a>  \tColor myColor = <strong>null</strong>;\n<a name=\"93\" href=\"#93\">93</a>  \tEventProcessor eventProcessor = <strong>null</strong>;\n<a name=\"94\" href=\"#94\">94</a>  \t\n<a name=\"95\" href=\"#95\">95</a>  \t<em class=\"comment\">// turns on and off the debug information printing</em>\n<a name=\"96\" href=\"#96\">96</a>  \t<strong>boolean</strong> print = <strong>true</strong>;\n<a name=\"97\" href=\"#97\">97</a>  \n<a name=\"98\" href=\"#98\">98</a>  \t<strong>private</strong> Shell shell;\n<a name=\"99\" href=\"#99\">99</a>  \t<strong>private</strong> Display display;\n<a name=\"100\" href=\"#100\">100</a> \t\n<a name=\"101\" href=\"#101\">101</a> \t<em class=\"comment\">// peer database</em>\n<a name=\"102\" href=\"#102\">102</a> \tHashMap peerMap = <strong>new</strong> HashMap(); <em class=\"comment\">// a map of ModelPeer elements indexed by the peer name</em>\n<a name=\"103\" href=\"#103\">103</a> \t\n<a name=\"104\" href=\"#104\">104</a> \n<a name=\"105\" href=\"#105\">105</a> \t<em class=\"comment\">// the name under which this remote interface will be registered with</em>\n<a name=\"106\" href=\"#106\">106</a> \t<em class=\"comment\">// the rmiregistry</em>\n<a name=\"107\" href=\"#107\">107</a> \t<em class=\"comment\">// private String instanceName =</em>\n<a name=\"108\" href=\"#108\">108</a> \t<em class=\"comment\">// Utils.getImpromptuName()+edu.uci.isr.impromptu.common.Configuration.REPOSITORY_CHARACTER;</em>\n<a name=\"109\" href=\"#109\">109</a> \t<em class=\"comment\">// private String instanceName =</em>\n<a name=\"110\" href=\"#110\">110</a> \t<em class=\"comment\">// Utils.getImpromptuName()+edu.uci.isr.impromptu.common.Configuration.PIE_CHARACTER;</em>\n<a name=\"111\" href=\"#111\">111</a> \t\n<a name=\"112\" href=\"#112\">112</a> \t<em class=\"comment\">//private String instanceName = Utils.getImpromptuName();</em>\n<a name=\"113\" href=\"#113\">113</a> \n<a name=\"114\" href=\"#114\">114</a> \t<em class=\"comment\">// constructor</em>\n<a name=\"115\" href=\"#115\">115</a> \t<strong>public</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pocketpc/TinyImpromptuGUI.html\">TinyImpromptuGUI</a>() {\n<a name=\"116\" href=\"#116\">116</a> \t\t\n<a name=\"117\" href=\"#117\">117</a> \t\tsetUpGUI();\n<a name=\"118\" href=\"#118\">118</a> \t\teventProcessor = <strong>new</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pocketpc/EventProcessor.html\">EventProcessor</a>(<strong>this</strong>);\n<a name=\"119\" href=\"#119\">119</a> \t\teventProcessor.start();\n<a name=\"120\" href=\"#120\">120</a> \t\t\n<a name=\"121\" href=\"#121\">121</a> \t\t<em class=\"comment\">// after all the widgets are drawn, we compress them to fit the screen</em>\n<a name=\"122\" href=\"#122\">122</a> \t\t<em class=\"comment\">//shell.pack();</em>\n<a name=\"123\" href=\"#123\">123</a> \t\tshell.open();\n<a name=\"124\" href=\"#124\">124</a> \n<a name=\"125\" href=\"#125\">125</a> \t\t<em class=\"comment\">// waits while the main display is open, i.e. the application is running</em>\n<a name=\"126\" href=\"#126\">126</a> \t\t<strong>while</strong> (shell != <strong>null</strong> &amp;&amp; !shell.isDisposed()) {\n<a name=\"127\" href=\"#127\">127</a> \t\t\t\n<a name=\"128\" href=\"#128\">128</a> \t\t\t<strong>if</strong> (display != <strong>null</strong> &amp;&amp; !display.readAndDispatch())\n<a name=\"129\" href=\"#129\">129</a> \t\t\t\tdisplay.sleep();\n<a name=\"130\" href=\"#130\">130</a> \t\t\t}\n<a name=\"131\" href=\"#131\">131</a> \t\t\t\t\n<a name=\"132\" href=\"#132\">132</a> \t\t<strong>if</strong> (shell != <strong>null</strong>)\n<a name=\"133\" href=\"#133\">133</a> \t\t\tshell.dispose();\t\n<a name=\"134\" href=\"#134\">134</a> \t\t\n<a name=\"135\" href=\"#135\">135</a> \t\t<strong>if</strong> (display != <strong>null</strong>)\n<a name=\"136\" href=\"#136\">136</a> \t\t\tdisplay.dispose();\n<a name=\"137\" href=\"#137\">137</a> \t\t\t\t\t\t\n<a name=\"138\" href=\"#138\">138</a> \t}\n<a name=\"139\" href=\"#139\">139</a> \t\n<a name=\"140\" href=\"#140\">140</a> \t<strong>public</strong> Shell getShell() {\n<a name=\"141\" href=\"#141\">141</a> \t\t<strong>return</strong> shell;\n<a name=\"142\" href=\"#142\">142</a> \t}\n<a name=\"143\" href=\"#143\">143</a> \t\n<a name=\"144\" href=\"#144\">144</a> \t<strong>public</strong> Display getDisplay() {\n<a name=\"145\" href=\"#145\">145</a> \t\t<strong>return</strong> display;\n<a name=\"146\" href=\"#146\">146</a> \t}\n<a name=\"147\" href=\"#147\">147</a> \t\n<a name=\"148\" href=\"#148\">148</a> \t<em class=\"comment\">// Creates the initial display and shell</em>\n<a name=\"149\" href=\"#149\">149</a> \t<strong>protected</strong> <strong>void</strong> setUpGUI() {\n<a name=\"150\" href=\"#150\">150</a> \t\t\n<a name=\"151\" href=\"#151\">151</a> \t\tdisplay = <strong>new</strong> Display();\n<a name=\"152\" href=\"#152\">152</a> \t\t\t\t\n<a name=\"153\" href=\"#153\">153</a> \t\t<em class=\"comment\">/*</em>\n<a name=\"154\" href=\"#154\">154</a> <em class=\"comment\">\t\t * Create a Shell with the default style i.e. full screen, no decoration</em>\n<a name=\"155\" href=\"#155\">155</a> <em class=\"comment\">\t\t * on PocketPC. Alternative: 'new Shell(display, SWT.CLOSE)' to get the</em>\n<a name=\"156\" href=\"#156\">156</a> <em class=\"comment\">\t\t * Pocket PC 'Ok' button.</em>\n<a name=\"157\" href=\"#157\">157</a> <em class=\"comment\">\t\t */</em>\n<a name=\"158\" href=\"#158\">158</a> \t\t<em class=\"comment\">// Shell shell = new Shell(display, SWT.RESIZE | SWT.CLOSE);</em>\n<a name=\"159\" href=\"#159\">159</a> \t\tshell = <strong>new</strong> Shell(display, SWT.RESIZE);\n<a name=\"160\" href=\"#160\">160</a> \t\t<em class=\"comment\">//shell = new Shell(display);</em>\n<a name=\"161\" href=\"#161\">161</a> \t\t\n<a name=\"162\" href=\"#162\">162</a> \t\t<em class=\"comment\">/*</em>\n<a name=\"163\" href=\"#163\">163</a> <em class=\"comment\">\t\t * Set a text so that the top level Shell also appears in the Pocket PC</em>\n<a name=\"164\" href=\"#164\">164</a> <em class=\"comment\">\t\t * task list</em>\n<a name=\"165\" href=\"#165\">165</a> <em class=\"comment\">\t\t */</em>\n<a name=\"166\" href=\"#166\">166</a> \t\tshell.setText(<span class=\"string\">\"TinyImpromptu\"</span>);\n<a name=\"167\" href=\"#167\">167</a> \t\t\n<a name=\"168\" href=\"#168\">168</a> \t\t<em class=\"comment\">/*</em>\n<a name=\"169\" href=\"#169\">169</a> <em class=\"comment\">\t\t * Set a menubar to follow UI guidelines on Pocket PC</em>\n<a name=\"170\" href=\"#170\">170</a> <em class=\"comment\">\t\t */</em>\n<a name=\"171\" href=\"#171\">171</a> \t\tMenu mb = <strong>new</strong> Menu(shell, SWT.BAR);\n<a name=\"172\" href=\"#172\">172</a> \t\tshell.setMenuBar(mb);\n<a name=\"173\" href=\"#173\">173</a> \t\t\n<a name=\"174\" href=\"#174\">174</a> \t\t<em class=\"comment\">/*</em>\n<a name=\"175\" href=\"#175\">175</a> <em class=\"comment\">\t\t * Add widgets</em>\n<a name=\"176\" href=\"#176\">176</a> <em class=\"comment\">\t\t */</em>\t\n<a name=\"177\" href=\"#177\">177</a> \t\tFillLayout layout = <strong>new</strong> FillLayout();\n<a name=\"178\" href=\"#178\">178</a> \t\tlayout.type = SWT.VERTICAL;\n<a name=\"179\" href=\"#179\">179</a> \t\tshell.setLayout(layout);\n<a name=\"180\" href=\"#180\">180</a> \t\t\n<a name=\"181\" href=\"#181\">181</a> \t\t<em class=\"comment\">// Display the interface...</em>\n<a name=\"182\" href=\"#182\">182</a> \t\tshell.setSize(229, 255);\n<a name=\"183\" href=\"#183\">183</a> \t\t\t\t\n<a name=\"184\" href=\"#184\">184</a> \t\t<em class=\"comment\">//shell.setRedraw(true);</em>\n<a name=\"185\" href=\"#185\">185</a> \t\t<em class=\"comment\">//shell.layout();</em>\n<a name=\"186\" href=\"#186\">186</a> \t\t<em class=\"comment\">//shell.pack(); // compresses widgets to fit minimal space</em>\n<a name=\"187\" href=\"#187\">187</a> \t\t\n<a name=\"188\" href=\"#188\">188</a> \t}\n<a name=\"189\" href=\"#189\">189</a> \n<a name=\"190\" href=\"#190\">190</a> \n<a name=\"191\" href=\"#191\">191</a> \t<em>/**<em>*</em></em>\n<a name=\"192\" href=\"#192\">192</a> <em>\t * New peer arrived in the network</em>\n<a name=\"193\" href=\"#193\">193</a> <em>\t * @param peerName is the name of the peer</em>\n<a name=\"194\" href=\"#194\">194</a> <em>\t */</em>\n<a name=\"195\" href=\"#195\">195</a> \t<strong>public</strong> <strong>void</strong> addPeer(String peerName, Color color) {\n<a name=\"196\" href=\"#196\">196</a> \t\tSystem.out.println(<span class=\"string\">\"TinyImpromptuGUI: Got ADD_PEER: \"</span>+peerName);\n<a name=\"197\" href=\"#197\">197</a> \t\t\n<a name=\"198\" href=\"#198\">198</a> \t\t<em class=\"comment\">// if peer was not added before...</em>\n<a name=\"199\" href=\"#199\">199</a> \t\t<strong>if</strong> (! peerMap.containsKey(peerName)) {\n<a name=\"200\" href=\"#200\">200</a> \t\t\tModelPeer <strong>new</strong>Peer = <strong>new</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pocketpc/model/ModelPeer.html\">ModelPeer</a>(peerName, shell, color);\n<a name=\"201\" href=\"#201\">201</a> \t\t\t<strong>synchronized</strong>(peerMap) {\n<a name=\"202\" href=\"#202\">202</a> \t\t\t\tpeerMap.put(peerName, newPeer);\n<a name=\"203\" href=\"#203\">203</a> \t\t\t}\n<a name=\"204\" href=\"#204\">204</a> \t\t}\t\t\n<a name=\"205\" href=\"#205\">205</a> \t}\n<a name=\"206\" href=\"#206\">206</a> \t\n<a name=\"207\" href=\"#207\">207</a> \t<em>/**<em>*</em></em>\n<a name=\"208\" href=\"#208\">208</a> <em>\t * The peer left the network with all its files</em>\n<a name=\"209\" href=\"#209\">209</a> <em>\t * @param peerName is the name of the peer</em>\n<a name=\"210\" href=\"#210\">210</a> <em>\t */</em>\n<a name=\"211\" href=\"#211\">211</a> \t<strong>public</strong> <strong>void</strong> shutdownPeer(String peerName) {\n<a name=\"212\" href=\"#212\">212</a> \t\tSystem.out.println(<span class=\"string\">\"TinyImpromptuGUI: Got SHUTDOWN: \"</span>+peerName);\n<a name=\"213\" href=\"#213\">213</a> \t\t\n<a name=\"214\" href=\"#214\">214</a> \t\tSystem.out.println(<span class=\"string\">\"peer for \"</span>+peerName+<span class=\"string\">\" is \"</span>+peerMap.get(peerName));\n<a name=\"215\" href=\"#215\">215</a> \t\t\n<a name=\"216\" href=\"#216\">216</a> \t\tModelPeer existingPeer = (ModelPeer) peerMap.get(peerName);\n<a name=\"217\" href=\"#217\">217</a> \t\t\n<a name=\"218\" href=\"#218\">218</a> \t\t<strong>if</strong> (existingPeer != <strong>null</strong>)\n<a name=\"219\" href=\"#219\">219</a> \t\t\texistingPeer.dispose();\n<a name=\"220\" href=\"#220\">220</a> \t\t\n<a name=\"221\" href=\"#221\">221</a> \t\t<strong>synchronized</strong> (peerMap) {\n<a name=\"222\" href=\"#222\">222</a> \t\t\tpeerMap.remove(peerName);\n<a name=\"223\" href=\"#223\">223</a> \t\t}\n<a name=\"224\" href=\"#224\">224</a> \t}\n<a name=\"225\" href=\"#225\">225</a> \t\n<a name=\"226\" href=\"#226\">226</a> \t<em>/**<em>*</em></em>\n<a name=\"227\" href=\"#227\">227</a> <em>\t * A file was moved, not necessarily to another sharing level, hence, we must</em>\n<a name=\"228\" href=\"#228\">228</a> <em>\t * check for it</em>\n<a name=\"229\" href=\"#229\">229</a> <em>\t * @param ownerPeer is the peer who moved his own file</em>\n<a name=\"230\" href=\"#230\">230</a> <em>\t * @param filename is the name of the file</em>\n<a name=\"231\" href=\"#231\">231</a> <em>\t * @param newLevelNumber is the target level. Maybe the same as before</em>\n<a name=\"232\" href=\"#232\">232</a> <em>\t */</em>\n<a name=\"233\" href=\"#233\">233</a> \t<strong>public</strong> <strong>void</strong> moveFile(String ownerPeer, String filename, <strong>int</strong> newLevelNumber) {\n<a name=\"234\" href=\"#234\">234</a> \t\tSystem.out.println(<span class=\"string\">\"TinyImpromptuGUI: Got MOVE: \"</span>+ownerPeer+<span class=\"string\">\", \"</span>+filename+<span class=\"string\">\", \"</span>+newLevelNumber);\n<a name=\"235\" href=\"#235\">235</a> \t\t\n<a name=\"236\" href=\"#236\">236</a> \t\tModelPeer existingPeer = (ModelPeer) peerMap.get(ownerPeer);\n<a name=\"237\" href=\"#237\">237</a> \t\t<strong>if</strong> (existingPeer != <strong>null</strong>) {\n<a name=\"238\" href=\"#238\">238</a> \t\t\texistingPeer.moveFile(filename, newLevelNumber);\n<a name=\"239\" href=\"#239\">239</a> \t\t}\n<a name=\"240\" href=\"#240\">240</a> \t}\n<a name=\"241\" href=\"#241\">241</a> \t\n<a name=\"242\" href=\"#242\">242</a> \t<em>/**<em>*</em></em>\n<a name=\"243\" href=\"#243\">243</a> <em>\t * A file, previously being shared, was removed.</em>\n<a name=\"244\" href=\"#244\">244</a> <em>\t * @param ownerPeer is the onwer of the file, the one who removed it</em>\n<a name=\"245\" href=\"#245\">245</a> <em>\t * @param filename is the name of the file</em>\n<a name=\"246\" href=\"#246\">246</a> <em>\t */</em>\n<a name=\"247\" href=\"#247\">247</a> \t<strong>public</strong> <strong>void</strong> removeFile(String ownerPeer, String filename) {\n<a name=\"248\" href=\"#248\">248</a> \t\tSystem.out.println(<span class=\"string\">\"TinyImpromptuGUI: Got REMOVE: \"</span>+ownerPeer+<span class=\"string\">\", \"</span>+filename);\n<a name=\"249\" href=\"#249\">249</a> \t\t\n<a name=\"250\" href=\"#250\">250</a> \t\tModelPeer existingPeer = (ModelPeer) peerMap.get(ownerPeer);\n<a name=\"251\" href=\"#251\">251</a> \t\t<strong>if</strong> (existingPeer != <strong>null</strong>) {\n<a name=\"252\" href=\"#252\">252</a> \t\t\texistingPeer.removeFile(filename);\n<a name=\"253\" href=\"#253\">253</a> \t\t}\n<a name=\"254\" href=\"#254\">254</a> \t}\n<a name=\"255\" href=\"#255\">255</a> \t\n<a name=\"256\" href=\"#256\">256</a> \t<em>/**<em>*</em></em>\n<a name=\"257\" href=\"#257\">257</a> <em>\t * A new file was added by a peer at a given sharing level</em>\n<a name=\"258\" href=\"#258\">258</a> <em>\t * @param onwerPeer is the owner of the new file</em>\n<a name=\"259\" href=\"#259\">259</a> <em>\t * @param filename is the name of the file</em>\n<a name=\"260\" href=\"#260\">260</a> <em>\t * @param levelNumber is the initial sharing level of the file</em>\n<a name=\"261\" href=\"#261\">261</a> <em>\t */</em>\n<a name=\"262\" href=\"#262\">262</a> \t<strong>public</strong> <strong>void</strong> addFile (String ownerPeer, String filename, <strong>int</strong> levelNumber) {\n<a name=\"263\" href=\"#263\">263</a> \t\tSystem.out.println(<span class=\"string\">\"TinyImpromptuGUI: Got ADD: \"</span>+ownerPeer+<span class=\"string\">\", \"</span>+filename+<span class=\"string\">\", \"</span>+levelNumber);\n<a name=\"264\" href=\"#264\">264</a> \t\t\n<a name=\"265\" href=\"#265\">265</a> \t\tModelPeer existingPeer = (ModelPeer) peerMap.get(ownerPeer);\n<a name=\"266\" href=\"#266\">266</a> \t\t<strong>if</strong> (existingPeer != <strong>null</strong>) {\n<a name=\"267\" href=\"#267\">267</a> \t\t\texistingPeer.addFile(filename, levelNumber);\n<a name=\"268\" href=\"#268\">268</a> \t\t}\t\n<a name=\"269\" href=\"#269\">269</a> \t}\n<a name=\"270\" href=\"#270\">270</a> \t\n<a name=\"271\" href=\"#271\">271</a> \t<em class=\"comment\">// **********************************************************************</em>\n<a name=\"272\" href=\"#272\">272</a> \t<em class=\"comment\">// those are important methods that need to be shown in the visualization</em>\n<a name=\"273\" href=\"#273\">273</a> \t<em class=\"comment\">// **********************************************************************</em>\n<a name=\"274\" href=\"#274\">274</a> \t\n<a name=\"275\" href=\"#275\">275</a> \t<em>/**<em>*</em></em>\n<a name=\"276\" href=\"#276\">276</a> <em>\t * A file, owned by onwerPeer was read by some actor</em>\n<a name=\"277\" href=\"#277\">277</a> <em>\t * @param ownerPeer is the owner of the file</em>\n<a name=\"278\" href=\"#278\">278</a> <em>\t * @param filename is the name of the file</em>\n<a name=\"279\" href=\"#279\">279</a> <em>\t * @param actor is the peer who read the file</em>\n<a name=\"280\" href=\"#280\">280</a> <em>\t */</em>\n<a name=\"281\" href=\"#281\">281</a> \t<strong>public</strong> <strong>void</strong> readFile (String ownerPeer, String filename,  String actor) {\n<a name=\"282\" href=\"#282\">282</a> \t\tSystem.out.println(<span class=\"string\">\"TinyImpromptuGUI: Got READ: \"</span>+ownerPeer+<span class=\"string\">\", \"</span>+filename+<span class=\"string\">\", \"</span>+actor);\n<a name=\"283\" href=\"#283\">283</a> \t}\n<a name=\"284\" href=\"#284\">284</a> \t\n<a name=\"285\" href=\"#285\">285</a> \t<em>/**<em>*</em></em>\n<a name=\"286\" href=\"#286\">286</a> <em>\t * A file, owned by onwerPeer was written by some actor</em>\n<a name=\"287\" href=\"#287\">287</a> <em>\t * @param ownerPeer is the owner of the file</em>\n<a name=\"288\" href=\"#288\">288</a> <em>\t * @param filename is the name of the file</em>\n<a name=\"289\" href=\"#289\">289</a> <em>\t * @param actor is the peer who read the file</em>\n<a name=\"290\" href=\"#290\">290</a> <em>\t */</em>\n<a name=\"291\" href=\"#291\">291</a> \t<strong>public</strong> <strong>void</strong> writeFile (String ownerPeer, String filename,  String actor) {\n<a name=\"292\" href=\"#292\">292</a> \t\tSystem.out.println(<span class=\"string\">\"TinyImpromptuGUI: Got WRITE: \"</span>+ownerPeer+<span class=\"string\">\", \"</span>+filename+<span class=\"string\">\", \"</span>+actor);\n<a name=\"293\" href=\"#293\">293</a> \t}\n<a name=\"294\" href=\"#294\">294</a> \t\n<a name=\"295\" href=\"#295\">295</a> \t\n<a name=\"296\" href=\"#296\">296</a> \t<strong>protected</strong> <strong>void</strong> finalize() throws Throwable {\n<a name=\"297\" href=\"#297\">297</a> \t    <strong>super</strong>.finalize();\n<a name=\"298\" href=\"#298\">298</a> \t    \n<a name=\"299\" href=\"#299\">299</a> \t    <strong>for</strong> (Iterator iter = peerMap.entrySet().iterator(); iter.hasNext();) {\n<a name=\"300\" href=\"#300\">300</a> \t\t\tModelPeer element = (ModelPeer) iter.next();\n<a name=\"301\" href=\"#301\">301</a> \t\t\telement.dispose();\n<a name=\"302\" href=\"#302\">302</a> \t\t}\n<a name=\"303\" href=\"#303\">303</a> \t    \n<a name=\"304\" href=\"#304\">304</a> \t}\n<a name=\"305\" href=\"#305\">305</a> \t\n<a name=\"306\" href=\"#306\">306</a> \t\n<a name=\"307\" href=\"#307\">307</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 32718.0}