{"text": "Search LoginPreferencesHelp GuideAbout Trac WikiTimelineRoadmapBrowse SourceView TicketsSearch Context Navigation Previous ChangeNext Change Changeset 1 61 for nomatic trunk service native wifi mac View differences inlineside by side Show lines around each change Show the changes in full context Ignore Blank lines Case changes White space changes Timestamp Mar 6 2 9 12 33 58 PM 6 years ago Author djp3Message Broken sensor c File 1 edited nomatic trunk service native wifi mac sensor c modified 8 diffs Legend UnmodifiedAddedRemoved nomatic trunk service native wifi mac sensor c r1 53 r1 61 11 ifndef SENSOR EXAMPLE 22 include jni h 3 else 4typedef char JNIEnv 35 endif 46 79 81 static WirelessContextPtr sys 11static WirelessInfo info 912 1 13 1114 Helper functions 1215 13 bool init 16bool init 1417 1518 int ret WirelessAttach sys 16 if ret sys NULL 19 WirelessInfo info calloc sizeof WirelessInfo 1 2 if ret sys NULL info NULL 1721 return false 1822 2226 2327 24 char getApSsid WirelessInfo info 25 26 int ret WirelessGetInfo sys info 27 if ret sys NULL 28 return NULL 29 3 else 31 return strdup char info name 32 33 34 35 int getApSignalStrength WirelessInfo info 36 37 int ret WirelessGetInfo sys info 38 if ret sys NULL 39 return 4 41 else 42 define NOISE MASK x x 1 7 1 43 return info signal 1 7 1 info signal 15 16 44 45 46 47 48 char formatApMac WirelessInfo info 49 int ret WirelessGetInfo sys info 5 if ret sys NULL 51 return NULL 52 53 else 54 char mac calloc sizeof char 32 55 sprintf mac 2x 2x 2x 2x 2x 2x d 56 info macAddress info macAddress 1 57 info macAddress 2 info macAddress 3 58 info macAddress 4 info macAddress 5 59 getApSignalStrength info 28bool shutdown 29 3 if sys NULL 31 free sys 32 sys NULL 33 34 35 if info NULL 36 free info 37 info NULL 38 39 4 return true 41 42 43void throwException JNIEnv env char why 44 ifndef SENSOR EXAMPLE 45 jclass excCls env FindClass env java lang Exception 46 if excCls 47 env ThrowNew env excCls getWirelessInfo failed because of a null pointer 48 else 49 printf Exception s why 5 endif 51 52 53 54void getWirelessInfo JNIEnv env 55 56 if sys NULL info NULL 57 throwException env getWirelessInfo failed because of a null pointer 58 return 59 6 else 61 int ret WirelessGetInfo sys info 62 if ret 63 throwException env WirelessGetInfo failed 64 return 65 66 else 67 return 68 69 7 71 72 73char getAPSSID JNIEnv env 74 75 return strdup char info name 76 77 78int getApSignalStrength JNIEnv env 79 8 define NOISE MASK x x 1 7 1 81 return info signal 1 7 1 info signal 15 16 82 83 84 85char formatAPMAC JNIEnv env 86 87 char mac calloc sizeof char 32 88 sprintf mac 2x 2x 2x 2x 2x 2x d 89 info macAddress info macAddress 1 9 info macAddress 2 info macAddress 3 91 info macAddress 4 info macAddress 5 92 getApSignalStrength env 93 return mac 94 95 96char formatAPMACList JNIEnv env 97 CFArrayRef apList NULL 98 CFArrayRef adHocList NULL 99 1 if sys NULL 1 1 throwException env formatAPMACList failed because sys NULL 1 2 return 1 3 1 4 else 1 5 int ret WirelessScanSplit sys apList adHocList 1 6 if ret apList NULL 1 7 throwException env WirelessScanSplit failed 1 8 return NULL 1 9 11 else 111 WirelessNetworkInfo netInfo WirelessNetworkInfo CFDataGetBytePtr CFArrayGetValueAtIndex apList i 112 if netInfo NULL 113 throwException env formatAPMACList failed because netInfo null 114 return NULL 115 116 else 117 for i i CFArrayGetCount apList i 118 char mac calloc sizeof char 32 119 sprintf mac 2x 2x 2x 2x 2x 2x d 12 netInfo macAddress netInfo macAddress 1 121 netInfo macAddress 2 netInfo macAddress 3 122 netInfo macAddress 4 netInfo macAddress 5 123 getApSignalStrength netInfo 124 env SetObjectArrayElement env results i env NewStringUTF env char mac 125 free mac 126 127 128 else 6 129 return mac 6113 67136 ifndef SENSOR EXAMPLE 68137 69 void throwAnException JNIEnv env char explanation 7 TODO Have our own exception type 71 jclass excCls env FindClass env java lang Exception 72 if excCls 73 env ThrowNew env excCls explanation 74 75 76138JNIEXPORT void JNICALL Java edu uci ics luci nomatic service sensors MacWifiSensor nativeInit JNIEnv env jobject ob 77139 7814 if init 79 throwAnException env WirelessAttach failed 141 throwException env Mac WiFi Initialization failed 142 143 144 145JNIEXPORT void JNICALL Java edu uci ics luci nomatic service sensors MacWifiSensor nativeShutdown JNIEnv env jobject ob 146 147 if shutdown 148 throwException env Mac WiFi Shutdown failed 8 149 8115 83152JNIEXPORT jstring JNICALL Java edu uci ics luci nomatic service sensors MacWifiSensor getAPSSID JNIEnv env jobject ob 84153 85 WirelessInfo info 86 char ssid getApSsid info 154 char ssid getAPSSID env 87155 if ssid NULL 88 TODO Have our own exception type 89 jclass excCls env FindClass env java lang Exception 9 if excCls 91 env ThrowNew env excCls WirelessGetInfo failed 92 156 throwException env Unable to get AP SSID 93157 return NULL 94158 1 1165 1 2166 1 3 JNIEXPORT jinteger JNICALL Java edu uci ics luci nomatic service sensors MacWifiSensor getAPSignalStrength JNIEnv env jobject ob 1 4 1 5 WirelessInfo info 1 6 int ret WirelessGetInfo sys info 1 7 if ret sys NULL 1 8 TODO Have our own exception type 1 9 jclass excCls env FindClass env java lang Exception 11 if excCls 111 env ThrowNew env excCls WirelessGetInfo failed 112 return NULL 113 114 else 115 define NOISE MASK x x 1 7 1 116 return env NewInteger env getApSignalStrength info 117 167JNIEXPORT jint JNICALL Java edu uci ics luci nomatic service sensors MacWifiSensor getAPSignalStrength JNIEnv env jobject ob 168 169 getWirelessInfo env 17 return getApSignalStrength env 118171 119172 121174JNIEXPORT jstring JNICALL Java edu uci ics luci nomatic service sensors MacWifiSensor getAPMAC JNIEnv env jobject ob 122175 123 WirelessInfo info 124 int ret WirelessGetInfo sys info 125 if ret sys NULL 126 TODO Have our own exception type 127 jclass excCls env FindClass env java lang Exception 128 if excCls 129 env ThrowNew env excCls WirelessGetInfo failed 13 return NULL 131 132 else 133 char mac formatApMac info 134 jstring ret env NewStringUTF env char mac 135 free mac 136 return ret 137 176 char mac formatAPMAC 177 jstring ret env NewStringUTF env char mac 178 free mac 179 return ret 13818 139181 141183 142184 143 CFArrayRef apList NULL 144 CFArrayRef adHocList NULL 145 146 int ret WirelessScanSplit sys apList adHocList 147 if ret sys NULL apList NULL 148 TODO Have our own exception type 149 jclass excCls env FindClass env java lang Exception 15 if excCls 151 env ThrowNew env excCls WirelessScanSplit failed 152 return NULL 153 154 else 155 jobjectArray results env NewObjectArray env CFArrayGetCount apList env FindClass env java lang String 156 int i 157185 for i i CFArrayGetCount apList i 158 WirelessNetworkInfo info WirelessNetworkInfo CFDataGetBytePtr CFArrayGetValueAtIndex apList i 159 16 if info NULL 161 char mac formatApMac info 162 env SetObjectArrayElement env results i env NewStringUTF env char mac 163 free mac 164 165 else 166 jclass excCls env FindClass env java lang Exception 167 if excCls 168 env ThrowNew env excCls WirelessScanSplit failed 169 return NULL 17 186 char mac formatAPMACList env 187 env SetObjectArrayElement env results i env NewStringUTF env char mac 188 free mac 171189 17219 return results Note See TracChangeset for help on using the changeset viewer Download in other formats Unified Diff Zip Archive Powered by Trac 1 1 By Edgewall Software All content copyright 2 7 2 8 by LUCI http luci ics uci edu ", "_id": "http://djp3-pc2.ics.uci.edu/LUCICodeRepository/nomaticIM/changeset/1061/nomatic/trunk/service/native/wifi/mac", "title": "\n      changeset 1061 for nomatic/trunk/service/native/wifi/mac \u2013 nomatic*im\n    ", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n  \n\n\n  <head>\n\t\t<title>\n      Changeset 1061 for nomatic/trunk/service/native/wifi/mac \u2013 Nomatic*IM\n    </title><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><link rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search\" /><link rel=\"help\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\" /><link rel=\"alternate\" href=\"?format=diff&amp;new=1061\" type=\"text/plain\" class=\"diff\" title=\"Unified Diff\" /><link rel=\"alternate\" href=\"?format=zip&amp;new=1061\" type=\"application/zip\" class=\"zip\" title=\"Zip Archive\" /><link rel=\"next\" href=\"/LUCICodeRepository/nomaticIM/changeset/1062/nomatic/trunk/service/native/wifi/mac\" title=\"Changeset 1062 for nomatic/trunk/service/native/wifi/mac\" /><link rel=\"start\" href=\"/LUCICodeRepository/nomaticIM/wiki\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/changeset.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/diff.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/code.css\" type=\"text/css\" /><link rel=\"prev\" href=\"/LUCICodeRepository/nomaticIM/changeset/1053/nomatic/trunk/service/native/wifi/mac\" title=\"Changeset 1053 for nomatic/trunk/service/native/wifi/mac\" /><link rel=\"shortcut icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link rel=\"icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link type=\"application/opensearchdescription+xml\" rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search/opensearch\" title=\"Search Nomatic*IM\" /><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/jquery.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/babel.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/messages/en_US.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/trac.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/search.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/diff.js\"></script><script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\".trac-toggledeleted\").show().click(function() {\n                  $(this).siblings().find(\".trac-deleted\").toggle();\n                  return false;\n        }).click();\n        $(\"#content\").find(\"li.entry h2 a\").parent().addAnchor(_(\"Link to this diff\"));\n      });\n    </script>\n\t</head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://luci.ics.uci.edu/#code\"><img src=\"http://luci.ics.uci.edu/blog/archives/LUCIhorzTight.jpg\" alt=\"LUCI Code Repository\" /></a>\n      </div>\n      <form id=\"search\" action=\"/LUCICodeRepository/nomaticIM/search\" method=\"get\">\n        <div>\n          <label for=\"proj-search\">Search:</label>\n          <input type=\"text\" id=\"proj-search\" name=\"q\" size=\"18\" value=\"\" />\n          <input type=\"submit\" value=\"Search\" />\n        </div>\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/login\">Login</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/prefs\">Preferences</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\">Help/Guide</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/wiki\">Wiki</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/timeline\">Timeline</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/roadmap\">Roadmap</a></li><li class=\"active\"><a href=\"/LUCICodeRepository/nomaticIM/browser\">Browse Source</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/report\">View Tickets</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/search\">Search</a></li>\n    </ul>\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><span>&larr; <a class=\"prev\" href=\"/LUCICodeRepository/nomaticIM/changeset/1053/nomatic/trunk/service/native/wifi/mac\" title=\"Changeset 1053 for nomatic/trunk/service/native/wifi/mac\">Previous Change</a></span></li><li class=\"last\"><span><a class=\"next\" href=\"/LUCICodeRepository/nomaticIM/changeset/1062/nomatic/trunk/service/native/wifi/mac\" title=\"Changeset 1062 for nomatic/trunk/service/native/wifi/mac\">Next Change</a> &rarr;</span></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"changeset\">\n      <div id=\"title\">\n            <h1>Changeset <a title=\"Show full changeset\" href=\"/LUCICodeRepository/nomaticIM/changeset/1061\">1061</a>\n              for <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/native/wifi/mac?rev=1061\">nomatic/trunk/service/native/wifi/mac</a></h1>\n      </div>\n      <form id=\"prefs\" action=\"\">\n        <div>\n          \n  <label for=\"style\">View differences</label>\n  <select id=\"style\" name=\"style\">\n    <option selected=\"selected\" value=\"inline\">inline</option>\n    <option value=\"sidebyside\">side by side</option>\n  </select>\n  <div class=\"field\">\n    <label><input type=\"radio\" name=\"contextall\" value=\"0\" checked=\"checked\" />\n             Show</label>\n      <label><input type=\"text\" name=\"contextlines\" id=\"contextlines\" size=\"2\" maxlength=\"3\" value=\"2\" />\n             lines around each change</label><br />\n    <label><input type=\"radio\" name=\"contextall\" value=\"1\" />\n           Show the changes in full context</label>\n  </div>\n  <fieldset id=\"ignore\">\n    <legend>Ignore:</legend>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignoreblanklines\" name=\"ignoreblanklines\" />\n      <label for=\"ignoreblanklines\">Blank lines</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorecase\" name=\"ignorecase\" />\n      <label for=\"ignorecase\">Case changes</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorewhitespace\" name=\"ignorewhitespace\" />\n      <label for=\"ignorewhitespace\">White space changes</label>\n    </div>\n  </fieldset>\n  <div class=\"buttons\">\n    <input type=\"submit\" name=\"update\" value=\"Update\" />\n  </div>\n\n        </div>\n      </form>\n      <dl id=\"overview\">\n          <dt class=\"property time\">Timestamp:</dt>\n          <dd class=\"time\">\n             Mar 6, 2009, 12:33:58 PM\n             (<a class=\"timeline\" href=\"/LUCICodeRepository/nomaticIM/timeline?from=2009-03-06T12%3A33%3A58-08%3A00&amp;precision=second\" title=\"See timeline at Mar 6, 2009, 12:33:58 PM\">6 years</a> ago)\n          </dd>\n          <dt class=\"property author\">Author:</dt>\n          <dd class=\"author\">djp3</dd>\n          <dt class=\"property message\">Message:</dt>\n          <dd class=\"message searchable\">\n            \n            \n              <p>\nBroken sensor.c<br />\n</p>\n\n            \n            \n          </dd>\n        <dt class=\"property files\">\n          File:\n        </dt>\n        <dd class=\"files\">\n          <div class=\"legend\" id=\"file-legend\">\n            <dl>\n              <dt class=\"mod\"></dt><dd>1 edited</dd>\n            </dl>\n          </div>\n          <br />\n          <ul>\n            <li>\n          <div class=\"mod\"> </div>\n            <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/native/wifi/mac/sensor.c?rev=1061\">\n              nomatic/trunk/service/native/wifi/mac/sensor.c\n            </a>\n          <span class=\"comment\">(modified)</span>\n              (<a title=\"Show differences\" href=\"#file0\">8 diffs</a>)\n            </li>\n          </ul>\n        </dd>\n      </dl>\n      <div class=\"diff\">\n        <div class=\"legend\" id=\"diff-legend\">\n          <h3>Legend:</h3>\n          <dl>\n            <dt class=\"unmod\"></dt><dd>Unmodified</dd>\n            <dt class=\"add\"></dt><dd>Added</dd>\n            <dt class=\"rem\"></dt><dd>Removed</dd>\n          </dl>\n        </div>\n        <div class=\"diff\">\n  <ul class=\"entries\">\n      <li class=\"entry\">\n        <h2 id=\"file0\">\n          <a href=\"/LUCICodeRepository/nomaticIM/changeset/1061/nomatic/trunk/service/native/wifi/mac/sensor.c\" title=\"Show the changeset 1061 restricted to nomatic/trunk/service/native/wifi/mac/sensor.c\">nomatic/trunk/service/native/wifi/mac/sensor.c</a>\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"Revision 1053\">\n                    <a title=\"Show revision 1053 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/native/wifi/mac/sensor.c?rev=1053#L1\">\n                      r1053</a>\n                  </th>\n                  <th title=\"Revision 1061\">\n                    <a title=\"Show revision 1061 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/native/wifi/mac/sensor.c?rev=1061#L1\">\n                      r1061</a>\n                  </th>\n                  <td>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>1</th><th>1</th><td class=\"l\"><span>#ifndef __SENSOR_EXAMPLE__ </span>\u00a0</td>\n                  </tr><tr>\n                          <th>2</th><th>2</th><td class=\"l\"><span>#include &lt;jni.h&gt;</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>3</th><td class=\"r\"><ins>#else</ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>4</th><td class=\"r\"><ins>typedef char JNIEnv;</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>3</th><th>5</th><td class=\"l\"><span>#endif</span>\u00a0</td>\n                  </tr><tr>\n                          <th>4</th><th>6</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/native/wifi/mac/sensor.c?rev=1053#L7\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/native/wifi/mac/sensor.c?rev=1061#L9\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>7</th><th>9</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>8</th><th>10</th><td class=\"l\"><span>static WirelessContextPtr sys;</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"last first\">\n                          <th>\u00a0</th><th>11</th><td class=\"r\"><ins>static WirelessInfo *info;</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>9</th><th>12</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>10</th><th>13</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>11</th><th>14</th><td class=\"l\"><span>/** Helper functions **/</span>\u00a0</td>\n                  </tr><tr>\n                          <th>12</th><th>15</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>13</th><th>\u00a0</th><td class=\"l\"><span>bool <del>_</del>init()</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>16</th><td class=\"r\"><span>bool <ins></ins>init()</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>14</th><th>17</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>15</th><th>18</th><td class=\"l\"><span>&nbsp; &nbsp; int ret = WirelessAttach(&amp;sys, 0);</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>16</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if (ret != 0 || sys == NULL) {</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>19</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; WirelessInfo *info = calloc(sizeof(WirelessInfo),1);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>20</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if (ret != 0 || sys == NULL || info == NULL) {</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>17</th><th>21</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(false);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>18</th><th>22</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/native/wifi/mac/sensor.c?rev=1053#L22\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/native/wifi/mac/sensor.c?rev=1061#L26\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>22</th><th>26</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>23</th><th>27</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>24</th><th>\u00a0</th><td class=\"l\"><span>char *_getApSsid(WirelessInfo info)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>25</th><th>\u00a0</th><td class=\"l\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>26</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; int ret = WirelessGetInfo(sys, &amp;info);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>27</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if (ret != 0 || sys == NULL) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>28</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(NULL);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>29</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>30</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>31</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return strdup((char *)info.name);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>32</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>33</th><th>\u00a0</th><td class=\"l\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>34</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>35</th><th>\u00a0</th><td class=\"l\"><span>int _getApSignalStrength(WirelessInfo info)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>36</th><th>\u00a0</th><td class=\"l\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>37</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; int ret = WirelessGetInfo(sys, &amp;info);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>38</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if ((ret != 0) || (sys == NULL)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>39</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(0);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>40</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>41</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>42</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #define NOISE_MASK(x)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;((x)&amp;((1&lt;&lt;7)-1))</span>\u00a0</td>\n                      </tr><tr>\n                        <th>43</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return ((info.signal)&amp;((1&lt;&lt;7)-1))-(((info.signal)&gt;&gt;15)*16);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>44</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>45</th><th>\u00a0</th><td class=\"l\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>46</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>47</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>48</th><th>\u00a0</th><td class=\"l\"><span>char *_formatApMac(WirelessInfo info){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>49</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; int ret = WirelessGetInfo(sys, &amp;info);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>50</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if ((ret != 0) || (sys == NULL)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>51</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(NULL);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>52</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>53</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>54</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char *mac = calloc(sizeof(char),32);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>55</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sprintf(mac, \"%02x:%02x:%02x:%02x:%02x:%02x(%d)\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>56</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; info.macAddress[0], info.macAddress[1],</span>\u00a0</td>\n                      </tr><tr>\n                        <th>57</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; info.macAddress[2], info.macAddress[3],</span>\u00a0</td>\n                      </tr><tr>\n                        <th>58</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; info.macAddress[4], info.macAddress[5],</span>\u00a0</td>\n                      </tr><tr>\n                        <th>59</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; _getApSignalStrength(info));</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>28</th><td class=\"r\"><span>bool shutdown()</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>29</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>30</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(sys != NULL){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>31</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(sys);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>32</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sys = NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>33</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>34</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>35</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(info != NULL){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>36</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(info);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>37</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; info = NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>38</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>39</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>40</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(true);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>41</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>42</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>43</th><td class=\"r\"><span>void throwException(JNIEnv *env, char *why){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>44</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; #ifndef __SENSOR_EXAMPLE__ </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>45</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; jclass excCls = (*env)-&gt;FindClass(env, \"java/lang/Exception\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>46</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if (excCls != 0)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>47</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (*env)-&gt;ThrowNew(env, excCls, \"getWirelessInfo failed because of a null pointer.\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>48</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; #else</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>49</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printf(\"Exception: %s\",why);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>50</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; #endif&nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>51</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>52</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>53</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>54</th><td class=\"r\"><span>void getWirelessInfo(JNIEnv *env){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>55</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>56</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(sys == NULL || info == NULL){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>57</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; throwException(env,\"getWirelessInfo failed because of a null pointer.\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>58</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>59</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>60</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>61</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int ret = WirelessGetInfo(sys, info);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>62</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (ret != 0){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>63</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; throwException(env, \"WirelessGetInfo failed.\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>64</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>65</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>66</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>67</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>68</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>69</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>70</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>71</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>72</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>73</th><td class=\"r\"><span>char *getAPSSID(JNIEnv *env)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>74</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>75</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(strdup((char *)info-&gt;name));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>76</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>77</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>78</th><td class=\"r\"><span>int getApSignalStrength(JNIEnv *env)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>79</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>80</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; #define NOISE_MASK(x)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;((x)&amp;((1&lt;&lt;7)-1))</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>81</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return (((info-&gt;signal)&amp;((1&lt;&lt;7)-1))-(((info-&gt;signal)&gt;&gt;15)*16));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>82</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>83</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>84</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>85</th><td class=\"r\"><span>char *formatAPMAC(JNIEnv *env){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>86</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>87</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; char *mac = calloc(sizeof(char),32);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>88</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; sprintf(mac, \"%02x:%02x:%02x:%02x:%02x:%02x(%d)\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>89</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; info-&gt;macAddress[0], info-&gt;macAddress[1],</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>90</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; info-&gt;macAddress[2], info-&gt;macAddress[3],</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>91</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; info-&gt;macAddress[4], info-&gt;macAddress[5],</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>92</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; _getApSignalStrength(env));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>93</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(mac);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>94</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>95</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>96</th><td class=\"r\"><span>char *formatAPMACList(JNIEnv *env){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>97</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; CFArrayRef apList = NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>98</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; CFArrayRef adHocList = NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>99</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>100</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(sys == NULL){&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>101</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; throwException(env,\"_formatAPMACList failed because sys == NULL\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>102</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>103</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>104</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>105</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int ret = WirelessScanSplit(sys, &amp;apList, &amp;adHocList, 0);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>106</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (ret != 0 || apList == NULL) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>107</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; throwException(env,\"WirelessScanSplit failed.\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>108</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(NULL);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>109</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>110</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>111</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; WirelessNetworkInfo *netInfo = (WirelessNetworkInfo *)CFDataGetBytePtr(CFArrayGetValueAtIndex(apList, i));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>112</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(netInfo == NULL){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>113</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; throwException(env,\"_formatAPMACList failed because netInfo == null\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>114</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(NULL);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>115</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>116</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>117</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for(i=0; i &lt; CFArrayGetCount(apList); i++) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>118</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char *mac = calloc(sizeof(char),32);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>119</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sprintf(mac, \"%02x:%02x:%02x:%02x:%02x:%02x(%d)\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>120</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; netInfo.macAddress[0], netInfo.macAddress[1],</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>121</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; netInfo.macAddress[2], netInfo.macAddress[3],</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>122</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; netInfo.macAddress[4], netInfo.macAddress[5],</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>123</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; _getApSignalStrength(netInfo));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>124</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (*env)-&gt;SetObjectArrayElement(env, results, i, (*env)-&gt;NewStringUTF( env, (char*)mac ));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>125</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(mac);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>126</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>127</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>128</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>60</th><th>129</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(mac);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>61</th><th>130</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/native/wifi/mac/sensor.c?rev=1053#L67\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/native/wifi/mac/sensor.c?rev=1061#L136\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>67</th><th>136</th><td class=\"l\"><span>#ifndef __SENSOR_EXAMPLE__ </span>\u00a0</td>\n                  </tr><tr>\n                          <th>68</th><th>137</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"first\">\n                          <th>69</th><th>\u00a0</th><td class=\"l\"><del>void throwAnException(JNIEnv *env,char *explanation){</del>\u00a0</td>\n                  </tr><tr>\n                          <th>70</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // TODO: Have our own exception type</del>\u00a0</td>\n                  </tr><tr>\n                          <th>71</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; jclass excCls = (*env)-&gt;FindClass(env, \"java/lang/Exception\");</del>\u00a0</td>\n                  </tr><tr>\n                          <th>72</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (excCls != 0)</del>\u00a0</td>\n                  </tr><tr>\n                          <th>73</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (*env)-&gt;ThrowNew(env, excCls, explanation);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>74</th><th>\u00a0</th><td class=\"l\"><del>}</del>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>75</th><th>\u00a0</th><td class=\"l\"><del></del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>76</th><th>138</th><td class=\"l\"><span>JNIEXPORT void JNICALL Java_edu_uci_ics_luci_nomatic_service_sensors_MacWifiSensor_nativeInit (JNIEnv * env, jobject ob)</span>\u00a0</td>\n                  </tr><tr>\n                          <th>77</th><th>139</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>78</th><th>140</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if (!_init()) {</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>79</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; throwAnException(env,\"WirelessAttach failed.\");</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>141</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; throwException(env,\"Mac WiFi Initialization failed.\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>142</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>143</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>144</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>145</th><td class=\"r\"><span>JNIEXPORT void JNICALL Java_edu_uci_ics_luci_nomatic_service_sensors_MacWifiSensor_nativeShutdown (JNIEnv * env, jobject ob)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>146</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>147</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if (!_shutdown()) {</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>148</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; throwException(env,\"Mac WiFi Shutdown failed.\");</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>80</th><th>149</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>81</th><th>150</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/native/wifi/mac/sensor.c?rev=1053#L83\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/native/wifi/mac/sensor.c?rev=1061#L152\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>83</th><th>152</th><td class=\"l\"><span>JNIEXPORT jstring JNICALL Java_edu_uci_ics_luci_nomatic_service_sensors_MacWifiSensor_getAPSSID (JNIEnv * env, jobject ob)</span>\u00a0</td>\n                  </tr><tr>\n                          <th>84</th><th>153</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>85</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; WirelessInfo info;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>86</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; char *ssid = _getApSsid(info);</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>154</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; char *ssid = _getAPSSID(env);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>87</th><th>155</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if (ssid == NULL){</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>88</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // TODO: Have our own exception type</span>\u00a0</td>\n                      </tr><tr>\n                        <th>89</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; jclass excCls = (*env)-&gt;FindClass(env, \"java/lang/Exception\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>90</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (excCls != 0){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>91</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (*env)-&gt;ThrowNew(env, excCls, \"WirelessGetInfo failed.\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>92</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>156</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; throwException(env, \"Unable to get AP SSID.\");</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>93</th><th>157</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(NULL);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>94</th><th>158</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/native/wifi/mac/sensor.c?rev=1053#L101\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/native/wifi/mac/sensor.c?rev=1061#L165\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>101</th><th>165</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>102</th><th>166</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>103</th><th>\u00a0</th><td class=\"l\"><span>JNIEXPORT jinteger JNICALL Java_edu_uci_ics_luci_nomatic_service_sensors_MacWifiSensor_getAPSignalStrength (JNIEnv * env, jobject ob)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>104</th><th>\u00a0</th><td class=\"l\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>105</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; WirelessInfo info;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>106</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; int ret = WirelessGetInfo(sys, &amp;info);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>107</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if ((ret != 0) || (sys == NULL)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>108</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // TODO: Have our own exception type</span>\u00a0</td>\n                      </tr><tr>\n                        <th>109</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; jclass excCls = (*env)-&gt;FindClass(env, \"java/lang/Exception\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>110</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (excCls != 0)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>111</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (*env)-&gt;ThrowNew(env, excCls, \"WirelessGetInfo failed.\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>112</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(NULL);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>113</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>114</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>115</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #define NOISE_MASK(x)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;((x)&amp;((1&lt;&lt;7)-1))</span>\u00a0</td>\n                      </tr><tr>\n                        <th>116</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return (*env)-&gt;NewInteger(env,_getApSignalStrength(info));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>117</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>167</th><td class=\"r\"><span>JNIEXPORT jint JNICALL Java_edu_uci_ics_luci_nomatic_service_sensors_MacWifiSensor_getAPSignalStrength (JNIEnv * env, jobject ob)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>168</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>169</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; getWirelessInfo(env);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>170</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return _getApSignalStrength(env);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>118</th><th>171</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>119</th><th>172</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/native/wifi/mac/sensor.c?rev=1053#L121\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/native/wifi/mac/sensor.c?rev=1061#L174\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>121</th><th>174</th><td class=\"l\"><span>JNIEXPORT jstring JNICALL Java_edu_uci_ics_luci_nomatic_service_sensors_MacWifiSensor__getAPMAC (JNIEnv * env, jobject ob)</span>\u00a0</td>\n                  </tr><tr>\n                          <th>122</th><th>175</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>123</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; WirelessInfo info;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>124</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; int ret = WirelessGetInfo(sys, &amp;info);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>125</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if ((ret != 0) || (sys == NULL)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>126</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // TODO: Have our own exception type</span>\u00a0</td>\n                      </tr><tr>\n                        <th>127</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; jclass excCls = (*env)-&gt;FindClass(env, \"java/lang/Exception\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>128</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (excCls != 0)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>129</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (*env)-&gt;ThrowNew(env, excCls, \"WirelessGetInfo failed.\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>130</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(NULL);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>131</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>132</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>133</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char *mac = _formatApMac(info);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>134</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; jstring ret = (*env)-&gt;NewStringUTF(env, (char*)mac);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>135</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(mac);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>136</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(ret);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>137</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>176</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; char *mac = _formatAPMAC();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>177</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; jstring ret = (*env)-&gt;NewStringUTF(env, (char*)mac);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>178</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; free(mac);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>179</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(ret);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>138</th><th>180</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>139</th><th>181</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/native/wifi/mac/sensor.c?rev=1053#L141\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/native/wifi/mac/sensor.c?rev=1061#L183\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>141</th><th>183</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>142</th><th>184</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"first\">\n                          <th>143</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; CFArrayRef apList = NULL;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>144</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; CFArrayRef adHocList = NULL;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>145</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; </del>\u00a0</td>\n                  </tr><tr>\n                          <th>146</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; int ret = WirelessScanSplit(sys, &amp;apList, &amp;adHocList, 0);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>147</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; if (ret != 0 || sys == NULL || apList == NULL) {</del>\u00a0</td>\n                  </tr><tr>\n                          <th>148</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // TODO: Have our own exception type</del>\u00a0</td>\n                  </tr><tr>\n                          <th>149</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; jclass excCls = (*env)-&gt;FindClass(env, \"java/lang/Exception\");</del>\u00a0</td>\n                  </tr><tr>\n                          <th>150</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (excCls != 0)</del>\u00a0</td>\n                  </tr><tr>\n                          <th>151</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (*env)-&gt;ThrowNew(env, excCls, \"WirelessScanSplit failed.\");</del>\u00a0</td>\n                  </tr><tr>\n                          <th>152</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(NULL);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>153</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; }</del>\u00a0</td>\n                  </tr><tr>\n                          <th>154</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; else{</del>\u00a0</td>\n                  </tr><tr>\n                          <th>155</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; jobjectArray results = (*env)-&gt;NewObjectArray(env, CFArrayGetCount(apList), (*env)-&gt;FindClass(env, \"java/lang/String\"), 0);</del>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>156</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int i;</del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>157</th><th>185</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for(i=0; i &lt; CFArrayGetCount(apList); i++) {</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>158</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; WirelessNetworkInfo *info = (WirelessNetworkInfo *)CFDataGetBytePtr(CFArrayGetValueAtIndex(apList, i));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>159</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>160</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(info != NULL){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>161</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char *mac = _formatApMac(info);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>162</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (*env)-&gt;SetObjectArrayElement(env, results, i, (*env)-&gt;NewStringUTF( env, (char*)mac ));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>163</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(mac);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>164</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>165</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>166</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; jclass excCls = (*env)-&gt;FindClass(env, \"java/lang/Exception\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>167</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (excCls != 0)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>168</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (*env)-&gt;ThrowNew(env, excCls, \"WirelessScanSplit failed.\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>169</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(NULL);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>170</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>186</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char *mac = _formatAPMACList(env);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>187</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (*env)-&gt;SetObjectArrayElement(env, results, i, (*env)-&gt;NewStringUTF( env, (char*)mac ));</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>188</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(mac);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>171</th><th>189</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>172</th><th>190</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return results;</span>\u00a0</td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n  </ul>\n</div>\n        <div id=\"help\"><strong>Note:</strong> See <a href=\"/LUCICodeRepository/nomaticIM/wiki/TracChangeset\">TracChangeset</a>\n          for help on using the changeset viewer.</div>\n      </div>\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"first\">\n          <a rel=\"nofollow\" href=\"?format=diff&amp;new=1061\" class=\"diff\">Unified Diff</a>\n        </li><li class=\"last\">\n          <a rel=\"nofollow\" href=\"?format=zip&amp;new=1061\" class=\"zip\">Zip Archive</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/LUCICodeRepository/nomaticIM/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/LUCICodeRepository/nomaticIM/about\"><strong>Trac 1.0.1</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">All content copyright 2007-2008 by LUCI <br /><a href=\"http://luci.ics.uci.edu/\">http://luci.ics.uci.edu/</a></p>\n    </div>\n\t\t<div id=\"sitefooter\">\n\t\t\t<script src=\"http://www.google-analytics.com/urchin.js\" type=\"text/javascript\">\n\t\t\t</script>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t\t_uacct = \"UA-338915-2\";\n\t\t\t\turchinTracker();\n\t\t\t</script>\n\t\t</div>\n\t</body>\n</html>", "id": 48497.0}