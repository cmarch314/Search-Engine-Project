{"text": "Next Mapping between C Up External Language Interface Previous External Language Interface External Procedures What is an external procedure An external procedure is a subprogram written in a language other than Prolog which imitates the action of a Prolog procedure The subprogram is linked to a predicate in a Prolog program and a call to this predicate results in a call to the subprogram Therefore there is a correspondence between the arguments of the Prolog predicate and the arguments of the subprogram and like any other Prolog procedure the subprogram may fail or succeed and bind variables but it may as well raise an exception We may particularly identify two types of external procedure These are those which are resatisfiable upon backtracking i e nondeterministic which are regular and those which are not resatisfiable i e deterministic which are simple From the Prolog level all types of external predicates may be called exactly like Prolog predicates However on the implementation level deterministic externals use a different calling convention than Prolog predicates and nondeterministic externals As a consequence certain dynamic redefinitions are restricted as described below In principle the external procedure can be written in any language which is able to produce a o object file In the current implementation of ECLiPSe only C macros are provided for external procedure definition and so all of the following assumes that the external procedure is written as a function in C Apart from this external interface there are two other possibilities to call a C function from Prolog Using the foreign library This is the interface in the style of Quintus and SICStus Prolog which allows to load and interface independent C routines Using the call c 2 predicate This predicate allows to call directly any C function whose address is available in the symbol table of the binary file Unlike the foreign interface it can also map C structures to Prolog arrays Next Mapping between C Up External Language Interface Previous External Language Interface Micha Meier Mon Mar 4 12 11 45 MET 1996", "_id": "http://www.ics.uci.edu/~dechter/courses/ics-275a/fall-99/slides/node216.html", "title": "", "html": "<!DOCTYPE HTML PUBLIC \"-//W3O//DTD W3 HTML 2.0//EN\">\r\n<!Converted with LaTeX2HTML 95.1 (Fri Jan 20 1995) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds >\r\n<HEAD>\r\n<TITLE> External Procedures</TITLE>\r\n</HEAD>\r\n<BODY>\r\n<meta name=\"description\" value=\" External Procedures\">\r\n<meta name=\"keywords\" value=\"umsroot\">\r\n<meta name=\"resource-type\" value=\"document\">\r\n<meta name=\"distribution\" value=\"global\">\r\n<P>\r\n <BR> <HR><A NAME=tex2html4849 HREF=\"node217.html\"><IMG ALIGN=BOTTOM ALT=\"next\" SRC=\"http://www.ecrc.de/eclipse/new_icons//next_motif.gif\"></A>   <A NAME=tex2html4847 HREF=\"node215.html\"><IMG ALIGN=BOTTOM ALT=\"up\" SRC=\"http://www.ecrc.de/eclipse/new_icons//up_motif.gif\"></A>   <A NAME=tex2html4841 HREF=\"node215.html\"><IMG ALIGN=BOTTOM ALT=\"previous\" SRC=\"http://www.ecrc.de/eclipse/new_icons//previous_motif.gif\"></A>      <A NAME=tex2html4851 HREF=\"node321.html\"><IMG ALIGN=BOTTOM ALT=\"index\" SRC=\"http://www.ecrc.de/eclipse/new_icons//index_motif.gif\"></A>   <BR>\r\n<B> Next:</B> <A NAME=tex2html4850 HREF=\"node217.html\"> Mapping between C </A>\r\n<B>Up:</B> <A NAME=tex2html4848 HREF=\"node215.html\"> External Language Interface</A>\r\n<B> Previous:</B> <A NAME=tex2html4842 HREF=\"node215.html\"> External Language Interface</A>\r\n<BR> <HR> <P>\r\n<H1><A NAME=SECTION001910000000000000000> External Procedures</A></H1>\r\n<P>\r\n<A NAME=3147>&#160;</A>\r\nWhat is an external procedure? An external procedure is a subprogram\r\nwritten in a language other than Prolog, which imitates the action of\r\na Prolog procedure. The subprogram is linked to a predicate in a Prolog\r\nprogram, and a call to this predicate results in a call to the subprogram.\r\nTherefore, there is a correspondence between the arguments of the Prolog\r\npredicate and the arguments of the subprogram, and like any other Prolog\r\nprocedure, the subprogram may fail or succeed and bind variables,\r\nbut it may as well raise an exception.\r\n<P>\r\nWe may particularly identify two types of external procedure. These are\r\nthose which are resatisfiable upon backtracking, i.e.\r\n<i> nondeterministic</i>, which are <i> regular</i>,\r\nand those which are not resatisfiable, i.e.\r\n<i> deterministic</i>, which are <i> simple</i>.\r\n<A NAME=3152>&#160;</A>\r\n<A NAME=3153>&#160;</A>\r\nFrom the Prolog level, all types of external predicates may be called\r\nexactly like Prolog predicates.\r\nHowever, on the implementation level, deterministic externals use a different\r\ncalling convention than Prolog predicates and nondeterministic externals.\r\nAs a consequence, certain dynamic redefinitions are restricted (as\r\ndescribed below).\r\n<P>\r\nIn principle, the external procedure can be written in any language\r\nwhich is able to produce a <i> .o</i> object file.\r\nIn the current implementation of <A NAME=tex2html698 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n , only\r\nC macros are provided\r\nfor external procedure definition, and so all of the following assumes that\r\nthe external procedure is written as a function in C.\r\n<P>\r\nApart from this external interface there are two other possibilities\r\nto call a C function from Prolog:\r\n<UL><LI> Using the <b> foreign</b> library.\r\n<A NAME=3157>&#160;</A>\r\nThis is the interface in the style of Quintus and SICStus Prolog,\r\nwhich allows to load and interface independent C routines.\r\n<P>\r\n<LI> Using the call_c/2 predicate. This predicate\r\nallows to call directly any C function whose address is available\r\nin the symbol table of the binary file. Unlike the foreign\r\ninterface, it can also map C structures to Prolog arrays.\r\n</UL><BR> <HR><A NAME=tex2html4849 HREF=\"node217.html\"><IMG ALIGN=BOTTOM ALT=\"next\" SRC=\"http://www.ecrc.de/eclipse/new_icons//next_motif.gif\"></A>   <A NAME=tex2html4847 HREF=\"node215.html\"><IMG ALIGN=BOTTOM ALT=\"up\" SRC=\"http://www.ecrc.de/eclipse/new_icons//up_motif.gif\"></A>   <A NAME=tex2html4841 HREF=\"node215.html\"><IMG ALIGN=BOTTOM ALT=\"previous\" SRC=\"http://www.ecrc.de/eclipse/new_icons//previous_motif.gif\"></A>      <A NAME=tex2html4851 HREF=\"node321.html\"><IMG ALIGN=BOTTOM ALT=\"index\" SRC=\"http://www.ecrc.de/eclipse/new_icons//index_motif.gif\"></A>   <BR>\r\n<B> Next:</B> <A NAME=tex2html4850 HREF=\"node217.html\"> Mapping between C </A>\r\n<B>Up:</B> <A NAME=tex2html4848 HREF=\"node215.html\"> External Language Interface</A>\r\n<B> Previous:</B> <A NAME=tex2html4842 HREF=\"node215.html\"> External Language Interface</A>\r\n<BR> <HR> <P>\r\n<BR> <HR>\r\n<P><ADDRESS>\r\n<I>Micha Meier <BR>\r\nMon Mar  4 12:11:45 MET 1996</I>\r\n</ADDRESS>\r\n</BODY>\r\n", "id": 30736.0}