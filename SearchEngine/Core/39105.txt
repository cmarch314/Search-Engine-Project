{"text": "Navigation Up Table of Contents Bibliography Index Title Page CGAL MP Float DefinitionAn object of the class MP Float is able to represent a floating point value with arbitrary precision This number type has the property that additions subtractions and multiplications are computed exactly as well as the construction from a double Division and square root are computed approximately so we suggest that you use rationals using Quotient MP Float when you need exact divisions Note on the implementation although the mantissa length is basically only limited by the available memory the exponent is currently represented by a double which can overflow in some circumstances We plan to also have a multiprecision exponent to fix this issue include CGAL MP Float h Is Model for the ConceptFieldNumberType Creation MP Float m introduces an uninitialized variable m MP Float m MP Float copy constructor MP Float m int i introduces the integral value i MP Float m double d introduces the floating point value d Operations std ostream std ostream out m writes a double approximation of m to the ostream out std istream std istream in m reads a double from in then converts it to an MP Float ImplementationThe implementation of MP Float is simple but provides a quadratic complexity for multiplications This can be a problem for large operands For faster implementations of the same functionality with large integral values you may want to consider using GMP or LEDA instead Next Number type traits NT Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/NumberTypeSupport_ref/Class_MP_Float.html", "title": "mp_float", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './NumberTypeSupport_ref/MP_Float.tex' -->\n<html> <head>  \n<title>MP_Float</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_1399\"></A>\n\n<A NAME=\"Cross_link_anchor_1400\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_1405\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Class.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_CGAL::MP_Float\"></A>\n<h2><I>CGAL::MP_Float</I></h2>\n<P>\n\n<H3>Definition</H3>An object of the class <I><A HREF=\"Class_MP_Float.html#Cross_link_anchor_1400\">MP_Float</A></I> is able to represent a floating point\nvalue with arbitrary precision.  This number type has the property that\nadditions, subtractions and multiplications are computed exactly, as well as\nthe construction from a double.  Division and <A HREF=\"Function_square.html#Cross_link_anchor_1418\">square</A> root are computed\napproximately, so we suggest that you use rationals using\n<I><A HREF=\"Class_Quotient.html#Cross_link_anchor_1404\">Quotient</A>&lt;<A HREF=\"Class_MP_Float.html#Cross_link_anchor_1400\">MP_Float</A>&gt;</I> when you need exact divisions.\n<P>\n\nNote on the implementation : although the mantissa length is basically only\nlimited by the available memory, the exponent is currently represented by a\n<I>double</I>, which can overflow in some circumstances.  We plan to also have\na multiprecision exponent to fix this issue.\n<P>\n\n<I>#include &lt;<A HREF=\"../../../include/CGAL/MP_Float.h\">CGAL/MP_Float.h</A>&gt;</I>\n<P>\n\n<H3>Is Model for the Concept</H3><A HREF=\"../Kernel_23_ref/Concept_FieldNumberType.html#Cross_link_anchor_2\">FieldNumberType</A>\n<P>\n\n<H3>Creation</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_MP_Float.html#Cross_link_anchor_1400\">MP_Float</A> m;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    introduces an uninitialized variable <I>m</I>.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_MP_Float.html#Cross_link_anchor_1400\">MP_Float</A> m (  <A HREF=\"Class_MP_Float.html#Cross_link_anchor_1400\">MP_Float</A>);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    copy constructor.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_MP_Float.html#Cross_link_anchor_1400\">MP_Float</A> m ( int i);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    introduces the integral value i.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_MP_Float.html#Cross_link_anchor_1400\">MP_Float</A> m ( double d);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    introduces the floating point value d.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Operations</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    std::ostream&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n     std::ostream&amp; out &lt;&lt;  m<A NAME=\"Function_std::ostream__operator666std::ostream__out+_const_MP_Float__m9;\"></A>\n\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    writes a double approximation of <I>m</I> to the ostream <I>out</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    std::istream&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n     std::istream&amp; in &gt;&gt;  &amp; m<A NAME=\"Function_std::istream__operator996std::istream__in+_MP_Float__m9;\"></A>\n\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    reads a <I>double</I> from <I>in</I>, then converts it to an <I><A HREF=\"Class_MP_Float.html#Cross_link_anchor_1400\">MP_Float</A></I>.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Implementation</H3>The implementation of <I><A HREF=\"Class_MP_Float.html#Cross_link_anchor_1400\">MP_Float</A></I> is simple but provides a quadratic\ncomplexity for multiplications.  This can be a problem for large operands.\nFor faster implementations of the same functionality with large integral\nvalues, you may want to consider using <I>GMP</I> or <I>LEDA</I> instead.\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Class_Number_type_traits.html\"><I>Number_type_traits&lt;NT&gt;</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_2!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 39105.0}