{"text": "View Javadoc 1 2 Created on Mar 25 2 5 3 4 5 package edu uci isr impromptu common 6 7 import javax jmdns ServiceInfo 8 9 1 An abstract peer It can be a repostiory peer a pie peer or other type 11 12 author Jie Ren 13 14 public interface Peer 15 16 Get the service information received from JmDNS 17 return the service inforamtion 18 19 public ServiceInfo getServiceInfo 2 21 22 Get the name of the peer for use in a more human readable manner 23 return the name of the peer 24 25 public String getName 26 27 28 get the host address of the peer 29 return the host address of the peer 3 31 public String getHostAddress 32 33 34 get the port of the peer 35 return the port 36 37 public int getPort 38 39 4 The peer has added a file 41 42 param fileName the name of the newly added file 43 param radius the relative radius between and 1 of the newly added file 44 This might be null if another application creates the file 45 param angle the relative angle between and 1 of the newly added file 46 This might be null if another application creates the file 47 return true if there was not such a file false otherwise 48 49 public boolean fileAdded String fileName double radius double angle 5 51 52 The peer has moved a file 53 54 param fileName the name of the newly moved file 55 param radius the new relative radius between and 1 of the newly added file 56 param angle the new relative angle between and 1 of the newly added file 57 return true if there was not such a file false otherwise 58 59 public boolean fileMoved String fileName double radius double angle 6 61 62 The peer has removed a file 63 64 param fileName the name of the newly removed file 65 return true if there was a file false otherwise 66 67 public boolean fileRemoved String fileName 68 69 7 Whether the peer owns a file 71 param fileName the name of the file 72 return true if the peer owns it false if it does not own it 73 74 public boolean owns String fileName 75 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.30/xref/edu/uci/isr/impromptu/common/Peer.html", "title": "peer xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>Peer xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../../../../stylesheet.css\" />\n</head>\n<body>\n<div id=\"overview\"><a href=\"../../../../../../apidocs/edu/uci/isr/impromptu/common/Peer.html\">View Javadoc</a></div><pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <em class=\"comment\">/*</em>\n<a name=\"2\" href=\"#2\">2</a>   <em class=\"comment\"> * Created on Mar 25, 2005</em>\n<a name=\"3\" href=\"#3\">3</a>   <em class=\"comment\"> *</em>\n<a name=\"4\" href=\"#4\">4</a>   <em class=\"comment\"> */</em>\n<a name=\"5\" href=\"#5\">5</a>   <strong>package</strong> <a href=\"../../../../../edu/uci/isr/impromptu/common/package-summary.html\">edu.uci.isr.impromptu.common</a>;\n<a name=\"6\" href=\"#6\">6</a>   \n<a name=\"7\" href=\"#7\">7</a>   <strong>import</strong> javax.jmdns.ServiceInfo;\n<a name=\"8\" href=\"#8\">8</a>   \n<a name=\"9\" href=\"#9\">9</a>   <em>/**<em>*</em></em>\n<a name=\"10\" href=\"#10\">10</a>  <em> * An abstract peer. It can be a repostiory peer, a pie peer, or other type.</em>\n<a name=\"11\" href=\"#11\">11</a>  <em> * </em>\n<a name=\"12\" href=\"#12\">12</a>  <em> * @author Jie Ren</em>\n<a name=\"13\" href=\"#13\">13</a>  <em> */</em>\n<a name=\"14\" href=\"#14\">14</a>  <strong>public</strong> <strong>interface</strong> <a href=\"../../../../../edu/uci/isr/impromptu/common/Peer.html\">Peer</a> {\n<a name=\"15\" href=\"#15\">15</a>      <em>/**<em>*</em></em>\n<a name=\"16\" href=\"#16\">16</a>  <em>     * Get the service information received from JmDNS</em>\n<a name=\"17\" href=\"#17\">17</a>  <em>     * @return the service inforamtion</em>\n<a name=\"18\" href=\"#18\">18</a>  <em>     */</em>\n<a name=\"19\" href=\"#19\">19</a>      <strong>public</strong> ServiceInfo\tgetServiceInfo();\n<a name=\"20\" href=\"#20\">20</a>      \n<a name=\"21\" href=\"#21\">21</a>      <em>/**<em>*</em></em>\n<a name=\"22\" href=\"#22\">22</a>  <em>     * Get the name of the peer, for use in a more human readable manner </em>\n<a name=\"23\" href=\"#23\">23</a>  <em>     * @return the name of the peer</em>\n<a name=\"24\" href=\"#24\">24</a>  <em>     */</em>\n<a name=\"25\" href=\"#25\">25</a>      <strong>public</strong> String getName();\n<a name=\"26\" href=\"#26\">26</a>      \n<a name=\"27\" href=\"#27\">27</a>      <em>/**<em>*</em></em>\n<a name=\"28\" href=\"#28\">28</a>  <em>     * get the host address of the peer</em>\n<a name=\"29\" href=\"#29\">29</a>  <em>     * @return the host address of the peer</em>\n<a name=\"30\" href=\"#30\">30</a>  <em>     */</em>\n<a name=\"31\" href=\"#31\">31</a>      <strong>public</strong> String getHostAddress();\n<a name=\"32\" href=\"#32\">32</a>      \n<a name=\"33\" href=\"#33\">33</a>      <em>/**<em>*</em></em>\n<a name=\"34\" href=\"#34\">34</a>  <em>     * get the port of the peer</em>\n<a name=\"35\" href=\"#35\">35</a>  <em>     * @return the port</em>\n<a name=\"36\" href=\"#36\">36</a>  <em>     */</em>\n<a name=\"37\" href=\"#37\">37</a>      <strong>public</strong> <strong>int</strong>  getPort();\n<a name=\"38\" href=\"#38\">38</a>  \n<a name=\"39\" href=\"#39\">39</a>      <em>/**<em>*</em></em>\n<a name=\"40\" href=\"#40\">40</a>  <em>     * The peer has added a file. </em>\n<a name=\"41\" href=\"#41\">41</a>  <em>     * </em>\n<a name=\"42\" href=\"#42\">42</a>  <em>     * @param fileName the name of the newly added file</em>\n<a name=\"43\" href=\"#43\">43</a>  <em>     * @param radius the relative radius (between 0 and 1) of the newly added file. </em>\n<a name=\"44\" href=\"#44\">44</a>  <em>     * \t\tThis might be null if another application creates the file</em>\n<a name=\"45\" href=\"#45\">45</a>  <em>     * @param angle the relative angle (between 0 and 1) of the newly added file.</em>\n<a name=\"46\" href=\"#46\">46</a>  <em>     * \t\tThis might be null if another application creates the file</em>\n<a name=\"47\" href=\"#47\">47</a>  <em>     * @return true if there was not such a file, false otherwise</em>\n<a name=\"48\" href=\"#48\">48</a>  <em>     */</em>\n<a name=\"49\" href=\"#49\">49</a>      <strong>public</strong> <strong>boolean</strong> fileAdded(String fileName, <strong>double</strong> radius, <strong>double</strong> angle);\n<a name=\"50\" href=\"#50\">50</a>      \n<a name=\"51\" href=\"#51\">51</a>      <em>/**<em>*</em></em>\n<a name=\"52\" href=\"#52\">52</a>  <em>     * The peer has moved a file</em>\n<a name=\"53\" href=\"#53\">53</a>  <em>     * </em>\n<a name=\"54\" href=\"#54\">54</a>  <em>     * @param fileName the name of the newly moved file</em>\n<a name=\"55\" href=\"#55\">55</a>  <em>     * @param radius the new relative radius (between 0 and 1) of the newly added file</em>\n<a name=\"56\" href=\"#56\">56</a>  <em>     * @param angle the new relative angle (between 0 and 1) of the newly added file</em>\n<a name=\"57\" href=\"#57\">57</a>  <em>     * @return true if there was not such a file, false otherwise</em>\n<a name=\"58\" href=\"#58\">58</a>  <em>     */</em>\n<a name=\"59\" href=\"#59\">59</a>      <strong>public</strong> <strong>boolean</strong> fileMoved(String fileName, <strong>double</strong> radius, <strong>double</strong> angle);\n<a name=\"60\" href=\"#60\">60</a>      \n<a name=\"61\" href=\"#61\">61</a>      <em>/**<em>*</em></em>\n<a name=\"62\" href=\"#62\">62</a>  <em>     * The peer has removed a file</em>\n<a name=\"63\" href=\"#63\">63</a>  <em>     * </em>\n<a name=\"64\" href=\"#64\">64</a>  <em>     * @param fileName the name of the newly removed file</em>\n<a name=\"65\" href=\"#65\">65</a>  <em>     * @return true if there was a file, false otherwise</em>\n<a name=\"66\" href=\"#66\">66</a>  <em>     */</em>\n<a name=\"67\" href=\"#67\">67</a>      <strong>public</strong> <strong>boolean</strong> fileRemoved(String fileName);\n<a name=\"68\" href=\"#68\">68</a>      \n<a name=\"69\" href=\"#69\">69</a>      <em>/**<em>*</em></em>\n<a name=\"70\" href=\"#70\">70</a>  <em>     * Whether the peer owns a file</em>\n<a name=\"71\" href=\"#71\">71</a>  <em>     * @param fileName the name of the file</em>\n<a name=\"72\" href=\"#72\">72</a>  <em>     * @return true if the peer owns it, false if it does not own it</em>\n<a name=\"73\" href=\"#73\">73</a>  <em>     */</em>\n<a name=\"74\" href=\"#74\">74</a>      <strong>public</strong> <strong>boolean</strong> owns(String fileName);\n<a name=\"75\" href=\"#75\">75</a>  }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 34464.0}