{"text": "Re Name space munging blech Jim Whitehead ejw ics uci edu Tue 11 Jun 1996 23 22 56 7 Messages sorted by date thread subject author Next message Jim Whitehead Re Name space munging blech Previous message Christopher Seiwald Re Name space munging blech Maybe in reply to Jim Whitehead Name space munging blech Next in thread Jim Whitehead Re Name space munging blech Jim s subject line makes the issue seem one of taste No just an attempt to inject some humor into an otherwise serious post Name space munging has the same negative connotations as URL decorations as if a URL was a Christmas tree To that end I suggest that we decorate the version number with version so that http host dir projectX 1 5 Macintosh French file c becomes http host dir projectX version 1 5 Macintosh French file c Aesthetics aside this works This is better although it seriously increases the length of URLs And if we re going to do this I d prefer to see something like http host dir projectX Macintosh version 1 5 French file c This still handles the surfing requirement that seems to be so compelling 2 Competing name space semantics What gives us the right to partition the name space for HTTP servers which employ versioning How can we We re not seizing rights here we re establishing a convention Admittedly even version version takes away from the namespace freedom of the HTTP servers albeit less than simply version This dodges my main point how can we guarantee there won t be collisions between our convention and other existing conventions Given the scope of the proposed convention I find the likelihood of collisions to be high and gave an example of an entire class of existing namespaces which may cause problems 4 The main benefit of placing version identifiers into the name space surfing into the past via relative URLs does not work One scenario outlines this http foo bar com 1 5 A html where 1 5 is the version id contains a relative URL of GIF background gif In this case version 1 5 of background gif would also be retrieved However experience to date with versioning systems shows that all objects are not versioned at the same rate First if the version identifier is something other than a revision number this works a whole lot better http foo bar com brochure version symbolic label A html allows A html to include a relative gif of background gif and get the desired version whatever its revision number may be Second if you allow version version to appear anywhere in the path then the aware server can have it where it most makes sense For example http foo bar com brochure A html version 1 15 I don t think you can just allow version version to appear either before or after the resource without affecting the semantics of it The way I read your comments having the version version before the resource is giving the version id of a collection of resources while having version version after the resource is simply specifying the version id of the resource itself These are not the same Plus I still don t think this works Here s another example resource A html has 3 versions A html 1 A html 2 A html 2 1 resource B html has 2 versions B html 1 B html 2 resource logo gif has 2 versions logo gif 1 logo gif 2 The latest version of resource A html is version 2 1 and includes version 2 of logo gif using a relative URL The latest version of resource B hmtl is version 2 which also includes version 2 of logo gif using a relative URL To make the name space work you d have http foo bar com top version 2 1 A html http foo bar com top version 2 B html But wait the relative URL in A html will try to get the 2 1 version of logo gif which doesn t exist Assuming you mean that the version 2 1 really refers to a collection of resources I ll assume you can add a symbolic link to version 2 of logo gif into the version 2 1 collection At this point let me introduce resource C html which like A html has three versions 1 2 and 2 1 As you might imagine C html also includes logo gif but C html is an older page which has not been updated recently and hence includes logo gif version 1 So the URL for C html is http foo bar com top version 2 1 C html Utilizing the solution of adding a symbolic link to logo gif version 1 into collection version 2 1 we suddenly realize that a symbolic link to logo gif already exists left over from adding the link to version 2 of logo gif for A html version 2 1 This is a problem On the other hand if the versions i e version version resource html do not actually refer to collections but instead refer just to the object one heirarchy down then there are still problems A new version 2 1 of logo gif a copy of version 2 could be made so that A html would retrieve the right version but C html version 2 1 just simply would be unable to get version 1 of logo gif because the version 2 1 name for logo gif has already been taken by a copy of version 2 of logo gif The whole point is to allow version naive clients to surf If this is not as important as I think it is then maybe we don t need to go to such lengths to solve the problem I think it is an important problem But I also think we shouldn t partition the namespace in a way which causes other problems due to namespace collisions and restrictions on the versions of entities which may be accessed I strongly feel the text config MIME type approach is the best one for handling browsing of collections of versioned objects Jim Next message Jim Whitehead Re Name space munging blech Previous message Christopher Seiwald Re Name space munging blech Maybe in reply to Jim Whitehead Name space munging blech Next in thread Jim Whitehead Re Name space munging blech ", "_id": "http://www.ics.uci.edu/~ejw/versioning/arch/0087.html", "title": "archive of working group on versioning and configuration management of world wide web content: re: name space munging ... blech!", "html": "<!-- received=\"Tue Jun 11 23:23:00 1996 PDT\" -->\n<!-- sent=\"Tue, 11 Jun 1996 23:22:56 -0700\" -->\n<!-- name=\"Jim Whitehead\" -->\n<!-- email=\"ejw@ics.uci.edu\" -->\n<!-- subject=\"Re: Name space munging ... blech!\" -->\n<!-- id=\"ade406fd03021004c74f@[128.200.199.222]\" -->\n<!-- inreplyto=\"Name space munging ... blech!\" -->\n<title>Archive of Working Group on Versioning and Configuration Management of World Wide Web Content: Re: Name space munging ... blech!</title>\n<h1>Re: Name space munging ... blech!</h1>\n<b>Jim Whitehead</b> (<a href=\"mailto:ejw@ics.uci.edu\"><i>ejw@ics.uci.edu</i></a>)<br>\n<i>Tue, 11 Jun 1996 23:22:56 -0700</i>\n<p>\n<ul>\n<li> <b>Messages sorted by:</b> <a href=\"index.html#87\">[ date ]</a><a href=\"thread.html#87\">[ thread ]</a><a href=\"subject.html#87\">[ subject ]</a><a href=\"author.html#87\">[ author ]</a>\n<!-- next=\"start\" -->\n<li> <b>Next message:</b> <a href=\"0088.html\">Jim Whitehead: \"Re: Name space munging ... blech!\"</a>\n<li> <b>Previous message:</b> <a href=\"0086.html\">Christopher Seiwald: \"Re: Name space munging ... blech!\"</a>\n<li> <b>Maybe in reply to:</b> <a href=\"0083.html\">Jim Whitehead: \"Name space munging ... blech!\"</a>\n<!-- nextthread=\"start\" -->\n<li> <b>Next in thread:</b> <a href=\"0088.html\">Jim Whitehead: \"Re: Name space munging ... blech!\"</a>\n<!-- reply=\"end\" -->\n</ul>\n<hr>\n<!-- body=\"start\" -->\n<pre>\n&gt;Jim's subject line makes the issue seem one of taste\n\nNo... just an attempt to inject some humor into an otherwise serious post.\nName space munging has the same negative connotations as URL \"decorations,\"\nas if a URL was a Christmas tree... :-)\n\n&gt;To that end, I suggest that we decorate the version number with version=,\n&gt;so that\n&gt;\n&gt;        <a href=\"http://host/dir/projectX/1.5/Macintosh/French/file.c\">http://host/dir/projectX/1.5/Macintosh/French/file.c</a>\n&gt;\n&gt;becomes:\n&gt;\n&gt;        <a href=\"http://host/dir/projectX/version=1.5/Macintosh/French/file.c\">http://host/dir/projectX/version=1.5/Macintosh/French/file.c</a>\n&gt;\n&gt;Aesthetics aside, this works.\n\nThis is better, although it seriously increases the length of URLs.  And if\nwe're going to do this, I'd prefer to see something like:\n\n   <a href=\"http://host/dir/projectX/Macintosh;version=1.5/French/file.c\">http://host/dir/projectX/Macintosh;version=1.5/French/file.c</a>\n\nThis still handles the \"surfing\" requirement that seems to be so compelling.\n\n&gt;\n&gt;| 2)  Competing name space semantics: What gives us the right to partition\n&gt;| the name space for HTTP servers which employ versioning?  How can we\n&gt;\n&gt;We're not seizing rights here, we're establishing a convention.\n&gt;Admittedly, even /version=_version_/ takes away from the namespace\n&gt;freedom of the HTTP servers, albeit less than simply /_version_/.\n\nThis dodges my main point: how can we guarantee there won't be collisions\nbetween our convention, and other existing conventions.  Given the scope of\nthe proposed convention, I find the likelihood of collisions to be high,\nand gave an example of an entire class of existing namespaces which may\ncause problems.\n\n&gt;\n&gt;| 4) The main benefit of placing version identifiers into the name space,\n&gt;| \"surfing\" into the past via relative URLs, does not work.  One scenario\n&gt;| outlines this:\n&gt;|\n&gt;| <a href=\"http://foo.bar.com/1.5/A.html\">http://foo.bar.com/1.5/A.html</a>  (where 1.5 is the version id) contains a\n&gt;| relative URL of GIF \"../background.gif.\"  In this case, version 1.5 of\n&gt;| background.gif would also be retrieved.  However, experience to date with\n&gt;| versioning systems shows that all objects are not versioned at the same\n&gt;| rate.\n&gt;\n&gt;First, if the _version_ identifier is something other than a revision\n&gt;number, this works a whole lot better:\n&gt;\n&gt;        <a href=\"http://foo.bar.com/brochure/version=_symbolic-label_/A.html\">http://foo.bar.com/brochure/version=_symbolic-label_/A.html</a>\n&gt;\n&gt;allows A.html to include a relative gif of \"background.gif\" and get the\n&gt;desired version, whatever its revision number may be.\n&gt;\n&gt;Second, if you allow /version=_version_/ to appear anywhere in the path,\n&gt;then the aware server can have it where it most makes sense.  For example,\n&gt;\n&gt;        <a href=\"http://foo.bar.com/brochure/A.html/version=1.15\">http://foo.bar.com/brochure/A.html/version=1.15</a>\n&gt;\n\nI don't think you can just allow /version=_version_/ to appear either\nbefore or after the resource without affecting the semantics of it.  The\nway I read your comments, having the /version=_version_/ before the\nresource is giving the version id of a *collection* of resources, while\nhaving /version=_version_/ after the resource is simply specifying the\nversion id of the resource itself.  These are not the same.\n\nPlus, I still don't think this works.  Here's another example:\n\nresource A.html has 3 versions: A.html,1.0; A.html,2.0; A.html;2.1\nresource B.html has 2 versions: B.html,1.0; B.html,2.0\nresource logo.gif has 2 versions: logo.gif,1.0; logo.gif,2.0\n\nThe latest version of resource A.html is version 2.1, and includes version\n2.0 of logo.gif using a relative URL.  The latest version of resource\nB.hmtl is version 2.0, which also includes version 2.0 of logo.gif using a\nrelative URL.\n\nTo make the name space work, you'd have:\n\n<a href=\"http://foo.bar.com/top/version=2.1/A.html\">http://foo.bar.com/top/version=2.1/A.html</a>\n<a href=\"http://foo.bar.com/top/version=2.0/B.html\">http://foo.bar.com/top/version=2.0/B.html</a>\n\nBut wait ... the relative URL in A.html will try to get the 2.1 version of\nlogo.gif, which doesn't exist!  Assuming you mean that the version=2.1\nreally refers to a collection of resources, I'll assume you can add a\nsymbolic link to version 2.0 of logo.gif into the version=2.1 collection.\nAt this point, let me introduce resource C.html, which, like A.html, has\nthree versions, 1.0, 2.0 and 2.1.  As you might imagine, C.html also\nincludes logo.gif, but C.html is an older page which has not been updated\nrecently, and hence includes logo.gif version 1.0. So the URL for C.html\nis:\n\n<a href=\"http://foo.bar.com/top/version=2.1/C.html\">http://foo.bar.com/top/version=2.1/C.html</a>\n\nUtilizing the solution of adding a symbolic link to logo.gif, version 1.0\ninto collection \"version=2.1\", we suddenly realize that a symbolic link to\nlogo.gif already exists (left over from adding the link to version 2.0 of\nlogo.gif for A.html version 2.1).  This is a problem.\n\nOn the other hand, if the versions (i.e.,\n..../version=_version_/resource.html) do not actually refer to collections,\nbut instead refer just to the object one heirarchy down, then there are\nstill problems.  A new version 2.1 of logo.gif, a copy of version 2.0,\ncould be made so that A.html would retrieve the right version, but C.html,\nversion 2.1 just simply would be unable to get version 1.0 of logo.gif,\nbecause the version 2.1 name for logo.gif has already been taken by a copy\nof version 2.0 of logo.gif.\n\n&gt;The whole point is to allow version-naive clients to surf.  If this is not\n&gt;as important as I think it is, then maybe we don't need to go to such lengths\n&gt;to solve the problem.\n\nI think it is an important problem.  But I also think we shouldn't\npartition the namespace in a way which causes other problems due to\nnamespace collisions, and restrictions on the versions of entities which\nmay be accessed.\n\nI strongly feel the text/config MIME type approach is the best one for\nhandling browsing of collections of versioned objects.\n\n- Jim\n</pre>\n<!-- body=\"end\" -->\n<hr>\n<p>\n<ul>\n<!-- next=\"start\" -->\n<li> <b>Next message:</b> <a href=\"0088.html\">Jim Whitehead: \"Re: Name space munging ... blech!\"</a>\n<li> <b>Previous message:</b> <a href=\"0086.html\">Christopher Seiwald: \"Re: Name space munging ... blech!\"</a>\n<li> <b>Maybe in reply to:</b> <a href=\"0083.html\">Jim Whitehead: \"Name space munging ... blech!\"</a>\n<!-- nextthread=\"start\" -->\n<li> <b>Next in thread:</b> <a href=\"0088.html\">Jim Whitehead: \"Re: Name space munging ... blech!\"</a>\n<!-- reply=\"end\" -->\n</ul>\n", "id": 34442.0}