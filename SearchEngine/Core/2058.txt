{"text": "Homework 3 due Monday Wk 4 required problemstopic1Describe an algorithm that given n integers in the range 1 to k preprocesses its input and then answers in O 1 time any query about how many of the n integers fall into a range a b The preprocessing phase must run in O n k time range query2 Baase Exercise 5 22 on page 246 a You are given N keys and an integer K such that 1 K N Give an efficient algorithm to find any one of the K smallest keys How many key comparisons does your algorithm do b Give a lower bound as a function of N and K on the number of comparisons needed to solve this problem lower bound on select3 Let A be an array of size n of integers where A 1 A 2 A n Note that each entry may be a positive or negative integer a Give an algorithm that takes O log n time to find an i such that A i i provided such an i exists If no such i exists the algorithm returns b Prove that any algorithm to solve this problem using comparisons must take time log n search suggested problems topic4Baase Exercise 5 3 on page 242lower bound on maxmin5Baase Exercise 4 46 on page 215radix sort6A file contains n bytes each consisting of k bits You must determine how many bits in the file are 1 s The function read returns the next byte from the file and the function eof returns TRUE iff there are no more bytes to be read You may use normal arithmetic operations and the boolean function odd x which returns TRUE iff x is not evenly divisible by two Give an algorithm call it A which solves this problem using only O 1 space What is the time complexity of algorithm A as a function of n and k Give an algorithm call it B which solves this problem by building a table of the number of 1 s in all possible bytes What are the time and space complexities of algorithm B Discuss the time space tradeoffs between algorithms A and B for relative values of n and k When would you use or not use each time space trade off7 CLR Problem 8 2 e on page 2 6 Suppose that we have an array of n data records to sort and that the n records have keys in the range from 1 to k Show how to modify counting sort see CLR pp 194 196 so that it sorts the records in place in O n k time You may use O k storage outside the input array Is your algorithm stable Hint How would you do it for k 3 in situ sort8 Design a procedure to rotate a vector of n elements left in place by p positions using O n time and only a constant amount of extra storage For instance with n 8 and p 3 the vector ABCDEFGH is rotated to be DEFGHABC Hint First devise a procedure to reverse the elements of a subvector and then find a series of reversals that will result in the desired rotation Dan Hirschberg Computer Science Department University of California Irvine CA 92697 3435 dan at ics uci edu Last modified Nov 1 2 14", "_id": "http://www.ics.uci.edu/~dan/class/161/hw3.html", "title": " compsci 161 homework #3 ", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\"\n      \"http://www.w3.org/TR/REC-html40/loose.dtd\">\n<HTML><HEAD>\n<TITLE> CompSci 161 Homework #3 </TITLE>\n</HEAD><BODY>\n\n<!-- <H2> Homework #3 -- due Wednesday Wk 3 </H2> -->\n<H2 align=center> Homework #3 -- due Monday Wk 4 </H2>\n\n<table border=1>\n<tr><th width=\"5%\">#</th>\n    <th width=\"70%\"><font color=red>required problems</font></th>\n    <th width=\"25%\">topic</th>\n<tr><td align=center>1</td>\n    <td>Describe an algorithm that, given <I>n</I> integers\nin the range 1 to <I>k</I>,\npreprocesses its input and then answers in <I>O</I>(1) time\nany query about how many of the <I>n</I> integers\nfall into a range [<I>a</I>...<I>b</I>].&nbsp;\nThe preprocessing phase must run in <I>O</I>(<I>n+k</I>) time.\n    </td>\n    <td>range query</td>\n<tr><td align=center>2</td>\n    <td>(Baase Exercise 5.22 on page 246)\n<BR>\n(a) You are given N keys and an integer K such that\n    1&nbsp;<U>&lt;</U>&nbsp;K&nbsp;<U>&lt;</U>&nbsp;N.\n    Give an efficient algorithm to find\n    <I>any one of</I> the K smallest keys.&nbsp;\n    How many key comparisons does your algorithm do?\n<BR>\n(b) Give a lower bound, as a function of N and K,\n    on the number of comparisons needed to solve this problem.\n    </td>\n    <td>lower bound on select</td>\n<tr><td align=center>3</td>\n    <td>\nLet <I>A</I> be an array of size <I>n</I> of integers,\nwhere <I>A</I>[1] &lt; <I>A</I>[2] &lt;\n<sup><sub><big>...</big></sub></sup> &lt; <I>A</I>[<I>n</I>].\n<BR>\n(Note that each entry may be a positive or negative integer.)\n<BR>\n<BR>(a)\nGive an algorithm that takes <I>O</I>(log <I>n</I>) time\nto find an <I>i</I> such that <I>A</I>[<I>i</I>]&nbsp;=&nbsp;<I>i</I>,\nprovided such an <I>i</I> exists.\nIf no such <I>i</I> exists, the algorithm returns 0.\n<BR>\n<BR>(b)\nProve that any algorithm to solve this problem using comparisons must take\ntime &Omega;(log <I>n</I>).\n    </td>\n    <td>search</td>\n</table>\n\n<P>\n\n<table border=1>\n<tr><th width=\"5%\">#</th>\n    <th width=\"70%\"><font color=\"#009900\">suggested problems</font>\n<!--              -- not to be turned in --></th>\n    <th width=\"25%\">topic</th>\n<tr><td align=center>4</td>\n    <td>Baase Exercise 5.3 on page 242</td>\n    <td>lower bound on maxmin</td>\n<tr><td align=center>5</td>\n    <td>Baase Exercise 4.46 on page 215</td>\n    <td>radix sort</td>\n<tr><td align=center>6</td>\n    <td>A file contains <I>n</I> bytes,\n        each consisting of <I>k</I> bits.&nbsp;\n        You must determine how many bits in the file are 1's.&nbsp;\n        The function <I>read()</I> returns the next byte from the file\n        and the function <I>eof()</I> returns TRUE iff there are no more\n        bytes to be read.&nbsp;\n        You may use normal arithmetic operations and the boolean\n        function <I>odd(x)</I>, which returns TRUE\n        iff <I>x</I> is not evenly divisible by two.\n        <OL type=a>\n        <LI> Give an algorithm (call it <I>A</I>) which solves this\n             problem using only <I>O</I>(1) space.&nbsp;\n             What is the time complexity of algorithm <I>A</I> as a\n             function of <I>n</I> and <I>k</I>?\n        <LI> Give an algorithm (call it <I>B</I>) which solves this\n             problem by building a table of the number of 1's in all\n             possible bytes.&nbsp;\n             What are the time and space complexities\n             of algorithm <I>B</I>?\n        <LI> Discuss the time-space tradeoffs between\n             algorithms <I>A</I> and <I>B</I> for\n             relative values of <I>n</I> and <I>k</I>.&nbsp;\n             When would you use (or not use) each?\n        </OL>\n    </td>\n    <td>time-space trade-off</td>\n<tr><td align=center>7<font color=blue>*</font></td>\n    <td>CLR Problem 8-2(e) on page 206\n      <BR>Suppose that we have an array of <I>n</I> data records to sort and that the\n        <I>n</I> records have keys in the range from 1 to <I>k</I>.\n        Show how to modify counting sort (see CLR pp.194-196)\n        so that it sorts the records in place in\n        <I>O</I>(<I>n</I>+<I>k</I>) time.\n        You may use <I>O</I>(<I>k</I>) storage outside the input array.\n        Is your algorithm stable?\n        (<I>Hint</I>: How would you do it for <I>k</I>=3?)\n       </td>\n    <td>in situ sort</td>\n<tr><td align=center>8<font color=blue>*</font></td>\n    <td>Design a procedure to rotate a vector of <I>n</I> elements\n        left (in place) by <I>p</I> positions using <I>O</I>(<I>n</I>)\n        time and only a constant amount of extra storage.\n        For instance, with <I>n</I> = 8 and <I>p</I> = 3,\n        the vector <tt>ABCDEFGH</tt> is rotated to be <tt>DEFGHABC</tt>.\n<BR>    Hint: First, devise a procedure to reverse the elements of\n        a subvector, and then find a series of reversals that will\n        result in the desired rotation.</td>\n    <td>&nbsp;</td>\n</table>\n\n\n\n<HR>\n<A HREF=\"http://www.ics.uci.edu/~dan\">\nDan Hirschberg </A> <BR>\n<ADDRESS>\nComputer Science Department<BR>\nUniversity of California, Irvine, CA 92697-3435\n</ADDRESS>\n<tt>dan at ics.uci.edu</tt><br>\n\nLast modified: Nov 10, 2014\n</BODY></HTML>\n", "id": 2058.0}