{"text": "Navigation Up Table of Contents Bibliography Index Title Page CGAL Vector d Kernel Definition An instance of data type Vector d Kernel is a vector of Euclidean space in dimension d A vector r r r d 1 can be represented in homogeneous coordinates h hd of number type RT such that ri hi hd which is of type FT We call the ri s the Cartesian coordinates of the vector The homogenizing coordinate hd is positive This data type is meant for use in computational geometry It realizes free vectors as opposed to position vectors type Point d The main difference between position vectors and free vectors is their behavior under affine transformations e g free vectors are invariant under translations Types Vector d Kernel RT the ring type Vector d Kernel FT the field type Vector d Kernel LA the linear algebra layer Vector d Kernel Cartesian const iterator a read only iterator for the Cartesian coordinates Vector d Kernel Homogeneous const iterator a read only iterator for the homogeneous coordinates Vector d Kernel Base vector construction tag Creation Vector d Kernel v introduces a variable v of type Vector d Kernel Vector d Kernel v int d Null vector introduces the zero vector v of type Vector d Kernel in d dimensional space For the creation flag CGAL NULL VECTOR can be used template class InputIterator Vector d Kernel v int d InputIterator first InputIterator last introduces a variable v of type Vector d Kernel in dimension d If size first last d this creates a vector with Cartesian coordinates set first last If size first last p 1 the range specifies the homogeneous coordinates H set first last h h1 hd where the sign chosen is the sign of hd Precondition d is nonnegative first last has d or d 1 elements where the last has to be non zero Requirement The value type of InputIterator is RT template class InputIterator Vector d Kernel v int d InputIterator first InputIterator last RT D introduces a variable v of type Vector d Kernel in dimension d initialized to the vector with homogeneous coordinates as defined by H set first last and D H H 1 H d 1 D The sign chosen is the sign of D Precondition D is non zero the iterator range defines a d tuple of RT Requirement The value type of InputIterator is RT Vector d Kernel v int d Base vector int i returns a variable v of type Vector d Kernel initialized to the i th base vector of dimension d Precondition i d Vector d Kernel v RT x RT y RT w 1 introduces a variable v of type Vector d Kernel in 2 dimensional space Precondition w Vector d Kernel v RT x RT y RT z RT w introduces a variable v of type Vector d Kernel in 3 dimensional space Precondition w Operations int v dimension returns the dimension of v FT v cartesian int i returns the i th Cartesian coordinate of v Precondition i d FT v int i returns the i th Cartesian coordinate of v Precondition i d RT v homogeneous int i returns the i th homogeneous coordinate of v Precondition i d FT v squared length returns the square of the length of v Cartesian const iterator v cartesian begin returns an iterator pointing to the zeroth Cartesian coordinate of v Cartesian const iterator v cartesian end returns an iterator pointing beyond the last Cartesian coordinate of v Homogeneous const iterator v homogeneous begin returns an iterator pointing to the zeroth homogeneous coordinate of v Homogeneous const iterator v homogeneous end returns an iterator pointing beyond the last homogeneous coordinate of v Direction d Kernel v direction returns the direction of v Vector d Kernel v transform Aff transformation d Kernel t returns t v Arithmetic Operators Tests and IO Vector d Kernel v RT n multiplies all Cartesian coordinates by n Vector d Kernel v FT r multiplies all Cartesian coordinates by r Vector d Kernel v RT n returns the vector with Cartesian coordinates vi n i d Vector d Kernel v FT r returns the vector with Cartesian coordinates vi r i d Vector d Kernel v RT n divides all Cartesian coordinates by n Vector d Kernel v FT r divides all Cartesian coordinates by r FT v w inner product i e i d vi wi where vi and wi are the Cartesian coordinates of v and w respectively Vector d Kernel v w returns the vector with Cartesian coordinates vi wi i d Vector d Kernel v w addition plus assignment Vector d Kernel v w returns the vector with Cartesian coordinates vi wi i d Vector d Kernel v w subtraction plus assignment Vector d Kernel v returns the vector in opposite direction bool v is zero returns true if v is the zero vector Downward compatibility We provide all operations of the lower dimensional interface x y z hx hy hz hw Vector d Kernel RT n v returns the vector with Cartesian coordinates n vi Vector d Kernel FT r v returns the vector with Cartesian coordinates r vi i d Implementation Vectors are implemented by arrays of variables of type RT All operations like creation initialization tests vector arithmetic input and output on a vector v take time O v dimension coordinate access dimension and conversions take constant time The space requirement of a vector is O v dimension Next Direction d Kernel Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Kernel_d_ref/Class_Vector_d.html", "title": "vector_d&lt;kernel&gt;", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Kernel_d_ref/Vector_d.tex' -->\n<html> <head>  \n<title>Vector_d&lt;Kernel&gt;</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_main.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_488\"></A>\n\n<A NAME=\"Cross_link_anchor_489\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_368\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Class.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_CGAL::Vector_d<Kernel>\"></A>\n<h2><I>CGAL::Vector_d&lt;Kernel&gt;</I></h2>\n<P>\n\n<H3>Definition</H3>\n<P>\n\nAn instance of data type <I><A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;</I> is a vector of Euclidean\nspace in dimension <MATH><I>d</I></MATH>. A vector <MATH><I>r = (r<SUB>0</SUB>,...,r<SUB> d - 1</SUB>)</I></MATH> can be\nrepresented in homogeneous coordinates <MATH><I>(h<SUB>0</SUB>,...,h<SUB>d</SUB>)</I></MATH> of number\ntype <I>RT</I>, such that <MATH><I>r<SUB>i</SUB> = h<SUB>i</SUB>/h<SUB>d</SUB></I></MATH> which is of type <I>FT</I>. We\ncall the <MATH><I>r<SUB>i</SUB></I></MATH>'s the <A HREF=\"../Kernel_23_ref/Class_Cartesian.html#Cross_link_anchor_6\">Cartesian</A> coordinates of the vector. The\nhomogenizing coordinate <MATH><I>h<SUB>d</SUB></I></MATH> is positive.\n<P>\n\nThis data type is meant for use in computational geometry. It realizes\nfree vectors as opposed to position vectors (type <I><A HREF=\"Class_Point_d.html#Cross_link_anchor_487\">Point_d</A></I>). The\nmain difference between position vectors and free vectors is their\nbehavior under affine transformations, e.g., free vectors are\ninvariant under translations.\n<P>\n\n<H3>Types</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;::RT\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    the ring type.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;::FT\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    the field type.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;::LA\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    the linear algebra layer.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;::Cartesian_const_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    a read-only iterator for the\n  <A HREF=\"../Kernel_23_ref/Class_Cartesian.html#Cross_link_anchor_6\">Cartesian</A> coordinates.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;::Homogeneous_const_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    a read-only iterator for the\n  homogeneous coordinates.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;::Base_vector\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    construction tag.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Creation</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; v;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    introduces a variable <I>v</I>\n  of type <I><A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;</I>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; v ( int d,  <A HREF=\"../Kernel_23_ref/Class_Null_vector.html#Cross_link_anchor_135\">Null_vector</A>);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    introduces the zero\n  vector <I>v</I> of type <I><A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;</I> in <MATH><I>d</I></MATH>-dimensional space.\n  For the creation flag <I><A HREF=\"../Kernel_23_ref/Constant_NULL_VECTOR.html#Cross_link_anchor_136\">CGAL::NULL_VECTOR</A></I> can be used.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    template &lt;class InputIterator&gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; v ( int d,  InputIterator first,  InputIterator last);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    introduces a variable\n  <I>v</I> of type <I><A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;</I> in dimension <I>d</I>.  If\n  <I>size [first,last) == d</I> this creates a vector with <A HREF=\"../Kernel_23_ref/Class_Cartesian.html#Cross_link_anchor_6\">Cartesian</A>\n  coordinates <I>set [first,last)</I>. If <I>size [first,last) ==     p+1</I> the range specifies the homogeneous coordinates <MATH><I><I>H = set     [first,last)</I> = ( &plusmn; h<SUB>0</SUB>,  &plusmn; h<SUB>1</SUB>, ...,  &plusmn; h<SUB>d</SUB>)</I></MATH> where the\n  <A HREF=\"../NumberTypeSupport_ref/Function_sign.html#Cross_link_anchor_1410\">sign</A> chosen is the <A HREF=\"../NumberTypeSupport_ref/Function_sign.html#Cross_link_anchor_1410\">sign</A> of <MATH><I>h<SUB>d</SUB></I></MATH>.<BR>\n\n<EM>Precondition: </EM><I>d</I> is\n  nonnegative, <I>[first,last)</I> has <I>d</I> or <I>d+1</I> elements\n  where the last has to be non-zero.<BR>\n\n<EM>Requirement: </EM>The value type of\n  <I>InputIterator</I> is <I>RT</I>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    template &lt;class InputIterator&gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; v ( int d,  InputIterator first,  InputIterator last,  RT D);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    introduces a\n  variable <I>v</I> of type <I><A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;</I> in dimension <I>d</I>\n  initialized to the vector with homogeneous coordinates as defined by\n  <I>H = set [first,last)</I> and <I>D</I>: <MATH><I>( &plusmn; <I>H[0]</I>,\n   &plusmn; <I>H[1]</I>, ...,  &plusmn; <I>H[d-1]</I>,  &plusmn; <I>D</I>)</I></MATH>. The <A HREF=\"../NumberTypeSupport_ref/Function_sign.html#Cross_link_anchor_1410\">sign</A>\n  chosen is the <A HREF=\"../NumberTypeSupport_ref/Function_sign.html#Cross_link_anchor_1410\">sign</A> of <MATH><I>D</I></MATH>.<BR>\n\n<EM>Precondition: </EM><I>D</I> is non-zero, the\n  iterator range defines a <MATH><I>d</I></MATH>-tuple of <I>RT</I>.<BR>\n\n<EM>Requirement: </EM>The value\n  type of <I>InputIterator</I> is <I>RT</I>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; v ( int d,  Base_vector,  int i);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    returns a\n  variable <I>v</I> of type <I><A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;</I> initialized to the <MATH><I>i</I></MATH>-th\n  base vector of dimension <MATH><I>d</I></MATH>.<BR>\n\n<EM>Precondition: </EM><MATH><I>0  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i &lt; d</I></MATH>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; v ( RT x,  RT y,  RT w = 1);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    introduces a\n  variable <I>v</I> of type <I><A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;</I> in <MATH><I>2</I></MATH>-dimensional space.<BR>\n\n<EM>Precondition: </EM><MATH><I>w  <IMG BORDER=0 WIDTH=11 HEIGHT=27 ALIGN=MIDDLE SRC=\"cc_neq.gif\"> 0</I></MATH>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; v ( RT x,  RT y,  RT z,  RT w);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    introduces a\n  variable <I>v</I> of type <I><A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;</I> in <MATH><I>3</I></MATH>-dimensional space.<BR>\n\n<EM>Precondition: </EM><MATH><I>w  <IMG BORDER=0 WIDTH=11 HEIGHT=27 ALIGN=MIDDLE SRC=\"cc_neq.gif\"> 0</I></MATH>.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Operations</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_int_dimension69_;\"></A>\nint\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    v.dimension ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the dimension of <I>v</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_FT_cartesian6int_i9_;\"></A>\nFT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    v.cartesian ( int i)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the <MATH><I>i</I></MATH>-th <A HREF=\"../Kernel_23_ref/Class_Cartesian.html#Cross_link_anchor_6\">Cartesian</A>\n  coordinate of <I>v</I>.<BR>\n\n<EM>Precondition: </EM><MATH><I>0  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i &lt; d</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    FT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     v [ int i]<A NAME=\"Function_FT_operator696int_i9_;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the <MATH><I>i</I></MATH>-th <A HREF=\"../Kernel_23_ref/Class_Cartesian.html#Cross_link_anchor_6\">Cartesian</A>\n  coordinate of <I>v</I>.<BR>\n\n<EM>Precondition: </EM><MATH><I>0  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i &lt; d</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_RT_homogeneous6int_i9_;\"></A>\nRT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    v.homogeneous ( int i)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the <MATH><I>i</I></MATH>-th homogeneous\n  coordinate of <I>v</I>.<BR>\n\n<EM>Precondition: </EM><MATH><I>0  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> d</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_FT_squared_length69_;\"></A>\nFT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    v.squared_length ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the <A HREF=\"../NumberTypeSupport_ref/Function_square.html#Cross_link_anchor_1418\">square</A> of the length of\n  <I>v</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Cartesian_const_iterator_cartesian_begin69_;\"></A>\nCartesian_const_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    v.cartesian_begin ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns an\n  iterator pointing to the zeroth <A HREF=\"../Kernel_23_ref/Class_Cartesian.html#Cross_link_anchor_6\">Cartesian</A> coordinate of <I>v</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Cartesian_const_iterator_cartesian_end69_;\"></A>\nCartesian_const_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    v.cartesian_end ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns an\n  iterator pointing beyond the last <A HREF=\"../Kernel_23_ref/Class_Cartesian.html#Cross_link_anchor_6\">Cartesian</A> coordinate of <I>v</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Homogeneous_const_iterator_homogeneous_begin69_;\"></A>\nHomogeneous_const_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    v.homogeneous_begin ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns an\n  iterator pointing to the zeroth homogeneous coordinate of <I>v</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Homogeneous_const_iterator_homogeneous_end69_;\"></A>\nHomogeneous_const_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    v.homogeneous_end ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns an\n  iterator pointing beyond the last homogeneous coordinate of <I>v</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Direction_d6Kernel9_direction69_;\"></A>\n<A HREF=\"Class_Direction_d.html#Cross_link_anchor_491\">Direction_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    v.direction ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the direction of\n  <I>v</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Vector_d6Kernel9_transform6const_Aff_transformation_d6Kernel9__t9_;\"></A>\n<A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    v.transform (  <A HREF=\"Class_Aff_transformation_d.html#Cross_link_anchor_505\">Aff_transformation_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; t)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns <MATH><I>t(v)</I></MATH>.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Arithmetic Operators, Tests and IO</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     v *=  RT n<A NAME=\"Function_Vector_d6Kernel9__operator*=6const_RT__n9_;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    multiplies all\n  <A HREF=\"../Kernel_23_ref/Class_Cartesian.html#Cross_link_anchor_6\">Cartesian</A> coordinates by <I>n</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     v *=  FT r<A NAME=\"Function_Vector_d6Kernel9__operator*=6const_FT__r9_;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    multiplies all\n  <A HREF=\"../Kernel_23_ref/Class_Cartesian.html#Cross_link_anchor_6\">Cartesian</A> coordinates by <I>r</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     v /  RT n<A NAME=\"Function_Vector_d6Kernel9_operator/6const_RT__n9_;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the vector\n  with <A HREF=\"../Kernel_23_ref/Class_Cartesian.html#Cross_link_anchor_6\">Cartesian</A> coordinates <MATH><I>v<SUB>i</SUB>/n, 0  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i &lt; d</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     v /  FT r<A NAME=\"Function_Vector_d6Kernel9_operator/6const_FT__r9_;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the vector\n  with <A HREF=\"../Kernel_23_ref/Class_Cartesian.html#Cross_link_anchor_6\">Cartesian</A> coordinates <MATH><I>v<SUB>i</SUB>/r, 0  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i &lt; d</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     v /=  RT n<A NAME=\"Function_Vector_d6Kernel9__operator/=6const_RT__n9_;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    divides all\n  <A HREF=\"../Kernel_23_ref/Class_Cartesian.html#Cross_link_anchor_6\">Cartesian</A> coordinates by <I>n</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     v /=  FT r<A NAME=\"Function_Vector_d6Kernel9__operator/=6const_FT__r9_;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    divides all\n  <A HREF=\"../Kernel_23_ref/Class_Cartesian.html#Cross_link_anchor_6\">Cartesian</A> coordinates by <I>r</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    FT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     v *  w<A NAME=\"Function_FT_operator*_6const_Vector_d6Kernel9__w9_;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    inner product, i.e.,\n  <MATH><I> <IMG BORDER=0 WIDTH=13 HEIGHT=24 ALIGN=MIDDLE SRC=\"cc_sum.gif\"> <SUB> 0  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i &lt; d </SUB> v<SUB>i</SUB> w<SUB>i</SUB></I></MATH>, where <MATH><I>v<SUB>i</SUB></I></MATH> and <MATH><I>w<SUB>i</SUB></I></MATH> are the\n  <A HREF=\"../Kernel_23_ref/Class_Cartesian.html#Cross_link_anchor_6\">Cartesian</A> coordinates of <MATH><I>v</I></MATH> and <MATH><I>w</I></MATH> respectively.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     v +  w<A NAME=\"Function_Vector_d6Kernel9_operator+6const_Vector_d6Kernel9__w9_;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the\n  vector with <A HREF=\"../Kernel_23_ref/Class_Cartesian.html#Cross_link_anchor_6\">Cartesian</A> coordinates <MATH><I>v<SUB>i</SUB>+w<SUB>i</SUB>, 0  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i &lt; d</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     v +=  w<A NAME=\"Function_Vector_d6Kernel9__operator+=6const_Vector_d6Kernel9__w9_;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    addition\n  plus assignment.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     v -  w<A NAME=\"Function_Vector_d6Kernel9_operator-6const_Vector_d6Kernel9__w9_;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the\n  vector with <A HREF=\"../Kernel_23_ref/Class_Cartesian.html#Cross_link_anchor_6\">Cartesian</A> coordinates <MATH><I>v<SUB>i</SUB>-w<SUB>i</SUB>, 0  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i &lt; d</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     v -=  w<A NAME=\"Function_Vector_d6Kernel9__operator-=6const_Vector_d6Kernel9__w9_;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    subtraction\n  plus assignment.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    - v  <A NAME=\"Function_Vector_d6Kernel9_operator-69_;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the vector in <A HREF=\"../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243\">opposite</A>\n  direction.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_is_zero69_;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    v.<A HREF=\"../NumberTypeSupport_ref/Function_is_zero.html#Cross_link_anchor_1376\">is_zero</A> ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns true if <I>v</I> is the zero\n  vector.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Downward compatibility</H3> We provide all operations of the\nlower dimensional interface <I>x()</I>, <I>y()</I>, <I>z()</I>,\n<I>hx()</I>, <I>hy()</I>, <I>hz()</I>, <I>hw()</I>.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n      RT n *  v<A NAME=\"Function_Vector_d6Kernel9_operator*6const_RT__n+_const_Vector_d6Kernel9__v9_;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the vector with <A HREF=\"../Kernel_23_ref/Class_Cartesian.html#Cross_link_anchor_6\">Cartesian</A> coordinates <MATH><I>n v<SUB>i</SUB></I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n      FT r *  v<A NAME=\"Function_Vector_d6Kernel9_operator*6const_FT__r+_const_Vector_d6Kernel9__v9_;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the vector with <A HREF=\"../Kernel_23_ref/Class_Cartesian.html#Cross_link_anchor_6\">Cartesian</A> coordinates <MATH><I>r v<SUB>i</SUB>, 0  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i &lt;\n  d</I></MATH>.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Implementation</H3>\n<P>\n\nVectors are implemented by arrays of variables of type <I>RT</I>.  All\noperations like creation, initialization, tests, vector arithmetic,\ninput and output on a vector <MATH><I>v</I></MATH> take time <MATH><I>O(<I>v.dimension()</I>)</I></MATH>.\ncoordinate access, <I>dimension()</I> and conversions take constant\ntime.  The space requirement of a vector is <MATH><I>O(<I>v.dimension()</I>)</I></MATH>.\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Class_Direction_d.html\"><I>Direction_d&lt;Kernel&gt;</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_5!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 37894.0}