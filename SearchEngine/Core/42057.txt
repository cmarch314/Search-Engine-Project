{"text": "Navigation Up Table of Contents Bibliography Index Title Page PlanarMapTraits 2 DefinitionA model of the PlanarMapTraits 2 concept aggregates the geometric types and primitive operations used by the Planar map 2 PlanarMapDcel 2 PlanarMapTraits 2 data structure It must provide the types and operations listed below Types The geometric types defined below must have a default constructor copy constructor assignment operator and operator PlanarMapTraits 2 X monotone curve 2 A type that holds an x monotone curve in the plane PlanarMapTraits 2 Point 2 A type that holds the position of a vertex in the plane The type of the end points of X monotone curve 2 curves Categories The following categories declare the implementation of the method curves compare y at x left If the category Has left category is Tag true the method is required specifically Otherwise if the category Has reflect category is Tag true the method curves compare y at x left is implemented using the required methods point reflect in x and y and curve reflect in x and y If none of the categories is Tag true a default implementation is used that does not require any of the above methods PlanarMapTraits 2 Has left category A boolean category that indicates whether the method curves compare y at x left is required It must be either Tag true or Tag false PlanarMapTraits 2 Has reflect category A boolean category that indicates whether the methods point reflect in x and y and curve reflect in x and y are required It must be either Tag true or Tag false Enumerations enum Comparison result SMALLER EQUAL LARGER a constant describing the relative position between objects Creation PlanarMapTraits 2 pm traits A default constructor OperationsThe following methods that have a curve parameter of type X monotone curve 2 have the implicit precondition that requires the curve to be x monotone Comparison result pm traits compare x Point 2 p Point 2 p1 compares the x coordinates of p and p1 Returns LARGER if x p x p1 SMALLER if x p x p1 EQUAL otherwise Comparison result pm traits compare xy Point 2 p Point 2 p1 compares the two points p and p1 lexigoraphically First the x coordinates are compared In case of a tie the y coordinates are compared Returns LARGER if x p1 x p2 or if x p1 x p2 and y p1 y p2 SMALLER if x p1 x p2 or if x p1 x p2 and y p1 y p2 EQUAL otherwise bool pm traits curve is vertical X monotone curve 2 cv returns true if cv is a vertical segment false otherwise bool pm traits point in x range X monotone curve 2 cv Point 2 pnt returns true if pnt is in the x range of cv false otherwise Comparison result pm traits curves compare y at x X monotone curve 2 cv1 X monotone curve 2 cv2 Point 2 pnt compares the y coordinate of cv1 and cv2 at the x coordinate of pnt Returns LARGER if cv1 x q cv2 x q SMALLER if cv1 x q cv2 x q EQUAL otherwise Precondition cv1 and cv2 are defined at pnt s x coordinate Comparison result pm traits curves compare y at x right X monotone curve 2 cv1 X monotone curve 2 cv2 Point 2 pnt compares the y coordinate of cv1 and cv2 immediately to the right of the x coordinate of pnt Precondition cv1 and cv2 meet at pnt x coordinate Precondition cv1 and cv2 are defined lexigoraphically to the right of pnt s x coordinate Comparison result pm traits curves compare y at x left X monotone curve 2 cv1 X monotone curve 2 cv2 Point 2 pnt compares the y coordinate of cv1 and cv2 immediately to the left of the x coordinate of pnt This predicate is not required for the aggregate insertion of curves into the planar map Recall that the aggregate insertion is based on a sweep line algorithm Precondition cv1 and cv2 meet at pnt x coordinate Precondition cv1 and cv2 are defined lexigoraphically to the left of pnt s x coordinate Point 2 pm traits point reflect in x and y Point 2 pt returns the reflection of the point pt about the origin For example the reflection of the point 2 2 is the point as 2 2 This predicate is not required for the aggregate insertion of curves into the planar map or if the method curves compare y at x left is provided and the Has left category category is Tag true X monotone curve 2 pm traits curve reflect in x and y X monotone curve 2 cv returns the reflection of the curve cv about the origin For example the reflection of the line segment 2 2 3 3 is 2 2 3 3 This predicate is not required for the aggregate insertion of curves into the planar map or if the method curves compare y at x left is provided and the Has left category category is Tag true Comparison result pm traits curve compare y at x Point 2 pnt X monotone curve 2 cv compares the y coordinates of pnt and the vertical projection of pnt on cv Returns SMALLER if y pnt cv x pnt LARGER if y pnt cv x pnt EQUAL otherwise pnt is on the curve Precondition cv is defined at pnt s x coordinate bool pm traits curve equal X monotone curve 2 cv1 X monotone curve 2 cv2 returns true if cv1 and cv2 have the same graph false otherwise bool pm traits point equal Point 2 p1 Point 2 p2 returns true if p1 is the same as p2 false otherwise Point 2 pm traits curve source X monotone curve 2 cv returns the source of cv Point 2 pm traits curve target X monotone curve 2 cv returns the target of cv Has ModelsPm segment traits 2 Kernel The PlanarMapWithIntersectionsTraits 2 and ArrangementTraits 2 concepts are refinements of the PlanarMapTraits 2 concept in other words a model of the formers is a model of the latter Thus all supplied or user written arrangement traits classes can be passed as the Traits template parameter when instantiating an object of type Planar map 2 Dcel Traits See the list of the arrangement traits classes in chapter Arrangement Next Pm segment traits 2 Kernel Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Planar_map_ref/Concept_PlanarMapTraits_2", "title": "planarmaptraits_2", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Planar_map_ref/Planar_map_traits.tex' -->\n<html> <head>  \n<title>PlanarMapTraits_2</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_800\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_802\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Concept.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_PlanarMapTraits_2\"></A>\n<h2><I>PlanarMapTraits_2</I></h2>\n\n\n<A NAME=\"PM_sec:req:interface\"></A>\n<P>\n\n<H3>Definition</H3>A model of the <I><A HREF=\"Concept_PlanarMapTraits_2.html#Cross_link_anchor_800\">PlanarMapTraits_2</A></I> concept aggregates the geometric types and\nprimitive operations used by the \n<I><A HREF=\"Class_Planar_map_2.html#Cross_link_anchor_787\">Planar_map_2</A>&lt;<A HREF=\"Concept_PlanarMapDcel_2.html#Cross_link_anchor_795\">PlanarMapDcel_2</A>,<A HREF=\"Concept_PlanarMapTraits_2.html#Cross_link_anchor_800\">PlanarMapTraits_2</A>&gt;</I> data structure.\nIt must provide the types and operations listed below.\n<P>\n\n<H3>Types</H3>\n<P>\n\nThe geometric types defined below must have a default constructor,\ncopy constructor, assignment operator and <I>operator==</I>.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_PlanarMapTraits_2.html#Cross_link_anchor_800\">PlanarMapTraits_2</A>::X_monotone_curve_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    A type that holds an <MATH><I>x</I></MATH>-monotone curve in\n  the plane.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_PlanarMapTraits_2.html#Cross_link_anchor_800\">PlanarMapTraits_2</A>::<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    A type that holds the position of a vertex in\n  the plane. The type of the end points of <I>X_monotone_curve_2</I> curves.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Categories</H3>\n<P>\n\nThe following categories declare the implementation of the method \n<I>curves_compare_y_at_x_left()</I>. If the category  <I>Has_left_category</I>\nis <I><A HREF=\"../Kernel_23_ref/Class_Tag_true.html#Cross_link_anchor_478\">Tag_true</A></I> the method is required specifically. Otherwise, if \nthe category  <I>Has_reflect_category</I> is <I><A HREF=\"../Kernel_23_ref/Class_Tag_true.html#Cross_link_anchor_478\">Tag_true</A></I> the method \n<I>curves_compare_y_at_x_left()</I> is implemented using the required \nmethods <I>point_reflect_in_x_and_y()</I> and <I>curve_reflect_in_x_and_y()</I>.\nIf none of the categories is <I><A HREF=\"../Kernel_23_ref/Class_Tag_true.html#Cross_link_anchor_478\">Tag_true</A></I>, a default implementation is used, \nthat does not require any of the above methods.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_PlanarMapTraits_2.html#Cross_link_anchor_800\">PlanarMapTraits_2</A>::Has_left_category\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    A boolean category that indicates\n  whether the method <I>curves_compare_y_at_x_left()</I> is required.\n  It must be either <I><A HREF=\"../Kernel_23_ref/Class_Tag_true.html#Cross_link_anchor_478\">Tag_true</A></I> or <I><A HREF=\"../Kernel_23_ref/Class_Tag_false.html#Cross_link_anchor_476\">Tag_false</A></I>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_PlanarMapTraits_2.html#Cross_link_anchor_800\">PlanarMapTraits_2</A>::Has_reflect_category\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    A boolean category that indicates\n  whether the methods <I>point_reflect_in_x_and_y()</I> and\n  <I>curve_reflect_in_x_and_y()</I> are required. It must be either\n  <I><A HREF=\"../Kernel_23_ref/Class_Tag_true.html#Cross_link_anchor_478\">Tag_true</A></I> or <I><A HREF=\"../Kernel_23_ref/Class_Tag_false.html#Cross_link_anchor_476\">Tag_false</A></I>.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Enumerations</H3>\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A NAME=\"Function_Comparison_result\"></A>\n<A NAME=\"Enum_Comparison_result\"></A>\n<A HREF=\"../Polyhedron_ref/Class_Polyhedron_incremental_builder_3#Enum_enum\">enum</A> <A HREF=\"Concept_PlanarMapTraits_2#Enum_Comparison_result\">Comparison_result</A> { <A HREF=\"Concept_PlanarMapTraits_2#Enum_Comparison_result\">SMALLER</A><A NAME=\"Function_Comparison_result\"></A>\n, <A HREF=\"Concept_PlanarMapTraits_2#Enum_Comparison_result\">EQUAL</A><A NAME=\"Function_Comparison_result\"></A>\n, <A HREF=\"Concept_PlanarMapTraits_2#Enum_Comparison_result\">LARGER</A><A NAME=\"Function_Comparison_result\"></A>\n};\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    a constant describing the relative position between objects.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Creation</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_PlanarMapTraits_2.html#Cross_link_anchor_800\">PlanarMapTraits_2</A> pm_traits;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    A default constructor.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Operations</H3>The following methods that have a curve parameter of type\n<I>X_monotone_curve_2</I> have the implicit precondition that requires the\ncurve to be <MATH><I>x</I></MATH>-monotone.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Comparison_result_compare_x6const_Point_2__p0+_const_Point_2__p19;\"></A>\n<A HREF=\"Concept_PlanarMapTraits_2#Enum_Comparison_result\">Comparison_result</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    pm_traits.<A HREF=\"../Kernel_23_ref/Function_compare_x.html#Cross_link_anchor_181\">compare_x</A> (  <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p0,  <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p1)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    compares the <I>x</I>-coordinates of <MATH><I>p0</I></MATH> and <MATH><I>p1</I></MATH>.  Returns\n          <I><A HREF=\"Concept_PlanarMapTraits_2#Enum_Comparison_result\">LARGER</A></I> if <MATH><I>x(p0) &gt; x(p1)</I></MATH>; <I><A HREF=\"Concept_PlanarMapTraits_2#Enum_Comparison_result\">SMALLER</A></I> if\n\t  <MATH><I>x(p0) &lt; x(p1)</I></MATH>; <I><A HREF=\"Concept_PlanarMapTraits_2#Enum_Comparison_result\">EQUAL</A></I> otherwise.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Comparison_result_compare_xy6const_Point_2__p0+_const_Point_2__p19;\"></A>\n<A HREF=\"Concept_PlanarMapTraits_2#Enum_Comparison_result\">Comparison_result</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    pm_traits.<A HREF=\"../Kernel_23_ref/Function_compare_xy.html#Cross_link_anchor_183\">compare_xy</A> (  <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p0,  <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p1)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    compares the two points <MATH><I>p0</I></MATH> and <MATH><I>p1</I></MATH> lexigoraphically. First the\n\t   <MATH><I>x</I></MATH>-coordinates are compared. In case of a tie, the <MATH><I>y</I></MATH>-coordinates\n\t   are compared. Returns <I><A HREF=\"Concept_PlanarMapTraits_2#Enum_Comparison_result\">LARGER</A></I> if <MATH><I>x(p1) &gt; x(p2)</I></MATH>, or if\n\t   <MATH><I>x(p1) = x(p2)</I></MATH> and <MATH><I>y(p1) &gt; y(p2)</I></MATH>;\n\t   <I><A HREF=\"Concept_PlanarMapTraits_2#Enum_Comparison_result\">SMALLER</A></I> if <MATH><I>x(p1) &lt; x(p2)</I></MATH>, or if <MATH><I>x(p1) = x(p2)</I></MATH> and\n\t   <MATH><I>y(p1) &lt; y(p2)</I></MATH>;\n\t   <I><A HREF=\"Concept_PlanarMapTraits_2#Enum_Comparison_result\">EQUAL</A></I> otherwise.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_curve_is_vertical6const_X_monotone_curve_2__cv9;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    pm_traits.curve_is_vertical (  X_monotone_curve_2 cv)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns <I>true</I> if <I>cv</I> is a vertical segment, \n          <I>false</I> otherwise.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_point_in_x_range6const_X_monotone_curve_2__cv+_const_Point_2__pnt_9;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    pm_traits.point_in_x_range ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n     X_monotone_curve_2 cv,<BR>\n\n<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> pnt)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns <I>true</I> if <I>pnt</I> is in the <MATH><I>x</I></MATH> range of\n          <I>cv</I>, <I>false</I> otherwise.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Comparison_result_curves_compare_y_at_x6const_X_monotone_curve_2__cv1+_const_X_monotone_curve_2__cv2+_const_Point_2__pnt_9;\"></A>\n<A HREF=\"Concept_PlanarMapTraits_2#Enum_Comparison_result\">Comparison_result</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    pm_traits.curves_compare_y_at_x ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n     X_monotone_curve_2 cv1,<BR>\n\nX_monotone_curve_2 cv2,<BR>\n\n<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> pnt)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    compares the <MATH><I>y</I></MATH>-coordinate of <MATH><I>cv1</I></MATH> and <MATH><I>cv2</I></MATH> at the <MATH><I>x</I></MATH>-coordinate \n          of <MATH><I>pnt</I></MATH>. Returns <I><A HREF=\"Concept_PlanarMapTraits_2#Enum_Comparison_result\">LARGER</A></I> if <MATH><I>cv1(x(q)) &gt; cv2(x(q))</I></MATH>;\n          <I><A HREF=\"Concept_PlanarMapTraits_2#Enum_Comparison_result\">SMALLER</A></I> if <MATH><I>cv1(x(q)) &lt; cv2(x(q))</I></MATH>; <I><A HREF=\"Concept_PlanarMapTraits_2#Enum_Comparison_result\">EQUAL</A></I>\n\t  otherwise.<BR>\n\n<EM>Precondition: </EM><MATH><I>cv1</I></MATH> and <MATH><I>cv2</I></MATH> are defined at <MATH><I>pnt</I></MATH>'s <MATH><I>x</I></MATH>-coordinate.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Comparison_result_curves_compare_y_at_x_right6const_X_monotone_curve_2__cv1+_const_X_monotone_curve_2__cv2+_const_Point_2__pnt9;\"></A>\n<A HREF=\"Concept_PlanarMapTraits_2#Enum_Comparison_result\">Comparison_result</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    pm_traits.curves_compare_y_at_x_right ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n     X_monotone_curve_2 cv1,<BR>\n\nX_monotone_curve_2 cv2,<BR>\n\n<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> pnt)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    compares the <MATH><I>y</I></MATH>-coordinate of <MATH><I>cv1</I></MATH> and <MATH><I>cv2</I></MATH> immediately to the\n\t   right of the <MATH><I>x</I></MATH>-coordinate of <MATH><I>pnt</I></MATH>.<BR>\n\n<EM>Precondition: </EM><MATH><I>cv1</I></MATH> and <MATH><I>cv2</I></MATH> meet at <MATH><I>pnt</I></MATH> <MATH><I>x</I></MATH>-coordinate.<BR>\n\n<EM>Precondition: </EM><MATH><I>cv1</I></MATH> and <MATH><I>cv2</I></MATH> are defined lexigoraphically to\n           the right of <MATH><I>pnt</I></MATH>'s <MATH><I>x</I></MATH>-coordinate.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Comparison_result_curves_compare_y_at_x_left6const_X_monotone_curve_2__cv1+_const_X_monotone_curve_2__cv2+_const_Point_2__pnt9;\"></A>\n<A HREF=\"Concept_PlanarMapTraits_2#Enum_Comparison_result\">Comparison_result</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    pm_traits.curves_compare_y_at_x_left ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n     X_monotone_curve_2 cv1,<BR>\n\nX_monotone_curve_2 cv2,<BR>\n\n<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> pnt)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    compares the <MATH><I>y</I></MATH>-coordinate of <MATH><I>cv1</I></MATH> and <MATH><I>cv2</I></MATH> immediately to the\n           left of the <MATH><I>x</I></MATH>-coordinate of <MATH><I>pnt</I></MATH>. This predicate is not\n\t   required for the aggregate insertion of curves into the planar map.\n\t   Recall, that the aggregate insertion is based on a sweep-line\n\t   algorithm.<BR>\n\n<EM>Precondition: </EM><MATH><I>cv1</I></MATH> and <MATH><I>cv2</I></MATH> meet at <MATH><I>pnt</I></MATH> <MATH><I>x</I></MATH>-coordinate.<BR>\n\n<EM>Precondition: </EM><MATH><I>cv1</I></MATH> and <MATH><I>cv2</I></MATH> are defined lexigoraphically to\n           the left of <MATH><I>pnt</I></MATH>'s <MATH><I>x</I></MATH>-coordinate.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Point_2_point_reflect_in_x_and_y6const_Point_2__pt9;\"></A>\n<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    pm_traits.point_reflect_in_x_and_y (  <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> pt)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the reflection of the point <I>pt</I> about the origin\n\t   For example, the reflection of the point <MATH><I>(2,2)</I></MATH> is the point as\n\t   <MATH><I>(-2,-2)</I></MATH>. This predicate is not required for the aggregate\n\t   insertion of curves into the planar map, or if the method\n\t   <I>curves_compare_y_at_x_left()</I> is provided and\n\t   the <I>Has_left_category</I> category is <I><A HREF=\"../Kernel_23_ref/Class_Tag_true.html#Cross_link_anchor_478\">Tag_true</A></I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_X_monotone_curve_2_curve_reflect_in_x_and_y6const_X_monotone_curve_2__cv9;\"></A>\nX_monotone_curve_2\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    pm_traits.curve_reflect_in_x_and_y ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n     X_monotone_curve_2 cv)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the reflection of the curve <I>cv</I> about the origin.\n          For example, the reflection of the line segment <MATH><I>((2,2),(3,3))</I></MATH>\n\t  is <MATH><I>((-2,-2),(-3,-3))</I></MATH>. This predicate is not required for the\n\t  aggregate insertion of curves into the planar map, or if the method\n\t  <I>curves_compare_y_at_x_left()</I> is provided and the\n\t  <I>Has_left_category</I> category is <I><A HREF=\"../Kernel_23_ref/Class_Tag_true.html#Cross_link_anchor_478\">Tag_true</A></I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Comparison_result_curve_compare_y_at_x6const_Point_2___pnt+_const_X_monotone_curve_2___cv9;\"></A>\n<A HREF=\"Concept_PlanarMapTraits_2#Enum_Comparison_result\">Comparison_result</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    pm_traits.curve_compare_y_at_x ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n     <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> pnt,<BR>\n\nX_monotone_curve_2 cv)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    compares the <MATH><I>y</I></MATH>-coordinates of <MATH><I>pnt</I></MATH> and the vertical projection of\n\t   <MATH><I>pnt</I></MATH> on <MATH><I>cv</I></MATH>. Returns <I><A HREF=\"Concept_PlanarMapTraits_2#Enum_Comparison_result\">SMALLER</A></I> if <MATH><I>y(pnt) &lt; cv(x(pnt))</I></MATH>;\n\t   <I><A HREF=\"Concept_PlanarMapTraits_2#Enum_Comparison_result\">LARGER</A></I> if <MATH><I>y(pnt) &gt; cv(x(pnt))</I></MATH>;\n\t   <I><A HREF=\"Concept_PlanarMapTraits_2#Enum_Comparison_result\">EQUAL</A></I> otherwise (<MATH><I>pnt</I></MATH> is on the curve).<BR>\n\n<EM>Precondition: </EM><MATH><I>cv</I></MATH> is defined at <MATH><I>pnt</I></MATH>'s <MATH><I>x</I></MATH>-coordinate.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_curve_equal6const_X_monotone_curve_2___cv1+_const_X_monotone_curve_2___cv29;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    pm_traits.curve_equal ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n     X_monotone_curve_2 cv1,<BR>\n\nX_monotone_curve_2 cv2)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns <I>true</I> if <I>cv1</I> and <I>cv2</I> have the same graph, \n           <I>false</I> otherwise.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_point_equal6const_Point_2___p1+_const_Point_2___p29;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    pm_traits.point_equal (  <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p1,  <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p2)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns <I>true</I> if <I>p1</I> is the same as <I>p2</I>, <I>false</I>\n           otherwise.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Point_2_curve_source6const_X_monotone_curve_2__cv9;\"></A>\n<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    pm_traits.curve_source (  X_monotone_curve_2 cv)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the source of <I>cv</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Point_2_curve_target6const_X_monotone_curve_2__cv9;\"></A>\n<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    pm_traits.curve_target (  X_monotone_curve_2 cv)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the target of <I>cv</I>.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Has Models</H3><I><A HREF=\"Class_Pm_segment_traits_2.html#Cross_link_anchor_802\">Pm_segment_traits_2</A>&lt;<A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;</I>\n<P>\n\nThe <I><A HREF=\"../Pm_with_intersections_2_ref/Concept_PlanarMapWithIntersectionsTraits_2.html#Cross_link_anchor_818\">PlanarMapWithIntersectionsTraits_2</A></I> and\n<I><A HREF=\"../Arrangement_2_ref/Concept_ArrangementTraits_2.html#Cross_link_anchor_835\">ArrangementTraits_2</A></I> concepts are refinements of the\n<I><A HREF=\"Concept_PlanarMapTraits_2.html#Cross_link_anchor_800\">PlanarMapTraits_2</A></I> concept, in other words, a model of the\nformers is a model of the latter.  Thus, all\nsupplied (or user written ) arrangement traits classes can be passed\nas the <I>Traits</I> template parameter when instantiating an object of\ntype <I><A HREF=\"Class_Planar_map_2.html#Cross_link_anchor_787\">Planar_map_2</A>&lt;Dcel,Traits&gt;</I>.  See the list of the arrangement\ntraits classes in chapter &nbsp;<A HREF=\"../Arrangement_2/Chapter_main.html#I1_ChapterArrangement_2\"><IMG SRC=\"cc_ref_up_arrow.gif\" ALT=\"reference\" WIDTH=\"10\" HEIGHT=\"10\"></A>,\n<I>Arrangement</I>.\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Class_Pm_segment_traits_2.html\"><I>Pm_segment_traits_2&lt;Kernel&gt;</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_20!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 42057.0}