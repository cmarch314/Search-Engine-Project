{"text": "Main Page Modules Data Structures File List Data Fields Globals Related Pages vpbe hGo to the documentation of this file 1 53 ifndef VPBE H 54 define VPBE H 55 56 Generic headers 57 include maloc maloc h 58 include apbs vhal h 59 6 Specific headers 61 include apbs vunit h 62 include apbs vatom h 63 include apbs vacc h 64 include apbs vclist h 65 71 struct sVpbe 72 73 Vmem vmem 75 Valist alist 76 Vclist clist 77 Vacc acc 79 double T 8 double gamma 81 double soluteDiel 82 double solventDiel 83 double solventRadius 87 double bulkIonicStrength 88 double maxIonRadius 91 int numIon 92 double ionConc MAXION 93 double ionRadii MAXION 94 double ionQ MAXION 96 double xkappa 97 double deblen 98 double zkappa2 99 double zmagic 1 1 double soluteCenter 3 1 2 double soluteRadius 1 3 double soluteXlen 1 4 double soluteYlen 1 5 double soluteZlen 1 6 double soluteCharge 1 8 int paramFlag 11 111 116 typedef struct sVpbe Vpbe 117 118 119 Class Vpbe Inlineable methods vpbe c 121 122 if defined VINLINE VPBE 123 13 Valist Vpbe getValist Vpbe thee 131 138 Vacc Vpbe getVacc Vpbe thee 139 146 double Vpbe getBulkIonicStrength Vpbe thee 147 154 double Vpbe getMaxIonRadius Vpbe thee 155 162 double Vpbe getTemperature Vpbe thee 163 17 double Vpbe getSoluteDiel Vpbe thee 171 178 double Vpbe getGamma Vpbe thee 179 186 double Vpbe getSoluteRadius Vpbe thee 187 194 double Vpbe getSoluteXlen Vpbe thee 195 2 2 double Vpbe getSoluteYlen Vpbe thee 2 3 21 double Vpbe getSoluteZlen Vpbe thee 211 218 double Vpbe getSoluteCenter Vpbe thee 219 226 double Vpbe getSoluteCharge Vpbe thee 227 234 double Vpbe getSolventDiel Vpbe thee 235 242 double Vpbe getSolventRadius Vpbe thee 243 25 double Vpbe getXkappa Vpbe thee 251 258 double Vpbe getDeblen Vpbe thee 259 266 double Vpbe getZkappa2 Vpbe thee 267 274 double Vpbe getZmagic Vpbe thee 275 276 else if defined VINLINE VPBE 277 define Vpbe getValist thee thee alist 278 define Vpbe getVacc thee thee acc 279 define Vpbe getBulkIonicStrength thee thee bulkIonicStrength 28 define Vpbe getTemperature thee thee T 281 define Vpbe getSoluteDiel thee thee soluteDiel 282 define Vpbe getGamma thee thee gamma 283 define Vpbe getSoluteCenter thee thee soluteCenter 284 define Vpbe getSoluteRadius thee thee soluteRadius 285 define Vpbe getSoluteXlen thee thee soluteXlen 286 define Vpbe getSoluteYlen thee thee soluteYlen 287 define Vpbe getSoluteZlen thee thee soluteZlen 288 define Vpbe getSoluteCharge thee thee soluteCharge 289 define Vpbe getSolventDiel thee thee solventDiel 29 define Vpbe getSolventRadius thee thee solventRadius 291 define Vpbe getMaxIonRadius thee thee maxIonRadius 292 define Vpbe getXkappa thee thee xkappa 293 define Vpbe getDeblen thee thee deblen 294 define Vpbe getZkappa2 thee thee zkappa2 295 define Vpbe getZmagic thee thee zmagic 296 endif if defined VINLINE VPBE 297 298 299 Class Vpbe Non Inlineable methods vpbe c 3 1 335 Vpbe Vpbe ctor Valist alist int ionNum double ionConc 336 double ionRadii double ionQ double T double gamma 337 double soluteDiel double solventDiel 338 double solventRadius int focusFlag double sdens 339 373 int Vpbe ctor2 Vpbe thee Valist alist int ionNum 374 double ionConc double ionRadii double ionQ 375 double T double gamma double soluteDiel 376 double solventDiel double solventRadius int focusFlag 377 double sdens 378 389 int Vpbe getIons Vpbe thee int nion double ionConc MAXION 39 double ionRadii MAXION double ionQ MAXION 391 397 void Vpbe dtor Vpbe thee 398 4 4 void Vpbe dtor2 Vpbe thee 4 5 42 double Vpbe getCoulombEnergy1 Vpbe thee 421 429 unsigned long int Vpbe memChk Vpbe thee 43 431 endif ifndef VPBE H 432 Generated on Tue Dec 6 1 5 32 2 5 for APBS by 1 3 5", "_id": "http://www.ics.uci.edu/~dock/manuals/apbs/html/programmer/vpbe_8h-source.html", "title": "apbs: vpbe.h source file", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=iso-8859-1\">\n<title>APBS: vpbe.h Source File</title>\n<link href=\"apbs.css\" rel=\"stylesheet\" type=\"text/css\">\n</head><body>\n<!-- Generated by Doxygen 1.3.5 -->\n<div class=\"qindex\"><a class=\"qindex\" href=\"index.html\">Main&nbsp;Page</a> | <a class=\"qindex\" href=\"modules.html\">Modules</a> | <a class=\"qindex\" href=\"annotated.html\">Data&nbsp;Structures</a> | <a class=\"qindex\" href=\"files.html\">File&nbsp;List</a> | <a class=\"qindex\" href=\"functions.html\">Data&nbsp;Fields</a> | <a class=\"qindex\" href=\"globals.html\">Globals</a> | <a class=\"qindex\" href=\"pages.html\">Related&nbsp;Pages</a></div>\n<h1>vpbe.h</h1><a href=\"vpbe_8h.html\">Go to the documentation of this file.</a><div class=\"fragment\"><pre>00001 \n00053 <span class=\"preprocessor\">#ifndef _VPBE_H_</span>\n00054 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#define _VPBE_H_</span>\n00055 <span class=\"preprocessor\"></span>\n00056 <span class=\"comment\">/* Generic headers */</span>\n00057 <span class=\"preprocessor\">#include \"maloc/maloc.h\"</span>\n00058 <span class=\"preprocessor\">#include \"<a class=\"code\" href=\"vhal_8h.html\">apbs/vhal.h</a>\"</span>\n00059 \n00060 <span class=\"comment\">/* Specific headers */</span>\n00061 <span class=\"preprocessor\">#include \"<a class=\"code\" href=\"vunit_8h.html\">apbs/vunit.h</a>\"</span>\n00062 <span class=\"preprocessor\">#include \"<a class=\"code\" href=\"vatom_8h.html\">apbs/vatom.h</a>\"</span>\n00063 <span class=\"preprocessor\">#include \"<a class=\"code\" href=\"vacc_8h.html\">apbs/vacc.h</a>\"</span>\n00064 <span class=\"preprocessor\">#include \"<a class=\"code\" href=\"vclist_8h.html\">apbs/vclist.h</a>\"</span>\n00065 \n<a name=\"l00071\"></a><a class=\"code\" href=\"structsVpbe.html\">00071</a> <span class=\"keyword\">struct </span><a class=\"code\" href=\"structsVpbe.html\">sVpbe</a> { \n00072 \n<a name=\"l00073\"></a><a class=\"code\" href=\"structsVpbe.html#o0\">00073</a>   Vmem *<a class=\"code\" href=\"structsVpbe.html#o0\">vmem</a>;         \n<a name=\"l00075\"></a><a class=\"code\" href=\"structsVpbe.html#o1\">00075</a>   <a class=\"code\" href=\"structsValist.html\">Valist</a> *<a class=\"code\" href=\"structsVpbe.html#o1\">alist</a>;      \n<a name=\"l00076\"></a><a class=\"code\" href=\"structsVpbe.html#o2\">00076</a>   <a class=\"code\" href=\"structsVclist.html\">Vclist</a> *<a class=\"code\" href=\"structsVpbe.html#o2\">clist</a>;      \n<a name=\"l00077\"></a><a class=\"code\" href=\"structsVpbe.html#o3\">00077</a>   <a class=\"code\" href=\"structsVacc.html\">Vacc</a> *<a class=\"code\" href=\"structsVpbe.html#o3\">acc</a>;          \n<a name=\"l00079\"></a><a class=\"code\" href=\"structsVpbe.html#o4\">00079</a>   <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsVpbe.html#o4\">T</a>;           \n<a name=\"l00080\"></a><a class=\"code\" href=\"structsVpbe.html#o5\">00080</a>   <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsVpbe.html#o5\">gamma</a>;       \n<a name=\"l00081\"></a><a class=\"code\" href=\"structsVpbe.html#o6\">00081</a>   <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsVpbe.html#o6\">soluteDiel</a>;  \n<a name=\"l00082\"></a><a class=\"code\" href=\"structsVpbe.html#o7\">00082</a>   <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsVpbe.html#o7\">solventDiel</a>; \n00083   <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsVpbe.html#o8\">solventRadius</a>;\n<a name=\"l00087\"></a><a class=\"code\" href=\"structsVpbe.html#o9\">00087</a>   <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsVpbe.html#o9\">bulkIonicStrength</a>; \n<a name=\"l00088\"></a><a class=\"code\" href=\"structsVpbe.html#o10\">00088</a>   <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsVpbe.html#o10\">maxIonRadius</a>;      \n<a name=\"l00091\"></a><a class=\"code\" href=\"structsVpbe.html#o11\">00091</a>   <span class=\"keywordtype\">int</span>    <a class=\"code\" href=\"structsVpbe.html#o11\">numIon</a>;            \n<a name=\"l00092\"></a><a class=\"code\" href=\"structsVpbe.html#o12\">00092</a>   <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsVpbe.html#o12\">ionConc</a>[<a class=\"code\" href=\"group__Vhal.html#ga10\">MAXION</a>];   \n<a name=\"l00093\"></a><a class=\"code\" href=\"structsVpbe.html#o13\">00093</a>   <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsVpbe.html#o13\">ionRadii</a>[<a class=\"code\" href=\"group__Vhal.html#ga10\">MAXION</a>];  \n<a name=\"l00094\"></a><a class=\"code\" href=\"structsVpbe.html#o14\">00094</a>   <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsVpbe.html#o14\">ionQ</a>[<a class=\"code\" href=\"group__Vhal.html#ga10\">MAXION</a>];      \n<a name=\"l00096\"></a><a class=\"code\" href=\"structsVpbe.html#o15\">00096</a>   <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsVpbe.html#o15\">xkappa</a>;      \n<a name=\"l00097\"></a><a class=\"code\" href=\"structsVpbe.html#o16\">00097</a>   <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsVpbe.html#o16\">deblen</a>;      \n<a name=\"l00098\"></a><a class=\"code\" href=\"structsVpbe.html#o17\">00098</a>   <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsVpbe.html#o17\">zkappa2</a>;     \n<a name=\"l00099\"></a><a class=\"code\" href=\"structsVpbe.html#o18\">00099</a>   <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsVpbe.html#o18\">zmagic</a>;      \n<a name=\"l00101\"></a><a class=\"code\" href=\"structsVpbe.html#o19\">00101</a>   <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsVpbe.html#o19\">soluteCenter</a>[3]; \n<a name=\"l00102\"></a><a class=\"code\" href=\"structsVpbe.html#o20\">00102</a>   <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsVpbe.html#o20\">soluteRadius</a>; \n<a name=\"l00103\"></a><a class=\"code\" href=\"structsVpbe.html#o21\">00103</a>   <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsVpbe.html#o21\">soluteXlen</a>;  \n<a name=\"l00104\"></a><a class=\"code\" href=\"structsVpbe.html#o22\">00104</a>   <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsVpbe.html#o22\">soluteYlen</a>;  \n<a name=\"l00105\"></a><a class=\"code\" href=\"structsVpbe.html#o23\">00105</a>   <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsVpbe.html#o23\">soluteZlen</a>;  \n<a name=\"l00106\"></a><a class=\"code\" href=\"structsVpbe.html#o24\">00106</a>   <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsVpbe.html#o24\">soluteCharge</a>; \n<a name=\"l00108\"></a><a class=\"code\" href=\"structsVpbe.html#o25\">00108</a>   <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"structsVpbe.html#o25\">paramFlag</a>;      \n00110 };\n00111 \n<a name=\"l00116\"></a><a class=\"code\" href=\"group__Vpbe.html#ga0\">00116</a> <span class=\"keyword\">typedef</span> <span class=\"keyword\">struct </span><a class=\"code\" href=\"structsVpbe.html\">sVpbe</a> <a class=\"code\" href=\"group__Vpbe.html#ga0\">Vpbe</a>;\n00117 \n00118 <span class=\"comment\">/* ///////////////////////////////////////////////////////////////////////////</span>\n00119 <span class=\"comment\">// Class Vpbe: Inlineable methods (vpbe.c)</span>\n00121 <span class=\"comment\"></span>\n00122 <span class=\"comment\">#if !defined(VINLINE_VPBE)</span>\n00123 <span class=\"comment\"></span>\n00130 <span class=\"comment\">    Valist* Vpbe_getValist(Vpbe *thee);</span>\n00131 <span class=\"comment\"></span>\n00138 <span class=\"comment\">    Vacc*   Vpbe_getVacc(Vpbe *thee);</span>\n00139 <span class=\"comment\"></span>\n00146 <span class=\"comment\">    double  Vpbe_getBulkIonicStrength(Vpbe *thee);</span>\n00147 <span class=\"comment\"></span>\n00154 <span class=\"comment\">    double  Vpbe_getMaxIonRadius(Vpbe *thee);</span>\n00155 <span class=\"comment\"></span>\n00162 <span class=\"comment\">    double  Vpbe_getTemperature(Vpbe *thee);           </span>\n00163 <span class=\"comment\"></span>\n00170 <span class=\"comment\">    double  Vpbe_getSoluteDiel(Vpbe *thee); </span>\n00171 <span class=\"comment\"></span>\n00178 <span class=\"comment\">    double  Vpbe_getGamma(Vpbe *thee);</span>\n00179 <span class=\"comment\"></span>\n00186 <span class=\"comment\">    double  Vpbe_getSoluteRadius(Vpbe *thee);</span>\n00187 <span class=\"comment\"></span>\n00194 <span class=\"comment\">    double  Vpbe_getSoluteXlen(Vpbe *thee);</span>\n00195 <span class=\"comment\"></span>\n00202 <span class=\"comment\">    double  Vpbe_getSoluteYlen(Vpbe *thee);</span>\n00203 <span class=\"comment\"></span>\n00210 <span class=\"comment\">    double  Vpbe_getSoluteZlen(Vpbe *thee);</span>\n00211 <span class=\"comment\"></span>\n00218 <span class=\"comment\">    double* Vpbe_getSoluteCenter(Vpbe *thee);</span>\n00219 <span class=\"comment\"></span>\n00226 <span class=\"comment\">    double  Vpbe_getSoluteCharge(Vpbe *thee);</span>\n00227 <span class=\"comment\"></span>\n00234 <span class=\"comment\">    double  Vpbe_getSolventDiel(Vpbe *thee);</span>\n00235 <span class=\"comment\"></span>\n00242 <span class=\"comment\">    double  Vpbe_getSolventRadius(Vpbe *thee);</span>\n00243 <span class=\"comment\"></span>\n00250 <span class=\"comment\">    double  Vpbe_getXkappa(Vpbe *thee);</span>\n00251 <span class=\"comment\"></span>\n00258 <span class=\"comment\">    double  Vpbe_getDeblen(Vpbe *thee);</span>\n00259 <span class=\"comment\"></span>\n00266 <span class=\"comment\">    double  Vpbe_getZkappa2(Vpbe *thee);</span>\n00267 <span class=\"comment\"></span>\n00274 <span class=\"comment\">    double  Vpbe_getZmagic(Vpbe *thee);</span>\n00275 <span class=\"comment\"></span>\n00276 <span class=\"comment\">#else /* if defined(VINLINE_VPBE) */</span>\n00277 <span class=\"preprocessor\">#   define Vpbe_getValist(thee) ((thee)-&gt;alist)</span>\n00278 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#   define Vpbe_getVacc(thee) ((thee)-&gt;acc)</span>\n00279 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#   define Vpbe_getBulkIonicStrength(thee) ((thee)-&gt;bulkIonicStrength)</span>\n00280 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#   define Vpbe_getTemperature(thee) ((thee)-&gt;T)           </span>\n00281 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#   define Vpbe_getSoluteDiel(thee) ((thee)-&gt;soluteDiel) </span>\n00282 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#   define Vpbe_getGamma(thee) ((thee)-&gt;gamma) </span>\n00283 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#   define Vpbe_getSoluteCenter(thee) ((thee)-&gt;soluteCenter)</span>\n00284 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#   define Vpbe_getSoluteRadius(thee) ((thee)-&gt;soluteRadius)</span>\n00285 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#   define Vpbe_getSoluteXlen(thee) ((thee)-&gt;soluteXlen)</span>\n00286 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#   define Vpbe_getSoluteYlen(thee) ((thee)-&gt;soluteYlen)</span>\n00287 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#   define Vpbe_getSoluteZlen(thee) ((thee)-&gt;soluteZlen)</span>\n00288 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#   define Vpbe_getSoluteCharge(thee) ((thee)-&gt;soluteCharge)</span>\n00289 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#   define Vpbe_getSolventDiel(thee) ((thee)-&gt;solventDiel)</span>\n00290 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#   define Vpbe_getSolventRadius(thee) ((thee)-&gt;solventRadius)</span>\n00291 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#   define Vpbe_getMaxIonRadius(thee) ((thee)-&gt;maxIonRadius)</span>\n00292 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#   define Vpbe_getXkappa(thee) ((thee)-&gt;xkappa)</span>\n00293 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#   define Vpbe_getDeblen(thee) ((thee)-&gt;deblen)</span>\n00294 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#   define Vpbe_getZkappa2(thee) ((thee)-&gt;zkappa2)</span>\n00295 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#   define Vpbe_getZmagic(thee) ((thee)-&gt;zmagic)</span>\n00296 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#endif </span><span class=\"comment\">/* if !defined(VINLINE_VPBE) */</span>\n00297 \n00298 <span class=\"comment\">/* ///////////////////////////////////////////////////////////////////////////</span>\n00299 <span class=\"comment\">// Class Vpbe: Non-Inlineable methods (vpbe.c)</span>\n00301 <span class=\"comment\"></span>\n00335 <span class=\"comment\">Vpbe*   Vpbe_ctor(Valist *alist, int ionNum, double *ionConc, </span>\n00336 <span class=\"comment\">                    double *ionRadii, double *ionQ, double T, double gamma,</span>\n00337 <span class=\"comment\">                    double soluteDiel, double solventDiel,  </span>\n00338 <span class=\"comment\">                    double solventRadius, int focusFlag, double sdens);</span>\n00339 <span class=\"comment\"></span>\n00373 <span class=\"comment\">int    Vpbe_ctor2(Vpbe *thee, Valist *alist, int ionNum, </span>\n00374 <span class=\"comment\">                    double *ionConc, double *ionRadii, double *ionQ, </span>\n00375 <span class=\"comment\">                    double T, double gamma, double soluteDiel, </span>\n00376 <span class=\"comment\">                    double solventDiel, double solventRadius, int focusFlag,</span>\n00377 <span class=\"comment\">                    double sdens);</span>\n00378 <span class=\"comment\"></span>\n00389 <span class=\"comment\">int     Vpbe_getIons(Vpbe *thee, int *nion, double ionConc[MAXION],</span>\n00390 <span class=\"comment\">                    double ionRadii[MAXION], double ionQ[MAXION]);</span>\n00391 <span class=\"comment\"></span>\n00397 <span class=\"comment\">void    Vpbe_dtor(Vpbe **thee);</span>\n00398 <span class=\"comment\"></span>\n00404 <span class=\"comment\">void    Vpbe_dtor2(Vpbe *thee);</span>\n00405 <span class=\"comment\"></span>\n00420 <span class=\"comment\">double  Vpbe_getCoulombEnergy1(Vpbe *thee);</span>\n00421 <span class=\"comment\"></span>\n00429 <span class=\"comment\">unsigned long int Vpbe_memChk(Vpbe *thee);</span>\n00430 <span class=\"comment\"></span>\n00431 <span class=\"comment\">#endif /* ifndef _VPBE_H_ */</span>\n00432 \n</pre></div><hr size=\"1\"><address style=\"align: right;\"><small>Generated on Tue Dec 6 10:05:32 2005 for APBS by\n<a href=\"http://www.doxygen.org/index.html\">\n<img src=\"doxygen.png\" alt=\"doxygen\" align=\"middle\" border=0 > \n</a>1.3.5 </small></address>\n</body>\n</html>\n", "id": 40114.0}