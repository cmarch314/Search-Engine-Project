{"text": "View Javadoc 1 Z M I G 2 3 This library is free software you can redistribute it and or 4 modify it under the terms of the GNU Lesser General Public 5 License as published by the Free Software Foundation either 6 version 2 1 of the License or at your option any later version 7 8 This library is distributed in the hope that it will be useful 9 but WITHOUT ANY WARRANTY without even the implied warranty of 1 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE See the GNU 11 Lesser General Public License for more details 12 13 You should have received a copy of the GNU Lesser General Public 14 License along with this library if not write to the Free Software 15 Foundation Inc 59 Temple Place Suite 33 Boston MA 2111 13 7 USA 16 package javax jmdns 17 18 import java io ByteArrayOutputStream 19 import java io IOException 2 import java io OutputStream 21 import java net InetAddress 22 import java util Enumeration 23 import java util Hashtable 24 import java util Vector 25 26 27 JmDNS service information 28 29 author Arthur van Hoff 3 version I G 31 32 public class ServiceInfo extends JmDNS Listener 33 34 TODO 35 public static final byte NO VALUE new byte 36 37 TODO 38 Hashtable props 39 4 TODO 41 InetAddress addr 42 43 TODO 44 String name 45 46 TODO 47 String server 48 49 TODO 5 String type 51 52 TODO 53 byte text 54 55 TODO 56 int port 57 58 TODO 59 int priority 6 61 TODO 62 int weight 63 64 65 Construct a service description for registrating with JmDNS 66 67 param type fully qualified service type name 68 param name fully qualified service name 69 param port the local port on which the service runs 7 param text string describing the service 71 72 public ServiceInfo String type String name int port String text 73 74 this type name port text 75 76 77 78 Construct a service description for registrating with JmDNS 79 8 param type fully qualified service type name 81 param name fully qualified service name 82 param port the local port on which the service runs 83 param weight weight of the service 84 param priority priority of the service 85 param text string describing the service 86 87 throws RuntimeException TODO 88 89 public ServiceInfo String type String name int port int weight 9 int priority String text 91 92 this type name port weight priority byte null 93 94 try 95 96 ByteArrayOutputStream out new ByteArrayOutputStream text length 97 98 writeUTF out text 99 this text out toByteArray 1 1 1 catch IOException e 1 2 1 3 throw new RuntimeException unexpected exception e 1 4 1 5 1 6 1 7 1 8 Construct a service description for registrating with JmDNS The 1 9 properties hashtable must map property names to either Strings or byte 11 arrays describing the property values 111 112 param type fully qualified service type name 113 param name fully qualified service name 114 param port the local port on which the service runs 115 param weight weight of the service 116 param priority priority of the service 117 param props properties describing the service 118 119 throws RuntimeException TODO 12 121 public ServiceInfo String type String name int port int weight 122 int priority Hashtable props 123 124 this type name port weight priority new byte 125 126 if props null 127 128 try 129 13 ByteArrayOutputStream out new ByteArrayOutputStream 256 131 132 for Enumeration e props keys e hasMoreElements 133 134 String key String e nextElement 135 Object val props get key 136 ByteArrayOutputStream out2 new ByteArrayOutputStream 1 137 138 writeUTF out2 key 139 14 if val instanceof String 141 142 out2 write 143 writeUTF out2 String val 144 145 else if val instanceof byte 146 147 out2 write 148 149 byte bval byte val 15 151 out2 write bval bval length 152 153 else if val NO VALUE 154 155 throw new IllegalArgumentException invalid property value 156 val 157 158 159 byte data out2 toByteArray 16 161 out write data length 162 out write data data length 163 164 165 this text out toByteArray 166 167 catch IOException e 168 169 throw new RuntimeException unexpected exception e 17 171 172 173 174 175 Construct a service description for registrating with JmDNS 176 177 param type fully qualified service type name 178 param name fully qualified service name 179 param port the local port on which the service runs 18 param weight weight of the service 181 param priority priority of the service 182 param text bytes describing the service 183 184 public ServiceInfo String type String name int port int weight 185 int priority byte text 186 187 this type type 188 this name name 189 this port port 19 this weight weight 191 this priority priority 192 this text text 193 194 195 196 Construct a serive record during service discovery 197 198 param type TODO 199 param name TODO 2 2 1 throws IllegalArgumentException TODO 2 2 2 3 ServiceInfo String type String name 2 4 2 5 if type endsWith 2 6 2 7 throw new IllegalArgumentException type must be fully qualified DNS name ending in 2 8 type 2 9 21 211 if name endsWith 212 213 if name endsWith type 214 215 throw new IllegalArgumentException service name has the wrong type name 216 name type type 217 218 219 else 22 221 name name type 222 223 224 this type type 225 this name name 226 227 228 229 Get the host address of the service ie X X X X 23 231 return TODO 232 233 public String getAddress 234 235 byte data addr getAddress 236 237 return data xFF data 1 xFF 238 data 2 xFF data 3 xFF 239 24 241 242 Service name such as code foobar code 243 244 return TODO 245 246 public String getName 247 248 if type null name endsWith type 249 25 return name substring name length type length 1 251 252 253 return name 254 255 256 257 TODO 258 259 return TODO 26 261 public String getNiceTextString 262 263 StringBuffer buf new StringBuffer 264 265 for int i len text length i len i 266 267 if i 2 268 269 buf append 27 271 break 272 273 274 int ch text i xFF 275 276 if ch ch 127 277 278 buf append 279 buf append Integer toString ch 8 28 281 else 282 283 buf append char ch 284 285 286 287 return buf toString 288 289 29 291 Get the port for the service 292 293 return TODO 294 295 public int getPort 296 297 return port 298 299 3 3 1 Get the priority of the service 3 2 3 3 return TODO 3 4 3 5 public int getPriority 3 6 3 7 return priority 3 8 3 9 31 311 Get a property of the service This involves decoding the text bytes 312 into a property list Returns null if the property is not found or the 313 text data could not be decoded correctly 314 315 param name TODO 316 317 return TODO 318 319 public synchronized byte getPropertyBytes String name 32 321 return byte getProperties get name 322 323 324 325 Enumeration of the property names 326 327 return TODO 328 329 public Enumeration getPropertyNames 33 331 Hashtable props getProperties 332 333 return props null props keys new Vector elements 334 335 336 337 Get a property of the service This involves decoding the text bytes 338 into a property list Returns null if the property is not found the 339 text data could not be decoded correctly or the resulting bytes are 34 not a valid UTF8 string 341 342 param name TODO 343 344 return TODO 345 346 public synchronized String getPropertyString String name 347 348 byte data byte getProperties get name 349 35 if data null 351 352 return null 353 354 355 if data NO VALUE 356 357 return true 358 359 36 return readUTF data data length 361 362 363 364 Get the name of the server 365 366 return TODO 367 368 public String getServer 369 37 return server 371 372 373 374 Get the text for the serivce as raw bytes 375 376 return TODO 377 378 public byte getTextBytes 379 38 return text 381 382 383 384 Get the text for the service This will interpret the text bytes as a 385 UTF8 encoded string Will return null if the bytes are not a valid UTF8 386 encoded string 387 388 return TODO 389 39 public String getTextString 391 392 if text null text length 393 text length 1 text 394 395 return null 396 397 398 return readUTF text text length 399 4 4 1 4 2 Fully qualified service type name such as 4 3 code http tcp local code 4 4 4 5 return TODO 4 6 4 7 public String getType 4 8 4 9 return type 41 411 412 413 Get the URL for this service An http URL is created by combining the 414 addres port and path properties 415 416 return TODO 417 418 public String getURL 419 42 return getURL http 421 422 423 424 Get the URL for this service An URL is created by combining the 425 protocol addres port and path properties 426 427 param protocol TODO 428 429 return TODO 43 431 public String getURL String protocol 432 433 String url protocol getAddress getPort 434 String path getPropertyString path 435 436 if path null 437 438 if path indexOf 439 44 url path 441 442 else 443 444 url path startsWith path path 445 446 447 448 return url 449 45 451 452 Get the weight of the service 453 454 return TODO 455 456 public int getWeight 457 458 return weight 459 46 461 462 TODO 463 464 param obj TODO 465 466 return TODO 467 468 public boolean equals Object obj 469 47 return obj instanceof ServiceInfo 471 name equals ServiceInfo obj name 472 473 474 475 TODO 476 477 return TODO 478 479 public int hashCode 48 481 return name hashCode 482 483 484 485 TODO 486 487 return TODO 488 489 public String toString 49 491 StringBuffer buf new StringBuffer 492 493 buf append service 494 buf append name 495 buf append 496 buf append getAddress 497 buf append 498 buf append port 499 buf append 5 buf append getNiceTextString 5 1 buf append 5 2 5 3 return buf toString 5 4 5 5 5 6 5 7 Get the ip address of the service 5 8 5 9 return TODO 51 511 int getIPAddress 512 513 byte data addr getAddress 514 515 return data xFF 24 data 1 xFF 16 516 data 2 xFF 8 data 3 xFF 517 518 519 52 TODO 521 522 return TODO 523 524 synchronized Hashtable getProperties 525 526 if props null text null 527 528 Hashtable props new Hashtable 529 int off 53 531 while off text length 532 533 length of the next key value pair 534 int len text off xFF 535 536 if len off len text length 537 538 props clear 539 54 break 541 542 543 look for the 544 int i 545 546 for i len text off i i 547 548 549 55 551 get the property name 552 String name readUTF text off i 553 554 if name null 555 556 props clear 557 558 break 559 56 561 if i len 562 563 props put name NO VALUE 564 565 else 566 567 byte value new byte len i 568 569 System arraycopy text off i value len i 57 props put name value 571 off len 572 573 574 575 this props props 576 577 578 return props 579 58 581 582 Read data bytes as a UTF stream 583 584 param data TODO 585 param off TODO 586 param len TODO 587 588 return TODO 589 59 String readUTF byte data int off int len 591 592 StringBuffer buf new StringBuffer 593 594 for int end off len off end 595 596 int ch data off xFF 597 598 switch ch 4 599 6 case 6 1 case 1 6 2 case 2 6 3 case 3 6 4 case 4 6 5 case 5 6 6 case 6 6 7 case 7 6 8 6 9 xxxxxxx 61 break 611 612 case 12 613 case 13 614 if off len 615 616 return null 617 618 619 11 x xxxx 1 xx xxxx 62 ch ch x1F 6 data off x3F 621 622 break 623 624 case 14 625 if off 2 len 626 627 return null 628 629 63 111 xxxx 1 xx xxxx 1 xx xxxx 631 ch ch x f 12 data off x3F 6 632 data off x3F 633 634 break 635 636 default 637 if off 1 len 638 639 return null 64 641 642 1 xx xxxx 1111 xxxx 643 ch ch x3F 4 data off x f 644 645 break 646 647 648 buf append char ch 649 65 651 return buf toString 652 653 654 655 Update the server information from the cache send out repeated DNS 656 queries for updated information 657 658 param jmdns TODO 659 param timeout TODO 66 661 return TODO 662 663 boolean request JmDNS jmdns long timeout 664 665 long now System currentTimeMillis 666 int delay 2 667 long next now delay 668 long last now timeout 669 67 try 671 672 jmdns addListener this new DNSQuestion name TYPE ANY CLASS IN 673 674 while server null addr null text null 675 676 check if timeout was reached 677 if last now 678 679 return false 68 681 682 check if we need to send out another request 683 if next now 684 685 DNSOutgoing out new DNSOutgoing FLAGS QR QUERY 686 687 out addQuestion new DNSQuestion name TYPE SRV CLASS IN 688 out addQuestion new DNSQuestion name TYPE TXT CLASS IN 689 69 if server null 691 692 out addQuestion new DNSQuestion server TYPE A CLASS IN 693 694 695 out addAnswer DNSRecord jmdns cache get name TYPE SRV 696 CLASS IN now 697 out addAnswer DNSRecord jmdns cache get name TYPE TXT 698 CLASS IN now 699 7 if server null 7 1 7 2 out addAnswer DNSRecord jmdns cache get server 7 3 TYPE A 7 4 CLASS IN now 7 5 7 6 7 7 jmdns send out 7 8 7 9 next now delay 71 delay delay 2 711 712 713 wait for an update or a timeout 714 synchronized jmdns 715 716 jmdns wait Math min next last now 717 718 719 now System currentTimeMillis 72 721 722 return true 723 724 catch IOException e 725 726 return false 727 728 catch InterruptedException e 729 73 return false 731 732 finally 733 734 jmdns removeListener this 735 736 737 738 739 JmDNS callback to update a DNS record 74 741 param jmdns TODO 742 param now TODO 743 param rec TODO 744 745 void updateRecord JmDNS jmdns long now DNSRecord rec 746 747 if rec null rec isExpired now 748 749 switch rec type 75 751 case TYPE A 752 if rec name equals server 753 754 addr DNSRecord Address rec getInetAddress 755 756 757 break 758 759 case TYPE SRV 76 if rec name equals name 761 762 DNSRecord Service srv DNSRecord Service rec 763 764 server srv server 765 port srv port 766 weight srv weight 767 priority srv priority 768 addr null 769 updateRecord jmdns now 77 DNSRecord jmdns cache get server TYPE A 771 CLASS IN 772 773 774 break 775 776 case TYPE TXT 777 if rec name equals name 778 779 DNSRecord Text txt DNSRecord Text rec 78 781 text txt text 782 783 784 break 785 786 787 788 789 79 Write a UTF string with a length to a stream 791 792 param out TODO 793 param str TODO 794 795 throws IOException TODO 796 797 void writeUTF OutputStream out String str throws IOException 798 799 for int i len str length i len i 8 8 1 int c str charAt i 8 2 8 3 if c x 1 c x 7F 8 4 8 5 out write c 8 6 8 7 else if c x 7FF 8 8 8 9 out write xE c 12 x F 81 out write x8 c 6 x3F 811 out write x8 c x3F 812 813 else 814 815 out write xC c 6 x1F 816 out write x8 c x3F 817 818 819 82 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.20/xref/javax/jmdns/ServiceInfo.html", "title": "serviceinfo xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>ServiceInfo xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../stylesheet.css\" />\n</head>\n<body>\n<div id=\"overview\"><a href=\"../../../apidocs/javax/jmdns/ServiceInfo.html\">View Javadoc</a></div><pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <em class=\"comment\">// %Z%%M%, %I%, %G%</em>\n<a name=\"2\" href=\"#2\">2</a>   <em class=\"comment\">//</em>\n<a name=\"3\" href=\"#3\">3</a>   <em class=\"comment\">// This library is free software; you can redistribute it and/or</em>\n<a name=\"4\" href=\"#4\">4</a>   <em class=\"comment\">// modify it under the terms of the GNU Lesser General Public</em>\n<a name=\"5\" href=\"#5\">5</a>   <em class=\"comment\">// License as published by the Free Software Foundation; either</em>\n<a name=\"6\" href=\"#6\">6</a>   <em class=\"comment\">// version 2.1 of the License, or (at your option) any later version.</em>\n<a name=\"7\" href=\"#7\">7</a>   <em class=\"comment\">// </em>\n<a name=\"8\" href=\"#8\">8</a>   <em class=\"comment\">// This library is distributed in the hope that it will be useful,</em>\n<a name=\"9\" href=\"#9\">9</a>   <em class=\"comment\">// but WITHOUT ANY WARRANTY; without even the implied warranty of</em>\n<a name=\"10\" href=\"#10\">10</a>  <em class=\"comment\">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</em>\n<a name=\"11\" href=\"#11\">11</a>  <em class=\"comment\">// Lesser General Public License for more details.</em>\n<a name=\"12\" href=\"#12\">12</a>  <em class=\"comment\">// </em>\n<a name=\"13\" href=\"#13\">13</a>  <em class=\"comment\">// You should have received a copy of the GNU Lesser General Public</em>\n<a name=\"14\" href=\"#14\">14</a>  <em class=\"comment\">// License along with this library; if not, write to the Free Software</em>\n<a name=\"15\" href=\"#15\">15</a>  <em class=\"comment\">// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</em>\n<a name=\"16\" href=\"#16\">16</a>  <strong>package</strong> <a href=\"../../javax/jmdns/package-summary.html\">javax.jmdns</a>;\n<a name=\"17\" href=\"#17\">17</a>  \n<a name=\"18\" href=\"#18\">18</a>  <strong>import</strong> java.io.ByteArrayOutputStream;\n<a name=\"19\" href=\"#19\">19</a>  <strong>import</strong> java.io.IOException;\n<a name=\"20\" href=\"#20\">20</a>  <strong>import</strong> java.io.OutputStream;\n<a name=\"21\" href=\"#21\">21</a>  <strong>import</strong> java.net.InetAddress;\n<a name=\"22\" href=\"#22\">22</a>  <strong>import</strong> java.util.Enumeration;\n<a name=\"23\" href=\"#23\">23</a>  <strong>import</strong> java.util.Hashtable;\n<a name=\"24\" href=\"#24\">24</a>  <strong>import</strong> java.util.Vector;\n<a name=\"25\" href=\"#25\">25</a>  \n<a name=\"26\" href=\"#26\">26</a>  <em>/**<em>*</em></em>\n<a name=\"27\" href=\"#27\">27</a>  <em> * JmDNS service information.</em>\n<a name=\"28\" href=\"#28\">28</a>  <em> *</em>\n<a name=\"29\" href=\"#29\">29</a>  <em> * @author Arthur van Hoff</em>\n<a name=\"30\" href=\"#30\">30</a>  <em> * @version %I%, %G%</em>\n<a name=\"31\" href=\"#31\">31</a>  <em> */</em>\n<a name=\"32\" href=\"#32\">32</a>  <strong>public</strong> <strong>class</strong> <a href=\"../../javax/jmdns/ServiceInfo.html\">ServiceInfo</a> <strong>extends</strong> JmDNS.Listener\n<a name=\"33\" href=\"#33\">33</a>  {\n<a name=\"34\" href=\"#34\">34</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"35\" href=\"#35\">35</a>      <strong>public</strong> <strong>static</strong> <strong>final</strong> byte[] NO_VALUE = <strong>new</strong> byte[0];\n<a name=\"36\" href=\"#36\">36</a>  \n<a name=\"37\" href=\"#37\">37</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"38\" href=\"#38\">38</a>      Hashtable props;\n<a name=\"39\" href=\"#39\">39</a>  \n<a name=\"40\" href=\"#40\">40</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"41\" href=\"#41\">41</a>      InetAddress addr;\n<a name=\"42\" href=\"#42\">42</a>  \n<a name=\"43\" href=\"#43\">43</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"44\" href=\"#44\">44</a>      String name;\n<a name=\"45\" href=\"#45\">45</a>  \n<a name=\"46\" href=\"#46\">46</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"47\" href=\"#47\">47</a>      String server;\n<a name=\"48\" href=\"#48\">48</a>  \n<a name=\"49\" href=\"#49\">49</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"50\" href=\"#50\">50</a>      String type;\n<a name=\"51\" href=\"#51\">51</a>  \n<a name=\"52\" href=\"#52\">52</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"53\" href=\"#53\">53</a>      byte[] text;\n<a name=\"54\" href=\"#54\">54</a>  \n<a name=\"55\" href=\"#55\">55</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"56\" href=\"#56\">56</a>      <strong>int</strong> port;\n<a name=\"57\" href=\"#57\">57</a>  \n<a name=\"58\" href=\"#58\">58</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"59\" href=\"#59\">59</a>      <strong>int</strong> priority;\n<a name=\"60\" href=\"#60\">60</a>  \n<a name=\"61\" href=\"#61\">61</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"62\" href=\"#62\">62</a>      <strong>int</strong> weight;\n<a name=\"63\" href=\"#63\">63</a>  \n<a name=\"64\" href=\"#64\">64</a>      <em>/**<em>*</em></em>\n<a name=\"65\" href=\"#65\">65</a>  <em>     * Construct a service description for registrating with JmDNS.</em>\n<a name=\"66\" href=\"#66\">66</a>  <em>     *</em>\n<a name=\"67\" href=\"#67\">67</a>  <em>     * @param type fully qualified service type name</em>\n<a name=\"68\" href=\"#68\">68</a>  <em>     * @param name fully qualified service name</em>\n<a name=\"69\" href=\"#69\">69</a>  <em>     * @param port the local port on which the service runs</em>\n<a name=\"70\" href=\"#70\">70</a>  <em>     * @param text string describing the service</em>\n<a name=\"71\" href=\"#71\">71</a>  <em>     */</em>\n<a name=\"72\" href=\"#72\">72</a>      <strong>public</strong> <a href=\"../../javax/jmdns/ServiceInfo.html\">ServiceInfo</a>(String type, String name, <strong>int</strong> port, String text)\n<a name=\"73\" href=\"#73\">73</a>      {\n<a name=\"74\" href=\"#74\">74</a>          <strong>this</strong>(type, name, port, 0, 0, text);\n<a name=\"75\" href=\"#75\">75</a>      }\n<a name=\"76\" href=\"#76\">76</a>  \n<a name=\"77\" href=\"#77\">77</a>      <em>/**<em>*</em></em>\n<a name=\"78\" href=\"#78\">78</a>  <em>     * Construct a service description for registrating with JmDNS.</em>\n<a name=\"79\" href=\"#79\">79</a>  <em>     *</em>\n<a name=\"80\" href=\"#80\">80</a>  <em>     * @param type fully qualified service type name</em>\n<a name=\"81\" href=\"#81\">81</a>  <em>     * @param name fully qualified service name</em>\n<a name=\"82\" href=\"#82\">82</a>  <em>     * @param port the local port on which the service runs</em>\n<a name=\"83\" href=\"#83\">83</a>  <em>     * @param weight weight of the service</em>\n<a name=\"84\" href=\"#84\">84</a>  <em>     * @param priority priority of the service</em>\n<a name=\"85\" href=\"#85\">85</a>  <em>     * @param text string describing the service</em>\n<a name=\"86\" href=\"#86\">86</a>  <em>     *</em>\n<a name=\"87\" href=\"#87\">87</a>  <em>     * @throws RuntimeException TODO</em>\n<a name=\"88\" href=\"#88\">88</a>  <em>     */</em>\n<a name=\"89\" href=\"#89\">89</a>      <strong>public</strong> <a href=\"../../javax/jmdns/ServiceInfo.html\">ServiceInfo</a>(String type, String name, <strong>int</strong> port, <strong>int</strong> weight,\n<a name=\"90\" href=\"#90\">90</a>                         <strong>int</strong> priority, String text)\n<a name=\"91\" href=\"#91\">91</a>      {\n<a name=\"92\" href=\"#92\">92</a>          <strong>this</strong>(type, name, port, weight, priority, (byte[])<strong>null</strong>);\n<a name=\"93\" href=\"#93\">93</a>  \n<a name=\"94\" href=\"#94\">94</a>          <strong>try</strong>\n<a name=\"95\" href=\"#95\">95</a>          {\n<a name=\"96\" href=\"#96\">96</a>              ByteArrayOutputStream out = <strong>new</strong> ByteArrayOutputStream(text.length());\n<a name=\"97\" href=\"#97\">97</a>  \n<a name=\"98\" href=\"#98\">98</a>              writeUTF(out, text);\n<a name=\"99\" href=\"#99\">99</a>              <strong>this</strong>.text = out.toByteArray();\n<a name=\"100\" href=\"#100\">100</a>         }\n<a name=\"101\" href=\"#101\">101</a>         <strong>catch</strong>(IOException e)\n<a name=\"102\" href=\"#102\">102</a>         {\n<a name=\"103\" href=\"#103\">103</a>             <strong>throw</strong> <strong>new</strong> RuntimeException(<span class=\"string\">\"unexpected exception: \"</span> + e);\n<a name=\"104\" href=\"#104\">104</a>         }\n<a name=\"105\" href=\"#105\">105</a>     }\n<a name=\"106\" href=\"#106\">106</a> \n<a name=\"107\" href=\"#107\">107</a>     <em>/**<em>*</em></em>\n<a name=\"108\" href=\"#108\">108</a> <em>     * Construct a service description for registrating with JmDNS. The</em>\n<a name=\"109\" href=\"#109\">109</a> <em>     * properties hashtable must map property names to either Strings or byte</em>\n<a name=\"110\" href=\"#110\">110</a> <em>     * arrays describing the property values.</em>\n<a name=\"111\" href=\"#111\">111</a> <em>     *</em>\n<a name=\"112\" href=\"#112\">112</a> <em>     * @param type fully qualified service type name</em>\n<a name=\"113\" href=\"#113\">113</a> <em>     * @param name fully qualified service name</em>\n<a name=\"114\" href=\"#114\">114</a> <em>     * @param port the local port on which the service runs</em>\n<a name=\"115\" href=\"#115\">115</a> <em>     * @param weight weight of the service</em>\n<a name=\"116\" href=\"#116\">116</a> <em>     * @param priority priority of the service</em>\n<a name=\"117\" href=\"#117\">117</a> <em>     * @param props properties describing the service</em>\n<a name=\"118\" href=\"#118\">118</a> <em>     *</em>\n<a name=\"119\" href=\"#119\">119</a> <em>     * @throws RuntimeException TODO</em>\n<a name=\"120\" href=\"#120\">120</a> <em>     */</em>\n<a name=\"121\" href=\"#121\">121</a>     <strong>public</strong> <a href=\"../../javax/jmdns/ServiceInfo.html\">ServiceInfo</a>(String type, String name, <strong>int</strong> port, <strong>int</strong> weight,\n<a name=\"122\" href=\"#122\">122</a>                        <strong>int</strong> priority, Hashtable props)\n<a name=\"123\" href=\"#123\">123</a>     {\n<a name=\"124\" href=\"#124\">124</a>         <strong>this</strong>(type, name, port, weight, priority, <strong>new</strong> byte[0]);\n<a name=\"125\" href=\"#125\">125</a> \n<a name=\"126\" href=\"#126\">126</a>         <strong>if</strong>(props != <strong>null</strong>)\n<a name=\"127\" href=\"#127\">127</a>         {\n<a name=\"128\" href=\"#128\">128</a>             <strong>try</strong>\n<a name=\"129\" href=\"#129\">129</a>             {\n<a name=\"130\" href=\"#130\">130</a>                 ByteArrayOutputStream out = <strong>new</strong> ByteArrayOutputStream(256);\n<a name=\"131\" href=\"#131\">131</a> \n<a name=\"132\" href=\"#132\">132</a>                 <strong>for</strong>(Enumeration e = props.keys(); e.hasMoreElements();)\n<a name=\"133\" href=\"#133\">133</a>                 {\n<a name=\"134\" href=\"#134\">134</a>                     String key = (String)e.nextElement();\n<a name=\"135\" href=\"#135\">135</a>                     Object val = props.get(key);\n<a name=\"136\" href=\"#136\">136</a>                     ByteArrayOutputStream out2 = <strong>new</strong> ByteArrayOutputStream(100);\n<a name=\"137\" href=\"#137\">137</a> \n<a name=\"138\" href=\"#138\">138</a>                     writeUTF(out2, key);\n<a name=\"139\" href=\"#139\">139</a> \n<a name=\"140\" href=\"#140\">140</a>                     <strong>if</strong>(val instanceof String)\n<a name=\"141\" href=\"#141\">141</a>                     {\n<a name=\"142\" href=\"#142\">142</a>                         out2.write('=');\n<a name=\"143\" href=\"#143\">143</a>                         writeUTF(out2, (String)val);\n<a name=\"144\" href=\"#144\">144</a>                     }\n<a name=\"145\" href=\"#145\">145</a>                     <strong>else</strong> <strong>if</strong>(val instanceof byte[])\n<a name=\"146\" href=\"#146\">146</a>                     {\n<a name=\"147\" href=\"#147\">147</a>                         out2.write('=');\n<a name=\"148\" href=\"#148\">148</a> \n<a name=\"149\" href=\"#149\">149</a>                         byte[] bval = (byte[])val;\n<a name=\"150\" href=\"#150\">150</a> \n<a name=\"151\" href=\"#151\">151</a>                         out2.write(bval, 0, bval.length);\n<a name=\"152\" href=\"#152\">152</a>                     }\n<a name=\"153\" href=\"#153\">153</a>                     <strong>else</strong> <strong>if</strong>(val != NO_VALUE)\n<a name=\"154\" href=\"#154\">154</a>                     {\n<a name=\"155\" href=\"#155\">155</a>                         <strong>throw</strong> <strong>new</strong> IllegalArgumentException(<span class=\"string\">\"invalid property value: \"</span>\n<a name=\"156\" href=\"#156\">156</a>                                                            + val);\n<a name=\"157\" href=\"#157\">157</a>                     }\n<a name=\"158\" href=\"#158\">158</a> \n<a name=\"159\" href=\"#159\">159</a>                     byte[] data = out2.toByteArray();\n<a name=\"160\" href=\"#160\">160</a> \n<a name=\"161\" href=\"#161\">161</a>                     out.write(data.length);\n<a name=\"162\" href=\"#162\">162</a>                     out.write(data, 0, data.length);\n<a name=\"163\" href=\"#163\">163</a>                 }\n<a name=\"164\" href=\"#164\">164</a> \n<a name=\"165\" href=\"#165\">165</a>                 <strong>this</strong>.text = out.toByteArray();\n<a name=\"166\" href=\"#166\">166</a>             }\n<a name=\"167\" href=\"#167\">167</a>             <strong>catch</strong>(IOException e)\n<a name=\"168\" href=\"#168\">168</a>             {\n<a name=\"169\" href=\"#169\">169</a>                 <strong>throw</strong> <strong>new</strong> RuntimeException(<span class=\"string\">\"unexpected exception: \"</span> + e);\n<a name=\"170\" href=\"#170\">170</a>             }\n<a name=\"171\" href=\"#171\">171</a>         }\n<a name=\"172\" href=\"#172\">172</a>     }\n<a name=\"173\" href=\"#173\">173</a> \n<a name=\"174\" href=\"#174\">174</a>     <em>/**<em>*</em></em>\n<a name=\"175\" href=\"#175\">175</a> <em>     * Construct a service description for registrating with JmDNS.</em>\n<a name=\"176\" href=\"#176\">176</a> <em>     *</em>\n<a name=\"177\" href=\"#177\">177</a> <em>     * @param type fully qualified service type name</em>\n<a name=\"178\" href=\"#178\">178</a> <em>     * @param name fully qualified service name</em>\n<a name=\"179\" href=\"#179\">179</a> <em>     * @param port the local port on which the service runs</em>\n<a name=\"180\" href=\"#180\">180</a> <em>     * @param weight weight of the service</em>\n<a name=\"181\" href=\"#181\">181</a> <em>     * @param priority priority of the service</em>\n<a name=\"182\" href=\"#182\">182</a> <em>     * @param text bytes describing the service</em>\n<a name=\"183\" href=\"#183\">183</a> <em>     */</em>\n<a name=\"184\" href=\"#184\">184</a>     <strong>public</strong> <a href=\"../../javax/jmdns/ServiceInfo.html\">ServiceInfo</a>(String type, String name, <strong>int</strong> port, <strong>int</strong> weight,\n<a name=\"185\" href=\"#185\">185</a>                        <strong>int</strong> priority, byte[] text)\n<a name=\"186\" href=\"#186\">186</a>     {\n<a name=\"187\" href=\"#187\">187</a>         <strong>this</strong>.type = type;\n<a name=\"188\" href=\"#188\">188</a>         <strong>this</strong>.name = name;\n<a name=\"189\" href=\"#189\">189</a>         <strong>this</strong>.port = port;\n<a name=\"190\" href=\"#190\">190</a>         <strong>this</strong>.weight = weight;\n<a name=\"191\" href=\"#191\">191</a>         <strong>this</strong>.priority = priority;\n<a name=\"192\" href=\"#192\">192</a>         <strong>this</strong>.text = text;\n<a name=\"193\" href=\"#193\">193</a>     }\n<a name=\"194\" href=\"#194\">194</a> \n<a name=\"195\" href=\"#195\">195</a>     <em>/**<em>*</em></em>\n<a name=\"196\" href=\"#196\">196</a> <em>     * Construct a serive record during service discovery.</em>\n<a name=\"197\" href=\"#197\">197</a> <em>     *</em>\n<a name=\"198\" href=\"#198\">198</a> <em>     * @param type TODO</em>\n<a name=\"199\" href=\"#199\">199</a> <em>     * @param name TODO</em>\n<a name=\"200\" href=\"#200\">200</a> <em>     *</em>\n<a name=\"201\" href=\"#201\">201</a> <em>     * @throws IllegalArgumentException TODO</em>\n<a name=\"202\" href=\"#202\">202</a> <em>     */</em>\n<a name=\"203\" href=\"#203\">203</a>     <a href=\"../../javax/jmdns/ServiceInfo.html\">ServiceInfo</a>(String type, String name)\n<a name=\"204\" href=\"#204\">204</a>     {\n<a name=\"205\" href=\"#205\">205</a>         <strong>if</strong>(!type.endsWith(<span class=\"string\">\".\"</span>))\n<a name=\"206\" href=\"#206\">206</a>         {\n<a name=\"207\" href=\"#207\">207</a>             <strong>throw</strong> <strong>new</strong> IllegalArgumentException(<span class=\"string\">\"type must be fully qualified DNS name ending in '.': \"</span>\n<a name=\"208\" href=\"#208\">208</a>                                                + type);\n<a name=\"209\" href=\"#209\">209</a>         }\n<a name=\"210\" href=\"#210\">210</a> \n<a name=\"211\" href=\"#211\">211</a>         <strong>if</strong>(name.endsWith(<span class=\"string\">\".\"</span>))\n<a name=\"212\" href=\"#212\">212</a>         {\n<a name=\"213\" href=\"#213\">213</a>             <strong>if</strong>(!name.endsWith(<span class=\"string\">\".\"</span> + type))\n<a name=\"214\" href=\"#214\">214</a>             {\n<a name=\"215\" href=\"#215\">215</a>                 <strong>throw</strong> <strong>new</strong> IllegalArgumentException(<span class=\"string\">\"service name has the wrong type: name=\"</span>\n<a name=\"216\" href=\"#216\">216</a>                                                    + name + <span class=\"string\">\", type=\"</span> + type);\n<a name=\"217\" href=\"#217\">217</a>             }\n<a name=\"218\" href=\"#218\">218</a>         }\n<a name=\"219\" href=\"#219\">219</a>         <strong>else</strong>\n<a name=\"220\" href=\"#220\">220</a>         {\n<a name=\"221\" href=\"#221\">221</a>             name = name + <span class=\"string\">\".\"</span> + type;\n<a name=\"222\" href=\"#222\">222</a>         }\n<a name=\"223\" href=\"#223\">223</a> \n<a name=\"224\" href=\"#224\">224</a>         <strong>this</strong>.type = type;\n<a name=\"225\" href=\"#225\">225</a>         <strong>this</strong>.name = name;\n<a name=\"226\" href=\"#226\">226</a>     }\n<a name=\"227\" href=\"#227\">227</a> \n<a name=\"228\" href=\"#228\">228</a>     <em>/**<em>*</em></em>\n<a name=\"229\" href=\"#229\">229</a> <em>     * Get the host address of the service (ie X.X.X.X).</em>\n<a name=\"230\" href=\"#230\">230</a> <em>     *</em>\n<a name=\"231\" href=\"#231\">231</a> <em>     * @return TODO</em>\n<a name=\"232\" href=\"#232\">232</a> <em>     */</em>\n<a name=\"233\" href=\"#233\">233</a>     <strong>public</strong> String getAddress()\n<a name=\"234\" href=\"#234\">234</a>     {\n<a name=\"235\" href=\"#235\">235</a>         byte[] data = addr.getAddress();\n<a name=\"236\" href=\"#236\">236</a> \n<a name=\"237\" href=\"#237\">237</a>         <strong>return</strong> (data[0] &amp; 0xFF) + <span class=\"string\">\".\"</span> + (data[1] &amp; 0xFF) + <span class=\"string\">\".\"</span>\n<a name=\"238\" href=\"#238\">238</a>                + (data[2] &amp; 0xFF) + <span class=\"string\">\".\"</span> + (data[3] &amp; 0xFF);\n<a name=\"239\" href=\"#239\">239</a>     }\n<a name=\"240\" href=\"#240\">240</a> \n<a name=\"241\" href=\"#241\">241</a>     <em>/**<em>*</em></em>\n<a name=\"242\" href=\"#242\">242</a> <em>     * Service name, such as &lt;code>foobar&lt;/code>.</em>\n<a name=\"243\" href=\"#243\">243</a> <em>     *</em>\n<a name=\"244\" href=\"#244\">244</a> <em>     * @return TODO</em>\n<a name=\"245\" href=\"#245\">245</a> <em>     */</em>\n<a name=\"246\" href=\"#246\">246</a>     <strong>public</strong> String getName()\n<a name=\"247\" href=\"#247\">247</a>     {\n<a name=\"248\" href=\"#248\">248</a>         <strong>if</strong>((type != <strong>null</strong>) &amp;&amp; name.endsWith(<span class=\"string\">\".\"</span> + type))\n<a name=\"249\" href=\"#249\">249</a>         {\n<a name=\"250\" href=\"#250\">250</a>             <strong>return</strong> name.substring(0, name.length() - (type.length() + 1));\n<a name=\"251\" href=\"#251\">251</a>         }\n<a name=\"252\" href=\"#252\">252</a> \n<a name=\"253\" href=\"#253\">253</a>         <strong>return</strong> name;\n<a name=\"254\" href=\"#254\">254</a>     }\n<a name=\"255\" href=\"#255\">255</a> \n<a name=\"256\" href=\"#256\">256</a>     <em>/**<em>*</em></em>\n<a name=\"257\" href=\"#257\">257</a> <em>     * TODO</em>\n<a name=\"258\" href=\"#258\">258</a> <em>     *</em>\n<a name=\"259\" href=\"#259\">259</a> <em>     * @return TODO</em>\n<a name=\"260\" href=\"#260\">260</a> <em>     */</em>\n<a name=\"261\" href=\"#261\">261</a>     <strong>public</strong> String getNiceTextString()\n<a name=\"262\" href=\"#262\">262</a>     {\n<a name=\"263\" href=\"#263\">263</a>         StringBuffer buf = <strong>new</strong> StringBuffer();\n<a name=\"264\" href=\"#264\">264</a> \n<a name=\"265\" href=\"#265\">265</a>         <strong>for</strong>(<strong>int</strong> i = 0, len = text.length; i &lt; len; i++)\n<a name=\"266\" href=\"#266\">266</a>         {\n<a name=\"267\" href=\"#267\">267</a>             <strong>if</strong>(i >= 20)\n<a name=\"268\" href=\"#268\">268</a>             {\n<a name=\"269\" href=\"#269\">269</a>                 buf.append(<span class=\"string\">\"...\"</span>);\n<a name=\"270\" href=\"#270\">270</a> \n<a name=\"271\" href=\"#271\">271</a>                 <strong>break</strong>;\n<a name=\"272\" href=\"#272\">272</a>             }\n<a name=\"273\" href=\"#273\">273</a> \n<a name=\"274\" href=\"#274\">274</a>             <strong>int</strong> ch = text[i] &amp; 0xFF;\n<a name=\"275\" href=\"#275\">275</a> \n<a name=\"276\" href=\"#276\">276</a>             <strong>if</strong>((ch &lt; ' ') || (ch > 127))\n<a name=\"277\" href=\"#277\">277</a>             {\n<a name=\"278\" href=\"#278\">278</a>                 buf.append(<span class=\"string\">\"&#47;&#47;0\"</span>);\n<a name=\"279\" href=\"#279\">279</a>                 buf.append(Integer.toString(ch, 8));\n<a name=\"280\" href=\"#280\">280</a>             }\n<a name=\"281\" href=\"#281\">281</a>             <strong>else</strong>\n<a name=\"282\" href=\"#282\">282</a>             {\n<a name=\"283\" href=\"#283\">283</a>                 buf.append((<strong>char</strong>)ch);\n<a name=\"284\" href=\"#284\">284</a>             }\n<a name=\"285\" href=\"#285\">285</a>         }\n<a name=\"286\" href=\"#286\">286</a> \n<a name=\"287\" href=\"#287\">287</a>         <strong>return</strong> buf.toString();\n<a name=\"288\" href=\"#288\">288</a>     }\n<a name=\"289\" href=\"#289\">289</a> \n<a name=\"290\" href=\"#290\">290</a>     <em>/**<em>*</em></em>\n<a name=\"291\" href=\"#291\">291</a> <em>     * Get the port for the service.</em>\n<a name=\"292\" href=\"#292\">292</a> <em>     *</em>\n<a name=\"293\" href=\"#293\">293</a> <em>     * @return TODO</em>\n<a name=\"294\" href=\"#294\">294</a> <em>     */</em>\n<a name=\"295\" href=\"#295\">295</a>     <strong>public</strong> <strong>int</strong> getPort()\n<a name=\"296\" href=\"#296\">296</a>     {\n<a name=\"297\" href=\"#297\">297</a>         <strong>return</strong> port;\n<a name=\"298\" href=\"#298\">298</a>     }\n<a name=\"299\" href=\"#299\">299</a> \n<a name=\"300\" href=\"#300\">300</a>     <em>/**<em>*</em></em>\n<a name=\"301\" href=\"#301\">301</a> <em>     * Get the priority of the service.</em>\n<a name=\"302\" href=\"#302\">302</a> <em>     *</em>\n<a name=\"303\" href=\"#303\">303</a> <em>     * @return TODO</em>\n<a name=\"304\" href=\"#304\">304</a> <em>     */</em>\n<a name=\"305\" href=\"#305\">305</a>     <strong>public</strong> <strong>int</strong> getPriority()\n<a name=\"306\" href=\"#306\">306</a>     {\n<a name=\"307\" href=\"#307\">307</a>         <strong>return</strong> priority;\n<a name=\"308\" href=\"#308\">308</a>     }\n<a name=\"309\" href=\"#309\">309</a> \n<a name=\"310\" href=\"#310\">310</a>     <em>/**<em>*</em></em>\n<a name=\"311\" href=\"#311\">311</a> <em>     * Get a property of the service. This involves decoding the text bytes</em>\n<a name=\"312\" href=\"#312\">312</a> <em>     * into a property list. Returns null if the property is not found or the</em>\n<a name=\"313\" href=\"#313\">313</a> <em>     * text data could not be decoded correctly.</em>\n<a name=\"314\" href=\"#314\">314</a> <em>     *</em>\n<a name=\"315\" href=\"#315\">315</a> <em>     * @param name TODO</em>\n<a name=\"316\" href=\"#316\">316</a> <em>     *</em>\n<a name=\"317\" href=\"#317\">317</a> <em>     * @return TODO</em>\n<a name=\"318\" href=\"#318\">318</a> <em>     */</em>\n<a name=\"319\" href=\"#319\">319</a>     <strong>public</strong> <strong>synchronized</strong> byte[] getPropertyBytes(String name)\n<a name=\"320\" href=\"#320\">320</a>     {\n<a name=\"321\" href=\"#321\">321</a>         <strong>return</strong> (byte[])getProperties().get(name);\n<a name=\"322\" href=\"#322\">322</a>     }\n<a name=\"323\" href=\"#323\">323</a> \n<a name=\"324\" href=\"#324\">324</a>     <em>/**<em>*</em></em>\n<a name=\"325\" href=\"#325\">325</a> <em>     * Enumeration of the property names.</em>\n<a name=\"326\" href=\"#326\">326</a> <em>     *</em>\n<a name=\"327\" href=\"#327\">327</a> <em>     * @return TODO</em>\n<a name=\"328\" href=\"#328\">328</a> <em>     */</em>\n<a name=\"329\" href=\"#329\">329</a>     <strong>public</strong> Enumeration getPropertyNames()\n<a name=\"330\" href=\"#330\">330</a>     {\n<a name=\"331\" href=\"#331\">331</a>         Hashtable props = getProperties();\n<a name=\"332\" href=\"#332\">332</a> \n<a name=\"333\" href=\"#333\">333</a>         <strong>return</strong> (props != <strong>null</strong>) ? props.keys() : <strong>new</strong> Vector().elements();\n<a name=\"334\" href=\"#334\">334</a>     }\n<a name=\"335\" href=\"#335\">335</a> \n<a name=\"336\" href=\"#336\">336</a>     <em>/**<em>*</em></em>\n<a name=\"337\" href=\"#337\">337</a> <em>     * Get a property of the service. This involves decoding the text bytes</em>\n<a name=\"338\" href=\"#338\">338</a> <em>     * into a property list. Returns null if the property is not found, the</em>\n<a name=\"339\" href=\"#339\">339</a> <em>     * text data could not be decoded correctly, or the resulting bytes are</em>\n<a name=\"340\" href=\"#340\">340</a> <em>     * not a valid UTF8 string.</em>\n<a name=\"341\" href=\"#341\">341</a> <em>     *</em>\n<a name=\"342\" href=\"#342\">342</a> <em>     * @param name TODO</em>\n<a name=\"343\" href=\"#343\">343</a> <em>     *</em>\n<a name=\"344\" href=\"#344\">344</a> <em>     * @return TODO</em>\n<a name=\"345\" href=\"#345\">345</a> <em>     */</em>\n<a name=\"346\" href=\"#346\">346</a>     <strong>public</strong> <strong>synchronized</strong> String getPropertyString(String name)\n<a name=\"347\" href=\"#347\">347</a>     {\n<a name=\"348\" href=\"#348\">348</a>         byte[] data = (byte[])getProperties().get(name);\n<a name=\"349\" href=\"#349\">349</a> \n<a name=\"350\" href=\"#350\">350</a>         <strong>if</strong>(data == <strong>null</strong>)\n<a name=\"351\" href=\"#351\">351</a>         {\n<a name=\"352\" href=\"#352\">352</a>             <strong>return</strong> <strong>null</strong>;\n<a name=\"353\" href=\"#353\">353</a>         }\n<a name=\"354\" href=\"#354\">354</a> \n<a name=\"355\" href=\"#355\">355</a>         <strong>if</strong>(data == NO_VALUE)\n<a name=\"356\" href=\"#356\">356</a>         {\n<a name=\"357\" href=\"#357\">357</a>             <strong>return</strong> <span class=\"string\">\"true\"</span>;\n<a name=\"358\" href=\"#358\">358</a>         }\n<a name=\"359\" href=\"#359\">359</a> \n<a name=\"360\" href=\"#360\">360</a>         <strong>return</strong> readUTF(data, 0, data.length);\n<a name=\"361\" href=\"#361\">361</a>     }\n<a name=\"362\" href=\"#362\">362</a> \n<a name=\"363\" href=\"#363\">363</a>     <em>/**<em>*</em></em>\n<a name=\"364\" href=\"#364\">364</a> <em>     * Get the name of the server.</em>\n<a name=\"365\" href=\"#365\">365</a> <em>     *</em>\n<a name=\"366\" href=\"#366\">366</a> <em>     * @return TODO</em>\n<a name=\"367\" href=\"#367\">367</a> <em>     */</em>\n<a name=\"368\" href=\"#368\">368</a>     <strong>public</strong> String getServer()\n<a name=\"369\" href=\"#369\">369</a>     {\n<a name=\"370\" href=\"#370\">370</a>         <strong>return</strong> server;\n<a name=\"371\" href=\"#371\">371</a>     }\n<a name=\"372\" href=\"#372\">372</a> \n<a name=\"373\" href=\"#373\">373</a>     <em>/**<em>*</em></em>\n<a name=\"374\" href=\"#374\">374</a> <em>     * Get the text for the serivce as raw bytes.</em>\n<a name=\"375\" href=\"#375\">375</a> <em>     *</em>\n<a name=\"376\" href=\"#376\">376</a> <em>     * @return TODO</em>\n<a name=\"377\" href=\"#377\">377</a> <em>     */</em>\n<a name=\"378\" href=\"#378\">378</a>     <strong>public</strong> byte[] getTextBytes()\n<a name=\"379\" href=\"#379\">379</a>     {\n<a name=\"380\" href=\"#380\">380</a>         <strong>return</strong> text;\n<a name=\"381\" href=\"#381\">381</a>     }\n<a name=\"382\" href=\"#382\">382</a> \n<a name=\"383\" href=\"#383\">383</a>     <em>/**<em>*</em></em>\n<a name=\"384\" href=\"#384\">384</a> <em>     * Get the text for the service. This will interpret the text bytes as a</em>\n<a name=\"385\" href=\"#385\">385</a> <em>     * UTF8 encoded string. Will return null if the bytes are not a valid UTF8</em>\n<a name=\"386\" href=\"#386\">386</a> <em>     * encoded string.</em>\n<a name=\"387\" href=\"#387\">387</a> <em>     *</em>\n<a name=\"388\" href=\"#388\">388</a> <em>     * @return TODO</em>\n<a name=\"389\" href=\"#389\">389</a> <em>     */</em>\n<a name=\"390\" href=\"#390\">390</a>     <strong>public</strong> String getTextString()\n<a name=\"391\" href=\"#391\">391</a>     {\n<a name=\"392\" href=\"#392\">392</a>         <strong>if</strong>((text == <strong>null</strong>) || (text.length == 0)\n<a name=\"393\" href=\"#393\">393</a>            || ((text.length == 1) &amp;&amp; (text[0] == 0)))\n<a name=\"394\" href=\"#394\">394</a>         {\n<a name=\"395\" href=\"#395\">395</a>             <strong>return</strong> <strong>null</strong>;\n<a name=\"396\" href=\"#396\">396</a>         }\n<a name=\"397\" href=\"#397\">397</a> \n<a name=\"398\" href=\"#398\">398</a>         <strong>return</strong> readUTF(text, 0, text.length);\n<a name=\"399\" href=\"#399\">399</a>     }\n<a name=\"400\" href=\"#400\">400</a> \n<a name=\"401\" href=\"#401\">401</a>     <em>/**<em>*</em></em>\n<a name=\"402\" href=\"#402\">402</a> <em>     * Fully qualified service type name, such as</em>\n<a name=\"403\" href=\"#403\">403</a> <em>     * &lt;code>_http._tcp.local.&lt;/code>.</em>\n<a name=\"404\" href=\"#404\">404</a> <em>     *</em>\n<a name=\"405\" href=\"#405\">405</a> <em>     * @return TODO</em>\n<a name=\"406\" href=\"#406\">406</a> <em>     */</em>\n<a name=\"407\" href=\"#407\">407</a>     <strong>public</strong> String getType()\n<a name=\"408\" href=\"#408\">408</a>     {\n<a name=\"409\" href=\"#409\">409</a>         <strong>return</strong> type;\n<a name=\"410\" href=\"#410\">410</a>     }\n<a name=\"411\" href=\"#411\">411</a> \n<a name=\"412\" href=\"#412\">412</a>     <em>/**<em>*</em></em>\n<a name=\"413\" href=\"#413\">413</a> <em>     * Get the URL for this service. An http URL is created by combining the</em>\n<a name=\"414\" href=\"#414\">414</a> <em>     * addres, port, and path properties.</em>\n<a name=\"415\" href=\"#415\">415</a> <em>     *</em>\n<a name=\"416\" href=\"#416\">416</a> <em>     * @return TODO</em>\n<a name=\"417\" href=\"#417\">417</a> <em>     */</em>\n<a name=\"418\" href=\"#418\">418</a>     <strong>public</strong> String getURL()\n<a name=\"419\" href=\"#419\">419</a>     {\n<a name=\"420\" href=\"#420\">420</a>         <strong>return</strong> getURL(<span class=\"string\">\"http\"</span>);\n<a name=\"421\" href=\"#421\">421</a>     }\n<a name=\"422\" href=\"#422\">422</a> \n<a name=\"423\" href=\"#423\">423</a>     <em>/**<em>*</em></em>\n<a name=\"424\" href=\"#424\">424</a> <em>     * Get the URL for this service. An URL is created by combining the</em>\n<a name=\"425\" href=\"#425\">425</a> <em>     * protocol, addres, port, and path properties.</em>\n<a name=\"426\" href=\"#426\">426</a> <em>     *</em>\n<a name=\"427\" href=\"#427\">427</a> <em>     * @param protocol TODO</em>\n<a name=\"428\" href=\"#428\">428</a> <em>     *</em>\n<a name=\"429\" href=\"#429\">429</a> <em>     * @return TODO</em>\n<a name=\"430\" href=\"#430\">430</a> <em>     */</em>\n<a name=\"431\" href=\"#431\">431</a>     <strong>public</strong> String getURL(String protocol)\n<a name=\"432\" href=\"#432\">432</a>     {\n<a name=\"433\" href=\"#433\">433</a>         String url = protocol + <span class=\"string\">\"://\"</span> + getAddress() + <span class=\"string\">\":\"</span> + getPort();\n<a name=\"434\" href=\"#434\">434</a>         String path = getPropertyString(<span class=\"string\">\"path\"</span>);\n<a name=\"435\" href=\"#435\">435</a> \n<a name=\"436\" href=\"#436\">436</a>         <strong>if</strong>(path != <strong>null</strong>)\n<a name=\"437\" href=\"#437\">437</a>         {\n<a name=\"438\" href=\"#438\">438</a>             <strong>if</strong>(path.indexOf(<span class=\"string\">\"://\"</span>) >= 0)\n<a name=\"439\" href=\"#439\">439</a>             {\n<a name=\"440\" href=\"#440\">440</a>                 url = path;\n<a name=\"441\" href=\"#441\">441</a>             }\n<a name=\"442\" href=\"#442\">442</a>             <strong>else</strong>\n<a name=\"443\" href=\"#443\">443</a>             {\n<a name=\"444\" href=\"#444\">444</a>                 url += (path.startsWith(<span class=\"string\">\"/\"</span>) ? path : (<span class=\"string\">\"/\"</span> + path));\n<a name=\"445\" href=\"#445\">445</a>             }\n<a name=\"446\" href=\"#446\">446</a>         }\n<a name=\"447\" href=\"#447\">447</a> \n<a name=\"448\" href=\"#448\">448</a>         <strong>return</strong> url;\n<a name=\"449\" href=\"#449\">449</a>     }\n<a name=\"450\" href=\"#450\">450</a> \n<a name=\"451\" href=\"#451\">451</a>     <em>/**<em>*</em></em>\n<a name=\"452\" href=\"#452\">452</a> <em>     * Get the weight of the service.</em>\n<a name=\"453\" href=\"#453\">453</a> <em>     *</em>\n<a name=\"454\" href=\"#454\">454</a> <em>     * @return TODO</em>\n<a name=\"455\" href=\"#455\">455</a> <em>     */</em>\n<a name=\"456\" href=\"#456\">456</a>     <strong>public</strong> <strong>int</strong> getWeight()\n<a name=\"457\" href=\"#457\">457</a>     {\n<a name=\"458\" href=\"#458\">458</a>         <strong>return</strong> weight;\n<a name=\"459\" href=\"#459\">459</a>     }\n<a name=\"460\" href=\"#460\">460</a> \n<a name=\"461\" href=\"#461\">461</a>     <em>/**<em>*</em></em>\n<a name=\"462\" href=\"#462\">462</a> <em>     * TODO</em>\n<a name=\"463\" href=\"#463\">463</a> <em>     *</em>\n<a name=\"464\" href=\"#464\">464</a> <em>     * @param obj TODO</em>\n<a name=\"465\" href=\"#465\">465</a> <em>     *</em>\n<a name=\"466\" href=\"#466\">466</a> <em>     * @return TODO</em>\n<a name=\"467\" href=\"#467\">467</a> <em>     */</em>\n<a name=\"468\" href=\"#468\">468</a>     <strong>public</strong> <strong>boolean</strong> equals(Object obj)\n<a name=\"469\" href=\"#469\">469</a>     {\n<a name=\"470\" href=\"#470\">470</a>         <strong>return</strong> (obj instanceof ServiceInfo)\n<a name=\"471\" href=\"#471\">471</a>                &amp;&amp; name.equals(((ServiceInfo)obj).name);\n<a name=\"472\" href=\"#472\">472</a>     }\n<a name=\"473\" href=\"#473\">473</a> \n<a name=\"474\" href=\"#474\">474</a>     <em>/**<em>*</em></em>\n<a name=\"475\" href=\"#475\">475</a> <em>     * TODO</em>\n<a name=\"476\" href=\"#476\">476</a> <em>     *</em>\n<a name=\"477\" href=\"#477\">477</a> <em>     * @return TODO</em>\n<a name=\"478\" href=\"#478\">478</a> <em>     */</em>\n<a name=\"479\" href=\"#479\">479</a>     <strong>public</strong> <strong>int</strong> hashCode()\n<a name=\"480\" href=\"#480\">480</a>     {\n<a name=\"481\" href=\"#481\">481</a>         <strong>return</strong> name.hashCode();\n<a name=\"482\" href=\"#482\">482</a>     }\n<a name=\"483\" href=\"#483\">483</a> \n<a name=\"484\" href=\"#484\">484</a>     <em>/**<em>*</em></em>\n<a name=\"485\" href=\"#485\">485</a> <em>     * TODO</em>\n<a name=\"486\" href=\"#486\">486</a> <em>     *</em>\n<a name=\"487\" href=\"#487\">487</a> <em>     * @return TODO</em>\n<a name=\"488\" href=\"#488\">488</a> <em>     */</em>\n<a name=\"489\" href=\"#489\">489</a>     <strong>public</strong> String toString()\n<a name=\"490\" href=\"#490\">490</a>     {\n<a name=\"491\" href=\"#491\">491</a>         StringBuffer buf = <strong>new</strong> StringBuffer();\n<a name=\"492\" href=\"#492\">492</a> \n<a name=\"493\" href=\"#493\">493</a>         buf.append(<span class=\"string\">\"service[\"</span>);\n<a name=\"494\" href=\"#494\">494</a>         buf.append(name);\n<a name=\"495\" href=\"#495\">495</a>         buf.append(',');\n<a name=\"496\" href=\"#496\">496</a>         buf.append(getAddress());\n<a name=\"497\" href=\"#497\">497</a>         buf.append(':');\n<a name=\"498\" href=\"#498\">498</a>         buf.append(port);\n<a name=\"499\" href=\"#499\">499</a>         buf.append(',');\n<a name=\"500\" href=\"#500\">500</a>         buf.append(getNiceTextString());\n<a name=\"501\" href=\"#501\">501</a>         buf.append(']');\n<a name=\"502\" href=\"#502\">502</a> \n<a name=\"503\" href=\"#503\">503</a>         <strong>return</strong> buf.toString();\n<a name=\"504\" href=\"#504\">504</a>     }\n<a name=\"505\" href=\"#505\">505</a> \n<a name=\"506\" href=\"#506\">506</a>     <em>/**<em>*</em></em>\n<a name=\"507\" href=\"#507\">507</a> <em>     * Get the ip address of the service.</em>\n<a name=\"508\" href=\"#508\">508</a> <em>     *</em>\n<a name=\"509\" href=\"#509\">509</a> <em>     * @return TODO</em>\n<a name=\"510\" href=\"#510\">510</a> <em>     */</em>\n<a name=\"511\" href=\"#511\">511</a>     <strong>int</strong> getIPAddress()\n<a name=\"512\" href=\"#512\">512</a>     {\n<a name=\"513\" href=\"#513\">513</a>         byte[] data = addr.getAddress();\n<a name=\"514\" href=\"#514\">514</a> \n<a name=\"515\" href=\"#515\">515</a>         <strong>return</strong> ((data[0] &amp; 0xFF) &lt;&lt; 24) | ((data[1] &amp; 0xFF) &lt;&lt; 16)\n<a name=\"516\" href=\"#516\">516</a>                | ((data[2] &amp; 0xFF) &lt;&lt; 8) | (data[3] &amp; 0xFF);\n<a name=\"517\" href=\"#517\">517</a>     }\n<a name=\"518\" href=\"#518\">518</a> \n<a name=\"519\" href=\"#519\">519</a>     <em>/**<em>*</em></em>\n<a name=\"520\" href=\"#520\">520</a> <em>     * TODO</em>\n<a name=\"521\" href=\"#521\">521</a> <em>     *</em>\n<a name=\"522\" href=\"#522\">522</a> <em>     * @return TODO</em>\n<a name=\"523\" href=\"#523\">523</a> <em>     */</em>\n<a name=\"524\" href=\"#524\">524</a>     <strong>synchronized</strong> Hashtable getProperties()\n<a name=\"525\" href=\"#525\">525</a>     {\n<a name=\"526\" href=\"#526\">526</a>         <strong>if</strong>((props == <strong>null</strong>) &amp;&amp; (text != <strong>null</strong>))\n<a name=\"527\" href=\"#527\">527</a>         {\n<a name=\"528\" href=\"#528\">528</a>             Hashtable props = <strong>new</strong> Hashtable();\n<a name=\"529\" href=\"#529\">529</a>             <strong>int</strong> off = 0;\n<a name=\"530\" href=\"#530\">530</a> \n<a name=\"531\" href=\"#531\">531</a>             <strong>while</strong>(off &lt; text.length)\n<a name=\"532\" href=\"#532\">532</a>             {\n<a name=\"533\" href=\"#533\">533</a>                 <em class=\"comment\">// length of the next key value pair</em>\n<a name=\"534\" href=\"#534\">534</a>                 <strong>int</strong> len = text[off++] &amp; 0xFF;\n<a name=\"535\" href=\"#535\">535</a> \n<a name=\"536\" href=\"#536\">536</a>                 <strong>if</strong>((len == 0) || ((off + len) > text.length))\n<a name=\"537\" href=\"#537\">537</a>                 {\n<a name=\"538\" href=\"#538\">538</a>                     props.clear();\n<a name=\"539\" href=\"#539\">539</a> \n<a name=\"540\" href=\"#540\">540</a>                     <strong>break</strong>;\n<a name=\"541\" href=\"#541\">541</a>                 }\n<a name=\"542\" href=\"#542\">542</a> \n<a name=\"543\" href=\"#543\">543</a>                 <em class=\"comment\">// look for the '='</em>\n<a name=\"544\" href=\"#544\">544</a>                 <strong>int</strong> i = 0;\n<a name=\"545\" href=\"#545\">545</a> \n<a name=\"546\" href=\"#546\">546</a>                 <strong>for</strong>(; (i &lt; len) &amp;&amp; (text[off + i] != '='); i++)\n<a name=\"547\" href=\"#547\">547</a>                 {\n<a name=\"548\" href=\"#548\">548</a>                     ;\n<a name=\"549\" href=\"#549\">549</a>                 }\n<a name=\"550\" href=\"#550\">550</a> \n<a name=\"551\" href=\"#551\">551</a>                 <em class=\"comment\">// get the property name</em>\n<a name=\"552\" href=\"#552\">552</a>                 String name = readUTF(text, off, i);\n<a name=\"553\" href=\"#553\">553</a> \n<a name=\"554\" href=\"#554\">554</a>                 <strong>if</strong>(name == <strong>null</strong>)\n<a name=\"555\" href=\"#555\">555</a>                 {\n<a name=\"556\" href=\"#556\">556</a>                     props.clear();\n<a name=\"557\" href=\"#557\">557</a> \n<a name=\"558\" href=\"#558\">558</a>                     <strong>break</strong>;\n<a name=\"559\" href=\"#559\">559</a>                 }\n<a name=\"560\" href=\"#560\">560</a> \n<a name=\"561\" href=\"#561\">561</a>                 <strong>if</strong>(i == len)\n<a name=\"562\" href=\"#562\">562</a>                 {\n<a name=\"563\" href=\"#563\">563</a>                     props.put(name, NO_VALUE);\n<a name=\"564\" href=\"#564\">564</a>                 }\n<a name=\"565\" href=\"#565\">565</a>                 <strong>else</strong>\n<a name=\"566\" href=\"#566\">566</a>                 {\n<a name=\"567\" href=\"#567\">567</a>                     byte[] value = <strong>new</strong> byte[len - ++i];\n<a name=\"568\" href=\"#568\">568</a> \n<a name=\"569\" href=\"#569\">569</a>                     System.arraycopy(text, off + i, value, 0, len - i);\n<a name=\"570\" href=\"#570\">570</a>                     props.put(name, value);\n<a name=\"571\" href=\"#571\">571</a>                     off += len;\n<a name=\"572\" href=\"#572\">572</a>                 }\n<a name=\"573\" href=\"#573\">573</a>             }\n<a name=\"574\" href=\"#574\">574</a> \n<a name=\"575\" href=\"#575\">575</a>             <strong>this</strong>.props = props;\n<a name=\"576\" href=\"#576\">576</a>         }\n<a name=\"577\" href=\"#577\">577</a> \n<a name=\"578\" href=\"#578\">578</a>         <strong>return</strong> props;\n<a name=\"579\" href=\"#579\">579</a>     }\n<a name=\"580\" href=\"#580\">580</a> \n<a name=\"581\" href=\"#581\">581</a>     <em>/**<em>*</em></em>\n<a name=\"582\" href=\"#582\">582</a> <em>     * Read data bytes as a UTF stream.</em>\n<a name=\"583\" href=\"#583\">583</a> <em>     *</em>\n<a name=\"584\" href=\"#584\">584</a> <em>     * @param data TODO</em>\n<a name=\"585\" href=\"#585\">585</a> <em>     * @param off TODO</em>\n<a name=\"586\" href=\"#586\">586</a> <em>     * @param len TODO</em>\n<a name=\"587\" href=\"#587\">587</a> <em>     *</em>\n<a name=\"588\" href=\"#588\">588</a> <em>     * @return TODO</em>\n<a name=\"589\" href=\"#589\">589</a> <em>     */</em>\n<a name=\"590\" href=\"#590\">590</a>     String readUTF(byte[] data, <strong>int</strong> off, <strong>int</strong> len)\n<a name=\"591\" href=\"#591\">591</a>     {\n<a name=\"592\" href=\"#592\">592</a>         StringBuffer buf = <strong>new</strong> StringBuffer();\n<a name=\"593\" href=\"#593\">593</a> \n<a name=\"594\" href=\"#594\">594</a>         <strong>for</strong>(<strong>int</strong> end = off + len; off &lt; end;)\n<a name=\"595\" href=\"#595\">595</a>         {\n<a name=\"596\" href=\"#596\">596</a>             <strong>int</strong> ch = data[off++] &amp; 0xFF;\n<a name=\"597\" href=\"#597\">597</a> \n<a name=\"598\" href=\"#598\">598</a>             <strong>switch</strong>(ch >> 4)\n<a name=\"599\" href=\"#599\">599</a>             {\n<a name=\"600\" href=\"#600\">600</a>             <strong>case</strong> 0:\n<a name=\"601\" href=\"#601\">601</a>             <strong>case</strong> 1:\n<a name=\"602\" href=\"#602\">602</a>             <strong>case</strong> 2:\n<a name=\"603\" href=\"#603\">603</a>             <strong>case</strong> 3:\n<a name=\"604\" href=\"#604\">604</a>             <strong>case</strong> 4:\n<a name=\"605\" href=\"#605\">605</a>             <strong>case</strong> 5:\n<a name=\"606\" href=\"#606\">606</a>             <strong>case</strong> 6:\n<a name=\"607\" href=\"#607\">607</a>             <strong>case</strong> 7:\n<a name=\"608\" href=\"#608\">608</a> \n<a name=\"609\" href=\"#609\">609</a>                 <em class=\"comment\">// 0xxxxxxx</em>\n<a name=\"610\" href=\"#610\">610</a>                 <strong>break</strong>;\n<a name=\"611\" href=\"#611\">611</a> \n<a name=\"612\" href=\"#612\">612</a>             <strong>case</strong> 12:\n<a name=\"613\" href=\"#613\">613</a>             <strong>case</strong> 13:\n<a name=\"614\" href=\"#614\">614</a>                 <strong>if</strong>(off >= len)\n<a name=\"615\" href=\"#615\">615</a>                 {\n<a name=\"616\" href=\"#616\">616</a>                     <strong>return</strong> <strong>null</strong>;\n<a name=\"617\" href=\"#617\">617</a>                 }\n<a name=\"618\" href=\"#618\">618</a> \n<a name=\"619\" href=\"#619\">619</a>                 <em class=\"comment\">// 110x xxxx   10xx xxxx</em>\n<a name=\"620\" href=\"#620\">620</a>                 ch = ((ch &amp; 0x1F) &lt;&lt; 6) | (data[off++] &amp; 0x3F);\n<a name=\"621\" href=\"#621\">621</a> \n<a name=\"622\" href=\"#622\">622</a>                 <strong>break</strong>;\n<a name=\"623\" href=\"#623\">623</a> \n<a name=\"624\" href=\"#624\">624</a>             <strong>case</strong> 14:\n<a name=\"625\" href=\"#625\">625</a>                 <strong>if</strong>((off + 2) >= len)\n<a name=\"626\" href=\"#626\">626</a>                 {\n<a name=\"627\" href=\"#627\">627</a>                     <strong>return</strong> <strong>null</strong>;\n<a name=\"628\" href=\"#628\">628</a>                 }\n<a name=\"629\" href=\"#629\">629</a> \n<a name=\"630\" href=\"#630\">630</a>                 <em class=\"comment\">// 1110 xxxx  10xx xxxx  10xx xxxx</em>\n<a name=\"631\" href=\"#631\">631</a>                 ch = ((ch &amp; 0x0f) &lt;&lt; 12) | ((data[off++] &amp; 0x3F) &lt;&lt; 6)\n<a name=\"632\" href=\"#632\">632</a>                      | (data[off++] &amp; 0x3F);\n<a name=\"633\" href=\"#633\">633</a> \n<a name=\"634\" href=\"#634\">634</a>                 <strong>break</strong>;\n<a name=\"635\" href=\"#635\">635</a> \n<a name=\"636\" href=\"#636\">636</a>             <strong>default</strong>:\n<a name=\"637\" href=\"#637\">637</a>                 <strong>if</strong>((off + 1) >= len)\n<a name=\"638\" href=\"#638\">638</a>                 {\n<a name=\"639\" href=\"#639\">639</a>                     <strong>return</strong> <strong>null</strong>;\n<a name=\"640\" href=\"#640\">640</a>                 }\n<a name=\"641\" href=\"#641\">641</a> \n<a name=\"642\" href=\"#642\">642</a>                 <em class=\"comment\">// 10xx xxxx,  1111 xxxx</em>\n<a name=\"643\" href=\"#643\">643</a>                 ch = ((ch &amp; 0x3F) &lt;&lt; 4) | (data[off++] &amp; 0x0f);\n<a name=\"644\" href=\"#644\">644</a> \n<a name=\"645\" href=\"#645\">645</a>                 <strong>break</strong>;\n<a name=\"646\" href=\"#646\">646</a>             }\n<a name=\"647\" href=\"#647\">647</a> \n<a name=\"648\" href=\"#648\">648</a>             buf.append((<strong>char</strong>)ch);\n<a name=\"649\" href=\"#649\">649</a>         }\n<a name=\"650\" href=\"#650\">650</a> \n<a name=\"651\" href=\"#651\">651</a>         <strong>return</strong> buf.toString();\n<a name=\"652\" href=\"#652\">652</a>     }\n<a name=\"653\" href=\"#653\">653</a> \n<a name=\"654\" href=\"#654\">654</a>     <em>/**<em>*</em></em>\n<a name=\"655\" href=\"#655\">655</a> <em>     * Update the server information from the cache, send out repeated DNS</em>\n<a name=\"656\" href=\"#656\">656</a> <em>     * queries for updated information.</em>\n<a name=\"657\" href=\"#657\">657</a> <em>     *</em>\n<a name=\"658\" href=\"#658\">658</a> <em>     * @param jmdns TODO</em>\n<a name=\"659\" href=\"#659\">659</a> <em>     * @param timeout TODO</em>\n<a name=\"660\" href=\"#660\">660</a> <em>     *</em>\n<a name=\"661\" href=\"#661\">661</a> <em>     * @return TODO</em>\n<a name=\"662\" href=\"#662\">662</a> <em>     */</em>\n<a name=\"663\" href=\"#663\">663</a>     <strong>boolean</strong> request(<a href=\"../../javax/jmdns/JmDNS.html\">JmDNS</a> jmdns, <strong>long</strong> timeout)\n<a name=\"664\" href=\"#664\">664</a>     {\n<a name=\"665\" href=\"#665\">665</a>         <strong>long</strong> now = System.currentTimeMillis();\n<a name=\"666\" href=\"#666\">666</a>         <strong>int</strong> delay = 200;\n<a name=\"667\" href=\"#667\">667</a>         <strong>long</strong> next = now + delay;\n<a name=\"668\" href=\"#668\">668</a>         <strong>long</strong> last = now + timeout;\n<a name=\"669\" href=\"#669\">669</a> \n<a name=\"670\" href=\"#670\">670</a>         <strong>try</strong>\n<a name=\"671\" href=\"#671\">671</a>         {\n<a name=\"672\" href=\"#672\">672</a>             jmdns.addListener(<strong>this</strong>, <strong>new</strong> <a href=\"../../javax/jmdns/DNSQuestion.html\">DNSQuestion</a>(name, TYPE_ANY, CLASS_IN));\n<a name=\"673\" href=\"#673\">673</a> \n<a name=\"674\" href=\"#674\">674</a>             <strong>while</strong>((server == <strong>null</strong>) || (addr == <strong>null</strong>) || (text == <strong>null</strong>))\n<a name=\"675\" href=\"#675\">675</a>             {\n<a name=\"676\" href=\"#676\">676</a>                 <em class=\"comment\">// check if timeout was reached</em>\n<a name=\"677\" href=\"#677\">677</a>                 <strong>if</strong>(last &lt;= now)\n<a name=\"678\" href=\"#678\">678</a>                 {\n<a name=\"679\" href=\"#679\">679</a>                     <strong>return</strong> false;\n<a name=\"680\" href=\"#680\">680</a>                 }\n<a name=\"681\" href=\"#681\">681</a> \n<a name=\"682\" href=\"#682\">682</a>                 <em class=\"comment\">// check if we need to send out another request</em>\n<a name=\"683\" href=\"#683\">683</a>                 <strong>if</strong>(next &lt;= now)\n<a name=\"684\" href=\"#684\">684</a>                 {\n<a name=\"685\" href=\"#685\">685</a>                     <a href=\"../../javax/jmdns/DNSOutgoing.html\">DNSOutgoing</a> out = <strong>new</strong> <a href=\"../../javax/jmdns/DNSOutgoing.html\">DNSOutgoing</a>(FLAGS_QR_QUERY);\n<a name=\"686\" href=\"#686\">686</a> \n<a name=\"687\" href=\"#687\">687</a>                     out.addQuestion(<strong>new</strong> <a href=\"../../javax/jmdns/DNSQuestion.html\">DNSQuestion</a>(name, TYPE_SRV, CLASS_IN));\n<a name=\"688\" href=\"#688\">688</a>                     out.addQuestion(<strong>new</strong> <a href=\"../../javax/jmdns/DNSQuestion.html\">DNSQuestion</a>(name, TYPE_TXT, CLASS_IN));\n<a name=\"689\" href=\"#689\">689</a> \n<a name=\"690\" href=\"#690\">690</a>                     <strong>if</strong>(server != <strong>null</strong>)\n<a name=\"691\" href=\"#691\">691</a>                     {\n<a name=\"692\" href=\"#692\">692</a>                         out.addQuestion(<strong>new</strong> <a href=\"../../javax/jmdns/DNSQuestion.html\">DNSQuestion</a>(server, TYPE_A, CLASS_IN));\n<a name=\"693\" href=\"#693\">693</a>                     }\n<a name=\"694\" href=\"#694\">694</a> \n<a name=\"695\" href=\"#695\">695</a>                     out.addAnswer((DNSRecord)jmdns.cache.get(name, TYPE_SRV,\n<a name=\"696\" href=\"#696\">696</a>                                                              CLASS_IN), now);\n<a name=\"697\" href=\"#697\">697</a>                     out.addAnswer((DNSRecord)jmdns.cache.get(name, TYPE_TXT,\n<a name=\"698\" href=\"#698\">698</a>                                                              CLASS_IN), now);\n<a name=\"699\" href=\"#699\">699</a> \n<a name=\"700\" href=\"#700\">700</a>                     <strong>if</strong>(server != <strong>null</strong>)\n<a name=\"701\" href=\"#701\">701</a>                     {\n<a name=\"702\" href=\"#702\">702</a>                         out.addAnswer((DNSRecord)jmdns.cache.get(server,\n<a name=\"703\" href=\"#703\">703</a>                                                                  TYPE_A,\n<a name=\"704\" href=\"#704\">704</a>                                                                  CLASS_IN), now);\n<a name=\"705\" href=\"#705\">705</a>                     }\n<a name=\"706\" href=\"#706\">706</a> \n<a name=\"707\" href=\"#707\">707</a>                     jmdns.send(out);\n<a name=\"708\" href=\"#708\">708</a> \n<a name=\"709\" href=\"#709\">709</a>                     next = now + delay;\n<a name=\"710\" href=\"#710\">710</a>                     delay = delay * 2;\n<a name=\"711\" href=\"#711\">711</a>                 }\n<a name=\"712\" href=\"#712\">712</a> \n<a name=\"713\" href=\"#713\">713</a>                 <em class=\"comment\">// wait for an update or a timeout</em>\n<a name=\"714\" href=\"#714\">714</a>                 <strong>synchronized</strong>(jmdns)\n<a name=\"715\" href=\"#715\">715</a>                 {\n<a name=\"716\" href=\"#716\">716</a>                     jmdns.wait(Math.min(next, last) - now);\n<a name=\"717\" href=\"#717\">717</a>                 }\n<a name=\"718\" href=\"#718\">718</a> \n<a name=\"719\" href=\"#719\">719</a>                 now = System.currentTimeMillis();\n<a name=\"720\" href=\"#720\">720</a>             }\n<a name=\"721\" href=\"#721\">721</a> \n<a name=\"722\" href=\"#722\">722</a>             <strong>return</strong> <strong>true</strong>;\n<a name=\"723\" href=\"#723\">723</a>         }\n<a name=\"724\" href=\"#724\">724</a>         <strong>catch</strong>(IOException e)\n<a name=\"725\" href=\"#725\">725</a>         {\n<a name=\"726\" href=\"#726\">726</a>             <strong>return</strong> false;\n<a name=\"727\" href=\"#727\">727</a>         }\n<a name=\"728\" href=\"#728\">728</a>         <strong>catch</strong>(InterruptedException e)\n<a name=\"729\" href=\"#729\">729</a>         {\n<a name=\"730\" href=\"#730\">730</a>             <strong>return</strong> false;\n<a name=\"731\" href=\"#731\">731</a>         }\n<a name=\"732\" href=\"#732\">732</a>         <strong>finally</strong>\n<a name=\"733\" href=\"#733\">733</a>         {\n<a name=\"734\" href=\"#734\">734</a>             jmdns.removeListener(<strong>this</strong>);\n<a name=\"735\" href=\"#735\">735</a>         }\n<a name=\"736\" href=\"#736\">736</a>     }\n<a name=\"737\" href=\"#737\">737</a> \n<a name=\"738\" href=\"#738\">738</a>     <em>/**<em>*</em></em>\n<a name=\"739\" href=\"#739\">739</a> <em>     * JmDNS callback to update a DNS record.</em>\n<a name=\"740\" href=\"#740\">740</a> <em>     *</em>\n<a name=\"741\" href=\"#741\">741</a> <em>     * @param jmdns TODO</em>\n<a name=\"742\" href=\"#742\">742</a> <em>     * @param now TODO</em>\n<a name=\"743\" href=\"#743\">743</a> <em>     * @param rec TODO</em>\n<a name=\"744\" href=\"#744\">744</a> <em>     */</em>\n<a name=\"745\" href=\"#745\">745</a>     <strong>void</strong> updateRecord(<a href=\"../../javax/jmdns/JmDNS.html\">JmDNS</a> jmdns, <strong>long</strong> now, <a href=\"../../javax/jmdns/DNSRecord.html\">DNSRecord</a> rec)\n<a name=\"746\" href=\"#746\">746</a>     {\n<a name=\"747\" href=\"#747\">747</a>         <strong>if</strong>((rec != <strong>null</strong>) &amp;&amp; !rec.isExpired(now))\n<a name=\"748\" href=\"#748\">748</a>         {\n<a name=\"749\" href=\"#749\">749</a>             <strong>switch</strong>(rec.type)\n<a name=\"750\" href=\"#750\">750</a>             {\n<a name=\"751\" href=\"#751\">751</a>             <strong>case</strong> TYPE_A:\n<a name=\"752\" href=\"#752\">752</a>                 <strong>if</strong>(rec.name.equals(server))\n<a name=\"753\" href=\"#753\">753</a>                 {\n<a name=\"754\" href=\"#754\">754</a>                     addr = ((DNSRecord.Address)rec).getInetAddress();\n<a name=\"755\" href=\"#755\">755</a>                 }\n<a name=\"756\" href=\"#756\">756</a> \n<a name=\"757\" href=\"#757\">757</a>                 <strong>break</strong>;\n<a name=\"758\" href=\"#758\">758</a> \n<a name=\"759\" href=\"#759\">759</a>             <strong>case</strong> TYPE_SRV:\n<a name=\"760\" href=\"#760\">760</a>                 <strong>if</strong>(rec.name.equals(name))\n<a name=\"761\" href=\"#761\">761</a>                 {\n<a name=\"762\" href=\"#762\">762</a>                     DNSRecord.Service srv = (DNSRecord.Service)rec;\n<a name=\"763\" href=\"#763\">763</a> \n<a name=\"764\" href=\"#764\">764</a>                     server = srv.server;\n<a name=\"765\" href=\"#765\">765</a>                     port = srv.port;\n<a name=\"766\" href=\"#766\">766</a>                     weight = srv.weight;\n<a name=\"767\" href=\"#767\">767</a>                     priority = srv.priority;\n<a name=\"768\" href=\"#768\">768</a>                     addr = <strong>null</strong>;\n<a name=\"769\" href=\"#769\">769</a>                     updateRecord(jmdns, now,\n<a name=\"770\" href=\"#770\">770</a>                                  (<a href=\"../../javax/jmdns/DNSRecord.html\">DNSRecord</a>)jmdns.cache.get(server, TYPE_A,\n<a name=\"771\" href=\"#771\">771</a>                                                             CLASS_IN));\n<a name=\"772\" href=\"#772\">772</a>                 }\n<a name=\"773\" href=\"#773\">773</a> \n<a name=\"774\" href=\"#774\">774</a>                 <strong>break</strong>;\n<a name=\"775\" href=\"#775\">775</a> \n<a name=\"776\" href=\"#776\">776</a>             <strong>case</strong> TYPE_TXT:\n<a name=\"777\" href=\"#777\">777</a>                 <strong>if</strong>(rec.name.equals(name))\n<a name=\"778\" href=\"#778\">778</a>                 {\n<a name=\"779\" href=\"#779\">779</a>                     DNSRecord.Text txt = (DNSRecord.Text)rec;\n<a name=\"780\" href=\"#780\">780</a> \n<a name=\"781\" href=\"#781\">781</a>                     text = txt.text;\n<a name=\"782\" href=\"#782\">782</a>                 }\n<a name=\"783\" href=\"#783\">783</a> \n<a name=\"784\" href=\"#784\">784</a>                 <strong>break</strong>;\n<a name=\"785\" href=\"#785\">785</a>             }\n<a name=\"786\" href=\"#786\">786</a>         }\n<a name=\"787\" href=\"#787\">787</a>     }\n<a name=\"788\" href=\"#788\">788</a> \n<a name=\"789\" href=\"#789\">789</a>     <em>/**<em>*</em></em>\n<a name=\"790\" href=\"#790\">790</a> <em>     * Write a UTF string with a length to a stream.</em>\n<a name=\"791\" href=\"#791\">791</a> <em>     *</em>\n<a name=\"792\" href=\"#792\">792</a> <em>     * @param out TODO</em>\n<a name=\"793\" href=\"#793\">793</a> <em>     * @param str TODO</em>\n<a name=\"794\" href=\"#794\">794</a> <em>     *</em>\n<a name=\"795\" href=\"#795\">795</a> <em>     * @throws IOException TODO</em>\n<a name=\"796\" href=\"#796\">796</a> <em>     */</em>\n<a name=\"797\" href=\"#797\">797</a>     <strong>void</strong> writeUTF(OutputStream out, String str) throws IOException\n<a name=\"798\" href=\"#798\">798</a>     {\n<a name=\"799\" href=\"#799\">799</a>         <strong>for</strong>(<strong>int</strong> i = 0, len = str.length(); i &lt; len; i++)\n<a name=\"800\" href=\"#800\">800</a>         {\n<a name=\"801\" href=\"#801\">801</a>             <strong>int</strong> c = str.charAt(i);\n<a name=\"802\" href=\"#802\">802</a> \n<a name=\"803\" href=\"#803\">803</a>             <strong>if</strong>((c >= 0x0001) &amp;&amp; (c &lt;= 0x007F))\n<a name=\"804\" href=\"#804\">804</a>             {\n<a name=\"805\" href=\"#805\">805</a>                 out.write(c);\n<a name=\"806\" href=\"#806\">806</a>             }\n<a name=\"807\" href=\"#807\">807</a>             <strong>else</strong> <strong>if</strong>(c > 0x07FF)\n<a name=\"808\" href=\"#808\">808</a>             {\n<a name=\"809\" href=\"#809\">809</a>                 out.write(0xE0 | ((c >> 12) &amp; 0x0F));\n<a name=\"810\" href=\"#810\">810</a>                 out.write(0x80 | ((c >> 6) &amp; 0x3F));\n<a name=\"811\" href=\"#811\">811</a>                 out.write(0x80 | ((c >> 0) &amp; 0x3F));\n<a name=\"812\" href=\"#812\">812</a>             }\n<a name=\"813\" href=\"#813\">813</a>             <strong>else</strong>\n<a name=\"814\" href=\"#814\">814</a>             {\n<a name=\"815\" href=\"#815\">815</a>                 out.write(0xC0 | ((c >> 6) &amp; 0x1F));\n<a name=\"816\" href=\"#816\">816</a>                 out.write(0x80 | ((c >> 0) &amp; 0x3F));\n<a name=\"817\" href=\"#817\">817</a>             }\n<a name=\"818\" href=\"#818\">818</a>         }\n<a name=\"819\" href=\"#819\">819</a>     }\n<a name=\"820\" href=\"#820\">820</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 32797.0}