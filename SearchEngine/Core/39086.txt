{"text": "Navigation Up Table of Contents Bibliography Index Title Page MinSphereOfSpheresTraits Definition A model of concept MinSphereOfSpheresTraits must provide the following constants types predicates and operations Has ModelsCGAL Min sphere of spheres d traits 2 K FT UseSqrt Algorithm CGAL Min sphere of spheres d traits 3 K FT UseSqrt Algorithm CGAL Min sphere of spheres d traits d K FT Dim UseSqrt Algorithm Constants MinSphereOfSpheresTraits D specifies the dimension of the spheres you want to compute the minsphere of Types MinSphereOfSpheresTraits Sphere is a typedef to to some class representing a sphere The package will compute the minsphere of spheres of type Sphere The type Sphere must provide a copy constructor MinSphereOfSpheresTraits FT is a exact or inexact field number type Requirement Currently FT must either be double or float or an exact field number type An exact number type is one which evaluates arithmetic expressions involving the four basic operations and comparisions with infinite precision that is like in MinSphereOfSpheresTraits Cartesian const iterator non mutable model of the STL concept ForwardIterator with value type FT Used to access the center coordinates of a sphere MinSphereOfSpheresTraits Use square roots must typedef to either CGAL Tag true or CGAL Tag false The algorithm uses depending on the type MinSphereOfSpheresTraits Algorithm floating point arithmetic internally for some intermediate computations The type Use square roots affects how these calculations are done When Use square roots is Tag true the algorithm computing the minsphere will perform square root operations on doubles and floats where appropriate On the other hand if Use square roots is CGAL Tag false the algorithm will work without doing square roots Note On some platforms the algorithm is much faster when square roots are disabled due to lacking hardware support MinSphereOfSpheresTraits Algorithm selects the method to compute the minsphere with It must typedef to either CGAL Default algorithm CGAL LP algorithm or CGAL Farthest first heuristic The recommended choice is the first which is a synonym to the one of the other two methods which we consider the best in practice In case of CGAL LP algorithm the minsphere will be computed using the LP algorithm MSW92 which in our implementation has maximal expected running time O 2d n in the number of operations on the number type FT In case of CGAL Farthest first heuristic a simple heuristic will be used instead which seems to work fine in practice but comes without a guarantee on the running time For an inexact number type FT we strongly recommend CGAL Default algorithm or if you want CGAL Farthest first heuristic since these handle most degeneracies in a satisfying manner Notice that this compile time flag is taken as a hint only Should one of the methods not be available anymore in a future release then the default algorithm will be chosen Access Functions FT traits radius Sphere s returns the radius of sphere s Postcondition The returned number is greater or equal to Cartesian const iterator traits center cartesian begin Sphere s returns an iterator referring to the first of the D Cartesian coordinates of the center of s Next Min sphere of spheres d traits 2 K FT UseSqrt Algorithm Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Optimisation_ref/Concept_MinSphereOfSpheresTraits.html", "title": "minsphereofspherestraits", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Optimisation_ref/Traits.tex' -->\n<html> <head>  \n<title>MinSphereOfSpheresTraits</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_1168\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_1198\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Concept.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_MinSphereOfSpheresTraits\"></A>\n<h2><I>MinSphereOfSpheresTraits</I></h2>\n<P>\n\n<H3>Definition</H3>\n<P>\n\nA model of concept <I><A HREF=\"Concept_MinSphereOfSpheresTraits.html#Cross_link_anchor_1168\">MinSphereOfSpheresTraits</A></I> must provide the\nfollowing constants, types, predicates and operations.\n<P>\n\n<H3>Has Models</H3><I><A HREF=\"Class_Min_sphere_of_spheres_d_traits_2.html#Cross_link_anchor_1169\">CGAL::Min_sphere_of_spheres_d_traits_2</A>&lt;K,FT,UseSqrt,Algorithm&gt;</I><BR>\n\n<I><A HREF=\"Class_Min_sphere_of_spheres_d_traits_3.html#Cross_link_anchor_1171\">CGAL::Min_sphere_of_spheres_d_traits_3</A>&lt;K,FT,UseSqrt,Algorithm&gt;</I><BR>\n\n<I><A HREF=\"Class_Min_sphere_of_spheres_d_traits_d.html#Cross_link_anchor_1173\">CGAL::Min_sphere_of_spheres_d_traits_d</A>&lt;K,FT,Dim,UseSqrt,Algorithm&gt;</I>\n<P>\n\n<H3>Constants</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_MinSphereOfSpheresTraits.html#Cross_link_anchor_1168\">MinSphereOfSpheresTraits</A>::D\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    specifies the dimension of the spheres you want to\n  compute the minsphere of.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Types</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_MinSphereOfSpheresTraits.html#Cross_link_anchor_1168\">MinSphereOfSpheresTraits</A>::Sphere\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    is a typedef to to some class representing a sphere.\n(The package will compute the minsphere of spheres of type\n<I>Sphere</I>.)  The type <I>Sphere</I> must provide a copy constructor.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_MinSphereOfSpheresTraits.html#Cross_link_anchor_1168\">MinSphereOfSpheresTraits</A>::FT\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    is a (exact or inexact) field number type.<BR>\n\n<EM>Requirement: </EM>Currently, <I>FT</I> must either be <I>double</I> or\n  <I>float</I>, or an exact field number type.  (An <I>exact</I> number\n  type is one which evaluates arithmetic expressions involving the\n  four basic operations and comparisions with infinite precision, that\n  is, like in&nbsp;<MATH><I> <IMG BORDER=0 WIDTH=13 HEIGHT=12 ALIGN=BOTTOM SRC=\"cc_mathbb_R.gif\"> </I></MATH>.)\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_MinSphereOfSpheresTraits.html#Cross_link_anchor_1168\">MinSphereOfSpheresTraits</A>::Cartesian_const_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    non-mutable model of the STL\nconcept <I>ForwardIterator</I> with value type <I>FT</I>. Used\nto access the center coordinates of a sphere.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_MinSphereOfSpheresTraits.html#Cross_link_anchor_1168\">MinSphereOfSpheresTraits</A>::Use_square_roots\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    must typedef to either\n  <I><A HREF=\"../Kernel_23_ref/Class_Tag_true.html#Cross_link_anchor_477\">CGAL::Tag_true</A></I> or <I><A HREF=\"../Kernel_23_ref/Class_Tag_false.html#Cross_link_anchor_475\">CGAL::Tag_false</A></I>.  The algorithm\n  uses (depending on the type\n  <I><A HREF=\"Concept_MinSphereOfSpheresTraits.html#Cross_link_anchor_1168\">MinSphereOfSpheresTraits</A>::Algorithm</I>) floating-point arithmetic\n  internally for some intermediate computations.  The type\n  <I>Use_square_roots</I> affects how these calculations are done: When\n  <I>Use_square_roots</I> is <I><A HREF=\"../Kernel_23_ref/Class_Tag_true.html#Cross_link_anchor_478\">Tag_true</A></I>, the algorithm computing\n  the minsphere will perform <A HREF=\"../NumberTypeSupport_ref/Function_square.html#Cross_link_anchor_1418\">square</A>-root operations on <I>double</I>s\n  and <I>float</I>s where appropriate.  On the other hand, if\n  <I>Use_square_roots</I> is <I><A HREF=\"../Kernel_23_ref/Class_Tag_false.html#Cross_link_anchor_475\">CGAL::Tag_false</A></I>, the algorithm will\n  work without doing <A HREF=\"../NumberTypeSupport_ref/Function_square.html#Cross_link_anchor_1418\">square</A>-roots.<BR>\n\n<I>Note:</I> On some platforms the algorithm is much faster when\n  <A HREF=\"../NumberTypeSupport_ref/Function_square.html#Cross_link_anchor_1418\">square</A>-roots are disabled (due to lacking hardware support).\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_MinSphereOfSpheresTraits.html#Cross_link_anchor_1168\">MinSphereOfSpheresTraits</A>::Algorithm\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    selects the method to compute the minsphere\n  with.  It must typedef to either <I>CGAL::Default_algorithm</I>,\n  <I>CGAL::LP_algorithm</I> or <I>CGAL::Farthest_first_heuristic</I>.\n  The recommended choice is the first, which is a synonym to the one\n  of the other two methods which we consider ``the best in practice.''\n  In case of <I>CGAL::LP_algorithm</I>, the minsphere will be computed\n  using the LP-algorithm&nbsp;[<A HREF=\"../biblio.html#Biblio_msw-sblp-92\">MSW92</A>], which in our\n  implementation has maximal expected running time <MATH><I>O(2<SUP>d</SUP> n)</I></MATH> (in the\n  number of operations on the number type <I>FT</I>).  In case of\n  <I>CGAL::Farthest_first_heuristic</I>, a simple heuristic will be\n  used instead which seems to work fine in practice, but comes without\n  a guarantee on the running time.  For an inexact number type\n  <I>FT</I> we strongly recommend <I>CGAL::Default_algorithm</I>, or, if\n  you want, <I>CGAL::Farthest_first_heuristic</I>, since these handle\n  most degeneracies in a satisfying manner.  Notice that this\n  compile-time flag is taken as a hint only.  Should one of the\n  methods not be available anymore in a future release, then the\n  default algorithm will be chosen.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Access Functions</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_FT_radius6const_Sphere__s9;\"></A>\nFT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.radius (  Sphere s)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the radius of sphere <I>s</I>.<BR>\n\n<EM>Postcondition: </EM>The returned number is\n greater or equal to&nbsp;<MATH><I>0</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Cartesian_const_iterator_center_cartesian_begin6const_Sphere__s9;\"></A>\nCartesian_const_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.center_cartesian_begin (  Sphere s)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns an iterator referring to the first of the <I>D</I> <A HREF=\"../Kernel_23_ref/Class_Cartesian.html#Cross_link_anchor_6\">Cartesian</A>\n  coordinates of the center of <I>s</I>.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Class_Min_sphere_of_spheres_d_traits_2.html\"><I>Min_sphere_of_spheres_d_traits_2&lt;K,FT,UseSqrt,Algorithm&gt;</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_52!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 39086.0}