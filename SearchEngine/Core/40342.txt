{"text": " Home Trees Indices Help Package CHEM Package Common Module ChemicalDetail Class ChemicalDetail hide private frames no frames Class ChemicalDetail Various utility methods for retrieving details for some chemical from the database usually keyed by the canonical SMILES string See individual methods for details Instance Methods hide private init self Constructor chemicalDetails self searchColumn searchValue Find an item in the chemical table based on a specified searchColumn and value annotationDictsBySmiles self smiles Find an item in the chemical table based on the given SMILES string separateAnnotationDictsByMetadata self annotationDicts metadataColumn Given a list of dictionaries RowItemModels representing Annotation rows from the annotationDictsBySmiles method see if any of the rows match items in the annotation metadata table whose specified metadataColumn is True annotatedChemicalMols self smilesList idInfoOnly False Given one or a list of chemical can smiles values return an iterator over OEMolBase objects representing the chemicals retrieveIsomersBySmiles self smiles targetOEOS None Find an item in the chemical table based on the given SMILES string applySDTags self isomerMol isomerModel Given an isomerMol OEMolBase object add SD annotation tags on it based on the contents of the isomerModel RowItemModel dictionary representing column values from the database Static Methods hide private parseSDFString mol sdfString Given an SDF string parse it into the given OEMolBase molecule object as if the string represented an SDF file Class Variables hide private ANNOTATION COLS can smiles abbrev website externa Method Details hide private chemicalDetails self searchColumn searchValue Find an item in the chemical table based on a specified searchColumn and value Will only return the first chemical result so typically only want to search by a unique identifier like can smiles or chemical id Returns a RowItemModel dictionary representing all of the data found in that row In addition count up the number of isomer3d records under the chemical and store that in an entry named count isomer3d annotationDictsBySmiles self smiles Find an item in the chemical table based on the given SMILES string Then trace through the whole DB schema chemical mixturecomponent chemicalmix source2chemicalmix source annotation to find all of the chemicalmix and sources this chemical belongs to Furthermore find all of the names and values of annotations applied to such chemical mixes ordered by the source that specified the annotation Do an outer join That is if a chemical exists under some source but no annotations exist still at least report a row for that source with blank annotation values The results should be a list of RowItemModel dictionaries at least containing the following columns in each model object chemicalmix can smiles source abbrev source2chemicalmix external id annotation name annotation svalue annotation fvalue separateAnnotationDictsByMetadata self annotationDicts metadataColumn Given a list of dictionaries RowItemModels representing Annotation rows from the annotationDictsBySmiles method see if any of the rows match items in the annotation metadata table whose specified metadataColumn is True If so remove those items from the original list and return them in a new separate list of annotation dictionary models annotatedChemicalMols self smilesList idInfoOnly False Given one or a list of chemical can smiles values return an iterator over OEMolBase objects representing the chemicals Extra value of running the annotationDictsBySmiles method for each one and recording these values as SD Tags on the molecule object If the molecule is subsequently output in SDF format the caller can view these in file output Note that this returns an iterator over the same molecule object it just gets cleared and rewritten at each iteration If for some reason you want a separate copy for each you ll need to do that yourself by doing something like copy OEGraphMol mol Since a chemical can belong to multiple chemical mixes this is a little sloppy situation May only want to count when the chemical is the first largest component of the mix or something In the meantime only record sources and external IDs this is under idInfoOnly If set to True just load the found chemical ids and molecule titles Don t spend time searching for 3D structures or source information retrieveIsomersBySmiles self smiles targetOEOS None Find an item in the chemical table based on the given SMILES string Then find respective records in the isomer3d table and any SDF 3D molecular data files in particular If so then return an oemolistream of OEMolBase objects to represent the contents of these SD Files If the smiles provided is actually a list will return all SDFs under those chemical SMILES Furthermore include SD annotation tags for All primary chemical annotations columns except mixturecomponent id Isomer Isomeric SMILES If a targetOEOS oemolostream is provided will write the output directly there instead of managing it in memory No OEIS will be returned then This is in case the query size is huge i e the whole database and should be processed as a stream of data parseSDFString mol sdfString Static Method Given an SDF string parse it into the given OEMolBase molecule object as if the string represented an SDF file Will only get the first molecule in the SDF if it contains multiple Class Variable Details hide private ANNOTATION COLS Value can smiles abbrev website external id name svalue fvalue Home Trees Indices Help Generated by Epydoc 3 beta1 on Thu Nov 8 17 49 28 2 7 http epydoc sourceforge net", "_id": "http://www.ics.uci.edu/~dock/CHEM_docs/CHEM.Common.ChemicalDetail.ChemicalDetail-class.html", "title": "chem.common.chemicaldetail.chemicaldetail", "html": "<?xml version=\"1.0\" encoding=\"ascii\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n          \"DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n  <title>CHEM.Common.ChemicalDetail.ChemicalDetail</title>\n  <link rel=\"stylesheet\" href=\"epydoc.css\" type=\"text/css\" />\n  <script type=\"text/javascript\" src=\"epydoc.js\"></script>\n</head>\n\n<body bgcolor=\"white\" text=\"black\" link=\"blue\" vlink=\"#204080\"\n      alink=\"#204080\">\n<!-- ==================== NAVIGATION BAR ==================== -->\n<table class=\"navbar\" border=\"0\" width=\"100%\" cellpadding=\"0\"\n       bgcolor=\"#a0c0ff\" cellspacing=\"0\">\n  <tr valign=\"middle\">\n  <!-- Home link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"CHEM-module.html\">Home</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Tree link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"module-tree.html\">Trees</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Index link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"identifier-index.html\">Indices</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Help link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"help.html\">Help</a>&nbsp;&nbsp;&nbsp;</th>\n\n      <th class=\"navbar\" width=\"100%\"></th>\n  </tr>\n</table>\n<table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n  <tr valign=\"top\">\n    <td width=\"100%\">\n      <span class=\"breadcrumbs\">\n        <a href=\"CHEM-module.html\">Package&nbsp;CHEM</a> ::\n        <a href=\"CHEM.Common-module.html\">Package&nbsp;Common</a> ::\n        <a href=\"CHEM.Common.ChemicalDetail-module.html\">Module&nbsp;ChemicalDetail</a> ::\n        Class&nbsp;ChemicalDetail\n      </span>\n    </td>\n    <td>\n      <table cellpadding=\"0\" cellspacing=\"0\">\n        <!-- hide/show private -->\n        <tr><td align=\"right\"><span class=\"options\">[<a href=\"javascript:void(0);\" class=\"privatelink\"\n    onclick=\"toggle_private();\">hide&nbsp;private</a>]</span></td></tr>\n        <tr><td align=\"right\"><span class=\"options\"\n            >[<a href=\"frames.html\" target=\"_top\">frames</a\n            >]&nbsp;|&nbsp;<a href=\"CHEM.Common.ChemicalDetail.ChemicalDetail-class.html\"\n            target=\"_top\">no&nbsp;frames</a>]</span></td></tr>\n      </table>\n    </td>\n  </tr>\n</table>\n<!-- ==================== CLASS DESCRIPTION ==================== -->\n<h1 class=\"epydoc\">Class ChemicalDetail</h1><br /><br />\nVarious utility methods for retrieving details for some chemical from \n  the database, usually keyed by the canonical SMILES string.  See \n  individual methods for details.<br /><br />\n\n<!-- ==================== INSTANCE METHODS ==================== -->\n<a name=\"section-InstanceMethods\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Instance Methods</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-InstanceMethods\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"__init__\"></a><span class=\"summary-sig-name\">__init__</span>(<span class=\"summary-sig-arg\">self</span>)</span><br />\n      Constructor</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.ChemicalDetail.ChemicalDetail-class.html#chemicalDetails\" class=\"summary-sig-name\">chemicalDetails</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">searchColumn</span>,\n        <span class=\"summary-sig-arg\">searchValue</span>)</span><br />\n      Find an item in the chemical table based on a specified \n      searchColumn and value.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.ChemicalDetail.ChemicalDetail-class.html#annotationDictsBySmiles\" class=\"summary-sig-name\">annotationDictsBySmiles</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">smiles</span>)</span><br />\n      Find an item in the chemical table based on the given SMILES string.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.ChemicalDetail.ChemicalDetail-class.html#separateAnnotationDictsByMetadata\" class=\"summary-sig-name\">separateAnnotationDictsByMetadata</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">annotationDicts</span>,\n        <span class=\"summary-sig-arg\">metadataColumn</span>)</span><br />\n      Given a list of dictionaries (RowItemModels) representing \n      Annotation rows from the annotationDictsBySmiles method, see if any \n      of the rows match items in the annotation_metadata table whose \n      specified metadataColumn is True.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.ChemicalDetail.ChemicalDetail-class.html#annotatedChemicalMols\" class=\"summary-sig-name\">annotatedChemicalMols</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">smilesList</span>,\n        <span class=\"summary-sig-arg\">idInfoOnly</span>=<span class=\"summary-sig-default\">False</span>)</span><br />\n      Given one or a list of chemical can_smiles values, return an iterator over OEMolBase\nobjects representing the chemicals.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.ChemicalDetail.ChemicalDetail-class.html#retrieveIsomersBySmiles\" class=\"summary-sig-name\">retrieveIsomersBySmiles</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">smiles</span>,\n        <span class=\"summary-sig-arg\">targetOEOS</span>=<span class=\"summary-sig-default\">None</span>)</span><br />\n      Find an item in the chemical table based on the given SMILES \n      string.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr class=\"private\">\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"__applySDTags\"></a><span class=\"summary-sig-name\">__applySDTags</span>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">isomerMol</span>,\n        <span class=\"summary-sig-arg\">isomerModel</span>)</span><br />\n      Given an isomerMol OEMolBase object, add SD annotation tags on it \n      based on the contents of the isomerModel RowItemModel (dictionary) \n      representing column values from the database.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n</table>\n<!-- ==================== STATIC METHODS ==================== -->\n<a name=\"section-StaticMethods\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Static Methods</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-StaticMethods\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n<tr class=\"private\">\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.ChemicalDetail.ChemicalDetail-class.html#__parseSDFString\" class=\"summary-sig-name\">__parseSDFString</a>(<span class=\"summary-sig-arg\">mol</span>,\n        <span class=\"summary-sig-arg\">sdfString</span>)</span><br />\n      Given an SDF string, parse it into the given OEMolBase molecule \n      object as if the string represented an SDF file.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n</table>\n<!-- ==================== CLASS VARIABLES ==================== -->\n<a name=\"section-ClassVariables\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Class Variables</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-ClassVariables\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a href=\"CHEM.Common.ChemicalDetail.ChemicalDetail-class.html#ANNOTATION_COLS\" class=\"summary-name\">ANNOTATION_COLS</a> = <code title=\"[&quot;can_smiles&quot;, &quot;abbrev&quot;, &quot;website&quot;, &quot;external_id&quot;, &quot;name&quot;, &quot;svalue&quot;, &quot;\\\nfvalue&quot;]\">[&quot;can_smiles&quot;, &quot;abbrev&quot;, &quot;website&quot;, &quot;externa<code class=\"variable-ellipsis\">...</code></code>\n    </td>\n  </tr>\n</table>\n<!-- ==================== METHOD DETAILS ==================== -->\n<a name=\"section-MethodDetails\"></a>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Method Details</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-MethodDetails\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n</table>\n<a name=\"chemicalDetails\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">chemicalDetails</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">searchColumn</span>,\n        <span class=\"sig-arg\">searchValue</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <p>Find an item in the chemical table based on a specified searchColumn \n  and value.  Will only return the first chemical result so typically only \n  want to search by a unique identifier like &quot;can_smiles&quot; or \n  &quot;chemical_id.&quot;</p>\n  Returns a RowItemModel dictionary representing all of the data found \n  in that row.  In addition, count up the number of isomer3d records under \n  the chemical and store that in an entry named count_isomer3d.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"annotationDictsBySmiles\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">annotationDictsBySmiles</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">smiles</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <pre class=\"literalblock\">\nFind an item in the chemical table based on the given SMILES string.\nThen trace through the whole DB schema\n(chemical - mixturecomponent - chemicalmix - source2chemicalmix - source - annotation)\nto find all of the chemicalmix and sources this chemical belongs to.\nFurthermore, find all of the names and values of annotations applied to such\nchemical mixes, ordered by the source that specified the annotation.\n\nDo an outer-join.  That is, if a chemical exists under some\nsource, but no annotations exist, still at least report a row for that\nsource with blank annotation values.\n\nThe results should be a list of RowItemModel dictionaries, at least containing\nthe following &quot;columns&quot; in each model object.\n\n    chemicalmix.can_smiles\n    source.abbrev\n    source2chemicalmix.external_id\n    annotation.name\n    annotation.svalue\n    annotation.fvalue\n\n</pre>\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"separateAnnotationDictsByMetadata\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">separateAnnotationDictsByMetadata</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">annotationDicts</span>,\n        <span class=\"sig-arg\">metadataColumn</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <p>Given a list of dictionaries (RowItemModels) representing Annotation \n  rows from the annotationDictsBySmiles method, see if any of the rows \n  match items in the annotation_metadata table whose specified \n  metadataColumn is True.</p>\n  If so, remove those items from the original list, and return them in a\n  new, separate list of annotation dictionary models.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"annotatedChemicalMols\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">annotatedChemicalMols</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">smilesList</span>,\n        <span class=\"sig-arg\">idInfoOnly</span>=<span class=\"sig-default\">False</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <pre class=\"literalblock\">\nGiven one or a list of chemical can_smiles values, return an iterator over OEMolBase\nobjects representing the chemicals.  Extra value of running the\nannotationDictsBySmiles method for each one and recording these values as\nSD Tags on the molecule object.  If the molecule is subsequently output in SDF format,\nthe caller can view these in file output.\n\nNote that this returns an iterator over the same molecule object, it just gets cleared\nand rewritten at each iteration.  If for some reason you want a separate copy for each,\nyou'll need to do that yourself by doing something like &quot;copy = OEGraphMol(mol)&quot;\n\nSince a chemical can belong to multiple chemical mixes, this is a little\nsloppy situation.  May only want to count when the chemical is the\n&quot;first largest component&quot; of the mix or something.  In the meantime, only record \nsources and external IDs this is under.\n\nidInfoOnly: If set to True, just load the found chemical_ids and molecule titles.\n    Don't spend time searching for 3D structures or source information.\n\n</pre>\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"retrieveIsomersBySmiles\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">retrieveIsomersBySmiles</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">smiles</span>,\n        <span class=\"sig-arg\">targetOEOS</span>=<span class=\"sig-default\">None</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <p>Find an item in the chemical table based on the given SMILES string. \n  Then find respective records in the isomer3d table and any SDF 3D \n  molecular data files in particular.  If so, then return an oemolistream \n  of OEMolBase objects to represent the contents of these SD Files.</p>\n  <p>If the smiles provided is actually a list, will return all SDFs under \n  those chemical SMILES.</p>\n  Furthermore, include SD annotation tags for:\n  <ul>\n    <li>\n      All primary chemical annotations / columns (except \n      mixturecomponent_id)\n    </li>\n    <li>\n      Isomer #\n    </li>\n    <li>\n      Isomeric SMILES\n    </li>\n  </ul>\n  If a targetOEOS (oemolostream) is provided, will write the output \n  directly there instead of managing it in memory.  No OEIS will be \n  returned then. This is in case the query size is huge (i.e., the whole \n  database) and should be processed as a stream of data.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"__parseSDFString\"></a>\n<div class=\"private\">\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">__parseSDFString</span>(<span class=\"sig-arg\">mol</span>,\n        <span class=\"sig-arg\">sdfString</span>)</span>\n    <br /><em class=\"fname\">Static Method</em>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Given an SDF string, parse it into the given OEMolBase molecule object\n  as if the string represented an SDF file.  Will only get the first \n  molecule in the SDF if it contains multiple.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<br />\n<!-- ==================== CLASS VARIABLE DETAILS ==================== -->\n<a name=\"section-ClassVariableDetails\"></a>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Class Variable Details</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-ClassVariableDetails\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n</table>\n<a name=\"ANNOTATION_COLS\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <h3 class=\"epydoc\">ANNOTATION_COLS</h3>\n  \n  <dl class=\"fields\">\n  </dl>\n  <dl class=\"fields\">\n    <dt>Value:</dt>\n      <dd><table><tr><td><pre class=\"variable\">\n[&quot;can_smiles&quot;, &quot;abbrev&quot;, &quot;website&quot;, &quot;external_id&quot;, &quot;name&quot;, &quot;svalue&quot;, &quot;<span class=\"variable-linewrap\"><img src=\"crarr.png\" alt=\"\\\" /></span>\nfvalue&quot;]\n</pre></td></tr></table>\n</dd>\n  </dl>\n</td></tr></table>\n</div>\n<br />\n<!-- ==================== NAVIGATION BAR ==================== -->\n<table class=\"navbar\" border=\"0\" width=\"100%\" cellpadding=\"0\"\n       bgcolor=\"#a0c0ff\" cellspacing=\"0\">\n  <tr valign=\"middle\">\n  <!-- Home link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"CHEM-module.html\">Home</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Tree link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"module-tree.html\">Trees</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Index link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"identifier-index.html\">Indices</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Help link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"help.html\">Help</a>&nbsp;&nbsp;&nbsp;</th>\n\n      <th class=\"navbar\" width=\"100%\"></th>\n  </tr>\n</table>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%%\">\n  <tr>\n    <td align=\"left\" class=\"footer\">\n    Generated by Epydoc 3.0beta1 on Thu Nov  8 17:49:28 2007\n    </td>\n    <td align=\"right\" class=\"footer\">\n      <a href=\"http://epydoc.sourceforge.net\">http://epydoc.sourceforge.net</a>\n    </td>\n  </tr>\n</table>\n\n<script type=\"text/javascript\">\n  <!--\n  // Private objects are initially displayed (because if\n  // javascript is turned off then we want them to be\n  // visible); but by default, we want to hide them.  So hide\n  // them unless we have a cookie that says to show them.\n  checkCookie()\n  // -->\n</script>\n  \n</body>\n</html>\n", "id": 40342.0}