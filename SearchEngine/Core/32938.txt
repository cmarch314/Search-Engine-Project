{"text": "View Javadoc 1 Z M I G 2 3 This library is free software you can redistribute it and or 4 modify it under the terms of the GNU Lesser General Public 5 License as published by the Free Software Foundation either 6 version 2 1 of the License or at your option any later version 7 8 This library is distributed in the hope that it will be useful 9 but WITHOUT ANY WARRANTY without even the implied warranty of 1 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE See the GNU 11 Lesser General Public License for more details 12 13 You should have received a copy of the GNU Lesser General Public 14 License along with this library if not write to the Free Software 15 Foundation Inc 59 Temple Place Suite 33 Boston MA 2111 13 7 USA 16 package javax jmdns 17 18 import java io IOException 19 import java net DatagramPacket 2 import java net InetAddress 21 import java net MulticastSocket 22 import java util Enumeration 23 import java util Hashtable 24 import java util Iterator 25 import java util LinkedList 26 import java util Vector 27 28 import org apache commons logging Log 29 import org apache commons logging LogFactory 3 31 import swirl workspace PeerManager 32 33 REMIND multiple IP addresses 34 35 36 mDNS implementation in Java 37 38 author Arthur van Hoff 39 version I G 4 41 public class JmDNS extends DNSConstants 42 43 TODO 44 public static String VERSION 2 45 46 TODO 47 static int debug Integer parseInt System getProperty jmdns debug 48 49 TODO 5 DNSRecord Address host 51 52 TODO 53 DNSCache cache 54 55 TODO 56 Hashtable serviceTypes 57 58 TODO 59 Hashtable services 6 61 TODO 62 InetAddress group 63 64 TODO 65 MulticastSocket socket 66 67 TODO 68 Thread shutdown 69 7 TODO 71 Vector browsers 72 73 TODO 74 Vector listeners 75 76 TODO 77 Vector typeListeners 78 79 TODO 8 boolean done 81 82 TODO 83 boolean linklocal 84 85 TODO 86 boolean loopback 87 88 89 Create an instance of JmDNS 9 91 throws IOException TODO 92 93 private static Log log LogFactory getLog JmDNS class 94 public JmDNS throws IOException 95 96 try 97 98 InetAddress addr PeerManager getLocalAddress 99 1 init isLoopback addr null addr addr getHostName 1 1 1 2 catch IOException e 1 3 1 4 init null computer 1 5 1 6 1 7 1 8 1 9 Create an instance of JmDNS and bind it to a specific network interface 11 given its IP address 111 112 param addr TODO 113 114 throws IOException TODO 115 116 public JmDNS InetAddress addr throws IOException 117 118 init addr addr getHostName 119 12 121 122 Return the address of the interface to which this instance of JmDNS is 123 bound 124 125 return TODO 126 127 throws IOException TODO 128 129 public InetAddress getInterface throws IOException 13 131 return socket getInterface 132 133 134 135 Get service information If the information is not cached the method 136 will block until updated informatin is received 137 138 param type full qualified service type such as 139 code http tcp local code 14 param name full qualified service name such as 141 code foobar http tcp local code 142 143 return null if the service information cannot be obtained 144 145 public ServiceInfo getServiceInfo String type String name 146 147 return getServiceInfo type name 3 1 148 149 15 151 Get service information If the information is not cached the method 152 will block for the given timeout until updated informatin is received 153 154 param type full qualified service type such as 155 code http tcp local code 156 param name full qualified service name such as 157 code foobar http tcp local code 158 param timeout timeout in milliseconds 159 16 return null if the service information cannot be obtained 161 162 public ServiceInfo getServiceInfo String type String name int timeout 163 164 ServiceInfo info new ServiceInfo type name 165 166 return info request this timeout info null 167 168 169 17 Listen for services of a given type The type has to be a fully 171 qualified type name such as code http tcp local code 172 173 param type full qualified service type such as 174 code http tcp local code 175 param listener listener for service updates 176 177 public synchronized void addServiceListener String type 178 ServiceListener listener 179 18 removeServiceListener listener 181 browsers addElement new ServiceBrowser type listener 182 183 184 185 Listen for service types 186 187 param listener listener for service types 188 189 throws IOException TODO 19 191 public void addServiceTypeListener ServiceTypeListener listener 192 throws IOException 193 194 synchronized this 195 196 removeServiceTypeListener listener 197 typeListeners addElement listener 198 199 report service types 2 for Enumeration e serviceTypes elements e hasMoreElements 2 1 2 2 listener addServiceType this String e nextElement 2 3 2 4 2 5 2 6 try 2 7 2 8 query for service types 2 9 long now System currentTimeMillis 21 long nextTime now 211 212 for int i i 3 213 214 if now nextTime 215 216 Thread sleep nextTime now 217 now System currentTimeMillis 218 219 continue 22 221 222 DNSOutgoing out new DNSOutgoing FLAGS QR QUERY 223 224 out addQuestion new DNSQuestion services mdns udp local 225 TYPE PTR CLASS IN 226 227 for Enumeration e serviceTypes elements 228 e hasMoreElements 229 23 out addAnswer new DNSRecord Pointer services mdns udp local 231 TYPE PTR CLASS IN 232 DNS TTL 233 String e nextElement 234 235 236 237 send out 238 i 239 nextTime 225 24 241 242 catch InterruptedException e 243 244 throw new IOException interrupted I O 245 246 247 248 249 Close down jmdns Release all resources and unregister all services 25 251 public synchronized void close 252 253 if done 254 255 done true 256 notifyAll 257 258 remove the shutdown hook 259 if shutdown null 26 261 Runtime getRuntime removeShutdownHook shutdown 262 263 264 unregister services 265 unregisterAllServices 266 267 close socket 268 try 269 27 socket leaveGroup group 271 socket close 272 273 catch IOException e 274 275 ignore 276 277 278 279 28 281 Register a service The service is registered for access by other jmdns 282 clients The name of the service may be changed to make it unique 283 284 param info TODO 285 286 throws IOException TODO 287 288 public void registerService ServiceInfo info throws IOException 289 29 registerServiceType info type 291 292 bind the service to this address 293 info server host name 294 info addr host getInetAddress 295 296 try 297 298 synchronized this 299 3 check for a unqiue name 3 1 checkService info 3 2 3 3 add the service 3 4 services put info name toLowerCase info 3 5 3 6 3 7 announce the service 3 8 long now System currentTimeMillis 3 9 long nextTime now 31 311 for int i i 3 312 313 if now nextTime 314 315 Thread sleep nextTime now 316 now System currentTimeMillis 317 318 continue 319 32 321 DNSOutgoing out new DNSOutgoing FLAGS QR RESPONSE FLAGS AA 322 323 out addAnswer new DNSRecord Pointer info type TYPE PTR 324 CLASS IN DNS TTL info name 325 326 out addAnswer new DNSRecord Service info name TYPE SRV 327 CLASS IN DNS TTL 328 info priority info weight 329 info port host name 33 out addAnswer new DNSRecord Text info name TYPE TXT CLASS IN 331 DNS TTL info text 332 out addAnswer host 333 send out 334 i 335 nextTime 225 336 337 338 catch InterruptedException e 339 34 throw new IOException interrupted I O 341 342 343 344 345 Register a service type If this service type was not already known all 346 service listeners will be notified of the new service type Service 347 types are automatically registered as they are discovered 348 349 param type TODO 35 351 public synchronized void registerServiceType String type 352 353 String name type toLowerCase 354 355 if serviceTypes get name null 356 357 if type indexOf mdns udp 358 359 serviceTypes put name type 36 361 for Enumeration e typeListeners elements 362 e hasMoreElements 363 364 ServiceTypeListener e nextElement addServiceType this 365 type 366 367 368 369 37 371 372 Remove listener for services of a given type 373 374 param listener listener for service updates 375 376 public synchronized void removeServiceListener ServiceListener listener 377 378 for int i browsers size i 379 38 ServiceBrowser browser ServiceBrowser browsers elementAt i 381 382 if browser listener listener 383 384 browsers removeElementAt i 385 browser close 386 387 return 388 389 39 391 392 393 Remove listener for service types 394 395 param listener listener for service types 396 397 public synchronized void removeServiceTypeListener ServiceTypeListener listener 398 399 typeListeners removeElement listener 4 4 1 4 2 4 3 Request service information The information about the service is 4 4 requested and the ServiceListener resolveService method is called as 4 5 soon as it is available 4 6 4 7 param type TODO 4 8 param name TODO 4 9 41 public void requestServiceInfo String type String name 411 412 requestServiceInfo type name 3 1 413 414 415 416 Request service information The information about the service is 417 requested and the ServiceListener resolveService method is called as 418 soon as it is available 419 42 param type TODO 421 param name TODO 422 param timeout TODO 423 424 public void requestServiceInfo String type String name int timeout 425 426 registerServiceType type 427 428 new Thread new ServiceResolver new ServiceInfo type name timeout 429 JmDNS ServiceResolver start 43 431 432 433 Unregister a service 434 435 public synchronized void unregisterAllServices 436 437 if services size 438 439 return 44 441 442 try 443 444 unregister all services 445 long now System currentTimeMillis 446 long nextTime now 447 448 for int i i 3 449 45 if now nextTime 451 452 Thread sleep nextTime now 453 now System currentTimeMillis 454 455 continue 456 457 458 DNSOutgoing out new DNSOutgoing FLAGS QR RESPONSE FLAGS AA 459 46 for Enumeration e services elements e hasMoreElements 461 462 ServiceInfo info ServiceInfo e nextElement 463 464 out addAnswer new DNSRecord Pointer info type TYPE PTR 465 CLASS IN info name 466 467 out addAnswer new DNSRecord Service info name TYPE SRV 468 CLASS IN 469 info priority 47 info weight info port 471 host name 472 out addAnswer new DNSRecord Text info name TYPE TXT 473 CLASS IN info text 474 475 476 send out 477 i 478 nextTime 125 479 48 481 catch IOException e 482 483 ignore 484 485 catch InterruptedException e 486 487 ignore 488 489 49 491 492 Unregister a service The service should have been registered 493 494 param info TODO 495 496 public void unregisterService ServiceInfo info 497 498 try 499 5 services remove info name toLowerCase 5 1 5 2 unregister the service 5 3 long now System currentTimeMillis 5 4 long nextTime now 5 5 5 6 for int i i 3 5 7 5 8 if now nextTime 5 9 51 Thread sleep nextTime now 511 now System currentTimeMillis 512 513 continue 514 515 516 DNSOutgoing out new DNSOutgoing FLAGS QR RESPONSE FLAGS AA 517 518 out addAnswer new DNSRecord Pointer info type TYPE PTR 519 CLASS IN info name 52 out addAnswer new DNSRecord Service info name TYPE SRV 521 CLASS IN info priority 522 info weight info port 523 host name 524 out addAnswer new DNSRecord Text info name TYPE TXT CLASS IN 525 info text 526 send out 527 i 528 nextTime 125 529 53 531 catch IOException e 532 533 ignore 534 535 catch InterruptedException e 536 537 ignore 538 539 54 541 542 Check if an address is linklocal 543 544 param addr TODO 545 546 return TODO 547 548 static boolean isLinkLocal InetAddress addr 549 55 return addr null addr getHostAddress startsWith 169 254 551 552 553 554 Check if an address is the loopback address 555 556 param addr TODO 557 558 return TODO 559 56 static boolean isLoopback InetAddress addr 561 562 return addr null addr getHostAddress startsWith 127 1 563 564 565 566 Add a listener for a question The listener will receive updates to of 567 answers to the question as they arrive or from the cache if they are 568 already available 569 57 param listener TODO 571 param question TODO 572 573 synchronized void addListener Listener listener DNSQuestion question 574 575 long now System currentTimeMillis 576 577 add the new listener 578 listeners addElement listener 579 58 report existing matched records 581 if question null 582 583 for Iterator i cache find question name i hasNext 584 585 DNSRecord c DNSRecord i next 586 587 if question answeredBy c c isExpired now 588 589 listener updateRecord this now c 59 591 592 593 594 notifyAll 595 596 597 598 Check that a service name is unique 599 6 param info TODO 6 1 6 2 throws IOException TODO 6 3 throws InterruptedException TODO 6 4 6 5 void checkService ServiceInfo info 6 6 throws IOException 6 7 InterruptedException 6 8 6 9 long now System currentTimeMillis 61 long nextTime now 611 612 for int i i 3 613 614 for Iterator j cache find info type j hasNext 615 616 DNSRecord a DNSRecord j next 617 618 if a type TYPE PTR a isExpired now 619 info name equals DNSRecord Pointer a alias 62 621 String name info getName 622 623 try 624 625 int l name lastIndexOf 626 int r name lastIndexOf 627 628 if l l r 629 63 name name substring l 631 Integer parseInt name substring l 1 r 632 1 633 634 else 635 636 name 1 637 638 639 catch NumberFormatException e 64 641 name 1 642 643 644 info name name info type 645 i 646 647 break 648 649 65 651 DNSOutgoing out new DNSOutgoing FLAGS QR QUERY FLAGS AA 652 653 out addQuestion new DNSQuestion info type TYPE PTR CLASS IN 654 out addAuthorativeAnswer new DNSRecord Pointer info type TYPE PTR 655 CLASS IN DNS TTL 656 info name 657 send out 658 i 659 nextTime 175 66 661 if now nextTime 662 663 wait nextTime now 664 now System currentTimeMillis 665 666 continue 667 668 669 67 671 672 Handle an incoming query See if we can answer any part of it given our 673 registered records 674 675 param in TODO 676 param addr TODO 677 param port TODO 678 679 throws IOException TODO 68 681 synchronized void handleQuery DNSIncoming in InetAddress addr int port 682 throws IOException 683 684 DNSOutgoing out null 685 Vector additionals null 686 687 for unicast responses the question must be included 688 if port MDNS PORT 689 69 out new DNSOutgoing FLAGS QR RESPONSE FLAGS AA false 691 692 for Enumeration e in questions elements e hasMoreElements 693 694 out addQuestion DNSQuestion e nextElement 695 696 697 698 answer relevant questions 699 for Enumeration e in questions elements e hasMoreElements 7 7 1 DNSQuestion q DNSQuestion e nextElement 7 2 7 3 switch q type 7 4 7 5 case TYPE A 7 6 7 7 address request 7 8 if host null q name equals host name 7 9 71 if out null 711 712 out new DNSOutgoing FLAGS QR RESPONSE FLAGS AA 713 714 715 out addAnswer in host 716 717 718 break 719 72 case TYPE PTR 721 registerServiceType q name 722 723 find matching services 724 for Enumeration s services elements s hasMoreElements 725 726 ServiceInfo info ServiceInfo s nextElement 727 728 if q name equals info type 729 73 if out null 731 732 out new DNSOutgoing FLAGS QR RESPONSE FLAGS AA 733 734 735 out addAnswer in 736 new DNSRecord Pointer info type 737 TYPE PTR CLASS IN 738 DNS TTL info name 739 74 additional answers in case there is room 741 if additionals null 742 743 additionals new Vector 744 additionals addElement host 745 746 747 additionals addElement new DNSRecord Service q name 748 TYPE SRV 749 CLASS IN 75 CLASS UNIQUE 751 DNS TTL 752 info priority 753 info weight 754 info port 755 host name 756 additionals addElement new DNSRecord Text q name 757 TYPE TXT 758 CLASS IN 759 CLASS UNIQUE 76 DNS TTL 761 info text 762 763 764 765 if q name equals services mdns udp local 766 767 for Enumeration t serviceTypes elements 768 t hasMoreElements 769 77 if out null 771 772 out new DNSOutgoing FLAGS QR RESPONSE FLAGS AA 773 774 775 out addAnswer in 776 new DNSRecord Pointer services mdns udp local 777 TYPE PTR CLASS IN 778 DNS TTL 779 String t 78 nextElement 781 782 783 784 break 785 786 default 787 788 find service 789 ServiceInfo info ServiceInfo services get q name toLowerCase 79 791 if info null 792 793 if out null 794 795 out new DNSOutgoing FLAGS QR RESPONSE FLAGS AA 796 797 798 if q type TYPE SRV q type TYPE ANY 799 8 out addAnswer in 8 1 new DNSRecord Service q name TYPE SRV 8 2 CLASS IN 8 3 CLASS UNIQUE 8 4 DNS TTL 8 5 info priority 8 6 info weight 8 7 info port host name 8 8 8 9 81 if q type TYPE TXT q type TYPE ANY 811 812 out addAnswer in 813 new DNSRecord Text q name TYPE TXT 814 CLASS IN 815 CLASS UNIQUE 816 DNS TTL info text 817 818 819 82 821 822 if out null out numAnswers 823 824 add additional answers if there is space 825 if additionals null 826 827 for Enumeration e additionals elements 828 e hasMoreElements 829 83 out addAdditionalAnswer in DNSRecord e nextElement 831 832 833 834 out id in id 835 out finish 836 socket send new DatagramPacket out data out off addr port 837 838 839 84 841 Handle an incoming response Cache answers and pass them on to the 842 appropriate questions 843 844 param msg TODO 845 846 throws IOException TODO 847 848 synchronized void handleResponse DNSIncoming msg throws IOException 849 85 long now System currentTimeMillis 851 852 for Enumeration e msg answers elements e hasMoreElements 853 854 DNSRecord rec DNSRecord e nextElement 855 boolean expired rec isExpired now 856 857 update the cache 858 DNSRecord c DNSRecord cache get rec 859 86 if c null 861 862 if expired 863 864 cache remove c 865 866 else 867 868 c resetTTL rec 869 rec c 87 871 872 else if expired 873 874 cache add rec 875 876 877 switch rec type 878 879 case TYPE PTR 88 881 handle mdns udp records 882 if rec name indexOf mdns udp 883 884 if expired rec name startsWith services mdns udp 885 886 registerServiceType DNSRecord Pointer rec alias 887 888 889 continue 89 891 registerServiceType rec name 892 893 break 894 895 896 notify the listeners 897 updateRecord now rec 898 899 9 9 1 9 2 Initialize everything 9 3 9 4 param intf TODO 9 5 param name TODO 9 6 9 7 throws IOException TODO 9 8 9 9 void init InetAddress intf String name throws IOException 91 911 if name endsWith 912 913 name local 914 915 916 group InetAddress getByName MDNS GROUP 917 socket new MulticastSocket MDNS PORT 918 919 if intf null 92 921 socket setInterface intf 922 923 924 socket setTimeToLive 255 925 socket joinGroup group 926 loopback isLoopback intf 927 linklocal isLinkLocal intf 928 929 cache new DNSCache 1 93 listeners new Vector 931 browsers new Vector 932 typeListeners new Vector 933 services new Hashtable 2 934 serviceTypes new Hashtable 2 935 936 new Thread new SocketListener JmDNS SocketListener start 937 new Thread new RecordReaper JmDNS RecordReaper start 938 shutdown new Thread new Shutdown JmDNS Shutdown 939 Runtime getRuntime addShutdownHook shutdown 94 941 host to IP address binding 942 byte data intf getAddress 943 int ip data xFF 24 data 1 xFF 16 944 data 2 xFF 8 data 3 xFF 945 DNSRecord Address host new DNSRecord Address name TYPE A CLASS IN 946 DNS TTL ip 947 948 check for conflicts 949 long now System currentTimeMillis 95 long nextTime now 951 952 for int i i 3 953 954 for Iterator j cache find host name j hasNext 955 956 DNSRecord a DNSRecord j next 957 958 if a type TYPE A a isExpired now 959 DNSRecord Address a addr ip 96 961 String nm host name substring name indexOf 962 963 try 964 965 int l nm lastIndexOf 966 int r nm lastIndexOf 967 968 if l l r 969 97 nm nm substring l 971 Integer parseInt nm substring l 1 1 972 973 else 974 975 nm 1 976 977 978 catch NumberFormatException e 979 98 nm 1 981 982 983 host name nm host name substring name indexOf 984 i 985 986 break 987 988 989 99 DNSOutgoing out new DNSOutgoing FLAGS QR QUERY 991 992 out addQuestion new DNSQuestion host name TYPE A CLASS IN 993 out addAuthorativeAnswer host 994 send out 995 i 996 nextTime 175 997 998 if now nextTime 999 1 try 1 1 1 2 Thread sleep nextTime now 1 3 1 4 catch InterruptedException e 1 5 1 6 throw new IOException init interrupted 1 7 1 8 1 9 now System currentTimeMillis 1 1 1 11 continue 1 12 1 13 1 14 1 15 this host host 1 16 1 17 1 18 1 19 List cache entries for debugging only 1 2 1 21 void print 1 22 1 23 if cache count 1 24 1 25 System out println cache 1 26 cache print 1 27 System out println 1 28 1 29 1 3 1 31 1 32 Remove a listener from all outstanding questions The listener will no 1 33 longer receive any updates 1 34 1 35 param listener TODO 1 36 1 37 synchronized void removeListener Listener listener 1 38 1 39 listeners removeElement listener 1 4 notifyAll 1 41 1 42 1 43 1 44 Send an outgoing multicast DNS message 1 45 1 46 param out TODO 1 47 1 48 throws IOException TODO 1 49 1 5 synchronized void send DNSOutgoing out throws IOException 1 51 1 52 out finish 1 53 socket send new DatagramPacket out data out off group MDNS PORT 1 54 1 55 1 56 1 57 Notify all listeners that a record was updated 1 58 1 59 param now TODO 1 6 param rec TODO 1 61 1 62 synchronized void updateRecord long now DNSRecord rec 1 63 1 64 for Enumeration e listeners elements e hasMoreElements 1 65 1 66 Listener listener Listener e nextElement 1 67 1 68 listener updateRecord this now rec 1 69 1 7 1 71 notifyAll 1 72 1 73 1 74 1 75 Listener for record updates 1 76 1 77 abstract static class Listener extends DNSConstants 1 78 1 79 1 8 Update a DNS record 1 81 1 82 param jmdns TODO 1 83 param now TODO 1 84 param record TODO 1 85 1 86 abstract void updateRecord JmDNS jmdns long now DNSRecord record 1 87 1 88 1 89 1 9 Schedule questions 1 91 1 92 class RecordReaper implements Runnable 1 93 1 94 1 95 TODO 1 96 1 97 public void run 1 98 1 99 try 11 11 1 synchronized JmDNS this 11 2 11 3 while true 11 4 11 5 JmDNS this wait 1 1 11 6 11 7 if done 11 8 11 9 return 111 1111 1112 remove expired answers from the cache 1113 long now System currentTimeMillis 1114 1115 for Iterator i cache all i hasNext 1116 1117 DNSRecord c DNSRecord i next 1118 1119 if c isExpired now 112 1121 updateRecord now c 1122 i remove 1123 1124 1125 1126 1127 1128 catch InterruptedException e 1129 113 e printStackTrace 1131 1132 1133 1134 1135 1136 Browse for a service of a given type 1137 1138 class ServiceBrowser extends JmDNS Listener implements Runnable 1139 114 TODO 1141 Hashtable services 1142 1143 TODO 1144 LinkedList list 1145 1146 TODO 1147 ServiceListener listener 1148 1149 TODO 115 String type 1151 1152 TODO 1153 boolean done 1154 1155 TODO 1156 int delay 1157 1158 TODO 1159 long nextTime 116 1161 1162 Create a browser for a service type 1163 1164 param type TODO 1165 param listener TODO 1166 1167 ServiceBrowser String type ServiceListener listener 1168 1169 this type type 117 this listener listener 1171 this services new Hashtable 1172 this nextTime System currentTimeMillis 1173 this delay 5 1174 this list new LinkedList 1175 1176 addListener this new DNSQuestion type TYPE PTR CLASS IN 1177 new Thread this JmDNS ServiceBrowser type start 1178 1179 118 1181 Request 1182 1183 public void run 1184 1185 try 1186 1187 while true 1188 1189 Event evt null 119 1191 synchronized JmDNS this 1192 1193 long now System currentTimeMillis 1194 1195 if list size nextTime now 1196 1197 JmDNS this wait nextTime now 1198 1199 12 if done 12 1 12 2 return 12 3 12 4 12 5 now System currentTimeMillis 12 6 12 7 send query 12 8 if nextTime now 12 9 121 DNSOutgoing out new DNSOutgoing FLAGS QR QUERY 1211 1212 out addQuestion new DNSQuestion type TYPE PTR 1213 CLASS IN 1214 1215 for Enumeration e services elements 1216 e hasMoreElements 1217 1218 DNSRecord rec DNSRecord e nextElement 1219 122 if rec isExpired now 1221 1222 out addAnswer rec now 1223 1224 1225 1226 send out 1227 1228 schedule the next one 1229 nextTime now delay 123 delay Math min 2 1 delay 2 1231 1232 1233 get the next event 1234 if list size 1235 1236 evt Event list removeFirst 1237 1238 1239 124 if evt null 1241 1242 evt send 1243 1244 1245 1246 catch IOException e 1247 1248 e printStackTrace 1249 125 catch InterruptedException e 1251 1252 oops 1253 1254 1255 1256 1257 TODO 1258 1259 void close 126 1261 synchronized JmDNS this 1262 1263 if done 1264 1265 done true 1266 removeListener this 1267 1268 1269 127 1271 1272 Update a record 1273 1274 param jmdns TODO 1275 param now TODO 1276 param rec TODO 1277 1278 void updateRecord JmDNS jmdns long now DNSRecord rec 1279 128 if rec type TYPE PTR rec name equals type 1281 1282 boolean expired rec isExpired now 1283 String name DNSRecord Pointer rec alias 1284 DNSRecord old DNSRecord services get name toLowerCase 1285 1286 if old null expired 1287 1288 new record 1289 services put name toLowerCase rec 129 list addLast new Event name 1291 1292 void send 1293 1294 listener addService JmDNS this type this name 1295 1296 1297 1298 else if old null expired 1299 13 update record 13 1 old resetTTL rec 13 2 13 3 else if old null expired 13 4 13 5 expire record 13 6 services remove name toLowerCase 13 7 list addLast new Event name 13 8 13 9 void send 131 1311 listener removeService JmDNS this type 1312 this name 1313 1314 1315 1316 return 1317 1318 1319 adjust next request time 132 long expires rec getExpirationTime 75 1321 1322 if expires nextTime 1323 1324 nextTime rec getExpirationTime 75 1325 1326 1327 1328 1329 133 Event for notifying a service listener 1331 1332 abstract class Event 1333 1334 TODO 1335 String name 1336 1337 1338 Creates a new Event object 1339 134 param name TODO 1341 1342 Event String name 1343 1344 this name name 1345 1346 1347 1348 TODO 1349 135 abstract void send 1351 1352 1353 1354 1355 Helper class to resolve services 1356 1357 class ServiceResolver implements Runnable 1358 1359 TODO 136 ServiceInfo info 1361 1362 TODO 1363 int timeout 1364 1365 1366 Creates a new ServiceResolver object 1367 1368 param info TODO 1369 param timeout TODO 137 1371 ServiceResolver ServiceInfo info int timeout 1372 1373 this info info 1374 this timeout timeout 1375 1376 1377 1378 TODO 1379 138 public void run 1381 1382 ServiceInfo result info 1383 1384 if info request JmDNS this timeout 1385 1386 result null 1387 1388 1389 notify the listeners of the appropriate service browsers 139 for Enumeration e browsers elements e hasMoreElements 1391 1392 ServiceBrowser browser ServiceBrowser e nextElement 1393 1394 if browser type equalsIgnoreCase info type 1395 1396 browser listener resolveService JmDNS this info type 1397 info name result 1398 1399 14 14 1 14 2 14 3 14 4 Shutdown operations 14 5 14 6 class Shutdown implements Runnable 14 7 14 8 14 9 TODO 141 1411 public void run 1412 1413 shutdown null 1414 close 1415 1416 1417 1418 1419 Listen for multicast packets 142 1421 class SocketListener implements Runnable 1422 1423 1424 TODO 1425 1426 public void run 1427 1428 try 1429 143 byte buf new byte MAX MSG ABSOLUTE 1431 DatagramPacket packet new DatagramPacket buf buf length 1432 1433 while done 1434 1435 packet setLength buf length 1436 socket receive packet 1437 1438 if done 1439 144 break 1441 1442 1443 try 1444 1445 InetAddress from packet getAddress 1446 1447 if linklocal isLinkLocal from 1448 1449 Ignore linklocal packets on regular interfaces unless this is 145 also a linklocal interface This is to avoid duplicates This is 1451 a terrible hack caused by the lack of an API to get the address 1452 of the interface on which the packet was received 1453 continue 1454 1455 1456 if loopback isLoopback from 1457 1458 Ignore loopback packets on a regular interface unless this is 1459 also a loopback interface 146 continue 1461 1462 1463 DNSIncoming msg new DNSIncoming packet 1464 1465 if debug 1466 1467 msg print debug 1 1468 System out println 1469 147 1471 if msg isQuery 1472 1473 if packet getPort MDNS PORT 1474 1475 handleQuery msg packet getAddress 1476 packet getPort 1477 1478 1479 handleQuery msg group MDNS PORT 148 1481 else 1482 1483 handleResponse msg 1484 1485 1486 catch IOException e 1487 1488 e printStackTrace 1489 149 1491 1492 catch IOException e 1493 1494 if done 1495 1496 e printStackTrace 1497 1498 1499 15 15 1 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.20/xref/javax/jmdns/JmDNS.html", "title": "jmdns xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>JmDNS xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../stylesheet.css\" />\n</head>\n<body>\n<div id=\"overview\"><a href=\"../../../apidocs/javax/jmdns/JmDNS.html\">View Javadoc</a></div><pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <em class=\"comment\">// %Z%%M%, %I%, %G%</em>\n<a name=\"2\" href=\"#2\">2</a>   <em class=\"comment\">//</em>\n<a name=\"3\" href=\"#3\">3</a>   <em class=\"comment\">// This library is free software; you can redistribute it and/or</em>\n<a name=\"4\" href=\"#4\">4</a>   <em class=\"comment\">// modify it under the terms of the GNU Lesser General Public</em>\n<a name=\"5\" href=\"#5\">5</a>   <em class=\"comment\">// License as published by the Free Software Foundation; either</em>\n<a name=\"6\" href=\"#6\">6</a>   <em class=\"comment\">// version 2.1 of the License, or (at your option) any later version.</em>\n<a name=\"7\" href=\"#7\">7</a>   <em class=\"comment\">// </em>\n<a name=\"8\" href=\"#8\">8</a>   <em class=\"comment\">// This library is distributed in the hope that it will be useful,</em>\n<a name=\"9\" href=\"#9\">9</a>   <em class=\"comment\">// but WITHOUT ANY WARRANTY; without even the implied warranty of</em>\n<a name=\"10\" href=\"#10\">10</a>  <em class=\"comment\">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</em>\n<a name=\"11\" href=\"#11\">11</a>  <em class=\"comment\">// Lesser General Public License for more details.</em>\n<a name=\"12\" href=\"#12\">12</a>  <em class=\"comment\">// </em>\n<a name=\"13\" href=\"#13\">13</a>  <em class=\"comment\">// You should have received a copy of the GNU Lesser General Public</em>\n<a name=\"14\" href=\"#14\">14</a>  <em class=\"comment\">// License along with this library; if not, write to the Free Software</em>\n<a name=\"15\" href=\"#15\">15</a>  <em class=\"comment\">// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</em>\n<a name=\"16\" href=\"#16\">16</a>  <strong>package</strong> <a href=\"../../javax/jmdns/package-summary.html\">javax.jmdns</a>;\n<a name=\"17\" href=\"#17\">17</a>  \n<a name=\"18\" href=\"#18\">18</a>  <strong>import</strong> java.io.IOException;\n<a name=\"19\" href=\"#19\">19</a>  <strong>import</strong> java.net.DatagramPacket;\n<a name=\"20\" href=\"#20\">20</a>  <strong>import</strong> java.net.InetAddress;\n<a name=\"21\" href=\"#21\">21</a>  <strong>import</strong> java.net.MulticastSocket;\n<a name=\"22\" href=\"#22\">22</a>  <strong>import</strong> java.util.Enumeration;\n<a name=\"23\" href=\"#23\">23</a>  <strong>import</strong> java.util.Hashtable;\n<a name=\"24\" href=\"#24\">24</a>  <strong>import</strong> java.util.Iterator;\n<a name=\"25\" href=\"#25\">25</a>  <strong>import</strong> java.util.LinkedList;\n<a name=\"26\" href=\"#26\">26</a>  <strong>import</strong> java.util.Vector;\n<a name=\"27\" href=\"#27\">27</a>  \n<a name=\"28\" href=\"#28\">28</a>  <strong>import</strong> org.apache.commons.logging.Log;\n<a name=\"29\" href=\"#29\">29</a>  <strong>import</strong> org.apache.commons.logging.LogFactory;\n<a name=\"30\" href=\"#30\">30</a>  \n<a name=\"31\" href=\"#31\">31</a>  <strong>import</strong> swirl.workspace.PeerManager;\n<a name=\"32\" href=\"#32\">32</a>  \n<a name=\"33\" href=\"#33\">33</a>  <em class=\"comment\">// REMIND: multiple IP addresses</em>\n<a name=\"34\" href=\"#34\">34</a>  \n<a name=\"35\" href=\"#35\">35</a>  <em>/**<em>*</em></em>\n<a name=\"36\" href=\"#36\">36</a>  <em> * mDNS implementation in Java.</em>\n<a name=\"37\" href=\"#37\">37</a>  <em> *</em>\n<a name=\"38\" href=\"#38\">38</a>  <em> * @author Arthur van Hoff</em>\n<a name=\"39\" href=\"#39\">39</a>  <em> * @version %I%, %G%</em>\n<a name=\"40\" href=\"#40\">40</a>  <em> */</em>\n<a name=\"41\" href=\"#41\">41</a>  <strong>public</strong> <strong>class</strong> <a href=\"../../javax/jmdns/JmDNS.html\">JmDNS</a> <strong>extends</strong> <a href=\"../../javax/jmdns/DNSConstants.html\">DNSConstants</a>\n<a name=\"42\" href=\"#42\">42</a>  {\n<a name=\"43\" href=\"#43\">43</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"44\" href=\"#44\">44</a>      <strong>public</strong> <strong>static</strong> String VERSION = <span class=\"string\">\"0.2\"</span>;\n<a name=\"45\" href=\"#45\">45</a>  \n<a name=\"46\" href=\"#46\">46</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"47\" href=\"#47\">47</a>      <strong>static</strong> <strong>int</strong> debug = Integer.parseInt(System.getProperty(<span class=\"string\">\"jmdns.debug\"</span>, <span class=\"string\">\"0\"</span>));\n<a name=\"48\" href=\"#48\">48</a>  \n<a name=\"49\" href=\"#49\">49</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"50\" href=\"#50\">50</a>      DNSRecord.Address host;\n<a name=\"51\" href=\"#51\">51</a>  \n<a name=\"52\" href=\"#52\">52</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"53\" href=\"#53\">53</a>      <a href=\"../../javax/jmdns/DNSCache.html\">DNSCache</a> cache;\n<a name=\"54\" href=\"#54\">54</a>  \n<a name=\"55\" href=\"#55\">55</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"56\" href=\"#56\">56</a>      Hashtable serviceTypes;\n<a name=\"57\" href=\"#57\">57</a>  \n<a name=\"58\" href=\"#58\">58</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"59\" href=\"#59\">59</a>      Hashtable services;\n<a name=\"60\" href=\"#60\">60</a>  \n<a name=\"61\" href=\"#61\">61</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"62\" href=\"#62\">62</a>      InetAddress group;\n<a name=\"63\" href=\"#63\">63</a>  \n<a name=\"64\" href=\"#64\">64</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"65\" href=\"#65\">65</a>      MulticastSocket socket;\n<a name=\"66\" href=\"#66\">66</a>  \n<a name=\"67\" href=\"#67\">67</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"68\" href=\"#68\">68</a>      Thread shutdown;\n<a name=\"69\" href=\"#69\">69</a>  \n<a name=\"70\" href=\"#70\">70</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"71\" href=\"#71\">71</a>      Vector browsers;\n<a name=\"72\" href=\"#72\">72</a>  \n<a name=\"73\" href=\"#73\">73</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"74\" href=\"#74\">74</a>      Vector listeners;\n<a name=\"75\" href=\"#75\">75</a>  \n<a name=\"76\" href=\"#76\">76</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"77\" href=\"#77\">77</a>      Vector typeListeners;\n<a name=\"78\" href=\"#78\">78</a>  \n<a name=\"79\" href=\"#79\">79</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"80\" href=\"#80\">80</a>      <strong>boolean</strong> done;\n<a name=\"81\" href=\"#81\">81</a>  \n<a name=\"82\" href=\"#82\">82</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"83\" href=\"#83\">83</a>      <strong>boolean</strong> linklocal;\n<a name=\"84\" href=\"#84\">84</a>  \n<a name=\"85\" href=\"#85\">85</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"86\" href=\"#86\">86</a>      <strong>boolean</strong> loopback;\n<a name=\"87\" href=\"#87\">87</a>  \n<a name=\"88\" href=\"#88\">88</a>      <em>/**<em>*</em></em>\n<a name=\"89\" href=\"#89\">89</a>  <em>     * Create an instance of JmDNS.</em>\n<a name=\"90\" href=\"#90\">90</a>  <em>     *</em>\n<a name=\"91\" href=\"#91\">91</a>  <em>     * @throws IOException TODO</em>\n<a name=\"92\" href=\"#92\">92</a>  <em>     */</em>\n<a name=\"93\" href=\"#93\">93</a>      <strong>private</strong> <strong>static</strong> Log log = LogFactory.getLog(JmDNS.<strong>class</strong>);\n<a name=\"94\" href=\"#94\">94</a>      <strong>public</strong> <a href=\"../../javax/jmdns/JmDNS.html\">JmDNS</a>() throws IOException\n<a name=\"95\" href=\"#95\">95</a>      {\n<a name=\"96\" href=\"#96\">96</a>          <strong>try</strong>\n<a name=\"97\" href=\"#97\">97</a>          {\n<a name=\"98\" href=\"#98\">98</a>              InetAddress addr = PeerManager.getLocalAddress();\n<a name=\"99\" href=\"#99\">99</a>  \n<a name=\"100\" href=\"#100\">100</a>             init(isLoopback(addr) ? <strong>null</strong> : addr, addr.getHostName());\n<a name=\"101\" href=\"#101\">101</a>         }\n<a name=\"102\" href=\"#102\">102</a>         <strong>catch</strong>(IOException e)\n<a name=\"103\" href=\"#103\">103</a>         {\n<a name=\"104\" href=\"#104\">104</a>             init(<strong>null</strong>, <span class=\"string\">\"computer\"</span>);\n<a name=\"105\" href=\"#105\">105</a>         }\n<a name=\"106\" href=\"#106\">106</a>     }\n<a name=\"107\" href=\"#107\">107</a> \n<a name=\"108\" href=\"#108\">108</a>     <em>/**<em>*</em></em>\n<a name=\"109\" href=\"#109\">109</a> <em>     * Create an instance of JmDNS and bind it to a specific network interface</em>\n<a name=\"110\" href=\"#110\">110</a> <em>     * given its IP-address.</em>\n<a name=\"111\" href=\"#111\">111</a> <em>     *</em>\n<a name=\"112\" href=\"#112\">112</a> <em>     * @param addr TODO</em>\n<a name=\"113\" href=\"#113\">113</a> <em>     *</em>\n<a name=\"114\" href=\"#114\">114</a> <em>     * @throws IOException TODO</em>\n<a name=\"115\" href=\"#115\">115</a> <em>     */</em>\n<a name=\"116\" href=\"#116\">116</a>     <strong>public</strong> <a href=\"../../javax/jmdns/JmDNS.html\">JmDNS</a>(InetAddress addr) throws IOException\n<a name=\"117\" href=\"#117\">117</a>     {\n<a name=\"118\" href=\"#118\">118</a>         init(addr, addr.getHostName());\n<a name=\"119\" href=\"#119\">119</a>     }\n<a name=\"120\" href=\"#120\">120</a> \n<a name=\"121\" href=\"#121\">121</a>     <em>/**<em>*</em></em>\n<a name=\"122\" href=\"#122\">122</a> <em>     * Return the address of the interface to which this instance of JmDNS is</em>\n<a name=\"123\" href=\"#123\">123</a> <em>     * bound.</em>\n<a name=\"124\" href=\"#124\">124</a> <em>     *</em>\n<a name=\"125\" href=\"#125\">125</a> <em>     * @return TODO</em>\n<a name=\"126\" href=\"#126\">126</a> <em>     *</em>\n<a name=\"127\" href=\"#127\">127</a> <em>     * @throws IOException TODO</em>\n<a name=\"128\" href=\"#128\">128</a> <em>     */</em>\n<a name=\"129\" href=\"#129\">129</a>     <strong>public</strong> InetAddress getInterface() throws IOException\n<a name=\"130\" href=\"#130\">130</a>     {\n<a name=\"131\" href=\"#131\">131</a>         <strong>return</strong> socket.getInterface();\n<a name=\"132\" href=\"#132\">132</a>     }\n<a name=\"133\" href=\"#133\">133</a> \n<a name=\"134\" href=\"#134\">134</a>     <em>/**<em>*</em></em>\n<a name=\"135\" href=\"#135\">135</a> <em>     * Get service information. If the information is not cached, the method</em>\n<a name=\"136\" href=\"#136\">136</a> <em>     * will block until updated informatin is received.</em>\n<a name=\"137\" href=\"#137\">137</a> <em>     *</em>\n<a name=\"138\" href=\"#138\">138</a> <em>     * @param type full qualified service type, such as</em>\n<a name=\"139\" href=\"#139\">139</a> <em>     *        &lt;code>_http._tcp.local.&lt;/code>.</em>\n<a name=\"140\" href=\"#140\">140</a> <em>     * @param name full qualified service name, such as</em>\n<a name=\"141\" href=\"#141\">141</a> <em>     *        &lt;code>foobar._http._tcp.local.&lt;/code>.</em>\n<a name=\"142\" href=\"#142\">142</a> <em>     *</em>\n<a name=\"143\" href=\"#143\">143</a> <em>     * @return null if the service information cannot be obtained</em>\n<a name=\"144\" href=\"#144\">144</a> <em>     */</em>\n<a name=\"145\" href=\"#145\">145</a>     <strong>public</strong> <a href=\"../../javax/jmdns/ServiceInfo.html\">ServiceInfo</a> getServiceInfo(String type, String name)\n<a name=\"146\" href=\"#146\">146</a>     {\n<a name=\"147\" href=\"#147\">147</a>         <strong>return</strong> getServiceInfo(type, name, 3 * 1000);\n<a name=\"148\" href=\"#148\">148</a>     }\n<a name=\"149\" href=\"#149\">149</a> \n<a name=\"150\" href=\"#150\">150</a>     <em>/**<em>*</em></em>\n<a name=\"151\" href=\"#151\">151</a> <em>     * Get service information. If the information is not cached, the method</em>\n<a name=\"152\" href=\"#152\">152</a> <em>     * will block for the given timeout until updated informatin is received.</em>\n<a name=\"153\" href=\"#153\">153</a> <em>     *</em>\n<a name=\"154\" href=\"#154\">154</a> <em>     * @param type full qualified service type, such as</em>\n<a name=\"155\" href=\"#155\">155</a> <em>     *        &lt;code>_http._tcp.local.&lt;/code>.</em>\n<a name=\"156\" href=\"#156\">156</a> <em>     * @param name full qualified service name, such as</em>\n<a name=\"157\" href=\"#157\">157</a> <em>     *        &lt;code>foobar._http._tcp.local.&lt;/code>.</em>\n<a name=\"158\" href=\"#158\">158</a> <em>     * @param timeout timeout in milliseconds</em>\n<a name=\"159\" href=\"#159\">159</a> <em>     *</em>\n<a name=\"160\" href=\"#160\">160</a> <em>     * @return null if the service information cannot be obtained</em>\n<a name=\"161\" href=\"#161\">161</a> <em>     */</em>\n<a name=\"162\" href=\"#162\">162</a>     <strong>public</strong> <a href=\"../../javax/jmdns/ServiceInfo.html\">ServiceInfo</a> getServiceInfo(String type, String name, <strong>int</strong> timeout)\n<a name=\"163\" href=\"#163\">163</a>     {\n<a name=\"164\" href=\"#164\">164</a>         <a href=\"../../javax/jmdns/ServiceInfo.html\">ServiceInfo</a> info = <strong>new</strong> <a href=\"../../javax/jmdns/ServiceInfo.html\">ServiceInfo</a>(type, name);\n<a name=\"165\" href=\"#165\">165</a> \n<a name=\"166\" href=\"#166\">166</a>         <strong>return</strong> info.request(<strong>this</strong>, timeout) ? info : <strong>null</strong>;\n<a name=\"167\" href=\"#167\">167</a>     }\n<a name=\"168\" href=\"#168\">168</a> \n<a name=\"169\" href=\"#169\">169</a>     <em>/**<em>*</em></em>\n<a name=\"170\" href=\"#170\">170</a> <em>     * Listen for services of a given type. The type has to be a fully</em>\n<a name=\"171\" href=\"#171\">171</a> <em>     * qualified type name such as &lt;code>_http._tcp.local.&lt;/code>.</em>\n<a name=\"172\" href=\"#172\">172</a> <em>     *</em>\n<a name=\"173\" href=\"#173\">173</a> <em>     * @param type full qualified service type, such as</em>\n<a name=\"174\" href=\"#174\">174</a> <em>     *        &lt;code>_http._tcp.local.&lt;/code>.</em>\n<a name=\"175\" href=\"#175\">175</a> <em>     * @param listener listener for service updates</em>\n<a name=\"176\" href=\"#176\">176</a> <em>     */</em>\n<a name=\"177\" href=\"#177\">177</a>     <strong>public</strong> <strong>synchronized</strong> <strong>void</strong> addServiceListener(String type,\n<a name=\"178\" href=\"#178\">178</a>                                                 <a href=\"../../javax/jmdns/ServiceListener.html\">ServiceListener</a> listener)\n<a name=\"179\" href=\"#179\">179</a>     {\n<a name=\"180\" href=\"#180\">180</a>         removeServiceListener(listener);\n<a name=\"181\" href=\"#181\">181</a>         browsers.addElement(<strong>new</strong> ServiceBrowser(type, listener));\n<a name=\"182\" href=\"#182\">182</a>     }\n<a name=\"183\" href=\"#183\">183</a> \n<a name=\"184\" href=\"#184\">184</a>     <em>/**<em>*</em></em>\n<a name=\"185\" href=\"#185\">185</a> <em>     * Listen for service types.</em>\n<a name=\"186\" href=\"#186\">186</a> <em>     *</em>\n<a name=\"187\" href=\"#187\">187</a> <em>     * @param listener listener for service types</em>\n<a name=\"188\" href=\"#188\">188</a> <em>     *</em>\n<a name=\"189\" href=\"#189\">189</a> <em>     * @throws IOException TODO</em>\n<a name=\"190\" href=\"#190\">190</a> <em>     */</em>\n<a name=\"191\" href=\"#191\">191</a>     <strong>public</strong> <strong>void</strong> addServiceTypeListener(<a href=\"../../javax/jmdns/ServiceTypeListener.html\">ServiceTypeListener</a> listener)\n<a name=\"192\" href=\"#192\">192</a>                                 throws IOException\n<a name=\"193\" href=\"#193\">193</a>     {\n<a name=\"194\" href=\"#194\">194</a>         <strong>synchronized</strong>(<strong>this</strong>)\n<a name=\"195\" href=\"#195\">195</a>         {\n<a name=\"196\" href=\"#196\">196</a>             removeServiceTypeListener(listener);\n<a name=\"197\" href=\"#197\">197</a>             typeListeners.addElement(listener);\n<a name=\"198\" href=\"#198\">198</a> \n<a name=\"199\" href=\"#199\">199</a>             <em class=\"comment\">// report service types</em>\n<a name=\"200\" href=\"#200\">200</a>             <strong>for</strong>(Enumeration e = serviceTypes.elements(); e.hasMoreElements();)\n<a name=\"201\" href=\"#201\">201</a>             {\n<a name=\"202\" href=\"#202\">202</a>                 listener.addServiceType(<strong>this</strong>, (String)e.nextElement());\n<a name=\"203\" href=\"#203\">203</a>             }\n<a name=\"204\" href=\"#204\">204</a>         }\n<a name=\"205\" href=\"#205\">205</a> \n<a name=\"206\" href=\"#206\">206</a>         <strong>try</strong>\n<a name=\"207\" href=\"#207\">207</a>         {\n<a name=\"208\" href=\"#208\">208</a>             <em class=\"comment\">// query for service types</em>\n<a name=\"209\" href=\"#209\">209</a>             <strong>long</strong> now = System.currentTimeMillis();\n<a name=\"210\" href=\"#210\">210</a>             <strong>long</strong> nextTime = now;\n<a name=\"211\" href=\"#211\">211</a> \n<a name=\"212\" href=\"#212\">212</a>             <strong>for</strong>(<strong>int</strong> i = 0; i &lt; 3;)\n<a name=\"213\" href=\"#213\">213</a>             {\n<a name=\"214\" href=\"#214\">214</a>                 <strong>if</strong>(now &lt; nextTime)\n<a name=\"215\" href=\"#215\">215</a>                 {\n<a name=\"216\" href=\"#216\">216</a>                     Thread.sleep(nextTime - now);\n<a name=\"217\" href=\"#217\">217</a>                     now = System.currentTimeMillis();\n<a name=\"218\" href=\"#218\">218</a> \n<a name=\"219\" href=\"#219\">219</a>                     <strong>continue</strong>;\n<a name=\"220\" href=\"#220\">220</a>                 }\n<a name=\"221\" href=\"#221\">221</a> \n<a name=\"222\" href=\"#222\">222</a>                 <a href=\"../../javax/jmdns/DNSOutgoing.html\">DNSOutgoing</a> out = <strong>new</strong> <a href=\"../../javax/jmdns/DNSOutgoing.html\">DNSOutgoing</a>(FLAGS_QR_QUERY);\n<a name=\"223\" href=\"#223\">223</a> \n<a name=\"224\" href=\"#224\">224</a>                 out.addQuestion(<strong>new</strong> <a href=\"../../javax/jmdns/DNSQuestion.html\">DNSQuestion</a>(<span class=\"string\">\"_services._mdns._udp.local.\"</span>,\n<a name=\"225\" href=\"#225\">225</a>                                                 TYPE_PTR, CLASS_IN));\n<a name=\"226\" href=\"#226\">226</a> \n<a name=\"227\" href=\"#227\">227</a>                 <strong>for</strong>(Enumeration e = serviceTypes.elements();\n<a name=\"228\" href=\"#228\">228</a>                     e.hasMoreElements();)\n<a name=\"229\" href=\"#229\">229</a>                 {\n<a name=\"230\" href=\"#230\">230</a>                     out.addAnswer(<strong>new</strong> DNSRecord.Pointer(<span class=\"string\">\"_services._mdns._udp.local.\"</span>,\n<a name=\"231\" href=\"#231\">231</a>                                                         TYPE_PTR, CLASS_IN,\n<a name=\"232\" href=\"#232\">232</a>                                                         DNS_TTL,\n<a name=\"233\" href=\"#233\">233</a>                                                         (String)e.nextElement()),\n<a name=\"234\" href=\"#234\">234</a>                                   0);\n<a name=\"235\" href=\"#235\">235</a>                 }\n<a name=\"236\" href=\"#236\">236</a> \n<a name=\"237\" href=\"#237\">237</a>                 send(out);\n<a name=\"238\" href=\"#238\">238</a>                 i++;\n<a name=\"239\" href=\"#239\">239</a>                 nextTime += 225;\n<a name=\"240\" href=\"#240\">240</a>             }\n<a name=\"241\" href=\"#241\">241</a>         }\n<a name=\"242\" href=\"#242\">242</a>         <strong>catch</strong>(InterruptedException e)\n<a name=\"243\" href=\"#243\">243</a>         {\n<a name=\"244\" href=\"#244\">244</a>             <strong>throw</strong> <strong>new</strong> IOException(<span class=\"string\">\"interrupted I/O\"</span>);\n<a name=\"245\" href=\"#245\">245</a>         }\n<a name=\"246\" href=\"#246\">246</a>     }\n<a name=\"247\" href=\"#247\">247</a> \n<a name=\"248\" href=\"#248\">248</a>     <em>/**<em>*</em></em>\n<a name=\"249\" href=\"#249\">249</a> <em>     * Close down jmdns. Release all resources and unregister all services.</em>\n<a name=\"250\" href=\"#250\">250</a> <em>     */</em>\n<a name=\"251\" href=\"#251\">251</a>     <strong>public</strong> <strong>synchronized</strong> <strong>void</strong> close()\n<a name=\"252\" href=\"#252\">252</a>     {\n<a name=\"253\" href=\"#253\">253</a>         <strong>if</strong>(!done)\n<a name=\"254\" href=\"#254\">254</a>         {\n<a name=\"255\" href=\"#255\">255</a>             done = <strong>true</strong>;\n<a name=\"256\" href=\"#256\">256</a>             notifyAll();\n<a name=\"257\" href=\"#257\">257</a> \n<a name=\"258\" href=\"#258\">258</a>             <em class=\"comment\">// remove the shutdown hook</em>\n<a name=\"259\" href=\"#259\">259</a>             <strong>if</strong>(shutdown != <strong>null</strong>)\n<a name=\"260\" href=\"#260\">260</a>             {\n<a name=\"261\" href=\"#261\">261</a>                 Runtime.getRuntime().removeShutdownHook(shutdown);\n<a name=\"262\" href=\"#262\">262</a>             }\n<a name=\"263\" href=\"#263\">263</a> \n<a name=\"264\" href=\"#264\">264</a>             <em class=\"comment\">// unregister services</em>\n<a name=\"265\" href=\"#265\">265</a>             unregisterAllServices();\n<a name=\"266\" href=\"#266\">266</a> \n<a name=\"267\" href=\"#267\">267</a>             <em class=\"comment\">// close socket</em>\n<a name=\"268\" href=\"#268\">268</a>             <strong>try</strong>\n<a name=\"269\" href=\"#269\">269</a>             {\n<a name=\"270\" href=\"#270\">270</a>                 socket.leaveGroup(group);\n<a name=\"271\" href=\"#271\">271</a>                 socket.close();\n<a name=\"272\" href=\"#272\">272</a>             }\n<a name=\"273\" href=\"#273\">273</a>             <strong>catch</strong>(IOException e)\n<a name=\"274\" href=\"#274\">274</a>             {\n<a name=\"275\" href=\"#275\">275</a>                 <em class=\"comment\">// ignore</em>\n<a name=\"276\" href=\"#276\">276</a>             }\n<a name=\"277\" href=\"#277\">277</a>         }\n<a name=\"278\" href=\"#278\">278</a>     }\n<a name=\"279\" href=\"#279\">279</a> \n<a name=\"280\" href=\"#280\">280</a>     <em>/**<em>*</em></em>\n<a name=\"281\" href=\"#281\">281</a> <em>     * Register a service. The service is registered for access by other jmdns</em>\n<a name=\"282\" href=\"#282\">282</a> <em>     * clients. The name of the service may be changed to make it unique.</em>\n<a name=\"283\" href=\"#283\">283</a> <em>     *</em>\n<a name=\"284\" href=\"#284\">284</a> <em>     * @param info TODO</em>\n<a name=\"285\" href=\"#285\">285</a> <em>     *</em>\n<a name=\"286\" href=\"#286\">286</a> <em>     * @throws IOException TODO</em>\n<a name=\"287\" href=\"#287\">287</a> <em>     */</em>\n<a name=\"288\" href=\"#288\">288</a>     <strong>public</strong> <strong>void</strong> registerService(<a href=\"../../javax/jmdns/ServiceInfo.html\">ServiceInfo</a> info) throws IOException\n<a name=\"289\" href=\"#289\">289</a>     {\n<a name=\"290\" href=\"#290\">290</a>         registerServiceType(info.type);\n<a name=\"291\" href=\"#291\">291</a> \n<a name=\"292\" href=\"#292\">292</a>         <em class=\"comment\">// bind the service to this address</em>\n<a name=\"293\" href=\"#293\">293</a>         info.server = host.name;\n<a name=\"294\" href=\"#294\">294</a>         info.addr = host.getInetAddress();\n<a name=\"295\" href=\"#295\">295</a> \n<a name=\"296\" href=\"#296\">296</a>         <strong>try</strong>\n<a name=\"297\" href=\"#297\">297</a>         {\n<a name=\"298\" href=\"#298\">298</a>             <strong>synchronized</strong>(<strong>this</strong>)\n<a name=\"299\" href=\"#299\">299</a>             {\n<a name=\"300\" href=\"#300\">300</a>                 <em class=\"comment\">// check for a unqiue name</em>\n<a name=\"301\" href=\"#301\">301</a>                 checkService(info);\n<a name=\"302\" href=\"#302\">302</a> \n<a name=\"303\" href=\"#303\">303</a>                 <em class=\"comment\">// add the service</em>\n<a name=\"304\" href=\"#304\">304</a>                 services.put(info.name.toLowerCase(), info);\n<a name=\"305\" href=\"#305\">305</a>             }\n<a name=\"306\" href=\"#306\">306</a> \n<a name=\"307\" href=\"#307\">307</a>             <em class=\"comment\">// announce the service</em>\n<a name=\"308\" href=\"#308\">308</a>             <strong>long</strong> now = System.currentTimeMillis();\n<a name=\"309\" href=\"#309\">309</a>             <strong>long</strong> nextTime = now;\n<a name=\"310\" href=\"#310\">310</a> \n<a name=\"311\" href=\"#311\">311</a>             <strong>for</strong>(<strong>int</strong> i = 0; i &lt; 3;)\n<a name=\"312\" href=\"#312\">312</a>             {\n<a name=\"313\" href=\"#313\">313</a>                 <strong>if</strong>(now &lt; nextTime)\n<a name=\"314\" href=\"#314\">314</a>                 {\n<a name=\"315\" href=\"#315\">315</a>                     Thread.sleep(nextTime - now);\n<a name=\"316\" href=\"#316\">316</a>                     now = System.currentTimeMillis();\n<a name=\"317\" href=\"#317\">317</a> \n<a name=\"318\" href=\"#318\">318</a>                     <strong>continue</strong>;\n<a name=\"319\" href=\"#319\">319</a>                 }\n<a name=\"320\" href=\"#320\">320</a> \n<a name=\"321\" href=\"#321\">321</a>                 <a href=\"../../javax/jmdns/DNSOutgoing.html\">DNSOutgoing</a> out = <strong>new</strong> <a href=\"../../javax/jmdns/DNSOutgoing.html\">DNSOutgoing</a>(FLAGS_QR_RESPONSE | FLAGS_AA);\n<a name=\"322\" href=\"#322\">322</a> \n<a name=\"323\" href=\"#323\">323</a>                 out.addAnswer(<strong>new</strong> DNSRecord.Pointer(info.type, TYPE_PTR,\n<a name=\"324\" href=\"#324\">324</a>                                                     CLASS_IN, DNS_TTL, info.name),\n<a name=\"325\" href=\"#325\">325</a>                               0);\n<a name=\"326\" href=\"#326\">326</a>                 out.addAnswer(<strong>new</strong> DNSRecord.Service(info.name, TYPE_SRV,\n<a name=\"327\" href=\"#327\">327</a>                                                     CLASS_IN, DNS_TTL,\n<a name=\"328\" href=\"#328\">328</a>                                                     info.priority, info.weight,\n<a name=\"329\" href=\"#329\">329</a>                                                     info.port, host.name), 0);\n<a name=\"330\" href=\"#330\">330</a>                 out.addAnswer(<strong>new</strong> DNSRecord.Text(info.name, TYPE_TXT, CLASS_IN,\n<a name=\"331\" href=\"#331\">331</a>                                                  DNS_TTL, info.text), 0);\n<a name=\"332\" href=\"#332\">332</a>                 out.addAnswer(host, 0);\n<a name=\"333\" href=\"#333\">333</a>                 send(out);\n<a name=\"334\" href=\"#334\">334</a>                 i++;\n<a name=\"335\" href=\"#335\">335</a>                 nextTime += 225;\n<a name=\"336\" href=\"#336\">336</a>             }\n<a name=\"337\" href=\"#337\">337</a>         }\n<a name=\"338\" href=\"#338\">338</a>         <strong>catch</strong>(InterruptedException e)\n<a name=\"339\" href=\"#339\">339</a>         {\n<a name=\"340\" href=\"#340\">340</a>             <strong>throw</strong> <strong>new</strong> IOException(<span class=\"string\">\"interrupted I/O\"</span>);\n<a name=\"341\" href=\"#341\">341</a>         }\n<a name=\"342\" href=\"#342\">342</a>     }\n<a name=\"343\" href=\"#343\">343</a> \n<a name=\"344\" href=\"#344\">344</a>     <em>/**<em>*</em></em>\n<a name=\"345\" href=\"#345\">345</a> <em>     * Register a service type. If this service type was not already known, all</em>\n<a name=\"346\" href=\"#346\">346</a> <em>     * service listeners will be notified of the new service type. Service</em>\n<a name=\"347\" href=\"#347\">347</a> <em>     * types are automatically registered as they are discovered.</em>\n<a name=\"348\" href=\"#348\">348</a> <em>     *</em>\n<a name=\"349\" href=\"#349\">349</a> <em>     * @param type TODO</em>\n<a name=\"350\" href=\"#350\">350</a> <em>     */</em>\n<a name=\"351\" href=\"#351\">351</a>     <strong>public</strong> <strong>synchronized</strong> <strong>void</strong> registerServiceType(String type)\n<a name=\"352\" href=\"#352\">352</a>     {\n<a name=\"353\" href=\"#353\">353</a>         String name = type.toLowerCase();\n<a name=\"354\" href=\"#354\">354</a> \n<a name=\"355\" href=\"#355\">355</a>         <strong>if</strong>(serviceTypes.get(name) == <strong>null</strong>)\n<a name=\"356\" href=\"#356\">356</a>         {\n<a name=\"357\" href=\"#357\">357</a>             <strong>if</strong>(type.indexOf(<span class=\"string\">\"._mdns._udp.\"</span>) &lt; 0)\n<a name=\"358\" href=\"#358\">358</a>             {\n<a name=\"359\" href=\"#359\">359</a>                 serviceTypes.put(name, type);\n<a name=\"360\" href=\"#360\">360</a> \n<a name=\"361\" href=\"#361\">361</a>                 <strong>for</strong>(Enumeration e = typeListeners.elements();\n<a name=\"362\" href=\"#362\">362</a>                     e.hasMoreElements();)\n<a name=\"363\" href=\"#363\">363</a>                 {\n<a name=\"364\" href=\"#364\">364</a>                     ((<a href=\"../../javax/jmdns/ServiceTypeListener.html\">ServiceTypeListener</a>)e.nextElement()).addServiceType(<strong>this</strong>,\n<a name=\"365\" href=\"#365\">365</a>                                                                           type);\n<a name=\"366\" href=\"#366\">366</a>                 }\n<a name=\"367\" href=\"#367\">367</a>             }\n<a name=\"368\" href=\"#368\">368</a>         }\n<a name=\"369\" href=\"#369\">369</a>     }\n<a name=\"370\" href=\"#370\">370</a> \n<a name=\"371\" href=\"#371\">371</a>     <em>/**<em>*</em></em>\n<a name=\"372\" href=\"#372\">372</a> <em>     * Remove listener for services of a given type.</em>\n<a name=\"373\" href=\"#373\">373</a> <em>     *</em>\n<a name=\"374\" href=\"#374\">374</a> <em>     * @param listener listener for service updates</em>\n<a name=\"375\" href=\"#375\">375</a> <em>     */</em>\n<a name=\"376\" href=\"#376\">376</a>     <strong>public</strong> <strong>synchronized</strong> <strong>void</strong> removeServiceListener(<a href=\"../../javax/jmdns/ServiceListener.html\">ServiceListener</a> listener)\n<a name=\"377\" href=\"#377\">377</a>     {\n<a name=\"378\" href=\"#378\">378</a>         <strong>for</strong>(<strong>int</strong> i = browsers.size(); i-- > 0;)\n<a name=\"379\" href=\"#379\">379</a>         {\n<a name=\"380\" href=\"#380\">380</a>             ServiceBrowser browser = (ServiceBrowser)browsers.elementAt(i);\n<a name=\"381\" href=\"#381\">381</a> \n<a name=\"382\" href=\"#382\">382</a>             <strong>if</strong>(browser.listener == listener)\n<a name=\"383\" href=\"#383\">383</a>             {\n<a name=\"384\" href=\"#384\">384</a>                 browsers.removeElementAt(i);\n<a name=\"385\" href=\"#385\">385</a>                 browser.close();\n<a name=\"386\" href=\"#386\">386</a> \n<a name=\"387\" href=\"#387\">387</a>                 <strong>return</strong>;\n<a name=\"388\" href=\"#388\">388</a>             }\n<a name=\"389\" href=\"#389\">389</a>         }\n<a name=\"390\" href=\"#390\">390</a>     }\n<a name=\"391\" href=\"#391\">391</a> \n<a name=\"392\" href=\"#392\">392</a>     <em>/**<em>*</em></em>\n<a name=\"393\" href=\"#393\">393</a> <em>     * Remove listener for service types.</em>\n<a name=\"394\" href=\"#394\">394</a> <em>     *</em>\n<a name=\"395\" href=\"#395\">395</a> <em>     * @param listener listener for service types</em>\n<a name=\"396\" href=\"#396\">396</a> <em>     */</em>\n<a name=\"397\" href=\"#397\">397</a>     <strong>public</strong> <strong>synchronized</strong> <strong>void</strong> removeServiceTypeListener(<a href=\"../../javax/jmdns/ServiceTypeListener.html\">ServiceTypeListener</a> listener)\n<a name=\"398\" href=\"#398\">398</a>     {\n<a name=\"399\" href=\"#399\">399</a>         typeListeners.removeElement(listener);\n<a name=\"400\" href=\"#400\">400</a>     }\n<a name=\"401\" href=\"#401\">401</a> \n<a name=\"402\" href=\"#402\">402</a>     <em>/**<em>*</em></em>\n<a name=\"403\" href=\"#403\">403</a> <em>     * Request service information. The information about the service is</em>\n<a name=\"404\" href=\"#404\">404</a> <em>     * requested and the ServiceListener.resolveService method is called as</em>\n<a name=\"405\" href=\"#405\">405</a> <em>     * soon as it is available.</em>\n<a name=\"406\" href=\"#406\">406</a> <em>     *</em>\n<a name=\"407\" href=\"#407\">407</a> <em>     * @param type TODO</em>\n<a name=\"408\" href=\"#408\">408</a> <em>     * @param name TODO</em>\n<a name=\"409\" href=\"#409\">409</a> <em>     */</em>\n<a name=\"410\" href=\"#410\">410</a>     <strong>public</strong> <strong>void</strong> requestServiceInfo(String type, String name)\n<a name=\"411\" href=\"#411\">411</a>     {\n<a name=\"412\" href=\"#412\">412</a>         requestServiceInfo(type, name, 3 * 1000);\n<a name=\"413\" href=\"#413\">413</a>     }\n<a name=\"414\" href=\"#414\">414</a> \n<a name=\"415\" href=\"#415\">415</a>     <em>/**<em>*</em></em>\n<a name=\"416\" href=\"#416\">416</a> <em>     * Request service information. The information about the service is</em>\n<a name=\"417\" href=\"#417\">417</a> <em>     * requested and the ServiceListener.resolveService method is called as</em>\n<a name=\"418\" href=\"#418\">418</a> <em>     * soon as it is available.</em>\n<a name=\"419\" href=\"#419\">419</a> <em>     *</em>\n<a name=\"420\" href=\"#420\">420</a> <em>     * @param type TODO</em>\n<a name=\"421\" href=\"#421\">421</a> <em>     * @param name TODO</em>\n<a name=\"422\" href=\"#422\">422</a> <em>     * @param timeout TODO</em>\n<a name=\"423\" href=\"#423\">423</a> <em>     */</em>\n<a name=\"424\" href=\"#424\">424</a>     <strong>public</strong> <strong>void</strong> requestServiceInfo(String type, String name, <strong>int</strong> timeout)\n<a name=\"425\" href=\"#425\">425</a>     {\n<a name=\"426\" href=\"#426\">426</a>         registerServiceType(type);\n<a name=\"427\" href=\"#427\">427</a> \n<a name=\"428\" href=\"#428\">428</a>         <strong>new</strong> Thread(<strong>new</strong> ServiceResolver(<strong>new</strong> <a href=\"../../javax/jmdns/ServiceInfo.html\">ServiceInfo</a>(type, name), timeout),\n<a name=\"429\" href=\"#429\">429</a>                    <span class=\"string\">\"JmDNS.ServiceResolver\"</span>).start();\n<a name=\"430\" href=\"#430\">430</a>     }\n<a name=\"431\" href=\"#431\">431</a> \n<a name=\"432\" href=\"#432\">432</a>     <em>/**<em>*</em></em>\n<a name=\"433\" href=\"#433\">433</a> <em>     * Unregister a service.</em>\n<a name=\"434\" href=\"#434\">434</a> <em>     */</em>\n<a name=\"435\" href=\"#435\">435</a>     <strong>public</strong> <strong>synchronized</strong> <strong>void</strong> unregisterAllServices()\n<a name=\"436\" href=\"#436\">436</a>     {\n<a name=\"437\" href=\"#437\">437</a>         <strong>if</strong>(services.size() == 0)\n<a name=\"438\" href=\"#438\">438</a>         {\n<a name=\"439\" href=\"#439\">439</a>             <strong>return</strong>;\n<a name=\"440\" href=\"#440\">440</a>         }\n<a name=\"441\" href=\"#441\">441</a> \n<a name=\"442\" href=\"#442\">442</a>         <strong>try</strong>\n<a name=\"443\" href=\"#443\">443</a>         {\n<a name=\"444\" href=\"#444\">444</a>             <em class=\"comment\">// unregister all services</em>\n<a name=\"445\" href=\"#445\">445</a>             <strong>long</strong> now = System.currentTimeMillis();\n<a name=\"446\" href=\"#446\">446</a>             <strong>long</strong> nextTime = now;\n<a name=\"447\" href=\"#447\">447</a> \n<a name=\"448\" href=\"#448\">448</a>             <strong>for</strong>(<strong>int</strong> i = 0; i &lt; 3;)\n<a name=\"449\" href=\"#449\">449</a>             {\n<a name=\"450\" href=\"#450\">450</a>                 <strong>if</strong>(now &lt; nextTime)\n<a name=\"451\" href=\"#451\">451</a>                 {\n<a name=\"452\" href=\"#452\">452</a>                     Thread.sleep(nextTime - now);\n<a name=\"453\" href=\"#453\">453</a>                     now = System.currentTimeMillis();\n<a name=\"454\" href=\"#454\">454</a> \n<a name=\"455\" href=\"#455\">455</a>                     <strong>continue</strong>;\n<a name=\"456\" href=\"#456\">456</a>                 }\n<a name=\"457\" href=\"#457\">457</a> \n<a name=\"458\" href=\"#458\">458</a>                 <a href=\"../../javax/jmdns/DNSOutgoing.html\">DNSOutgoing</a> out = <strong>new</strong> <a href=\"../../javax/jmdns/DNSOutgoing.html\">DNSOutgoing</a>(FLAGS_QR_RESPONSE | FLAGS_AA);\n<a name=\"459\" href=\"#459\">459</a> \n<a name=\"460\" href=\"#460\">460</a>                 <strong>for</strong>(Enumeration e = services.elements(); e.hasMoreElements();)\n<a name=\"461\" href=\"#461\">461</a>                 {\n<a name=\"462\" href=\"#462\">462</a>                     <a href=\"../../javax/jmdns/ServiceInfo.html\">ServiceInfo</a> info = (ServiceInfo)e.nextElement();\n<a name=\"463\" href=\"#463\">463</a> \n<a name=\"464\" href=\"#464\">464</a>                     out.addAnswer(<strong>new</strong> DNSRecord.Pointer(info.type, TYPE_PTR,\n<a name=\"465\" href=\"#465\">465</a>                                                         CLASS_IN, 0, info.name),\n<a name=\"466\" href=\"#466\">466</a>                                   0);\n<a name=\"467\" href=\"#467\">467</a>                     out.addAnswer(<strong>new</strong> DNSRecord.Service(info.name, TYPE_SRV,\n<a name=\"468\" href=\"#468\">468</a>                                                         CLASS_IN, 0,\n<a name=\"469\" href=\"#469\">469</a>                                                         info.priority,\n<a name=\"470\" href=\"#470\">470</a>                                                         info.weight, info.port,\n<a name=\"471\" href=\"#471\">471</a>                                                         host.name), 0);\n<a name=\"472\" href=\"#472\">472</a>                     out.addAnswer(<strong>new</strong> DNSRecord.Text(info.name, TYPE_TXT,\n<a name=\"473\" href=\"#473\">473</a>                                                      CLASS_IN, 0, info.text), 0);\n<a name=\"474\" href=\"#474\">474</a>                 }\n<a name=\"475\" href=\"#475\">475</a> \n<a name=\"476\" href=\"#476\">476</a>                 send(out);\n<a name=\"477\" href=\"#477\">477</a>                 i++;\n<a name=\"478\" href=\"#478\">478</a>                 nextTime += 125;\n<a name=\"479\" href=\"#479\">479</a>             }\n<a name=\"480\" href=\"#480\">480</a>         }\n<a name=\"481\" href=\"#481\">481</a>         <strong>catch</strong>(IOException e)\n<a name=\"482\" href=\"#482\">482</a>         {\n<a name=\"483\" href=\"#483\">483</a>             <em class=\"comment\">// ignore</em>\n<a name=\"484\" href=\"#484\">484</a>         }\n<a name=\"485\" href=\"#485\">485</a>         <strong>catch</strong>(InterruptedException e)\n<a name=\"486\" href=\"#486\">486</a>         {\n<a name=\"487\" href=\"#487\">487</a>             <em class=\"comment\">// ignore</em>\n<a name=\"488\" href=\"#488\">488</a>         }\n<a name=\"489\" href=\"#489\">489</a>     }\n<a name=\"490\" href=\"#490\">490</a> \n<a name=\"491\" href=\"#491\">491</a>     <em>/**<em>*</em></em>\n<a name=\"492\" href=\"#492\">492</a> <em>     * Unregister a service. The service should have been registered.</em>\n<a name=\"493\" href=\"#493\">493</a> <em>     *</em>\n<a name=\"494\" href=\"#494\">494</a> <em>     * @param info TODO</em>\n<a name=\"495\" href=\"#495\">495</a> <em>     */</em>\n<a name=\"496\" href=\"#496\">496</a>     <strong>public</strong> <strong>void</strong> unregisterService(<a href=\"../../javax/jmdns/ServiceInfo.html\">ServiceInfo</a> info)\n<a name=\"497\" href=\"#497\">497</a>     {\n<a name=\"498\" href=\"#498\">498</a>         <strong>try</strong>\n<a name=\"499\" href=\"#499\">499</a>         {\n<a name=\"500\" href=\"#500\">500</a>             services.remove(info.name.toLowerCase());\n<a name=\"501\" href=\"#501\">501</a> \n<a name=\"502\" href=\"#502\">502</a>             <em class=\"comment\">// unregister the service</em>\n<a name=\"503\" href=\"#503\">503</a>             <strong>long</strong> now = System.currentTimeMillis();\n<a name=\"504\" href=\"#504\">504</a>             <strong>long</strong> nextTime = now;\n<a name=\"505\" href=\"#505\">505</a> \n<a name=\"506\" href=\"#506\">506</a>             <strong>for</strong>(<strong>int</strong> i = 0; i &lt; 3;)\n<a name=\"507\" href=\"#507\">507</a>             {\n<a name=\"508\" href=\"#508\">508</a>                 <strong>if</strong>(now &lt; nextTime)\n<a name=\"509\" href=\"#509\">509</a>                 {\n<a name=\"510\" href=\"#510\">510</a>                     Thread.sleep(nextTime - now);\n<a name=\"511\" href=\"#511\">511</a>                     now = System.currentTimeMillis();\n<a name=\"512\" href=\"#512\">512</a> \n<a name=\"513\" href=\"#513\">513</a>                     <strong>continue</strong>;\n<a name=\"514\" href=\"#514\">514</a>                 }\n<a name=\"515\" href=\"#515\">515</a> \n<a name=\"516\" href=\"#516\">516</a>                 <a href=\"../../javax/jmdns/DNSOutgoing.html\">DNSOutgoing</a> out = <strong>new</strong> <a href=\"../../javax/jmdns/DNSOutgoing.html\">DNSOutgoing</a>(FLAGS_QR_RESPONSE | FLAGS_AA);\n<a name=\"517\" href=\"#517\">517</a> \n<a name=\"518\" href=\"#518\">518</a>                 out.addAnswer(<strong>new</strong> DNSRecord.Pointer(info.type, TYPE_PTR,\n<a name=\"519\" href=\"#519\">519</a>                                                     CLASS_IN, 0, info.name), 0);\n<a name=\"520\" href=\"#520\">520</a>                 out.addAnswer(<strong>new</strong> DNSRecord.Service(info.name, TYPE_SRV,\n<a name=\"521\" href=\"#521\">521</a>                                                     CLASS_IN, 0, info.priority,\n<a name=\"522\" href=\"#522\">522</a>                                                     info.weight, info.port,\n<a name=\"523\" href=\"#523\">523</a>                                                     host.name), 0);\n<a name=\"524\" href=\"#524\">524</a>                 out.addAnswer(<strong>new</strong> DNSRecord.Text(info.name, TYPE_TXT, CLASS_IN,\n<a name=\"525\" href=\"#525\">525</a>                                                  0, info.text), 0);\n<a name=\"526\" href=\"#526\">526</a>                 send(out);\n<a name=\"527\" href=\"#527\">527</a>                 i++;\n<a name=\"528\" href=\"#528\">528</a>                 nextTime += 125;\n<a name=\"529\" href=\"#529\">529</a>             }\n<a name=\"530\" href=\"#530\">530</a>         }\n<a name=\"531\" href=\"#531\">531</a>         <strong>catch</strong>(IOException e)\n<a name=\"532\" href=\"#532\">532</a>         {\n<a name=\"533\" href=\"#533\">533</a>             <em class=\"comment\">// ignore</em>\n<a name=\"534\" href=\"#534\">534</a>         }\n<a name=\"535\" href=\"#535\">535</a>         <strong>catch</strong>(InterruptedException e)\n<a name=\"536\" href=\"#536\">536</a>         {\n<a name=\"537\" href=\"#537\">537</a>             <em class=\"comment\">// ignore</em>\n<a name=\"538\" href=\"#538\">538</a>         }\n<a name=\"539\" href=\"#539\">539</a>     }\n<a name=\"540\" href=\"#540\">540</a> \n<a name=\"541\" href=\"#541\">541</a>     <em>/**<em>*</em></em>\n<a name=\"542\" href=\"#542\">542</a> <em>     * Check if an address is linklocal.</em>\n<a name=\"543\" href=\"#543\">543</a> <em>     *</em>\n<a name=\"544\" href=\"#544\">544</a> <em>     * @param addr TODO</em>\n<a name=\"545\" href=\"#545\">545</a> <em>     *</em>\n<a name=\"546\" href=\"#546\">546</a> <em>     * @return TODO</em>\n<a name=\"547\" href=\"#547\">547</a> <em>     */</em>\n<a name=\"548\" href=\"#548\">548</a>     <strong>static</strong> <strong>boolean</strong> isLinkLocal(InetAddress addr)\n<a name=\"549\" href=\"#549\">549</a>     {\n<a name=\"550\" href=\"#550\">550</a>         <strong>return</strong> (addr != <strong>null</strong>) &amp;&amp; addr.getHostAddress().startsWith(<span class=\"string\">\"169.254.\"</span>);\n<a name=\"551\" href=\"#551\">551</a>     }\n<a name=\"552\" href=\"#552\">552</a> \n<a name=\"553\" href=\"#553\">553</a>     <em>/**<em>*</em></em>\n<a name=\"554\" href=\"#554\">554</a> <em>     * Check if an address is the loopback address</em>\n<a name=\"555\" href=\"#555\">555</a> <em>     *</em>\n<a name=\"556\" href=\"#556\">556</a> <em>     * @param addr TODO</em>\n<a name=\"557\" href=\"#557\">557</a> <em>     *</em>\n<a name=\"558\" href=\"#558\">558</a> <em>     * @return TODO</em>\n<a name=\"559\" href=\"#559\">559</a> <em>     */</em>\n<a name=\"560\" href=\"#560\">560</a>     <strong>static</strong> <strong>boolean</strong> isLoopback(InetAddress addr)\n<a name=\"561\" href=\"#561\">561</a>     {\n<a name=\"562\" href=\"#562\">562</a>         <strong>return</strong> (addr != <strong>null</strong>) &amp;&amp; addr.getHostAddress().startsWith(<span class=\"string\">\"127.0.0.1\"</span>);\n<a name=\"563\" href=\"#563\">563</a>     }\n<a name=\"564\" href=\"#564\">564</a> \n<a name=\"565\" href=\"#565\">565</a>     <em>/**<em>*</em></em>\n<a name=\"566\" href=\"#566\">566</a> <em>     * Add a listener for a question. The listener will receive updates to of</em>\n<a name=\"567\" href=\"#567\">567</a> <em>     * answers to the question as they arrive, or from the cache if they are</em>\n<a name=\"568\" href=\"#568\">568</a> <em>     * already available.</em>\n<a name=\"569\" href=\"#569\">569</a> <em>     *</em>\n<a name=\"570\" href=\"#570\">570</a> <em>     * @param listener TODO</em>\n<a name=\"571\" href=\"#571\">571</a> <em>     * @param question TODO</em>\n<a name=\"572\" href=\"#572\">572</a> <em>     */</em>\n<a name=\"573\" href=\"#573\">573</a>     <strong>synchronized</strong> <strong>void</strong> addListener(Listener listener, <a href=\"../../javax/jmdns/DNSQuestion.html\">DNSQuestion</a> question)\n<a name=\"574\" href=\"#574\">574</a>     {\n<a name=\"575\" href=\"#575\">575</a>         <strong>long</strong> now = System.currentTimeMillis();\n<a name=\"576\" href=\"#576\">576</a> \n<a name=\"577\" href=\"#577\">577</a>         <em class=\"comment\">// add the new listener</em>\n<a name=\"578\" href=\"#578\">578</a>         listeners.addElement(listener);\n<a name=\"579\" href=\"#579\">579</a> \n<a name=\"580\" href=\"#580\">580</a>         <em class=\"comment\">// report existing matched records</em>\n<a name=\"581\" href=\"#581\">581</a>         <strong>if</strong>(question != <strong>null</strong>)\n<a name=\"582\" href=\"#582\">582</a>         {\n<a name=\"583\" href=\"#583\">583</a>             <strong>for</strong>(Iterator i = cache.find(question.name); i.hasNext();)\n<a name=\"584\" href=\"#584\">584</a>             {\n<a name=\"585\" href=\"#585\">585</a>                 <a href=\"../../javax/jmdns/DNSRecord.html\">DNSRecord</a> c = (DNSRecord)i.next();\n<a name=\"586\" href=\"#586\">586</a> \n<a name=\"587\" href=\"#587\">587</a>                 <strong>if</strong>(question.answeredBy(c) &amp;&amp; !c.isExpired(now))\n<a name=\"588\" href=\"#588\">588</a>                 {\n<a name=\"589\" href=\"#589\">589</a>                     listener.updateRecord(<strong>this</strong>, now, c);\n<a name=\"590\" href=\"#590\">590</a>                 }\n<a name=\"591\" href=\"#591\">591</a>             }\n<a name=\"592\" href=\"#592\">592</a>         }\n<a name=\"593\" href=\"#593\">593</a> \n<a name=\"594\" href=\"#594\">594</a>         notifyAll();\n<a name=\"595\" href=\"#595\">595</a>     }\n<a name=\"596\" href=\"#596\">596</a> \n<a name=\"597\" href=\"#597\">597</a>     <em>/**<em>*</em></em>\n<a name=\"598\" href=\"#598\">598</a> <em>     * Check that a service name is unique.</em>\n<a name=\"599\" href=\"#599\">599</a> <em>     *</em>\n<a name=\"600\" href=\"#600\">600</a> <em>     * @param info TODO</em>\n<a name=\"601\" href=\"#601\">601</a> <em>     *</em>\n<a name=\"602\" href=\"#602\">602</a> <em>     * @throws IOException TODO</em>\n<a name=\"603\" href=\"#603\">603</a> <em>     * @throws InterruptedException TODO</em>\n<a name=\"604\" href=\"#604\">604</a> <em>     */</em>\n<a name=\"605\" href=\"#605\">605</a>     <strong>void</strong> checkService(<a href=\"../../javax/jmdns/ServiceInfo.html\">ServiceInfo</a> info)\n<a name=\"606\" href=\"#606\">606</a>                throws IOException, \n<a name=\"607\" href=\"#607\">607</a>                       InterruptedException\n<a name=\"608\" href=\"#608\">608</a>     {\n<a name=\"609\" href=\"#609\">609</a>         <strong>long</strong> now = System.currentTimeMillis();\n<a name=\"610\" href=\"#610\">610</a>         <strong>long</strong> nextTime = now;\n<a name=\"611\" href=\"#611\">611</a> \n<a name=\"612\" href=\"#612\">612</a>         <strong>for</strong>(<strong>int</strong> i = 0; i &lt; 3;)\n<a name=\"613\" href=\"#613\">613</a>         {\n<a name=\"614\" href=\"#614\">614</a>             <strong>for</strong>(Iterator j = cache.find(info.type); j.hasNext();)\n<a name=\"615\" href=\"#615\">615</a>             {\n<a name=\"616\" href=\"#616\">616</a>                 <a href=\"../../javax/jmdns/DNSRecord.html\">DNSRecord</a> a = (DNSRecord)j.next();\n<a name=\"617\" href=\"#617\">617</a> \n<a name=\"618\" href=\"#618\">618</a>                 <strong>if</strong>((a.type == TYPE_PTR) &amp;&amp; !a.isExpired(now)\n<a name=\"619\" href=\"#619\">619</a>                    &amp;&amp; info.name.equals(((DNSRecord.Pointer)a).alias))\n<a name=\"620\" href=\"#620\">620</a>                 {\n<a name=\"621\" href=\"#621\">621</a>                     String name = info.getName();\n<a name=\"622\" href=\"#622\">622</a> \n<a name=\"623\" href=\"#623\">623</a>                     <strong>try</strong>\n<a name=\"624\" href=\"#624\">624</a>                     {\n<a name=\"625\" href=\"#625\">625</a>                         <strong>int</strong> l = name.lastIndexOf('[');\n<a name=\"626\" href=\"#626\">626</a>                         <strong>int</strong> r = name.lastIndexOf(']');\n<a name=\"627\" href=\"#627\">627</a> \n<a name=\"628\" href=\"#628\">628</a>                         <strong>if</strong>((l >= 0) &amp;&amp; (l &lt; r))\n<a name=\"629\" href=\"#629\">629</a>                         {\n<a name=\"630\" href=\"#630\">630</a>                             name = name.substring(0, l) + <span class=\"string\">\"[\"</span>\n<a name=\"631\" href=\"#631\">631</a>                                    + (Integer.parseInt(name.substring(l + 1, r))\n<a name=\"632\" href=\"#632\">632</a>                                    + 1) + <span class=\"string\">\"]\"</span>;\n<a name=\"633\" href=\"#633\">633</a>                         }\n<a name=\"634\" href=\"#634\">634</a>                         <strong>else</strong>\n<a name=\"635\" href=\"#635\">635</a>                         {\n<a name=\"636\" href=\"#636\">636</a>                             name += <span class=\"string\">\" [1]\"</span>;\n<a name=\"637\" href=\"#637\">637</a>                         }\n<a name=\"638\" href=\"#638\">638</a>                     }\n<a name=\"639\" href=\"#639\">639</a>                     <strong>catch</strong>(NumberFormatException e)\n<a name=\"640\" href=\"#640\">640</a>                     {\n<a name=\"641\" href=\"#641\">641</a>                         name += <span class=\"string\">\" [1]\"</span>;\n<a name=\"642\" href=\"#642\">642</a>                     }\n<a name=\"643\" href=\"#643\">643</a> \n<a name=\"644\" href=\"#644\">644</a>                     info.name = name + <span class=\"string\">\".\"</span> + info.type;\n<a name=\"645\" href=\"#645\">645</a>                     i = 0;\n<a name=\"646\" href=\"#646\">646</a> \n<a name=\"647\" href=\"#647\">647</a>                     <strong>break</strong>;\n<a name=\"648\" href=\"#648\">648</a>                 }\n<a name=\"649\" href=\"#649\">649</a>             }\n<a name=\"650\" href=\"#650\">650</a> \n<a name=\"651\" href=\"#651\">651</a>             <a href=\"../../javax/jmdns/DNSOutgoing.html\">DNSOutgoing</a> out = <strong>new</strong> <a href=\"../../javax/jmdns/DNSOutgoing.html\">DNSOutgoing</a>(FLAGS_QR_QUERY | FLAGS_AA);\n<a name=\"652\" href=\"#652\">652</a> \n<a name=\"653\" href=\"#653\">653</a>             out.addQuestion(<strong>new</strong> <a href=\"../../javax/jmdns/DNSQuestion.html\">DNSQuestion</a>(info.type, TYPE_PTR, CLASS_IN));\n<a name=\"654\" href=\"#654\">654</a>             out.addAuthorativeAnswer(<strong>new</strong> DNSRecord.Pointer(info.type, TYPE_PTR,\n<a name=\"655\" href=\"#655\">655</a>                                                            CLASS_IN, DNS_TTL,\n<a name=\"656\" href=\"#656\">656</a>                                                            info.name));\n<a name=\"657\" href=\"#657\">657</a>             send(out);\n<a name=\"658\" href=\"#658\">658</a>             i++;\n<a name=\"659\" href=\"#659\">659</a>             nextTime += 175;\n<a name=\"660\" href=\"#660\">660</a> \n<a name=\"661\" href=\"#661\">661</a>             <strong>if</strong>(now &lt; nextTime)\n<a name=\"662\" href=\"#662\">662</a>             {\n<a name=\"663\" href=\"#663\">663</a>                 wait(nextTime - now);\n<a name=\"664\" href=\"#664\">664</a>                 now = System.currentTimeMillis();\n<a name=\"665\" href=\"#665\">665</a> \n<a name=\"666\" href=\"#666\">666</a>                 <strong>continue</strong>;\n<a name=\"667\" href=\"#667\">667</a>             }\n<a name=\"668\" href=\"#668\">668</a>         }\n<a name=\"669\" href=\"#669\">669</a>     }\n<a name=\"670\" href=\"#670\">670</a> \n<a name=\"671\" href=\"#671\">671</a>     <em>/**<em>*</em></em>\n<a name=\"672\" href=\"#672\">672</a> <em>     * Handle an incoming query. See if we can answer any part of it given our</em>\n<a name=\"673\" href=\"#673\">673</a> <em>     * registered records.</em>\n<a name=\"674\" href=\"#674\">674</a> <em>     *</em>\n<a name=\"675\" href=\"#675\">675</a> <em>     * @param in TODO</em>\n<a name=\"676\" href=\"#676\">676</a> <em>     * @param addr TODO</em>\n<a name=\"677\" href=\"#677\">677</a> <em>     * @param port TODO</em>\n<a name=\"678\" href=\"#678\">678</a> <em>     *</em>\n<a name=\"679\" href=\"#679\">679</a> <em>     * @throws IOException TODO</em>\n<a name=\"680\" href=\"#680\">680</a> <em>     */</em>\n<a name=\"681\" href=\"#681\">681</a>     <strong>synchronized</strong> <strong>void</strong> handleQuery(<a href=\"../../javax/jmdns/DNSIncoming.html\">DNSIncoming</a> in, InetAddress addr, <strong>int</strong> port)\n<a name=\"682\" href=\"#682\">682</a>                            throws IOException\n<a name=\"683\" href=\"#683\">683</a>     {\n<a name=\"684\" href=\"#684\">684</a>         <a href=\"../../javax/jmdns/DNSOutgoing.html\">DNSOutgoing</a> out = <strong>null</strong>;\n<a name=\"685\" href=\"#685\">685</a>         Vector additionals = <strong>null</strong>;\n<a name=\"686\" href=\"#686\">686</a> \n<a name=\"687\" href=\"#687\">687</a>         <em class=\"comment\">// for unicast responses the question must be included</em>\n<a name=\"688\" href=\"#688\">688</a>         <strong>if</strong>(port != MDNS_PORT)\n<a name=\"689\" href=\"#689\">689</a>         {\n<a name=\"690\" href=\"#690\">690</a>             out = <strong>new</strong> <a href=\"../../javax/jmdns/DNSOutgoing.html\">DNSOutgoing</a>(FLAGS_QR_RESPONSE | FLAGS_AA, false);\n<a name=\"691\" href=\"#691\">691</a> \n<a name=\"692\" href=\"#692\">692</a>             <strong>for</strong>(Enumeration e = in.questions.elements(); e.hasMoreElements();)\n<a name=\"693\" href=\"#693\">693</a>             {\n<a name=\"694\" href=\"#694\">694</a>                 out.addQuestion((DNSQuestion)e.nextElement());\n<a name=\"695\" href=\"#695\">695</a>             }\n<a name=\"696\" href=\"#696\">696</a>         }\n<a name=\"697\" href=\"#697\">697</a> \n<a name=\"698\" href=\"#698\">698</a>         <em class=\"comment\">// answer relevant questions</em>\n<a name=\"699\" href=\"#699\">699</a>         <strong>for</strong>(Enumeration e = in.questions.elements(); e.hasMoreElements();)\n<a name=\"700\" href=\"#700\">700</a>         {\n<a name=\"701\" href=\"#701\">701</a>             <a href=\"../../javax/jmdns/DNSQuestion.html\">DNSQuestion</a> q = (DNSQuestion)e.nextElement();\n<a name=\"702\" href=\"#702\">702</a> \n<a name=\"703\" href=\"#703\">703</a>             <strong>switch</strong>(q.type)\n<a name=\"704\" href=\"#704\">704</a>             {\n<a name=\"705\" href=\"#705\">705</a>             <strong>case</strong> TYPE_A:\n<a name=\"706\" href=\"#706\">706</a> \n<a name=\"707\" href=\"#707\">707</a>                 <em class=\"comment\">// address request</em>\n<a name=\"708\" href=\"#708\">708</a>                 <strong>if</strong>((host != <strong>null</strong>) &amp;&amp; q.name.equals(host.name))\n<a name=\"709\" href=\"#709\">709</a>                 {\n<a name=\"710\" href=\"#710\">710</a>                     <strong>if</strong>(out == <strong>null</strong>)\n<a name=\"711\" href=\"#711\">711</a>                     {\n<a name=\"712\" href=\"#712\">712</a>                         out = <strong>new</strong> <a href=\"../../javax/jmdns/DNSOutgoing.html\">DNSOutgoing</a>(FLAGS_QR_RESPONSE | FLAGS_AA);\n<a name=\"713\" href=\"#713\">713</a>                     }\n<a name=\"714\" href=\"#714\">714</a> \n<a name=\"715\" href=\"#715\">715</a>                     out.addAnswer(in, host);\n<a name=\"716\" href=\"#716\">716</a>                 }\n<a name=\"717\" href=\"#717\">717</a> \n<a name=\"718\" href=\"#718\">718</a>                 <strong>break</strong>;\n<a name=\"719\" href=\"#719\">719</a> \n<a name=\"720\" href=\"#720\">720</a>             <strong>case</strong> TYPE_PTR:\n<a name=\"721\" href=\"#721\">721</a>                 registerServiceType(q.name);\n<a name=\"722\" href=\"#722\">722</a> \n<a name=\"723\" href=\"#723\">723</a>                 <em class=\"comment\">// find matching services</em>\n<a name=\"724\" href=\"#724\">724</a>                 <strong>for</strong>(Enumeration s = services.elements(); s.hasMoreElements();)\n<a name=\"725\" href=\"#725\">725</a>                 {\n<a name=\"726\" href=\"#726\">726</a>                     <a href=\"../../javax/jmdns/ServiceInfo.html\">ServiceInfo</a> info = (ServiceInfo)s.nextElement();\n<a name=\"727\" href=\"#727\">727</a> \n<a name=\"728\" href=\"#728\">728</a>                     <strong>if</strong>(q.name.equals(info.type))\n<a name=\"729\" href=\"#729\">729</a>                     {\n<a name=\"730\" href=\"#730\">730</a>                         <strong>if</strong>(out == <strong>null</strong>)\n<a name=\"731\" href=\"#731\">731</a>                         {\n<a name=\"732\" href=\"#732\">732</a>                             out = <strong>new</strong> <a href=\"../../javax/jmdns/DNSOutgoing.html\">DNSOutgoing</a>(FLAGS_QR_RESPONSE | FLAGS_AA);\n<a name=\"733\" href=\"#733\">733</a>                         }\n<a name=\"734\" href=\"#734\">734</a> \n<a name=\"735\" href=\"#735\">735</a>                         out.addAnswer(in,\n<a name=\"736\" href=\"#736\">736</a>                                       <strong>new</strong> DNSRecord.Pointer(info.type,\n<a name=\"737\" href=\"#737\">737</a>                                                             TYPE_PTR, CLASS_IN,\n<a name=\"738\" href=\"#738\">738</a>                                                             DNS_TTL, info.name));\n<a name=\"739\" href=\"#739\">739</a> \n<a name=\"740\" href=\"#740\">740</a>                         <em class=\"comment\">// additional answers, in case there is room</em>\n<a name=\"741\" href=\"#741\">741</a>                         <strong>if</strong>(additionals == <strong>null</strong>)\n<a name=\"742\" href=\"#742\">742</a>                         {\n<a name=\"743\" href=\"#743\">743</a>                             additionals = <strong>new</strong> Vector();\n<a name=\"744\" href=\"#744\">744</a>                             additionals.addElement(host);\n<a name=\"745\" href=\"#745\">745</a>                         }\n<a name=\"746\" href=\"#746\">746</a> \n<a name=\"747\" href=\"#747\">747</a>                         additionals.addElement(<strong>new</strong> DNSRecord.Service(q.name,\n<a name=\"748\" href=\"#748\">748</a>                                                                      TYPE_SRV,\n<a name=\"749\" href=\"#749\">749</a>                                                                      CLASS_IN\n<a name=\"750\" href=\"#750\">750</a>                                                                      | CLASS_UNIQUE,\n<a name=\"751\" href=\"#751\">751</a>                                                                      DNS_TTL,\n<a name=\"752\" href=\"#752\">752</a>                                                                      info.priority,\n<a name=\"753\" href=\"#753\">753</a>                                                                      info.weight,\n<a name=\"754\" href=\"#754\">754</a>                                                                      info.port,\n<a name=\"755\" href=\"#755\">755</a>                                                                      host.name));\n<a name=\"756\" href=\"#756\">756</a>                         additionals.addElement(<strong>new</strong> DNSRecord.Text(q.name,\n<a name=\"757\" href=\"#757\">757</a>                                                                   TYPE_TXT,\n<a name=\"758\" href=\"#758\">758</a>                                                                   CLASS_IN\n<a name=\"759\" href=\"#759\">759</a>                                                                   | CLASS_UNIQUE,\n<a name=\"760\" href=\"#760\">760</a>                                                                   DNS_TTL,\n<a name=\"761\" href=\"#761\">761</a>                                                                   info.text));\n<a name=\"762\" href=\"#762\">762</a>                     }\n<a name=\"763\" href=\"#763\">763</a>                 }\n<a name=\"764\" href=\"#764\">764</a> \n<a name=\"765\" href=\"#765\">765</a>                 <strong>if</strong>(q.name.equals(<span class=\"string\">\"_services._mdns._udp.local.\"</span>))\n<a name=\"766\" href=\"#766\">766</a>                 {\n<a name=\"767\" href=\"#767\">767</a>                     <strong>for</strong>(Enumeration t = serviceTypes.elements();\n<a name=\"768\" href=\"#768\">768</a>                         t.hasMoreElements();)\n<a name=\"769\" href=\"#769\">769</a>                     {\n<a name=\"770\" href=\"#770\">770</a>                         <strong>if</strong>(out == <strong>null</strong>)\n<a name=\"771\" href=\"#771\">771</a>                         {\n<a name=\"772\" href=\"#772\">772</a>                             out = <strong>new</strong> <a href=\"../../javax/jmdns/DNSOutgoing.html\">DNSOutgoing</a>(FLAGS_QR_RESPONSE | FLAGS_AA);\n<a name=\"773\" href=\"#773\">773</a>                         }\n<a name=\"774\" href=\"#774\">774</a> \n<a name=\"775\" href=\"#775\">775</a>                         out.addAnswer(in,\n<a name=\"776\" href=\"#776\">776</a>                                       <strong>new</strong> DNSRecord.Pointer(<span class=\"string\">\"_services._mdns._udp.local.\"</span>,\n<a name=\"777\" href=\"#777\">777</a>                                                             TYPE_PTR, CLASS_IN,\n<a name=\"778\" href=\"#778\">778</a>                                                             DNS_TTL,\n<a name=\"779\" href=\"#779\">779</a>                                                             (String)t\n<a name=\"780\" href=\"#780\">780</a>                                                             .nextElement()));\n<a name=\"781\" href=\"#781\">781</a>                     }\n<a name=\"782\" href=\"#782\">782</a>                 }\n<a name=\"783\" href=\"#783\">783</a> \n<a name=\"784\" href=\"#784\">784</a>                 <strong>break</strong>;\n<a name=\"785\" href=\"#785\">785</a> \n<a name=\"786\" href=\"#786\">786</a>             <strong>default</strong>:\n<a name=\"787\" href=\"#787\">787</a> \n<a name=\"788\" href=\"#788\">788</a>                 <em class=\"comment\">// find service</em>\n<a name=\"789\" href=\"#789\">789</a>                 <a href=\"../../javax/jmdns/ServiceInfo.html\">ServiceInfo</a> info = (ServiceInfo)services.get(q.name.toLowerCase());\n<a name=\"790\" href=\"#790\">790</a> \n<a name=\"791\" href=\"#791\">791</a>                 <strong>if</strong>(info != <strong>null</strong>)\n<a name=\"792\" href=\"#792\">792</a>                 {\n<a name=\"793\" href=\"#793\">793</a>                     <strong>if</strong>(out == <strong>null</strong>)\n<a name=\"794\" href=\"#794\">794</a>                     {\n<a name=\"795\" href=\"#795\">795</a>                         out = <strong>new</strong> <a href=\"../../javax/jmdns/DNSOutgoing.html\">DNSOutgoing</a>(FLAGS_QR_RESPONSE | FLAGS_AA);\n<a name=\"796\" href=\"#796\">796</a>                     }\n<a name=\"797\" href=\"#797\">797</a> \n<a name=\"798\" href=\"#798\">798</a>                     <strong>if</strong>((q.type == TYPE_SRV) || (q.type == TYPE_ANY))\n<a name=\"799\" href=\"#799\">799</a>                     {\n<a name=\"800\" href=\"#800\">800</a>                         out.addAnswer(in,\n<a name=\"801\" href=\"#801\">801</a>                                       <strong>new</strong> DNSRecord.Service(q.name, TYPE_SRV,\n<a name=\"802\" href=\"#802\">802</a>                                                             CLASS_IN\n<a name=\"803\" href=\"#803\">803</a>                                                             | CLASS_UNIQUE,\n<a name=\"804\" href=\"#804\">804</a>                                                             DNS_TTL,\n<a name=\"805\" href=\"#805\">805</a>                                                             info.priority,\n<a name=\"806\" href=\"#806\">806</a>                                                             info.weight,\n<a name=\"807\" href=\"#807\">807</a>                                                             info.port, host.name));\n<a name=\"808\" href=\"#808\">808</a>                     }\n<a name=\"809\" href=\"#809\">809</a> \n<a name=\"810\" href=\"#810\">810</a>                     <strong>if</strong>((q.type == TYPE_TXT) || (q.type == TYPE_ANY))\n<a name=\"811\" href=\"#811\">811</a>                     {\n<a name=\"812\" href=\"#812\">812</a>                         out.addAnswer(in,\n<a name=\"813\" href=\"#813\">813</a>                                       <strong>new</strong> DNSRecord.Text(q.name, TYPE_TXT,\n<a name=\"814\" href=\"#814\">814</a>                                                          CLASS_IN\n<a name=\"815\" href=\"#815\">815</a>                                                          | CLASS_UNIQUE,\n<a name=\"816\" href=\"#816\">816</a>                                                          DNS_TTL, info.text));\n<a name=\"817\" href=\"#817\">817</a>                     }\n<a name=\"818\" href=\"#818\">818</a>                 }\n<a name=\"819\" href=\"#819\">819</a>             }\n<a name=\"820\" href=\"#820\">820</a>         }\n<a name=\"821\" href=\"#821\">821</a> \n<a name=\"822\" href=\"#822\">822</a>         <strong>if</strong>((out != <strong>null</strong>) &amp;&amp; (out.numAnswers > 0))\n<a name=\"823\" href=\"#823\">823</a>         {\n<a name=\"824\" href=\"#824\">824</a>             <em class=\"comment\">// add additional answers if there is space</em>\n<a name=\"825\" href=\"#825\">825</a>             <strong>if</strong>(additionals != <strong>null</strong>)\n<a name=\"826\" href=\"#826\">826</a>             {\n<a name=\"827\" href=\"#827\">827</a>                 <strong>for</strong>(Enumeration e = additionals.elements();\n<a name=\"828\" href=\"#828\">828</a>                     e.hasMoreElements();)\n<a name=\"829\" href=\"#829\">829</a>                 {\n<a name=\"830\" href=\"#830\">830</a>                     out.addAdditionalAnswer(in, (DNSRecord)e.nextElement());\n<a name=\"831\" href=\"#831\">831</a>                 }\n<a name=\"832\" href=\"#832\">832</a>             }\n<a name=\"833\" href=\"#833\">833</a> \n<a name=\"834\" href=\"#834\">834</a>             out.id = in.id;\n<a name=\"835\" href=\"#835\">835</a>             out.finish();\n<a name=\"836\" href=\"#836\">836</a>             socket.send(<strong>new</strong> DatagramPacket(out.data, out.off, addr, port));\n<a name=\"837\" href=\"#837\">837</a>         }\n<a name=\"838\" href=\"#838\">838</a>     }\n<a name=\"839\" href=\"#839\">839</a> \n<a name=\"840\" href=\"#840\">840</a>     <em>/**<em>*</em></em>\n<a name=\"841\" href=\"#841\">841</a> <em>     * Handle an incoming response. Cache answers, and pass them on to the</em>\n<a name=\"842\" href=\"#842\">842</a> <em>     * appropriate questions.</em>\n<a name=\"843\" href=\"#843\">843</a> <em>     *</em>\n<a name=\"844\" href=\"#844\">844</a> <em>     * @param msg TODO</em>\n<a name=\"845\" href=\"#845\">845</a> <em>     *</em>\n<a name=\"846\" href=\"#846\">846</a> <em>     * @throws IOException TODO</em>\n<a name=\"847\" href=\"#847\">847</a> <em>     */</em>\n<a name=\"848\" href=\"#848\">848</a>     <strong>synchronized</strong> <strong>void</strong> handleResponse(<a href=\"../../javax/jmdns/DNSIncoming.html\">DNSIncoming</a> msg) throws IOException\n<a name=\"849\" href=\"#849\">849</a>     {\n<a name=\"850\" href=\"#850\">850</a>         <strong>long</strong> now = System.currentTimeMillis();\n<a name=\"851\" href=\"#851\">851</a> \n<a name=\"852\" href=\"#852\">852</a>         <strong>for</strong>(Enumeration e = msg.answers.elements(); e.hasMoreElements();)\n<a name=\"853\" href=\"#853\">853</a>         {\n<a name=\"854\" href=\"#854\">854</a>             <a href=\"../../javax/jmdns/DNSRecord.html\">DNSRecord</a> rec = (DNSRecord)e.nextElement();\n<a name=\"855\" href=\"#855\">855</a>             <strong>boolean</strong> expired = rec.isExpired(now);\n<a name=\"856\" href=\"#856\">856</a> \n<a name=\"857\" href=\"#857\">857</a>             <em class=\"comment\">// update the cache</em>\n<a name=\"858\" href=\"#858\">858</a>             <a href=\"../../javax/jmdns/DNSRecord.html\">DNSRecord</a> c = (DNSRecord)cache.get(rec);\n<a name=\"859\" href=\"#859\">859</a> \n<a name=\"860\" href=\"#860\">860</a>             <strong>if</strong>(c != <strong>null</strong>)\n<a name=\"861\" href=\"#861\">861</a>             {\n<a name=\"862\" href=\"#862\">862</a>                 <strong>if</strong>(expired)\n<a name=\"863\" href=\"#863\">863</a>                 {\n<a name=\"864\" href=\"#864\">864</a>                     cache.remove(c);\n<a name=\"865\" href=\"#865\">865</a>                 }\n<a name=\"866\" href=\"#866\">866</a>                 <strong>else</strong>\n<a name=\"867\" href=\"#867\">867</a>                 {\n<a name=\"868\" href=\"#868\">868</a>                     c.resetTTL(rec);\n<a name=\"869\" href=\"#869\">869</a>                     rec = c;\n<a name=\"870\" href=\"#870\">870</a>                 }\n<a name=\"871\" href=\"#871\">871</a>             }\n<a name=\"872\" href=\"#872\">872</a>             <strong>else</strong> <strong>if</strong>(!expired)\n<a name=\"873\" href=\"#873\">873</a>             {\n<a name=\"874\" href=\"#874\">874</a>                 cache.add(rec);\n<a name=\"875\" href=\"#875\">875</a>             }\n<a name=\"876\" href=\"#876\">876</a> \n<a name=\"877\" href=\"#877\">877</a>             <strong>switch</strong>(rec.type)\n<a name=\"878\" href=\"#878\">878</a>             {\n<a name=\"879\" href=\"#879\">879</a>             <strong>case</strong> TYPE_PTR:\n<a name=\"880\" href=\"#880\">880</a> \n<a name=\"881\" href=\"#881\">881</a>                 <em class=\"comment\">// handle _mdns._udp records</em>\n<a name=\"882\" href=\"#882\">882</a>                 <strong>if</strong>(rec.name.indexOf(<span class=\"string\">\"._mdns._udp.\"</span>) >= 0)\n<a name=\"883\" href=\"#883\">883</a>                 {\n<a name=\"884\" href=\"#884\">884</a>                     <strong>if</strong>(!expired &amp;&amp; rec.name.startsWith(<span class=\"string\">\"_services._mdns._udp.\"</span>))\n<a name=\"885\" href=\"#885\">885</a>                     {\n<a name=\"886\" href=\"#886\">886</a>                         registerServiceType(((DNSRecord.Pointer)rec).alias);\n<a name=\"887\" href=\"#887\">887</a>                     }\n<a name=\"888\" href=\"#888\">888</a> \n<a name=\"889\" href=\"#889\">889</a>                     <strong>continue</strong>;\n<a name=\"890\" href=\"#890\">890</a>                 }\n<a name=\"891\" href=\"#891\">891</a>                 registerServiceType(rec.name);\n<a name=\"892\" href=\"#892\">892</a> \n<a name=\"893\" href=\"#893\">893</a>                 <strong>break</strong>;\n<a name=\"894\" href=\"#894\">894</a>             }\n<a name=\"895\" href=\"#895\">895</a> \n<a name=\"896\" href=\"#896\">896</a>             <em class=\"comment\">// notify the listeners</em>\n<a name=\"897\" href=\"#897\">897</a>             updateRecord(now, rec);\n<a name=\"898\" href=\"#898\">898</a>         }\n<a name=\"899\" href=\"#899\">899</a>     }\n<a name=\"900\" href=\"#900\">900</a> \n<a name=\"901\" href=\"#901\">901</a>     <em>/**<em>*</em></em>\n<a name=\"902\" href=\"#902\">902</a> <em>     * Initialize everything.</em>\n<a name=\"903\" href=\"#903\">903</a> <em>     *</em>\n<a name=\"904\" href=\"#904\">904</a> <em>     * @param intf TODO</em>\n<a name=\"905\" href=\"#905\">905</a> <em>     * @param name TODO</em>\n<a name=\"906\" href=\"#906\">906</a> <em>     *</em>\n<a name=\"907\" href=\"#907\">907</a> <em>     * @throws IOException TODO</em>\n<a name=\"908\" href=\"#908\">908</a> <em>     */</em>\n<a name=\"909\" href=\"#909\">909</a>     <strong>void</strong> init(InetAddress intf, String name) throws IOException\n<a name=\"910\" href=\"#910\">910</a>     {\n<a name=\"911\" href=\"#911\">911</a>         <strong>if</strong>(!name.endsWith(<span class=\"string\">\".\"</span>))\n<a name=\"912\" href=\"#912\">912</a>         {\n<a name=\"913\" href=\"#913\">913</a>             name += <span class=\"string\">\".local.\"</span>;\n<a name=\"914\" href=\"#914\">914</a>         }\n<a name=\"915\" href=\"#915\">915</a> \n<a name=\"916\" href=\"#916\">916</a>         group = InetAddress.getByName(MDNS_GROUP);\n<a name=\"917\" href=\"#917\">917</a>         socket = <strong>new</strong> MulticastSocket(MDNS_PORT);\n<a name=\"918\" href=\"#918\">918</a> \n<a name=\"919\" href=\"#919\">919</a>         <strong>if</strong>(intf != <strong>null</strong>)\n<a name=\"920\" href=\"#920\">920</a>         {\n<a name=\"921\" href=\"#921\">921</a>             socket.setInterface(intf);\n<a name=\"922\" href=\"#922\">922</a>         }\n<a name=\"923\" href=\"#923\">923</a> \n<a name=\"924\" href=\"#924\">924</a>         socket.setTimeToLive(255);\n<a name=\"925\" href=\"#925\">925</a>         socket.joinGroup(group);\n<a name=\"926\" href=\"#926\">926</a>         loopback = isLoopback(intf);\n<a name=\"927\" href=\"#927\">927</a>         linklocal = isLinkLocal(intf);\n<a name=\"928\" href=\"#928\">928</a> \n<a name=\"929\" href=\"#929\">929</a>         cache = <strong>new</strong> <a href=\"../../javax/jmdns/DNSCache.html\">DNSCache</a>(100);\n<a name=\"930\" href=\"#930\">930</a>         listeners = <strong>new</strong> Vector();\n<a name=\"931\" href=\"#931\">931</a>         browsers = <strong>new</strong> Vector();\n<a name=\"932\" href=\"#932\">932</a>         typeListeners = <strong>new</strong> Vector();\n<a name=\"933\" href=\"#933\">933</a>         services = <strong>new</strong> Hashtable(20);\n<a name=\"934\" href=\"#934\">934</a>         serviceTypes = <strong>new</strong> Hashtable(20);\n<a name=\"935\" href=\"#935\">935</a> \n<a name=\"936\" href=\"#936\">936</a>         <strong>new</strong> Thread(<strong>new</strong> SocketListener(), <span class=\"string\">\"JmDNS.SocketListener\"</span>).start();\n<a name=\"937\" href=\"#937\">937</a>         <strong>new</strong> Thread(<strong>new</strong> RecordReaper(), <span class=\"string\">\"JmDNS.RecordReaper\"</span>).start();\n<a name=\"938\" href=\"#938\">938</a>         shutdown = <strong>new</strong> Thread(<strong>new</strong> Shutdown(), <span class=\"string\">\"JmDNS.Shutdown\"</span>);\n<a name=\"939\" href=\"#939\">939</a>         Runtime.getRuntime().addShutdownHook(shutdown);\n<a name=\"940\" href=\"#940\">940</a> \n<a name=\"941\" href=\"#941\">941</a>         <em class=\"comment\">// host to IP address binding</em>\n<a name=\"942\" href=\"#942\">942</a>         byte[] data = intf.getAddress();\n<a name=\"943\" href=\"#943\">943</a>         <strong>int</strong> ip = ((data[0] &amp; 0xFF) &lt;&lt; 24) | ((data[1] &amp; 0xFF) &lt;&lt; 16)\n<a name=\"944\" href=\"#944\">944</a>                  | ((data[2] &amp; 0xFF) &lt;&lt; 8) | (data[3] &amp; 0xFF);\n<a name=\"945\" href=\"#945\">945</a>         DNSRecord.Address host = <strong>new</strong> DNSRecord.Address(name, TYPE_A, CLASS_IN,\n<a name=\"946\" href=\"#946\">946</a>                                                        DNS_TTL, ip);\n<a name=\"947\" href=\"#947\">947</a> \n<a name=\"948\" href=\"#948\">948</a>         <em class=\"comment\">// check for conflicts</em>\n<a name=\"949\" href=\"#949\">949</a>         <strong>long</strong> now = System.currentTimeMillis();\n<a name=\"950\" href=\"#950\">950</a>         <strong>long</strong> nextTime = now;\n<a name=\"951\" href=\"#951\">951</a> \n<a name=\"952\" href=\"#952\">952</a>         <strong>for</strong>(<strong>int</strong> i = 0; i &lt; 3;)\n<a name=\"953\" href=\"#953\">953</a>         {\n<a name=\"954\" href=\"#954\">954</a>             <strong>for</strong>(Iterator j = cache.find(host.name); j.hasNext();)\n<a name=\"955\" href=\"#955\">955</a>             {\n<a name=\"956\" href=\"#956\">956</a>                 <a href=\"../../javax/jmdns/DNSRecord.html\">DNSRecord</a> a = (DNSRecord)j.next();\n<a name=\"957\" href=\"#957\">957</a> \n<a name=\"958\" href=\"#958\">958</a>                 <strong>if</strong>((a.type == TYPE_A) &amp;&amp; !a.isExpired(now)\n<a name=\"959\" href=\"#959\">959</a>                    &amp;&amp; (((DNSRecord.Address)a).addr != ip))\n<a name=\"960\" href=\"#960\">960</a>                 {\n<a name=\"961\" href=\"#961\">961</a>                     String nm = host.name.substring(0, name.indexOf('.'));\n<a name=\"962\" href=\"#962\">962</a> \n<a name=\"963\" href=\"#963\">963</a>                     <strong>try</strong>\n<a name=\"964\" href=\"#964\">964</a>                     {\n<a name=\"965\" href=\"#965\">965</a>                         <strong>int</strong> l = nm.lastIndexOf('-');\n<a name=\"966\" href=\"#966\">966</a>                         <strong>int</strong> r = nm.lastIndexOf('.');\n<a name=\"967\" href=\"#967\">967</a> \n<a name=\"968\" href=\"#968\">968</a>                         <strong>if</strong>((l >= 0) &amp;&amp; (l &lt; r))\n<a name=\"969\" href=\"#969\">969</a>                         {\n<a name=\"970\" href=\"#970\">970</a>                             nm = nm.substring(0, l) + <span class=\"string\">\"-\"</span>\n<a name=\"971\" href=\"#971\">971</a>                                  + (Integer.parseInt(nm.substring(l + 1)) + 1);\n<a name=\"972\" href=\"#972\">972</a>                         }\n<a name=\"973\" href=\"#973\">973</a>                         <strong>else</strong>\n<a name=\"974\" href=\"#974\">974</a>                         {\n<a name=\"975\" href=\"#975\">975</a>                             nm += <span class=\"string\">\"-1\"</span>;\n<a name=\"976\" href=\"#976\">976</a>                         }\n<a name=\"977\" href=\"#977\">977</a>                     }\n<a name=\"978\" href=\"#978\">978</a>                     <strong>catch</strong>(NumberFormatException e)\n<a name=\"979\" href=\"#979\">979</a>                     {\n<a name=\"980\" href=\"#980\">980</a>                         nm += <span class=\"string\">\"-1\"</span>;\n<a name=\"981\" href=\"#981\">981</a>                     }\n<a name=\"982\" href=\"#982\">982</a> \n<a name=\"983\" href=\"#983\">983</a>                     host.name = nm + host.name.substring(name.indexOf('.'));\n<a name=\"984\" href=\"#984\">984</a>                     i = 0;\n<a name=\"985\" href=\"#985\">985</a> \n<a name=\"986\" href=\"#986\">986</a>                     <strong>break</strong>;\n<a name=\"987\" href=\"#987\">987</a>                 }\n<a name=\"988\" href=\"#988\">988</a>             }\n<a name=\"989\" href=\"#989\">989</a> \n<a name=\"990\" href=\"#990\">990</a>             <a href=\"../../javax/jmdns/DNSOutgoing.html\">DNSOutgoing</a> out = <strong>new</strong> <a href=\"../../javax/jmdns/DNSOutgoing.html\">DNSOutgoing</a>(FLAGS_QR_QUERY);\n<a name=\"991\" href=\"#991\">991</a> \n<a name=\"992\" href=\"#992\">992</a>             out.addQuestion(<strong>new</strong> <a href=\"../../javax/jmdns/DNSQuestion.html\">DNSQuestion</a>(host.name, TYPE_A, CLASS_IN));\n<a name=\"993\" href=\"#993\">993</a>             out.addAuthorativeAnswer(host);\n<a name=\"994\" href=\"#994\">994</a>             send(out);\n<a name=\"995\" href=\"#995\">995</a>             i++;\n<a name=\"996\" href=\"#996\">996</a>             nextTime += 175;\n<a name=\"997\" href=\"#997\">997</a> \n<a name=\"998\" href=\"#998\">998</a>             <strong>if</strong>(now &lt; nextTime)\n<a name=\"999\" href=\"#999\">999</a>             {\n<a name=\"1000\" href=\"#1000\">1000</a>                 <strong>try</strong>\n<a name=\"1001\" href=\"#1001\">1001</a>                 {\n<a name=\"1002\" href=\"#1002\">1002</a>                     Thread.sleep(nextTime - now);\n<a name=\"1003\" href=\"#1003\">1003</a>                 }\n<a name=\"1004\" href=\"#1004\">1004</a>                 <strong>catch</strong>(InterruptedException e)\n<a name=\"1005\" href=\"#1005\">1005</a>                 {\n<a name=\"1006\" href=\"#1006\">1006</a>                     <strong>throw</strong> <strong>new</strong> IOException(<span class=\"string\">\"init interrupted\"</span>);\n<a name=\"1007\" href=\"#1007\">1007</a>                 }\n<a name=\"1008\" href=\"#1008\">1008</a> \n<a name=\"1009\" href=\"#1009\">1009</a>                 now = System.currentTimeMillis();\n<a name=\"1010\" href=\"#1010\">1010</a> \n<a name=\"1011\" href=\"#1011\">1011</a>                 <strong>continue</strong>;\n<a name=\"1012\" href=\"#1012\">1012</a>             }\n<a name=\"1013\" href=\"#1013\">1013</a>         }\n<a name=\"1014\" href=\"#1014\">1014</a> \n<a name=\"1015\" href=\"#1015\">1015</a>         <strong>this</strong>.host = host;\n<a name=\"1016\" href=\"#1016\">1016</a>     }\n<a name=\"1017\" href=\"#1017\">1017</a> \n<a name=\"1018\" href=\"#1018\">1018</a>     <em>/**<em>*</em></em>\n<a name=\"1019\" href=\"#1019\">1019</a> <em>     * List cache entries, for debugging only.</em>\n<a name=\"1020\" href=\"#1020\">1020</a> <em>     */</em>\n<a name=\"1021\" href=\"#1021\">1021</a>     <strong>void</strong> print()\n<a name=\"1022\" href=\"#1022\">1022</a>     {\n<a name=\"1023\" href=\"#1023\">1023</a>         <strong>if</strong>(cache.count > 0)\n<a name=\"1024\" href=\"#1024\">1024</a>         {\n<a name=\"1025\" href=\"#1025\">1025</a>             System.out.println(<span class=\"string\">\"---- cache ----\"</span>);\n<a name=\"1026\" href=\"#1026\">1026</a>             cache.print();\n<a name=\"1027\" href=\"#1027\">1027</a>             System.out.println();\n<a name=\"1028\" href=\"#1028\">1028</a>         }\n<a name=\"1029\" href=\"#1029\">1029</a>     }\n<a name=\"1030\" href=\"#1030\">1030</a> \n<a name=\"1031\" href=\"#1031\">1031</a>     <em>/**<em>*</em></em>\n<a name=\"1032\" href=\"#1032\">1032</a> <em>     * Remove a listener from all outstanding questions. The listener will no</em>\n<a name=\"1033\" href=\"#1033\">1033</a> <em>     * longer receive any updates.</em>\n<a name=\"1034\" href=\"#1034\">1034</a> <em>     *</em>\n<a name=\"1035\" href=\"#1035\">1035</a> <em>     * @param listener TODO</em>\n<a name=\"1036\" href=\"#1036\">1036</a> <em>     */</em>\n<a name=\"1037\" href=\"#1037\">1037</a>     <strong>synchronized</strong> <strong>void</strong> removeListener(Listener listener)\n<a name=\"1038\" href=\"#1038\">1038</a>     {\n<a name=\"1039\" href=\"#1039\">1039</a>         listeners.removeElement(listener);\n<a name=\"1040\" href=\"#1040\">1040</a>         notifyAll();\n<a name=\"1041\" href=\"#1041\">1041</a>     }\n<a name=\"1042\" href=\"#1042\">1042</a> \n<a name=\"1043\" href=\"#1043\">1043</a>     <em>/**<em>*</em></em>\n<a name=\"1044\" href=\"#1044\">1044</a> <em>     * Send an outgoing multicast DNS message.</em>\n<a name=\"1045\" href=\"#1045\">1045</a> <em>     *</em>\n<a name=\"1046\" href=\"#1046\">1046</a> <em>     * @param out TODO</em>\n<a name=\"1047\" href=\"#1047\">1047</a> <em>     *</em>\n<a name=\"1048\" href=\"#1048\">1048</a> <em>     * @throws IOException TODO</em>\n<a name=\"1049\" href=\"#1049\">1049</a> <em>     */</em>\n<a name=\"1050\" href=\"#1050\">1050</a>     <strong>synchronized</strong> <strong>void</strong> send(<a href=\"../../javax/jmdns/DNSOutgoing.html\">DNSOutgoing</a> out) throws IOException\n<a name=\"1051\" href=\"#1051\">1051</a>     {\n<a name=\"1052\" href=\"#1052\">1052</a>         out.finish();\n<a name=\"1053\" href=\"#1053\">1053</a>         socket.send(<strong>new</strong> DatagramPacket(out.data, out.off, group, MDNS_PORT));\n<a name=\"1054\" href=\"#1054\">1054</a>     }\n<a name=\"1055\" href=\"#1055\">1055</a> \n<a name=\"1056\" href=\"#1056\">1056</a>     <em>/**<em>*</em></em>\n<a name=\"1057\" href=\"#1057\">1057</a> <em>     * Notify all listeners that a record was updated.</em>\n<a name=\"1058\" href=\"#1058\">1058</a> <em>     *</em>\n<a name=\"1059\" href=\"#1059\">1059</a> <em>     * @param now TODO</em>\n<a name=\"1060\" href=\"#1060\">1060</a> <em>     * @param rec TODO</em>\n<a name=\"1061\" href=\"#1061\">1061</a> <em>     */</em>\n<a name=\"1062\" href=\"#1062\">1062</a>     <strong>synchronized</strong> <strong>void</strong> updateRecord(<strong>long</strong> now, <a href=\"../../javax/jmdns/DNSRecord.html\">DNSRecord</a> rec)\n<a name=\"1063\" href=\"#1063\">1063</a>     {\n<a name=\"1064\" href=\"#1064\">1064</a>         <strong>for</strong>(Enumeration e = listeners.elements(); e.hasMoreElements();)\n<a name=\"1065\" href=\"#1065\">1065</a>         {\n<a name=\"1066\" href=\"#1066\">1066</a>             Listener listener = (Listener)e.nextElement();\n<a name=\"1067\" href=\"#1067\">1067</a> \n<a name=\"1068\" href=\"#1068\">1068</a>             listener.updateRecord(<strong>this</strong>, now, rec);\n<a name=\"1069\" href=\"#1069\">1069</a>         }\n<a name=\"1070\" href=\"#1070\">1070</a> \n<a name=\"1071\" href=\"#1071\">1071</a>         notifyAll();\n<a name=\"1072\" href=\"#1072\">1072</a>     }\n<a name=\"1073\" href=\"#1073\">1073</a> \n<a name=\"1074\" href=\"#1074\">1074</a>     <em>/**<em>*</em></em>\n<a name=\"1075\" href=\"#1075\">1075</a> <em>     * Listener for record updates.</em>\n<a name=\"1076\" href=\"#1076\">1076</a> <em>     */</em>\n<a name=\"1077\" href=\"#1077\">1077</a>     <strong>abstract</strong> <strong>static</strong> <strong>class</strong> Listener <strong>extends</strong> <a href=\"../../javax/jmdns/DNSConstants.html\">DNSConstants</a>\n<a name=\"1078\" href=\"#1078\">1078</a>     {\n<a name=\"1079\" href=\"#1079\">1079</a>         <em>/**<em>*</em></em>\n<a name=\"1080\" href=\"#1080\">1080</a> <em>         * Update a DNS record.</em>\n<a name=\"1081\" href=\"#1081\">1081</a> <em>         *</em>\n<a name=\"1082\" href=\"#1082\">1082</a> <em>         * @param jmdns TODO</em>\n<a name=\"1083\" href=\"#1083\">1083</a> <em>         * @param now TODO</em>\n<a name=\"1084\" href=\"#1084\">1084</a> <em>         * @param record TODO</em>\n<a name=\"1085\" href=\"#1085\">1085</a> <em>         */</em>\n<a name=\"1086\" href=\"#1086\">1086</a>         <strong>abstract</strong> <strong>void</strong> updateRecord(<a href=\"../../javax/jmdns/JmDNS.html\">JmDNS</a> jmdns, <strong>long</strong> now, <a href=\"../../javax/jmdns/DNSRecord.html\">DNSRecord</a> record);\n<a name=\"1087\" href=\"#1087\">1087</a>     }\n<a name=\"1088\" href=\"#1088\">1088</a> \n<a name=\"1089\" href=\"#1089\">1089</a>     <em>/**<em>*</em></em>\n<a name=\"1090\" href=\"#1090\">1090</a> <em>     * Schedule questions</em>\n<a name=\"1091\" href=\"#1091\">1091</a> <em>     */</em>\n<a name=\"1092\" href=\"#1092\">1092</a>     <strong>class</strong> RecordReaper implements Runnable\n<a name=\"1093\" href=\"#1093\">1093</a>     {\n<a name=\"1094\" href=\"#1094\">1094</a>         <em>/**<em>*</em></em>\n<a name=\"1095\" href=\"#1095\">1095</a> <em>         * TODO</em>\n<a name=\"1096\" href=\"#1096\">1096</a> <em>         */</em>\n<a name=\"1097\" href=\"#1097\">1097</a>         <strong>public</strong> <strong>void</strong> run()\n<a name=\"1098\" href=\"#1098\">1098</a>         {\n<a name=\"1099\" href=\"#1099\">1099</a>             <strong>try</strong>\n<a name=\"1100\" href=\"#1100\">1100</a>             {\n<a name=\"1101\" href=\"#1101\">1101</a>                 <strong>synchronized</strong>(JmDNS.<strong>this</strong>)\n<a name=\"1102\" href=\"#1102\">1102</a>                 {\n<a name=\"1103\" href=\"#1103\">1103</a>                     <strong>while</strong>(<strong>true</strong>)\n<a name=\"1104\" href=\"#1104\">1104</a>                     {\n<a name=\"1105\" href=\"#1105\">1105</a>                         JmDNS.<strong>this</strong>.wait(10 * 1000);\n<a name=\"1106\" href=\"#1106\">1106</a> \n<a name=\"1107\" href=\"#1107\">1107</a>                         <strong>if</strong>(done)\n<a name=\"1108\" href=\"#1108\">1108</a>                         {\n<a name=\"1109\" href=\"#1109\">1109</a>                             <strong>return</strong>;\n<a name=\"1110\" href=\"#1110\">1110</a>                         }\n<a name=\"1111\" href=\"#1111\">1111</a> \n<a name=\"1112\" href=\"#1112\">1112</a>                         <em class=\"comment\">// remove expired answers from the cache</em>\n<a name=\"1113\" href=\"#1113\">1113</a>                         <strong>long</strong> now = System.currentTimeMillis();\n<a name=\"1114\" href=\"#1114\">1114</a> \n<a name=\"1115\" href=\"#1115\">1115</a>                         <strong>for</strong>(Iterator i = cache.all(); i.hasNext();)\n<a name=\"1116\" href=\"#1116\">1116</a>                         {\n<a name=\"1117\" href=\"#1117\">1117</a>                             <a href=\"../../javax/jmdns/DNSRecord.html\">DNSRecord</a> c = (DNSRecord)i.next();\n<a name=\"1118\" href=\"#1118\">1118</a> \n<a name=\"1119\" href=\"#1119\">1119</a>                             <strong>if</strong>(c.isExpired(now))\n<a name=\"1120\" href=\"#1120\">1120</a>                             {\n<a name=\"1121\" href=\"#1121\">1121</a>                                 updateRecord(now, c);\n<a name=\"1122\" href=\"#1122\">1122</a>                                 i.remove();\n<a name=\"1123\" href=\"#1123\">1123</a>                             }\n<a name=\"1124\" href=\"#1124\">1124</a>                         }\n<a name=\"1125\" href=\"#1125\">1125</a>                     }\n<a name=\"1126\" href=\"#1126\">1126</a>                 }\n<a name=\"1127\" href=\"#1127\">1127</a>             }\n<a name=\"1128\" href=\"#1128\">1128</a>             <strong>catch</strong>(InterruptedException e)\n<a name=\"1129\" href=\"#1129\">1129</a>             {\n<a name=\"1130\" href=\"#1130\">1130</a>                 e.printStackTrace();\n<a name=\"1131\" href=\"#1131\">1131</a>             }\n<a name=\"1132\" href=\"#1132\">1132</a>         }\n<a name=\"1133\" href=\"#1133\">1133</a>     }\n<a name=\"1134\" href=\"#1134\">1134</a> \n<a name=\"1135\" href=\"#1135\">1135</a>     <em>/**<em>*</em></em>\n<a name=\"1136\" href=\"#1136\">1136</a> <em>     * Browse for a service of a given type</em>\n<a name=\"1137\" href=\"#1137\">1137</a> <em>     */</em>\n<a name=\"1138\" href=\"#1138\">1138</a>     <strong>class</strong> ServiceBrowser <strong>extends</strong> JmDNS.Listener implements Runnable\n<a name=\"1139\" href=\"#1139\">1139</a>     {\n<a name=\"1140\" href=\"#1140\">1140</a>         <em>/**<em>* TODO */</em></em>\n<a name=\"1141\" href=\"#1141\">1141</a>         Hashtable services;\n<a name=\"1142\" href=\"#1142\">1142</a> \n<a name=\"1143\" href=\"#1143\">1143</a>         <em>/**<em>* TODO */</em></em>\n<a name=\"1144\" href=\"#1144\">1144</a>         LinkedList list;\n<a name=\"1145\" href=\"#1145\">1145</a> \n<a name=\"1146\" href=\"#1146\">1146</a>         <em>/**<em>* TODO */</em></em>\n<a name=\"1147\" href=\"#1147\">1147</a>         <a href=\"../../javax/jmdns/ServiceListener.html\">ServiceListener</a> listener;\n<a name=\"1148\" href=\"#1148\">1148</a> \n<a name=\"1149\" href=\"#1149\">1149</a>         <em>/**<em>* TODO */</em></em>\n<a name=\"1150\" href=\"#1150\">1150</a>         String type;\n<a name=\"1151\" href=\"#1151\">1151</a> \n<a name=\"1152\" href=\"#1152\">1152</a>         <em>/**<em>* TODO */</em></em>\n<a name=\"1153\" href=\"#1153\">1153</a>         <strong>boolean</strong> done;\n<a name=\"1154\" href=\"#1154\">1154</a> \n<a name=\"1155\" href=\"#1155\">1155</a>         <em>/**<em>* TODO */</em></em>\n<a name=\"1156\" href=\"#1156\">1156</a>         <strong>int</strong> delay;\n<a name=\"1157\" href=\"#1157\">1157</a> \n<a name=\"1158\" href=\"#1158\">1158</a>         <em>/**<em>* TODO */</em></em>\n<a name=\"1159\" href=\"#1159\">1159</a>         <strong>long</strong> nextTime;\n<a name=\"1160\" href=\"#1160\">1160</a> \n<a name=\"1161\" href=\"#1161\">1161</a>         <em>/**<em>*</em></em>\n<a name=\"1162\" href=\"#1162\">1162</a> <em>         * Create a browser for a service type.</em>\n<a name=\"1163\" href=\"#1163\">1163</a> <em>         *</em>\n<a name=\"1164\" href=\"#1164\">1164</a> <em>         * @param type TODO</em>\n<a name=\"1165\" href=\"#1165\">1165</a> <em>         * @param listener TODO</em>\n<a name=\"1166\" href=\"#1166\">1166</a> <em>         */</em>\n<a name=\"1167\" href=\"#1167\">1167</a>         ServiceBrowser(String type, <a href=\"../../javax/jmdns/ServiceListener.html\">ServiceListener</a> listener)\n<a name=\"1168\" href=\"#1168\">1168</a>         {\n<a name=\"1169\" href=\"#1169\">1169</a>             <strong>this</strong>.type = type;\n<a name=\"1170\" href=\"#1170\">1170</a>             <strong>this</strong>.listener = listener;\n<a name=\"1171\" href=\"#1171\">1171</a>             <strong>this</strong>.services = <strong>new</strong> Hashtable();\n<a name=\"1172\" href=\"#1172\">1172</a>             <strong>this</strong>.nextTime = System.currentTimeMillis();\n<a name=\"1173\" href=\"#1173\">1173</a>             <strong>this</strong>.delay = 500;\n<a name=\"1174\" href=\"#1174\">1174</a>             <strong>this</strong>.list = <strong>new</strong> LinkedList();\n<a name=\"1175\" href=\"#1175\">1175</a> \n<a name=\"1176\" href=\"#1176\">1176</a>             addListener(<strong>this</strong>, <strong>new</strong> <a href=\"../../javax/jmdns/DNSQuestion.html\">DNSQuestion</a>(type, TYPE_PTR, CLASS_IN));\n<a name=\"1177\" href=\"#1177\">1177</a>             <strong>new</strong> Thread(<strong>this</strong>, <span class=\"string\">\"JmDNS.ServiceBrowser: \"</span> + type).start();\n<a name=\"1178\" href=\"#1178\">1178</a>         }\n<a name=\"1179\" href=\"#1179\">1179</a> \n<a name=\"1180\" href=\"#1180\">1180</a>         <em>/**<em>*</em></em>\n<a name=\"1181\" href=\"#1181\">1181</a> <em>         * Request.</em>\n<a name=\"1182\" href=\"#1182\">1182</a> <em>         */</em>\n<a name=\"1183\" href=\"#1183\">1183</a>         <strong>public</strong> <strong>void</strong> run()\n<a name=\"1184\" href=\"#1184\">1184</a>         {\n<a name=\"1185\" href=\"#1185\">1185</a>             <strong>try</strong>\n<a name=\"1186\" href=\"#1186\">1186</a>             {\n<a name=\"1187\" href=\"#1187\">1187</a>                 <strong>while</strong>(<strong>true</strong>)\n<a name=\"1188\" href=\"#1188\">1188</a>                 {\n<a name=\"1189\" href=\"#1189\">1189</a>                     Event evt = <strong>null</strong>;\n<a name=\"1190\" href=\"#1190\">1190</a> \n<a name=\"1191\" href=\"#1191\">1191</a>                     <strong>synchronized</strong>(JmDNS.<strong>this</strong>)\n<a name=\"1192\" href=\"#1192\">1192</a>                     {\n<a name=\"1193\" href=\"#1193\">1193</a>                         <strong>long</strong> now = System.currentTimeMillis();\n<a name=\"1194\" href=\"#1194\">1194</a> \n<a name=\"1195\" href=\"#1195\">1195</a>                         <strong>if</strong>((list.size() == 0) &amp;&amp; (nextTime > now))\n<a name=\"1196\" href=\"#1196\">1196</a>                         {\n<a name=\"1197\" href=\"#1197\">1197</a>                             JmDNS.<strong>this</strong>.wait(nextTime - now);\n<a name=\"1198\" href=\"#1198\">1198</a>                         }\n<a name=\"1199\" href=\"#1199\">1199</a> \n<a name=\"1200\" href=\"#1200\">1200</a>                         <strong>if</strong>(done)\n<a name=\"1201\" href=\"#1201\">1201</a>                         {\n<a name=\"1202\" href=\"#1202\">1202</a>                             <strong>return</strong>;\n<a name=\"1203\" href=\"#1203\">1203</a>                         }\n<a name=\"1204\" href=\"#1204\">1204</a> \n<a name=\"1205\" href=\"#1205\">1205</a>                         now = System.currentTimeMillis();\n<a name=\"1206\" href=\"#1206\">1206</a> \n<a name=\"1207\" href=\"#1207\">1207</a>                         <em class=\"comment\">// send query</em>\n<a name=\"1208\" href=\"#1208\">1208</a>                         <strong>if</strong>(nextTime &lt;= now)\n<a name=\"1209\" href=\"#1209\">1209</a>                         {\n<a name=\"1210\" href=\"#1210\">1210</a>                             <a href=\"../../javax/jmdns/DNSOutgoing.html\">DNSOutgoing</a> out = <strong>new</strong> <a href=\"../../javax/jmdns/DNSOutgoing.html\">DNSOutgoing</a>(FLAGS_QR_QUERY);\n<a name=\"1211\" href=\"#1211\">1211</a> \n<a name=\"1212\" href=\"#1212\">1212</a>                             out.addQuestion(<strong>new</strong> <a href=\"../../javax/jmdns/DNSQuestion.html\">DNSQuestion</a>(type, TYPE_PTR,\n<a name=\"1213\" href=\"#1213\">1213</a>                                                             CLASS_IN));\n<a name=\"1214\" href=\"#1214\">1214</a> \n<a name=\"1215\" href=\"#1215\">1215</a>                             <strong>for</strong>(Enumeration e = services.elements();\n<a name=\"1216\" href=\"#1216\">1216</a>                                 e.hasMoreElements();)\n<a name=\"1217\" href=\"#1217\">1217</a>                             {\n<a name=\"1218\" href=\"#1218\">1218</a>                                 <a href=\"../../javax/jmdns/DNSRecord.html\">DNSRecord</a> rec = (DNSRecord)e.nextElement();\n<a name=\"1219\" href=\"#1219\">1219</a> \n<a name=\"1220\" href=\"#1220\">1220</a>                                 <strong>if</strong>(!rec.isExpired(now))\n<a name=\"1221\" href=\"#1221\">1221</a>                                 {\n<a name=\"1222\" href=\"#1222\">1222</a>                                     out.addAnswer(rec, now);\n<a name=\"1223\" href=\"#1223\">1223</a>                                 }\n<a name=\"1224\" href=\"#1224\">1224</a>                             }\n<a name=\"1225\" href=\"#1225\">1225</a> \n<a name=\"1226\" href=\"#1226\">1226</a>                             send(out);\n<a name=\"1227\" href=\"#1227\">1227</a> \n<a name=\"1228\" href=\"#1228\">1228</a>                             <em class=\"comment\">// schedule the next one</em>\n<a name=\"1229\" href=\"#1229\">1229</a>                             nextTime = now + delay;\n<a name=\"1230\" href=\"#1230\">1230</a>                             delay = Math.min(20 * 1000, delay * 2);\n<a name=\"1231\" href=\"#1231\">1231</a>                         }\n<a name=\"1232\" href=\"#1232\">1232</a> \n<a name=\"1233\" href=\"#1233\">1233</a>                         <em class=\"comment\">// get the next event</em>\n<a name=\"1234\" href=\"#1234\">1234</a>                         <strong>if</strong>(list.size() > 0)\n<a name=\"1235\" href=\"#1235\">1235</a>                         {\n<a name=\"1236\" href=\"#1236\">1236</a>                             evt = (Event)list.removeFirst();\n<a name=\"1237\" href=\"#1237\">1237</a>                         }\n<a name=\"1238\" href=\"#1238\">1238</a>                     }\n<a name=\"1239\" href=\"#1239\">1239</a> \n<a name=\"1240\" href=\"#1240\">1240</a>                     <strong>if</strong>(evt != <strong>null</strong>)\n<a name=\"1241\" href=\"#1241\">1241</a>                     {\n<a name=\"1242\" href=\"#1242\">1242</a>                         evt.send();\n<a name=\"1243\" href=\"#1243\">1243</a>                     }\n<a name=\"1244\" href=\"#1244\">1244</a>                 }\n<a name=\"1245\" href=\"#1245\">1245</a>             }\n<a name=\"1246\" href=\"#1246\">1246</a>             <strong>catch</strong>(IOException e)\n<a name=\"1247\" href=\"#1247\">1247</a>             {\n<a name=\"1248\" href=\"#1248\">1248</a>                 e.printStackTrace();\n<a name=\"1249\" href=\"#1249\">1249</a>             }\n<a name=\"1250\" href=\"#1250\">1250</a>             <strong>catch</strong>(InterruptedException e)\n<a name=\"1251\" href=\"#1251\">1251</a>             {\n<a name=\"1252\" href=\"#1252\">1252</a>                 <em class=\"comment\">// oops</em>\n<a name=\"1253\" href=\"#1253\">1253</a>             }\n<a name=\"1254\" href=\"#1254\">1254</a>         }\n<a name=\"1255\" href=\"#1255\">1255</a> \n<a name=\"1256\" href=\"#1256\">1256</a>         <em>/**<em>*</em></em>\n<a name=\"1257\" href=\"#1257\">1257</a> <em>         * TODO</em>\n<a name=\"1258\" href=\"#1258\">1258</a> <em>         */</em>\n<a name=\"1259\" href=\"#1259\">1259</a>         <strong>void</strong> close()\n<a name=\"1260\" href=\"#1260\">1260</a>         {\n<a name=\"1261\" href=\"#1261\">1261</a>             <strong>synchronized</strong>(JmDNS.<strong>this</strong>)\n<a name=\"1262\" href=\"#1262\">1262</a>             {\n<a name=\"1263\" href=\"#1263\">1263</a>                 <strong>if</strong>(!done)\n<a name=\"1264\" href=\"#1264\">1264</a>                 {\n<a name=\"1265\" href=\"#1265\">1265</a>                     done = <strong>true</strong>;\n<a name=\"1266\" href=\"#1266\">1266</a>                     removeListener(<strong>this</strong>);\n<a name=\"1267\" href=\"#1267\">1267</a>                 }\n<a name=\"1268\" href=\"#1268\">1268</a>             }\n<a name=\"1269\" href=\"#1269\">1269</a>         }\n<a name=\"1270\" href=\"#1270\">1270</a> \n<a name=\"1271\" href=\"#1271\">1271</a>         <em>/**<em>*</em></em>\n<a name=\"1272\" href=\"#1272\">1272</a> <em>         * Update a record.</em>\n<a name=\"1273\" href=\"#1273\">1273</a> <em>         *</em>\n<a name=\"1274\" href=\"#1274\">1274</a> <em>         * @param jmdns TODO</em>\n<a name=\"1275\" href=\"#1275\">1275</a> <em>         * @param now TODO</em>\n<a name=\"1276\" href=\"#1276\">1276</a> <em>         * @param rec TODO</em>\n<a name=\"1277\" href=\"#1277\">1277</a> <em>         */</em>\n<a name=\"1278\" href=\"#1278\">1278</a>         <strong>void</strong> updateRecord(<a href=\"../../javax/jmdns/JmDNS.html\">JmDNS</a> jmdns, <strong>long</strong> now, <a href=\"../../javax/jmdns/DNSRecord.html\">DNSRecord</a> rec)\n<a name=\"1279\" href=\"#1279\">1279</a>         {\n<a name=\"1280\" href=\"#1280\">1280</a>             <strong>if</strong>((rec.type == TYPE_PTR) &amp;&amp; rec.name.equals(type))\n<a name=\"1281\" href=\"#1281\">1281</a>             {\n<a name=\"1282\" href=\"#1282\">1282</a>                 <strong>boolean</strong> expired = rec.isExpired(now);\n<a name=\"1283\" href=\"#1283\">1283</a>                 String name = ((DNSRecord.Pointer)rec).alias;\n<a name=\"1284\" href=\"#1284\">1284</a>                 <a href=\"../../javax/jmdns/DNSRecord.html\">DNSRecord</a> old = (DNSRecord)services.get(name.toLowerCase());\n<a name=\"1285\" href=\"#1285\">1285</a> \n<a name=\"1286\" href=\"#1286\">1286</a>                 <strong>if</strong>((old == <strong>null</strong>) &amp;&amp; !expired)\n<a name=\"1287\" href=\"#1287\">1287</a>                 {\n<a name=\"1288\" href=\"#1288\">1288</a>                     <em class=\"comment\">// new record</em>\n<a name=\"1289\" href=\"#1289\">1289</a>                     services.put(name.toLowerCase(), rec);\n<a name=\"1290\" href=\"#1290\">1290</a>                     list.addLast(<strong>new</strong> Event(name)\n<a name=\"1291\" href=\"#1291\">1291</a>                         {\n<a name=\"1292\" href=\"#1292\">1292</a>                             <strong>void</strong> send()\n<a name=\"1293\" href=\"#1293\">1293</a>                             {\n<a name=\"1294\" href=\"#1294\">1294</a>                                 listener.addService(JmDNS.<strong>this</strong>, type, <strong>this</strong>.name);\n<a name=\"1295\" href=\"#1295\">1295</a>                             }\n<a name=\"1296\" href=\"#1296\">1296</a>                         });\n<a name=\"1297\" href=\"#1297\">1297</a>                 }\n<a name=\"1298\" href=\"#1298\">1298</a>                 <strong>else</strong> <strong>if</strong>((old != <strong>null</strong>) &amp;&amp; !expired)\n<a name=\"1299\" href=\"#1299\">1299</a>                 {\n<a name=\"1300\" href=\"#1300\">1300</a>                     <em class=\"comment\">// update record</em>\n<a name=\"1301\" href=\"#1301\">1301</a>                     old.resetTTL(rec);\n<a name=\"1302\" href=\"#1302\">1302</a>                 }\n<a name=\"1303\" href=\"#1303\">1303</a>                 <strong>else</strong> <strong>if</strong>((old != <strong>null</strong>) &amp;&amp; expired)\n<a name=\"1304\" href=\"#1304\">1304</a>                 {\n<a name=\"1305\" href=\"#1305\">1305</a>                     <em class=\"comment\">// expire record</em>\n<a name=\"1306\" href=\"#1306\">1306</a>                     services.remove(name.toLowerCase());\n<a name=\"1307\" href=\"#1307\">1307</a>                     list.addLast(<strong>new</strong> Event(name)\n<a name=\"1308\" href=\"#1308\">1308</a>                         {\n<a name=\"1309\" href=\"#1309\">1309</a>                             <strong>void</strong> send()\n<a name=\"1310\" href=\"#1310\">1310</a>                             {\n<a name=\"1311\" href=\"#1311\">1311</a>                                 listener.removeService(JmDNS.<strong>this</strong>, type,\n<a name=\"1312\" href=\"#1312\">1312</a>                                                        <strong>this</strong>.name);\n<a name=\"1313\" href=\"#1313\">1313</a>                             }\n<a name=\"1314\" href=\"#1314\">1314</a>                         });\n<a name=\"1315\" href=\"#1315\">1315</a> \n<a name=\"1316\" href=\"#1316\">1316</a>                     <strong>return</strong>;\n<a name=\"1317\" href=\"#1317\">1317</a>                 }\n<a name=\"1318\" href=\"#1318\">1318</a> \n<a name=\"1319\" href=\"#1319\">1319</a>                 <em class=\"comment\">// adjust next request time</em>\n<a name=\"1320\" href=\"#1320\">1320</a>                 <strong>long</strong> expires = rec.getExpirationTime(75);\n<a name=\"1321\" href=\"#1321\">1321</a> \n<a name=\"1322\" href=\"#1322\">1322</a>                 <strong>if</strong>(expires &lt; nextTime)\n<a name=\"1323\" href=\"#1323\">1323</a>                 {\n<a name=\"1324\" href=\"#1324\">1324</a>                     nextTime = rec.getExpirationTime(75);\n<a name=\"1325\" href=\"#1325\">1325</a>                 }\n<a name=\"1326\" href=\"#1326\">1326</a>             }\n<a name=\"1327\" href=\"#1327\">1327</a>         }\n<a name=\"1328\" href=\"#1328\">1328</a> \n<a name=\"1329\" href=\"#1329\">1329</a>         <em>/**<em>*</em></em>\n<a name=\"1330\" href=\"#1330\">1330</a> <em>         * Event for notifying a service listener.</em>\n<a name=\"1331\" href=\"#1331\">1331</a> <em>         */</em>\n<a name=\"1332\" href=\"#1332\">1332</a>         <strong>abstract</strong> <strong>class</strong> Event\n<a name=\"1333\" href=\"#1333\">1333</a>         {\n<a name=\"1334\" href=\"#1334\">1334</a>             <em>/**<em>* TODO */</em></em>\n<a name=\"1335\" href=\"#1335\">1335</a>             String name;\n<a name=\"1336\" href=\"#1336\">1336</a> \n<a name=\"1337\" href=\"#1337\">1337</a>             <em>/**<em>*</em></em>\n<a name=\"1338\" href=\"#1338\">1338</a> <em>             * Creates a new Event object.</em>\n<a name=\"1339\" href=\"#1339\">1339</a> <em>             *</em>\n<a name=\"1340\" href=\"#1340\">1340</a> <em>             * @param name TODO</em>\n<a name=\"1341\" href=\"#1341\">1341</a> <em>             */</em>\n<a name=\"1342\" href=\"#1342\">1342</a>             Event(String name)\n<a name=\"1343\" href=\"#1343\">1343</a>             {\n<a name=\"1344\" href=\"#1344\">1344</a>                 <strong>this</strong>.name = name;\n<a name=\"1345\" href=\"#1345\">1345</a>             }\n<a name=\"1346\" href=\"#1346\">1346</a> \n<a name=\"1347\" href=\"#1347\">1347</a>             <em>/**<em>*</em></em>\n<a name=\"1348\" href=\"#1348\">1348</a> <em>             * TODO</em>\n<a name=\"1349\" href=\"#1349\">1349</a> <em>             */</em>\n<a name=\"1350\" href=\"#1350\">1350</a>             <strong>abstract</strong> <strong>void</strong> send();\n<a name=\"1351\" href=\"#1351\">1351</a>         }\n<a name=\"1352\" href=\"#1352\">1352</a>     }\n<a name=\"1353\" href=\"#1353\">1353</a> \n<a name=\"1354\" href=\"#1354\">1354</a>     <em>/**<em>*</em></em>\n<a name=\"1355\" href=\"#1355\">1355</a> <em>     * Helper class to resolve services.</em>\n<a name=\"1356\" href=\"#1356\">1356</a> <em>     */</em>\n<a name=\"1357\" href=\"#1357\">1357</a>     <strong>class</strong> ServiceResolver implements Runnable\n<a name=\"1358\" href=\"#1358\">1358</a>     {\n<a name=\"1359\" href=\"#1359\">1359</a>         <em>/**<em>* TODO */</em></em>\n<a name=\"1360\" href=\"#1360\">1360</a>         <a href=\"../../javax/jmdns/ServiceInfo.html\">ServiceInfo</a> info;\n<a name=\"1361\" href=\"#1361\">1361</a> \n<a name=\"1362\" href=\"#1362\">1362</a>         <em>/**<em>* TODO */</em></em>\n<a name=\"1363\" href=\"#1363\">1363</a>         <strong>int</strong> timeout;\n<a name=\"1364\" href=\"#1364\">1364</a> \n<a name=\"1365\" href=\"#1365\">1365</a>         <em>/**<em>*</em></em>\n<a name=\"1366\" href=\"#1366\">1366</a> <em>         * Creates a new ServiceResolver object.</em>\n<a name=\"1367\" href=\"#1367\">1367</a> <em>         *</em>\n<a name=\"1368\" href=\"#1368\">1368</a> <em>         * @param info TODO</em>\n<a name=\"1369\" href=\"#1369\">1369</a> <em>         * @param timeout TODO</em>\n<a name=\"1370\" href=\"#1370\">1370</a> <em>         */</em>\n<a name=\"1371\" href=\"#1371\">1371</a>         ServiceResolver(<a href=\"../../javax/jmdns/ServiceInfo.html\">ServiceInfo</a> info, <strong>int</strong> timeout)\n<a name=\"1372\" href=\"#1372\">1372</a>         {\n<a name=\"1373\" href=\"#1373\">1373</a>             <strong>this</strong>.info = info;\n<a name=\"1374\" href=\"#1374\">1374</a>             <strong>this</strong>.timeout = timeout;\n<a name=\"1375\" href=\"#1375\">1375</a>         }\n<a name=\"1376\" href=\"#1376\">1376</a> \n<a name=\"1377\" href=\"#1377\">1377</a>         <em>/**<em>*</em></em>\n<a name=\"1378\" href=\"#1378\">1378</a> <em>         * TODO</em>\n<a name=\"1379\" href=\"#1379\">1379</a> <em>         */</em>\n<a name=\"1380\" href=\"#1380\">1380</a>         <strong>public</strong> <strong>void</strong> run()\n<a name=\"1381\" href=\"#1381\">1381</a>         {\n<a name=\"1382\" href=\"#1382\">1382</a>             <a href=\"../../javax/jmdns/ServiceInfo.html\">ServiceInfo</a> result = info;\n<a name=\"1383\" href=\"#1383\">1383</a> \n<a name=\"1384\" href=\"#1384\">1384</a>             <strong>if</strong>(!info.request(JmDNS.<strong>this</strong>, timeout))\n<a name=\"1385\" href=\"#1385\">1385</a>             {\n<a name=\"1386\" href=\"#1386\">1386</a>                 result = <strong>null</strong>;\n<a name=\"1387\" href=\"#1387\">1387</a>             }\n<a name=\"1388\" href=\"#1388\">1388</a> \n<a name=\"1389\" href=\"#1389\">1389</a>             <em class=\"comment\">// notify the listeners of the appropriate service browsers</em>\n<a name=\"1390\" href=\"#1390\">1390</a>             <strong>for</strong>(Enumeration e = browsers.elements(); e.hasMoreElements();)\n<a name=\"1391\" href=\"#1391\">1391</a>             {\n<a name=\"1392\" href=\"#1392\">1392</a>                 ServiceBrowser browser = (ServiceBrowser)e.nextElement();\n<a name=\"1393\" href=\"#1393\">1393</a> \n<a name=\"1394\" href=\"#1394\">1394</a>                 <strong>if</strong>(browser.type.equalsIgnoreCase(info.type))\n<a name=\"1395\" href=\"#1395\">1395</a>                 {\n<a name=\"1396\" href=\"#1396\">1396</a>                     browser.listener.resolveService(JmDNS.<strong>this</strong>, info.type,\n<a name=\"1397\" href=\"#1397\">1397</a>                                                     info.name, result);\n<a name=\"1398\" href=\"#1398\">1398</a>                 }\n<a name=\"1399\" href=\"#1399\">1399</a>             }\n<a name=\"1400\" href=\"#1400\">1400</a>         }\n<a name=\"1401\" href=\"#1401\">1401</a>     }\n<a name=\"1402\" href=\"#1402\">1402</a> \n<a name=\"1403\" href=\"#1403\">1403</a>     <em>/**<em>*</em></em>\n<a name=\"1404\" href=\"#1404\">1404</a> <em>     * Shutdown operations.</em>\n<a name=\"1405\" href=\"#1405\">1405</a> <em>     */</em>\n<a name=\"1406\" href=\"#1406\">1406</a>     <strong>class</strong> Shutdown implements Runnable\n<a name=\"1407\" href=\"#1407\">1407</a>     {\n<a name=\"1408\" href=\"#1408\">1408</a>         <em>/**<em>*</em></em>\n<a name=\"1409\" href=\"#1409\">1409</a> <em>         * TODO</em>\n<a name=\"1410\" href=\"#1410\">1410</a> <em>         */</em>\n<a name=\"1411\" href=\"#1411\">1411</a>         <strong>public</strong> <strong>void</strong> run()\n<a name=\"1412\" href=\"#1412\">1412</a>         {\n<a name=\"1413\" href=\"#1413\">1413</a>             shutdown = <strong>null</strong>;\n<a name=\"1414\" href=\"#1414\">1414</a>             close();\n<a name=\"1415\" href=\"#1415\">1415</a>         }\n<a name=\"1416\" href=\"#1416\">1416</a>     }\n<a name=\"1417\" href=\"#1417\">1417</a> \n<a name=\"1418\" href=\"#1418\">1418</a>     <em>/**<em>*</em></em>\n<a name=\"1419\" href=\"#1419\">1419</a> <em>     * Listen for multicast packets.</em>\n<a name=\"1420\" href=\"#1420\">1420</a> <em>     */</em>\n<a name=\"1421\" href=\"#1421\">1421</a>     <strong>class</strong> SocketListener implements Runnable\n<a name=\"1422\" href=\"#1422\">1422</a>     {\n<a name=\"1423\" href=\"#1423\">1423</a>         <em>/**<em>*</em></em>\n<a name=\"1424\" href=\"#1424\">1424</a> <em>         * TODO</em>\n<a name=\"1425\" href=\"#1425\">1425</a> <em>         */</em>\n<a name=\"1426\" href=\"#1426\">1426</a>         <strong>public</strong> <strong>void</strong> run()\n<a name=\"1427\" href=\"#1427\">1427</a>         {\n<a name=\"1428\" href=\"#1428\">1428</a>             <strong>try</strong>\n<a name=\"1429\" href=\"#1429\">1429</a>             {\n<a name=\"1430\" href=\"#1430\">1430</a>                 byte[] buf = <strong>new</strong> byte[MAX_MSG_ABSOLUTE];\n<a name=\"1431\" href=\"#1431\">1431</a>                 DatagramPacket packet = <strong>new</strong> DatagramPacket(buf, buf.length);\n<a name=\"1432\" href=\"#1432\">1432</a> \n<a name=\"1433\" href=\"#1433\">1433</a>                 <strong>while</strong>(!done)\n<a name=\"1434\" href=\"#1434\">1434</a>                 {\n<a name=\"1435\" href=\"#1435\">1435</a>                     packet.setLength(buf.length);\n<a name=\"1436\" href=\"#1436\">1436</a>                     socket.receive(packet);\n<a name=\"1437\" href=\"#1437\">1437</a> \n<a name=\"1438\" href=\"#1438\">1438</a>                     <strong>if</strong>(done)\n<a name=\"1439\" href=\"#1439\">1439</a>                     {\n<a name=\"1440\" href=\"#1440\">1440</a>                         <strong>break</strong>;\n<a name=\"1441\" href=\"#1441\">1441</a>                     }\n<a name=\"1442\" href=\"#1442\">1442</a> \n<a name=\"1443\" href=\"#1443\">1443</a>                     <strong>try</strong>\n<a name=\"1444\" href=\"#1444\">1444</a>                     {\n<a name=\"1445\" href=\"#1445\">1445</a>                         InetAddress from = packet.getAddress();\n<a name=\"1446\" href=\"#1446\">1446</a> \n<a name=\"1447\" href=\"#1447\">1447</a>                         <strong>if</strong>(linklocal != isLinkLocal(from))\n<a name=\"1448\" href=\"#1448\">1448</a>                         {\n<a name=\"1449\" href=\"#1449\">1449</a>                             <em class=\"comment\">// Ignore linklocal packets on regular interfaces, unless this is</em>\n<a name=\"1450\" href=\"#1450\">1450</a>                             <em class=\"comment\">// also a linklocal interface. This is to avoid duplicates. This is</em>\n<a name=\"1451\" href=\"#1451\">1451</a>                             <em class=\"comment\">// a terrible hack caused by the lack of an API to get the address</em>\n<a name=\"1452\" href=\"#1452\">1452</a>                             <em class=\"comment\">// of the interface on which the packet was received.</em>\n<a name=\"1453\" href=\"#1453\">1453</a>                             <strong>continue</strong>;\n<a name=\"1454\" href=\"#1454\">1454</a>                         }\n<a name=\"1455\" href=\"#1455\">1455</a> \n<a name=\"1456\" href=\"#1456\">1456</a>                         <strong>if</strong>(loopback != isLoopback(from))\n<a name=\"1457\" href=\"#1457\">1457</a>                         {\n<a name=\"1458\" href=\"#1458\">1458</a>                             <em class=\"comment\">// Ignore loopback packets on a regular interface unless this is</em>\n<a name=\"1459\" href=\"#1459\">1459</a>                             <em class=\"comment\">// also a loopback interface.</em>\n<a name=\"1460\" href=\"#1460\">1460</a>                             <strong>continue</strong>;\n<a name=\"1461\" href=\"#1461\">1461</a>                         }\n<a name=\"1462\" href=\"#1462\">1462</a> \n<a name=\"1463\" href=\"#1463\">1463</a>                         <a href=\"../../javax/jmdns/DNSIncoming.html\">DNSIncoming</a> msg = <strong>new</strong> <a href=\"../../javax/jmdns/DNSIncoming.html\">DNSIncoming</a>(packet);\n<a name=\"1464\" href=\"#1464\">1464</a> \n<a name=\"1465\" href=\"#1465\">1465</a>                         <strong>if</strong>(debug > 0)\n<a name=\"1466\" href=\"#1466\">1466</a>                         {\n<a name=\"1467\" href=\"#1467\">1467</a>                             msg.print(debug > 1);\n<a name=\"1468\" href=\"#1468\">1468</a>                             System.out.println();\n<a name=\"1469\" href=\"#1469\">1469</a>                         }\n<a name=\"1470\" href=\"#1470\">1470</a> \n<a name=\"1471\" href=\"#1471\">1471</a>                         <strong>if</strong>(msg.isQuery())\n<a name=\"1472\" href=\"#1472\">1472</a>                         {\n<a name=\"1473\" href=\"#1473\">1473</a>                             <strong>if</strong>(packet.getPort() != MDNS_PORT)\n<a name=\"1474\" href=\"#1474\">1474</a>                             {\n<a name=\"1475\" href=\"#1475\">1475</a>                                 handleQuery(msg, packet.getAddress(),\n<a name=\"1476\" href=\"#1476\">1476</a>                                             packet.getPort());\n<a name=\"1477\" href=\"#1477\">1477</a>                             }\n<a name=\"1478\" href=\"#1478\">1478</a> \n<a name=\"1479\" href=\"#1479\">1479</a>                             handleQuery(msg, group, MDNS_PORT);\n<a name=\"1480\" href=\"#1480\">1480</a>                         }\n<a name=\"1481\" href=\"#1481\">1481</a>                         <strong>else</strong>\n<a name=\"1482\" href=\"#1482\">1482</a>                         {\n<a name=\"1483\" href=\"#1483\">1483</a>                             handleResponse(msg);\n<a name=\"1484\" href=\"#1484\">1484</a>                         }\n<a name=\"1485\" href=\"#1485\">1485</a>                     }\n<a name=\"1486\" href=\"#1486\">1486</a>                     <strong>catch</strong>(IOException e)\n<a name=\"1487\" href=\"#1487\">1487</a>                     {\n<a name=\"1488\" href=\"#1488\">1488</a>                         e.printStackTrace();\n<a name=\"1489\" href=\"#1489\">1489</a>                     }\n<a name=\"1490\" href=\"#1490\">1490</a>                 }\n<a name=\"1491\" href=\"#1491\">1491</a>             }\n<a name=\"1492\" href=\"#1492\">1492</a>             <strong>catch</strong>(IOException e)\n<a name=\"1493\" href=\"#1493\">1493</a>             {\n<a name=\"1494\" href=\"#1494\">1494</a>                 <strong>if</strong>(!done)\n<a name=\"1495\" href=\"#1495\">1495</a>                 {\n<a name=\"1496\" href=\"#1496\">1496</a>                     e.printStackTrace();\n<a name=\"1497\" href=\"#1497\">1497</a>                 }\n<a name=\"1498\" href=\"#1498\">1498</a>             }\n<a name=\"1499\" href=\"#1499\">1499</a>         }\n<a name=\"1500\" href=\"#1500\">1500</a>     }\n<a name=\"1501\" href=\"#1501\">1501</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 32938.0}