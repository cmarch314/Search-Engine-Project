{"text": "View Javadoc 1 package swirl workspace 2 3 import javax swing table AbstractTableModel 4 5 import org apache commons logging Log 6 import org apache commons logging LogFactory 7 8 import swirl workspace viz Model 9 1 11 An adapter between the swirl model and a JTable 12 13 author bpillet 14 15 public class PeerTableModel extends AbstractTableModel 16 implements PeerManagerListener 17 18 TODO 19 private static final long serialVersionUID 1L 2 21 this class s logger 22 private Log log LogFactory getLog this getClass 23 24 the underlying swirl model 25 private Model model 26 27 the columns of the table 28 private String columns User Host 29 3 31 Initialize this table model 32 33 param mod the underlying Swirl model to use 34 35 public PeerTableModel final Model mod 36 37 this model mod 38 39 4 41 How many columns there are 42 43 return columns length 44 45 public int getColumnCount 46 47 return columns length 48 49 5 51 Get each of the column names 52 53 param column the column to get the name of 54 55 return columns column 56 57 public String getColumnName final int column 58 59 return columns column 6 61 62 63 How many peers there are 64 65 return peers length 66 67 public int getRowCount 68 69 return model getPeers length 7 71 72 73 Overriden from parent to populate the table 74 75 param rowIndex the row to get 76 param columnIndex the column to get 77 78 return for column the username for column 1 the peer uniqueId 79 8 public Object getValueAt final int rowIndex final int columnIndex 81 82 if rowIndex model getPeers length 83 84 if columnIndex 85 86 return model getPeers rowIndex getUserName 87 88 else 89 9 return model getPeers rowIndex getUniqueID 91 92 93 94 return 95 96 97 98 Implemented from interface to update the gui when a peer joins 99 1 param peer the peer that joined 1 1 1 2 public void peerJoined final Peer peer 1 3 1 4 fireTableDataChanged 1 5 1 6 1 7 1 8 Implemented from interface to update the gui when a peer leaves 1 9 11 param peer the peer that left 111 112 public void peerLeft final Peer peer 113 114 fireTableDataChanged 115 116 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.20/xref/swirl/workspace/PeerTableModel.html", "title": "peertablemodel xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>PeerTableModel xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../stylesheet.css\" />\n</head>\n<body>\n<div id=\"overview\"><a href=\"../../../apidocs/swirl/workspace/PeerTableModel.html\">View Javadoc</a></div><pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <strong>package</strong> <a href=\"../../swirl/workspace/package-summary.html\">swirl.workspace</a>;\n<a name=\"2\" href=\"#2\">2</a>   \n<a name=\"3\" href=\"#3\">3</a>   <strong>import</strong> javax.swing.table.AbstractTableModel;\n<a name=\"4\" href=\"#4\">4</a>   \n<a name=\"5\" href=\"#5\">5</a>   <strong>import</strong> org.apache.commons.logging.Log;\n<a name=\"6\" href=\"#6\">6</a>   <strong>import</strong> org.apache.commons.logging.LogFactory;\n<a name=\"7\" href=\"#7\">7</a>   \n<a name=\"8\" href=\"#8\">8</a>   <strong>import</strong> swirl.workspace.viz.Model;\n<a name=\"9\" href=\"#9\">9</a>   \n<a name=\"10\" href=\"#10\">10</a>  <em>/**<em>*</em></em>\n<a name=\"11\" href=\"#11\">11</a>  <em> * An adapter between the swirl model and a JTable</em>\n<a name=\"12\" href=\"#12\">12</a>  <em> *</em>\n<a name=\"13\" href=\"#13\">13</a>  <em> * @author bpillet</em>\n<a name=\"14\" href=\"#14\">14</a>  <em> */</em>\n<a name=\"15\" href=\"#15\">15</a>  <strong>public</strong> <strong>class</strong> <a href=\"../../swirl/workspace/PeerTableModel.html\">PeerTableModel</a> <strong>extends</strong> AbstractTableModel\n<a name=\"16\" href=\"#16\">16</a>      implements <a href=\"../../swirl/workspace/PeerManagerListener.html\">PeerManagerListener</a>\n<a name=\"17\" href=\"#17\">17</a>  {\n<a name=\"18\" href=\"#18\">18</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"19\" href=\"#19\">19</a>      <strong>private</strong> <strong>static</strong> <strong>final</strong> <strong>long</strong> serialVersionUID = 1L;\n<a name=\"20\" href=\"#20\">20</a>  \n<a name=\"21\" href=\"#21\">21</a>      <em>/**<em>* this class's logger */</em></em>\n<a name=\"22\" href=\"#22\">22</a>      <strong>private</strong> Log log = LogFactory.getLog(<strong>this</strong>.getClass());\n<a name=\"23\" href=\"#23\">23</a>  \n<a name=\"24\" href=\"#24\">24</a>      <em>/**<em>* the underlying swirl model */</em></em>\n<a name=\"25\" href=\"#25\">25</a>      <strong>private</strong> <a href=\"../../swirl/workspace/viz/Model.html\">Model</a> model;\n<a name=\"26\" href=\"#26\">26</a>  \n<a name=\"27\" href=\"#27\">27</a>      <em>/**<em>* the columns of the table */</em></em>\n<a name=\"28\" href=\"#28\">28</a>      <strong>private</strong> String[] columns = {<span class=\"string\">\"User\"</span>, <span class=\"string\">\"Host\"</span>};\n<a name=\"29\" href=\"#29\">29</a>  \n<a name=\"30\" href=\"#30\">30</a>      <em>/**<em>*</em></em>\n<a name=\"31\" href=\"#31\">31</a>  <em>     * Initialize this table model</em>\n<a name=\"32\" href=\"#32\">32</a>  <em>     *</em>\n<a name=\"33\" href=\"#33\">33</a>  <em>     * @param mod the underlying Swirl model to use</em>\n<a name=\"34\" href=\"#34\">34</a>  <em>     */</em>\n<a name=\"35\" href=\"#35\">35</a>      <strong>public</strong> <a href=\"../../swirl/workspace/PeerTableModel.html\">PeerTableModel</a>(<strong>final</strong> <a href=\"../../swirl/workspace/viz/Model.html\">Model</a> mod)\n<a name=\"36\" href=\"#36\">36</a>      {\n<a name=\"37\" href=\"#37\">37</a>          <strong>this</strong>.model = mod;\n<a name=\"38\" href=\"#38\">38</a>      }\n<a name=\"39\" href=\"#39\">39</a>  \n<a name=\"40\" href=\"#40\">40</a>      <em>/**<em>*</em></em>\n<a name=\"41\" href=\"#41\">41</a>  <em>     * How many columns there are</em>\n<a name=\"42\" href=\"#42\">42</a>  <em>     *</em>\n<a name=\"43\" href=\"#43\">43</a>  <em>     * @return columns.length</em>\n<a name=\"44\" href=\"#44\">44</a>  <em>     */</em>\n<a name=\"45\" href=\"#45\">45</a>      <strong>public</strong> <strong>int</strong> getColumnCount()\n<a name=\"46\" href=\"#46\">46</a>      {\n<a name=\"47\" href=\"#47\">47</a>          <strong>return</strong> columns.length;\n<a name=\"48\" href=\"#48\">48</a>      }\n<a name=\"49\" href=\"#49\">49</a>  \n<a name=\"50\" href=\"#50\">50</a>      <em>/**<em>*</em></em>\n<a name=\"51\" href=\"#51\">51</a>  <em>     * Get each of the column names</em>\n<a name=\"52\" href=\"#52\">52</a>  <em>     *</em>\n<a name=\"53\" href=\"#53\">53</a>  <em>     * @param column the column to get the name of</em>\n<a name=\"54\" href=\"#54\">54</a>  <em>     *</em>\n<a name=\"55\" href=\"#55\">55</a>  <em>     * @return columns[column]</em>\n<a name=\"56\" href=\"#56\">56</a>  <em>     */</em>\n<a name=\"57\" href=\"#57\">57</a>      <strong>public</strong> String getColumnName(<strong>final</strong> <strong>int</strong> column)\n<a name=\"58\" href=\"#58\">58</a>      {\n<a name=\"59\" href=\"#59\">59</a>          <strong>return</strong> columns[column];\n<a name=\"60\" href=\"#60\">60</a>      }\n<a name=\"61\" href=\"#61\">61</a>  \n<a name=\"62\" href=\"#62\">62</a>      <em>/**<em>*</em></em>\n<a name=\"63\" href=\"#63\">63</a>  <em>     * How many peers there are</em>\n<a name=\"64\" href=\"#64\">64</a>  <em>     *</em>\n<a name=\"65\" href=\"#65\">65</a>  <em>     * @return peers.length</em>\n<a name=\"66\" href=\"#66\">66</a>  <em>     */</em>\n<a name=\"67\" href=\"#67\">67</a>      <strong>public</strong> <strong>int</strong> getRowCount()\n<a name=\"68\" href=\"#68\">68</a>      {\n<a name=\"69\" href=\"#69\">69</a>          <strong>return</strong> model.getPeers().length;\n<a name=\"70\" href=\"#70\">70</a>      }\n<a name=\"71\" href=\"#71\">71</a>  \n<a name=\"72\" href=\"#72\">72</a>      <em>/**<em>*</em></em>\n<a name=\"73\" href=\"#73\">73</a>  <em>     * Overriden from parent to populate the table</em>\n<a name=\"74\" href=\"#74\">74</a>  <em>     *</em>\n<a name=\"75\" href=\"#75\">75</a>  <em>     * @param rowIndex the row to get</em>\n<a name=\"76\" href=\"#76\">76</a>  <em>     * @param columnIndex the column to get</em>\n<a name=\"77\" href=\"#77\">77</a>  <em>     *</em>\n<a name=\"78\" href=\"#78\">78</a>  <em>     * @return for column 0, the username; for column 1, the peer.uniqueId</em>\n<a name=\"79\" href=\"#79\">79</a>  <em>     */</em>\n<a name=\"80\" href=\"#80\">80</a>      <strong>public</strong> Object getValueAt(<strong>final</strong> <strong>int</strong> rowIndex, <strong>final</strong> <strong>int</strong> columnIndex)\n<a name=\"81\" href=\"#81\">81</a>      {\n<a name=\"82\" href=\"#82\">82</a>          <strong>if</strong>(rowIndex &lt; model.getPeers().length)\n<a name=\"83\" href=\"#83\">83</a>          {\n<a name=\"84\" href=\"#84\">84</a>              <strong>if</strong>(columnIndex == 0)\n<a name=\"85\" href=\"#85\">85</a>              {\n<a name=\"86\" href=\"#86\">86</a>                  <strong>return</strong> model.getPeers()[rowIndex].getUserName();\n<a name=\"87\" href=\"#87\">87</a>              }\n<a name=\"88\" href=\"#88\">88</a>              <strong>else</strong>\n<a name=\"89\" href=\"#89\">89</a>              {\n<a name=\"90\" href=\"#90\">90</a>                  <strong>return</strong> model.getPeers()[rowIndex].getUniqueID();\n<a name=\"91\" href=\"#91\">91</a>              }\n<a name=\"92\" href=\"#92\">92</a>          }\n<a name=\"93\" href=\"#93\">93</a>  \n<a name=\"94\" href=\"#94\">94</a>          <strong>return</strong> <span class=\"string\">\"\"</span>;\n<a name=\"95\" href=\"#95\">95</a>      }\n<a name=\"96\" href=\"#96\">96</a>  \n<a name=\"97\" href=\"#97\">97</a>      <em>/**<em>*</em></em>\n<a name=\"98\" href=\"#98\">98</a>  <em>     * Implemented from interface to update the gui when a peer joins</em>\n<a name=\"99\" href=\"#99\">99</a>  <em>     *</em>\n<a name=\"100\" href=\"#100\">100</a> <em>     * @param peer the peer that joined</em>\n<a name=\"101\" href=\"#101\">101</a> <em>     */</em>\n<a name=\"102\" href=\"#102\">102</a>     <strong>public</strong> <strong>void</strong> peerJoined(<strong>final</strong> <a href=\"../../swirl/workspace/Peer.html\">Peer</a> peer)\n<a name=\"103\" href=\"#103\">103</a>     {\n<a name=\"104\" href=\"#104\">104</a>         fireTableDataChanged();\n<a name=\"105\" href=\"#105\">105</a>     }\n<a name=\"106\" href=\"#106\">106</a> \n<a name=\"107\" href=\"#107\">107</a>     <em>/**<em>*</em></em>\n<a name=\"108\" href=\"#108\">108</a> <em>     * Implemented from interface to update the gui when a peer leaves</em>\n<a name=\"109\" href=\"#109\">109</a> <em>     *</em>\n<a name=\"110\" href=\"#110\">110</a> <em>     * @param peer the peer that left</em>\n<a name=\"111\" href=\"#111\">111</a> <em>     */</em>\n<a name=\"112\" href=\"#112\">112</a>     <strong>public</strong> <strong>void</strong> peerLeft(<strong>final</strong> <a href=\"../../swirl/workspace/Peer.html\">Peer</a> peer)\n<a name=\"113\" href=\"#113\">113</a>     {\n<a name=\"114\" href=\"#114\">114</a>         fireTableDataChanged();\n<a name=\"115\" href=\"#115\">115</a>     }\n<a name=\"116\" href=\"#116\">116</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 32727.0}