{"text": "Navigation Up Table of Contents Bibliography Index Title Page 4 2 2 Forward Circulator A class Circulator that satisfies the requirements of a forward circulator with the value type T supports the following operations See the reference pages for the full set of requirements Note that the stated return values are not required only a return value that is convertible to the stated type is required As for C we recommend the use of instead of NULL Types Circulator value type the value type T Circulator reference either reference or const reference to T Circulator pointer either pointer or const pointer to T Circulator size type unsigned integral type that can hold the size of the sequence Circulator difference type signed integral type that can hold the distance between two circulators Circulator iterator category circulator category Forward circulator tag Creation Circulator c a circulator equal to NULL denoting an empty sequence Circulator c d a circulator equal to d Operations Circulator c d Assignment bool c NULL Test for emptiness bool c NULL Test for non emptiness i e c NULL bool c d c is equal to d if they refer to the same item bool c d Test for inequality i e c d reference c Returns the value of the circulator If Circulator is mutable c t is valid Precondition c is dereferenceable pointer c Returns a pointer to the value of the circulator Precondition c is dereferenceable Circulator c Prefix increment operation Precondition c is dereferenceable Postcondition c is dereferenceable Circulator c Postfix increment operation The result is the same as that of Circulator tmp c c return tmp 4 2 3 Bidirectional Circulator A class Circulator that satisfies the requirements of a bidirectional circulator with the value type T supports the following operations in addition to the operations supported by a forward circulator Types Circulator iterator category circulator category Bidirectional circulator tag Operations Circulator c Prefix decrement operation Precondition c is dereferenceable Postcondition c is dereferenceable Circulator c Postfix decrement operation The result is the same as that of Circulator tmp c c return tmp 4 2 4 Random Access Circulator A class Circulator that satisfies the requirements of a random access Circulator for the value type T supports the following operations in addition to the operations supported by a bidirectional Circulator In contrast to random access iterators no comparison operators are available for random access circulators Types Circulator iterator category circulator category Random access circulator tag Operations Circulator c difference type n The result is the same as if the prefix increment operation was applied n times but it is computed in constant time Circulator c difference type n Same as above but returns a new circulator Circulator difference type n c Same as above Circulator c difference type n The result is the same as if the prefix decrement operation was applied n times but it is computed in constant time Circulator c difference type n Same as above but returns a new circulator reference c difference type n Returns c n difference type c Circulator d returns the difference between the two circulators The value will be in the interval 1 s s 1 if s is the size of the total sequence The difference for a fixed circulator c or d with all other circulators d or c is a consistent ordering of the elements in the data structure There has to be a minimal circulator dmin for which the difference c dmin to all other circulators c is non negative Circulator c min circulator Returns the minimal circulator cmin in constant time Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Circulator/Circulator.html", "title": "requirements for circulators", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Circulator/circulator.tex' -->\n<html> <head>  \n<title>Requirements for Circulators</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_main.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n\n    \n<A NAME=\"Index_anchor_1500\"></A> \n\n\n<h3>4.2.2&nbsp;&nbsp;&nbsp;Forward Circulator</h3>\n<P>\n\nA class <I><A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A></I> that satisfies the requirements of a forward\ncirculator with the value type <I>T</I>, supports the following\noperations. See the reference pages for the full set of requirements.\nNote that the stated return values are not required, only a return\nvalue that is convertible to the stated type is required.  As for C++,\nwe recommend the use of 0 instead of <TT>NULL</TT>.\n<P>\n\n<H3>Types</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A NAME=\"Function_value_type\"></A>\n<A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A>::value_type\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    the value type <I>T</I>.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A NAME=\"Function_reference\"></A>\n<A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A>::reference\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    either reference or const reference to <I>T</I>.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A NAME=\"Function_pointer\"></A>\n<A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A>::pointer\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    either pointer or const pointer to <I>T</I>.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A NAME=\"Function_size_type\"></A>\n<A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A>::size_type\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    unsigned integral type that can hold the size\n  of the sequence.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A NAME=\"Function_difference_type\"></A>\n<A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A>::difference_type\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    signed integral type that can hold the\n  distance between two circulators.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A NAME=\"Function_iterator_category\"></A>\n<A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A>::iterator_category\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    circulator category \n    <I><A HREF=\"../Circulator_ref/Class_Circulator_tag.html#Cross_link_anchor_1640\">Forward_circulator_tag</A></I>.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Creation</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A> c;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    a circulator equal to <I>NULL</I> denoting\n                              an empty sequence.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A> c (  d);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    a circulator equal to <MATH><I>d</I></MATH>.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Operations</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A>&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     c =  d<A NAME=\"Function_Circulator__operator=6const_Circulator__d9;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Assignment.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    bool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     c == NULL<A NAME=\"Function_bool_operator==6NULL9_const;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Test for emptiness.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    bool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     c != NULL<A NAME=\"Function_bool_operator!=6NULL9_const;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Test for non-emptiness, i.e.&nbsp; <I>!(c == NULL)</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    bool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     c ==  d<A NAME=\"Function_bool_operator==6const_Circulator__d9_const;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    <MATH><I>c</I></MATH> is equal to <MATH><I>d</I></MATH> if they refer to the same item.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    bool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     c !=  d<A NAME=\"Function_bool_operator!=6const_Circulator__d9_const;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Test for inequality, i.e.&nbsp;<I>!(c == d)</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    reference\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    * c  <A NAME=\"Function_reference_operator*69;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns the value of the circulator.\n If <I><A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A></I> is mutable <I>*c = t</I> is valid.<BR>\n\n<EM>Precondition: </EM><I>c</I> is dereferenceable.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    pointer\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     c  -&gt;<A NAME=\"Function_pointer_operator-969;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns a pointer to the value of the circulator.<BR>\n\n<EM>Precondition: </EM><I>c</I> is dereferenceable.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A>&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    ++ c  <A NAME=\"Function_Circulator__operator++69;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Prefix increment operation.<BR>\n\n<EM>Precondition: </EM><I>c</I> is dereferenceable.<BR>\n\n<EM>Postcondition: </EM><I>c</I> is dereferenceable.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     <A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     c  ++<A NAME=\"Function_const_Circulator__operator++6int9;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Postfix increment operation. The result is the same as that of: \n <I><A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A> tmp = c; ++c; return tmp;</I>&nbsp;.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<A NAME=\"Index_anchor_1501\"></A> \n \n   \n\n\n<h3>4.2.3&nbsp;&nbsp;&nbsp;Bidirectional Circulator</h3>\n<P>\n\nA class <I><A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A></I> that satisfies the requirements of a bidirectional\ncirculator with the value type <I>T</I>, supports the following operations\nin addition to the operations supported by a forward circulator.\n<P>\n\n<H3>Types</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A>::iterator_category\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    circulator category \n    <I><A HREF=\"../Circulator_ref/Class_Circulator_tag.html#Cross_link_anchor_1641\">Bidirectional_circulator_tag</A></I>.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Operations</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A>&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    -- c  <A NAME=\"Function_Circulator__operator--69;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Prefix decrement operation.<BR>\n\n<EM>Precondition: </EM><I>c</I> is dereferenceable.<BR>\n\n<EM>Postcondition: </EM><I>c</I> is dereferenceable.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     <A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     c  --<A NAME=\"Function_const_Circulator__operator--6int9;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Postfix decrement operation. The result is the same as that of \n <I><A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A> tmp = c; --c; return tmp;</I>&nbsp;.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<A NAME=\"Index_anchor_1502\"></A> \n \n   \n\n\n<h3>4.2.4&nbsp;&nbsp;&nbsp;Random Access Circulator</h3>\n\n<A NAME=\"sectionRandomAccessCirculatorRequ\"></A>\n<P>\n\nA class <I><A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A></I> that satisfies the requirements of a random\naccess <A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A> for the value type <I>T</I>, supports the\nfollowing operations in addition to the operations supported by a\nbidirectional <A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A>.  In contrast to random access iterators, \nno comparison operators are available for\nrandom access circulators.\n<P>\n\n<H3>Types</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A>::iterator_category\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    circulator category \n    <I><A HREF=\"../Circulator_ref/Class_Circulator_tag.html#Cross_link_anchor_1642\">Random_access_circulator_tag</A></I>.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Operations</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A>&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n     c += difference_type n<A NAME=\"Function_Circulator__operator+=6difference_type_n9;\"></A>\n\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    The result is the same as if the prefix increment operation \n was applied <MATH><I>n</I></MATH> times, but it is computed in constant time.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n     c + difference_type n<A NAME=\"Function_Circulator_operator+6difference_type_n9;\"></A>\n\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Same as above, but returns a new circulator.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n     difference_type n +  c<A NAME=\"Function_Circulator_operator+6difference_type_n+_Circulator_c9;\"></A>\n\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Same as above.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A>&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n     c -= difference_type n<A NAME=\"Function_Circulator__operator-=6difference_type_n9;\"></A>\n\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    The result is the same as if the prefix decrement operation \n was applied <MATH><I>n</I></MATH> times, but it is computed in constant time.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n     c - difference_type n<A NAME=\"Function_Circulator_operator-6difference_type_n9;\"></A>\n\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Same as above, but returns a new circulator.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    reference\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n     c [ difference_type n]<A NAME=\"Function_reference_operator696difference_type_n9;\"></A>\n\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns <I>*(c + n)</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    difference_type\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     c -  <A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A> d<A NAME=\"Function_difference_type_operator-6const_Circulator__d9_const;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the difference between the two circulators. The value will be\n  in the interval <MATH><I>[ 1-s , s-1 ]</I></MATH> if <MATH><I>s</I></MATH> is the size of the\n  total sequence. The difference for a fixed circulator <I>c</I> (or\n  <MATH><I>d</I></MATH>) with all other circulators <MATH><I>d</I></MATH> (or <I>c</I>) is a consistent\n  ordering of the elements in the data structure. There has to be a\n  minimal circulator <MATH><I>d<SUB></I></MATH><SMALL><SMALL><A HREF=\"../NumberTypeSupport_ref/Function_min.html#Cross_link_anchor_1394\">min</A></SMALL></SMALL><MATH><I></SUB></I></MATH> for which the\n  difference <I>c</I><MATH><I>- d<SUB></I></MATH><SMALL><SMALL><A HREF=\"../NumberTypeSupport_ref/Function_min.html#Cross_link_anchor_1394\">min</A></SMALL></SMALL><MATH><I></SUB></I></MATH> to all other\n  circulators <I>c</I> is non-negative.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Circulator_min_circulator69_const;\"></A>\n<A HREF=\"../Circulator_ref/Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.min_circulator ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns the minimal circulator <MATH><I>c<SUB></I></MATH><SMALL><SMALL><A HREF=\"../NumberTypeSupport_ref/Function_min.html#Cross_link_anchor_1394\">min</A></SMALL></SMALL><MATH><I></SUB></I></MATH>\n  in constant time.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<!Next_reference_link_10_4_2!>\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_4!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 39384.0}