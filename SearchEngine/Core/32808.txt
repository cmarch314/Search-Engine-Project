{"text": "View Javadoc 1 package swirl workspace 2 3 import java io ByteArrayInputStream 4 5 import javax xml parsers DocumentBuilder 6 import javax xml parsers DocumentBuilderFactory 7 8 import org apache commons logging Log 9 import org apache commons logging LogFactory 1 import org mortbay http HashUserRealm 11 import org mortbay http HttpRequest 12 import org mortbay http UserPrincipal 13 import org mortbay http UserRealm 14 import org w3c dom Document 15 import org w3c dom Element 16 import org w3c dom NodeList 17 18 19 Builds a jetty user realm based on the configuration stored in the slide 2 Domain xml file 21 22 author jie ren 23 24 public class SlideUserRealm implements UserRealm 25 26 the proxied realm backing this one 27 private HashUserRealm proxyRealm 28 29 the logger for this class 3 private Log log LogFactory getLog this getClass 31 32 33 Build a new Realm from the slide config 34 35 param name the name of the realm 36 param config where the config is 37 38 public SlideUserRealm final String name final String config 39 4 if log isDebugEnabled 41 42 log debug name config 43 44 45 try 46 47 proxyRealm new HashUserRealm name 48 loadFromSlideXML config 49 5 catch Exception e 51 52 log error Problem loading realm from xml e 53 54 55 56 57 DOCUMENT ME 58 59 return The realm name 6 61 public String getName 62 63 return proxyRealm getName 64 65 66 67 TODO 68 69 param user TODO 7 param role TODO 71 72 public void addUserToRole final String user final String role 73 74 proxyRealm addUserToRole user role 75 76 77 78 DOCUMENT ME 79 8 param username see interface 81 param credentials see interface 82 param request see interface 83 84 return see interface 85 86 public UserPrincipal authenticate final String username 87 final Object credentials 88 final HttpRequest request 89 9 UserPrincipal userPrincipal proxyRealm authenticate username 91 credentials 92 request 93 94 return userPrincipal 95 96 97 98 see interface 99 1 param user see interface 1 1 1 2 public void disassociate final UserPrincipal user 1 3 1 4 1 5 Load up a jetty user realm based on the config from slide s Domain xml 1 6 1 7 param config the configuration file to look at 1 8 1 9 public void loadFromSlideXML final String config 11 111 try 112 113 String sObjectNode objectnode 114 String sClassname classname 115 String sUri uri 116 String sSubjectNode org apache slide structure SubjectNode 117 String sProperty property 118 String usersPrefix users 119 String rolesPrefix roles 12 121 DocumentBuilderFactory factory DocumentBuilderFactory newInstance 122 DocumentBuilder builder factory newDocumentBuilder 123 Document document builder parse config 124 NodeList nList document getElementsByTagName sObjectNode 125 126 DocumentBuilderFactory smallFactory DocumentBuilderFactory 127 newInstance 128 129 smallFactory setValidating false 13 smallFactory setNamespaceAware false 131 132 DocumentBuilder smallBuilder smallFactory newDocumentBuilder 133 134 for int i i nList getLength i 135 136 Element n Element nList item i 137 138 if n hasAttribute sClassname n hasAttribute sUri 139 14 String cn n getAttribute sClassname 141 String urin n getAttribute sUri 142 143 if cn equals sSubjectNode 144 145 if urin startsWith usersPrefix 146 147 String username urin substring usersPrefix length 148 String password n getElementsByTagName sProperty 149 item getLastChild 15 getNodeValue 151 152 inject username and password into HashUserRealm 153 proxyRealm put username password 154 155 156 if urin startsWith rolesPrefix 157 158 String rolename urin substring rolesPrefix length 159 String ss n getElementsByTagName sProperty item 16 getLastChild getNodeValue 161 162 ss dummy ss dummy 163 164 make a valid XML doc 165 Document small smallBuilder parse new ByteArrayInputStream ss 166 getBytes 167 NodeList members small getElementsByTagName D href 168 169 for int j j members getLength j 17 171 String member members item j getLastChild 172 getNodeValue 173 174 member member substring usersPrefix length 175 176 inject username and role into HashUserRealm 177 proxyRealm addUserToRole member rolename 178 179 18 181 182 183 184 catch Exception e 185 186 log error e e 187 188 189 19 191 Empty implementation 192 193 param user the user to logout 194 195 public void logout final UserPrincipal user 196 197 198 see interface 199 2 param user see interface 2 1 2 2 return see interface 2 3 2 4 public UserPrincipal popRole final UserPrincipal user 2 5 2 6 return proxyRealm popRole user 2 7 2 8 2 9 21 see interface 211 212 param user see interface 213 param role see interface 214 215 return see interface 216 217 public UserPrincipal pushRole final UserPrincipal user final String role 218 219 return proxyRealm pushRole user role 22 221 222 223 TODO 224 225 param key TODO 226 param val TODO 227 228 return TODO 229 23 public Object put final Object key final Object val 231 232 return proxyRealm put key val 233 234 235 236 overrides Object toString 237 238 return proxyRealm toString 239 24 public String toString 241 242 return proxyRealm toString 243 244 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.20/xref/swirl/workspace/SlideUserRealm.html", "title": "slideuserrealm xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>SlideUserRealm xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../stylesheet.css\" />\n</head>\n<body>\n<div id=\"overview\"><a href=\"../../../apidocs/swirl/workspace/SlideUserRealm.html\">View Javadoc</a></div><pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <strong>package</strong> <a href=\"../../swirl/workspace/package-summary.html\">swirl.workspace</a>;\n<a name=\"2\" href=\"#2\">2</a>   \n<a name=\"3\" href=\"#3\">3</a>   <strong>import</strong> java.io.ByteArrayInputStream;\n<a name=\"4\" href=\"#4\">4</a>   \n<a name=\"5\" href=\"#5\">5</a>   <strong>import</strong> javax.xml.parsers.DocumentBuilder;\n<a name=\"6\" href=\"#6\">6</a>   <strong>import</strong> javax.xml.parsers.DocumentBuilderFactory;\n<a name=\"7\" href=\"#7\">7</a>   \n<a name=\"8\" href=\"#8\">8</a>   <strong>import</strong> org.apache.commons.logging.Log;\n<a name=\"9\" href=\"#9\">9</a>   <strong>import</strong> org.apache.commons.logging.LogFactory;\n<a name=\"10\" href=\"#10\">10</a>  <strong>import</strong> org.mortbay.http.HashUserRealm;\n<a name=\"11\" href=\"#11\">11</a>  <strong>import</strong> org.mortbay.http.HttpRequest;\n<a name=\"12\" href=\"#12\">12</a>  <strong>import</strong> org.mortbay.http.UserPrincipal;\n<a name=\"13\" href=\"#13\">13</a>  <strong>import</strong> org.mortbay.http.UserRealm;\n<a name=\"14\" href=\"#14\">14</a>  <strong>import</strong> org.w3c.dom.Document;\n<a name=\"15\" href=\"#15\">15</a>  <strong>import</strong> org.w3c.dom.Element;\n<a name=\"16\" href=\"#16\">16</a>  <strong>import</strong> org.w3c.dom.NodeList;\n<a name=\"17\" href=\"#17\">17</a>  \n<a name=\"18\" href=\"#18\">18</a>  <em>/**<em>*</em></em>\n<a name=\"19\" href=\"#19\">19</a>  <em> * Builds a jetty user realm based on the configuration stored in the slide</em>\n<a name=\"20\" href=\"#20\">20</a>  <em> * Domain.xml file</em>\n<a name=\"21\" href=\"#21\">21</a>  <em> *</em>\n<a name=\"22\" href=\"#22\">22</a>  <em> * @author jie ren</em>\n<a name=\"23\" href=\"#23\">23</a>  <em> */</em>\n<a name=\"24\" href=\"#24\">24</a>  <strong>public</strong> <strong>class</strong> <a href=\"../../swirl/workspace/SlideUserRealm.html\">SlideUserRealm</a> implements UserRealm\n<a name=\"25\" href=\"#25\">25</a>  {\n<a name=\"26\" href=\"#26\">26</a>      <em>/**<em>* the proxied realm backing this one */</em></em>\n<a name=\"27\" href=\"#27\">27</a>      <strong>private</strong> HashUserRealm proxyRealm;\n<a name=\"28\" href=\"#28\">28</a>  \n<a name=\"29\" href=\"#29\">29</a>      <em>/**<em>* the logger for this class */</em></em>\n<a name=\"30\" href=\"#30\">30</a>      <strong>private</strong> Log log = LogFactory.getLog(<strong>this</strong>.getClass());\n<a name=\"31\" href=\"#31\">31</a>  \n<a name=\"32\" href=\"#32\">32</a>      <em>/**<em>*</em></em>\n<a name=\"33\" href=\"#33\">33</a>  <em>     * Build a new Realm from the slide config</em>\n<a name=\"34\" href=\"#34\">34</a>  <em>     *</em>\n<a name=\"35\" href=\"#35\">35</a>  <em>     * @param name the name of the realm</em>\n<a name=\"36\" href=\"#36\">36</a>  <em>     * @param config where the config is</em>\n<a name=\"37\" href=\"#37\">37</a>  <em>     */</em>\n<a name=\"38\" href=\"#38\">38</a>      <strong>public</strong> <a href=\"../../swirl/workspace/SlideUserRealm.html\">SlideUserRealm</a>(<strong>final</strong> String name, <strong>final</strong> String config)\n<a name=\"39\" href=\"#39\">39</a>      {\n<a name=\"40\" href=\"#40\">40</a>          <strong>if</strong>(log.isDebugEnabled())\n<a name=\"41\" href=\"#41\">41</a>          {\n<a name=\"42\" href=\"#42\">42</a>              log.debug(<span class=\"string\">\"(\"</span> + name + <span class=\"string\">\", \"</span> + config + <span class=\"string\">\")\"</span>);\n<a name=\"43\" href=\"#43\">43</a>          }\n<a name=\"44\" href=\"#44\">44</a>  \n<a name=\"45\" href=\"#45\">45</a>          <strong>try</strong>\n<a name=\"46\" href=\"#46\">46</a>          {\n<a name=\"47\" href=\"#47\">47</a>              proxyRealm = <strong>new</strong> HashUserRealm(name);\n<a name=\"48\" href=\"#48\">48</a>              loadFromSlideXML(config);\n<a name=\"49\" href=\"#49\">49</a>          }\n<a name=\"50\" href=\"#50\">50</a>          <strong>catch</strong>(Exception e)\n<a name=\"51\" href=\"#51\">51</a>          {\n<a name=\"52\" href=\"#52\">52</a>              log.error(<span class=\"string\">\"Problem loading realm from xml\"</span>, e);\n<a name=\"53\" href=\"#53\">53</a>          }\n<a name=\"54\" href=\"#54\">54</a>      }\n<a name=\"55\" href=\"#55\">55</a>  \n<a name=\"56\" href=\"#56\">56</a>      <em>/**<em>*</em></em>\n<a name=\"57\" href=\"#57\">57</a>  <em>     * DOCUMENT ME!</em>\n<a name=\"58\" href=\"#58\">58</a>  <em>     *</em>\n<a name=\"59\" href=\"#59\">59</a>  <em>     * @return The realm name.</em>\n<a name=\"60\" href=\"#60\">60</a>  <em>     */</em>\n<a name=\"61\" href=\"#61\">61</a>      <strong>public</strong> String getName()\n<a name=\"62\" href=\"#62\">62</a>      {\n<a name=\"63\" href=\"#63\">63</a>          <strong>return</strong> proxyRealm.getName();\n<a name=\"64\" href=\"#64\">64</a>      }\n<a name=\"65\" href=\"#65\">65</a>  \n<a name=\"66\" href=\"#66\">66</a>      <em>/**<em>*</em></em>\n<a name=\"67\" href=\"#67\">67</a>  <em>     * TODO</em>\n<a name=\"68\" href=\"#68\">68</a>  <em>     *</em>\n<a name=\"69\" href=\"#69\">69</a>  <em>     * @param user TODO</em>\n<a name=\"70\" href=\"#70\">70</a>  <em>     * @param role TODO</em>\n<a name=\"71\" href=\"#71\">71</a>  <em>     */</em>\n<a name=\"72\" href=\"#72\">72</a>      <strong>public</strong> <strong>void</strong> addUserToRole(<strong>final</strong> String user, <strong>final</strong> String role)\n<a name=\"73\" href=\"#73\">73</a>      {\n<a name=\"74\" href=\"#74\">74</a>          proxyRealm.addUserToRole(user, role);\n<a name=\"75\" href=\"#75\">75</a>      }\n<a name=\"76\" href=\"#76\">76</a>  \n<a name=\"77\" href=\"#77\">77</a>      <em>/**<em>*</em></em>\n<a name=\"78\" href=\"#78\">78</a>  <em>     * DOCUMENT ME!</em>\n<a name=\"79\" href=\"#79\">79</a>  <em>     *</em>\n<a name=\"80\" href=\"#80\">80</a>  <em>     * @param username see interface</em>\n<a name=\"81\" href=\"#81\">81</a>  <em>     * @param credentials see interface</em>\n<a name=\"82\" href=\"#82\">82</a>  <em>     * @param request see interface</em>\n<a name=\"83\" href=\"#83\">83</a>  <em>     *</em>\n<a name=\"84\" href=\"#84\">84</a>  <em>     * @return see interface</em>\n<a name=\"85\" href=\"#85\">85</a>  <em>     */</em>\n<a name=\"86\" href=\"#86\">86</a>      <strong>public</strong> UserPrincipal authenticate(<strong>final</strong> String username,\n<a name=\"87\" href=\"#87\">87</a>                                        <strong>final</strong> Object credentials,\n<a name=\"88\" href=\"#88\">88</a>                                        <strong>final</strong> HttpRequest request)\n<a name=\"89\" href=\"#89\">89</a>      {\n<a name=\"90\" href=\"#90\">90</a>          UserPrincipal userPrincipal = proxyRealm.authenticate(username,\n<a name=\"91\" href=\"#91\">91</a>                                                                credentials,\n<a name=\"92\" href=\"#92\">92</a>                                                                request);\n<a name=\"93\" href=\"#93\">93</a>  \n<a name=\"94\" href=\"#94\">94</a>          <strong>return</strong> userPrincipal;\n<a name=\"95\" href=\"#95\">95</a>      }\n<a name=\"96\" href=\"#96\">96</a>  \n<a name=\"97\" href=\"#97\">97</a>      <em>/**<em>*</em></em>\n<a name=\"98\" href=\"#98\">98</a>  <em>     * see interface</em>\n<a name=\"99\" href=\"#99\">99</a>  <em>     *</em>\n<a name=\"100\" href=\"#100\">100</a> <em>     * @param user see interface</em>\n<a name=\"101\" href=\"#101\">101</a> <em>     */</em>\n<a name=\"102\" href=\"#102\">102</a>     <strong>public</strong> <strong>void</strong> disassociate(<strong>final</strong> UserPrincipal user){}\n<a name=\"103\" href=\"#103\">103</a> \n<a name=\"104\" href=\"#104\">104</a>     <em>/**<em>*</em></em>\n<a name=\"105\" href=\"#105\">105</a> <em>     * Load up a jetty user realm based on the config from slide's Domain.xml</em>\n<a name=\"106\" href=\"#106\">106</a> <em>     *</em>\n<a name=\"107\" href=\"#107\">107</a> <em>     * @param config the configuration file to look at</em>\n<a name=\"108\" href=\"#108\">108</a> <em>     */</em>\n<a name=\"109\" href=\"#109\">109</a>     <strong>public</strong> <strong>void</strong> loadFromSlideXML(<strong>final</strong> String config)\n<a name=\"110\" href=\"#110\">110</a>     {\n<a name=\"111\" href=\"#111\">111</a>         <strong>try</strong>\n<a name=\"112\" href=\"#112\">112</a>         {\n<a name=\"113\" href=\"#113\">113</a>             String sObjectNode = <span class=\"string\">\"objectnode\"</span>;\n<a name=\"114\" href=\"#114\">114</a>             String sClassname = <span class=\"string\">\"classname\"</span>;\n<a name=\"115\" href=\"#115\">115</a>             String sUri = <span class=\"string\">\"uri\"</span>;\n<a name=\"116\" href=\"#116\">116</a>             String sSubjectNode = <span class=\"string\">\"org.apache.slide.structure.SubjectNode\"</span>;\n<a name=\"117\" href=\"#117\">117</a>             String sProperty = <span class=\"string\">\"property\"</span>;\n<a name=\"118\" href=\"#118\">118</a>             String usersPrefix = <span class=\"string\">\"/users/\"</span>;\n<a name=\"119\" href=\"#119\">119</a>             String rolesPrefix = <span class=\"string\">\"/roles/\"</span>;\n<a name=\"120\" href=\"#120\">120</a> \n<a name=\"121\" href=\"#121\">121</a>             DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n<a name=\"122\" href=\"#122\">122</a>             DocumentBuilder builder = factory.newDocumentBuilder();\n<a name=\"123\" href=\"#123\">123</a>             Document document = builder.parse(config);\n<a name=\"124\" href=\"#124\">124</a>             NodeList nList = document.getElementsByTagName(sObjectNode);\n<a name=\"125\" href=\"#125\">125</a> \n<a name=\"126\" href=\"#126\">126</a>             DocumentBuilderFactory smallFactory = DocumentBuilderFactory\n<a name=\"127\" href=\"#127\">127</a>                                                   .newInstance();\n<a name=\"128\" href=\"#128\">128</a> \n<a name=\"129\" href=\"#129\">129</a>             smallFactory.setValidating(false);\n<a name=\"130\" href=\"#130\">130</a>             smallFactory.setNamespaceAware(false);\n<a name=\"131\" href=\"#131\">131</a> \n<a name=\"132\" href=\"#132\">132</a>             DocumentBuilder smallBuilder = smallFactory.newDocumentBuilder();\n<a name=\"133\" href=\"#133\">133</a> \n<a name=\"134\" href=\"#134\">134</a>             <strong>for</strong>(<strong>int</strong> i = 0; i &lt; nList.getLength(); i++)\n<a name=\"135\" href=\"#135\">135</a>             {\n<a name=\"136\" href=\"#136\">136</a>                 Element n = (Element)nList.item(i);\n<a name=\"137\" href=\"#137\">137</a> \n<a name=\"138\" href=\"#138\">138</a>                 <strong>if</strong>(n.hasAttribute(sClassname) &amp;&amp; n.hasAttribute(sUri))\n<a name=\"139\" href=\"#139\">139</a>                 {\n<a name=\"140\" href=\"#140\">140</a>                     String cn = n.getAttribute(sClassname);\n<a name=\"141\" href=\"#141\">141</a>                     String urin = n.getAttribute(sUri);\n<a name=\"142\" href=\"#142\">142</a> \n<a name=\"143\" href=\"#143\">143</a>                     <strong>if</strong>(cn.equals(sSubjectNode))\n<a name=\"144\" href=\"#144\">144</a>                     {\n<a name=\"145\" href=\"#145\">145</a>                         <strong>if</strong>(urin.startsWith(usersPrefix))\n<a name=\"146\" href=\"#146\">146</a>                         {\n<a name=\"147\" href=\"#147\">147</a>                             String username = urin.substring(usersPrefix.length());\n<a name=\"148\" href=\"#148\">148</a>                             String password = n.getElementsByTagName(sProperty)\n<a name=\"149\" href=\"#149\">149</a>                                                .item(0).getLastChild()\n<a name=\"150\" href=\"#150\">150</a>                                                .getNodeValue();\n<a name=\"151\" href=\"#151\">151</a> \n<a name=\"152\" href=\"#152\">152</a>                             <em class=\"comment\">// inject username and password into HashUserRealm</em>\n<a name=\"153\" href=\"#153\">153</a>                             proxyRealm.put(username, password);\n<a name=\"154\" href=\"#154\">154</a>                         }\n<a name=\"155\" href=\"#155\">155</a> \n<a name=\"156\" href=\"#156\">156</a>                         <strong>if</strong>(urin.startsWith(rolesPrefix))\n<a name=\"157\" href=\"#157\">157</a>                         {\n<a name=\"158\" href=\"#158\">158</a>                             String rolename = urin.substring(rolesPrefix.length());\n<a name=\"159\" href=\"#159\">159</a>                             String ss = n.getElementsByTagName(sProperty).item(0)\n<a name=\"160\" href=\"#160\">160</a>                                          .getLastChild().getNodeValue();\n<a name=\"161\" href=\"#161\">161</a> \n<a name=\"162\" href=\"#162\">162</a>                             ss = <span class=\"string\">\"&lt;dummy>\"</span> + ss + <span class=\"string\">\"&lt;/dummy>\"</span>;\n<a name=\"163\" href=\"#163\">163</a> \n<a name=\"164\" href=\"#164\">164</a>                             <em class=\"comment\">// make a valid XML doc</em>\n<a name=\"165\" href=\"#165\">165</a>                             Document small = smallBuilder.parse(<strong>new</strong> ByteArrayInputStream(ss\n<a name=\"166\" href=\"#166\">166</a>                                                                                          .getBytes()));\n<a name=\"167\" href=\"#167\">167</a>                             NodeList members = small.getElementsByTagName(<span class=\"string\">\"D:href\"</span>);\n<a name=\"168\" href=\"#168\">168</a> \n<a name=\"169\" href=\"#169\">169</a>                             <strong>for</strong>(<strong>int</strong> j = 0; j &lt; members.getLength(); j++)\n<a name=\"170\" href=\"#170\">170</a>                             {\n<a name=\"171\" href=\"#171\">171</a>                                 String member = members.item(j).getLastChild()\n<a name=\"172\" href=\"#172\">172</a>                                                        .getNodeValue();\n<a name=\"173\" href=\"#173\">173</a> \n<a name=\"174\" href=\"#174\">174</a>                                 member = member.substring(usersPrefix.length());\n<a name=\"175\" href=\"#175\">175</a> \n<a name=\"176\" href=\"#176\">176</a>                                 <em class=\"comment\">// inject username and role into HashUserRealm</em>\n<a name=\"177\" href=\"#177\">177</a>                                 proxyRealm.addUserToRole(member, rolename);\n<a name=\"178\" href=\"#178\">178</a>                             }\n<a name=\"179\" href=\"#179\">179</a>                         }\n<a name=\"180\" href=\"#180\">180</a>                     }\n<a name=\"181\" href=\"#181\">181</a>                 }\n<a name=\"182\" href=\"#182\">182</a>             }\n<a name=\"183\" href=\"#183\">183</a>         }\n<a name=\"184\" href=\"#184\">184</a>         <strong>catch</strong>(Exception e)\n<a name=\"185\" href=\"#185\">185</a>         {\n<a name=\"186\" href=\"#186\">186</a>             log.error(e, e);\n<a name=\"187\" href=\"#187\">187</a>         }\n<a name=\"188\" href=\"#188\">188</a>     }\n<a name=\"189\" href=\"#189\">189</a> \n<a name=\"190\" href=\"#190\">190</a>     <em>/**<em>*</em></em>\n<a name=\"191\" href=\"#191\">191</a> <em>     * Empty implementation</em>\n<a name=\"192\" href=\"#192\">192</a> <em>     *</em>\n<a name=\"193\" href=\"#193\">193</a> <em>     * @param user the user to logout</em>\n<a name=\"194\" href=\"#194\">194</a> <em>     */</em>\n<a name=\"195\" href=\"#195\">195</a>     <strong>public</strong> <strong>void</strong> logout(<strong>final</strong> UserPrincipal user){}\n<a name=\"196\" href=\"#196\">196</a> \n<a name=\"197\" href=\"#197\">197</a>     <em>/**<em>*</em></em>\n<a name=\"198\" href=\"#198\">198</a> <em>     * see interface</em>\n<a name=\"199\" href=\"#199\">199</a> <em>     *</em>\n<a name=\"200\" href=\"#200\">200</a> <em>     * @param user see interface</em>\n<a name=\"201\" href=\"#201\">201</a> <em>     *</em>\n<a name=\"202\" href=\"#202\">202</a> <em>     * @return see interface</em>\n<a name=\"203\" href=\"#203\">203</a> <em>     */</em>\n<a name=\"204\" href=\"#204\">204</a>     <strong>public</strong> UserPrincipal popRole(<strong>final</strong> UserPrincipal user)\n<a name=\"205\" href=\"#205\">205</a>     {\n<a name=\"206\" href=\"#206\">206</a>         <strong>return</strong> proxyRealm.popRole(user);\n<a name=\"207\" href=\"#207\">207</a>     }\n<a name=\"208\" href=\"#208\">208</a> \n<a name=\"209\" href=\"#209\">209</a>     <em>/**<em>*</em></em>\n<a name=\"210\" href=\"#210\">210</a> <em>     * see interface</em>\n<a name=\"211\" href=\"#211\">211</a> <em>     *</em>\n<a name=\"212\" href=\"#212\">212</a> <em>     * @param user see interface</em>\n<a name=\"213\" href=\"#213\">213</a> <em>     * @param role see interface</em>\n<a name=\"214\" href=\"#214\">214</a> <em>     *</em>\n<a name=\"215\" href=\"#215\">215</a> <em>     * @return see interface</em>\n<a name=\"216\" href=\"#216\">216</a> <em>     */</em>\n<a name=\"217\" href=\"#217\">217</a>     <strong>public</strong> UserPrincipal pushRole(<strong>final</strong> UserPrincipal user, <strong>final</strong> String role)\n<a name=\"218\" href=\"#218\">218</a>     {\n<a name=\"219\" href=\"#219\">219</a>         <strong>return</strong> proxyRealm.pushRole(user, role);\n<a name=\"220\" href=\"#220\">220</a>     }\n<a name=\"221\" href=\"#221\">221</a> \n<a name=\"222\" href=\"#222\">222</a>     <em>/**<em>*</em></em>\n<a name=\"223\" href=\"#223\">223</a> <em>     * TODO</em>\n<a name=\"224\" href=\"#224\">224</a> <em>     *</em>\n<a name=\"225\" href=\"#225\">225</a> <em>     * @param key TODO</em>\n<a name=\"226\" href=\"#226\">226</a> <em>     * @param val TODO</em>\n<a name=\"227\" href=\"#227\">227</a> <em>     *</em>\n<a name=\"228\" href=\"#228\">228</a> <em>     * @return TODO</em>\n<a name=\"229\" href=\"#229\">229</a> <em>     */</em>\n<a name=\"230\" href=\"#230\">230</a>     <strong>public</strong> Object put(<strong>final</strong> Object key, <strong>final</strong> Object val)\n<a name=\"231\" href=\"#231\">231</a>     {\n<a name=\"232\" href=\"#232\">232</a>         <strong>return</strong> proxyRealm.put(key, val);\n<a name=\"233\" href=\"#233\">233</a>     }\n<a name=\"234\" href=\"#234\">234</a> \n<a name=\"235\" href=\"#235\">235</a>     <em>/**<em>*</em></em>\n<a name=\"236\" href=\"#236\">236</a> <em>     * overrides Object.toString();</em>\n<a name=\"237\" href=\"#237\">237</a> <em>     *</em>\n<a name=\"238\" href=\"#238\">238</a> <em>     * @return proxyRealm.toString();</em>\n<a name=\"239\" href=\"#239\">239</a> <em>     */</em>\n<a name=\"240\" href=\"#240\">240</a>     <strong>public</strong> String toString()\n<a name=\"241\" href=\"#241\">241</a>     {\n<a name=\"242\" href=\"#242\">242</a>         <strong>return</strong> proxyRealm.toString();\n<a name=\"243\" href=\"#243\">243</a>     }\n<a name=\"244\" href=\"#244\">244</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 32808.0}