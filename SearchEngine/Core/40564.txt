{"text": " Home Trees Indices Help Package CHEM Package ML Module FeatureRegression Class FeatureRegression hide private frames no frames Class FeatureRegression Given a list of feature dictionaries sparse feature vectors representing different objects and a matching list of target values to predict assign values to each feature encountered to best predict the target values Ultimately this essentially gets laid out as a system of linear equations where the value of the feature vectors represents the coefficients of the equations and the target values are the equation solutions The problem then is to just find the set of unknown variable values which solves the system with the minimal error Instance Methods hide private init self Default constructor main self argv For use as command line executable method regressionByFilenames self featureDictFilename featureValueFilename targetValueFilename Simple wrapper around regression method just to open up files writeFeatureValueDict self featureValueDict featureValueFile Write out the contents of the featureValueDict to the featureValueFile predictionByFilenames self featureDictFilename featureValueFilename targetValueFilename Simple wrapper around prediction method just to open up files readFeatureValueDict self featureValueFile Read the contents of the feature value file probably generated by this classes regression method back into a dictionary regression self featureDictList targetValueList Primary regression method Given a list over all of the input object feature dictionaries or just using a FeatureDictReaderFactory and a list of the targetValues find the optimal solution for the value of each feature contributing to the total target values prediction self featureDictList featureValueDict Primary prediction method reciprocal function of regression Given a list over all of the input object feature dictionaries and a dictionary mapping features to their value generate predicted values for the total targetValue of each input feature dictionary predictionSingle self featureDict featureValueDict Generate a single prediction by going over all of the features in the feature dictionary and looking up values to sum over in the featureValueDict Method Details hide private writeFeatureValueDict self featureValueDict featureValueFile Write out the contents of the featureValueDict to the featureValueFile Pretty simplistic now assume the feature is a string with no spaces and that value s natural string conversion is acceptable regression self featureDictList targetValueList Primary regression method Given a list over all of the input object feature dictionaries or just using a FeatureDictReaderFactory and a list of the targetValues find the optimal solution for the value of each feature contributing to the total target values Return the solutions as a dictionary mapping features to their respective values Home Trees Indices Help Generated by Epydoc 3 beta1 on Thu Nov 8 17 49 31 2 7 http epydoc sourceforge net", "_id": "http://www.ics.uci.edu/~dock/CHEM_docs/CHEM.ML.FeatureRegression.FeatureRegression-class.html", "title": "chem.ml.featureregression.featureregression", "html": "<?xml version=\"1.0\" encoding=\"ascii\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n          \"DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n  <title>CHEM.ML.FeatureRegression.FeatureRegression</title>\n  <link rel=\"stylesheet\" href=\"epydoc.css\" type=\"text/css\" />\n  <script type=\"text/javascript\" src=\"epydoc.js\"></script>\n</head>\n\n<body bgcolor=\"white\" text=\"black\" link=\"blue\" vlink=\"#204080\"\n      alink=\"#204080\">\n<!-- ==================== NAVIGATION BAR ==================== -->\n<table class=\"navbar\" border=\"0\" width=\"100%\" cellpadding=\"0\"\n       bgcolor=\"#a0c0ff\" cellspacing=\"0\">\n  <tr valign=\"middle\">\n  <!-- Home link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"CHEM-module.html\">Home</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Tree link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"module-tree.html\">Trees</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Index link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"identifier-index.html\">Indices</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Help link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"help.html\">Help</a>&nbsp;&nbsp;&nbsp;</th>\n\n      <th class=\"navbar\" width=\"100%\"></th>\n  </tr>\n</table>\n<table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n  <tr valign=\"top\">\n    <td width=\"100%\">\n      <span class=\"breadcrumbs\">\n        <a href=\"CHEM-module.html\">Package&nbsp;CHEM</a> ::\n        <a href=\"CHEM.ML-module.html\">Package&nbsp;ML</a> ::\n        <a href=\"CHEM.ML.FeatureRegression-module.html\">Module&nbsp;FeatureRegression</a> ::\n        Class&nbsp;FeatureRegression\n      </span>\n    </td>\n    <td>\n      <table cellpadding=\"0\" cellspacing=\"0\">\n        <!-- hide/show private -->\n        <tr><td align=\"right\"><span class=\"options\">[<a href=\"javascript:void(0);\" class=\"privatelink\"\n    onclick=\"toggle_private();\">hide&nbsp;private</a>]</span></td></tr>\n        <tr><td align=\"right\"><span class=\"options\"\n            >[<a href=\"frames.html\" target=\"_top\">frames</a\n            >]&nbsp;|&nbsp;<a href=\"CHEM.ML.FeatureRegression.FeatureRegression-class.html\"\n            target=\"_top\">no&nbsp;frames</a>]</span></td></tr>\n      </table>\n    </td>\n  </tr>\n</table>\n<!-- ==================== CLASS DESCRIPTION ==================== -->\n<h1 class=\"epydoc\">Class FeatureRegression</h1><br /><br />\n<p>Given a list of feature dictionaries (sparse feature vectors) \n  representing different objects and a matching list of target values to \n  predict, assign values to each feature encountered to best predict the \n  target values.</p>\n  Ultimately, this essentially gets laid out as a system of linear \n  equations where the value of the feature vectors represents the \n  coefficients of the equations and the target values are the equation \n  solutions.  The problem then is to just find the set of unknown variable \n  values which solves the system with the minimal error.<br /><br />\n\n<!-- ==================== INSTANCE METHODS ==================== -->\n<a name=\"section-InstanceMethods\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Instance Methods</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-InstanceMethods\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"__init__\"></a><span class=\"summary-sig-name\">__init__</span>(<span class=\"summary-sig-arg\">self</span>)</span><br />\n      Default constructor.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"main\"></a><span class=\"summary-sig-name\">main</span>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">argv</span>)</span><br />\n      For use as command-line executable method</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"regressionByFilenames\"></a><span class=\"summary-sig-name\">regressionByFilenames</span>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">featureDictFilename</span>,\n        <span class=\"summary-sig-arg\">featureValueFilename</span>,\n        <span class=\"summary-sig-arg\">targetValueFilename</span>)</span><br />\n      Simple wrapper around regression method, just to open up files</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.ML.FeatureRegression.FeatureRegression-class.html#writeFeatureValueDict\" class=\"summary-sig-name\">writeFeatureValueDict</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">featureValueDict</span>,\n        <span class=\"summary-sig-arg\">featureValueFile</span>)</span><br />\n      Write out the contents of the featureValueDict to the \n      featureValueFile.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"predictionByFilenames\"></a><span class=\"summary-sig-name\">predictionByFilenames</span>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">featureDictFilename</span>,\n        <span class=\"summary-sig-arg\">featureValueFilename</span>,\n        <span class=\"summary-sig-arg\">targetValueFilename</span>)</span><br />\n      Simple wrapper around prediction method, just to open up files</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"readFeatureValueDict\"></a><span class=\"summary-sig-name\">readFeatureValueDict</span>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">featureValueFile</span>)</span><br />\n      Read the contents of the feature value file, probably generated by\n      this classes regression method, back into a dictionary.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.ML.FeatureRegression.FeatureRegression-class.html#regression\" class=\"summary-sig-name\">regression</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">featureDictList</span>,\n        <span class=\"summary-sig-arg\">targetValueList</span>)</span><br />\n      Primary regression method: Given a list over all of the input \n      object feature dictionaries (or just using a \n      FeatureDictReaderFactory) and a list of the targetValues, find the \n      optimal solution for the &quot;value&quot; of each feature \n      contributing to the total target values.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"prediction\"></a><span class=\"summary-sig-name\">prediction</span>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">featureDictList</span>,\n        <span class=\"summary-sig-arg\">featureValueDict</span>)</span><br />\n      Primary prediction method (reciprocal function of regression): \n      Given a list over all of the input object feature dictionaries and a \n      dictionary mapping features to their &quot;value,&quot; generate \n      predicted values for the &quot;total&quot; targetValue of each input \n      feature dictionary.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"predictionSingle\"></a><span class=\"summary-sig-name\">predictionSingle</span>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">featureDict</span>,\n        <span class=\"summary-sig-arg\">featureValueDict</span>)</span><br />\n      Generate a single prediction by going over all of the features in \n      the feature dictionary and looking up values to sum over in the \n      featureValueDict.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n</table>\n<!-- ==================== METHOD DETAILS ==================== -->\n<a name=\"section-MethodDetails\"></a>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Method Details</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-MethodDetails\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n</table>\n<a name=\"writeFeatureValueDict\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">writeFeatureValueDict</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">featureValueDict</span>,\n        <span class=\"sig-arg\">featureValueFile</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Write out the contents of the featureValueDict to the \n  featureValueFile. Pretty simplistic now, assume the feature is a string \n  with no spaces, and that value's natural string conversion is \n  acceptable.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"regression\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">regression</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">featureDictList</span>,\n        <span class=\"sig-arg\">targetValueList</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <p>Primary regression method: Given a list over all of the input object \n  feature dictionaries (or just using a FeatureDictReaderFactory) and a \n  list of the targetValues, find the optimal solution for the \n  &quot;value&quot; of each feature contributing to the total target \n  values.</p>\n  Return the solutions as a dictionary mapping features to their \n  respective values;\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<br />\n<!-- ==================== NAVIGATION BAR ==================== -->\n<table class=\"navbar\" border=\"0\" width=\"100%\" cellpadding=\"0\"\n       bgcolor=\"#a0c0ff\" cellspacing=\"0\">\n  <tr valign=\"middle\">\n  <!-- Home link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"CHEM-module.html\">Home</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Tree link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"module-tree.html\">Trees</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Index link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"identifier-index.html\">Indices</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Help link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"help.html\">Help</a>&nbsp;&nbsp;&nbsp;</th>\n\n      <th class=\"navbar\" width=\"100%\"></th>\n  </tr>\n</table>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%%\">\n  <tr>\n    <td align=\"left\" class=\"footer\">\n    Generated by Epydoc 3.0beta1 on Thu Nov  8 17:49:31 2007\n    </td>\n    <td align=\"right\" class=\"footer\">\n      <a href=\"http://epydoc.sourceforge.net\">http://epydoc.sourceforge.net</a>\n    </td>\n  </tr>\n</table>\n\n<script type=\"text/javascript\">\n  <!--\n  // Private objects are initially displayed (because if\n  // javascript is turned off then we want them to be\n  // visible); but by default, we want to hide them.  So hide\n  // them unless we have a cookie that says to show them.\n  checkCookie()\n  // -->\n</script>\n  \n</body>\n</html>\n", "id": 40564.0}