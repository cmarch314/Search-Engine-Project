{"text": "View Javadoc 1 2 Created on Aug 25 2 4 3 4 package swirl workspace common 5 6 import java io IOException 7 import java util Properties 8 9 import org apache commons logging Log 1 import org apache commons logging LogFactory 11 12 import swirl workspace PeerManager 13 14 15 DOCUMENT ME 16 17 author bpillet 18 19 public abstract class BaseFileLauncher implements FileLauncher 2 21 the logger for this class 22 private Log log LogFactory getLog this getClass 23 24 the mapping from extensions to mimetypes 25 private Properties extToMime null 26 27 the mapping from mime types to commandlines 28 private Properties mimeToCmd null 29 3 31 Get the commandline for a specific mime type 32 33 param mime the mime type to get the command for 34 35 return the command 36 37 public String getCommand final String mime 38 39 if mimeToCmd null 4 41 mimeToCmd getMimeToCmd 42 43 44 if log isDebugEnabled 45 46 if log isDebugEnabled 47 48 log debug trying to get cmd for mime mime 49 5 51 52 String ret mimeToCmd getProperty mime 53 54 if ret null 55 56 return ret 57 58 else 59 6 return mimeToCmd getProperty default 61 62 63 64 65 Get the extension for a file name 66 67 param file the name of the file to extract from 68 69 return the extension of the file 7 71 public String getExtension final String file 72 73 if log isDebugEnabled 74 75 log debug file file 76 77 78 String temp file 79 8 first trim the path off 81 if temp lastIndexOf 1 82 83 temp temp substring temp lastIndexOf 84 85 86 if temp lastIndexOf 1 87 88 temp temp substring temp lastIndexOf 89 9 91 if log isDebugEnabled 92 93 log debug file without path temp 94 95 96 then trim any at the beginning 97 if temp startsWith 98 99 temp temp substring 1 1 1 1 1 2 if log isDebugEnabled 1 3 1 4 log debug file without leading dot temp 1 5 1 6 1 7 then get the last and stuff 1 8 if temp indexOf 1 1 9 11 return temp substring temp lastIndexOf 111 112 else 113 114 return 115 116 117 118 119 Get the mime type for a specific extension 12 121 param extension the extension to map from 122 123 return the mime type of the file 124 125 public String getMime final String extension 126 127 if extToMime null 128 129 extToMime getExtToMime 13 131 132 return extToMime getProperty extension 133 134 135 136 Launch a file without a known mime type 137 138 param url the file to launch 139 14 return the process 141 142 throws IOException if there s a problem with the console 143 144 public Process launch final String url throws IOException 145 146 return launch url getMime getExtension url 147 148 149 15 Launch a file with a known mime type 151 152 param url the file to launch 153 param mime the mimetype of the file to launch 154 155 return the process 156 157 throws IOException if there s a problem with the console 158 159 public Process launch final String url final String mime 16 throws IOException 161 162 if log isDebugEnabled 163 164 log debug launch url mime 165 166 167 String cmd getCommand mime 168 169 if log isDebugEnabled 17 171 log debug cmd cmd url url 172 173 174 String temp url 175 176 first trim the path off 177 if temp lastIndexOf 1 178 179 temp temp substring temp lastIndexOf 18 181 182 if temp lastIndexOf 1 183 184 temp temp substring temp lastIndexOf 185 186 187 temp http PeerManager getLocalUserID swirl temp 188 189 if log isDebugEnabled 19 191 log debug final url temp 192 193 194 cmd cmd replaceAll 1 temp 195 cmd cmd replaceAll 1 url 196 test 197 198 if log isDebugEnabled 199 2 log debug new cmd cmd url url 2 1 2 2 2 3 return Runtime getRuntime exec cmd 2 4 2 5 2 6 2 7 get the Properties configuration that maps extensions to mime types 2 8 2 9 return the mapping 21 211 protected abstract Properties getExtToMime 212 213 214 get the Properties configuration that maps mime types to commandlines 215 216 return the mapping 217 218 protected abstract Properties getMimeToCmd 219 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.20/xref/swirl/workspace/common/BaseFileLauncher.html", "title": "basefilelauncher xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>BaseFileLauncher xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../../stylesheet.css\" />\n</head>\n<body>\n<div id=\"overview\"><a href=\"../../../../apidocs/swirl/workspace/common/BaseFileLauncher.html\">View Javadoc</a></div><pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <em class=\"comment\">/*</em>\n<a name=\"2\" href=\"#2\">2</a>   <em class=\"comment\"> * Created on Aug 25, 2004</em>\n<a name=\"3\" href=\"#3\">3</a>   <em class=\"comment\"> */</em>\n<a name=\"4\" href=\"#4\">4</a>   <strong>package</strong> <a href=\"../../../swirl/workspace/common/package-summary.html\">swirl.workspace.common</a>;\n<a name=\"5\" href=\"#5\">5</a>   \n<a name=\"6\" href=\"#6\">6</a>   <strong>import</strong> java.io.IOException;\n<a name=\"7\" href=\"#7\">7</a>   <strong>import</strong> java.util.Properties;\n<a name=\"8\" href=\"#8\">8</a>   \n<a name=\"9\" href=\"#9\">9</a>   <strong>import</strong> org.apache.commons.logging.Log;\n<a name=\"10\" href=\"#10\">10</a>  <strong>import</strong> org.apache.commons.logging.LogFactory;\n<a name=\"11\" href=\"#11\">11</a>  \n<a name=\"12\" href=\"#12\">12</a>  <strong>import</strong> swirl.workspace.PeerManager;\n<a name=\"13\" href=\"#13\">13</a>  \n<a name=\"14\" href=\"#14\">14</a>  <em>/**<em>*</em></em>\n<a name=\"15\" href=\"#15\">15</a>  <em> * DOCUMENT ME!</em>\n<a name=\"16\" href=\"#16\">16</a>  <em> *</em>\n<a name=\"17\" href=\"#17\">17</a>  <em> * @author bpillet</em>\n<a name=\"18\" href=\"#18\">18</a>  <em> */</em>\n<a name=\"19\" href=\"#19\">19</a>  <strong>public</strong> <strong>abstract</strong> <strong>class</strong> <a href=\"../../../swirl/workspace/common/BaseFileLauncher.html\">BaseFileLauncher</a> implements <a href=\"../../../swirl/workspace/common/FileLauncher.html\">FileLauncher</a>\n<a name=\"20\" href=\"#20\">20</a>  {\n<a name=\"21\" href=\"#21\">21</a>      <em>/**<em>* the logger for this class */</em></em>\n<a name=\"22\" href=\"#22\">22</a>      <strong>private</strong> Log log = LogFactory.getLog(<strong>this</strong>.getClass());\n<a name=\"23\" href=\"#23\">23</a>  \n<a name=\"24\" href=\"#24\">24</a>      <em>/**<em>* the mapping from extensions to mimetypes */</em></em>\n<a name=\"25\" href=\"#25\">25</a>      <strong>private</strong> Properties extToMime = <strong>null</strong>;\n<a name=\"26\" href=\"#26\">26</a>  \n<a name=\"27\" href=\"#27\">27</a>      <em>/**<em>* the mapping from mime types to commandlines */</em></em>\n<a name=\"28\" href=\"#28\">28</a>      <strong>private</strong> Properties mimeToCmd = <strong>null</strong>;\n<a name=\"29\" href=\"#29\">29</a>      \n<a name=\"30\" href=\"#30\">30</a>      <em>/**<em>*</em></em>\n<a name=\"31\" href=\"#31\">31</a>  <em>     * Get the commandline for a specific mime type</em>\n<a name=\"32\" href=\"#32\">32</a>  <em>     *</em>\n<a name=\"33\" href=\"#33\">33</a>  <em>     * @param mime the mime type to get the command for</em>\n<a name=\"34\" href=\"#34\">34</a>  <em>     *</em>\n<a name=\"35\" href=\"#35\">35</a>  <em>     * @return the command</em>\n<a name=\"36\" href=\"#36\">36</a>  <em>     */</em>\n<a name=\"37\" href=\"#37\">37</a>      <strong>public</strong> String getCommand(<strong>final</strong> String mime)\n<a name=\"38\" href=\"#38\">38</a>      {\n<a name=\"39\" href=\"#39\">39</a>          <strong>if</strong>(mimeToCmd == <strong>null</strong>)\n<a name=\"40\" href=\"#40\">40</a>          {\n<a name=\"41\" href=\"#41\">41</a>              mimeToCmd = getMimeToCmd();\n<a name=\"42\" href=\"#42\">42</a>          }\n<a name=\"43\" href=\"#43\">43</a>  \n<a name=\"44\" href=\"#44\">44</a>          <strong>if</strong>(log.isDebugEnabled())\n<a name=\"45\" href=\"#45\">45</a>          {\n<a name=\"46\" href=\"#46\">46</a>          \t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"47\" href=\"#47\">47</a>  \t        {\n<a name=\"48\" href=\"#48\">48</a>          \t\tlog.debug(<span class=\"string\">\"trying to get cmd for mime: \"</span> + mime);\n<a name=\"49\" href=\"#49\">49</a>  \t        }\n<a name=\"50\" href=\"#50\">50</a>          }\n<a name=\"51\" href=\"#51\">51</a>  \n<a name=\"52\" href=\"#52\">52</a>          String ret = mimeToCmd.getProperty(mime);\n<a name=\"53\" href=\"#53\">53</a>  \n<a name=\"54\" href=\"#54\">54</a>          <strong>if</strong>(ret != <strong>null</strong>)\n<a name=\"55\" href=\"#55\">55</a>          {\n<a name=\"56\" href=\"#56\">56</a>              <strong>return</strong> ret;\n<a name=\"57\" href=\"#57\">57</a>          }\n<a name=\"58\" href=\"#58\">58</a>          <strong>else</strong>\n<a name=\"59\" href=\"#59\">59</a>          {\n<a name=\"60\" href=\"#60\">60</a>              <strong>return</strong> mimeToCmd.getProperty(<span class=\"string\">\"default\"</span>);\n<a name=\"61\" href=\"#61\">61</a>          }\n<a name=\"62\" href=\"#62\">62</a>      }\n<a name=\"63\" href=\"#63\">63</a>  \n<a name=\"64\" href=\"#64\">64</a>      <em>/**<em>*</em></em>\n<a name=\"65\" href=\"#65\">65</a>  <em>     * Get the extension for a file name</em>\n<a name=\"66\" href=\"#66\">66</a>  <em>     *</em>\n<a name=\"67\" href=\"#67\">67</a>  <em>     * @param file the name of the file to extract from</em>\n<a name=\"68\" href=\"#68\">68</a>  <em>     *</em>\n<a name=\"69\" href=\"#69\">69</a>  <em>     * @return the extension of the file</em>\n<a name=\"70\" href=\"#70\">70</a>  <em>     */</em>\n<a name=\"71\" href=\"#71\">71</a>      <strong>public</strong> String getExtension(<strong>final</strong> String file)\n<a name=\"72\" href=\"#72\">72</a>      {\n<a name=\"73\" href=\"#73\">73</a>          <strong>if</strong>(log.isDebugEnabled())\n<a name=\"74\" href=\"#74\">74</a>          {\n<a name=\"75\" href=\"#75\">75</a>              log.debug(<span class=\"string\">\"file: \"</span> + file);\n<a name=\"76\" href=\"#76\">76</a>          }\n<a name=\"77\" href=\"#77\">77</a>  \n<a name=\"78\" href=\"#78\">78</a>          String temp = file;\n<a name=\"79\" href=\"#79\">79</a>  \n<a name=\"80\" href=\"#80\">80</a>          <em class=\"comment\">//first trim the path off</em>\n<a name=\"81\" href=\"#81\">81</a>          <strong>if</strong>(temp.lastIndexOf('&#47;&#47;') != -1)\n<a name=\"82\" href=\"#82\">82</a>          {\n<a name=\"83\" href=\"#83\">83</a>              temp = temp.substring(temp.lastIndexOf('&#47;&#47;'));\n<a name=\"84\" href=\"#84\">84</a>          }\n<a name=\"85\" href=\"#85\">85</a>  \n<a name=\"86\" href=\"#86\">86</a>          <strong>if</strong>(temp.lastIndexOf('/') != -1)\n<a name=\"87\" href=\"#87\">87</a>          {\n<a name=\"88\" href=\"#88\">88</a>              temp = temp.substring(temp.lastIndexOf('/'));\n<a name=\"89\" href=\"#89\">89</a>          }\n<a name=\"90\" href=\"#90\">90</a>  \n<a name=\"91\" href=\"#91\">91</a>          <strong>if</strong>(log.isDebugEnabled())\n<a name=\"92\" href=\"#92\">92</a>          {\n<a name=\"93\" href=\"#93\">93</a>              log.debug(<span class=\"string\">\"file without path: \"</span> + temp);\n<a name=\"94\" href=\"#94\">94</a>          }\n<a name=\"95\" href=\"#95\">95</a>  \n<a name=\"96\" href=\"#96\">96</a>          <em class=\"comment\">// then trim any . at the beginning</em>\n<a name=\"97\" href=\"#97\">97</a>          <strong>if</strong>(temp.startsWith(<span class=\"string\">\".\"</span>))\n<a name=\"98\" href=\"#98\">98</a>          {\n<a name=\"99\" href=\"#99\">99</a>              temp = temp.substring(1);\n<a name=\"100\" href=\"#100\">100</a>         }\n<a name=\"101\" href=\"#101\">101</a> \n<a name=\"102\" href=\"#102\">102</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"103\" href=\"#103\">103</a>         {\n<a name=\"104\" href=\"#104\">104</a>             log.debug(<span class=\"string\">\"file without leading dot: \"</span> + temp);\n<a name=\"105\" href=\"#105\">105</a>         }\n<a name=\"106\" href=\"#106\">106</a> \n<a name=\"107\" href=\"#107\">107</a>         <em class=\"comment\">// then get the last . and stuff</em>\n<a name=\"108\" href=\"#108\">108</a>         <strong>if</strong>(temp.indexOf('.') != -1)\n<a name=\"109\" href=\"#109\">109</a>         {\n<a name=\"110\" href=\"#110\">110</a>             <strong>return</strong> temp.substring(temp.lastIndexOf('.'));\n<a name=\"111\" href=\"#111\">111</a>         }\n<a name=\"112\" href=\"#112\">112</a>         <strong>else</strong>\n<a name=\"113\" href=\"#113\">113</a>         {\n<a name=\"114\" href=\"#114\">114</a>             <strong>return</strong> <span class=\"string\">\"\"</span>;\n<a name=\"115\" href=\"#115\">115</a>         }\n<a name=\"116\" href=\"#116\">116</a>     }\n<a name=\"117\" href=\"#117\">117</a> \n<a name=\"118\" href=\"#118\">118</a>     <em>/**<em>*</em></em>\n<a name=\"119\" href=\"#119\">119</a> <em>     * Get the mime type for a specific extension</em>\n<a name=\"120\" href=\"#120\">120</a> <em>     *</em>\n<a name=\"121\" href=\"#121\">121</a> <em>     * @param extension the extension to map from</em>\n<a name=\"122\" href=\"#122\">122</a> <em>     *</em>\n<a name=\"123\" href=\"#123\">123</a> <em>     * @return the mime type of the file</em>\n<a name=\"124\" href=\"#124\">124</a> <em>     */</em>\n<a name=\"125\" href=\"#125\">125</a>     <strong>public</strong> String getMime(<strong>final</strong> String extension)\n<a name=\"126\" href=\"#126\">126</a>     {\n<a name=\"127\" href=\"#127\">127</a>         <strong>if</strong>(extToMime == <strong>null</strong>)\n<a name=\"128\" href=\"#128\">128</a>         {\n<a name=\"129\" href=\"#129\">129</a>             extToMime = getExtToMime();\n<a name=\"130\" href=\"#130\">130</a>         }\n<a name=\"131\" href=\"#131\">131</a> \n<a name=\"132\" href=\"#132\">132</a>         <strong>return</strong> extToMime.getProperty(extension, <span class=\"string\">\"\"</span>);\n<a name=\"133\" href=\"#133\">133</a>     }\n<a name=\"134\" href=\"#134\">134</a> \n<a name=\"135\" href=\"#135\">135</a>     <em>/**<em>*</em></em>\n<a name=\"136\" href=\"#136\">136</a> <em>     * Launch a file without a known mime type</em>\n<a name=\"137\" href=\"#137\">137</a> <em>     *</em>\n<a name=\"138\" href=\"#138\">138</a> <em>     * @param url the file to launch</em>\n<a name=\"139\" href=\"#139\">139</a> <em>     *</em>\n<a name=\"140\" href=\"#140\">140</a> <em>     * @return the process</em>\n<a name=\"141\" href=\"#141\">141</a> <em>     *</em>\n<a name=\"142\" href=\"#142\">142</a> <em>     * @throws IOException if there's a problem with the console</em>\n<a name=\"143\" href=\"#143\">143</a> <em>     */</em>\n<a name=\"144\" href=\"#144\">144</a>     <strong>public</strong> Process launch(<strong>final</strong> String url) throws IOException\n<a name=\"145\" href=\"#145\">145</a>     {\n<a name=\"146\" href=\"#146\">146</a>         <strong>return</strong> launch(url, getMime(getExtension(url)));\n<a name=\"147\" href=\"#147\">147</a>     }\n<a name=\"148\" href=\"#148\">148</a> \n<a name=\"149\" href=\"#149\">149</a>     <em>/**<em>*</em></em>\n<a name=\"150\" href=\"#150\">150</a> <em>     * Launch a file with a known mime type</em>\n<a name=\"151\" href=\"#151\">151</a> <em>     *</em>\n<a name=\"152\" href=\"#152\">152</a> <em>     * @param url the file to launch</em>\n<a name=\"153\" href=\"#153\">153</a> <em>     * @param mime the mimetype of the file to launch</em>\n<a name=\"154\" href=\"#154\">154</a> <em>     *</em>\n<a name=\"155\" href=\"#155\">155</a> <em>     * @return the process</em>\n<a name=\"156\" href=\"#156\">156</a> <em>     *</em>\n<a name=\"157\" href=\"#157\">157</a> <em>     * @throws IOException if there's a problem with the console</em>\n<a name=\"158\" href=\"#158\">158</a> <em>     */</em>\n<a name=\"159\" href=\"#159\">159</a>     <strong>public</strong> Process launch(<strong>final</strong> String url, <strong>final</strong> String mime)\n<a name=\"160\" href=\"#160\">160</a>                    throws IOException\n<a name=\"161\" href=\"#161\">161</a>     {\n<a name=\"162\" href=\"#162\">162</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"163\" href=\"#163\">163</a>         {\n<a name=\"164\" href=\"#164\">164</a>             log.debug(<span class=\"string\">\"launch(\"</span> + url + <span class=\"string\">\", \"</span> + mime + <span class=\"string\">\")\"</span>);\n<a name=\"165\" href=\"#165\">165</a>         }\n<a name=\"166\" href=\"#166\">166</a> \n<a name=\"167\" href=\"#167\">167</a>         String cmd = getCommand(mime);\n<a name=\"168\" href=\"#168\">168</a> \n<a name=\"169\" href=\"#169\">169</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"170\" href=\"#170\">170</a>         {\n<a name=\"171\" href=\"#171\">171</a>             log.debug(<span class=\"string\">\"cmd: \"</span> + cmd + <span class=\"string\">\"  url: \"</span> + url);\n<a name=\"172\" href=\"#172\">172</a>         }\n<a name=\"173\" href=\"#173\">173</a> \n<a name=\"174\" href=\"#174\">174</a>         String temp = url;\n<a name=\"175\" href=\"#175\">175</a> \n<a name=\"176\" href=\"#176\">176</a>         <em class=\"comment\">//first trim the path off</em>\n<a name=\"177\" href=\"#177\">177</a>         <strong>if</strong>(temp.lastIndexOf('&#47;&#47;') != -1)\n<a name=\"178\" href=\"#178\">178</a>         {\n<a name=\"179\" href=\"#179\">179</a>             temp = temp.substring(temp.lastIndexOf('&#47;&#47;'));\n<a name=\"180\" href=\"#180\">180</a>         }\n<a name=\"181\" href=\"#181\">181</a> \n<a name=\"182\" href=\"#182\">182</a>         <strong>if</strong>(temp.lastIndexOf('/') != -1)\n<a name=\"183\" href=\"#183\">183</a>         {\n<a name=\"184\" href=\"#184\">184</a>             temp = temp.substring(temp.lastIndexOf('/'));\n<a name=\"185\" href=\"#185\">185</a>         }\n<a name=\"186\" href=\"#186\">186</a>         \n<a name=\"187\" href=\"#187\">187</a>         temp = <span class=\"string\">\"http://\"</span> + PeerManager.getLocalUserID() + <span class=\"string\">\"/swirl\"</span> + temp;\n<a name=\"188\" href=\"#188\">188</a> \n<a name=\"189\" href=\"#189\">189</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"190\" href=\"#190\">190</a>         {\n<a name=\"191\" href=\"#191\">191</a>             log.debug(<span class=\"string\">\"final url: \"</span> + temp);\n<a name=\"192\" href=\"#192\">192</a>         }\n<a name=\"193\" href=\"#193\">193</a>         \n<a name=\"194\" href=\"#194\">194</a>         cmd = cmd.replaceAll(<span class=\"string\">\"%1\"</span>, temp);\n<a name=\"195\" href=\"#195\">195</a>         <em class=\"comment\">// cmd = cmd.replaceAll(\"%1\", url);</em>\n<a name=\"196\" href=\"#196\">196</a>         <em class=\"comment\">// test</em>\n<a name=\"197\" href=\"#197\">197</a>         \n<a name=\"198\" href=\"#198\">198</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"199\" href=\"#199\">199</a>         {\n<a name=\"200\" href=\"#200\">200</a>             log.debug(<span class=\"string\">\"new cmd: \"</span> + cmd + <span class=\"string\">\"  url: \"</span> + url);\n<a name=\"201\" href=\"#201\">201</a>         }\n<a name=\"202\" href=\"#202\">202</a> \n<a name=\"203\" href=\"#203\">203</a>         <strong>return</strong> Runtime.getRuntime().exec(cmd);\n<a name=\"204\" href=\"#204\">204</a>     }\n<a name=\"205\" href=\"#205\">205</a> \n<a name=\"206\" href=\"#206\">206</a>     <em>/**<em>*</em></em>\n<a name=\"207\" href=\"#207\">207</a> <em>     * get the Properties configuration that maps extensions to mime types</em>\n<a name=\"208\" href=\"#208\">208</a> <em>     *</em>\n<a name=\"209\" href=\"#209\">209</a> <em>     * @return the mapping</em>\n<a name=\"210\" href=\"#210\">210</a> <em>     */</em>\n<a name=\"211\" href=\"#211\">211</a>     <strong>protected</strong> <strong>abstract</strong> Properties getExtToMime();\n<a name=\"212\" href=\"#212\">212</a> \n<a name=\"213\" href=\"#213\">213</a>     <em>/**<em>*</em></em>\n<a name=\"214\" href=\"#214\">214</a> <em>     * get the Properties configuration that maps mime types to commandlines</em>\n<a name=\"215\" href=\"#215\">215</a> <em>     *</em>\n<a name=\"216\" href=\"#216\">216</a> <em>     * @return the mapping</em>\n<a name=\"217\" href=\"#217\">217</a> <em>     */</em>\n<a name=\"218\" href=\"#218\">218</a>     <strong>protected</strong> <strong>abstract</strong> Properties getMimeToCmd();\n<a name=\"219\" href=\"#219\">219</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 32732.0}