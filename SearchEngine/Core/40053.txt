{"text": "Main Page Modules Data Structures File List Data Fields Globals Related Pages vacc h File ReferenceContains declarations for class Vacc More include maloc maloc h include apbs vhal h include apbs valist h include apbs vclist h include apbs vatom h include apbs vunit h Include dependency graph for vacc h This graph shows which files directly or indirectly include this file Go to the source code of this file Data Structuresstruct sVacc Oracle for solvent and ion accessibility around a biomolecule More struct sVaccSurf Surface object list of per atom surface points More Typedefs typedef sVaccSurf VaccSurf Declaration of the VaccSurf class as the VaccSurf structure typedef sVacc Vacc Declaration of the Vacc class as the Vacc structure Functionsunsigned long int Vacc memChk Vacc thee Get number of bytes in this object and its members VaccSurf VaccSurf ctor Vmem mem double probe radius int nsphere Allocate and construct the surface object do not assign surface points to positions int VaccSurf ctor2 VaccSurf thee Vmem mem double probe radius int nsphere Construct the surface object using previously allocated memory do not assign surface points to positions void VaccSurf dtor VaccSurf thee Destroy the surface object and free its memory void VaccSurf dtor2 VaccSurf thee Destroy the surface object VaccSurf VaccSurf refSphere Vmem mem int npts Set up an array of points for a reference sphere of unit radius VaccSurf Vacc atomSurf Vacc thee Vatom atom VaccSurf ref double probe radius Set up an array of points corresponding to the SAS due to a particular atom Vacc Vacc ctor Valist alist Vclist clist double surf density Construct the accessibility object int Vacc ctor2 Vacc thee Valist alist Vclist clist double surf density FORTRAN stub to construct the accessibility object void Vacc dtor Vacc thee Destroy object void Vacc dtor2 Vacc thee FORTRAN stub to destroy object double Vacc vdwAcc Vacc thee double center VAPBS DIM Report van der Waals accessibility double Vacc ivdwAcc Vacc thee double center VAPBS DIM double radius Report inflated van der Waals accessibility double Vacc molAcc Vacc thee double center VAPBS DIM double radius Report molecular accessibility double Vacc fastMolAcc Vacc thee double center VAPBS DIM double radius Report molecular accessibility quickly double Vacc splineAcc Vacc thee double center VAPBS DIM double win double infrad Report spline based accessibility void Vacc splineAccGrad Vacc thee double center VAPBS DIM double win double infrad double grad Report gradient of spline based accessibility double Vacc splineAccAtom Vacc thee double center VAPBS DIM double win double infrad Vatom atom Report spline based accessibility for a given atom void Vacc splineAccGradAtomUnnorm Vacc thee double center VAPBS DIM double win double infrad Vatom atom double force Report gradient of spline based accessibility with respect to a particular atom see Vpmg splineAccAtom void Vacc splineAccGradAtomNorm Vacc thee double center VAPBS DIM double win double infrad Vatom atom double force Report gradient of spline based accessibility with respect to a particular atom normalized by the accessibility value due to that atom at that point see Vpmg splineAccAtom double Vacc SASA Vacc thee double radius Build the solvent accessible surface SAS and calculate the solvent accessible surface area double Vacc totalSASA Vacc thee double radius Return the total solvent accessible surface area SASA double Vacc atomSASA Vacc thee double radius Vatom atom Return the atomic solvent accessible surface area SASA VaccSurf Vacc atomSASPoints Vacc thee double radius Vatom atom Get the set of points for this atom s solvent accessible surface Detailed Description Contains declarations for class Vacc Version Idvacc h v 2 32 2 5 7 26 14 43 42 apbs Exp Author Nathan A Baker Attention APBS Adaptive Poisson Boltzmann Solver Nathan A Baker baker biochem wustl edu Dept of Biochemistry and Molecular Biophysics Center for Computational Biology Washington University in St Louis Additional contributing authors listed in the code documentation Copyright c 2 2 2 5 Washington University in St Louis All Rights Reserved Portions Copyright c 1999 2 2 The Regents of the University of California Portions Copyright c 1995 Michael Holst This file is part of APBS APBS is free software you can redistribute it and or modify it under the terms of the GNU General Public License as published by the Free Software Foundation either version 2 of the License or at your option any later version APBS is distributed in the hope that it will be useful but WITHOUT ANY WARRANTY without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE See the GNU General Public License for more details You should have received a copy of the GNU General Public License along with APBS if not write to the Free Software Foundation Inc 59 Temple Place Suite 33 Boston MA 2111 13 7 USA Generated on Tue Dec 6 1 5 38 2 5 for APBS by 1 3 5", "_id": "http://www.ics.uci.edu/~dock/manuals/apbs/html/programmer/vacc_8h.html", "title": "apbs: vacc.h file reference", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=iso-8859-1\">\n<title>APBS: vacc.h File Reference</title>\n<link href=\"apbs.css\" rel=\"stylesheet\" type=\"text/css\">\n</head><body>\n<!-- Generated by Doxygen 1.3.5 -->\n<div class=\"qindex\"><a class=\"qindex\" href=\"index.html\">Main&nbsp;Page</a> | <a class=\"qindex\" href=\"modules.html\">Modules</a> | <a class=\"qindex\" href=\"annotated.html\">Data&nbsp;Structures</a> | <a class=\"qindex\" href=\"files.html\">File&nbsp;List</a> | <a class=\"qindex\" href=\"functions.html\">Data&nbsp;Fields</a> | <a class=\"qindex\" href=\"globals.html\">Globals</a> | <a class=\"qindex\" href=\"pages.html\">Related&nbsp;Pages</a></div>\n<h1>vacc.h File Reference</h1>Contains declarations for class Vacc.  \n<a href=\"#_details\">More...</a>\n<p>\n<code>#include \"maloc/maloc.h\"</code><br>\n<code>#include \"<a class=\"el\" href=\"vhal_8h-source.html\">apbs/vhal.h</a>\"</code><br>\n<code>#include \"<a class=\"el\" href=\"valist_8h-source.html\">apbs/valist.h</a>\"</code><br>\n<code>#include \"<a class=\"el\" href=\"vclist_8h-source.html\">apbs/vclist.h</a>\"</code><br>\n<code>#include \"<a class=\"el\" href=\"vatom_8h-source.html\">apbs/vatom.h</a>\"</code><br>\n<code>#include \"<a class=\"el\" href=\"vunit_8h-source.html\">apbs/vunit.h</a>\"</code><br>\n\n<p>\nInclude dependency graph for vacc.h:<p><center><img src=\"vacc_8h__incl.png\" border=\"0\" usemap=\"#vacc.h_map\" alt=\"Include dependency graph\"></center>\n<map name=\"vacc.h_map\">\n<area href=\"valist_8h.html\" shape=\"rect\" coords=\"196,232,292,256\" alt=\"\">\n<area href=\"vatom_8h.html\" shape=\"rect\" coords=\"57,157,159,181\" alt=\"\">\n<area href=\"vparam_8h.html\" shape=\"rect\" coords=\"367,157,476,181\" alt=\"\">\n<area href=\"vstring_8h.html\" shape=\"rect\" coords=\"311,83,415,107\" alt=\"\">\n<area href=\"vclist_8h.html\" shape=\"rect\" coords=\"281,307,377,331\" alt=\"\">\n<area href=\"vhal_8h.html\" shape=\"rect\" coords=\"432,8,523,32\" alt=\"\">\n<area href=\"vunit_8h.html\" shape=\"rect\" coords=\"540,83,633,107\" alt=\"\">\n</map>\n\n<p>\nThis graph shows which files directly or indirectly include this file:<p><center><img src=\"vacc_8h__dep__incl.png\" border=\"0\" usemap=\"#vacc.hdep_map\" alt=\"Included by dependency graph\"></center>\n<map name=\"vacc.hdep_map\">\n<area href=\"vpmg_8h.html\" shape=\"rect\" coords=\"57,158,124,182\" alt=\"\">\n<area href=\"vpbe_8h.html\" shape=\"rect\" coords=\"129,232,193,256\" alt=\"\">\n<area href=\"apbs_8h.html\" shape=\"rect\" coords=\"131,83,192,107\" alt=\"\">\n<area href=\"vopot_8h.html\" shape=\"rect\" coords=\"199,158,265,182\" alt=\"\">\n<area href=\"vfetk_8h.html\" shape=\"rect\" coords=\"289,158,351,182\" alt=\"\">\n<area href=\"routines_8h.html\" shape=\"rect\" coords=\"121,8,201,32\" alt=\"\">\n</map>\n\n<p>\n<a href=\"vacc_8h-source.html\">Go to the source code of this file.</a><table border=0 cellpadding=0 cellspacing=0>\n<tr><td></td></tr>\n<tr><td colspan=2><br><h2>Data Structures</h2></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>struct &nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"structsVacc.html\">sVacc</a></td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Oracle for solvent- and ion-accessibility around a biomolecule. </em> <a href=\"structsVacc.html#_details\">More...</a><em><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>struct &nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"structsVaccSurf.html\">sVaccSurf</a></td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Surface object list of per-atom surface points. </em> <a href=\"structsVaccSurf.html#_details\">More...</a><em><br><br></td></tr>\n<tr><td colspan=2><br><h2>Typedefs</h2></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top><a class=\"anchor\" name=\"ga0\" doxytag=\"vacc.h::VaccSurf\" ></a>\ntypedef <a class=\"el\" href=\"structsVaccSurf.html\">sVaccSurf</a>&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vacc.html#ga0\">VaccSurf</a></td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Declaration of the VaccSurf class as the VaccSurf structure. <br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top><a class=\"anchor\" name=\"ga1\" doxytag=\"vacc.h::Vacc\" ></a>\ntypedef <a class=\"el\" href=\"structsVacc.html\">sVacc</a>&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vacc.html#ga1\">Vacc</a></td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Declaration of the Vacc class as the Vacc structure. <br><br></td></tr>\n<tr><td colspan=2><br><h2>Functions</h2></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>unsigned long int&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vacc.html#ga2\">Vacc_memChk</a> (<a class=\"el\" href=\"structsVacc.html\">Vacc</a> *thee)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Get number of bytes in this object and its members.  <a href=\"group__Vacc.html#ga2\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top><a class=\"el\" href=\"structsVaccSurf.html\">VaccSurf</a> *&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vacc.html#ga3\">VaccSurf_ctor</a> (Vmem *mem, double probe_radius, int nsphere)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Allocate and construct the surface object; do not assign surface points to positions.  <a href=\"group__Vacc.html#ga3\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>int&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vacc.html#ga4\">VaccSurf_ctor2</a> (<a class=\"el\" href=\"structsVaccSurf.html\">VaccSurf</a> *thee, Vmem *mem, double probe_radius, int nsphere)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Construct the surface object using previously allocated memory; do not assign surface points to positions.  <a href=\"group__Vacc.html#ga4\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>void&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vacc.html#ga5\">VaccSurf_dtor</a> (<a class=\"el\" href=\"structsVaccSurf.html\">VaccSurf</a> **thee)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Destroy the surface object and free its memory.  <a href=\"group__Vacc.html#ga5\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>void&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vacc.html#ga6\">VaccSurf_dtor2</a> (<a class=\"el\" href=\"structsVaccSurf.html\">VaccSurf</a> *thee)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Destroy the surface object.  <a href=\"group__Vacc.html#ga6\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top><a class=\"el\" href=\"structsVaccSurf.html\">VaccSurf</a> *&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vacc.html#ga7\">VaccSurf_refSphere</a> (Vmem *mem, int npts)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Set up an array of points for a reference sphere of unit radius.  <a href=\"group__Vacc.html#ga7\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top><a class=\"el\" href=\"structsVaccSurf.html\">VaccSurf</a> *&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vacc.html#ga8\">Vacc_atomSurf</a> (<a class=\"el\" href=\"structsVacc.html\">Vacc</a> *thee, <a class=\"el\" href=\"structsVatom.html\">Vatom</a> *atom, <a class=\"el\" href=\"structsVaccSurf.html\">VaccSurf</a> *ref, double probe_radius)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Set up an array of points corresponding to the SAS due to a particular atom.  <a href=\"group__Vacc.html#ga8\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top><a class=\"el\" href=\"structsVacc.html\">Vacc</a> *&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vacc.html#ga9\">Vacc_ctor</a> (<a class=\"el\" href=\"structsValist.html\">Valist</a> *alist, <a class=\"el\" href=\"structsVclist.html\">Vclist</a> *clist, double surf_density)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Construct the accessibility object.  <a href=\"group__Vacc.html#ga9\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>int&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vacc.html#ga10\">Vacc_ctor2</a> (<a class=\"el\" href=\"structsVacc.html\">Vacc</a> *thee, <a class=\"el\" href=\"structsValist.html\">Valist</a> *alist, <a class=\"el\" href=\"structsVclist.html\">Vclist</a> *clist, double surf_density)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">FORTRAN stub to construct the accessibility object.  <a href=\"group__Vacc.html#ga10\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>void&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vacc.html#ga11\">Vacc_dtor</a> (<a class=\"el\" href=\"structsVacc.html\">Vacc</a> **thee)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Destroy object.  <a href=\"group__Vacc.html#ga11\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>void&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vacc.html#ga12\">Vacc_dtor2</a> (<a class=\"el\" href=\"structsVacc.html\">Vacc</a> *thee)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">FORTRAN stub to destroy object.  <a href=\"group__Vacc.html#ga12\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vacc.html#ga13\">Vacc_vdwAcc</a> (<a class=\"el\" href=\"structsVacc.html\">Vacc</a> *thee, double center[VAPBS_DIM])</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Report van der Waals accessibility.  <a href=\"group__Vacc.html#ga13\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vacc.html#ga14\">Vacc_ivdwAcc</a> (<a class=\"el\" href=\"structsVacc.html\">Vacc</a> *thee, double center[VAPBS_DIM], double radius)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Report inflated van der Waals accessibility.  <a href=\"group__Vacc.html#ga14\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vacc.html#ga15\">Vacc_molAcc</a> (<a class=\"el\" href=\"structsVacc.html\">Vacc</a> *thee, double center[VAPBS_DIM], double radius)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Report molecular accessibility.  <a href=\"group__Vacc.html#ga15\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vacc.html#ga16\">Vacc_fastMolAcc</a> (<a class=\"el\" href=\"structsVacc.html\">Vacc</a> *thee, double center[VAPBS_DIM], double radius)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Report molecular accessibility quickly.  <a href=\"group__Vacc.html#ga16\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vacc.html#ga17\">Vacc_splineAcc</a> (<a class=\"el\" href=\"structsVacc.html\">Vacc</a> *thee, double center[VAPBS_DIM], double win, double infrad)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Report spline-based accessibility.  <a href=\"group__Vacc.html#ga17\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>void&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vacc.html#ga18\">Vacc_splineAccGrad</a> (<a class=\"el\" href=\"structsVacc.html\">Vacc</a> *thee, double center[VAPBS_DIM], double win, double infrad, double *grad)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Report gradient of spline-based accessibility.  <a href=\"group__Vacc.html#ga18\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vacc.html#ga19\">Vacc_splineAccAtom</a> (<a class=\"el\" href=\"structsVacc.html\">Vacc</a> *thee, double center[VAPBS_DIM], double win, double infrad, <a class=\"el\" href=\"structsVatom.html\">Vatom</a> *atom)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Report spline-based accessibility for a given atom.  <a href=\"group__Vacc.html#ga19\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>void&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vacc.html#ga20\">Vacc_splineAccGradAtomUnnorm</a> (<a class=\"el\" href=\"structsVacc.html\">Vacc</a> *thee, double center[VAPBS_DIM], double win, double infrad, <a class=\"el\" href=\"structsVatom.html\">Vatom</a> *atom, double *force)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Report gradient of spline-based accessibility with respect to a particular atom (see Vpmg_splineAccAtom).  <a href=\"group__Vacc.html#ga20\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>void&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vacc.html#ga21\">Vacc_splineAccGradAtomNorm</a> (<a class=\"el\" href=\"structsVacc.html\">Vacc</a> *thee, double center[VAPBS_DIM], double win, double infrad, <a class=\"el\" href=\"structsVatom.html\">Vatom</a> *atom, double *force)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Report gradient of spline-based accessibility with respect to a particular atom normalized by the accessibility value due to that atom at that point (see Vpmg_splineAccAtom).  <a href=\"group__Vacc.html#ga21\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vacc.html#ga22\">Vacc_SASA</a> (<a class=\"el\" href=\"structsVacc.html\">Vacc</a> *thee, double radius)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Build the solvent accessible surface (SAS) and calculate the solvent accessible surface area.  <a href=\"group__Vacc.html#ga22\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vacc.html#ga23\">Vacc_totalSASA</a> (<a class=\"el\" href=\"structsVacc.html\">Vacc</a> *thee, double radius)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Return the total solvent accessible surface area (SASA).  <a href=\"group__Vacc.html#ga23\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vacc.html#ga24\">Vacc_atomSASA</a> (<a class=\"el\" href=\"structsVacc.html\">Vacc</a> *thee, double radius, <a class=\"el\" href=\"structsVatom.html\">Vatom</a> *atom)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Return the atomic solvent accessible surface area (SASA).  <a href=\"group__Vacc.html#ga24\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top><a class=\"el\" href=\"structsVaccSurf.html\">VaccSurf</a> *&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vacc.html#ga25\">Vacc_atomSASPoints</a> (<a class=\"el\" href=\"structsVacc.html\">Vacc</a> *thee, double radius, <a class=\"el\" href=\"structsVatom.html\">Vatom</a> *atom)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Get the set of points for this atom's solvent-accessible surface.  <a href=\"group__Vacc.html#ga25\"></a><br><br></td></tr>\n</table>\n<hr><a name=\"_details\"></a><h2>Detailed Description</h2>\nContains declarations for class Vacc. \n<p>\n<dl compact><dt><b>Version:</b></dt><dd><dl compact><dt><b>Id</b></dt><dd><a class=\"el\" href=\"vacc_8h.html\">vacc.h</a>,v 2.32 2005/07/26 14:43:42 apbs Exp </dd></dl>\n</dd></dl>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan A. Baker</dd></dl>\n<dl compact><dt><b>Attention:</b></dt><dd><div class=\"fragment\"><pre>\n *\n * APBS -- Adaptive Poisson-Boltzmann Solver\n *\n * Nathan A. Baker (baker@biochem.wustl.edu)\n * Dept. of Biochemistry and Molecular Biophysics\n * Center for Computational Biology\n * Washington University in St. Louis\n *\n * Additional contributing authors listed in the code documentation.\n *\n * Copyright (c) 2002-2005.  Washington University in St. Louis.\n * All Rights Reserved.\n * Portions Copyright (c) 1999-2002.  The Regents of the University of\n * California.  \n * Portions Copyright (c) 1995.  Michael Holst.\n *\n * This file is part of APBS.\n *\n * APBS is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * APBS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with APBS; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA\n *\n * </pre></div></dd></dl>\n<hr size=\"1\"><address style=\"align: right;\"><small>Generated on Tue Dec 6 10:05:38 2005 for APBS by\n<a href=\"http://www.doxygen.org/index.html\">\n<img src=\"doxygen.png\" alt=\"doxygen\" align=\"middle\" border=0 > \n</a>1.3.5 </small></address>\n</body>\n</html>\n", "id": 40053.0}