{"text": "View Javadoc 1 package swirl workspace common 2 3 import java awt Color 4 import java io IOException 5 import java net URL 6 import java util Properties 7 8 import org apache commons logging Log 9 import org apache commons logging LogFactory 1 11 12 author bpillet 13 14 public final class ColorUtils 15 a logger for this class 16 private static Log log LogFactory getLog ColorUtils class 17 18 private ColorUtils 19 2 public static String colorToString Color c 21 22 if log isDebugEnabled 23 24 log debug colorToString c 25 26 StringBuffer b new StringBuffer 27 b append c getRed 28 b append 29 b append c getGreen 3 b append 31 b append c getBlue 32 return b toString 33 34 35 public static Color palette new Color 24 36 static 37 38 for int i i palette length i 39 4 float h float i float palette length 41 float s 1 float 1 float i 2 1 42 float b 1 float 1 float i 2 1 43 palette i new Color Color HSBtoRGB h s b 44 System err println h h ts s tb b tpalette Color HSBtoRGB h s b 45 46 int dim int Math pow palette length 1 3 Math cbrt palette length 47 int i 48 for int r r 255 r 255 dim 49 5 for int g g 255 g 255 dim 51 52 for int b b 255 i palette length b 255 dim 53 54 palette i new Color r g b 55 System err println r r g g b b 56 57 58 59 6 61 static Object colors 62 black Color black 63 blue Color blue 64 cyan Color cyan 65 darkGray Color darkGray 66 gray Color gray 67 green Color green 68 lightGray Color lightGray 69 magenta Color magenta 7 orange Color orange 71 pink Color pink 72 red Color red 73 white Color white 74 yellow Color yellow 75 76 77 public static Color stringToColor String s 78 79 log debug stringToColor s 8 try 81 get a resource 82 URL colorsURL Thread currentThread getContextClassLoader getResource color properties 83 Properties colorProperties new Properties 84 colorProperties load colorsURL openStream 85 86 check the color 87 String color colorProperties getProperty s 88 if color null 89 if color startsWith color length 7 9 in the format rrggbb 91 try 92 return new Color Integer parseInt color substring 1 3 16 93 Integer parseInt color substring 3 5 16 94 Integer parseInt color substring 5 7 16 95 96 catch NumberFormatException nfe 97 98 99 else 1 try predefined color names 1 1 for int i i colors length i 1 2 if color compareToIgnoreCase String colors i 1 3 return Color colors i 1 1 4 1 5 1 6 1 7 1 8 1 9 catch IOException e 11 111 112 s s toLowerCase 113 s aaa make sure s is at least 3 chars long 114 115 turn the first 3 letters of the string into integers 116 int r 117 if s length 118 r s charAt a 119 int g 12 if s length 1 121 g s charAt 1 a 122 int b 123 if s length 2 124 b s charAt 2 a 125 Color min null 126 double currentDistance Double MAX VALUE 127 128 compute the distance from that point to each of the colors keeping the smallest one 129 for int i 1 i palette length i 13 131 double distance Math pow r palette i getRed 1 2 132 Math pow g palette i getGreen 1 2 133 Math pow b palette i getBlue 1 2 134 log debug distance distance color palette i min min 135 if distance currentDistance 136 137 min palette i 138 currentDistance distance 139 14 141 142 if log isDebugEnabled 143 144 log debug s s r g b r g b min min distance currentDistance 145 146 147 let s try dumb rgb from three letters 26 letters correspond to 255 148 min new Color r 1 g 1 b 1 149 return min 15 151 152 public static Color generateRandomColor 153 154 int mod 128 155 int r int Math random mod 156 int g int Math random mod 157 int b int Math random mod 158 return new Color r g b 159 16 161 public static String generateRandomColorString 162 163 return colorToString generateRandomColor 164 165 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.20/xref/swirl/workspace/common/ColorUtils.html", "title": "colorutils xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>ColorUtils xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../../stylesheet.css\" />\n</head>\n<body>\n<div id=\"overview\"><a href=\"../../../../apidocs/swirl/workspace/common/ColorUtils.html\">View Javadoc</a></div><pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <strong>package</strong> <a href=\"../../../swirl/workspace/common/package-summary.html\">swirl.workspace.common</a>;\n<a name=\"2\" href=\"#2\">2</a>   \n<a name=\"3\" href=\"#3\">3</a>   <strong>import</strong> java.awt.Color;\n<a name=\"4\" href=\"#4\">4</a>   <strong>import</strong> java.io.IOException;\n<a name=\"5\" href=\"#5\">5</a>   <strong>import</strong> java.net.URL;\n<a name=\"6\" href=\"#6\">6</a>   <strong>import</strong> java.util.Properties;\n<a name=\"7\" href=\"#7\">7</a>   \n<a name=\"8\" href=\"#8\">8</a>   <strong>import</strong> org.apache.commons.logging.Log;\n<a name=\"9\" href=\"#9\">9</a>   <strong>import</strong> org.apache.commons.logging.LogFactory;\n<a name=\"10\" href=\"#10\">10</a>  \n<a name=\"11\" href=\"#11\">11</a>  <em>/**<em>*</em></em>\n<a name=\"12\" href=\"#12\">12</a>  <em> * @author bpillet</em>\n<a name=\"13\" href=\"#13\">13</a>  <em> */</em>\n<a name=\"14\" href=\"#14\">14</a>  <strong>public</strong> <strong>final</strong> <strong>class</strong> <a href=\"../../../swirl/workspace/common/ColorUtils.html\">ColorUtils</a> {\n<a name=\"15\" href=\"#15\">15</a>  \t<em>/**<em>* a logger for this class */</em></em>\n<a name=\"16\" href=\"#16\">16</a>      <strong>private</strong> <strong>static</strong> Log log = LogFactory.getLog(ColorUtils.<strong>class</strong>);\n<a name=\"17\" href=\"#17\">17</a>  \n<a name=\"18\" href=\"#18\">18</a>  \t<strong>private</strong> <a href=\"../../../swirl/workspace/common/ColorUtils.html\">ColorUtils</a>() {}\n<a name=\"19\" href=\"#19\">19</a>  \t\n<a name=\"20\" href=\"#20\">20</a>  \t<strong>public</strong> <strong>static</strong> String colorToString(Color c)\n<a name=\"21\" href=\"#21\">21</a>      {\n<a name=\"22\" href=\"#22\">22</a>  \t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"23\" href=\"#23\">23</a>          {\n<a name=\"24\" href=\"#24\">24</a>  \t\t\tlog.debug(<span class=\"string\">\"colorToString(\"</span> + c + <span class=\"string\">\")\"</span>);\n<a name=\"25\" href=\"#25\">25</a>          }\n<a name=\"26\" href=\"#26\">26</a>  \t\tStringBuffer b = <strong>new</strong> StringBuffer();\n<a name=\"27\" href=\"#27\">27</a>  \t\tb.append(c.getRed());\n<a name=\"28\" href=\"#28\">28</a>  \t\tb.append(' ');\n<a name=\"29\" href=\"#29\">29</a>  \t\tb.append(c.getGreen());\n<a name=\"30\" href=\"#30\">30</a>  \t\tb.append(' ');\n<a name=\"31\" href=\"#31\">31</a>  \t\tb.append(c.getBlue());\n<a name=\"32\" href=\"#32\">32</a>      \t<strong>return</strong> b.toString();\n<a name=\"33\" href=\"#33\">33</a>      }\n<a name=\"34\" href=\"#34\">34</a>  \n<a name=\"35\" href=\"#35\">35</a>  \t<strong>public</strong> <strong>static</strong> Color[] palette = <strong>new</strong> Color[24];\n<a name=\"36\" href=\"#36\">36</a>  \t<strong>static</strong>\n<a name=\"37\" href=\"#37\">37</a>  \t{\n<a name=\"38\" href=\"#38\">38</a>  <em class=\"comment\">//\t\tfor(int i = 0; i &lt; palette.length; ++i)</em>\n<a name=\"39\" href=\"#39\">39</a>  <em class=\"comment\">//\t\t{</em>\n<a name=\"40\" href=\"#40\">40</a>  <em class=\"comment\">//\t\t\tfloat h = (float)i/(float)palette.length;</em>\n<a name=\"41\" href=\"#41\">41</a>  <em class=\"comment\">//\t\t\tfloat s = 1;//(float)1 / (float)(i%2 +1);</em>\n<a name=\"42\" href=\"#42\">42</a>  <em class=\"comment\">//\t\t\tfloat b = 1;//(float)1 / (float)(i%2 + 1);</em>\n<a name=\"43\" href=\"#43\">43</a>  <em class=\"comment\">//\t\t\tpalette[i] = new Color(Color.HSBtoRGB(h, s, b));</em>\n<a name=\"44\" href=\"#44\">44</a>  <em class=\"comment\">//\t\t\tSystem.err.println(\"h: \" + h + \"\\ts: \" + s + \"\\tb: \" + b + \"\\tpalette: \" + Color.HSBtoRGB(h, s, b));</em>\n<a name=\"45\" href=\"#45\">45</a>  <em class=\"comment\">//\t\t}</em>\n<a name=\"46\" href=\"#46\">46</a>  \t\t<strong>int</strong> dim = (<strong>int</strong>)Math.pow(palette.length, 1.0/3.0);\t<em class=\"comment\">//Math.cbrt(palette.length);</em>\n<a name=\"47\" href=\"#47\">47</a>  \t\t<strong>int</strong> i = 0;\n<a name=\"48\" href=\"#48\">48</a>  \t\t<strong>for</strong>(<strong>int</strong> r = 0; r &lt;= 255; r += 255/dim)\n<a name=\"49\" href=\"#49\">49</a>  \t\t{\n<a name=\"50\" href=\"#50\">50</a>  \t\t\t<strong>for</strong>(<strong>int</strong> g = 0; g &lt;= 255; g += 255/dim)\n<a name=\"51\" href=\"#51\">51</a>  \t\t\t{\n<a name=\"52\" href=\"#52\">52</a>  \t\t\t\t<strong>for</strong>(<strong>int</strong> b = 0; b &lt;= 255 &amp;&amp; i &lt; palette.length; b += 255/dim)\n<a name=\"53\" href=\"#53\">53</a>  \t\t\t\t{\n<a name=\"54\" href=\"#54\">54</a>  \t\t\t\t\tpalette[i++] = <strong>new</strong> Color(r, g, b);\n<a name=\"55\" href=\"#55\">55</a>  \t\t\t\t\t<em class=\"comment\">//System.err.println(\"r: \" + r + \" g: \" + g + \" b: \" + b);</em>\n<a name=\"56\" href=\"#56\">56</a>  \t\t\t\t}\n<a name=\"57\" href=\"#57\">57</a>  \t\t\t}\n<a name=\"58\" href=\"#58\">58</a>  \t\t}\n<a name=\"59\" href=\"#59\">59</a>  \t}\n<a name=\"60\" href=\"#60\">60</a>  \t\n<a name=\"61\" href=\"#61\">61</a>  \t<strong>static</strong> Object[][] colors = {\n<a name=\"62\" href=\"#62\">62</a>  \t\t\t{<span class=\"string\">\"black\"</span>, Color.black},\n<a name=\"63\" href=\"#63\">63</a>  \t\t\t{<span class=\"string\">\"blue\"</span>, Color.blue},\n<a name=\"64\" href=\"#64\">64</a>  \t\t\t{<span class=\"string\">\"cyan\"</span>, Color.cyan},\n<a name=\"65\" href=\"#65\">65</a>  \t\t\t{<span class=\"string\">\"darkGray\"</span>, Color.darkGray},\n<a name=\"66\" href=\"#66\">66</a>  \t\t\t{<span class=\"string\">\"gray\"</span>, Color.gray},\n<a name=\"67\" href=\"#67\">67</a>  \t\t\t{<span class=\"string\">\"green\"</span>, Color.green},\n<a name=\"68\" href=\"#68\">68</a>  \t\t\t{<span class=\"string\">\"lightGray\"</span>, Color.lightGray},\n<a name=\"69\" href=\"#69\">69</a>  \t\t\t{<span class=\"string\">\"magenta\"</span>, Color.magenta},\n<a name=\"70\" href=\"#70\">70</a>  \t\t\t{<span class=\"string\">\"orange\"</span>, Color.orange},\n<a name=\"71\" href=\"#71\">71</a>  \t\t\t{<span class=\"string\">\"pink\"</span>, Color.pink},\n<a name=\"72\" href=\"#72\">72</a>  \t\t\t{<span class=\"string\">\"red\"</span>, Color.red},\n<a name=\"73\" href=\"#73\">73</a>  \t\t\t{<span class=\"string\">\"white\"</span>, Color.white},\n<a name=\"74\" href=\"#74\">74</a>  \t\t\t{<span class=\"string\">\"yellow\"</span>, Color.yellow}\n<a name=\"75\" href=\"#75\">75</a>  \t};\n<a name=\"76\" href=\"#76\">76</a>  \n<a name=\"77\" href=\"#77\">77</a>  \t<strong>public</strong> <strong>static</strong> Color stringToColor(String s)\n<a name=\"78\" href=\"#78\">78</a>  \t{\n<a name=\"79\" href=\"#79\">79</a>  <em class=\"comment\">//\t\tlog.debug(\"stringToColor(\" + s + \")\");</em>\n<a name=\"80\" href=\"#80\">80</a>  \t\t<strong>try</strong> {\n<a name=\"81\" href=\"#81\">81</a>  \t\t\t<em class=\"comment\">// get a resource</em>\n<a name=\"82\" href=\"#82\">82</a>  \t\t\tURL\tcolorsURL = Thread.currentThread().getContextClassLoader().getResource(<span class=\"string\">\"color.properties\"</span>);\n<a name=\"83\" href=\"#83\">83</a>  \t\t\tProperties colorProperties = <strong>new</strong> Properties();\n<a name=\"84\" href=\"#84\">84</a>  \t\t\tcolorProperties.load(colorsURL.openStream());\n<a name=\"85\" href=\"#85\">85</a>  \t\t\t\n<a name=\"86\" href=\"#86\">86</a>  \t\t\t<em class=\"comment\">// check the color</em>\n<a name=\"87\" href=\"#87\">87</a>  \t\t\tString color = colorProperties.getProperty(s);\n<a name=\"88\" href=\"#88\">88</a>  \t\t\t<strong>if</strong> (color != <strong>null</strong>){\n<a name=\"89\" href=\"#89\">89</a>  \t\t\t\t<strong>if</strong> (color.startsWith(<span class=\"string\">\"#\"</span>) &amp;&amp; color.length()==7) {\n<a name=\"90\" href=\"#90\">90</a>  \t\t\t\t\t<em class=\"comment\">// in the format #rrggbb</em>\n<a name=\"91\" href=\"#91\">91</a>  \t\t\t\t\t<strong>try</strong> {\n<a name=\"92\" href=\"#92\">92</a>  \t\t\t\t\t\t<strong>return</strong> <strong>new</strong> Color(Integer.parseInt(color.substring(1, 3), 16), \n<a name=\"93\" href=\"#93\">93</a>  \t\t\t\t\t\t\t\t\t\t Integer.parseInt(color.substring(3, 5), 16), \n<a name=\"94\" href=\"#94\">94</a>  \t\t\t\t\t\t\t\t\t\t Integer.parseInt(color.substring(5, 7), 16));\n<a name=\"95\" href=\"#95\">95</a>  \t\t\t\t\t}\n<a name=\"96\" href=\"#96\">96</a>  \t\t\t\t\t<strong>catch</strong> (NumberFormatException nfe) {\n<a name=\"97\" href=\"#97\">97</a>  \t\t\t\t\t}\n<a name=\"98\" href=\"#98\">98</a>  \t\t\t\t}\n<a name=\"99\" href=\"#99\">99</a>  \t\t\t\t<strong>else</strong> {\n<a name=\"100\" href=\"#100\">100</a> \t\t\t\t\t<em class=\"comment\">// try predefined color names</em>\n<a name=\"101\" href=\"#101\">101</a> \t\t\t\t\t<strong>for</strong> (<strong>int</strong> i = 0; i&lt; colors.length; i++){\n<a name=\"102\" href=\"#102\">102</a> \t\t\t\t\t\t<strong>if</strong> (color.compareToIgnoreCase((String)colors[i][0])==0) {\n<a name=\"103\" href=\"#103\">103</a> \t\t\t\t\t\t\t<strong>return</strong> (Color)colors[i][1];\n<a name=\"104\" href=\"#104\">104</a> \t\t\t\t\t\t}\n<a name=\"105\" href=\"#105\">105</a> \t\t\t\t\t}\n<a name=\"106\" href=\"#106\">106</a> \t\t\t\t}\n<a name=\"107\" href=\"#107\">107</a> \t\t\t}\n<a name=\"108\" href=\"#108\">108</a> \t\t}\n<a name=\"109\" href=\"#109\">109</a> \t\t<strong>catch</strong> (IOException e) {\n<a name=\"110\" href=\"#110\">110</a> \t\t}\n<a name=\"111\" href=\"#111\">111</a> \t\t\n<a name=\"112\" href=\"#112\">112</a> \t\ts = s.toLowerCase();\n<a name=\"113\" href=\"#113\">113</a> \t\ts += <span class=\"string\">\"aaa\"</span>;\t<em class=\"comment\">// make sure s is at least 3 chars long</em>\n<a name=\"114\" href=\"#114\">114</a> \t\t\n<a name=\"115\" href=\"#115\">115</a> \t\t<em class=\"comment\">// turn the first 3 letters of the string into integers</em>\n<a name=\"116\" href=\"#116\">116</a> \t\t<strong>int</strong> r = 0; \n<a name=\"117\" href=\"#117\">117</a> \t\t<strong>if</strong> (s.length()>0)\n<a name=\"118\" href=\"#118\">118</a> \t\t    r = s.charAt(0) - 'a';\n<a name=\"119\" href=\"#119\">119</a> \t\t<strong>int</strong> g = 0;\n<a name=\"120\" href=\"#120\">120</a> \t\t<strong>if</strong> (s.length()>1)\n<a name=\"121\" href=\"#121\">121</a> \t\t    g = s.charAt(1) - 'a';\n<a name=\"122\" href=\"#122\">122</a> \t\t<strong>int</strong> b = 0;\n<a name=\"123\" href=\"#123\">123</a> \t\t<strong>if</strong> (s.length()>2)\n<a name=\"124\" href=\"#124\">124</a> \t\t    b = s.charAt(2) - 'a';\n<a name=\"125\" href=\"#125\">125</a> \t\tColor min = <strong>null</strong>;\n<a name=\"126\" href=\"#126\">126</a> \t\t<strong>double</strong> currentDistance = Double.MAX_VALUE;\n<a name=\"127\" href=\"#127\">127</a> \t\t\n<a name=\"128\" href=\"#128\">128</a> \t\t<em class=\"comment\">// compute the distance from that point to each of the colors, keeping the smallest one</em>\n<a name=\"129\" href=\"#129\">129</a> \t\t<strong>for</strong>(<strong>int</strong> i = 1; i &lt; palette.length; ++i)\n<a name=\"130\" href=\"#130\">130</a> \t\t{\n<a name=\"131\" href=\"#131\">131</a> \t\t\t<strong>double</strong> distance = Math.pow(r - palette[i].getRed()/10, 2) + \n<a name=\"132\" href=\"#132\">132</a> \t\t\t\t\t\t\tMath.pow(g - palette[i].getGreen()/10, 2) +\n<a name=\"133\" href=\"#133\">133</a> \t\t\t\t\t\t\tMath.pow(b - palette[i].getBlue()/10, 2);\n<a name=\"134\" href=\"#134\">134</a> \t\t\t<em class=\"comment\">//log.debug(\"distance: \" + distance + \" color: \" + palette[i] + \"  min: \" + min);</em>\n<a name=\"135\" href=\"#135\">135</a> \t\t\t<strong>if</strong>(distance &lt; currentDistance)\n<a name=\"136\" href=\"#136\">136</a> \t\t\t{\n<a name=\"137\" href=\"#137\">137</a> \t\t\t\tmin = palette[i];\n<a name=\"138\" href=\"#138\">138</a> \t\t\t\tcurrentDistance = distance;\n<a name=\"139\" href=\"#139\">139</a> \t\t\t}\n<a name=\"140\" href=\"#140\">140</a> \t\t}\n<a name=\"141\" href=\"#141\">141</a> \n<a name=\"142\" href=\"#142\">142</a> \t\t<strong>if</strong>(log.isDebugEnabled())\n<a name=\"143\" href=\"#143\">143</a>         {\n<a name=\"144\" href=\"#144\">144</a> \t\t\tlog.debug(<span class=\"string\">\"s: \"</span> + s + <span class=\"string\">\"(r,g,b): \"</span> + r + <span class=\"string\">\", \"</span> + g + <span class=\"string\">\", \"</span> + b + <span class=\"string\">\"   min: \"</span> + min + <span class=\"string\">\" distance: \"</span> + currentDistance);\n<a name=\"145\" href=\"#145\">145</a>         }\n<a name=\"146\" href=\"#146\">146</a> \t\t\n<a name=\"147\" href=\"#147\">147</a> \t\t<em class=\"comment\">// let's try dumb rgb from three letters, 26 letters correspond to 255</em>\n<a name=\"148\" href=\"#148\">148</a> \t\tmin = <strong>new</strong> Color(r * 10, g * 10, b * 10 );\n<a name=\"149\" href=\"#149\">149</a> \t\t<strong>return</strong> min;\n<a name=\"150\" href=\"#150\">150</a> \t}\n<a name=\"151\" href=\"#151\">151</a> \t\n<a name=\"152\" href=\"#152\">152</a> \t<strong>public</strong> <strong>static</strong> Color generateRandomColor()\n<a name=\"153\" href=\"#153\">153</a> \t{\n<a name=\"154\" href=\"#154\">154</a> \t\t<strong>int</strong> mod = 128;\n<a name=\"155\" href=\"#155\">155</a> \t\t<strong>int</strong> r = (<strong>int</strong>)Math.random() * mod;\n<a name=\"156\" href=\"#156\">156</a> \t\t<strong>int</strong> g = (<strong>int</strong>)Math.random() * mod;\n<a name=\"157\" href=\"#157\">157</a> \t\t<strong>int</strong> b = (<strong>int</strong>)Math.random() * mod;\n<a name=\"158\" href=\"#158\">158</a> \t\t<strong>return</strong> <strong>new</strong> Color(r, g, b);\n<a name=\"159\" href=\"#159\">159</a> \t}\n<a name=\"160\" href=\"#160\">160</a> \t\n<a name=\"161\" href=\"#161\">161</a> \t<strong>public</strong> <strong>static</strong> String generateRandomColorString()\n<a name=\"162\" href=\"#162\">162</a> \t{\n<a name=\"163\" href=\"#163\">163</a> \t\t<strong>return</strong> colorToString(generateRandomColor());\n<a name=\"164\" href=\"#164\">164</a> \t}\n<a name=\"165\" href=\"#165\">165</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 32889.0}