{"text": "ZVON RFC Repository RFC 23 1 Frontpage Contents Prev Next RFC index RFC searchDownload as zip tar gz 4 Extended Black and White fax mode This section defines the extended black and white mode or Profile F of TIFF for facsimile It provides a standard definition of what has historically been known as TIFF Class F and now TIFF F In doing so it aligns this mode with current ITU T Recommendations for black and white fax and with existing industry practice Implementations of this profile include implementations of Profile S This section describes extensions to the minimal interchange set of fields Profile S that provide a richer set of black and white capabilities The fields and values described in this section are a superset of the fields and values defined for the minimal interchange set in Section 3 In addition to the MH encoding Modified READ MR and Modified Modified READ MMR encoding as described in T 4 and T 6 are supported Section 4 1 gives an overview of TIFF F Section 4 2 describes the TIFF fields that SHALL be used in this mode Section 4 3 describes the fields that MAY be used in this mode In the spirit of the original TIFF F specification Sections 4 4 and 4 5 discuss technical implementation issues and warnings Section 4 6 gives an example use of TIFF F Section 4 7 gives a summary of the required and recommended fields and their values 4 1 TIFF F Overview Though it has been in common usage for many years TIFF F has previously never been documented in the form of a standard An informal TIFF F document was originally created by a small group of fax experts led by Joe Campbell The existence of TIFF F is noted in TIFF but it is not defined This document serves as the formal definition of the F application of TIFF for Internet applications For ease of reference the term TIFF F will be used throughout this document as a shorthand for the extended black and white mode or profile of TIFF for facsimile Up until the TIFF 6 specification TIFF supported various Classes which defined the use of TIFF for various applications Classes were used to support specific applications In this spirit TIFF F has been known historically as TIFF Class F Previous informal TIFF F documents TIFF F used the Class F terminology As of TIFF 6 TIFF the TIFF Class concept has been eliminated in favor of the concept of Baseline TIFF Therefore this document updates the definition of TIFF F as the F profile of TIFF for facsimile by using Baseline TIFF as defined in TIFF as the starting point and then adding the TIFF extensions to Baseline TIFF which apply for TIFF F In almost all cases the resulting definition of TIFF F fields and values remains consistent with those used historically in earlier definitions of TIFF Class F Where some of the values for fields have been updated to provide more precise conformance with the ITU T T 4 and T 3 fax recommendations these differences are noted 4 2 Required TIFF Fields This section lists the required fields and the values they must have to be ITU compatible Besides the fields listed in Section 2 2 1 the extended black and white fax mode SHALL use the following fields 4 2 1 Baseline fields BitsPerSample 258 1 SHORT RequiredByTIFFBaseline Binary data only Default 1 field may be omitted if this is the value Compression 259 3 4 SHORT RequiredByTIFFBaseline 3 1 or 2 dimensional coding must have T4Options field This is a TIFF Extension value TIFF 4 2 dimensional coding ITU T Rec T 6 MMR Modified Modified Read must have T6Options field This is a TIFF Extension value Default 1 and is not applicable field must be specified NOTE Baseline TIFF permits use of value 2 for Modified Huffman encoding but data is presented in a form which does not use EOLs and so TIFF for facsimile uses Compression 3 instead See Sections 4 4 4 4 5 1 and 4 5 2 for more information on compression and encoding FillOrder 266 1 2 SHORT RequiredByTIFFBaseline Profile F readers must be able to read data in both bit orders but the vast majority of facsimile products store data LSB first exactly as it appears on the telephone line 1 Most Significant Bit first 2 Least Significant Bit first ImageWidth 256 SHORT or LONG RequiredByTIFFBaseline This mode supports the following fixed page widths 1728 2592 3456 corresponding to North American Letter and Legal ISO A4 paper sizes 2 48 3 72 4 96 corresponding to ISO B4 paper size and 2432 3648 4864 corresponding to ISO A3 paper size No default must be specified NOTE Historical TIFF F did not include support for the following widths related to higher resolutions 2592 3 72 3648 3456 4 96 and 4864 Historical TIFF F documents also included the following values related to A5 and A6 widths 816 and 1216 Per the most recent version of T 4 A5 and A6 documents are no longer supported in Group 3 facsimile so the related width values are now obsolete See section 4 5 2 for more information on inch metric equivalencies and other implementation details NewSubFileType 254 Bit 1 1 LONG RequiredByTIFFforFAX Bit 1 is 1 if the image is a single page of a multi page document Default no subfile bits on so may not be omitted for fax NOTE Bit 1 is always set to 1 for TIFF F indicating a single page of a multi page image The same bit settings are used when TIFF F is used for a one page fax image See Section 4 4 3 for details on multi page files PhotometricInterpretation 262 1 SHORT RequiredByTIFFBaseline pixel value 1 means black 1 pixel value 1 means white This field allows notation of an inverted or negative image No default must be specified ResolutionUnit 296 2 3 SHORT RequiredByTIFFBaseline The unit of measure for resolution 2 inch 3 centimeter TIFF F has traditionally used inch based measures Default 2 field may be omitted if this is the value SamplesPerPixel 277 1 SHORT RequiredByTIFFBaseline 1 monochrome bilevel in this case see BitsPerSample Default 1 field may be omitted if this is the value XResolution 282 2 2 4 3 4 4 8 RATIONAL RequiredByTIFFBaseline The horizontal resolution of the image is expressed in pixels per resolution unit In pixels inch the allowed values are 2 2 4 3 4 and 4 8 See Section 2 2 2 for inch metric equivalency No default must be specified NOTE The values of 2 and 4 8 have been added to the historical TIFF F values for consistency with T 3 Some existing TIFF F implementations may also support values of 8 pixels cm which is equivalent to 2 4 pixels per inch See section 4 5 2 for information on implementation details YResolution 283 98 1 196 2 3 391 and 4 RATIONAL RequiredByTIFFBaseline The vertical resolution of the image is expressed in pixels per resolution unit In pixels inch the allowed values are 98 1 196 2 3 391 and 4 pixels inch See Section 2 2 2 for inch metric equivalency No default must be specified NOTE The values of 1 2 and 391 have been added to the historical TIFF F values for consistency with T 3 Some existing TIFF F implementations may also support values of 77 and 38 5 cm which are equivalent to 196 and 98 pixels per inch respectively See section 4 5 2 for more information on implementation details NOTE Not all combinations of XResolution YResolution and ImageWidth are legal The following table gives the legal combinations and corresponding paper size T 3 XResolution x YResolution ImageWidth 2 x1 2 4x98 2 x2 2 4x196 1728 2 48 2432 2 4x391 3 x 3 2592 3 72 3648 4 8 x 391 4 x 4 3456 4 96 4864 Letter A4 B4 A3 Legal Paper Size 4 2 2 Extension fields T4Options 292 Bit or 1 Bit 1 Bit 2 or 1 LONG RequiredTIFFExtension when Compression 3 T4Options was also known as Group3Options in a prior version of TIFF Bit 1 indicates MR encoding indicates MH encoding Bit 1 must be Bit 2 1 indicates that EOLs are byte aligned EOLs not byte aligned Default is all bits are applies when MH encoding is used and EOLs are not byte aligned EOLs See Section 3 2 2 The T4Options field is required when the Compression field has a value of 3 This field specifies the encoding used MH or MR and whether the EOL codes are byte aligned or not If they are byte aligned then fill bits have been added as necessary so that the End of Line EOL codes always end on byte boundaries See Sections 3 4 4 5 3 and 4 5 4 for details T6Options 293 Bit Bit 1 LONG RequiredTIFFExtension when Compression 4 Used to indicate parameterization of 2D Modified Modified Read compression T6Options was also known as Group4Options in a prior version of TIFF Bit must be Bit 1 indicates uncompressed data mode is not allowed 1 indicates uncompressed data is allowed see TIFF Default is all bits For FAX the field must be present and have the value The use of uncompressed data where compression would expand the data size is not allowed for FAX NOTE MMR compressed data is two dimensional and does not use EOLs Each MMR encoded image MUST include an end of facsimile block EOFB code at the end of each coded strip see Section 4 5 6 4 2 3 New fields None 4 3 Recommended TIFF fields 4 3 1 Baseline fields See Section 2 2 3 4 3 2 Extension fields See Section 2 2 3 4 3 3 New fields Three new optional fields used in the original TIFF F description to describe page quality are defined in this specification The information contained in these fields is usually obtained from receiving facsimile hardware if applicable They SHOULD NOT be used in writing TIFF F files for facsimile image data that is error corrected or otherwise guaranteed not to have coding errors Some applications need to understand exactly the error content of the data For example a CAD program might wish to verify that a file has a low error level before importing it into a high accuracy document Because Group 3 facsimile devices do not necessarily perform error correction on the image data the quality of a received page must be inferred from the pixel count of decoded scan lines A good scan line is defined as a line that when decoded contains the correct number of pixels Conversely a bad scan line is defined as a line that when decoded comprises an incorrect number of pixels BadFaxLines 326 SHORT or LONG The number of bad scan lines encountered by the facsimile device during reception A bad scanline is defined as a scanline that when decoded comprises an incorrect number of pixels Note that PercentBad BadFaxLines ImageLength 1 No default CleanFaxData 327 1 2 SHORT Indicates if bad lines encountered during reception are stored in the data or if bad lines have been replaced by the receiver No bad lines 1 bad lines exist but were regenerated by the receiver 2 bad lines exist but have not been regenerated No default NOTE Many facsimile devices do not actually output bad lines Instead the previous good line is repeated in place of a bad line Although this substitution known as line regeneration results in a visual improvement to the image the data is nevertheless corrupted The CleanFaxData field describes the error content of the data That is when the BadFaxLines and ImageLength fields indicate that the facsimile device encountered lines with an incorrect number of pixels during reception the CleanFaxData field indicates whether these bad lines are actually still in the data or if the receiving facsimile device replaced them with regenerated lines ConsecutiveBadFaxLines 328 LONG or SHORT Maximum number of consecutive bad scanlines received The BadFaxLines field indicates only the quantity of bad lines No Default NOTE The BadFaxLines and ImageLength data indicate only the quantity of bad lines The ConsecutiveBadFaxLines field is an indicator of the distribution of bad lines and may therefore be a better general indicator of perceived image quality See Section 4 4 5 for examples of the use of these fields 4 4 Technical Implementation Issues 4 4 1 Strips In general TIFF files divide an image into strips also known as bands Each strip contains a few scanlines of the image By using strips a TIFF reader need not load the entire image into memory thus enabling it to fetch and decompress small random portions of the image as necessary The number of scanlines in a strip is described by the RowsPerStrip value and the number of bytes in the strip after compression by the StripByteCount value The location in the TIFF file of each strip is given by the StripOffsets values Strip size is application dependent The recommended approach for multi page TIFF F images is to represent each page as a single strip Existing TIFF F usage is typically one strip per page in multi page TIFF F files See Sections 2 1 2 and 2 1 3 4 4 2 Bit Order The current TIFF specification TIFF does not require a Baseline TIFF reader to support FillOrder 2 i e lowest numbered 1 bit pixel in the least significant bit of a byte It further recommends that FillOrder 2 be used only in special purpose applications Facsimile data appears on the phone line in bit reversed order relative to its description in ITU T Recommendation T 4 Therefore a wide majority of facsimile applications choose this natural order for data in a file Nevertheless TIFF F readers must be able to read data in both bit orders and support FillOrder values of 1 and 2 4 4 3 Multi Page Many existing applications already read TIFF F like files but do not support the multi page field Since a multi page format greatly simplifies file management in fax application software TIFF F specifies multi page documents NewSubfileType 2 as the standard case It is recommended that applications export multiple page TIFF F files without manipulating fields and values Historically some TIFF F writers have attempted to produce individual single page TIFF F files with modified NewSubFileType and PageNumber page one of one values for export purposes However there is no easy way to link such multiple single page files together into a logical multiple page document so that this practice is not recommended 4 4 4 Compression In Group 3 facsimile there are three compression methods which had been standardized as of 1994 and are in common use The ITU T T 4 Recommendation T 4 defines a one dimensional compression method known as Modified Huffman MH and a two dimensional method known as Modified READ MR READ is short for Relative Element Address Designate In 1984 a somewhat more efficient compression method known as Modified Modified READ MMR was defined in the ITU T T 6 Recommendation T 6 MMR was originally defined for use with Group 4 facsimile so that this compression method has been commonly called Group 4 compression In 1991 the MMR method was approved for use in Group 3 facsimile and has since been widely utilized TIFF F supports these three compression methods The most common practice is the one dimensional Modified Huffman MH compression method This is specified by setting the Compression field value to 3 and then setting bit of the T4Options field to Alternatively the two dimensional Modified READ MR method which is much less frequently used in historical TIFF F implementations may be selected by setting bit of the T4Options field to 1 The value of Bit 2 in this field is determined by the use of fill bits Depending upon the application the more efficient two dimensional Modified Modified Read MMR compression method from T 6 may be selected by setting the Compression field value to 4 and then setting the first two bits and all unused bits of the T6Options field to More information to aid the implementor in making a compression selection is contained in Section 4 5 2 Baseline TIFF also permits use of Compression 2 to specify Modified Huffman compression but the data does not use EOLs As a result TIFF F uses Compression 3 instead of Compression 2 to specify Modified Huffman compression 4 4 5 Example Use of Page quality Fields Here are examples for writing the CleanFaxData BadFaxLines and ConsecutiveBadFaxLines fields 1 Facsimile hardware does not provide page quality information MUST NOT write page quality fields 2 Facsimile hardware provides page quality information but reports no bad lines Write only BadFaxLines 3 Facsimile hardware provides page quality information and reports bad lines Write both BadFaxLines and ConsecutiveBadFaxLines Also write CleanFaxData 1 or 2 if the hardware s regeneration capability is known 4 Source image data stream is error corrected or otherwise guaranteed to be error free such as for a computer generated file SHOULD NOT write page quality fields TIFF Writers SHOULD only generate these fields when the image has been generated from a fax image data stream where error correction e g Group 3 Error Correction Mode was not used 4 4 6 Practical Guidelines for Writing and Reading Multi Page TIFF F Files Traditionally historical TIFF F has required readers and writers to be able to handle multi page TIFF F files Based on the experience of various TIFF F implementors it has been seen that the implementation of TIFF F can be greatly simplified if certain practical guidelines are followed when writing multi page TIFF F files The structure for a multi page TIFF F file will include one IFD per page of the document In this case this IFD will define the attributes for a single page A second simplifying guideline is that the writer of TIFF F files SHOULD present IFDs in the same order as the actual sequence of pages The pages are numbered within TIFF F beginning with page as the first page and then ascending i e 1 2 However any field values over 4 bytes will be stored separately from the IFD TIFF F readers SHOULD expect IFDs to be presented in page order but be able to handle exceptions Per TIFF the exact placement of image data is not specified However the strip offsets for each strip of image are defined from within each IFD Where possible another simplifying guideline for the writing of TIFF F files is to specify that the image data for each page of a multi page document SHOULD be contained within a single strip i e one image strip per fax page The use of a single image strip per page is very useful for applications such as store and forward messaging where the file is usually prepared in advance of the transmission but other assumptions may apply for the size of the image strip for applications which require the use of streaming techniques see section 4 4 7 In the event a different image strip size guideline has been used e g constant size for image strips that may be less than the page size this will immediately be evident from the values offsets of the fields that are related to strips A third simplifying guideline is that each IFD SHOULD be placed in the TIFF F file structure at a point which precedes the image which the IFD describes In addition a fourth simplifying guideline for TIFF F writers and readers is to place the actual image data in a physical order within the TIFF file structure which is consistent with the logical page order In practice TIFF F readers will need to use the strip offsets to find the exact physical location of the image data whether or not it is presented in logical page order If the image data is stored in multiple strips then the strips SHOULD occur in the file in the same order that the data they contain occurs in the facsimile transmission starting at the top of the page TIFF F writers MAY make a fifth simplifying guideline in which the IFD the value data and the image data to which the IFD has offsets precede the next image IFD However this guideline has been relaxed writers MAY rather than SHOULD use it compared to the other guidelines given here to reflect past practices for TIFF F In the case of the minimal mode which is also the minimal subset of Profile S the SHOULD s and MAY s of these guidelines become SHALL s see Section 3 5 So a TIFF F file which is structured using the guidelines of this section will essentially be composed of a linked list of IFDs presented in ascending page order which in turn each point to a single page of image data one strip per page where the pages of image data are also placed in a logical page order within the TIFF F file structure The pages of image data may themselves be stored in a contiguous manner at the option of the implementor 4 4 7 Use of TIFF F for Streaming Applications TIFF F has historically been used for handling fax image files in applications such as store and forward messaging where the entire size of the file is known in advance While TIFF F may also possibly be used as a file format for cases such as streaming applications assumptions may be required that differ from those provided in this section e g the entire size and number of pages within the image are not known in advance As a result a definition for the streaming application of TIFF F is beyond the scope of this document 4 5 Implementation Warnings 4 5 1 Uncompressed data TIFF F requires the ability to read and write at least one dimensional T 4 Huffman compressed data Uncompressed data is not allowed This means that the Uncompressed bit in T4Options or T6Options must be set to 4 5 2 Encoding and Resolution Since two dimensional encoding is not required for Group 3 compatibility some historic TIFF F readers have not been able to read such files The minimum subset of TIFF F REQUIRES support for one dimensional Modified Huffman files so this choice maximizes portability However implementors seeking greater efficiency SHOULD use T 6 MMR compression when writing TIFF F files Some TIFF F readers will also support two dimensional Modified READ files Implementors that wish to have the maximum flexibility in reading TIFF F files should support all three of these compression methods MH MR and MMR For the case of resolution almost all facsimile products support both standard 98 dpi vertical resolution and fine 196 dpi resolution Therefore fine resolution files are quite portable in the real world In 1993 the ITU T added support for higher resolutions in the T 3 recommendation including 2 x 2 3 x 3 4 x 4 in dots per inch based units At the same time support was added for metric dimensions which are equivalent to the following inch based resolutions 391v x 2 4h and 391v x 4 8h Therefore the full set of inch based equivalents of the new resolutions are supported in the TIFF F writer since they may appear in some image data streams received from Group 3 facsimile devices However many facsimile terminals and older versions of TIFF F readers are likely to not support the use of these higher resolutions Per T 4 it is permissible for applications to treat the following XResolution values as being equivalent 2 4 2 and 4 4 8 In a similar respect the following YResolution values may also be treated as being equivalent 98 1 196 2 and 391 4 These equivalencies were allowed by T 4 to permit conversions between inch and metric based facsimile terminals In a similar respect the optional support of metric based resolutions in the TIFF F reader i e 77 x 38 5 cm is included for completeness since they are used in some legacy TIFF F applications but this use is not recommended for the creation of TIFF F files by a writer 4 5 3 EOL byte aligned The historical convention for TIFF F has been that all EOLs in Modified Huffman or Modified READ data must be byte aligned However Baseline TIFF has permitted use of non byte aligned EOLs by default so that a large percentage of TIFF F reader implementations support both conventions Therefore the minimum subset of TIFF F or Profile S as defined in Section 3 includes support for both byte aligned and non byte aligned EOLs see Section 3 2 2 An EOL is said to be byte aligned when Fill bits have been added as necessary before EOL codes such that EOL always ends on a byte boundary thus ensuring an EOL sequence of a one byte preceded by a zero nibble xxxx 1 Modified Huffman encoding encodes bits not bytes This means that the end of line token may end in the middle of a byte In byte alignment extra zero bits Fill are added so that the first bit of data following an EOL begins on a byte boundary In effect byte alignment relieves application software of the burden of bit shifting every byte while parsing scan lines for line oriented image manipulation such as writing a TIFF file For Modified READ encoding each line is terminated by an EOL and a one bit tag bit Per T 4 the value of the tag bit is if the next line contains two dimensional data and 1 if the next line is a reference line To maintain byte alignment fill bits are added before the EOL tag bit sequence so that the first bit of data following an MR tag bit begins on a byte boundary 4 5 4 EOL As illustrated in FIGURE 1 T 4 in T 4 facsimile documents encoded with Modified Huffman begin with an EOL which in TIFF F may be byte aligned The last line of the image is not terminated by an EOL In a similar respect images encoded with Modified READ two dimensional encoding begin with an EOL followed by a tag bit 4 5 5 RTC Exclusion Aside from EOLs TIFF F files have historically only contained image data This means that applications which wish to maintain strict conformance with the rules in TIFF and compatibility with historical TIFF F SHOULD NOT include the Return To Control sequence RTC consisting of 6 consecutive EOLs when writing TIFF F files However applications which need to support transparency of T 4 image data MAY include RTCs if the flag settings of the T4Options field are set for non byte aligned MH or MR image data Implementors of TIFF readers should also be aware that there are some existing TIFF F implementations which include the RTC sequence in MH MR image data Therefore TIFF F readers MUST be able to process files which do not include RTCs and SHOULD be able to process files which do include RTCs 4 5 6 Use of EOFB for T 6 Compressed Images TIFF F pages which are encoded with the T 6 Modified Modified READ compression method MUST include an end of facsimile block EOFB code at the end of each coded strip Per TIFF the EOFB code is followed by pad bits as needed to align on a byte boundary TIFF readers SHOULD ignore any bits other than pad bits beyond the EOFB 4 6 Example Use of TIFF F The Profile F of TIFF i e TIFF F content is a secondary component of the VPIM Message as defined in VPIM2 Voice messaging systems can often handle fax store and forward capabilities in addition to tradi tional voice message store and forward functions As a result TIFF F fax messages can optionally be sent between compliant VPIM systems and may be rejected if the recipient system cannot deal with fax Refer to the VPIM Specification for proper usage of this content 4 7 Extended Black and white Fax Mode Summary Recommended fields are shown with an asterisk Required fields or values are shown with a double asterisk If the double asterisk is on the field name then all the listed values are required of implementations if the double asterisks are in the Values column then only the values suffixed with a double asterisk are required of implementations Baseline Fields Values BitsPerSample 1 Compression 3 1D Modified Huffman and 2D Modified Read coding 4 2D Modified Modified Read coding DateTime ASCII date time in 24 hour format YYYY MM DD HH MM SS FillOrder 1 most significant bit first 2 least significant bit first ImageDescription ASCII A string describing the contents of the image ImageWidth 1728 2 48 2432 2592 3 72 3456 3648 4 96 4864 ImageLength n total number of scanlines in image NewSubFileType 2 Bit 1 identifies single page of a multi page document Orientation 1 8 Default 1 PhotometricInterpretation pixel value 1 means black 1 pixel value 1 means white ResolutionUnit 2 inch 3 centimeter RowsPerStrip n number of scanlines per TIFF strip SamplesPerPixel 1 Software ASCII name release number of creator software StripByteCounts n number or bytes in TIFF strip StripOffsets n offset from beginning of file to each TIFF strip XResolution 2 2 4 3 4 4 8 written in pixels inch YResolution 98 196 1 2 3 391 4 written in pixels inch Extension Fields T4Options required if Compression is Modified Huffman EOLs are not byte aligned 1 required if Compression is 2D Modified Read EOLs are not byte aligned 4 required if Compression is Modified Huffman EOLs are byte aligned T4Options continued 5 required if Compression is 2D Modified Read EOLs are byte aligned T6Options required if Compression is 2D Modified Modified Read DocumentName ASCII name of scanned document PageNumber n m page number followed by total page count New Fields BadFaxLines number of bad scanlines encountered during reception CleanFaxData no bad lines 1 bad lines exist but were regenerated by receiver 2 bad lines exist but have not been regenerated ConsecutiveBadFaxLines Max number of consecutive bad lines received ZVON RFC Repository RFC 23 1 Frontpage Contents Prev Next RFC index RFC searchDownload as zip tar gz", "_id": "http://www.ics.uci.edu/~dan/class/267/rfc2301/chapter4.html", "title": "zvon - rfc 2301 - extended black-and-white fax mode", "html": "<html>\n   <head>\n      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n   \n      <title>Zvon - RFC 2301 - Extended Black-and-White fax mode</title>\n      <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n   </head>\n   <body>\n      <table width=\"100%\" class=\"hangingMenu\">\n         <tr>\n            <td style=\"text-align:right\"><a class=\"naviBlack\" target=\"_top\" href=\"http://www.zvon.org\">ZVON</a> &gt; <a class=\"naviBlack\" target=\"_top\" href=\"http://zvon.org/tmRFC/RFC_share/Output/index.html\">RFC Repository</a> &gt; <b>RFC 2301</b></td>\n         </tr>\n      </table>\n      <table class=\"bar\" width=\"750px\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n         <tr>\n            <td class=\"naviBlue\"><a class=\"naviWhite\" target=\"_top\" href=\"index.html\"> Frontpage </a> / <a class=\"naviWhite\" href=\"longContents.html\"> Contents </a></td>\n         </tr>\n      </table>\n      <table class=\"hangingMenu\" border=\"0\" cellpadding=\"1\" cellspacing=\"0\" width=\"100%\">\n         <tr>\n            <td><a class=\"naviBlack\" href=\"chapter3.html\">Prev</a> | <a class=\"naviBlack\" href=\"chapter5.html\">Next</a> | <a class=\"naviBlack\" target=\"_top\" href=\"http://zvon.org/tmRFC/RFC_share/Output/index.html\">RFC index</a> | <a class=\"naviBlack\" target=\"mainWindow\" href=\"http://zvon.org/tmRFC/RFC_share/PHP/titleSearch.php\">RFC search</a></td>\n            <td><a class=\"naviBlack\" target=\"mainWindow\" href=\"http://zvon.org/tmRFC/RFC_share/PHP/download.php?rfc=2301\">Download as zip/tar.gz</a></td>\n         </tr>\n      </table>\n      <h2>4. Extended Black-and-White fax mode</h2>\n      <p>\n            This section defines the extended black-and-white mode or Profile F\n            of TIFF for facsimile. It provides a standard definition of what has\n            historically been known as TIFF Class F and now TIFF-F. In doing so,\n            it aligns this mode with current ITU-T Recommendations for black-\n            and-white fax and with existing industry practice. Implementations of\n            this profile include implementations of Profile S.\n         \n      </p>\n      <p>\n            This section describes extensions to the minimal interchange set of\n            fields (Profile S) that provide a richer set of black-and-white\n            capabilities. The fields and values described in this section are a\n            superset of the fields and values defined for the minimal interchange\n            set in Section 3. In addition to the MH encoding, Modified READ (MR)\n            and Modified Modified READ (MMR) encoding as described in [<a title=\"ITU-T Recommendation T.4, Standardization of group 3 facsimile apparatus for document transmission, October 1997\" href=\"chapter11.html#T.4\">T.4</a>] and\n            [<a title=\"ITU-T Recommendation T.6, Facsimile coding schemes and coding control functions for group 4 facsimile apparatus, November 1988\" href=\"chapter11.html#T.6\">T.6</a>] are supported.\n         \n      </p>\n      <p>\n            Section 4.1 gives an overview of TIFF-F. Section 4.2 describes the\n            TIFF fields that SHALL be used in this mode. Section 4.3 describes\n            the fields that MAY be used in this mode. In the spirit of the\n            original TIFF-F specification, Sections 4.4 and 4.5 discuss technical\n            implementation issues and warnings. Section 4.6 gives an example use\n            of TIFF-F. Section 4.7 gives a summary of the required and\n            recommended fields and their values.\n         \n      </p><a name=\"sub1\"></a><h3>4.1. TIFF-F Overview</h3>\n      \n      \n      <p>\n            Though it has been in common usage for many years, TIFF-F has\n            previously never been documented in the form of a standard.  An\n            informal TIFF-F document was originally created by a small group of\n            fax experts led by Joe Campbell.  The existence of TIFF-F is noted in\n            [<a title=\"Tag Image File Format, Revision 6.0, Adobe Developers Association, June 3, 1992, ftp://ftp.adobe.com/pub/adobe/devrelations/ devtechnotes/pdffiles/tiff6.pdf The TIFF 6.0 specification dated June 3, 1\" href=\"chapter11.html#TIFF\">TIFF</a>] but it is not defined.  This document serves as the formal\n            definition of the F application of [<a title=\"Tag Image File Format, Revision 6.0, Adobe Developers Association, June 3, 1992, ftp://ftp.adobe.com/pub/adobe/devrelations/ devtechnotes/pdffiles/tiff6.pdf The TIFF 6.0 specification dated June 3, 1\" href=\"chapter11.html#TIFF\">TIFF</a>] for Internet applications.\n            For ease of reference, the term TIFF-F will be used throughout this\n            document as a shorthand for the extended black-and-white mode or\n            profile of TIFF for facsimile.\n         \n      </p>\n      <p>\n            Up until the TIFF 6.0 specification, TIFF supported various \"Classes\"\n            which defined the use of TIFF for various applications. Classes were\n            used to support specific applications. In this spirit, TIFF-F has\n            been known historically as \"TIFF Class F\".  Previous informal TIFF-F\n            documents [<a title=\"TIFF Class F specification, Apr 28, 1990, ftp://ftp.faximum.com/pub/documents/tiff_f.txt\" href=\"chapter11.html#TIFF-F0\">TIFF-F0</a>] used the \"Class F\" terminology.  As of TIFF 6.0\n            [<a title=\"Tag Image File Format, Revision 6.0, Adobe Developers Association, June 3, 1992, ftp://ftp.adobe.com/pub/adobe/devrelations/ devtechnotes/pdffiles/tiff6.pdf The TIFF 6.0 specification dated June 3, 1\" href=\"chapter11.html#TIFF\">TIFF</a>], the TIFF Class concept has been eliminated in favor of the\n            concept of Baseline TIFF.  Therefore, this document updates the\n            definition of TIFF-F as the F profile of TIFF for facsimile, by using\n            Baseline  TIFF as defined in [<a title=\"Tag Image File Format, Revision 6.0, Adobe Developers Association, June 3, 1992, ftp://ftp.adobe.com/pub/adobe/devrelations/ devtechnotes/pdffiles/tiff6.pdf The TIFF 6.0 specification dated June 3, 1\" href=\"chapter11.html#TIFF\">TIFF</a>] as the starting point and then\n            adding the TIFF extensions to Baseline TIFF which apply for TIFF-F.\n            In almost all  cases, the resulting definition of TIFF-F fields and\n            values remains  consistent with those used historically in earlier\n            definitions of TIFF  Class F.  Where some of the values for fields\n            have been updated to provide more precise conformance with the ITU-T\n            [<a title=\"ITU-T Recommendation T.4, Standardization of group 3 facsimile apparatus for document transmission, October 1997\" href=\"chapter11.html#T.4\">T.4</a>] and [<a title=\"ITU-T Recommendation T.30 - Procedures for Document Facsimile Transmission in the General Switched Telephone Network, June 1996\" href=\"chapter11.html#T.30\">T.30</a>] fax recommendations, these differences are noted.\n         \n      </p>\n      <a name=\"sub2\"></a><h3>4.2. Required TIFF Fields</h3>\n      \n      \n      <p>\n            This section lists the required fields and the values they must have\n            to be ITU-compatible. Besides the fields listed in Section 2.2.1, the\n            extended black-and-white fax mode SHALL use the following fields.\n         \n      </p>\n      <a name=\"sub2sub1\"></a><h3>4.2.1. Baseline fields</h3>\n      \n      <pre>\n\nBitsPerSample(258) = 1.                                            SHORT\n    RequiredByTIFFBaseline\n    Binary data only.\n    Default = 1 (field may be omitted if this is the value)\n\nCompression(259) = 3, 4.                                           SHORT\n    RequiredByTIFFBaseline\n    3 = 1- or 2- dimensional coding, must have T4Options field This is\n    a TIFF Extension value [<a title=\"Tag Image File Format, Revision 6.0, Adobe Developers Association, June 3, 1992, ftp://ftp.adobe.com/pub/adobe/devrelations/ devtechnotes/pdffiles/tiff6.pdf The TIFF 6.0 specification dated June 3, 1\" href=\"chapter11.html#TIFF\">TIFF</a>].\n    4 = 2-dimensional coding, ITU-T Rec. T.6 (MMR - Modified Modified\n    Read, must have T6Options field)) This is a TIFF Extension value.\n    Default = 1 (and is not applicable; field must be specified)\n\n   NOTE: Baseline TIFF permits use of value 2 for Modified Huffman\n   encoding, but data is presented in a form which does not use EOLs,\n   and so TIFF for facsimile uses Compression=3 instead. See Sections\n   4.4.4, 4.5.1 and 4.5.2 for more information on compression and\n   encoding.\n\nFillOrder(266) = 1 , 2.                                            SHORT\n    RequiredByTIFFBaseline\n    Profile F readers must be able to read data in both bit orders,\n    but the vast majority of facsimile products store data LSB\n    first, exactly as it appears on the telephone line.\n              1 = Most Significant Bit first.\n              2 = Least Significant Bit first\n\nImageWidth(256)                                            SHORT or LONG\n    RequiredByTIFFBaseline\n    This mode supports the following fixed page widths: 1728, 2592, 3456\n    (corresponding to North American Letter and Legal, ISO A4 paper\n    sizes), 2048, 3072, 4096 (corresponding to ISO B4 paper size), and\n    2432, 3648, 4864 (corresponding to ISO A3 paper size).\n    No default; must be specified\n\n   NOTE: Historical TIFF-F did not include support for the following\n   widths related to higher resolutions: 2592, 3072, 3648, 3456, 4096\n   and 4864. Historical TIFF-F documents also included the following\n   values related to A5 and A6 widths: 816 and 1216. Per the most recent\n\n   version of [<a title=\"ITU-T Recommendation T.4, Standardization of group 3 facsimile apparatus for document transmission, October 1997\" href=\"chapter11.html#T.4\">T.4</a>], A5 and A6 documents are no longer supported in\n   Group 3 facsimile, so the related width values are now obsolete. See\n   section 4.5.2 for more information on inch/metric equivalencies and\n   other implementation details.\n\nNewSubFileType(254) = (Bit 1=1).                                    LONG\n    RequiredByTIFFforFAX\n    Bit 1 is 1 if the image is a single page of a multi-page document.\n    Default = 0 (no subfile bits on, so may not be omitted for fax)\n\n   NOTE: Bit 1 is always set to 1 for TIFF-F, indicating a single page\n   of a multi-page image. The same bit settings are used when TIFF-F is\n   used for a one page fax image. See Section 4.4.3 for details on\n   multi-page files.\n\nPhotometricInterpretation(262) = 0, 1.                             SHORT\n    RequiredByTIFFBaseline\n    0 = pixel value 1 means black, 1 = pixel value 1 means white.\n    This field allows notation of an inverted or negative image.\n    No default, must be specified\n\nResolutionUnit(296) = 2, 3.                                        SHORT\n    RequiredByTIFFBaseline\n    The unit of measure for resolution. 2 = inch, 3 = centimeter; TIFF-F\n    has traditionally used inch-based measures.\n    Default = 2 (field may be omitted if this is the value)\n\nSamplesPerPixel(277) = 1.                                          SHORT\n    RequiredByTIFFBaseline\n    1 = monochrome, bilevel in this case (see BitsPerSample)\n    Default =1 (field may be omitted if this is the value)\n\nXResolution(282) = 200, 204, 300, 400, 408                      RATIONAL\n    RequiredByTIFFBaseline\n    The horizontal resolution of the image is expressed in pixels per\n    resolution unit. In pixels/inch, the allowed values are: 200, 204,\n    300, 400, and 408. See Section 2.2.2 for inch-metric equivalency.\n    No default, must be specified\n\n   NOTE: The values of 200 and 408 have been added to the historical\n   TIFF-F values, for consistency with [<a title=\"ITU-T Recommendation T.30 - Procedures for Document Facsimile Transmission in the General Switched Telephone Network, June 1996\" href=\"chapter11.html#T.30\">T.30</a>]. Some existing TIFF-F\n   implementations may also support values of 80 pixels/cm, which is\n   equivalent to 204 pixels per inch. See section 4.5.2 for information\n   on implementation details.\n\nYResolution(283) = 98, 100, 196, 200, 300, 391, and 400       RATIONAL\n    RequiredByTIFFBaseline\n    The vertical resolution of the image is expressed in pixels per\n    resolution unit. In pixels/inch, the allowed values are: 98, 100,\n    196, 200, 300, 391, and 400 pixels/inch.\n    See Section 2.2.2 for inch-metric equivalency.\n    No default, must be specified\n\n   NOTE: The values of 100, 200, and 391 have been added to the\n   historical TIFF-F values, for consistency with [<a title=\"ITU-T Recommendation T.30 - Procedures for Document Facsimile Transmission in the General Switched Telephone Network, June 1996\" href=\"chapter11.html#T.30\">T.30</a>].  Some existing\n   TIFF-F implementations may also support values of 77 and 38.5 (cm),\n   which are equivalent to 196 and 98 pixels per inch respectively. See\n   section 4.5.2 for more information on implementation details.\n\n   NOTE: Not all combinations of XResolution, YResolution and ImageWidth\n   are legal. The following table gives the legal combinations and\n   corresponding paper size [<a title=\"ITU-T Recommendation T.30 - Procedures for Document Facsimile Transmission in the General Switched Telephone Network, June 1996\" href=\"chapter11.html#T.30\">T.30</a>].\n\n    +--------------+-----------------+---------------------------+\n    |   XResolution x YResolution    |         ImageWidth        |\n    +--------------+-----------------+---------+--------+--------+\n    |      200x100, 204x98           |         |        |        |\n    |      200x200, 204x196          |  1728   |  2048  |  2432  |\n    |           204x391              |         |        |        |\n    +--------------+-----------------+---------+--------+--------+\n    |          300 x 300             |  2592   |  3072  |  3648  |\n    +--------------+-----------------+---------+--------+--------+\n    |     408 x 391, 400 x 400       |  3456   |  4096  |  4864  |\n    +--------------+-----------------+---------+--------+--------+\n                                     |Letter,A4|   B4   |   A3   |\n                                     |  Legal  |        |        |\n                                     +---------+--------+--------+\n                                     |         Paper Size        |\n                                     +---------------------------+\n</pre>\n      \n      <a name=\"sub2sub2\"></a><h3>4.2.2. Extension fields</h3>\n      \n      <pre>\nT4Options(292) = (Bit 0 = 0 or 1, Bit 1 = 0, Bit 2 = 0 or 1)        LONG\n    RequiredTIFFExtension (when Compression = 3)\n    T4Options was also known as Group3Options in a prior version of\n    [<a title=\"Tag Image File Format, Revision 6.0, Adobe Developers Association, June 3, 1992, ftp://ftp.adobe.com/pub/adobe/devrelations/ devtechnotes/pdffiles/tiff6.pdf The TIFF 6.0 specification dated June 3, 1\" href=\"chapter11.html#TIFF\">TIFF</a>].\n    Bit 0 = 1 indicates MR encoding, = 0 indicates MH encoding.\n    Bit 1 must be 0\n    Bit 2 = 1 indicates that EOLs are byte aligned, = 0 EOLs not byte\n    aligned\n    Default is all bits are 0 (applies when MH encoding is used and EOLs\n    are not byte aligned EOLs) (See Section 3.2.2.)\n    The T4Options field is required when the Compression field has a\n    value of 3. This field specifies the encoding used (MH or MR) and\n    whether the EOL codes are byte-aligned or not. If they are byte\n    aligned, then fill bits have been added as necessary so that the End\n    of Line (EOL) codes always end on byte boundaries See Sections 3.4,\n    4.5.3 and 4.5.4 for details.\n\nT6Options(293) = (Bit 0 = 0, Bit 1 = 0). LONG\n    RequiredTIFFExtension (when Compression = 4)\n    Used to indicate parameterization of 2D Modified Modified Read\n    compression. T6Options was also known as Group4Options in a prior\n    version of [<a title=\"Tag Image File Format, Revision 6.0, Adobe Developers Association, June 3, 1992, ftp://ftp.adobe.com/pub/adobe/devrelations/ devtechnotes/pdffiles/tiff6.pdf The TIFF 6.0 specification dated June 3, 1\" href=\"chapter11.html#TIFF\">TIFF</a>].\n    Bit 0 must be 0.\n    Bit 1 = 0 indicates uncompressed data mode is not allowed; = 1\n    indicates uncompressed data is allowed (see [<a title=\"Tag Image File Format, Revision 6.0, Adobe Developers Association, June 3, 1992, ftp://ftp.adobe.com/pub/adobe/devrelations/ devtechnotes/pdffiles/tiff6.pdf The TIFF 6.0 specification dated June 3, 1\" href=\"chapter11.html#TIFF\">TIFF</a>]).\n    Default is all bits 0. For FAX, the field must be present and have\n    the value 0. The use of uncompressed data where compression would\n    expand the data size is not allowed for FAX.\n\n   NOTE: MMR compressed data is two-dimensional and does not use EOLs.\n   Each MMR encoded image MUST include an \"end-of-facsimile-block\"\n   (EOFB) code at the end of each coded strip; see Section 4.5.6.\n</pre>\n      \n      <a name=\"sub2sub3\"></a><h3>4.2.3. New fields</h3>\n      \n      \n      <pre>\n   None.\n</pre>\n      \n      <a name=\"sub3\"></a><h3>4.3. Recommended TIFF fields</h3>\n      \n      <a name=\"sub3sub1\"></a><h3>4.3.1. Baseline fields</h3>\n      \n      <pre>\n   See Section 2.2.3.\n</pre>\n      \n      <a name=\"sub3sub2\"></a><h3>4.3.2. Extension fields</h3>\n      \n      <pre>\n   See Section 2.2.3.\n</pre>\n      \n      <a name=\"sub3sub3\"></a><h3>4.3.3. New fields</h3>\n      \n      <pre>\n   Three new, optional fields, used in the original TIFF-F description\n   to describe page quality, are defined in this specification.  The\n   information contained in these fields is usually obtained from\n   receiving facsimile hardware (if applicable). They SHOULD NOT be used\n   in writing TIFF-F files for facsimile image data that is error\n   corrected or otherwise guaranteed not to have coding errors. Some\n   applications need to understand exactly the error content of the\n   data.  For example, a CAD program might wish to verify that a  file\n   has a low error level before importing it into a high-accuracy\n   document. Because Group 3 facsimile devices do not necessarily\n   perform error correction on the image data, the quality of a received\n   page must be inferred from the pixel count of decoded scan lines. A\n   \"good\" scan line is defined as a line that, when decoded, contains\n   the correct number of pixels. Conversely, a \"bad\" scan line is\n   defined as a line that, when decoded, comprises an incorrect number\n   of pixels.\n\nBadFaxLines(326)                                           SHORT or LONG\n    The number of \"bad\" scan lines encountered by the facsimile device\n    during reception. A \"bad\" scanline is defined as a scanline that,\n    when decoded, comprises an incorrect number of pixels. Note that\n    PercentBad = (BadFaxLines/ImageLength) * 100\n    No default.\n\nCleanFaxData(327) = 0, 1, 2.                                       SHORT\n    Indicates if \"bad\" lines encountered during reception are stored in\n    the data, or if \"bad\" lines have been replaced by the receiver.\n    0 = No \"bad\" lines\n    1 = \"bad\" lines exist, but were regenerated by the receiver,\n    2 = \"bad\" lines exist, but have not been regenerated.\n    No default.\n\n   NOTE: Many facsimile devices do not actually output bad lines.\n   Instead, the previous good line is repeated in place of a bad line.\n   Although this substitution, known as line regeneration, results in a\n   visual improvement to the image, the data is nevertheless corrupted.\n   The CleanFaxData field describes the error content of the data.  That\n   is, when the BadFaxLines and ImageLength fields indicate that the\n   facsimile device encountered lines with an incorrect number of pixels\n   during reception, the CleanFaxData field indicates whether these bad\n   lines are actually still in the data or if the receiving facsimile\n   device replaced them with regenerated lines.\n\nConsecutiveBadFaxLines(328)                               LONG or SHORT\n    Maximum number of consecutive \"bad\" scanlines received.  The\n    BadFaxLines field indicates only the quantity of bad lines.\n    No Default.\n\n   NOTE: The BadFaxLines and ImageLength data indicate only the quantity\n   of bad lines. The ConsecutiveBadFaxLines field is an indicator of the\n   distribution of bad lines and may therefore be a better general\n   indicator of perceived image quality. See Section 4.4.5 for examples\n   of the use of these fields.\n</pre>\n      \n      <a name=\"sub4\"></a><h3>4.4. Technical Implementation Issues</h3>\n      \n      <a name=\"sub4sub1\"></a><h3>4.4.1. Strips</h3>\n      \n      <pre>\n   In general, TIFF files divide an image into \"strips,\" also known as\n   \"bands.\"  Each strip contains a few scanlines of the image. By using\n   strips, a TIFF reader need not load the entire image into memory,\n   thus enabling it to fetch and decompress small random portions of the\n   image as necessary.\n\n   The number of scanlines in a strip is described by the RowsPerStrip\n   value and the number of bytes in the strip after compression by the\n   StripByteCount value.  The location in the TIFF file of each strip is\n   given by the StripOffsets values.\n\n   Strip size is application dependent. The recommended approach for\n   multi- page TIFF-F images is to represent each page as a single\n   strip. Existing TIFF-F usage is typically one strip per page in\n   multi-page TIFF-F files. See Sections 2.1.2 and 2.1.3.\n</pre>\n      \n      <a name=\"sub4sub2\"></a><h3>4.4.2. Bit Order</h3>\n      \n      <pre>\n   The current TIFF specification [<a title=\"Tag Image File Format, Revision 6.0, Adobe Developers Association, June 3, 1992, ftp://ftp.adobe.com/pub/adobe/devrelations/ devtechnotes/pdffiles/tiff6.pdf The TIFF 6.0 specification dated June 3, 1\" href=\"chapter11.html#TIFF\">TIFF</a>] does not require a Baseline\n   TIFF reader to support FillOrder=2, i.e. lowest numbered 1-bit pixel\n   in the least significant bit of a byte. It further recommends that\n   FillOrder=2 be used only in special purpose applications.\n\n   Facsimile data appears on the phone line in bit-reversed order\n   relative to its description in ITU-T Recommendation T.4.  Therefore,\n   a wide majority of facsimile applications choose this natural order\n   for data in a file. Nevertheless, TIFF-F readers must be able to read\n   data in both bit orders and support FillOrder values of 1 and 2.\n</pre>\n      \n      <a name=\"sub4sub3\"></a><h3>4.4.3. Multi-Page</h3>\n      \n      <pre>\n   Many existing applications already read TIFF-F-like files, but do not\n   support the multi-page field.  Since a multi-page format greatly\n   simplifies file management in fax application software, TIFF-F\n   specifies multi-page documents (NewSubfileType = 2) as the standard\n   case.\n\n   It is recommended that applications export multiple page TIFF-F files\n   without manipulating fields and values.   Historically, some TIFF-F\n   writers have attempted to produce individual single-page TIFF-F files\n   with modified NewSubFileType and PageNumber (page one-of-one) values\n   for export purposes.  However, there is no easy way to link such\n   multiple single page files together into a logical multiple page\n   document, so that this practice is not recommended.\n</pre>\n      \n      <a name=\"sub4sub4\"></a><h3>4.4.4. Compression</h3>\n      \n      <pre>\n   In Group 3 facsimile, there are three compression methods which had\n   been standardized as of 1994 and are in common use. The ITU-T T.4\n   Recommendation [<a title=\"ITU-T Recommendation T.4, Standardization of group 3 facsimile apparatus for document transmission, October 1997\" href=\"chapter11.html#T.4\">T.4</a>] defines a one-dimensional compression method\n   known as Modified Huffman (MH) and a two-dimensional method known as\n   Modified READ (MR) (READ is short for Relative Element Address\n   Designate). In 1984, a somewhat more efficient compression method\n   known as Modified Modified READ (MMR) was defined in the ITU-T T.6\n   Recommendation [<a title=\"ITU-T Recommendation T.6, Facsimile coding schemes and coding control functions for group 4 facsimile apparatus, November 1988\" href=\"chapter11.html#T.6\">T.6</a>]. MMR was originally defined for use with Group 4\n   facsimile, so that this compression method has been commonly called\n   Group 4 compression.  In 1991, the MMR method was approved for use in\n   Group 3 facsimile and has since been widely utilized.\n\n   TIFF-F supports these three compression methods. The most common\n   practice is the one-dimensional Modified Huffman (MH) compression\n   method.  This is specified by setting the Compression field value to\n   3 and then setting bit 0 of the T4Options field to 0.  Alternatively,\n   the two dimensional Modified READ (MR) method, which is much less\n   frequently used in historical TIFF-F implementations, may be selected\n   by setting bit 0 of the T4Options field to 1.  The value of Bit 2 in\n   this field is determined by the use of fill bits.\n\n   Depending upon the application, the more efficient two-dimensional\n   Modified Modified Read (MMR)compression method from T.6 may be\n   selected by setting the Compression field value to 4 and then setting\n   the first two bits (and all unused bits) of the T6Options field to 0.\n   More information to aid the implementor in making a compression\n   selection is contained in Section 4.5.2.\n\n   Baseline TIFF also permits use of Compression=2 to specify Modified\n   Huffman compression, but the data does not use EOLs. As a result,\n   TIFF-F uses Compression=3 instead of Compression=2 to specify\n   Modified Huffman compression.\n</pre>\n      \n      <a name=\"sub4sub5\"></a><h3>4.4.5. Example Use of Page-quality Fields</h3>\n      \n      <pre>\n   Here are examples for writing the CleanFaxData, BadFaxLines, and\n   ConsecutiveBadFaxLines fields:\n\n     1.  Facsimile hardware does not provide page quality\n         information: MUST NOT write page-quality fields.\n     2.  Facsimile hardware provides page quality information, but\n         reports no bad lines.  Write only BadFaxLines = 0.\n     3.  Facsimile hardware provides page quality information, and\n         reports bad lines.  Write both BadFaxLines and\n         ConsecutiveBadFaxLines.  Also write CleanFaxData = 1 or 2 if\n         the hardware's regeneration capability is known.\n     4.  Source image data stream is error-corrected or otherwise\n         guaranteed to be error-free such as for a computer generated\n         file:  SHOULD NOT write page-quality fields.\n\n   TIFF Writers SHOULD only generate these fields when the image has\n   been generated from a fax image data stream where error correction,\n   e.g. Group 3 Error Correction Mode, was not used.\n</pre>\n      \n      <a name=\"sub4sub6\"></a><h3>4.4.6. Practical Guidelines for Writing and Reading Multi-Page TIFF-F\n            Files\n      </h3>\n      \n      <pre>\n   Traditionally, historical TIFF-F has required readers and writers to\n   be able to handle multi-page TIFF-F files.  Based on the experience\n   of various TIFF-F implementors, it has been seen that the\n   implementation of TIFF-F can be greatly simplified if certain\n   practical guidelines are followed when writing multi-page TIFF-F\n   files.\n\n   The structure for a multi-page TIFF-F file will include one IFD per\n   page of the document.  In this case, this IFD will define the\n   attributes for a single page. A second simplifying guideline is that\n   the writer of TIFF-F files SHOULD present IFDs in the same order as\n   the actual sequence of pages.  (The pages are numbered within TIFF-F\n   beginning with page 0 as the first page and then ascending (i.e. 0,\n   1, 2,...). However, any field values over 4 bytes will be stored\n   separately from the IFD. TIFF-F readers SHOULD expect IFDs to be\n   presented in page order, but be able to handle exceptions.\n\n   Per [<a title=\"Tag Image File Format, Revision 6.0, Adobe Developers Association, June 3, 1992, ftp://ftp.adobe.com/pub/adobe/devrelations/ devtechnotes/pdffiles/tiff6.pdf The TIFF 6.0 specification dated June 3, 1\" href=\"chapter11.html#TIFF\">TIFF</a>], the exact placement of image data is not specified.\n   However, the strip offsets for each strip of image are defined from\n   within each IFD.   Where possible, another simplifying guideline for\n   the writing of TIFF-F files is to specify that the image data for\n   each page of a multi-page document SHOULD be contained within a\n   single strip (i.e. one image strip per fax page). The use of a single\n   image strip per page is very useful for applications such as store\n   and forward messaging, where the file is usually prepared in advance\n   of the transmission, but other assumptions may apply for the size of\n   the image strip for applications which require the use of \"streaming\"\n   techniques (see section 4.4.7).  In the event a different image strip\n   size guideline has been used (e.g. constant size for image strips\n   that may be less than the page size), this will immediately be\n   evident from the values/offsets of the fields that are related to\n   strips.\n\n   A third simplifying guideline is that each IFD SHOULD be placed in\n   the TIFF-F file structure at a point which precedes the image which\n   the IFD describes.\n\n   In addition, a fourth simplifying guideline for TIFF-F writers and\n   readers is to place the actual image data in a physical order within\n   the TIFF file structure which is consistent with the logical page\n   order.  In practice, TIFF-F readers will need to use the strip\n   offsets to find the exact physical location of the image data,\n   whether or not it is presented in logical page order.\n\n   If the image data is stored in multiple strips, then the strips\n   SHOULD occur in the file in the same order that the data they contain\n   occurs in the facsimile transmission, starting at the top of the\n   page.\n\n   TIFF-F writers MAY make a fifth simplifying guideline, in which the\n   IFD, the value data and the image data to which the IFD has offsets\n   precede the next image IFD. However, this guideline has been relaxed\n   (writers MAY rather than SHOULD use it) compared to the other\n   guidelines given here to reflect past practices for TIFF-F.\n\n   In the case of the minimal mode, which is also the minimal subset of\n   Profile S, the SHOULD's and MAY's of these guidelines become SHALL's\n   (see Section 3.5).\n\n   So, a TIFF-F file which is structured using the guidelines of this\n   section will essentially be composed of a linked list of IFDs,\n   presented in ascending page order, which in turn each point to a\n   single page of image data (one strip per page), where the pages of\n   image data are also placed in a logical page order within the TIFF- F\n   file structure.  (The pages of image data may themselves be stored in\n   a contiguous manner, at the option of the implementor).\n</pre>\n      \n      <a name=\"sub4sub7\"></a><h3>4.4.7. Use of TIFF-F for Streaming Applications</h3>\n      \n      <pre>\n   TIFF-F has historically been used for handling fax image files in\n   applications such as store and forward messaging where the entire\n   size of the file is known in advance.  While TIFF-F may also possibly\n   be used as a file format for cases such as streaming applications,\n   assumptions may be required that differ from those provided in this\n   section (e.g., the entire size and number of pages within the image\n   are not known in advance).  As a result, a definition for the\n   streaming application of TIFF-F is beyond the scope of this document.\n</pre>\n      \n      <a name=\"sub5\"></a><h3>4.5. Implementation Warnings</h3>\n      \n      <a name=\"sub5sub1\"></a><h3>4.5.1. Uncompressed data</h3>\n      \n      <pre>\n   TIFF-F requires the ability to read and write at least one-\n   dimensional T.4 Huffman (\"compressed\") data.  Uncompressed data is\n   not allowed. This means that the \"Uncompressed\" bit in T4Options or\n   T6Options must be set to 0.\n</pre>\n      \n      <a name=\"sub5sub2\"></a><h3>4.5.2. Encoding and Resolution</h3>\n      \n      <pre>\n   Since two-dimensional encoding is not required for Group 3\n   compatibility, some historic TIFF-F readers have not been able to\n   read such files.  The minimum subset of TIFF-F REQUIRES support for\n   one dimensional (Modified Huffman) files, so this choice maximizes\n   portability.  However, implementors seeking greater efficiency SHOULD\n   use T.6 MMR compression when writing TIFF-F files.  Some TIFF-F\n   readers will also support two-dimensional Modified READ files.\n   Implementors that wish to have the maximum flexibility in reading\n   TIFF-F files should support all three of these compression methods\n   (MH, MR and MMR).\n\n   For the case of resolution, almost all facsimile products support\n   both standard (98 dpi) vertical resolution  and \"fine\" (196 dpi)\n   resolution. Therefore, fine-resolution files are quite portable in\n   the real world.\n\n   In 1993, the ITU-T added support for higher resolutions in the T.30\n   recommendation including 200 x 200, 300 x 300, 400 x 400 in dots per\n   inch based units.  At the same time, support was added for metric\n   dimensions which are equivalent to the following inch based\n   resolutions: 391v x 204h and 391v x 408h.  Therefore, the full set of\n   inch-based equivalents of the new resolutions are supported in the\n   TIFF-F writer, since they may appear in some image data streams\n   received from Group 3 facsimile devices.  However, many facsimile\n   terminals and older versions of  TIFF-F readers are likely to not\n   support the use of these higher resolutions.\n\n   Per [<a title=\"ITU-T Recommendation T.4, Standardization of group 3 facsimile apparatus for document transmission, October 1997\" href=\"chapter11.html#T.4\">T.4</a>], it is permissible for applications to treat the following\n   XResolution values as being equivalent: &lt;204,200&gt; and &lt;400,408&gt;.  In\n   a similar respect, the following YResolution values may also be\n   treated as being equivalent: &lt;98, 100&gt;, &lt;196, 200&gt;, and &lt;391, 400&gt;.\n   These equivalencies were allowed by [<a title=\"ITU-T Recommendation T.4, Standardization of group 3 facsimile apparatus for document transmission, October 1997\" href=\"chapter11.html#T.4\">T.4</a>] to permit conversions\n   between inch and metric based facsimile terminals.\n\n   In a similar respect, the optional support of metric based\n   resolutions in the TIFF-F reader (i.e. 77 x 38.5 cm) is included for\n   completeness, since they are used in some legacy TIFF-F applications,\n   but this use is not recommended for the creation of TIFF-F files by a\n   writer.\n</pre>\n      \n      <a name=\"sub5sub3\"></a><h3>4.5.3. EOL byte-aligned</h3>\n      \n      <pre>\n   The historical convention for TIFF-F has been that all EOLs in\n   Modified Huffman or Modified READ data must be byte-aligned. However,\n   Baseline TIFF has permitted use of non-byte-aligned EOLs by default,\n   so that a large percentage of TIFF-F reader implementations support\n   both conventions. Therefore, the minimum subset of TIFF-F, or Profile\n   S, as defined in Section 3 includes support for both byte-aligned and\n   non- byte-aligned EOLs; see Section 3.2.2.\n\n   An EOL is said to be byte-aligned when Fill bits have been added as\n   necessary before EOL codes such that EOL always ends on a byte\n   boundary, thus ensuring an  EOL-sequence of a one byte preceded by a\n   zero nibble: xxxx0000 00000001.\n\n   Modified Huffman encoding encodes bits, not bytes. This means that\n   the end-of-line token may end in the middle of a byte. In byte\n   alignment, extra zero bits (Fill) are added so that the first bit of\n   data following an EOL begins on a byte boundary. In effect, byte\n   alignment relieves application software of the burden of bit-\n   shifting every byte while parsing scan lines for line-oriented image\n   manipulation (such as writing a TIFF file).\n\n   For Modified READ encoding, each line is terminated by an EOL and a\n   one bit tag bit.  Per [<a title=\"ITU-T Recommendation T.4, Standardization of group 3 facsimile apparatus for document transmission, October 1997\" href=\"chapter11.html#T.4\">T.4</a>], the value of the tag bit is 0 if the\n   next line contains two dimensional data and 1 if the next line is a\n   reference line.   To maintain byte alignment, fill bits are added\n   before the EOL/tag bit sequence, so that the first bit of data\n   following an MR tag bit begins on a byte boundary.\n</pre>\n      \n      <a name=\"sub5sub4\"></a><h3>4.5.4. EOL</h3>\n      \n      <pre>\n   As illustrated in FIGURE 1/T.4 in [<a title=\"ITU-T Recommendation T.4, Standardization of group 3 facsimile apparatus for document transmission, October 1997\" href=\"chapter11.html#T.4\">T.4</a>], facsimile documents encoded\n   with Modified Huffman begin with an EOL, which in TIFF-F may be byte-\n   aligned. The last line of the image is not terminated by an EOL.  In\n   a similar respect, images encoded with Modified READ two-dimensional\n   encoding begin with an EOL, followed by a tag bit.\n</pre>\n      \n      <a name=\"sub5sub5\"></a><h3>4.5.5. RTC Exclusion</h3>\n      \n      <pre>\n   Aside from EOLs, TIFF-F files have historically only contained image\n   data. This means that applications which wish to maintain strict\n   conformance with the rules in [<a title=\"Tag Image File Format, Revision 6.0, Adobe Developers Association, June 3, 1992, ftp://ftp.adobe.com/pub/adobe/devrelations/ devtechnotes/pdffiles/tiff6.pdf The TIFF 6.0 specification dated June 3, 1\" href=\"chapter11.html#TIFF\">TIFF</a>] and compatibility with\n   historical TIFF-F, SHOULD NOT include the Return To Control sequence\n   (RTC) (consisting of 6 consecutive EOLs) when writing TIFF-F files.\n   However, applications which need to support \"transparency\" of [<a title=\"ITU-T Recommendation T.4, Standardization of group 3 facsimile apparatus for document transmission, October 1997\" href=\"chapter11.html#T.4\">T.4</a>]\n   image data MAY include RTCs if the flag settings of the T4Options\n   field are set for non-byte aligned MH or MR image data.  Implementors\n   of TIFF readers should also be aware that there are some existing\n   TIFF-F implementations which include the RTC sequence in MH/MR image\n   data. Therefore, TIFF-F readers MUST be able to process files which\n   do not include RTCs and SHOULD be able to process files which do\n   include RTCs.\n</pre>\n      \n      <a name=\"sub5sub6\"></a><h3>4.5.6. Use of EOFB for T.6 Compressed Images</h3>\n      \n      <pre>\n   TIFF-F pages which are encoded with the T.6 Modified Modified READ\n   compression method MUST include an \"end-of-facsimile-block\" (EOFB)\n   code at the end of each coded strip. Per [<a title=\"Tag Image File Format, Revision 6.0, Adobe Developers Association, June 3, 1992, ftp://ftp.adobe.com/pub/adobe/devrelations/ devtechnotes/pdffiles/tiff6.pdf The TIFF 6.0 specification dated June 3, 1\" href=\"chapter11.html#TIFF\">TIFF</a>], the EOFB code is\n   followed by pad bits as needed to align on a byte boundary. TIFF\n   readers SHOULD ignore any bits other than pad bits beyond the EOFB.\n</pre>\n      \n      <a name=\"sub6\"></a><h3>4.6. Example Use of TIFF-F</h3>\n      \n      <pre>\n   The Profile F of TIFF (i.e. TIFF-F content) is a secondary component\n   of the VPIM Message, as defined in [<a title=\"Vaudreui,l G. and G. Parsons, &#34;Voice Profile for Internet Mail - version 2&#34;, work in progress, &amp;lt;draft-ema-vpim-06.txt&gt; The ITU-T Recommendations are available at http://www.itu.ch.\" href=\"chapter11.html#VPIM2\">VPIM2</a>].  Voice messaging systems\n   can often handle fax store-and-forward capabilities in addition to\n   tradi- tional voice message store-and-forward functions.  As a\n   result, TIFF-F fax messages can optionally be sent between compliant\n   VPIM systems, and may be rejected if the recipient system cannot deal\n   with fax.\n\n   Refer to the VPIM Specification for proper usage of this content.\n</pre>\n      <a name=\"sub7\"></a><h3>4.7. Extended Black-and-white Fax Mode Summary</h3>\n      \n      <pre>\n   Recommended fields are shown with an asterisk *.\n\n   Required fields or values are shown with a double asterisk **. If the\n   double asterisk is on the field name, then all the listed values are\n   required of implementations; if the double asterisks are in the\n   Values column, then only the values suffixed with a double asterisk\n   are required of implementations.\n\n       +---------------------------+--------------------------------+\n       | Baseline Fields           |  Values                        |\n       +---------------------------+--------------------------------+\n       | BitsPerSample             | 1**                            |\n       +---------------------------+--------------------------------+\n       | Compression               | 3**: 1D Modified Huffman and   |\n       |                           |      2D Modified Read coding   |\n       |                           | 4: 2D Modified Modified Read   |\n       |                           |    coding                      |\n       +---------------------------+--------------------------------+\n       | DateTime*                 | {ASCII}: date/time in 24-hour  |\n       |                           | format \"YYYY:MM:DD HH:MM:SS\"   |\n       +---------------------------+--------------------------------+\n       | FillOrder**               | 1: most significant bit first  |\n       |                           | 2: least significant bit first |\n       +------------------------------------------------------------+\n\n       +------------------------------------------------------------+\n       | ImageDescription*         | {ASCII}: A string describing   |\n       |                           | the contents of the image.     |\n       +---------------------------+--------------------------------+\n       | ImageWidth                | 1728**, 2048, 2432, 2592,      |\n       |                           | 3072, 3456, 3648, 4096, 4864   |\n       +---------------------------+--------------------------------+\n       | ImageLength**             | n: total number of scanlines   |\n       |                           | in image                       |\n       +---------------------------+--------------------------------+\n       | NewSubFileType            | 2**: Bit 1 identifies single   |\n       |                           | page of a multi-page document  |\n       +---------------------------+--------------------------------+\n       | Orientation               | 1**-8, Default 1               |\n       +---------------------------+--------------------------------+\n       | PhotometricInterpretation | 0: pixel value 1 means black   |\n       |  **                       | 1: pixel value 1 means white   |\n       +---------------------------+--------------------------------+\n       | ResolutionUnit**          | 2: inch                        |\n       |                           | 3: centimeter                  |\n       +---------------------------+--------------------------------+\n       | RowsPerStrip**            | n: number of scanlines per     |\n       |                           | TIFF strip                     |\n       +---------------------------+--------------------------------+\n       | SamplesPerPixel           | 1**                            |\n       +---------------------------+--------------------------------+\n       | Software*                 | {ASCII}: name &amp; release        |\n       |                           | number of creator software     |\n       +---------------------------+--------------------------------+\n       | StripByteCounts**         | &lt;n&gt;: number or bytes in TIFF   |\n       |                           | strip                          |\n       +---------------------------+--------------------------------+\n       | StripOffsets**            | &lt;n&gt;: offset from beginning of  |\n       |                           | file to each TIFF strip        |\n       +---------------------------+--------------------------------+\n       | XResolution               | 200, 204**, 300, 400, 408      |\n       |                           | (written in pixels/inch)       |\n       +---------------------------+--------------------------------+\n       | YResolution               | 98**, 196**, 100,              |\n       |                           | 200, 300, 391, 400             |\n       |                           | (written in pixels/inch)       |\n       +---------------------------+--------------------------------+\n       | Extension Fields                                           |\n       +---------------------------+--------------------------------+\n\n       +---------------------------+--------------------------------+\n       | T4Options                 | 0**: required if Compression   |\n       |                           | is Modified Huffman, EOLs are  |\n       |                           | not byte aligned               |\n       |                           | 1: required if Compression is  |\n       |                           | 2D Modified Read, EOLs are     |\n       |                           | not byte aligned               |\n       |                           | 4**: required if Compression   |\n       |                           | is Modified Huffman, EOLs are  |\n       |                           | byte aligned                   |\n       +---------------------------+--------------------------------+\n       | T4Options (continued)     | 5: required if Compression     |\n       |                           | is 2D Modified Read, EOLs are  |\n       |                           | byte aligned                   |\n       +---------------------------+--------------------------------+\n       | T6Options                 | 0: required if Compression is  |\n       |                           | 2D Modified Modified Read      |\n       +---------------------------+--------------------------------+\n       | DocumentName*             | {ASCII}: name of scanned       |\n       |                           | document                       |\n       +---------------------------+--------------------------------+\n       | PageNumber**              | n,m: page number followed by   |\n       |                           | total page count               |\n       +---------------------------+--------------------------------+\n       | New Fields                                                 |\n       +---------------------------+--------------------------------+\n       | BadFaxLines*              | number of \"bad\" scanlines      |\n       |                           | encountered during reception   |\n       +---------------------------+--------------------------------+\n       | CleanFaxData*             | 0: no \"bad\" lines              |\n       |                           | 1: \"bad\" lines exist, but were |\n       |                           | regenerated by receiver        |\n       |                           | 2: \"bad\" lines exist, but have |\n       |                           | not been regenerated           |\n       +---------------------------+--------------------------------+\n       | ConsecutiveBadFaxLines*   | Max number of consecutive      |\n       |                           | \"bad\" lines received           |\n       +---------------------------+--------------------------------+\n</pre>\n      <p></p>\n      <table width=\"100%\" class=\"hangingMenu\">\n         <tr>\n            <td style=\"text-align:right\"><a class=\"naviBlack\" target=\"_top\" href=\"http://www.zvon.org\">ZVON</a> &gt; <a class=\"naviBlack\" target=\"_top\" href=\"http://zvon.org/tmRFC/RFC_share/Output/index.html\">RFC Repository</a> &gt; <b>RFC 2301</b></td>\n         </tr>\n      </table>\n      <table class=\"bar\" width=\"750px\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n         <tr>\n            <td class=\"naviBlue\"><a class=\"naviWhite\" target=\"_top\" href=\"index.html\"> Frontpage </a> / <a class=\"naviWhite\" href=\"longContents.html\"> Contents </a></td>\n         </tr>\n      </table>\n      <table class=\"hangingMenu\" border=\"0\" cellpadding=\"1\" cellspacing=\"0\" width=\"100%\">\n         <tr>\n            <td><a class=\"naviBlack\" href=\"chapter3.html\">Prev</a> | <a class=\"naviBlack\" href=\"chapter5.html\">Next</a> | <a class=\"naviBlack\" target=\"_top\" href=\"http://zvon.org/tmRFC/RFC_share/Output/index.html\">RFC index</a> | <a class=\"naviBlack\" target=\"mainWindow\" href=\"http://zvon.org/tmRFC/RFC_share/PHP/titleSearch.php\">RFC search</a></td>\n            <td><a class=\"naviBlack\" target=\"mainWindow\" href=\"http://zvon.org/tmRFC/RFC_share/PHP/download.php?rfc=2301\">Download as zip/tar.gz</a></td>\n         </tr>\n      </table>\n   </body>\n</html>", "id": 26486.0}