{"text": "OEChem Python Theory Manual Version 1 3 1 Previous 15 Atom and Bond Up 15 Atom and Bond Next 15 2 Tripos Atom Typing 15 1 Integer Atom Types and Type Names Atom typing or the task of classifying each atom in a molecule by its immediate chemical environment is a common task in computational chemistry applications Atoms of the same type are assumed to behave similarly or have similar properties within different molecules or at different locations within the same molecule The most common uses of atom types are for molecular mechanics force fields and some property prediction algorithms The OEChem library supports both atom and bond typing with two independent properties on each OEAtomBase and OEBondBase respectively The are the signed integer form of the atom type and the string form of the atom type name Typically the integer property tends to be used computationally and is often derived algorithmically whereas the string name is often the type as read in from an input file or set based upon the perceived integer type before writing to a particular file format The integer atom type is set using the OEAtomBase SetIntType method and is retrieved with the OEAtomBase GetIntType method The atom type name string is set with OEAtomBase SetType and retrieved with OEAtomBase GetType The equivalent functions also exist in OEBondBase for setting and retrieving the integer bond type and the bond type name string Note that the atom type name string is not the same as the atom name To give an example a Sybyl mol2 file may contain an atom with name N9 but with atom type name N pl3 The use of two separate properties allows these fields to be preserved and a mol2 file written out with exactly the same atom name and atom type name Example bond type names might include am or ar One major use of integer bond types is encoding the aromatic form of a connection table before calling OEKekulize The semantics of OEKekulize require that integer bond types 1 through 4 represent single double triple and quadruple bonds and that integer bond type 5 represents an aromatic bond Given these integer bond types as input OEKekulize determines a possibly arbitrary kekule form and sets the bond order properties of the bonds of a molecule appropriately using OEBondBase SetOrder method OEChem Python Theory Manual Version 1 3 1 Previous 15 Atom and Bond Up 15 Atom and Bond Next 15 2 Tripos Atom Typing Documentation released on July 3 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/oechem/pyprog/node132.html", "title": "15.1 integer atom types and type names", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<html>\n<head>\n<title>15.1 Integer Atom Types and Type Names</title>\n<META NAME=\"description\" CONTENT=\"15.1 Integer Atom Types and Type Names\">\n<META NAME=\"keywords\" CONTENT=\"pyprog\">\n<META NAME=\"resource-type\" CONTENT=\"document\">\n<META NAME=\"distribution\" CONTENT=\"global\">\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n<link rel=\"STYLESHEET\" href=\"pyprog.css\">\n<link rel=\"first\" href=\"pyprog.html\">\n<link rel=\"contents\" href=\"contents.html\" title=\"Contents\">\n\n<LINK REL=\"next\" HREF=\"node133.html\">\n<LINK REL=\"previous\" HREF=\"node131.html\">\n<LINK REL=\"up\" HREF=\"node131.html\">\n<LINK REL=\"next\" HREF=\"node133.html\">\n</head>\n<body>\n<DIV CLASS=\"navigation\">\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node131.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node131.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node133.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - Python Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"genindex.html\"><img src=\"../icons/index.gif\"\n  border=\"0\" alt=\"Index\"></A></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node131.html\">15. Atom and Bond</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node131.html\">15. Atom and Bond</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node133.html\">15.2 Tripos Atom Typing</A>\n<br><hr>\n</DIV>\n<!--End of Navigation Panel-->\n\n<H1><A NAME=\"SECTION0017100000000000000000\">\n15.1 Integer Atom Types and Type Names</A>\n</H1>\n\n<P>\nAtom typing, or the task of classifying each atom in a molecule by its\nimmediate chemical environment, is a common task in computational\nchemistry applications.  Atoms of the same ``type'' are assumed to\nbehave similarly or have similar properties within different molecules\nor at different locations within the same molecule.  The most common\nuses of atom types are for molecular mechanics force fields and some\nproperty prediction algorithms.\n\n<P>\nThe OEChem library supports both atom and bond typing with two\nindependent properties on each OEAtomBase and OEBondBase respectively.\nThe are the signed integer form of the atom type, and the string form\nof the atom type name.  Typically, the integer property tends to be\nused computationally and is often derived algorithmically, whereas the\nstring name is often the \"type\" as read in from an input file, or set\nbased upon the perceived integer type before writing to a particular\nfile format.\n\n<P>\nThe integer atom type is set using the OEAtomBase SetIntType method\nand is retrieved with the OEAtomBase GetIntType method.  The atom type\nname string is set with OEAtomBase SetType and retrieved with\nOEAtomBase GetType.  The equivalent functions also exist in OEBondBase\nfor setting and retrieving the integer bond type and the bond type\nname string.\n\n<P>\nNote that the atom type name string is not the same as the atom name.\nTo give an example, a Sybyl .mol2 file may contain an atom with name\n\"N9\" but with atom type name \"N.pl3\".  The use of two separate\nproperties allows these fields to be preserved, and a mol2 file\nwritten out with exactly the same atom name and atom type name.\nExample bond type names might include \"am\" or \"ar\".\n\n<P>\nOne major use of integer bond types is encoding the aromatic form of a\nconnection table before calling OEKekulize.  The semantics of\nOEKekulize require that integer bond types 1 through 4 represent\nsingle, double, triple and quadruple bonds, and that integer bond type\n5 represents an aromatic bond.  Given these integer bond types as\ninput, OEKekulize determines a (possibly arbitrary) kekule form, and\nsets the bond order properties of the bonds of a molecule\nappropriately (using OEBondBase SetOrder method).\n\n<P>\n\n<DIV CLASS=\"navigation\">\n<p><hr>\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node131.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node131.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node133.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - Python Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"genindex.html\"><img src=\"../icons/index.gif\"\n  border=\"0\" alt=\"Index\"></A></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node131.html\">15. Atom and Bond</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node131.html\">15. Atom and Bond</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node133.html\">15.2 Tripos Atom Typing</A>\n<hr>\n<span class=\"release-info\">Documentation released on July 30, 2004.</span>\n</DIV>\n<!--End of Navigation Panel-->\n\n</BODY>\n</HTML>\n", "id": 37461.0}