{"text": "ICS 269 Spring 2 4 Theory Seminar 3 April 2 4 Data Structure Forensics Jonathan Zheng Sun This is a presentation of the paper Data Structure Forensics by Mikhail J Atallah Michael T Goodrich and Roberto Tamassia in submission The authors introduce data structure forensics techniques for distributing data structures so that alterations from an original version can be detected and specifically identified They provide a new reduced randomness construction for nonadaptive combinatorial group testing such that for a reasonable d o n1 3log2 3n only o n bits of storage is needed to detect up to d alterations Then they show that the o n bits can be encoded into the architecture for a class of data structures including binary search trees skip lists arrays linked lists and hash tables This solution uses no storage except a master key at the auditor and adds not asymptotically but exactly no storage to the data structure The adversary doesn t even know if the data structure is under auditing ", "_id": "http://www.ics.uci.edu/~theory/269/040430.html", "title": "theory seminar, 30 april 2004", "html": "<!DOCTYPE html PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html>\n<head>\n<title>Theory Seminar, 30 April 2004</title>\n</head>\n<body>\n<a href=\"/~theory/\"><img src=\"/~theory/logo/shortTheory.gif\" width=\"521\" height=\"82\" border=\"0\" alt=\"ICS Theory Group\"></a> \n\n<h1>ICS 269, Spring 2004: Theory Seminar</h1>\n<h2>30 April 2004:<br>\nData Structure Forensics\n<br>\nJonathan (Zheng) Sun\n</h2>\n\n<p>\nThis is a presentation of the paper \"Data Structure Forensics\" by\nMikhail J. Atallah, Michael T. Goodrich, and Roberto Tamassia,\nin submission.\n<p>\nThe authors introduce data structure forensics -- techniques for\ndistributing data structures, so that alterations from an original\nversion can be detected and specifically identified. They provide a\nnew reduced randomness construction for nonadaptive combinatorial\ngroup testing, such that for a reasonable\nd=o(n<sup>1/3</sup><r>log</r><sup>2/3</sup>n),\nonly o(n) bits of storage is needed to detect up to d\nalterations.\nThen they show that the o(n) bits can be encoded into the\narchitecture for a class of data structures including binary search\ntrees, skip lists, arrays, linked lists and hash tables. This solution\nuses no storage (except a master key) at the auditor, and adds (not\nasymptotically but exactly) no storage to the data structure. The\nadversary doesn't even know if the data structure is under auditing.\n</body>\n</html>\n", "id": 3581.0}