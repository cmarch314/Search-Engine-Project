{"text": "OEChem Python Theory Manual Version 1 3 1 Previous 2 4 2 OEGetIsotopicWeight Up 2 Periodic Table Functions Next 21 Predicate Functions 2 5 Calculating Molecular Weight of a Compound The following example demonstrates how to use OEChem s periodic table functions to perform the common task of determining the molecular weight of a compound Average molecular weight is commonly used in filtering Lipinski s Rules and as a descriptor in QSAR The use of inaccurate values for molecular weight in these applications may help explain their limited success ch2 2 py from openeye oechem import def CalculateMolecularWeight mol result for atom in mol GetAtoms elem atom GetAtomicNum mass atom GetIsotope if elem and mass result OEGetIsotopicWeight elem mass else result OEGetAverageWeight elem return result ims oemolistream drugs sdf for mol in ims GetOEMols print mol GetTitle mw CalculateMolecularWeight mol OEChem Python Theory Manual Version 1 3 1 Previous 2 4 2 OEGetIsotopicWeight Up 2 Periodic Table Functions Next 21 Predicate Functions Documentation released on July 3 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/oechem/pyprog/node185.html", "title": "20.5 calculating molecular weight of a compound", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<html>\n<head>\n<title>20.5 Calculating Molecular Weight of a Compound</title>\n<META NAME=\"description\" CONTENT=\"20.5 Calculating Molecular Weight of a Compound\">\n<META NAME=\"keywords\" CONTENT=\"pyprog\">\n<META NAME=\"resource-type\" CONTENT=\"document\">\n<META NAME=\"distribution\" CONTENT=\"global\">\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n<link rel=\"STYLESHEET\" href=\"pyprog.css\">\n<link rel=\"first\" href=\"pyprog.html\">\n<link rel=\"contents\" href=\"contents.html\" title=\"Contents\">\n\n<LINK REL=\"previous\" HREF=\"node182.html\">\n<LINK REL=\"up\" HREF=\"node175.html\">\n<LINK REL=\"next\" HREF=\"node186.html\">\n</head>\n<body>\n<DIV CLASS=\"navigation\">\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node184.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node175.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node186.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - Python Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"genindex.html\"><img src=\"../icons/index.gif\"\n  border=\"0\" alt=\"Index\"></A></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node184.html\">20.4.2 OEGetIsotopicWeight</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node175.html\">20. Periodic Table Functions</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node186.html\">21. Predicate Functions</A>\n<br><hr>\n</DIV>\n<!--End of Navigation Panel-->\n\n<H1><A NAME=\"SECTION0022500000000000000000\">\n20.5 Calculating Molecular Weight of a Compound</A>\n</H1>\n\n<P>\nThe following example demonstrates how to use OEChem's periodic table\nfunctions to perform the common task of determining the molecular\nweight of a compound.  Average molecular weight is commonly used in\nfiltering (Lipinski's Rules) and as a descriptor in QSAR.  The use of\ninaccurate values for molecular weight in these applications may help\nexplain their limited success.\n\n<P>\n<dl><dd><pre class=\"verbatim\"># ch20-2.py\nfrom openeye.oechem import *\n\ndef CalculateMolecularWeight(mol):\n    result = 0.0\n    for atom in mol.GetAtoms():\n        elem = atom.GetAtomicNum()\n        mass = atom.GetIsotope()\n        if (elem != 0 and mass != 0):\n            result += OEGetIsotopicWeight(elem,mass)\n        else:\n            result += OEGetAverageWeight(elem)\n    return result\n\nims = oemolistream(\"drugs.sdf\");\nfor mol in ims.GetOEMols():\n\tprint mol.GetTitle(), \" mw = \", CalculateMolecularWeight(mol)\n</pre></dl>\n\n<P>\n\n<DIV CLASS=\"navigation\">\n<p><hr>\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node184.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node175.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node186.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - Python Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"genindex.html\"><img src=\"../icons/index.gif\"\n  border=\"0\" alt=\"Index\"></A></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node184.html\">20.4.2 OEGetIsotopicWeight</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node175.html\">20. Periodic Table Functions</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node186.html\">21. Predicate Functions</A>\n<hr>\n<span class=\"release-info\">Documentation released on July 30, 2004.</span>\n</DIV>\n<!--End of Navigation Panel-->\n\n</BODY>\n</HTML>\n", "id": 37882.0}