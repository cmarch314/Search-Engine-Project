{"text": "This site will look much better in a browser that supports web standards but it is accessible to any browser or Internet device About About the School Bren ICS Mission Dean s Welcome About the Bren Gift Facts and Figures Donald Bren Hall Visit the Bren School Contact Us Equity Diversity Departments Computer Science Informatics Statistics Research Research Areas Research Centers Research Highlights Education Graduate Prospective StudentsPrograms of StudyM S Degree OverviewPh D Degree OverviewAcademic Year PlanFormsPoliciesFunding HousingComputing SupportCampus ResourcesVisit the Bren SchoolGraduate Student Handbook Undergraduate Academic AdvisingAcademic Year PlanPetitionsICS MajorsICS MinorsPolicies Academic IntegrityPolicies Academic StandingPolicies Add drop change optionsPolicies Coursework outside UCIPolicies Grade policyPolicies Laptop computer usePolicies Withdrawal ReadmissionGraduationICS Student LifeComputing Support Prospective Undergrad UCI Parents People Faculty Staff Graduate Students Community Alumni Friends Parent Programs Leadership Council Make a Gift News Get Involved Tech Talks Information Sessions Sponsor Projects Leadership Council Corporate Partners Sponsor Interns Tech Jobs Butterworth Competition Bren school home Undergraduate Transfer students SMART ICS program Core knowledge and skills SMART ICS core knowledge and skills chart Core Knowledge and Skills ICS 22 CSE 22 Introduction to Computer Science II Other courses 6D 21 23 51 52 132 Sections Catalog Description Course Prerequisites Restrictions Prerequisite Skills and Concepts Minimum Knowledge and Skills ICS 22 CSE 22 Catalog DescriptionSecond of a three quarter introductory sequence Abstract behavior of classic data structures stacks queues priority queues tables trees alternative implementations analysis of time and space efficiency Recursion Object oriented and functional programming ICS 22 CSE 22 Course PrerequisitesICS 21 CSE 21 with a grade of C or better ICS 22 CSE 22 RestrictionsOnly one course from ICS 22 CSE 22 ICS H22 or Informatics 42 may be taken for credit ICS 22 CSE 22 Knowledge Prerequisites Skills and ConceptsStudents must have passed ICS 21 CSE 21 with a grade of C or better so they are expected to have all the knowledge and skills specified for ICS 21 CSE 21 ICS 22 CSE 22 Minimum Knowledge and SkillsAlgorithm analysis Derive a polynomial describing the execution time of simple iterative code with nested loops proficiency Big O notation Recognize its use in providing a machine language and problem size independent description of an algorithm s performance mastery Recognize and distinguish the growth rate of common function classes including exponential polynomial n squared n log n linear log n and constant mastery Recognize its limitations e g not distinguishing between constant factor differences in performance not applying when n is small mastery Recognize informally the O notation for common operations on the classic data structures described below mastery Given a polynomial state its O notation mastery Recognize informally the O notation of a simple recursive algorithm e g using a recursion trace diagram proficiency Reason about the performance of functions and programs evaluating the significance of proposed optimizations and trade offs e g constant time improvements are less important for large enough n than O notation improvements frequently executed methods are better candidates for optimization than rarely executed routines proficiency Classic data structures Describe the abstract behavior e g by describing changes or results of a series of operations of Stack push pop top isempty mastery Queue enqueue dequeue front isempty mastery Map indexed by a key insert search member remove isempty distinguishing between sorted and unsorted maps mastery Recognize operations inconsistent with the abstract behavior of a stack queue or map e g direct access to the third item in a stack mastery Given a real world problem for whose solution one of the above data structures serves as an appropriate model identify which of those data structures is most appropriate proficiency Conventional algorithms Recognize describe in terms of behavior and O notation and implement the following conventional algorithms Linear and binary search mastery Opening reading from writing to closing and handling errors associated with sequential text files mastery For an ArrayList and for a singly linked list Traversing and applying an operation to each element of the list mastery Moving within adding items to and deleting items from the list mastery Implementation Understand the distinction between single dimension arrays and ArrayLists and be able to make the appropriate choice about which to use in an implementation e g using arrays in non list use cases such as arrays of boolean flags proficiency Understand when it is appropriate to use array and ArrayList based implementations of stacks queues and maps proficiency Implement a singly linked list with an iterator mastery Implement dynamically allocated linked implementations of stacks queues maps both sorted and unsorted in a simple linear fashion i e as linked lists proficiency Identify the costs and advantages of these coding techniques for dynamically allocated linked data structures single linking and trailing pointers double linking header and trailer nodes vs head and tail pointers and circular vs non circular linking proficiency Recognize the performance implications both in time and storage of the alternative implementations covered above proficiency Recognize trade off situations where using more space saves execution time or vice versa proficiency Recursion Recognize and implement recursive algorithms of these three types tail recursive linear non tail recursive with a return value and multiple recursive calls proficiency Sorting Understand the general concept of sorting as it applies not only to numbers but also to arbitrary comparable objects mastery Object oriented programming Navigate documentation for a class hierarchy to identify the appropriate class and methods for a task proficiency Design object oriented solutions to problems using the data structures described above proficiency Write and understand a program containing multiple classes arranged in an inheritance hierarchy as well as code that uses the inheritance hierarchy polymorphically proficiency Recognize situations where inheritance is a preferable design strategy to containment composition and vice versa proficiency Recognize that design patterns offer well understood solutions to commonly occurring object oriented design problems exposure Understand the role and appropriate use of interfaces in Java proficiency Java programming Write code to read and write sequential text from external files proficiency Write code using standard exceptions appropriately including the exceptions that arise from dealing with files mastery Write programmatic unit tests that verify that portions of a program behave as specified both from scratch and using a testing framework e g JUnit proficiency Trace the flow of control through code that raises exceptions and handles them via catch clauses proficiency Recognize the importance of resource deallocation including the role of Java s automatic garbage collector and resources such as files that require explicit deallocation in Java exposure Write static methods mastery Alternative approaches to program design Functional programming Describe the differences between the functional programming paradigm and object oriented and imperative programming proficiency Recognize situations where functional programming could be an advantageous approach exposure Return to top of page Copyright Inquiries UCI Directory Intranet icswebmaster", "_id": "http://www.ics.uci.edu/ugrad/DELETEadmissions/transfer/smart/core/ICS22.php", "title": "smart-ics core knowledge and skills chart @ the bren school of information and computer sciences", "html": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<title>SMART-ICS core knowledge and skills chart @ the bren school of information and computer sciences</title>\n\n\n<meta content=\"Wed, 18 Feb 2015 13:51:24 -0320\" name=\"date\"/>\n<link href=\"../../../../../bin/styles/stylesheet_nosidebar.css\" rel=\"stylesheet\" type=\"text/css\"/><script type=\"text/javascript\">\n<!-- \nfunction clear_textbox()\n{\nif (document.searchform.q.value == \"Search ICS\")\ndocument.searchform.q.value = \"\";\n} \n-->\n</script>\n</head>\n<body>\n\n<h1 class=\"ahem\">This site will look much better in a browser that supports <a href=\"http://www.webstandards.org/upgrade/\" title=\"Download a browser that complies with Web standards.\">web standards</a>, but it is accessible to any browser or Internet device.</h1>\n <div id=\"wrapper\"><script type=\"text/javascript\">\r\n\r\nsfHover = function() {\r\n    var sfEls = document.getElementById(\"navcontainer\").getElementsByTagName(\"LI\");\r\n    for (var i=0; i<sfEls.length; i++) {\r\n        sfEls[i].onmouseover=function() {\r\n            this.className+=\" sfhover\";\r\n        }\r\n        sfEls[i].onmouseout=function() {\r\n            this.className=this.className.replace(new RegExp(\" sfhover\\\\b\"), \"\");\r\n        }\r\n    }\r\n}\r\nif (window.attachEvent) window.attachEvent(\"onload\", sfHover);\r\n\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n      <style>\r\n\r\n\r\n         #school_header {\r\n             background-image: url('http://www.ics.uci.edu/bin/img/ICSWebBanner2014-bigUCI.png');\r\n             background-repeat: no-repeat;\r\n             background-color: #0064a4;\r\n             margin-bottom: 0;\r\n             width: 760px;\r\n             height: 70px;\r\n             position: relative;\r\n         }\r\n\r\n\r\n         #school_link {\r\n                 display: block;\r\n                 position: absolute;\r\n                 width: 100%; height: 100%;\r\n         }\r\n\r\n\r\n         #uci_link {\r\n            display: block;\r\n            position: absolute;\r\n\r\n            height: 45px;\r\n            width: 109px;\r\n            left: 18px;\r\n            top: 7px;\r\n\r\n         }\r\n\r\n\r\n      </style>\r\n\r\n\r\n\r\n      <div id=\"school_header\">\r\n\r\n         <a id=\"school_link\" href=\"http://www.ics.uci.edu/\" TITLE=\"Donald Bren School of Information and Computer Sciences\"></a>\r\n\r\n         <a id=\"uci_link\" href=\"http://www.uci.edu/\" TITLE=\"University of California, Irvine\"></a>\r\n\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <div id=\"navcontainer\">\r\n\r\n                \r\n            <ul>\r\n                \r\n                <li>\r\n                \r\n                    <a href='/about/' title='about'>&raquo; About</a>\r\n\r\n                    \r\n                    <ul>\r\n                        <li><a href='/about/'>&raquo; About the School</a></li>\r\n                        <li><a href='/about/about_mission.php'>&raquo; Bren ICS Mission</a></li>\r\n                        <li><a href='/about/about_deanmsg.php'>&raquo; Dean's Welcome</a></li>\r\n                        <li><a href='/about/bren/'>&raquo; About the Bren Gift</a></li>\r\n                        <li><a href='/about/about_factsfigures.php'>&raquo; Facts and Figures</a></li>\r\n                        <li><a href='/about/brenhall/index.php'>&raquo; Donald Bren Hall</a></li>\r\n                        <li><a href='/about/visit/index.php'>&raquo; Visit the Bren School</a></li>\r\n                        <li><a href='/about/about_contact.php'>&raquo; Contact Us</a></li>\r\n                        <LI><A HREF='/about/equity/'>&raquo; Equity & Diversity</A></LI>\r\n                    </ul>               \r\n                </li>\r\n                \r\n                <li>\r\n                \r\n                    <a href='/dept/' title='departments'>&raquo; Departments</a>\r\n                    \r\n\r\n                    <ul>\r\n                        <li><a href='http://www.cs.uci.edu'>&raquo; Computer Science</a></li>\r\n                        <li><a href='http://www.informatics.uci.edu'>&raquo; Informatics</a></li>\r\n                        <li><a href='http://www.stat.uci.edu'>&raquo; Statistics</a></li>\r\n                    </ul>               \r\n                </li>\r\n                \r\n                <li>\r\n                \r\n                    <a href='/faculty/area/' title='research'>&raquo; Research</a>\r\n                \r\n                \r\n                    <ul>\r\n                        <li><a href='/faculty/area/'>&raquo; Research Areas</a></li>\r\n                        <li><a href='/faculty/centers/'>&raquo; Research Centers</a></li>\r\n                        <li><a href='/faculty/highlights/'>&raquo; Research Highlights</a></li>\r\n                    </ul>\r\n                </li>\r\n                \r\n                \r\n                \r\n                <li>\r\n                \r\n                    <span id=specialborder><a href='#' title='education'>&raquo; Education</a></span>\r\n                    \r\n\r\n                    <ul>\r\n                        <li><a href='/grad/'>&raquo; Graduate</a>\r\n                        \r\n                            <ul>                        \r\n                            <li><a href='/grad/admissions/index'>Prospective Students</a></li>\r\n                            <li><a href='/grad/degrees/index'>Programs of Study</a></LI>\r\n                            <li><a href='/grad/degrees/degrees_MSOverview'>M.S. Degree Overview</a></li>\r\n                            <li><a href='/grad/degrees/degrees_PhDOverview'>Ph.D. Degree Overview</a></li>\r\n                            <li><a href='/grad/courses/index'>Academic Year Plan</a></li>\r\n                            <li><a href='/grad/forms/index'>Forms</a></li>\r\n                            <li><a href='/grad/policies/index'>Policies</a></li>\r\n                            <li><a href='/grad/funding/index'>Funding &amp; Housing</a></li>\r\n                            <li><a href='/computing/account/new'>Computing Support</a></li>\r\n                            <li><a href='/grad/resources'>Campus Resources</a></li>\r\n                            <li><a href='/about/visit/index'>Visit the Bren School</a></li>\r\n                            <li><a href='http://www.ics.uci.edu/bin/pdf/grad/Graduate%20Student%20Handbook%20F14-15.pdf'>Graduate Student Handbook</a></li>\r\n                            </ul>\r\n\r\n                        </li>\r\n                        \r\n                        <li><a href='/ugrad/'>&raquo; Undergraduate</a>\r\n                        \r\n                            <ul>\r\n                            <li><a href='/ugrad/sao/index'>Academic Advising</a></li>\r\n                            <li><a href='/ugrad/courses/index'>Academic Year Plan</a></li>\r\n                            <li><a href='/ugrad/QA_Petitions'>Petitions</a></li>\r\n                            <li><a href='/ugrad/degrees/index.php'>ICS Majors</a></li>\r\n                            <li><a href='/ugrad/degrees/Minors'>ICS Minors</a></li>\r\n\r\n                            <li><a href='/ugrad/policies/Academic_Integrity'>Policies: Academic Integrity</a></li>\r\n                            <li><a href='/ugrad/policies/Academic_Standing'>Policies: Academic Standing</a></li>\r\n                            <li><a href='/ugrad/policies/Add_Drop_ChangeOption'>Policies: Add, drop, &amp; change options</a></li>\r\n                            <li><a href='/ugrad/policies/Course_Outside_UCI'>Policies: Coursework outside UCI</a></li>\r\n                            <li><a href='/ugrad/policies/Grade_Options'>Policies: Grade policy</a></li>\r\n                            <li><a href='/ugrad/policies/Laptop_ComputerUse'>Policies: Laptop &amp; computer use</a></li>\r\n                            <li><a href='/ugrad/policies/Withdrawal_Readmission'>Policies: Withdrawal/Readmission</a></li>\r\n\r\n                              <li><a href='/ugrad/QA_Graduation'>Graduation</a></li>\r\n                              <li><a href='/ugrad/resources/index'>ICS Student Life</a></li>\r\n                              <li><a href='/computing/account/new'>Computing Support</a></li>\r\n                            </ul>\r\n                        </li>\r\n                        \r\n                        \r\n                        <li><a href='http://www.ics.uci.edu/prospective'>&raquo; Prospective Undergrad</a></li>\r\n\r\n\r\n                        <li><a href='http://www.parents.uci.edu/'>&raquo; UCI Parents</a></li>\r\n                        \r\n                                                    \r\n                    </ul>               \r\n                </li>\r\n\r\n    \r\n                <li>\r\n                    \r\n                    <a href='#' title='people'>&raquo; People</a>                      \r\n                    \r\n                \r\n                    <ul>\r\n                        <li><a href='/faculty/'>&raquo; Faculty</a></li>\r\n                        <li><a href='/about/search/index.php'>&raquo; Staff</a></li>\r\n                        <li><a href='/about/search/search_graduate_all.php'>&raquo; Graduate Students</a></li>\r\n                    </ul>   \r\n                </li>\r\n                                \r\n                \r\n                <li> \r\n                \r\n                    <a href='#' title='community'>&raquo; Community</a>\r\n                    \r\n                    \r\n                    <ul>\r\n                        <li><a href='/community/alumni/'>&raquo; Alumni</a></li>\r\n                        <li><a href='/community/friends/'>&raquo; Friends</a></li>\r\n                        <li><a href='http://www.uadv.uci.edu/parents/'>&raquo; Parent Programs</a></li>\r\n                        <li><a href='/community/friends/leadershipcouncil/'>&raquo; Leadership Council</a></li>\r\n                        <li><a href='http://www.uadv.uci.edu/DonaldBrenSchoolOfICSAnnualGiving'>&raquo; Make a Gift</a></li>\r\n                        <li><a href='/community/news/'>&raquo; News</a></li>\r\n                    </ul>   \r\n                </li>\r\n\r\n                <li>\r\n                \r\n                    <a href='/involved/' title='get involved'>&raquo; Get Involved</a>\r\n                \r\n                \r\n                    <ul>\r\n                    \r\n                            <LI><A HREF='/involved/tech_talk'>&raquo; Tech Talks</A></LI>\r\n                            <LI><A HREF='/involved/information_session'>&raquo; Information Sessions</A></LI>\r\n                            <!--<LI><A HREF='/involved/'>&raquo; Join Industry Panel</A></LI>-->\r\n                            <LI><A HREF='/involved/project_class'>&raquo; Sponsor Projects</A></LI>\r\n                            <LI><A HREF='/involved/leadership_council'>&raquo; Leadership Council</A></LI>\r\n                            <LI><A HREF='/involved/corporate_partner'>&raquo; Corporate Partners</A></LI>\r\n                            <LI><A HREF='/involved/internship'>&raquo; Sponsor Interns</A></LI>\r\n                            <LI><A HREF='https://techjobs.uci.edu/'>&raquo; Tech Jobs</A></LI>\r\n                            <!--<LI><A HREF=''>&raquo; Support Student Groups</A></LI>-->\r\n                            <LI><A HREF='/community/events/butterworth/'>&raquo; Butterworth Competition</A></LI>\r\n                            \r\n                    </ul>               \r\n                </li>\r\n\r\n\r\n                 \r\n                                 \r\n\r\n            </ul>\r\n\r\n<style type='text/css'>@import url('/bin/icssearchstyle/css/icssearch.css');</style>\r\n<script src='/bin/icssearchstyle/js/icssearch.js' type='text/javascript'></script>\r\n<script src='/bin/icssearchstyle/js/icssearchform.js' type='text/javascript'></script>\r\n\r\n\r\n            \r\n\r\n\r\n\r\n\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <div class=\"bread\" id=\"breadcrumbs\"><!-- starting function breadcrumb_nav --><!-- done with function breadcrumb_nav, going to return [<A HREF=\"/\">Bren school home</A> &gt; <a href=\"http://www.ics.uci.edu/ugrad/\">Undergraduate</a> &gt; <a href=\"http://www.ics.uci.edu/ugrad/DELETEadmissions/\"></a> &gt; <a href=\"http://www.ics.uci.edu/ugrad/DELETEadmissions/transfer/\">Transfer students</a> &gt; <a href=\"http://www.ics.uci.edu/ugrad/DELETEadmissions/transfer/smart/\">SMART-ICS program</a> &gt; <a href=\"http://www.ics.uci.edu/ugrad/DELETEadmissions/transfer/smart/core/\">Core knowledge and skills</a>] --><A HREF=\"/\">Bren school home</A> &gt; <a href=\"http://www.ics.uci.edu/ugrad/\">Undergraduate</a> &gt; <a href=\"http://www.ics.uci.edu/ugrad/DELETEadmissions/\"></a> &gt; <a href=\"http://www.ics.uci.edu/ugrad/DELETEadmissions/transfer/\">Transfer students</a> &gt; <a href=\"http://www.ics.uci.edu/ugrad/DELETEadmissions/transfer/smart/\">SMART-ICS program</a> &gt; <a href=\"http://www.ics.uci.edu/ugrad/DELETEadmissions/transfer/smart/core/\">Core knowledge and skills</a></div>\n<div id=\"content\"><a id=\"startcontent\" name=\"startcontent\"></a> \n<div id=\"content_title\">SMART-ICS core knowledge and skills chart</div>\n<blockquote>\n<div id=\"content_text\"><p>Core Knowledge and Skills\n <br/><strong>ICS&#160;<strong><strong>22/CSE 22: Introduction to Computer Science II</strong></strong></strong></p>\n\n<p>\n<small><strong>Other courses: </strong><br/></small>\n<small><a href=\"ICS6D.php\">6D</a></small>&#160;<small>| </small>\n<small><a href=\"ICS21.php\">21</a></small>\n<small> | </small>\n<small><a href=\"ICS23.php\">23</a></small>&#160;<small>| </small><small><a href=\"ICS51.php\">51</a></small>&#160;<small>| </small>\n<small><a href=\"ICS52.php\">52</a></small>&#160;<small>| </small><small><a href=\"CS132.php\">132</a></small></p>\n\n<table bgcolor=\"#f1f3fc\" border=\"0.1\" cellpadding=\"2\" cellspacing=\"0\">  \n<tbody>\n<tr>\n<td><small>Sections:<br/></small></td>\n</tr>\n\n<tr valign=\"CENTER\">\n<td align=\"CENTER\"><small><a href=\"ICS22.php#description\">Catalog\n Description</a></small></td> \n<td><small> &#160; </small></td>\n<td><small>  |  </small></td>\n<td><small> &#160; </small></td>\n\n<td align=\"CENTER\"><small><a href=\"ICS22.php#prerequisites\">Course\n Prerequisites</a></small></td> \n<td><small> &#160; </small></td>\n<td><small>  |  </small></td>\n<td><small> &#160; </small></td>\n\n<td align=\"CENTER\"><small><a href=\"ICS22.php#restrictions\">Restrictions</a></small></td>\n<td><small> &#160; </small></td>\n<td><small>  |  </small></td>\n<td><small> &#160; </small></td>\n\n<td align=\"CENTER\"><small><a href=\"ICS22.php#knowledgeprerequisites\">Prerequisite\n Skills and Concepts</a></small></td> \n<td><small> &#160; </small></td>\n<td><small>  |  </small></td>\n<td><small> &#160; </small></td>\n\n<td align=\"CENTER\"><small><a href=\"ICS22.php#minimumknowledgeandskills\">Minimum\n Knowledge and Skills</a></small></td></tr></tbody></table>\n\n<table align=\"CENTER\" border=\"1\" cellpadding=\"2\" cellspacing=\"2\">\n<tbody>\n<tr valign=\"TOP\">\n<th align=\"RIGHT\" bgcolor=\"#f4f5ff\"><a name=\"description\"></a>ICS 22/CSE 22<br/> \nCatalog Description</th>\n<td bgcolor=\"#ffffff\">Second of a three-quarter introductory sequence. Abstract behavior of \nclassic data structures (stacks, queues, priority queues, tables, \ntrees), alternative implementations, analysis of time and space \nefficiency. Recursion. Object-oriented and functional programming.</td>\n</tr>\n\n<tr valign=\"TOP\">\n<th align=\"RIGHT\" bgcolor=\"#e6e8ff\"><a name=\"prerequisites\"></a>ICS 22/CSE 22<br/> \nCourse Prerequisites</th>\n<td bgcolor=\"#ffffff\"><p>ICS 21/CSE 21 with a grade of C or better.</p></td>\n</tr>\n\n<tr valign=\"TOP\">\n<th align=\"RIGHT\" bgcolor=\"#d5d9ff\"><a name=\"restrictions\"></a>ICS 22/CSE 22<br/> \nRestrictions</th>\n<td bgcolor=\"#ffffff\">Only one course from ICS 22/CSE 22, ICS H22 or Informatics 42 may be taken for \ncredit.</td>\n</tr>\n\n<tr valign=\"TOP\">\n<th align=\"RIGHT\" bgcolor=\"#c4caff\"><a name=\"knowledgeprerequisites\"></a>ICS 22/CSE 22<br/> \nKnowledge Prerequisites: Skills and Concepts</th>\n<td bgcolor=\"#ffffff\">Students must have passed ICS 21/CSE 21 with a grade of C or better, so they \nare expected to have all the knowledge and skills specified for ICS 21/CSE 21.</td>\n</tr>\n\n<tr valign=\"TOP\">\n<th align=\"RIGHT\" bgcolor=\"#b3baff\"><a name=\"minimumknowledgeandskills\"></a>ICS 22/CSE 22<br/> \nMinimum Knowledge and Skills</th>\n<td bgcolor=\"#ffffff\"><strong>Algorithm analysis</strong>\n\n<ul>\n<li>Derive a polynomial describing the execution time of simple \niterative code with nested loops.  [proficiency]</li>\n<li>('Big') O-notation:<ul>\n<li>Recognize its use in providing a machine-, language-, and \nproblem-size-independent description of an algorithm's performance.  \n[mastery]</li>\n<li>Recognize and distinguish the growth rate of common function \nclasses, including exponential, polynomial, n-squared, n log n, linear, \nlog n, and constant.  [mastery]</li>\n<li>Recognize its limitations (e.g., not distinguishing between \nconstant-factor differences in performance, not applying when n is \nsmall).  [mastery]</li>\n<li>Recognize informally the O-notation for common operations on the \nclassic data structures described below.  [mastery]</li>\n<li>Given a polynomial, state its O-notation.  [mastery]</li>\n<li>Recognize informally the O-notation of a simple recursive algorithm \n(e.g., using a recursion trace diagram).  [proficiency]</li>\n</ul></li>\n\n\n\n<li>Reason about the performance of functions and programs, evaluating \nthe significance of proposed optimizations and trade-offs (e.g., \nconstant-time improvements are less important, for large enough n, than \nO-notation improvements; frequently-executed methods are better \ncandidates for optimization than rarely-executed routines).  \n[proficiency]</li>\n</ul>\n\n\n<strong>Classic data structures</strong>\n\n<ul>\n<li>Describe the abstract behavior (e.g., by describing changes or \nresults of a series of operations) of:<ul>\n<li>Stack (push, pop, top, isempty)  [mastery]</li>\n<li>Queue (enqueue, dequeue, front, isempty)  [mastery]</li>\n<li>Map indexed by a key (insert, search/member, remove, isempty), \ndistinguishing between sorted and unsorted maps  [mastery]</li>\n</ul></li>\n\n\n<li>Recognize operations inconsistent with the abstract behavior of a \nstack, queue, or map (e.g., direct access to the third item in a stack).\n  [mastery]</li>\n<li>Given a real-world problem for whose solution one of the above data \nstructures serves as an appropriate model, identify which of those data \nstructures is most appropriate.  [proficiency]</li>\n</ul>\n\n<strong>Conventional algorithms</strong>\n\n<ul>\n<li>Recognize, describe (in terms of behavior and O-notation), and \nimplement the following conventional algorithms.<ul>\n<li>Linear and binary search  [mastery]</li>\n<li>Opening, reading from, writing to, closing, and handling errors \nassociated with sequential text files  [mastery]</li>\n<li>For an ArrayList and for a singly-linked list:<ul>\n<li>Traversing and applying an operation to each element of the list  \n[mastery]</li>\n<li>Moving within, adding items to, and deleting items from the list \n[mastery]</li>\n</ul></li>\n\n\n</ul></li>\n\n\n</ul>\n\n\n<strong>Implementation</strong>\n\n<ul>\n<li>Understand the distinction between single-dimension arrays and \nArrayLists, and be able to make the appropriate choice about which to \nuse in an implementation (e.g., using arrays in non-list use cases, such\n as arrays of boolean flags).  [proficiency]</li>\n<li>Understand when it is appropriate to use array- and ArrayList-based \nimplementations of stacks, queues, and maps.  [proficiency]</li>\n<li>Implement a singly-linked list with an iterator.  [mastery]</li>\n<li>Implement dynamically-allocated linked implementations of stacks, \nqueues, maps (both sorted and unsorted), in a simple linear fashion \n(i.e., as linked lists).  [proficiency]</li>\n<li>Identify the costs and advantages of these coding techniques for \ndynamically allocated, linked data structures: single linking and \ntrailing pointers, double linking, header and trailer nodes vs. head and\n tail pointers, and circular vs. non-circular linking.  [proficiency]</li>\n<li>Recognize the performance implications, both in time and storage, of\n the alternative implementations covered above.  [proficiency]</li>\n<li>Recognize trade-off situations where using more space saves \nexecution time, or vice versa.  [proficiency]</li>\n</ul>\n\n<strong>Recursion</strong>\n\n<ul>\n<li>Recognize and implement recursive algorithms of these three types: \ntail recursive, linear (non-tail recursive) with a return value, and \nmultiple recursive calls.  [proficiency]</li>\n</ul>\n\n<strong>Sorting</strong>\n\n<ul>\n<li>Understand the general concept of sorting, as it applies not only to\n numbers, but also to arbitrary comparable objects.  [mastery]</li>\n</ul>\n\n<strong>Object-oriented programming</strong>\n\n<ul>\n<li>Navigate documentation for a class hierarchy to identify the \nappropriate class and methods for a task.  [proficiency]</li>\n<li>Design object-oriented solutions to problems using the data \nstructures described above.  [proficiency]</li>\n<li>Write and understand a program containing multiple classes arranged \nin an inheritance hierarchy, as well as code that uses the inheritance \nhierarchy polymorphically.  [proficiency]</li>\n<li>Recognize situations where inheritance is a preferable design \nstrategy to containment/composition, and vice versa.  [proficiency]</li>\n<li>Recognize that design patterns offer well-understood solutions to \ncommonly-occurring object-oriented design problems.  [exposure]</li>\n<li>Understand the role and appropriate use of interfaces in Java.  \n[proficiency]</li>\n</ul>\n\n<strong>Java programming</strong>\n\n<ul>\n<li>Write code to read and write sequential text from external files.  \n[proficiency]</li>\n<li>Write code using standard exceptions appropriately, including the \nexceptions that arise from dealing with files.  [mastery]</li>\n<li>Write programmatic unit tests that verify that portions of a program\n behave as specified, both from scratch and using a testing framework \n(e.g., JUnit).  [proficiency]</li>\n<li>Trace the flow of control through code that raises exceptions and \nhandles them via catch clauses.  [proficiency]</li>\n<li>Recognize the importance of resource deallocation, including the \nrole of Java's automatic garbage collector, and resources (such as \nfiles) that require explicit deallocation in Java.  [exposure]</li>\n<li>Write static methods.  [mastery]</li>\n</ul>\n\n<strong>Alternative approaches to program design</strong>\n\n<ul>\n<li>Functional programming:<ul>\n<li>Describe the differences between the functional programming paradigm\n and object-oriented and imperative programming.  [proficiency]</li><li>Recognize situations where functional programming could be an \nadvantageous approach.  [exposure]</li>\n</ul></li>\n\n</ul>\n</td>                     \n</tr>\n</tbody></table>\n<center>\n                  <small><a href=\"ICS22.php#top\">Return\n to top of page</a></small>\n                  </center></div>\n</blockquote>\n</div>\n<div id=\"footer\"><a href=\"http://www.uci.edu/copyright.php\">Copyright Inquiries</a> |\n   <a href=\"http://www.uci.edu/cgi-bin/phonebook\">UCI Directory</a> |\n   <a href=\"http://intranet.ics.uci.edu/\">Intranet</a> |\n   \n   <!-- <a href=\"http://www.ics.uci.edu/sitemap.php\">Site Map</a> | -->\n \n  <a href=\"mailto: i%63%73%77%65%62m%61s%74%65r@%69c%73%2e%75c%69%2eedu\">icswebmaster</a></div>\n</div>\n\n<script type=\"text/javascript\">\nvar gaJsHost = ((\"https:\" == document.location.protocol) ? \"https://ssl.\" : \"http://www.\");\ndocument.write(unescape(\"%3Cscript src='\" + gaJsHost + \"google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E\"));\n</script>\n<script type=\"text/javascript\">\nvar pageTracker = _gat._getTracker(\"UA-605898-1\");\npageTracker._trackPageview();\n</script>\n\n</body>\n</html>", "id": 16825.0}