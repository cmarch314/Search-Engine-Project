{"text": " Home Trees Indices Help Package CHEM Package Annotation Module ChemicalAnnotators Class ZapAnnotator hide private frames no frames Class ZapAnnotator BaseAnnotator BaseAnnotator ZapAnnotator Collect the results calculated by the Zap solvation module for the input OEMolBase Assumes the molecule s atoms are already in sensible positions for determining solvation area etc Exception will be raised if external zap solv 1 call has an error To produce zap solv1 executable download the library file RedHat Linux 8 version and the example source code from OpenEye Gunzip and tar xvf these files to the same directory Edit the Makefile to use gcc instead of cc and then you should be able to just run make to produce all of the relevant executables particularly zap solv1 annotator ZapAnnotator for value in callBySmiles annotator CC N O print value 1e 6 111 375832 2 784395 for value in callBySmiles annotator CC1NCOCO1 print value 1e 6 5 575 81 1 264376 Instance Methods hide private init self specificCols None Constructor should setup temp file to save mol2 file to input into zap program del self Destructor should get rid of the temp file allColumns self Return an ordered sequence of all the column names that this multiple annotator can generate values for allValues self input Return an ordered sequence of all the values this multiple annotator can calculate off of the input Inherited from BaseAnnotator BaseAnnotator annotateDict iteritems iterkeys itervalues keys specifyColumns values Class Variables hide private Inherited from BaseAnnotator BaseAnnotator specificCols Method Details hide private init self specificCols None Constructor Constructor should setup temp file to save mol2 file to input into zap program Overrides BaseAnnotator BaseAnnotator init allColumns self Return an ordered sequence of all the column names that this multiple annotator can generate values for To facilitate ease of filtering with case insensitivity all of the values returned by this method should be lowercase Overrides BaseAnnotator BaseAnnotator allColumns inherited documentation allValues self input Return an ordered sequence of all the values this multiple annotator can calculate off of the input The order must correspond to the column list returned by allColumns so the caller can know which element is which Overrides BaseAnnotator BaseAnnotator allValues inherited documentation Home Trees Indices Help Generated by Epydoc 3 beta1 on Thu Nov 8 17 49 26 2 7 http epydoc sourceforge net", "_id": "http://www.ics.uci.edu/~dock/CHEM_docs/CHEM.Annotation.ChemicalAnnotators.ZapAnnotator-class.html", "title": "chem.annotation.chemicalannotators.zapannotator", "html": "<?xml version=\"1.0\" encoding=\"ascii\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n          \"DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n  <title>CHEM.Annotation.ChemicalAnnotators.ZapAnnotator</title>\n  <link rel=\"stylesheet\" href=\"epydoc.css\" type=\"text/css\" />\n  <script type=\"text/javascript\" src=\"epydoc.js\"></script>\n</head>\n\n<body bgcolor=\"white\" text=\"black\" link=\"blue\" vlink=\"#204080\"\n      alink=\"#204080\">\n<!-- ==================== NAVIGATION BAR ==================== -->\n<table class=\"navbar\" border=\"0\" width=\"100%\" cellpadding=\"0\"\n       bgcolor=\"#a0c0ff\" cellspacing=\"0\">\n  <tr valign=\"middle\">\n  <!-- Home link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"CHEM-module.html\">Home</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Tree link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"module-tree.html\">Trees</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Index link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"identifier-index.html\">Indices</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Help link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"help.html\">Help</a>&nbsp;&nbsp;&nbsp;</th>\n\n      <th class=\"navbar\" width=\"100%\"></th>\n  </tr>\n</table>\n<table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n  <tr valign=\"top\">\n    <td width=\"100%\">\n      <span class=\"breadcrumbs\">\n        <a href=\"CHEM-module.html\">Package&nbsp;CHEM</a> ::\n        <a href=\"CHEM.Annotation-module.html\">Package&nbsp;Annotation</a> ::\n        <a href=\"CHEM.Annotation.ChemicalAnnotators-module.html\">Module&nbsp;ChemicalAnnotators</a> ::\n        Class&nbsp;ZapAnnotator\n      </span>\n    </td>\n    <td>\n      <table cellpadding=\"0\" cellspacing=\"0\">\n        <!-- hide/show private -->\n        <tr><td align=\"right\"><span class=\"options\">[<a href=\"javascript:void(0);\" class=\"privatelink\"\n    onclick=\"toggle_private();\">hide&nbsp;private</a>]</span></td></tr>\n        <tr><td align=\"right\"><span class=\"options\"\n            >[<a href=\"frames.html\" target=\"_top\">frames</a\n            >]&nbsp;|&nbsp;<a href=\"CHEM.Annotation.ChemicalAnnotators.ZapAnnotator-class.html\"\n            target=\"_top\">no&nbsp;frames</a>]</span></td></tr>\n      </table>\n    </td>\n  </tr>\n</table>\n<!-- ==================== CLASS DESCRIPTION ==================== -->\n<h1 class=\"epydoc\">Class ZapAnnotator</h1><br /><br />\n<pre class=\"base-tree\">\nBaseAnnotator.BaseAnnotator --+\n                              |\n                             <strong class=\"uidshort\">ZapAnnotator</strong>\n</pre>\n\n<hr />\n<p>Collect the results calculated by the Zap solvation module for the \n  input OEMolBase.  Assumes the molecule's atoms are already in sensible \n  positions for determining solvation area, etc.</p>\n  <p>Exception will be raised if external zap_solv_1 call has an error.</p>\n  To produce zap_solv1 executable, download the library file (RedHat \n  Linux 8 version) and the example source code from OpenEye.  Gunzip and \n  tar -xvf these files to the same directory.  Edit the Makefile to use \n  &quot;gcc&quot; instead of &quot;cc&quot; and then you should be able to \n  just run &quot;make&quot; to produce all of the relevant executables, \n  particularly zap_solv1\n<pre class=\"py-doctest\">\n<span class=\"py-prompt\">&gt;&gt;&gt; </span>annotator = ZapAnnotator();\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">for</span> value <span class=\"py-keyword\">in</span> callBySmiles( annotator, <span class=\"py-string\">&quot;CC(N)O&quot;</span>): \n<span class=\"py-more\">... </span>    <span class=\"py-keyword\">print</span> value;\n<span class=\"py-output\">-1e-06</span>\n<span class=\"py-output\">111.375832</span>\n<span class=\"py-output\">2.784395</span>\n<span class=\"py-output\">0.0</span>\n<span class=\"py-output\"></span><span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">for</span> value <span class=\"py-keyword\">in</span> callBySmiles( annotator, <span class=\"py-string\">&quot;CC1NCOCO1&quot;</span>): \n<span class=\"py-more\">... </span>    <span class=\"py-keyword\">print</span> value;\n<span class=\"py-output\">-1e-06</span>\n<span class=\"py-output\">50.575081</span>\n<span class=\"py-output\">1.264376</span>\n<span class=\"py-output\">0.0</span></pre><br /><br />\n\n<!-- ==================== INSTANCE METHODS ==================== -->\n<a name=\"section-InstanceMethods\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Instance Methods</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-InstanceMethods\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Annotation.ChemicalAnnotators.ZapAnnotator-class.html#__init__\" class=\"summary-sig-name\">__init__</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">specificCols</span>=<span class=\"summary-sig-default\">None</span>)</span><br />\n      Constructor should setup temp file to save mol2 file to input into\n      zap program</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"__del__\"></a><span class=\"summary-sig-name\">__del__</span>(<span class=\"summary-sig-arg\">self</span>)</span><br />\n      Destructor should get rid of the temp file</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Annotation.ChemicalAnnotators.ZapAnnotator-class.html#allColumns\" class=\"summary-sig-name\">allColumns</a>(<span class=\"summary-sig-arg\">self</span>)</span><br />\n      Return an ordered sequence of all the column names that this \n      multiple annotator can generate values for.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Annotation.ChemicalAnnotators.ZapAnnotator-class.html#allValues\" class=\"summary-sig-name\">allValues</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">input</span>)</span><br />\n      Return an ordered sequence of all the values this multiple \n      annotator can calculate off of the input.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n  <tr>\n    <td colspan=\"2\" class=\"summary\">\n    <p class=\"indent-wrapped-lines\"><b>Inherited from <code>BaseAnnotator.BaseAnnotator</code></b>:\n      <code>annotateDict</code>,\n      <code>iteritems</code>,\n      <code>iterkeys</code>,\n      <code>itervalues</code>,\n      <code>keys</code>,\n      <code>specifyColumns</code>,\n      <code>values</code>\n      </p>\n    </td>\n  </tr>\n</table>\n<!-- ==================== CLASS VARIABLES ==================== -->\n<a name=\"section-ClassVariables\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Class Variables</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-ClassVariables\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n  <tr>\n    <td colspan=\"2\" class=\"summary\">\n    <p class=\"indent-wrapped-lines\"><b>Inherited from <code>BaseAnnotator.BaseAnnotator</code></b>:\n      <code>specificCols</code>\n      </p>\n    </td>\n  </tr>\n</table>\n<!-- ==================== METHOD DETAILS ==================== -->\n<a name=\"section-MethodDetails\"></a>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Method Details</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-MethodDetails\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n</table>\n<a name=\"__init__\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">__init__</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">specificCols</span>=<span class=\"sig-default\">None</span>)</span>\n    <br /><em class=\"fname\">(Constructor)</em>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Constructor should setup temp file to save mol2 file to input into zap\n  program\n  <dl class=\"fields\">\n    <dt>Overrides:\n      <a href=\"CHEM.Annotation.BaseAnnotator.BaseAnnotator-class.html#__init__\">BaseAnnotator.BaseAnnotator.__init__</a>\n    </dt>\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"allColumns\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">allColumns</span>(<span class=\"sig-arg\">self</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <p>Return an ordered sequence of all the column names that this multiple \n  annotator can generate values for.</p>\n  To facilitate ease of filtering with case-insensitivity, all of the \n  values returned by this method should be lowercase.\n  <dl class=\"fields\">\n    <dt>Overrides:\n      <a href=\"CHEM.Annotation.BaseAnnotator.BaseAnnotator-class.html#allColumns\">BaseAnnotator.BaseAnnotator.allColumns</a>\n        <dd><em class=\"note\">(inherited documentation)</em></dd>\n    </dt>\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"allValues\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">allValues</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">input</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Return an ordered sequence of all the values this multiple annotator \n  can calculate off of the input.  The order must correspond to the column \n  list returned by allColumns so the caller can know which element is \n  which.\n  <dl class=\"fields\">\n    <dt>Overrides:\n      <a href=\"CHEM.Annotation.BaseAnnotator.BaseAnnotator-class.html#allValues\">BaseAnnotator.BaseAnnotator.allValues</a>\n        <dd><em class=\"note\">(inherited documentation)</em></dd>\n    </dt>\n  </dl>\n</td></tr></table>\n</div>\n<br />\n<!-- ==================== NAVIGATION BAR ==================== -->\n<table class=\"navbar\" border=\"0\" width=\"100%\" cellpadding=\"0\"\n       bgcolor=\"#a0c0ff\" cellspacing=\"0\">\n  <tr valign=\"middle\">\n  <!-- Home link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"CHEM-module.html\">Home</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Tree link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"module-tree.html\">Trees</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Index link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"identifier-index.html\">Indices</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Help link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"help.html\">Help</a>&nbsp;&nbsp;&nbsp;</th>\n\n      <th class=\"navbar\" width=\"100%\"></th>\n  </tr>\n</table>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%%\">\n  <tr>\n    <td align=\"left\" class=\"footer\">\n    Generated by Epydoc 3.0beta1 on Thu Nov  8 17:49:26 2007\n    </td>\n    <td align=\"right\" class=\"footer\">\n      <a href=\"http://epydoc.sourceforge.net\">http://epydoc.sourceforge.net</a>\n    </td>\n  </tr>\n</table>\n\n<script type=\"text/javascript\">\n  <!--\n  // Private objects are initially displayed (because if\n  // javascript is turned off then we want them to be\n  // visible); but by default, we want to hide them.  So hide\n  // them unless we have a cookie that says to show them.\n  checkCookie()\n  // -->\n</script>\n  \n</body>\n</html>\n", "id": 41101.0}