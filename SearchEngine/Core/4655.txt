{"text": "CS 261 Spring 2 13 Data Structures This course meets Tuesdays and Thursdays 2 3 2 in Bren 15 Coursework will consist of weekly homeworks turned in at the start of lecture and returned at the reader s office hours one midterm and a comprehensive final exam Homeworks will usually be assigned Thursdays and due on the following Thursday Grading will be based 2 on homework 35 for the midterm and 45 for the final Instructor office hours are Tuesdays and Wednesdays from 4 to 5 in DBH 4214 The reader for the course is Wei Ping Wei s office hours are Fridays from 3 3 to 4 3 in DBH 4 69 There is no required textbook however much of the course material will be drawn from the Wikipedia articles collected together in the Wikipedia book Fundamental Data Structures Additionally suggested internet readings for the topics covered here will be linked from the schedule of topics This course may be used as part of the comprehensive exam in the computer science masters program To pass the comprehensive exam students must score at least 66 of the possible points on the final examination for the course Students who wish to take the comprehensive exam but are not enrolled in the course should contact me by email before the end of week 8 of the quarter to reserve a place in the exam Tentative schedule of topics Week 1 Introduction Algorithms Data Structures The potential method of amortized analysis Dynamic arrays Homework 1 due Tuesday April 16 Solutions Week 2 No class Week 3 The dictionary problem and hash tables Hash chaining linear probing and cuckoo hashing Hash functions cryptographic hash functions k independent hashing and tabulation hashing Homework 2 due Thursday April 25 Solutions Week 4 Bloom filters invertible Bloom filters MinHash streaming data structures and frequent item detection Homework 3 due Thursday May 2 Solutions Week 5 Priority queues Binary heaps and k ary heaps Fibonacci heaps Homework 4 due Thursday May 9 Solutions Week 6 Binary search trees and predecessor queries Random binary search trees AVL trees and rank balanced trees Splay trees static optimality competitive analysis and the dynamic optimality conjecture Homework 5 due Thursday May 16 Solutions Week 7 Midterm Tuesday Solutions Tries and suffix trees Homework 6 due Thursday May 23 Solutions Week 8 Range searching Dynamic prefix sums and augmented binary search trees Homework 7 due Thursday May 3 Solutions Week 9 Range minima Cartesian trees and lowest common ancestors Persistence Homework 8 due Thursday June 6 Solutions Week 1 Integer searching Union find Images of whiteboard from lectures See also the Fall 2 11 syllabus including sample homeworks and exams with their solutions and additional information linked from that page David Eppstein ICS UC Irvine ", "_id": "http://www.ics.uci.edu/~eppstein/261/", "title": "data structures", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<html>\n<head>\n<title>Data Structures</title>\n</head>\n<body bgcolor=\"#ffffff\" text=\"#000000\">\n<h1>CS 261, Spring 2013: Data Structures</h1>\n\n<p>This course meets Tuesdays and Thursdays, 2:00 - 3:20 in Bren\n1500. Coursework will consist of weekly homeworks, turned in at the\nstart of lecture and returned at the reader's office hours,\none midterm, and a comprehensive final exam. Homeworks will usually be\nassigned Thursdays and due on the following Thursday. Grading will be\nbased 20% on homework, 35% for the midterm, and 45% for the final.\n\n<p>Instructor office hours are Tuesdays and Wednesdays from 4:00 to\n5:00, in DBH 4214. The reader for the course is Wei Ping; Wei's office\nhours are Fridays from 3:30 to 4:30, in DBH 4069.</p>\n\n<p>There is no\nrequired textbook; however, much of the course material will be drawn\nfrom the Wikipedia articles collected together in\nthe Wikipedia \"book\"\n<i><a href=\"http://en.wikipedia.org/wiki/Book:Fundamental_Data_Structures\">Fundamental Data Structures</a></i>.\nAdditionally, suggested internet readings for the\ntopics covered here will be linked from the schedule of topics.</p>\n\n<p>This course may be used as part of the comprehensive exam in the\n  computer science masters program. To pass the comprehensive exam,\n  students must score at least 66% of the possible points on the final\n  examination for the course. Students who wish to take the\n  comprehensive exam but are not enrolled in the\n  course should contact me by email before the end of week 8 of the\n  quarter to reserve a place in the exam.</p>\n\n<h3>Tentative schedule of topics</h3>\n<ul>\n<li>Week 1. Introduction: Algorithms + Data\nStructures. <a href=\"http://en.wikipedia.org/wiki/Potential_method\">The\npotential method of amortized analysis</a>. <a href=\"http://en.wikipedia.org/wiki/Dynamic_array\">Dynamic arrays</a>.<br>\n<a href=\"s13-hw1.txt\">Homework 1</a>, due Tuesday, April 16</a> &mdash;\n<a href=\"s13-hw1-answers.txt\">Solutions</a>.</li>\n<li>Week 2. No class.</li>\n<li>Week 3: The <a href=\"http://en.wikipedia.org/wiki/Associative_array\">dictionary problem</a> and <a href=\"http://en.wikipedia.org/wiki/Hash_table\">hash tables</a>. <a href=\"http://en.wikipedia.org/wiki/Hash_table#Separate_chaining\">Hash chaining</a>, <a href=\"http://en.wikipedia.org/wiki/Linear_probing\">linear probing</a>, and <a href=\"http://en.wikipedia.org/wiki/Cuckoo_hashing\">cuckoo hashing</a>.<br>\nHash functions: <a href=\"http://en.wikipedia.org/wiki/Cryptographic_hash_function\">cryptographic hash functions</a>, <a href=\"http://en.wikipedia.org/wiki/K-independent_hashing\">k-independent hashing</a>, and <a href=\"http://en.wikipedia.org/wiki/Tabulation_hashing\">tabulation hashing</a>. <br>\n<a href=\"s13-hw2.txt\">Homework 2</a>, due Thursday, April 25</a> &mdash;\n<a href=\"s13-hw2-answers.txt\">Solutions</a>.</li>\n<li>Week 4: <a href=\"http://en.wikipedia.org/wiki/Bloom_filter\">Bloom\nfilters</a>, <a href=\"http://arxiv.org/abs/0704.3313\">invertible Bloom\nfilters</a>, <a href=\"http://en.wikipedia.org/wiki/MinHash\">MinHash</a>,\n<a href=\"http://en.wikipedia.org/wiki/Streaming_algorithm\">streaming\ndata structures</a>, and <a href=\"http://www2.research.att.com/~marioh/papers/cacm09.pdf\">frequent item detection</a>.<br>\n<a href=\"s13-hw3.txt\">Homework 3</a>, due Thursday, May 2</a> &mdash;\n<a href=\"s13-hw3-answers.txt\">Solutions</a>.</li>\n<li>Week 5: <a href=\"http://en.wikipedia.org/wiki/Priority_queue\">Priority\nqueues</a>. <a href=\"http://en.wikipedia.org/wiki/Binary_heap\">Binary\nheaps</a> and <a href=\"http://en.wikipedia.org/wiki/D-ary_heap\">k-ary\nheaps</a>. <a href=\"http://en.wikipedia.org/wiki/Fibonacci_heap\">Fibonacci\nheaps</a>.<br>\n<a href=\"s13-hw4.txt\">Homework 4</a>, due Thursday, May 9</a> &mdash;\n<a href=\"s13-hw4-answers.txt\">Solutions</a>.</li>\n<li>Week 6: <a href=\"http://en.wikipedia.org/wiki/Binary_search_tree\">Binary\nsearch trees</a> and predecessor\nqueries. <a href=\"http://en.wikipedia.org/wiki/Random_binary_tree\">Random\nbinary search\ntrees</a>, <a href=\"http://en.wikipedia.org/wiki/AVL_tree\">AVL\ntrees</a>, and <a href=\"http://www.cs.princeton.edu/~sssix/papers/rb-trees-journal.pdf\">rank-balanced trees</a>.<br>\n<a href=\"http://en.wikipedia.org/wiki/Splay_tree\">Splay trees</a>,\nstatic\noptimality, <a href=\"http://en.wikipedia.org/wiki/Competitive_analysis_(online_algorithm)\">competitive\nanalysis</a>, and the dynamic optimality conjecture.<br>\n<a href=\"s13-hw5.txt\">Homework 5</a>, due Thursday, May 16</a> &mdash;\n<a href=\"s13-hw5-answers.txt\">Solutions</a>.</li>\n<li>Week 7: <a href=\"s13-mt.pdf\">Midterm Tuesday</a> &mdash; <a href=\"s13-mt-answers.txt\">Solutions</a>.<br>\n<a href=\"http://en.wikipedia.org/wiki/Trie\">Tries</a> and <a href=\"http://en.wikipedia.org/wiki/Suffix_tree\">suffix trees</a>.<br>\n<a href=\"s13-hw6.txt\">Homework 6</a>, due Thursday, May 23</a> &mdash;\n<a href=\"s13-hw6-answers.txt\">Solutions</a>.</li>\n<li>Week 8: <a href=\"http://en.wikipedia.org/wiki/Range_searching\">Range\nsearching</a>, <a href=\"http://people.csail.mit.edu/mip/docs/blog/dynlogn.pdf\">Dynamic prefix sums</a>\nand <a href=\"http://en.wikipedia.org/wiki/Order_statistic_tree\">augmented binary search trees</a>.<br>\n<a href=\"s13-hw7.txt\">Homework 7</a>, due Thursday, May 30</a> &mdash;\n<a href=\"s13-hw7-answers.txt\">Solutions</a>.</li>\n<li>Week 9: <a href=\"http://en.wikipedia.org/wiki/Range_Minimum_Query\">Range minima</a>, <a href=\"http://en.wikipedia.org/wiki/Cartesian_tree\">Cartesian trees</a>, and <a href=\"http://en.wikipedia.org/wiki/Lowest_common_ancestor\">lowest common ancestors</a>. <a href=\"http://en.wikipedia.org/wiki/Persistant_data_structure\">Persistence</a>.<br>\n<a href=\"s13-hw8.txt\">Homework 8</a>, due Thursday, June 6</a> &mdash;\n<a href=\"s13-hw8-answers.txt\">Solutions</a>.</li>\n<li>Week 10: Integer searching. Union find.</li>\n</ul>\n\n<a href=\"http://www.ics.uci.edu/~mbannist/261/\"><h3>Images of whiteboard\n    from lectures</h3></a>\n\n<p>See also: <a href=\"f11.html\">the Fall 2011 syllabus</a> including\nsample homeworks and exams with their solutions, and additional\ninformation linked from that page.</p>\n\n<hr>\n<p><a href=\"/~eppstein/\">David Eppstein</a>, \n<a href=\"/\">ICS</a>, <a href=\"http://www.uci.edu/\">UC Irvine</a>.<br>\n</body>\n</html>\n", "id": 4655.0}