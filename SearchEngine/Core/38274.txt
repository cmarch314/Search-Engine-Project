{"text": "Navigation Up Table of Contents Bibliography Index Title Page CGAL Regular triangulation 3 RegularTriangulationTraits 3 TriangulationDataStructure 3 DefinitionLet S w be a set of weighted points in 3 Let p w p wp p 3 wp and z w z wz z 3 wz be two weighted points A weighted point p w p wp can also be seen as a sphere of center p and radius wp The power product or power distance between p w and z w is defined as p w z w p z 2 wp wz where p z is the Euclidean distance between p and z p w and z w are said to be orthogonal if p w z w see Figure Four weighted points have a unique common orthogonal weighted point called the power sphere A sphere z w is said to be regular if p w S w p w z w A triangulation of S w is regular if the power spheres of all simplices are regular include CGAL Regular triangulation 3 h Parameters The first template argument must be a model of the RegularTriangulationTraits 3 concept The second template argument must be a model of the TriangulationDataStructure 3 concept It has the default value Triangulation data structure 3 Triangulation vertex base 3 RegularTriangulationTraits 3 Triangulation cell base 3 RegularTriangulationTraits 3 Inherits FromTriangulation 3 RegularTriangulationTraits 3 TriangulationDataStructure 3 Types typedef RegularTriangulationTraits 3 Bare point Bare point The type for points p of weighted points p w p wp typedef RegularTriangulationTraits 3 Weighted point 3 Weighted point Creation Regular triangulation 3 RegularTriangulationTraits 3 TriangulationDataStructure 3 rt RegularTriangulationTraits 3 traits RegularTriangulationTraits 3 Creates an empty regular triangulation possibly specifying a traits class traits Regular triangulation 3 RegularTriangulationTraits 3 TriangulationDataStructure 3 rt Regular triangulation 3 rt1 Copy constructor template class InputIterator Regular triangulation 3 RegularTriangulationTraits 3 TriangulationDataStructure 3 rt InputIterator first InputIterator last RegularTriangulationTraits 3 traits RegularTriangulationTraits 3 Creates a regular triangulation of the points specified by the iterator range first last of value type Weighted point possibly specifying a traits class traits Operations Insertion The following methods which already exist in triangulations are overloaded to ensure the property that all power spheres are regular Vertex handle rt insert Weighted point p Cell handle start Cell handle Inserts weighted point p in the triangulation If this insertion creates a vertex this vertex is returned Otherwise this method returns the default constructed handle If p coincides with an existing vertex and has a greater weight then p replaces that point and the triangulation is updated The optional argument start is used as a starting place for the search Vertex handle rt insert Weighted point p Locate type lt Cell handle loc int li int lj Inserts weighted point p in the triangulation and returns the corresponding vertex Similar to the above insert function but takes as additional parameter the return values of a previous location query See description of Triangulation 3 locate The following method allows one to insert several points template class InputIterator int rt insert InputIterator first InputIterator last Inserts the weighted points in the range first last It returns the difference of the number of vertices between after and before the insertions it may be negative due to hidden points Precondition The value type of first and last is Point Queries Let us remark that p w z w is equivalent to p lies outside the sphere with center z and radius sqrt wp2 wz2 This remark helps provide an intuition about the following predicates Figure side of power circle Bounded side rt side of power sphere Cell handle c Weighted point p Returns the position of the weighted point p with respect to the power sphere of c More precisely it returns ON BOUNDED SIDE if p w z c w where z c w is the power sphere of c For an infinite cell this means either that p lies strictly in the half space limited by its finite facet and not containing any other point of the triangulation or that the angle between p and the power circle of the finite facet of c is greater than 2 ON BOUNDARY if p is orthogonal to the power sphere of c i e p w z c w For an infinite cell this means that p is orthogonal to the power circle of its finite facet ON UNBOUNDED SIDE if p w z c w i e the angle between the weighted point p and the power sphere of c is less than 2 or if these two spheres do not intersect For an infinite cell this means that p does not satisfy either of the two previous conditions Precondition rt dimension 3 Bounded side rt side of power circle Facet f Weighted point p Returns the position of the point p with respect to the power circle of f More precisely it returns in dimension 3 For a finite facet ON BOUNDARY if p is orthogonal to the power circle in the plane of the facet ON UNBOUNDED SIDE when their angle is less than 2 ON BOUNDED SIDE when it is greater than 2 see Figure For an infinite facet it considers the plane defined by the finite facet of the cell f first and does the same as in dimension 2 in this plane in dimension 2 For a finite facet ON BOUNDARY if p is orthogonal to the circle ON UNBOUNDED SIDE when the angle between p and the power circle of f is less than 2 ON BOUNDED SIDE when it is greater than 2 For an infinite facet ON BOUNDED SIDE for a point in the open half plane defined by f and not containing any other point of the triangulation ON UNBOUNDED SIDE in the other open half plane If the point p is collinear with the finite edge e of f it returns ON BOUNDED SIDE if p w z e w where z e w is the power segment of e in the line supporting e ON BOUNDARY if p w z e w ON UNBOUNDED SIDE if p w z e w Precondition rt dimension 2 Bounded side rt side of power circle Cell handle c int i Weighted point p Same as the previous method for facet i of cell c Bounded side rt side of power segment Cell handle c Weighted point p In dimension 1 returns ON BOUNDED SIDE if p w z c w where z c w is the power segment of the edge represented by c ON BOUNDARY if p w z c w ON UNBOUNDED SIDE if p w z c w Precondition rt dimension 1 Vertex handle rt nearest power vertex Point p Cell handle c Cell handle Returns the vertex of the triangulation which is nearest to p with respect to the power distance This means that the power of the query point p with respect to the weighted point in the returned vertex is smaller than the power of p with respect to the weighted point in any other vertex Ties are broken arbitrarily The default constructed handle is returned if the triangulation is empty The optional argument c is a hint specifying where to start the search Precondition c is a cell of rt Vertex handle rt nearest power vertex in cell Point p Cell handle c Returns the vertex of the cell c that is nearest to p with respect to the power distance advanced Checking bool rt is valid bool verbose false Checks the combinatorial validity of the triangulation and the validity of its geometric embedding see Section Also checks that all the power spheres resp power circles in dimension 2 power segments in dimension 1 of cells resp facets in dimension 2 edges in dimension 1 are regular When verbose is set to true messages describing the first invalidity encountered are printed This method is mainly a debugging help for the users of advanced features advanced Next TriangulationTraits 3 Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Triangulation_3_ref/Class_Regular_triangulation_3.html", "title": "regular_triangulation_3&lt;regulartriangulationtraits_3,triangulationdatastructure_3&gt;", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Triangulation_3_ref/Regular_triangulation_3.tex' -->\n<html> <head>  \n<title>Regular_triangulation_3&lt;RegularTriangulationTraits_3,TriangulationDataStructure_3&gt;</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_977\"></A>\n\n<A NAME=\"Cross_link_anchor_978\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_919\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Class.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_CGAL::Regular_triangulation_3<RegularTriangulationTraits_3,TriangulationDataStructure_3>\"></A>\n<h2><I>CGAL::Regular_triangulation_3&lt;RegularTriangulationTraits_3,TriangulationDataStructure_3&gt;</I></h2>\n<P>\n\n<H3>Definition</H3>Let <MATH><I>S<SUP>(w)</SUP></I></MATH> be a set of weighted points in <MATH><I> <IMG BORDER=0 WIDTH=13 HEIGHT=12 ALIGN=BOTTOM SRC=\"cc_mathbb_R.gif\"> <SUP>3</SUP></I></MATH>. Let\n<MATH><I>p<SUP>(w)</SUP>=(p,w<SUB>p</SUB>), p <IMG BORDER=0 WIDTH=9 HEIGHT=21 ALIGN=MIDDLE SRC=\"cc_in.gif\">  <IMG BORDER=0 WIDTH=13 HEIGHT=12 ALIGN=BOTTOM SRC=\"cc_mathbb_R.gif\"> <SUP>3</SUP>, w<SUB>p</SUB> <IMG BORDER=0 WIDTH=9 HEIGHT=21 ALIGN=MIDDLE SRC=\"cc_in.gif\">  <IMG BORDER=0 WIDTH=13 HEIGHT=12 ALIGN=BOTTOM SRC=\"cc_mathbb_R.gif\"> </I></MATH> and \n<MATH><I>z<SUP>(w)</SUP>=(z,w<SUB>z</SUB>), z <IMG BORDER=0 WIDTH=9 HEIGHT=21 ALIGN=MIDDLE SRC=\"cc_in.gif\">  <IMG BORDER=0 WIDTH=13 HEIGHT=12 ALIGN=BOTTOM SRC=\"cc_mathbb_R.gif\"> <SUP>3</SUP>, w<SUB>z</SUB> <IMG BORDER=0 WIDTH=9 HEIGHT=21 ALIGN=MIDDLE SRC=\"cc_in.gif\">  <IMG BORDER=0 WIDTH=13 HEIGHT=12 ALIGN=BOTTOM SRC=\"cc_mathbb_R.gif\"> </I></MATH> be two weighted points. \nA weighted point\n<MATH><I>p<SUP>(w)</SUP>=(p,w<SUB>p</SUB>)</I></MATH> can also be seen as a sphere of center <MATH><I>p</I></MATH> and\nradius <MATH><I>w<SUB>p</SUB></I></MATH>. \nThe <I>power product</I> (or  <I>power distance</I> ) \nbetween <MATH><I>p<SUP>(w)</SUP></I></MATH> and <MATH><I>z<SUP>(w)</SUP></I></MATH> is\ndefined as \n<P ALIGN=CENTER>\n<MATH><I><IMG BORDER=0 WIDTH=12 HEIGHT=12 ALIGN=BOTTOM SRC=\"cc_Pi.gif\">(p<SUP>(w)</SUP>,z<SUP>(w)</SUP>) =  <IMG BORDER=0 WIDTH=6 HEIGHT=29 ALIGN=MIDDLE SRC=\"cc_parallel.gif\"> p-z <IMG BORDER=0 WIDTH=6 HEIGHT=29 ALIGN=MIDDLE SRC=\"cc_parallel.gif\"> <SUP>2</SUP>-w<SUB>p</SUB>-w<SUB>z</SUB></I></MATH>\n<P>\n\nwhere <MATH><I> <IMG BORDER=0 WIDTH=6 HEIGHT=29 ALIGN=MIDDLE SRC=\"cc_parallel.gif\"> p-z <IMG BORDER=0 WIDTH=6 HEIGHT=29 ALIGN=MIDDLE SRC=\"cc_parallel.gif\"> </I></MATH> is the Euclidean distance between <MATH><I>p</I></MATH> and <MATH><I>z</I></MATH>. \n <MATH><I>p<SUP>(w)</SUP></I></MATH> and <MATH><I>z<SUP>(w)</SUP></I></MATH>\nare said to be <I>orthogonal</I> if <MATH><I><IMG BORDER=0 WIDTH=12 HEIGHT=12 ALIGN=BOTTOM SRC=\"cc_Pi.gif\">(p<SUP>(w)</SUP>-z<SUP>(w)</SUP>)\n= 0</I></MATH> (see Figure&nbsp;<A HREF=\"../Triangulation_3/Chapter_main.html#Triangulation3-fig-ortho\"><IMG SRC=\"cc_ref_up_arrow.gif\" ALT=\"reference\" WIDTH=\"10\" HEIGHT=\"10\"></A>).\n<P>\n\nFour weighted points have a unique common orthogonal weighted point called\nthe <I>power sphere</I>. A sphere <MATH><I>z<SUP>(w)</SUP></I></MATH> is said to be\n<I>regular</I> if <MATH><I> <IMG BORDER=0 WIDTH=9 HEIGHT=13 ALIGN=BOTTOM SRC=\"cc_forall.gif\"> p<SUP>(w)</SUP> <IMG BORDER=0 WIDTH=9 HEIGHT=21 ALIGN=MIDDLE SRC=\"cc_in.gif\"> S<SUP>(w)</SUP>,\n<IMG BORDER=0 WIDTH=12 HEIGHT=12 ALIGN=BOTTOM SRC=\"cc_Pi.gif\">(p<SUP>(w)</SUP>-z<SUP>(w)</SUP>) <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_geq.gif\"> 0</I></MATH>.\n<P>\n\nA triangulation of <MATH><I>S<SUP>(w)</SUP></I></MATH> is <I>regular</I> if the power spheres\nof all simplices are regular.\n<P>\n\n<I>#include &lt;<A HREF=\"../../../include/CGAL/Regular_triangulation_3.h\">CGAL/Regular_triangulation_3.h</A>&gt;</I>\n<P>\n\n<H3>Parameters</H3>\n<P>\n\nThe first template argument must be a model of the\n<I><A HREF=\"Concept_RegularTriangulationTraits_3.html#Cross_link_anchor_981\">RegularTriangulationTraits_3</A></I> concept.\n<P>\n\nThe second template argument must be a model of the\n<I><A HREF=\"../TriangulationDS_3_ref/Concept_TriangulationDataStructure_3.html#Cross_link_anchor_1002\">TriangulationDataStructure_3</A></I> concept.\nIt has the default value <I><A HREF=\"../TriangulationDS_3_ref/Class_Triangulation_data_structure_3.html#Cross_link_anchor_1008\">Triangulation_data_structure_3</A>&lt;<A HREF=\"Class_Triangulation_vertex_base_3.html#Cross_link_anchor_994\">Triangulation_vertex_base_3</A>&lt;<A HREF=\"Concept_RegularTriangulationTraits_3.html#Cross_link_anchor_981\">RegularTriangulationTraits_3</A>&gt;, <A HREF=\"Class_Triangulation_cell_base_3.html#Cross_link_anchor_990\">Triangulation_cell_base_3</A>&lt;<A HREF=\"Concept_RegularTriangulationTraits_3.html#Cross_link_anchor_981\">RegularTriangulationTraits_3</A>&gt; &gt;</I>.\n<P>\n\n<H3>Inherits From</H3><I><A HREF=\"Class_Triangulation_3.html#Cross_link_anchor_972\">Triangulation_3</A>&lt;<A HREF=\"Concept_RegularTriangulationTraits_3.html#Cross_link_anchor_981\">RegularTriangulationTraits_3</A>,<A HREF=\"../TriangulationDS_3_ref/Concept_TriangulationDataStructure_3.html#Cross_link_anchor_1002\">TriangulationDataStructure_3</A>&gt;</I>\n<P>\n\n<H3>Types</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Bare_point\"></A>\n<A NAME=\"Typedef_Bare_point\"></A>\ntypedef <A HREF=\"Concept_RegularTriangulationTraits_3.html#Cross_link_anchor_981\">RegularTriangulationTraits_3</A>::Bare_point\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    Bare_point;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    The type for points\n<I>p</I> of weighted points <MATH><I>p<SUP>(w)</SUP>=(p,w<SUB>p</SUB>)</I></MATH>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Weighted_point\"></A>\n<A NAME=\"Typedef_Weighted_point\"></A>\ntypedef <A HREF=\"Concept_RegularTriangulationTraits_3.html#Cross_link_anchor_981\">RegularTriangulationTraits_3</A>::Weighted_point_3\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"../Triangulation_2_ref/Class_Weighted_point.html#Cross_link_anchor_959\">Weighted_point</A>;\n        </I></NOBR>\n        </TD>\n    \n        </TR>\n        </TABLE>\n<P>\n\n<H3>Creation</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    <A HREF=\"Class_Regular_triangulation_3.html#Cross_link_anchor_978\">Regular_triangulation_3</A>&lt;<A HREF=\"Concept_RegularTriangulationTraits_3.html#Cross_link_anchor_981\">RegularTriangulationTraits_3</A>,<A HREF=\"../TriangulationDS_3_ref/Concept_TriangulationDataStructure_3.html#Cross_link_anchor_1002\">TriangulationDataStructure_3</A>&gt; rt ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n     <A HREF=\"Concept_RegularTriangulationTraits_3.html#Cross_link_anchor_981\">RegularTriangulationTraits_3</A> traits = <A HREF=\"Concept_RegularTriangulationTraits_3.html#Cross_link_anchor_981\">RegularTriangulationTraits_3</A>());</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Creates an empty regular triangulation, possibly specifying a traits class\n<I>traits</I>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    <A HREF=\"Class_Regular_triangulation_3.html#Cross_link_anchor_978\">Regular_triangulation_3</A>&lt;<A HREF=\"Concept_RegularTriangulationTraits_3.html#Cross_link_anchor_981\">RegularTriangulationTraits_3</A>,<A HREF=\"../TriangulationDS_3_ref/Concept_TriangulationDataStructure_3.html#Cross_link_anchor_1002\">TriangulationDataStructure_3</A>&gt; rt ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n     <A HREF=\"Class_Regular_triangulation_3.html#Cross_link_anchor_978\">Regular_triangulation_3</A> rt1);</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Copy constructor.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    template &lt; class InputIterator &gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    <A HREF=\"Class_Regular_triangulation_3.html#Cross_link_anchor_978\">Regular_triangulation_3</A>&lt;<A HREF=\"Concept_RegularTriangulationTraits_3.html#Cross_link_anchor_981\">RegularTriangulationTraits_3</A>,<A HREF=\"../TriangulationDS_3_ref/Concept_TriangulationDataStructure_3.html#Cross_link_anchor_1002\">TriangulationDataStructure_3</A>&gt; rt ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    InputIterator first,<BR>\n\nInputIterator last,<BR>\n\n<A HREF=\"Concept_RegularTriangulationTraits_3.html#Cross_link_anchor_981\">RegularTriangulationTraits_3</A> traits = <A HREF=\"Concept_RegularTriangulationTraits_3.html#Cross_link_anchor_981\">RegularTriangulationTraits_3</A>());</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Creates a regular triangulation of the points specified by the iterator range\n<I>[first,last)</I> of value type <I><A HREF=\"../Triangulation_2_ref/Class_Weighted_point.html#Cross_link_anchor_959\">Weighted_point</A></I>, possibly specifying a\ntraits class <I>traits</I>.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Operations</H3>\n<P>\n\n<H3>Insertion</H3>\n<P>\n\nThe following methods, which already exist in triangulations, are\noverloaded to ensure the property that all power spheres are regular.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Vertex_handle_insert6const_Weighted_point___p+_Cell_handle_start_=_Cell_handle69_9;\"></A>\nVertex_handle\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    rt.insert ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n     <A HREF=\"../Triangulation_2_ref/Class_Weighted_point.html#Cross_link_anchor_959\">Weighted_point</A> p,<BR>\n\nCell_handle start = Cell_handle())</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Inserts weighted point <I>p</I> in the triangulation. If this\ninsertion creates a vertex, this vertex is returned. Otherwise, this\nmethod returns the default constructed handle.  If <I>p</I> coincides with an\nexisting vertex and has a greater weight, then <I>p</I> replaces that point and\nthe triangulation is updated.  The optional argument <I>start</I> is used as a\nstarting place for the search.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Vertex_handle_insert6const_Weighted_point___p+_Locate_type_lt+_Cell_handle_loc+_int_li+_int_lj9;\"></A>\nVertex_handle\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    rt.insert ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n     <A HREF=\"../Triangulation_2_ref/Class_Weighted_point.html#Cross_link_anchor_959\">Weighted_point</A> p,<BR>\n\n<A HREF=\"Class_Triangulation_3#Enum_Locate_type\">Locate_type</A> lt,<BR>\n\nCell_handle loc,<BR>\n\nint li,<BR>\n\nint lj)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Inserts weighted point <I>p</I> in the triangulation and returns the corresponding\n vertex. Similar to the above <I>insert()</I> function, but takes as additional\n parameter the return values of a previous location query.  See description of\n <I><A HREF=\"Class_Triangulation_3.html#Cross_link_anchor_972\">Triangulation_3</A>::locate()</I>.\n        </TD></TR>\n        </TABLE>\n<P>\n\nThe following method allows one to insert several points.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    template &lt; class InputIterator &gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_int_insert6InputIterator_first+_InputIterator_last9;\"></A>\nint\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    rt.insert ( InputIterator first,  InputIterator last)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Inserts the weighted points in the range <MATH><I>[.</I></MATH><I>first</I>,\n<I>last</I><MATH><I>.)</I></MATH>. \nIt returns the difference of the number of vertices between after and\nbefore the insertions (it may be negative due to hidden points).<BR>\n\n<EM>Precondition: </EM>The <I>value_type</I> of <I>first</I> and <I>last</I> is\n<I>Point</I>.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Queries</H3>\n<P>\n\nLet us remark that \n<P ALIGN=CENTER>\n<MATH><I><IMG BORDER=0 WIDTH=12 HEIGHT=12 ALIGN=BOTTOM SRC=\"cc_Pi.gif\">(p<SUP>(w)</SUP>-z<SUP>(w)</SUP>) &gt; 0</I></MATH>\n<P>\n\nis equivalent to<BR>\n\n<CENTER><I>p</I> lies outside the sphere with center <I>z</I> and radius\n<MATH><I><A HREF=\"../NumberTypeSupport_ref/Function_sqrt.html#Cross_link_anchor_1414\">sqrt</A>(w<SUB>p</SUB><SUP>2</SUP>+w<SUB>z</SUB><SUP>2</SUP>)</I></MATH>.</CENTER><BR>\n\nThis remark helps provide an intuition about the following predicates.\n<P>\n\n<B>Figure:&nbsp;&nbsp;</B>side_of_power_circle.\n<A NAME=\"Triangulation3-fig-sidedim2\"></A>\n\n<CENTER>\n<img border=0 src=\"./sidedim2.gif\" align=center\nalt=\"side_of_power_circle\"> \n</CENTER>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Bounded_side_side_of_power_sphere6Cell_handle_c+_const_Weighted_point___p9_const;\"></A>\n<A HREF=\"../Kernel_23_ref/Enum_Bounded_side.html#Cross_link_anchor_99\">Bounded_side</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    rt.side_of_power_sphere ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    Cell_handle c,<BR>\n\n<A HREF=\"../Triangulation_2_ref/Class_Weighted_point.html#Cross_link_anchor_959\">Weighted_point</A> p)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns the position of the weighted point <MATH><I>p</I></MATH> with respect to the\npower sphere of <I>c</I>. More precisely, it returns:<BR>\n\n- <I><A HREF=\"../Kernel_23_ref/Enum_Bounded_side#Enum_Bounded_side\">ON_BOUNDED_SIDE</A></I> if <MATH><I><IMG BORDER=0 WIDTH=12 HEIGHT=12 ALIGN=BOTTOM SRC=\"cc_Pi.gif\">(p<SUP>(w)</SUP>-z(c)<SUP>(w)</SUP>)&lt;0</I></MATH> where\n<MATH><I>z(c)<SUP>(w)</SUP></I></MATH> is the power sphere of <I>c</I>. For an\ninfinite cell this means either that <I>p</I> lies strictly in the half\nspace limited by its finite facet and not containing any other point\nof the triangulation, or that the <A HREF=\"../Kernel_23_ref/Function_angle.html#Cross_link_anchor_153\">angle</A> \nbetween <I>p</I> and the power circle of the <I>finite</I> facet of <I>c</I>\nis greater than <MATH><I><IMG BORDER=0 WIDTH=9 HEIGHT=8 ALIGN=BOTTOM SRC=\"cc_pi.gif\">/2</I></MATH>.<BR>\n\n- <I><A HREF=\"../Kernel_23_ref/Enum_Bounded_side#Enum_Bounded_side\">ON_BOUNDARY</A></I> if p is orthogonal to the power sphere of <I>c</I>\ni.e. <MATH><I><IMG BORDER=0 WIDTH=12 HEIGHT=12 ALIGN=BOTTOM SRC=\"cc_Pi.gif\">(p<SUP>(w)</SUP>-z(c)<SUP>(w)</SUP>)=0</I></MATH>. For an infinite cell this means\nthat <I>p</I> is orthogonal to the power circle of its <I>finite</I> facet.<BR>\n\n- <I><A HREF=\"../Kernel_23_ref/Enum_Bounded_side#Enum_Bounded_side\">ON_UNBOUNDED_SIDE</A></I> if <MATH><I><IMG BORDER=0 WIDTH=12 HEIGHT=12 ALIGN=BOTTOM SRC=\"cc_Pi.gif\">(p<SUP>(w)</SUP>-z(c)<SUP>(w)</SUP>)&gt;0</I></MATH>\ni.e. the <A HREF=\"../Kernel_23_ref/Function_angle.html#Cross_link_anchor_153\">angle</A> between the weighted point <I>p</I> and the power sphere\nof <I>c</I> is less than <MATH><I><IMG BORDER=0 WIDTH=9 HEIGHT=8 ALIGN=BOTTOM SRC=\"cc_pi.gif\">/2</I></MATH> or if these two spheres do not\nintersect. For an \ninfinite cell this means that <I>p</I> does not satisfy either of the\ntwo previous conditions.<BR>\n\n<EM>Precondition: </EM><I>rt</I>.<I>dimension()</I> <MATH><I>=3</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Bounded_side_side_of_power_circle6const_Facet___f+_const_Weighted_point___p9_const;\"></A>\n<A HREF=\"../Kernel_23_ref/Enum_Bounded_side.html#Cross_link_anchor_99\">Bounded_side</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    rt.side_of_power_circle (  Facet f,  <A HREF=\"../Triangulation_2_ref/Class_Weighted_point.html#Cross_link_anchor_959\">Weighted_point</A> p)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns the position of the point <I>p</I> with respect to the\npower circle of <I>f</I>. More precisely, it returns:<BR>\n\n-  in dimension&nbsp;3:<BR>\n\n- For a finite facet,<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Enum_Bounded_side#Enum_Bounded_side\">ON_BOUNDARY</A></I> if <I>p</I> is orthogonal to the power circle in the\nplane of the facet,<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Enum_Bounded_side#Enum_Bounded_side\">ON_UNBOUNDED_SIDE</A></I> when their <A HREF=\"../Kernel_23_ref/Function_angle.html#Cross_link_anchor_153\">angle</A> is less than <MATH><I><IMG BORDER=0 WIDTH=9 HEIGHT=8 ALIGN=BOTTOM SRC=\"cc_pi.gif\">/2</I></MATH>,<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Enum_Bounded_side#Enum_Bounded_side\">ON_BOUNDED_SIDE</A></I> when it is greater than <MATH><I><IMG BORDER=0 WIDTH=9 HEIGHT=8 ALIGN=BOTTOM SRC=\"cc_pi.gif\">/2</I></MATH> (see\nFigure&nbsp;<A HREF=\"Class_Regular_triangulation_3.html#Triangulation3-fig-sidedim2\"><IMG SRC=\"cc_ref_up_arrow.gif\" ALT=\"reference\" WIDTH=\"10\" HEIGHT=\"10\"></A>).<BR>\n\n- For an infinite facet, it considers the plane defined by the finite\nfacet of the cell <I>f.first</I>, and does the same as in\ndimension&nbsp;2 in this plane.<BR>\n\n-  in dimension&nbsp;2:<BR>\n\n- For a finite facet,<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Enum_Bounded_side#Enum_Bounded_side\">ON_BOUNDARY</A></I> if <I>p</I> is orthogonal to the circle,<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Enum_Bounded_side#Enum_Bounded_side\">ON_UNBOUNDED_SIDE</A></I> when the <A HREF=\"../Kernel_23_ref/Function_angle.html#Cross_link_anchor_153\">angle</A> between <I>p</I> and the\npower circle of <I>f</I> is less than <MATH><I><IMG BORDER=0 WIDTH=9 HEIGHT=8 ALIGN=BOTTOM SRC=\"cc_pi.gif\">/2</I></MATH>,\n<I><A HREF=\"../Kernel_23_ref/Enum_Bounded_side#Enum_Bounded_side\">ON_BOUNDED_SIDE</A></I> when it is greater than <MATH><I><IMG BORDER=0 WIDTH=9 HEIGHT=8 ALIGN=BOTTOM SRC=\"cc_pi.gif\">/2</I></MATH>.<BR>\n\n- For an infinite facet,<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Enum_Bounded_side#Enum_Bounded_side\">ON_BOUNDED_SIDE</A></I> for a point in the open half plane defined by\n<I>f</I> and not containing any other point of the triangulation,<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Enum_Bounded_side#Enum_Bounded_side\">ON_UNBOUNDED_SIDE</A></I> in the other open half plane.<BR>\n\nIf the point <I>p</I> is <A HREF=\"../Kernel_23_ref/Function_collinear.html#Cross_link_anchor_167\">collinear</A> with the finite edge <I>e</I> of\n<I>f</I>, it returns:<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Enum_Bounded_side#Enum_Bounded_side\">ON_BOUNDED_SIDE</A></I> if <MATH><I><IMG BORDER=0 WIDTH=12 HEIGHT=12 ALIGN=BOTTOM SRC=\"cc_Pi.gif\">(p<SUP>(w)</SUP>-z(e)<SUP>(w)</SUP>)&lt;0</I></MATH>, where\n<MATH><I>z(e)<SUP>(w)</SUP></I></MATH> is the power segment of <I>e</I> in the line supporting\n<I>e</I>,<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Enum_Bounded_side#Enum_Bounded_side\">ON_BOUNDARY</A></I> if <MATH><I><IMG BORDER=0 WIDTH=12 HEIGHT=12 ALIGN=BOTTOM SRC=\"cc_Pi.gif\">(p<SUP>(w)</SUP>-z(e)<SUP>(w)</SUP>)=0</I></MATH>,<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Enum_Bounded_side#Enum_Bounded_side\">ON_UNBOUNDED_SIDE</A></I> if <MATH><I><IMG BORDER=0 WIDTH=12 HEIGHT=12 ALIGN=BOTTOM SRC=\"cc_Pi.gif\">(p<SUP>(w)</SUP>-z(e)<SUP>(w)</SUP>)&gt;0</I></MATH> .<BR>\n\n<EM>Precondition: </EM><I>rt</I>.<I>dimension()</I> <MATH><I> <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_geq.gif\"> 2</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Bounded_side_side_of_power_circle6Cell_handle_c+_int_i+_const_Weighted_point___p9_const;\"></A>\n<A HREF=\"../Kernel_23_ref/Enum_Bounded_side.html#Cross_link_anchor_99\">Bounded_side</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    rt.side_of_power_circle ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    Cell_handle c,<BR>\n\nint i,<BR>\n\n<A HREF=\"../Triangulation_2_ref/Class_Weighted_point.html#Cross_link_anchor_959\">Weighted_point</A> p)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Same as the previous method for facet <I>i</I> of cell <I>c</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Bounded_side_side_of_power_segment6Cell_handle_c+_const_Weighted_point___p9_const;\"></A>\n<A HREF=\"../Kernel_23_ref/Enum_Bounded_side.html#Cross_link_anchor_99\">Bounded_side</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    rt.side_of_power_segment ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    Cell_handle c,<BR>\n\n<A HREF=\"../Triangulation_2_ref/Class_Weighted_point.html#Cross_link_anchor_959\">Weighted_point</A> p)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    In dimension&nbsp;1, returns<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Enum_Bounded_side#Enum_Bounded_side\">ON_BOUNDED_SIDE</A></I> if <MATH><I><IMG BORDER=0 WIDTH=12 HEIGHT=12 ALIGN=BOTTOM SRC=\"cc_Pi.gif\">(p<SUP>(w)</SUP>-z(c)<SUP>(w)</SUP>)&lt;0</I></MATH>, where\n<MATH><I>z(c)<SUP>(w)</SUP></I></MATH> is the power segment of the edge represented by\n<I>c</I>,<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Enum_Bounded_side#Enum_Bounded_side\">ON_BOUNDARY</A></I> if <MATH><I><IMG BORDER=0 WIDTH=12 HEIGHT=12 ALIGN=BOTTOM SRC=\"cc_Pi.gif\">(p<SUP>(w)</SUP>-z(c)<SUP>(w)</SUP>)=0</I></MATH>,<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Enum_Bounded_side#Enum_Bounded_side\">ON_UNBOUNDED_SIDE</A></I> if <MATH><I><IMG BORDER=0 WIDTH=12 HEIGHT=12 ALIGN=BOTTOM SRC=\"cc_Pi.gif\">(p<SUP>(w)</SUP>-z(c)<SUP>(w)</SUP>)&gt;0</I></MATH> .<BR>\n\n<EM>Precondition: </EM><I>rt</I>.<I>dimension()</I> <MATH><I>= 1</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Vertex_handle_nearest_power_vertex6Point_p+_Cell_handle_c_=_Cell_handle699;\"></A>\nVertex_handle\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    rt.nearest_power_vertex ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    Point p,<BR>\n\nCell_handle c = Cell_handle())</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns the vertex of the triangulation which is nearest to <MATH><I>p</I></MATH>\nwith respect to the power distance. This  means that the power\nof the  query point <I>p</I> with respect to the weighted point in\nthe returned vertex is smaller than the power of <I>p</I>\n with respect to the weighted point\nin any other vertex. Ties are broken arbitrarily.\nThe default constructed\nhandle is returned if the triangulation is empty. \nThe optional argument <I>c</I> is a hint\nspecifying where to start the search.<BR>\n\n<EM>Precondition: </EM><I>c</I> is a cell of <I>rt</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Vertex_handle_nearest_power_vertex_in_cell6Point_p+_Cell_handle_c9;\"></A>\nVertex_handle\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    rt.nearest_power_vertex_in_cell ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    Point p,<BR>\n\nCell_handle c)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns the vertex of the cell <I>c</I> \nthat is nearest to <MATH><I>p</I></MATH>\nwith respect to the power distance.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<BR>\n\n<div class=\"AdvancedBlock\">\n  <table><tr><td valign=\"top\">\n  <img border=\"0\" src=\"cc_advanced_begin1.gif\" alt=\"begin of advanced section\">\n  </td><td valign=\"top\">\n  <em class=\"AdvancedBlockLabel\">&nbsp;advanced&nbsp;</em>\n  </td><td valign=\"top\">\n  <img border=\"0\" src=\"cc_advanced_begin2.gif\" alt=\"begin of advanced section\">\n  </td></tr></table>\n\n<H3>Checking</H3>\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_is_valid6bool_verbose_=_false9_const;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    rt.is_valid ( bool verbose = false)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Checks the combinatorial validity of the triangulation and the\nvalidity of its geometric embedding (see\nSection&nbsp;<A HREF=\"../Triangulation_3/Chapter_main.html#Triangulation3-sec-intro\"><IMG SRC=\"cc_ref_up_arrow.gif\" ALT=\"reference\" WIDTH=\"10\" HEIGHT=\"10\"></A>). Also checks that all the\npower spheres (resp. power circles in dimension&nbsp;2, power segments in\ndimension&nbsp;1) of cells (resp. facets in dimension&nbsp;2, edges in\ndimension&nbsp;1) are regular. When <I>verbose</I>\nis set to true, messages describing the first invalidity encountered\nare printed.<BR>\n\nThis method is mainly a debugging help for the users of\nadvanced features.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<table><tr><td valign=\"bottom\">\n  <img border=\"0\" src=\"cc_advanced_end1.gif\" alt=\"end of advanced section\">\n  </td><td valign=\"bottom\">\n  <em class=\"AdvancedBlockLabel\">&nbsp;advanced&nbsp;</em>\n  </td><td valign=\"bottom\">\n  <img border=\"0\" src=\"cc_advanced_end2.gif\" alt=\"end of advanced section\">\n  </td></tr></table></div>\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Concept_TriangulationTraits_3.html\"><I>TriangulationTraits_3</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_36!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 38274.0}