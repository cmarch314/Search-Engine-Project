{"text": "Navigation Up Table of Contents Bibliography Index Title Page Chapter 14Geomview Andreas Fabri and Sylvain Pion 14 1 Definition This chapter presents the CGAL interface to Geomview1 which is a viewer for three dimensional objects originally developed at the Geometry Center in Minneapolis2 Geomview 1 8 1 is required Note In releases up to and including 2 2 CGAL used to have the following requirement the last line in the startup file geomview must be echo started This is no longer necessary An object of the class Geomview stream is a stream in which geometric objects can be inserted and where geometric objects can be extracted from The constructor starts Geomview either on the local either on a remote machine Not all but most classes of the CGAL kernel have output operators for the Geomview stream 2D objects are embedded in the xy plane Input is only provided for points Polyhedron and 2D and 3D triangulations have output operators for the Geomview stream 14 2 Implementation The constructor forks a process and establishes two pipes between the processes The forked process is then overlaid with Geomview The file descriptors stdin and stdout of Geomview are hooked on the two pipes All insert operators construct expressions in gcl the Geomview command language which is a subset of LISP These expressions are sent to Geomview via the pipe The extract operators notify interest for a certain kind of events When such an event happens Geomview sends a description of the event in gcl and the extract operator has to parse this expression In order to implement further insert and extract operators you should take a look at the implementation and at the Geomview manual 14 3 Example The following program ouputs successively a 2D Delaunay triangulation projected a 3D Delaunay and a terrain from the set of points include CGAL Cartesian h include iostream ifndef CGAL USE GEOMVIEW int main std cout Geomview doesn t work on Windows so std endl return else include fstream include unistd h for sleep include CGAL Triangulation euclidean traits xy 3 h include CGAL Delaunay triangulation 2 h include CGAL Delaunay triangulation 3 h include CGAL IO Geomview stream h include CGAL IO Triangulation geomview ostream 2 h include CGAL IO Triangulation geomview ostream 3 h include CGAL intersections h typedef CGAL Cartesian double K typedef K Point 2 Point2 typedef CGAL Triangulation euclidean traits xy 3 K Gt3 typedef Gt3 Point Point3 typedef CGAL Delaunay triangulation 2 K Delaunay typedef CGAL Delaunay triangulation 2 Gt3 Terrain typedef CGAL Delaunay triangulation 3 K Delaunay3d int main CGAL Geomview stream gv CGAL Bbox 3 1 1 1 6 6 6 gv set line width 4 gv set trace true gv set bg color CGAL Color 2 2 gv clear Delaunay D Delaunay3d D3d Terrain T std ifstream iFile data points3 std ios in Point3 p while iFile p D insert Point2 p x p y D3d insert p T insert p use different colors and put a few sleeps clear gv CGAL BLUE std cout Drawing 2D Delaunay triangulation in wired mode n gv set wired true gv D if 1 It s too slow Needs to use OFF for that gv CGAL RED std cout Drawing its Voronoi diagram n gv set wired true D draw dual gv endif sleep 5 gv clear std cout Drawing 2D Delaunay triangulation in non wired mode n gv set wired false gv D sleep 5 gv clear std cout Drawing 3D Delaunay triangulation in wired mode n gv set wired true gv D3d sleep 5 gv clear std cout Drawing 3D Delaunay triangulation in non wired mode n gv set wired false gv D3d sleep 5 gv clear std cout Drawing Terrain in wired mode n gv set wired true gv T sleep 5 gv clear std cout Drawing Terrain in non wired mode n gv set wired false gv T std cout Enter a key to finish std endl char ch std cin ch return endif Footnotes 1 http www geomview org 2 http www geom umn edu Next chapter Geomview Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Geomview/Chapter_main.html", "title": "geomview", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Geomview/main.tex' -->\n<html> <head>  \n<title>Geomview</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_main.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n<a name=\"Chapter_14\"></a>\n  \n<h1>Chapter 14<BR>Geomview</h1>\n\n<A NAME=\"ChapterGeomview\"></A>\n<EM>Andreas Fabri  and Sylvain Pion</EM><BR>\n\n\n<P>\n\n<a name=\"Section_1\"></a>\n        \n<h2>14.1&nbsp;&nbsp;&nbsp;Definition</h2>\n<P>\n\nThis chapter presents the C<SMALL>GAL</SMALL> interface to Geomview<A HREF=\"#Footnote_1\"><SUP>1</SUP></A>, which is a\nviewer for three-dimensional objects, originally developed at the Geometry\nCenter in Minneapolis<A HREF=\"#Footnote_2\"><SUP>2</SUP></A>.\n<P>\n\nGeomview 1.8.1 is required.\n<P>\n\n<B>Note:</B> In releases up to and including 2.2, CGAL used to have\nthe following requirement : the last line in the startup file <I>.geomview</I>\nmust be <I>(echo &quot;started&quot;)</I>.  This is no longer necessary.\n<P>\n\nAn object of the class <I><A HREF=\"../Geomview_ref/Class_Geomview_stream.html#Cross_link_anchor_1760\">Geomview_stream</A></I> is a stream in which geometric\nobjects can be inserted and where geometric objects can be extracted\nfrom. The constructor starts Geomview either on the local either on\na remote machine.\n<P>\n\nNot all but most classes of the C<SMALL>GAL</SMALL> kernel have output\noperators for the  <I><A HREF=\"../Geomview_ref/Class_Geomview_stream.html#Cross_link_anchor_1760\">Geomview_stream</A></I>. \n2D objects are embedded in the <I>xy</I>-plane.\nInput is only provided for points.\nPolyhedron and 2D and 3D triangulations  have output\noperators for the  <I><A HREF=\"../Geomview_ref/Class_Geomview_stream.html#Cross_link_anchor_1760\">Geomview_stream</A></I>.\n<P>\n\n<a name=\"Section_2\"></a>\n        \n<h2>14.2&nbsp;&nbsp;&nbsp;Implementation</h2>\n<P>\n\nThe constructor forks a process and establishes two pipes between the\nprocesses. The forked process is then overlaid with Geomview. The\nfile descriptors <I>stdin</I> and <I>stdout</I> of Geomview are hooked\non the two pipes.\n<P>\n\nAll insert operators construct expressions in <I>gcl</I>, the Geomview\ncommand language, which is a subset of L<SMALL>ISP</SMALL>. These expressions\nare sent to Geomview via the pipe. The extract operators notify <I>interest</I>\nfor a certain kind of events. When such an event happens Geomview\nsends a description of the event in <I>gcl</I> and the extract operator has\nto parse this expression.\n<P>\n\nIn order to implement further insert and extract operators you should\ntake a look at the implementation and at the Geomview manual.\n<P>\n\n<a name=\"Section_3\"></a>\n        \n<h2>14.3&nbsp;&nbsp;&nbsp;Example</h2>\n\nThe following program ouputs successively a 2D\nDelaunay triangulation (projected), a 3D Delaunay, and a terrain\nfrom the set of points.\n<pre class=\"ExampleCode\">#include &lt;CGAL/<A HREF=\"../Kernel_23_ref/Class_Cartesian.html#Cross_link_anchor_6\">Cartesian</A>.h&gt;\n#include &lt;iostream&gt;\n\n#ifndef CGAL_USE_GEOMVIEW\nint main()\n{\n  std::cout &lt;&lt; &quot;Geomview doesn't work on Windows, so...&quot; &lt;&lt; std::endl;\n  return 0;\n}\n#else\n\n#include &lt;fstream&gt;\n#include &lt;unistd.h&gt; // for sleep()\n\n#include &lt;CGAL/<A HREF=\"../Triangulation_2_ref/Class_Triangulation_euclidean_traits_xy_3.html#Cross_link_anchor_945\">Triangulation_euclidean_traits_xy_3</A>.h&gt;\n\n#include &lt;CGAL/<A HREF=\"../Triangulation_2_ref/Class_Delaunay_triangulation_2.html#Cross_link_anchor_920\">Delaunay_triangulation_2</A>.h&gt;\n#include &lt;CGAL/<A HREF=\"../Triangulation_3_ref/Class_Delaunay_triangulation_3.html#Cross_link_anchor_974\">Delaunay_triangulation_3</A>.h&gt;\n\n#include &lt;CGAL/IO/<A HREF=\"../Geomview_ref/Class_Geomview_stream.html#Cross_link_anchor_1760\">Geomview_stream</A>.h&gt;\n#include &lt;CGAL/IO/Triangulation_geomview_ostream_2.h&gt;\n#include &lt;CGAL/IO/Triangulation_geomview_ostream_3.h&gt;\n\n#include &lt;CGAL/intersections.h&gt;\n\ntypedef <A HREF=\"../Kernel_23_ref/Class_Cartesian.html#Cross_link_anchor_5\">CGAL::Cartesian</A>&lt;double&gt;  K;\n\ntypedef K::<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> Point2;\ntypedef <A HREF=\"../Triangulation_2_ref/Class_Triangulation_euclidean_traits_xy_3.html#Cross_link_anchor_944\">CGAL::Triangulation_euclidean_traits_xy_3</A>&lt;K&gt; Gt3;\ntypedef Gt3::Point Point3;\n\ntypedef <A HREF=\"../Triangulation_2_ref/Class_Delaunay_triangulation_2.html#Cross_link_anchor_919\">CGAL::Delaunay_triangulation_2</A>&lt;K&gt;   Delaunay;\ntypedef <A HREF=\"../Triangulation_2_ref/Class_Delaunay_triangulation_2.html#Cross_link_anchor_919\">CGAL::Delaunay_triangulation_2</A>&lt;Gt3&gt; Terrain;\n\ntypedef <A HREF=\"../Triangulation_3_ref/Class_Delaunay_triangulation_3.html#Cross_link_anchor_973\">CGAL::Delaunay_triangulation_3</A>&lt;K&gt;   Delaunay3d;\n\nint main()\n{\n  <A HREF=\"../Geomview_ref/Class_Geomview_stream.html#Cross_link_anchor_1759\">CGAL::Geomview_stream</A> gv(<A HREF=\"../Kernel_23_ref/Class_Bbox_3.html#Cross_link_anchor_61\">CGAL::Bbox_3</A>(-100, -100, -100, 600, 600, 600));\n  gv.set_line_width(4);\n  // gv.set_trace(true);\n  gv.set_bg_color(<A HREF=\"../Colors_and_windows_ref/Class_Color.html#Cross_link_anchor_1753\">CGAL::Color</A>(0, 200, 200));\n  // gv.clear();\n\n  Delaunay D;\n  Delaunay3d D3d;\n  Terrain T;\n  std::ifstream iFile(&quot;data/points3&quot;, std::ios::in);\n  Point3 p;\n\n  while ( iFile &gt;&gt; p ) \n  { \n      D.insert( Point2(p.x(), p.y()) ); \n      D3d.insert( p );\n      T.insert( p );\n  }\n\n  // use different colors, and put a few sleeps/clear.\n\n  gv &lt;&lt; CGAL::BLUE;\n  std::cout &lt;&lt; &quot;Drawing 2D Delaunay triangulation in wired mode.\\n&quot;;\n  gv.set_wired(true);\n  gv &lt;&lt; D;\n\n#if 1 // It's too slow !  Needs to use OFF for that.\n  gv &lt;&lt; CGAL::RED;\n  std::cout &lt;&lt; &quot;Drawing its Voronoi diagram.\\n&quot;;\n  gv.set_wired(true);\n  D.draw_dual(gv);\n#endif\n\n  sleep(5);\n  gv.clear();\n\n  std::cout &lt;&lt; &quot;Drawing 2D Delaunay triangulation in non-wired mode.\\n&quot;;\n  gv.set_wired(false);\n  gv &lt;&lt; D;\n  sleep(5);\n  gv.clear();\n\n  std::cout &lt;&lt; &quot;Drawing 3D Delaunay triangulation in wired mode.\\n&quot;;\n  gv.set_wired(true);\n  gv &lt;&lt; D3d;\n  sleep(5);\n  gv.clear();\n  std::cout &lt;&lt; &quot;Drawing 3D Delaunay triangulation in non-wired mode.\\n&quot;;\n  gv.set_wired(false);\n  gv &lt;&lt; D3d;\n  sleep(5);\n  gv.clear();\n\n  std::cout &lt;&lt; &quot;Drawing Terrain in wired mode.\\n&quot;;\n  gv.set_wired(true);\n  gv &lt;&lt; T;\n  sleep(5);\n  gv.clear();\n  std::cout &lt;&lt; &quot;Drawing Terrain in non-wired mode.\\n&quot;;\n  gv.set_wired(false);\n  gv &lt;&lt; T;\n\n  std::cout &lt;&lt; &quot;Enter a key to finish&quot; &lt;&lt; std::endl;\n  char ch;\n  std::cin &gt;&gt; ch;\n\n  return 0;\n}\n#endif\n</pre>\n<P>\n\n<HR><H3>Footnotes</H3>\n<P>\n\n<TABLE><TR><TD VALIGN=TOP>\n</TD></TR><TR><TD VALIGN=TOP>\n        <A NAME=\"Footnote_1\">&nbsp;<SUP>1</SUP>&nbsp;</A></TD><TD VALIGN=TOP>\n<TT>http://www.geomview.org/\n</TD></TR><TR><TD VALIGN=TOP>\n        <A NAME=\"Footnote_2\">&nbsp;<SUP>2</SUP>&nbsp;</A></TD><TD VALIGN=TOP>\nhttp://www.geom.umn.edu/\n\n</TD></TR></TABLE>\n<div class=\"NavNext\"><hr> Next chapter: <a href=\"../Geomview_ref/Chapter_intro.html\">Geomview</a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_14!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 39425.0}