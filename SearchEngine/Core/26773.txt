{"text": "ICS 45J Fall 2 12 Setting Up Java and Eclipse On Your Computer A word of warning One of the advantages of programming in Java is that there are easy and cheap ways to set up a working Java environment on your own computer On the other hand working in the lab has some genuine benefits particularly for those of you who are new to ICS In the lab your development environment will be the same as the production environment so you won t have to worry about whether what you wrote at home will work in the lab It s also a great place to work with your partner and to talk over assignments with other ICS 45J students It also tends to be less distracting than working elsewhere Nevertheless we re aware that many of you will choose to do some percentage of your work on your own machines so as a courtesy we provide below enough information to have your Windows based or Macintosh computer support the Eclipse development environment and Oracle s release of Java using freely available software You are free to use any development environment you like but your resulting programs must work in the production environment for this course that is using Oracle s version of Java running under Eclipse So if you are completing the assignments on your own computer we strongly recommend you test them on the lab computers before turning them in Windows and Mac OS X Lion and Mountain Lion installations only This document only describes how to set up Sun s Java 7 and Eclipse Classic Indigo the environment for this class on a computer running Windows or Mac OS X 1 7 Lion or 1 8 Mountain Lion To install Java under these operating systems see the applicable section below If you want to run Java under a version of Mac OS X prior to Lion there is a version from the OpenJDK group but it requires a fair bit of Unix and can be tricky to install unless you are pretty familiar with Unix programming and package installation on Macs we suggest update your O S and install Sun s Java rather than the Open OS Java package If you use Linux or Solaris JDK 7 Update 7 can be downloaded from Java SE Downloads the same way it can for Windows we do not discuss the details of installation here but there is ample documentation available on the web Setting up Java on Windows Removing Eclipse and previous versions of Java First it s best if you delete Eclipse and uninstall all earlier versions of Java you have installed on your machine Use the Add Remove Programs utility in the Microsoft Windows Control Panel to uninstall Java delete the eclipse folder to delete Eclipse Leaving old versions causes setup of Java 7 to be more complicated and problematic Further an old version of Eclipse will not recognize the new version of Java without some rather messy settings changes whereas installing Eclipse after installing the new Java will cause Eclipse to find and use Java 7 without any fuss If you absolutely must keep older versions of Java on your machine the instructions below may not be sufficient to have the new version of Java work correctly you ll need to seek additional assistance Getting started What you ll need to get started is the latest production non beta version of the Java SE 7 JDK JDK 7 from Java SE Downloads since this is the version we use in the lab Just click on the JDK Download button in the Java SE 7u6 section of the screen accept the license agreement choose the version of Java that matches your operating system and save the downloaded exe file For those using Windows 7 and earlier related OS such as Windows Vista 2 and XP choose the download for Windows x86 systems The x86 version will work even if you have a 64 bit Itanium based machine If you would rather install the 64 bit x64 version of Java 7 on your 64 bit machine go ahead and download the 64 bit vesion s exe Be sure you download the JDK and not the JRE The JDK includes a Java compiler javac a Java virtual machine java and all of the standard Java library components in other words everything you need to write Java programs in a wide variety of problem domains and more than enough firepower for the assignments we ll be giving you The JRE is the Java Runtime Environment which includes the necessary code to allow you to run Java programs but not to write and compile them Installation the easy part The JDK includes an installation program which places all of the files into the appropriate places and sets up some desktop shortcuts for you Double click on the exe file you downloaded if asked say yes to allowing the program to modify your computer and then follow the instructions on the installation screens it s typically best to just accept the default settings On 32 bit machines the Java folder will be put inside the Program Files folder on the C drive that is its path will be C Program Files Java However if you are installing the 64 bit version of Java or the 32 bit version on a 64 bit machine the path may well be different Do make a note of the exact path used You will need it for the steps below Once Java is installed the installation program may bring up a screen for you to install JavaFX We do not use Java FX in this course so feel free to cancel that part of the installation When installation completes you ll be taken to a web page to register your installation registration is optional With installation complete you still won t be able to readily execute javac or java until you set the PATH and CLASSPATH properly Setting the PATH and CLASSPATH the not all that hard part You can execute programs from a command prompt by simply typing their names such as javac or java And Eclipse iissues these commands behind hte scenes when you run a program inside Eclipse But there s a catch Comand prompt and Eclipse need to know where to find these programs That is the job of the PATH environment variable Whenever a command to execute a program is given either by you or some running process on the computer Windows looks for it in the list of folders in the PATH Each folder in the PATH list is separated from the next by a semicolon forgetting or misplacing semicolons or backslashes is a major cause of the PATH not finding javac or java Similarly whenever the Java compiler or Java virtual machine needs to be able to use a Java class such as when you import a class from the Java library the compiler or virtual machine needs to know where to find it This is the job of the CLASSPATH environment variable CLASSPATH is a list of folders separated by semicolons in which the Java compiler or virtual machine will look for a Java class whenever it s trying to find one Forgetting or misplacing semicolons or backslashes is a major cause of the CLASSPATH not finding clases your program needs So to make the JDK work you have to modify the PATH and CLASSPATH environment variables on your system so that Windows will be able to find javac and java and so that javac and java will be able to find all of the necessary Java classes How you get to these environment variables is slightly different on different versions of Windows On Windows 7 and Vista click the start orb in the lower left corner of the screen move your mouse over Computer right click and select Properties from the pop up menu Click the Advanced System Settings link then click the Environment Variables button On Windows XP and 2 right click the My Computer icon on your desktop and select Properties Select the Advanced tab Click the Environment Variables button Once you ve brought up the environment variables find the PATH variable listed under System variables If Java was never previously installed on this machine add to the end of the PATH the path to the Java folder that the installation program created If you are using a 32 bit Java the text to add is C Program Files Java jdk1 7 6 bin Do note the semicolon that starts the text it must be present If you installed Java on a 64 bit machine you might need to change the Program Files Java part of the text above to match the path to the Java folder on your machine for example if Java was installed in the Program Files x86 folder the path text would be C Program Files x86 Java jdk1 7 6 bin If Java was previously installed somewhere in the PATH there is likely to be text very similar to the above differing only in the text between jdk and bin Change that part of the path to match the text above To check that the PATH is properly set call up a new Command Prompt window and enter javac version If you see javac 1 7 6 or similar text your path is properly set If you instead get an error message that javac cannot be found the PATH is not right you ll need to go back and fix it Now find the CLASSPATH variable If it doesn t exist and it probably won t if you ve never used your system to develop Java code click the New button specifying CLASSPATH as the name and for the value the same text you used for the PATH variable except have it end in lib instead of bin For example the CLASSPATH text for a standard 32 bit Java installation would be C Program Files Java jdk1 7 6 lib If the CLASSPATH does exist which it likely will if Java was previously installed on this computer change the CLASSPATH value text to match the text you added to your PATH replacing bin with lib If you re using javac and java from the command line you will need to bring up a new Command Prompt window in order for these changes to take effect That s it At this point your Java installation is ready to go you re now ready to proceed to installing Eclipse Setting up Eclipse on Windows Downloading Eclipse There are several different distirbutions of Eclipse available for download at eclipse org each geared toward users with differentneeds such as Java programming and web development For our work in this course we expect you to be using Eclipse Classic 4 2 Start by downloading it click on the big Download Eclipse button then find Eclipse Classic 4 2 If you are using Windows 7 or an earlier related OS such as Vista 2 or XP click the Windows 32 Bit button if you have a 64 bit machine you can download the 64 bit version of Classic instead Then click on a download site and save the downloaded ZIP file to your computer Installing Eclipse Eclipse is distributed as files in a Zip archive and unlike most software you install on Windows has no installation program Instead you do a few things on your own Find the zip file that you downloaded Extract it to C eclipse or somewhere else you feel comfortable putting it On Windows 7 you can extract it by opening the ZIP folder and draging the enclosed Eclipse folder to where you want to store eclipse The extraction process is likely to take a while a few minutes or more is not uncommon Once you ve extracted Eclipse into a folder go into that folder Find the file eclipse exe it may show up as eclipse if you have Windows Explorer configured to hide file extensions but you can recognize it because its icon will be the circular purple logo you see at eclipse org From here your next step depends on which version of Windows you re running On Windows 7 Double click on eclipse exe to start Eclipse When asked for a workspace use the default for now Once the program starts you ll see the Eclipse icon show up on your taskbar Right click that icon and select Pin this program to taskbar so that you ll be able to run Eclipse any time you d like On Windows 2 XP and Vista Right click on the eclipse exe file you found select Create Shortcut to create a shortcut to allow you to run Eclipse Drag this shortcut to your desktop or Quick Launch bar You can then use this shortcut to open Eclipse any time you d like That s it Eclipse is installed and ready to go Setting up Java on Mac OS X Lion or Mountain Lion Getting Started What you ll need to get started is the latest production non beta MAC version of the Java SE 7 JDK JDK 7 from Java SE Downloads since this is the version we use in the lab Just click on the JDK Download button in the Java SE 7u6 section of the screen accept the license agreement and click on the Mac OS download from the Java SE Development Kit 7u6 download list Be sure you download the JDK and not the JRE The JDK includes a Java compiler javac a Java virtual machine java and all of the standard Java library components in other words everything you need to write Java programs in a wide variety of problem domains and more than enough firepower for the assignments we ll be giving you The JRE is the Java Runtime Environment which includes the necessary code to allow you to run Java programs but not to write and compile them Installation the easy part The JDK includes an installation program which places all of the files into the appropriate places and sets up some desktop shortcuts for you The Mac download is a disk image dmg file Double click on it and a pseudo disk will appear on your disktop and a JDK 7 Update 6 window will appear click on the pkg package icon in the window to begin installation As installation progresses follow the instructions on the screens Close the update window when installation completes You can also dismount the disk and put the dmg file in the trash Checking if you have the latest version installed and selected as default The Mac will not necessarily use the new Java if a previous version of Java was installed To see what version of Java is being used open a new Terminal window by double clicking on the Terminal application it s usually found in the Utilities folder inside the Applications folder then type the following command java version If you have the latest version of Java installed you should see lines of text with the first line being java version 1 7 6 If you see that the version number starts with 1 7 you re in business Your machine is ready to go If you see a version number that starts with something other than 1 7 like 1 6 or 1 5 you ll need to continue following these instructions Checking what version of Java is the default on your machine Mac OS X is perfectly happy to let different versions of Java coexist on your machine installing a newer version of Java doesn t remove any earlier versions and doesn t even make the newer version the default Java on your machine So the next step is to make Java 1 7 the default version of Java Launch Applications then select Utilities then Java Preferences Click on the General tab if it s not already selected In the Java Application Runtime Settings box see if Java SE 7 64 bit is in the list if so drag it to the top of the list making sure that it is the first item Close the dialog box If Java SE 7 64 bit is not in the list at all you ll need to download and install the latest version of Java for your OS as discussed above then make it the default version if it is not already as discussed in this section Setting up Eclipse on Mac OS X Determining which version of Eclipse is right for you There are two separate downloads of Eclipse Classic 4 2 for Mac OS X on the main download page Mac OS X 32 Bit and Mac OX X 64 Bit You want the latter version if you are running Lion or Mountain Lion your Mac must be a 64 bit machine The 32 bit version of Eclipse is for Macs on the order of ten or more years old One could not run Java on such a machine but Eclipse supports many languages some of which have 32 bit versions Installing Eclipse on Mac OS X To install Eclipse Classic 4 2 Go to http www eclipse org downloads Look for the Eclipse Classic 4 2 entry click on Mac OS X 64 Bit Click on the main or a mirror download site Choose Save File in the dialog box that appears and click OK The file will download this may take a few minutes Double click on the resulting gz file to unzip and untar it A tar is kind of compressed file The result will be a folder called eclipse This too can take a few to several minutes Open the Eeclipse folder and double click on the Eclipse application package After a minute or two a dialog will ask you to select a workspace at which time you ll be ready to use Eclipse Note that as Eclipse runs there is a terminal window or two open that s ok When you exit Eclipse those windows will also close and Terminal will exit Mac section rewritten and several sections revised to reflect Sun now having a version of Java for the Mac Windows section updated to recommend deletion of previous versions of Java and of Eclipse prior to installation of current version of Java by Norman Jacobson August 2 12 Updated to specifically discuss what to do if computer being used does not have Java 1 7 to remind reader that programs must work in the production environment and say where to find OpenJDK 17 for the Mac by Norman Jacobson April 2 12 Updated to reflect new versions of software and fix minor typos by Norman Jacobson March 2 12 Updated to reflect new versions of software and changes to web sites by Norman Jacobson January 2 12 Updated to reflect new versions of software and changes to web sites and to place the emphasis on Windows 7 the version of Windows now used in the Help Center by Norman Jacobson June and September 2 11 Added direct links to Java downloads for OS X 1 5 and 1 6 by Norman Jacobson January 2 11 Updated to reflect new versions of software and new web addresses slight changes to section on Linux and Solaris by Norman Jacobson December 2 1 Added instructions for installing Eclipse on Mac OS X thanks to Norm Jacobson Winter 2 1 Instructions for modifying environment variables using Windows Vista and Windows 7 added by Alex Thornton Fall 2 9 Link to Soy Latte version of JDK 6 for older Macs added by Alex Thornton with a tip of the hat to Norm Jacobson and one of his students from last quarter Winter 2 9 The Mac OS X section rewritten to describe a simpler installation procedure with thanks to Norm Jacobson for the information by Alex Thornton Fall 2 8 The Mac OS X section reworked to describe Java 6 availability on Mac by Alex Thornton Spring 2 8 Tightened up a bit removing documentation regarding ancient versions of Windows updating version numbers by Alex Thornton Winter 2 8 A few minor changes by Alex Thornton Winter 2 7 Restructured by Alex Thornton to include information about setting up Java on Mac OS X mostly written by David G Kay Winter 2 6 Brief information about Mac OS X and Linux added by Alex Thornton Fall 2 5 A few minor changes by Alex Thornton Winter 2 5 Several changes made in light of the release of J2SE 5 by Alex Thornton Fall 2 4 A few minor changes by Alex Thornton Fall 2 2 Originally written by Alex Thornton for ICS 21 and ICS 22 Summer 2 2 ", "_id": "http://www.ics.uci.edu/~jacobson/ics45J/SettingUpJava.html", "title": "ics 45j fall 2012", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\r\n\"http://www.w3.org/TR/html4/loose.dtd\"> <html> <head> <meta\r\nhttp-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\"> <meta\r\nname=\"GENERATOR\" content=\"Mozilla/4.79 (Macintosh; U; PPC) [Netscape]\">\r\n<title>ICS 45J Fall 2012</title> <link rel=\"stylesheet\"\r\nhref=\"course.css\" type=\"text/css\"> </head>\r\n\r\n<body>\r\n\r\n<div class=title> <center> <h2>ICS 45J Fall 2012<br> Setting Up Java and\r\nEclipse On Your Computer</h2> </center>\r\n\r\n<div class=\"section\"> <p class=\"title\">A word of warning</p>\r\n\r\n<p>One of the advantages of programming in Java is that there are\r\neasy--and cheap--ways to set up a working Java environment on your own\r\ncomputer.  On the other hand, working in the lab has some genuine\r\nbenefits, particularly for those of you who are new to ICS. In the lab,\r\nyour development environment will be the same as the production\r\nenvironment, so you won't have to worry about whether what you wrote \"at\r\nhome\" will work \"in the lab.\" It's also a great place to work with your\r\npartner, and to talk over assignments with other ICS 45J students. It\r\nalso tends to be less distracting than working elsewhere.\r\n\r\n<p>Nevertheless, we're aware that many of you will choose to do some\r\npercentage of your work on your own machines, so, as a courtesy, we\r\nprovide below enough information to have your Windows-based or Macintosh\r\ncomputer support the Eclipse development environment and Oracle's\r\nrelease of Java, using freely available software.\r\n\r\nYou are free to use any development environment you like, but <i>your\r\nresulting programs must work in the \"production environment\" for this\r\ncourse;</i> that is, using Oracle's version of Java running under\r\nEclipse. So, if you are completing the assignments on your own computer,\r\nwe strongly recommend you test them on the lab computers before turning\r\nthem in.</p>\r\n\r\n</div> <div class=\"section\"> <hr />\r\n\r\n<p class=\"title\">Windows and Mac OS X Lion and Mountain Lion\r\ninstallations only</p>\r\n\r\n<p>This document only describes how to set up Sun's Java 7 and Eclipse\r\nClassic (Indigo)--the environment for this class--on a computer running\r\nWindows or Mac OS X 10.7 (Lion) or 10.8 (Mountain Lion). To install Java\r\nunder these operating systems, see the applicable section below.</p>\r\n\r\n<p>(If you want to run Java under a version of Mac OS X prior to Lion,\r\nthere is a version from the OpenJDK group, but it requires a fair bit of Unix and can be \r\ntricky to install; unless you are pretty familiar with Unix programming and package \r\ninstallation on Macs, we suggest update your O/S and install Sun's Java rather than the \r\nOpen OS Java package.)</p>\r\n\r\n<p>If you use Linux or Solaris, JDK 7 Update 7 can be downloaded from <a\r\nhref=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\r\n\">Java SE Downloads</a>, the same way it can for Windows; we do not\r\ndiscuss the details of installation here, but there is ample\r\ndocumentation available on the web.</p>\r\n\r\n\r\n</div>\r\n\r\n<div class=\"section\">\r\n\r\n<hr />\r\n\r\n<p class=\"title\">Setting up Java on Windows</p>\r\n\r\n\r\n<p class=\"subtitle\">Removing Eclipse and previous versions of Java</p>\r\n\r\n<p>First, it's best if you delete Eclipse and uninstall all earlier\r\nversions of Java you have installed on your machine. (Use the\r\n\"Add/Remove Programs\" utility in the Microsoft Windows Control Panel to\r\nuninstall Java; delete the <font class = \"codefacesmall\">eclipse</font>\r\nfolder to delete Eclipse.) Leaving old versions causes setup of Java 7\r\nto be more complicated and problematic. Further, an old version of\r\nEclipse will not recognize the new version of Java without some rather\r\nmessy settings changes, whereas installing Eclipse after installing the\r\nnew Java will cause Eclipse to find and use Java 7 without any fuss.  If\r\nyou absolutely must keep older versions of Java on your machine, the\r\ninstructions below may not be sufficient to have the new version of Java\r\nwork correctly&mdash;you'll need to seek additional assistance.\r\n\r\n<p class=\"subtitle\">Getting started</p>\r\n\r\n<p>What you'll need to get started is the latest  production (non-beta)\r\nversion of the Java SE 7 JDK (JDK 7) from <a\r\nhref=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\r\n\">Java SE Downloads</a>, since this is the version we use in the lab. \r\nJust click on the  <font class = \"codefacesmall\">JDK Download </font>\r\nbutton in the Java SE 7u6 section of the screen, accept the\r\nlicense agreement, choose the version of Java that matches your\r\noperating system and save the downloaded <font class =\r\n\"codefacesmall\">exe</font> file. For those using Windows 7 and earlier,\r\nrelated OS, such as Windows Vista, 2000, and XP, choose the download for\r\n<font class = \"codefacesmall\">Windows x86</font> systems. The x86\r\nversion will work even if you have a 64-bit (Itanium-based) machine.\r\n\r\nIf you would rather install the 64-bit (x64) version of Java 7 on your\r\n64-bit machine, go ahead and download the 64-bit vesion's <font class =\r\n\"codefacesmall\">exe</font>.</p>\r\n\r\n<p>  Be sure you download the JDK and <i>not</i> the JRE!  The JDK\r\nincludes a Java compiler (<font class = \"codefacesmall\">javac</font>), a\r\nJava virtual machine (<font class = \"codefacesmall\">java</font>), and\r\nall of the standard Java library components &mdash; in other words,\r\neverything you need to write Java programs in a wide variety of problem\r\ndomains, and more than enough firepower for the assignments we'll be\r\ngiving you.  (The JRE is the Java Runtime Environment, which includes\r\nthe necessary code to allow you to <i>run</i> Java programs, but not to\r\nwrite and compile them.)</p>\r\n\r\n<p class=\"subtitle\">Installation: the easy part</p>\r\n\r\n<p>The JDK includes an installation program, which places all of the\r\nfiles into the appropriate places and sets up some desktop shortcuts for\r\nyou: Double-click on the <font class = \"codefacesmall\">exe</font> file\r\nyou downloaded; if asked, say \"yes\" to allowing the program to modify\r\nyour computer, and then follow the instructions on the installation\r\nscreens (it's typically best to just accept the default settings).\r\n\r\nOn 32-bit machines, the <font class = \"codefacesmall\">Java</font> folder\r\nwill be put inside the <font class = \"codefacesmall\">Program\r\nFiles</font> folder on the C: drive; that is, its path will be <font\r\nclass = \"codefacesmall\">C:\\Program Files\\Java</font>. However, if you\r\nare installing the 64-bit version of Java, or the 32-bit version on a\r\n64-bit machine, the path may well be different. <i>Do make a note of the\r\nexact path used.</i> You will need it for the steps below.\r\n\r\n<p>Once Java is installed, the installation program may bring up a\r\nscreen for you to install JavaFX. We do not use Java FX in this course,\r\nso feel free to cancel that (part of the) installation.</p>\r\n\r\n<p>When installation completes, you'll be taken to a web page to\r\nregister your installation; registration is optional.</p>\r\n\r\n<p>With installation complete, you still won't be able to readily\r\nexecute <font class = \"codefacesmall\">javac</font> or <font class =\r\n\"codefacesmall\">java</font> until you set the PATH and CLASSPATH\r\nproperly.</p>\r\n\r\n<p class=\"subtitle\">Setting the PATH and CLASSPATH: the (not all that)\r\nhard part: </p>\r\n\r\n<p>You can execute programs from a command prompt by simply typing their\r\nnames, such as <font class = \"codefacesmall\">javac</font> or <font class\r\n= \"codefacesmall\">java</font>. And Eclipse iissues these commands behind\r\nhte scenes when you run a program inside Eclipse. But there's a catch:\r\nComand prompt and Eclipse need to know where to find these programs. \r\nThat is the job of the PATH environment variable.  Whenever a command to\r\nexecute a program is given (either by you or some running process on the\r\ncomputer), Windows looks for it in the list of folders in the PATH. Each\r\nfolder in the PATH list is separated from the next by a semicolon;\r\n<i>forgetting or misplacing semicolons or backslashes is a major cause\r\nof the PATH not finding javac or java</i>.</p>\r\n\r\n<p>Similarly, whenever the Java compiler or Java virtual machine needs\r\nto be able to use a Java class (such as when you import a class from the\r\nJava library), the compiler or virtual machine needs to know where to\r\nfind it.  This is the job of the CLASSPATH environment variable. \r\nCLASSPATH is a list of folders, separated by semicolons, in which the\r\nJava compiler or virtual machine will look for a Java class whenever\r\nit's trying to find one. <i>Forgetting or misplacing semicolons or\r\nbackslashes is a major cause of the CLASSPATH not finding clases your\r\nprogram needs.</i></p>\r\n\r\n<p>So, to make the JDK work, you have to modify the PATH and CLASSPATH\r\nenvironment variables on your system so that Windows will be able to\r\nfind <font class = \"codefacesmall\">javac</font> and <font class =\r\n\"codefacesmall\">java</font>, and so that <font class =\r\n\"codefacesmall\">javac</font> and <font class =\r\n\"codefacesmall\">java</font> will be able to find all of the necessary\r\nJava classes.</p>\r\n\r\n<p>How you get to these environment variables is slightly different on\r\ndifferent versions of Windows.</p>\r\n\r\n<p><i>On Windows 7 and Vista</i>, click the start orb in the lower-left\r\ncorner of the screen, move your mouse over <font class =\r\n\"codefacesmall\">Computer</font>, right-click, and select <font class =\r\n\"codefacesmall\">Properties</font> from the pop-up menu.  Click the <font\r\nclass = \"codefacesmall\">Advanced System Settings</font> link, then click\r\nthe <font class = \"codefacesmall\">Environment Variables...</font>\r\nbutton.</p>\r\n\r\n<p><i>On Windows XP and 2000</i>, right-click the <font class =\r\n\"codefacesmall\">My Computer</font> icon on your desktop and select <font\r\nclass = \"codefacesmall\">Properties</font>.  Select the <font class =\r\n\"codefacesmall\">Advanced</font> tab.  Click the <font class =\r\n\"codefacesmall\">Environment Variables...</font> button.</p>\r\n\r\n<p>Once you've brought up the environment variables, find the PATH\r\nvariable listed under \"System variables\". If Java was never previously\r\ninstalled on this machine,  add  to the <i>end</i> of the PATH the path\r\nto the Java folder that the installation program created. If you are\r\nusing a 32-bit Java, the text to add is</p>\r\n\r\n<pre> ;C:Program Files\\Java\\jdk1.7.0_06\\bin </pre>\r\n\r\n<p>Do note the semicolon (;) that starts the text: it must be\r\npresent.</p>\r\n\r\nIf you installed Java on a 64-bit machine, you might need to change\r\nthe<font class = \"codefacesmall\"> \\Program Files\\Java</font> part of the\r\ntext above to match the path to the Java folder on your machine; for\r\nexample, if Java was installed in the <font class =\r\n\"codefacesmall\">\\Program Files (x86)</font> folder, the path text would\r\nbe\r\n\r\n<pre> ;C:\\Program Files (x86)\\Java\\jdk1.7.0_06\\bin </pre>\r\n\r\n<p>If Java was previously installed, somewhere in the PATH there is\r\nlikely to be text very similar to the above, differing only in the text\r\nbetween  <font class=\"codefacesmall\">jdk</font>(and <font\r\nclass=\"codefacesmall\">\\bin</font>). Change that part of the path to match\r\nthe text above.</p>\r\n\r\n<p>To check that the PATH is properly set, call up a <i>new</i> Command\r\nPrompt window and enter <font class = \"codefacesmall\">javac\r\n-version</font>.</p> If you see <font class = \"codefacesmall\">javac\r\n1.7.0_06</font> or similar text, your path is properly set. If you\r\ninstead get an error message that javac cannot be found, the PATH is not\r\nright; you'll need to go back and fix it.\r\n\r\n<p>Now find the CLASSPATH variable.  If it doesn't exist (and it\r\nprobably won't, if you've never used your system to develop Java code),\r\nclick the <font class = \"codefacesmall\">New...</font> button, specifying\r\nCLASSPATH as the name, and, for the value, the same text you used for\r\nthe PATH variable, except have it end in <font class =\r\n\"codefacesmall\">lib</font> instead of <font class =\r\n\"codefacesmall\">bin</font>. For example, the CLASSPATH text for a\r\nstandard 32-bit Java installation would be</p>\r\n\r\n<pre> .;C:\\Program Files\\Java\\jdk1.7.0_06\\lib </pre>\r\n\r\n<p>If the CLASSPATH does exist, which it likely will if Java was \r\npreviously installed on this computer, change the CLASSPATH value text\r\nto match the text you added to your PATH,  replacing <font class =\r\n\"codefacesmall\">bin</font> with <font class =\r\n\"codefacesmall\">lib</font>.</p>\r\n\r\n<p>If you're using <font class = \"codefacesmall\">javac</font> and <font\r\nclass = \"codefacesmall\">java</font> from the command line, you will need\r\nto bring up a new Command Prompt window, in order for these changes to\r\ntake effect.</p>\r\n\r\n<p class=\"subtitle\">That's it!</p>\r\n\r\n<p>At this point, your Java installation is ready to go; you're now\r\nready to proceed to installing Eclipse.</p>\r\n\r\n</div>\r\n\r\n<div class=\"section\">\r\n\r\n<hr />\r\n\r\n<p class=\"title\">Setting up Eclipse on Windows</p>\r\n\r\n<p class=\"subtitle\">Downloading Eclipse</p>\r\n\r\n<p>There are several different distirbutions of Eclipse available for\r\ndownload at <a href=\"http://eclipse.org/\">eclipse.org</a>, each geared\r\ntoward users with differentneeds, such as Java programming and web\r\ndevelopment. For our work in this course, we expect you to be using\r\n<b>Eclipse Classic 4.2</b>.  Start by downloading it: click on the big\r\n<font class = \"codefacesmall\">Download Eclipse</font> button, then find \r\nEclipse Classic 4.2. If you are using Windows 7 or an earlier, related\r\nOS such as Vista, 2000, or XP, click the <font class =\r\n\"codefacesmall\">Windows 32 Bit</font> button; if you have a 64-bit\r\nmachine, you can download the 64-bit version of Classic instead. Then\r\nclick on a download site and save the downloaded ZIP file to your\r\ncomputer.</p>\r\n\r\n<p class=\"subtitle\">Installing Eclipse</p>\r\n\r\n<p>Eclipse is distributed as files in a Zip archive and, unlike most\r\nsoftware you install on Windows, has no installation program.  Instead,\r\nyou do a few things on your own.</p>\r\n\r\n<ul> <li>Find the <font class = \"codefacesmall\">.zip</font> file that\r\nyou downloaded.  Extract it to <font class =\r\n\"codefacesmall\">C:\\eclipse</font>, or somewhere else you feel\r\ncomfortable putting it.  (On Windows 7, you can extract it by opening\r\nthe ZIP folder and draging the enclosed <font class =\r\n\"codefacesmall\">Eclipse</font> folder to where you want to store\r\neclipse.) The extraction process is likely to take a while; a few\r\nminutes or more is not uncommon.</li>\r\n\r\n<li>Once you've extracted Eclipse into a folder, go into that folder. \r\nFind the file <font class = \"codefacesmall\">eclipse.exe</font> &mdash;\r\nit may show up as <font class = \"codefacesmall\">eclipse</font> if you\r\nhave Windows Explorer configured to hide file extensions, but you can\r\nrecognize it because its icon will be the circular purple logo you see\r\nat <a href=\"http://eclipse.org/\">eclipse.org</a>.</li> </ul>\r\n\r\n<p>From here, your next step depends on which version of Windows you're\r\nrunning.</p>\r\n\r\n<p><i>On Windows 7</i>.  Double-click on <font class =\r\n\"codefacesmall\">eclipse.exe</font> to start Eclipse.  When asked for a\r\nworkspace, use the default for now.  Once the program starts, you'll see\r\nthe Eclipse icon show up on your taskbar.  Right-click that icon and\r\nselect <font class = \"codefacesmall\">Pin this program to taskbar</font>,\r\nso that you'll be able to run Eclipse any time you'd like.</p>\r\n\r\n<p><i>On Windows 2000, XP, and Vista</i>.  Right-click on the <font\r\nclass = \"codefacesmall\">eclipse.exe</font> file you found, select <font\r\nclass = \"codefacesmall\">Create Shortcut</font> to create a shortcut to\r\nallow you to run Eclipse.  Drag this shortcut to your desktop or Quick\r\nLaunch bar.  You can then use this shortcut to open Eclipse any time\r\nyou'd like.</p>\r\n\r\n<p>That's it!  Eclipse is installed and ready to go.</p>\r\n\r\n</div>\r\n\r\n<div class=\"section\">\r\n\r\n<hr />\r\n\r\n<p class=\"title\">Setting up Java on Mac OS X Lion or Mountain Lion</p>\r\n\r\n<p class=\"subtitle\">Getting Started</p>\r\n\r\n<p>What you'll need to get started is the latest  production (non-beta)\r\nMAC version of the Java SE 7 JDK (JDK 7) from <a\r\nhref=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\r\n\">Java SE Downloads</a>, since this is the version we use in the lab. \r\nJust click on the  <font class = \"codefacesmall\">JDK Download </font>\r\nbutton in the Java SE 7u6 section of the screen, accept the\r\nlicense agreement, and click on the Mac OS download from the Java SE Development \r\nKit 7u6 download list.</p>\r\n\r\n<p>  Be sure you download the JDK and <i>not</i> the JRE!  The JDK\r\nincludes a Java compiler (<font class = \"codefacesmall\">javac</font>), a\r\nJava virtual machine (<font class = \"codefacesmall\">java</font>), and\r\nall of the standard Java library components &mdash; in other words,\r\neverything you need to write Java programs in a wide variety of problem\r\ndomains, and more than enough firepower for the assignments we'll be\r\ngiving you.  (The JRE is the Java Runtime Environment, which includes\r\nthe necessary code to allow you to <i>run</i> Java programs, but not to\r\nwrite and compile them.)</p>\r\n\r\n<p class=\"subtitle\">Installation: the easy part</p>\r\n\r\n<p>The JDK includes an installation program, which places all of the\r\nfiles into the appropriate places and sets up some desktop shortcuts for\r\nyou. The Mac download is a disk image (.dmg) file. Double click on it and\r\na pseudo-disk will appear on your disktop and \r\na <font class =\r\n\"codefacesmall\">JDK 7 Update 06</font> window will appear; click on the <font class =\r\n\"codefacesmall\">.pkg</font> (package) icon in the window to begin installation. \r\nAs installation \r\nprogresses, follow the instructions on the screens. Close the update window\r\nwhen installation completes. (You can also dismount the disk and put the\r\n.dmg file in the trash.\r\n\r\n<p class=\"subtitle\">Checking if you have the latest version installed\r\nand selected as default</p>\r\n\r\n<p>The Mac will not necessarily use the new Java if a previous version\r\nof Java was installed.  To see what version of Java is being used, open\r\na new Terminal window (by double-clicking on the Terminal\r\napplication&mdash;it's usually found in the Utilities folder inside the\r\nApplications folder), then type the following command:</p>\r\n\r\n<pre> java -version </pre>\r\n\r\n<p>If you have the latest version of Java installed, you should see\r\nlines of text, with the first line being</p>\r\n\r\n<pre> java version \"1.7.0_06\" </pre>\r\n\r\n<p>If you see that the version number starts with \"1.7.0,\" you're in\r\nbusiness!  Your machine is ready to go.</p>\r\n\r\n<p>If you see a version number that starts with something other than\r\n\"1.7\" (like \"1.6\" or \"1.5\"), you'll need to continue following these\r\ninstructions.</p>\r\n\r\n<p class=\"subtitle\">Checking what version of Java is the default on your\r\nmachine</p>\r\n\r\n<p>Mac OS X is perfectly happy to let different versions of Java coexist\r\non your machine; installing a newer version of Java doesn't remove any\r\nearlier versions and doesn't even make the newer version the default\r\nJava on your machine.  So, the next step is to make Java 1.7 the default\r\nversion of Java.</p>\r\n\r\n<p>Launch <font class = \"codefacesmall\">Applications</font>, then select\r\n<font class = \"codefacesmall\">Utilities</font>, then <font class = \"codefacesmall\">Java\r\nPreferences</font>.  Click on the <font class =\r\n\"codefacesmall\">General</font> tab, if it's not already selected.  In\r\nthe Java Application Runtime Settings box, see if Java SE 7 (64 bit) is\r\nin the list; if so, drag it to the top of the list, making sure that it\r\nis the first item.  <font class = \"codefacesmall\">Close</font> the\r\ndialog box.</p>\r\n\r\n<p>If Java SE 7 (64 bit) is not in the list at all, you'll need to\r\ndownload and install the latest version of Java for your OS, as\r\ndiscussed above, then make it the default version (if it is not already)\r\nas discussed in this section.</p>\r\n\r\n</div>\r\n\r\n<div class=\"section\">\r\n\r\n<hr />\r\n\r\n<p class=\"title\">Setting up Eclipse on Mac OS X</p>\r\n\r\n<p class=\"subtitle\">Determining which version of Eclipse is right for\r\nyou</p>\r\n\r\n<p>There are two separate downloads of Eclipse Classic 4.2 for Mac OS X\r\non the main download page, <font class = \"codefacesmall\">Mac OS X 32\r\nBit</font> and <font class = \"codefacesmall\">Mac OX X 64 Bit</font>. \r\nYou want the latter version: if you are running Lion or Mountain Lion,\r\nyour Mac must be a 64-bit machine. (The 32-bit version of Eclipse is for\r\nMacs on the order of ten or more years old. One could not run Java on\r\nsuch a machine, but Eclipse supports many languages, some of which have\r\n32-bit versions.)\r\n\r\n<p class=\"subtitle\">Installing Eclipse on Mac OS X</p>\r\n\r\n<p>To install Eclipse Classic 4.2:</p>\r\n\r\n<ul> <li>Go to <a\r\nhref=\"http://www.eclipse.org/downloads/\">http://www.eclipse.org/\r\ndownloads/</a>.</li>\r\n\r\n<li>Look for the Eclipse Classic 4.2 entry; click on <font class =\r\n\"codefacesmall\">Mac OS X 64 Bit</font>.</li>\r\n\r\n<li>Click on the main or a mirror download site.  Choose <font class =\r\n\"codefacesmall\">Save File</font> in the dialog box that appears and\r\nclick <font class = \"codefacesmall\">OK</font>.</li> <li>The file will\r\ndownload &mdash; this may take a few minutes.</li>\r\n\r\n<li>Double-click on the resulting .gz file to unzip and untar it. (A\r\n\"tar\" is kind of compressed file).  The result will be a folder called\r\n\"eclipse\".  This, too, can take a few to several minutes.</li> <li>Open\r\nthe\"<font class = \"codefacesmall\">Eeclipse</font> folder and double-click\r\non the Eclipse application package.  After a minute or two, \r\na dialog will\r\nask you to select a workspace, at which time you'll be ready to use\r\nEclipse. Note that, as Eclipse runs, there is a terminal window or two open; that's ok. When\r\nyou exit Eclipse, those windows will also close (and Terminal will exit).</li> </ul>\r\n\r\n</div>\r\n\r\n<div class=\"history\">\r\n\r\n<hr />\r\n\r\n<ul class=\"nomarker\"> <li>Mac section rewritten and several sections\r\nrevised to reflect Sun now having a version of Java for the Mac; \r\n<br>Windows section updated to recommend deletion of previous versions of Java and\r\nof Eclipse prior to installation of current version of Java, \r\n<br>by Norman Jacobson, August 2012. \r\n<li>Updated to specifically discuss what to do if\r\ncomputer being used does not have Java 1.7,  to remind reader that\r\nprograms must work in the <br>production environment, and say where to\r\nfind OpenJDK 17 for the Mac, by Norman Jacobson, April 2012. \r\n<li>Updated\r\nto reflect new versions of software and fix minor typos, by Norman\r\nJacobson, March 2012. \r\n<li>Updated to reflect new versions of software\r\nand changes to web sites, by Norman Jacobson, January 2012. \r\n<li>Updated\r\nto reflect new versions of software and changes to web sites, and to\r\nplace the emphasis on Windows 7, the version of Windows now \r\n<br>used in\r\nthe Help Center, by Norman Jacobson, June and September 2011. \r\n<li>Added\r\ndirect links to Java downloads for OS X 10.5 and 10.6, by Norman\r\nJacobson, January 2011. \r\n<li>Updated to reflect new versions of software\r\nand new web addresses; slight changes to section on Linux and Solaris,\r\nby Norman Jacobson, December 2010. \r\n<li>Added instructions for installing\r\nEclipse on Mac OS X, thanks to Norm Jacobson, Winter 2010.</li>\r\n<li>Instructions for modifying environment variables using Windows Vista\r\nand Windows 7 added by Alex Thornton, Fall 2009.</li> \r\n<li>Link to Soy\r\nLatte version of JDK 6 for older Macs added by Alex Thornton (with a tip\r\nof the hat to Norm Jacobson and one <br>of his students from last\r\nquarter), Winter 2009.</li>\r\n<li>The Mac OS X section rewritten to describe a simpler installation\r\nprocedure (with thanks to Norm Jacobson for the information) <br>by Alex\r\nThornton, Fall 2008.</li> \r\n<li>The Mac OS X section reworked, to describe\r\nJava 6 availability on Mac, by Alex Thornton, Spring 2008.</li>\r\n<li>Tightened up a bit &mdash; removing documentation regarding ancient\r\nversions of Windows, updating version numbers &mdash; <br>by Alex\r\nThornton, Winter 2008.</li> \r\n<li>A few minor changes by Alex Thornton,\r\nWinter 2007.</li> \r\n<li>Restructured by Alex Thornton to include\r\ninformation about setting up Java on Mac OS X, mostly written by David\r\nG. Kay, Winter 2006.</li>\r\n\r\n<li>Brief information about Mac OS X and Linux added by Alex Thornton,\r\nFall 2005.</li> \r\n<li>A few minor changes by Alex Thornton, Winter\r\n2005.</li> \r\n<li>Several changes made (in light of the release of J2SE\r\n5.0) by Alex Thornton, Fall 2004.</li> \r\n<li>A few minor changes by Alex\r\nThornton, Fall 2002.</li> \r\n<li>Originally written by Alex Thornton for\r\nICS 21 and ICS 22, Summer 2002.</li> </ul>\r\n\r\n</div>\r\n\r\n</body> </html>\r\n", "id": 26773.0}