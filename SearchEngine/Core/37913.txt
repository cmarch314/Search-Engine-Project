{"text": "Navigation Up Table of Contents Bibliography Index Title Page CGAL Inverse index IC DefinitionThe class Inverse index IC constructs an inverse index for a given range i j of two iterators or circulators of type IC The first element I in the range i j has the index Consecutive elements are numbered incrementally The inverse index provides a query for a given iterator or circulator k to retrieve its index number Precondition The iterator or circulator must be either of the random access category or the dereference operator must return stable and distinguishable addresses for the values e g proxies or non modifiable iterator with opaque values will not work include CGAL iterator h Creation Inverse index IC inverse invalid index Inverse index IC inverse IC i empty inverse index initialized to start at i Inverse index IC inverse IC i IC j inverse index initialized with range i j Operations std size t inverse IC k returns inverse index of k Precondition k has been stored in the inverse index void inverse push back IC k adds k at the end of the indices Implementation For random access iterators or circulators it is done in constant time by subtracting i For other iterator categories an STL map is used which results in a logj i query time The comparisons are done using the operator operator on pointers See AlsoCGAL Random access adaptor IC CGAL Random access value adaptor IC T Next Random access adaptor IC Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/STL_Extension_ref/Class_Inverse_index.html", "title": "inverse_index&lt;ic&gt;", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './STL_Extension_ref/stl_extension.tex' -->\n<html> <head>  \n<title>Inverse_index&lt;IC&gt;</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_1467\"></A>\n\n<A NAME=\"Cross_link_anchor_1468\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_1439\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Class.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_CGAL::Inverse_index<IC>\"></A>\n<h2><I>CGAL::Inverse_index&lt;IC&gt;</I></h2>\n<P>\n\n<H3>Definition</H3>The class <I><A HREF=\"Class_Inverse_index.html#Cross_link_anchor_1468\">Inverse_index</A>&lt;IC&gt;</I> constructs an inverse\n  index for a given range [<MATH><I>i,j</I></MATH>) of two iterators or circulators of\n  type <I>IC</I>.  The first element <MATH><I>I</I></MATH> in the range [<MATH><I>i,j</I></MATH>) has the\n  index 0.  Consecutive elements are numbered incrementally. The\n  inverse index provides a query for a given iterator or circulator\n  <MATH><I>k</I></MATH> to retrieve its index number. <I>Precondition:</I> The iterator\n  or circulator must be either of the random access category or the\n  dereference operator must return stable and distinguishable\n  addresses for the values, e.g.&nbsp;proxies or non-modifiable iterator\n  with opaque values will not work.\n<P>\n\n<I>#include &lt;<A HREF=\"../../../include/CGAL/iterator.h\">CGAL/iterator.h</A>&gt;</I>\n<P>\n\n<H3>Creation</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Inverse_index.html#Cross_link_anchor_1468\">Inverse_index</A>&lt;IC&gt; inverse;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    invalid index.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Inverse_index.html#Cross_link_anchor_1468\">Inverse_index</A>&lt;IC&gt; inverse (  IC i);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    empty inverse\n    index initialized to start at <MATH><I>i</I></MATH>.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Inverse_index.html#Cross_link_anchor_1468\">Inverse_index</A>&lt;IC&gt; inverse (  IC i,  IC j);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    inverse index initialized with range [<MATH><I>i,j</I></MATH>).\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Operations</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    std::size_t\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n     inverse [  IC k]<A NAME=\"Function_std::size_t_operator696_const_IC__k9;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns inverse\n    index of <MATH><I>k</I></MATH>.<BR>\n\n<EM>Precondition: </EM><MATH><I>k</I></MATH> has been stored in the inverse\n    index.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_push_back6_const_IC__k9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    inverse.push_back (  IC k)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    adds <MATH><I>k</I></MATH> at the end of the\n    indices.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Implementation</H3>\n<P>\n\nFor random access iterators or circulators, it is done in constant\n  time by subtracting <MATH><I>i</I></MATH>. For other iterator categories, an STL \n  <I>map</I> is used, which results in a <MATH><I></I></MATH>log<MATH><I>j-i</I></MATH> query time. The\n  comparisons are done using the operator <I>operator&lt;</I> on pointers.\n<P>\n\n<H3>See Also</H3><I><A HREF=\"Class_Random_access_adaptor.html#Cross_link_anchor_1469\">CGAL::Random_access_adaptor</A>&lt;IC&gt;</I><BR>\n\n<I><A HREF=\"Class_Random_access_value_adaptor.html#Cross_link_anchor_1471\">CGAL::Random_access_value_adaptor</A>&lt;IC,T&gt;</I>\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Class_Random_access_adaptor.html\"><I>Random_access_adaptor&lt;IC&gt;</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_3!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 37913.0}