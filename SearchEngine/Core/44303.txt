{"text": "Search LoginPreferencesHelp GuideAbout Trac WikiTimelineRoadmapBrowse SourceView TicketsSearch Context Navigation BlameRevision Log source nomatic tags NomaticIM 5 buddy bots src twisted python zshcomp py View diff against View revision Visit trunk Last change on this file was 712 checked in by cbaker 7 years ago First draft of nomatic buddy bots oscar bot is functional if you give it good authentication credentials jabber bot is just an example from the web File size 27 KB Line 1 test case name twisted test test zshcomp 2 Copyright c 2 6 Twisted Matrix Laboratories 3 See LICENSE for details 45 6Rebuild the completion functions for the currently active version of Twisted 7 python zshcomp py i89This module implements a zsh code generator which generates completion code for1 commands that use twisted python usage This is the stuff that makes pressing11Tab at the command line work 1213API Stability Unstable1415 maintainer Eric Mangold1617To build completion functions for your own commands and not Twisted commands 18then just do something like this 192 o mymodule MyOptions 21 f file mycommand w 22 Builder mycommand o f write 2324Then all you have to do is place the generated file somewhere in your25C fpath and restart zsh Note the site functions directory in your26C fpath where you may install 3rd party completion functions like the one27you re building Call C siteFunctionsPath to locate this directory28programmatically 293 SPECIAL CLASS VARIABLES You may set these on your usage Options subclass 3132 zsh altArgDescr33 zsh multiUse34 zsh mutuallyExclusive35 zsh actions36 zsh actionDescr37 zsh extras3839Here is what they mean with examples 4 41 zsh altArgDescr foo use this description for foo instead 42 A dict mapping long option names to alternate descriptions When this43 variable is present the descriptions contained here will override44 those descriptions provided in the optFlags and optParameters45 variables 4647 zsh multiUse foo bar 48 A sequence containing those long option names which may appear on the49 command line more than once By default options will only be completed5 one time 5152 zsh mutuallyExclusive foo bar bar baz 53 A sequence of sequences with each sub sequence containing those long54 option names that are mutually exclusive That is those options that55 cannot appear on the command line together 5657 zsh actions foo files g foo bar one two three 58 colors values s colors to use red green blue 59 A dict mapping long option names to Zsh actions These actions6 define what will be completed as the argument to the given option By61 default all files dirs will be completed if no action is given 6263 Callables may instead be given for the values in this dict The64 callable should accept no arguments and return a string that will be65 used as the zsh action in the same way as the literal strings in the66 examples above 6768 As you can see in the example above The foo option will have files69 that end in foo completed when the user presses Tab The bar 7 option will have either of the strings one two or three 71 completed when the user presses Tab 7273 colors will allow multiple arguments to be completed seperated by74 commas The possible arguments are red green and blue Examples 7576 my command foo some file foo colors red green77 my command colors green78 my command colors green blue798 Actions may take many forms and it is beyond the scope of this81 document to illustrate them all Please refer to the documention for82 the Zsh arguments function zshcomp is basically a front end to Zsh s83 arguments completion function 8485 That documentation is available on the zsh web site at this URL 86 U http zsh sunsite dk Doc Release zsh 19 html SEC124 8788 zsh actionDescr logfile log file name random random seed 89 A dict mapping long option names to a description for the corresponding9 zsh action These descriptions are show above the generated matches91 when the user is doing completions for this option 9293 Normally Zsh does not show these descriptions unless you have94 verbose completion turned on Turn on verbosity with this in your95 zshrc 9697 zstyle completion verbose yes98 zstyle completion descriptions format B d b 991 zsh extras file to read from action file to write to action 1 1 A sequence of extra arguments that will be passed verbatim to Zsh s1 2 arguments completion function The arguments function does all the1 3 hard work of doing command line completions You can see how zshcomp1 4 invokes the arguments call by looking at the generated completion1 5 files that this module creates 1 61 7 NOTE 1 81 9 You will need to use this variable to describe completions for normal11 command line arguments That is those arguments that are not111 associated with an option That is the arguments that are given to the112 parseArgs method of your usage Options subclass 113114 In the example above the 1st non option argument will be described as115 file to read from and completion options will be generated in116 accordance with the action See above about zsh actions The117 2nd non option argument will be described as file to write to and118 the action will be interpreted likewise 11912 Things you can put here are all documented under the arguments121 function here U http zsh sunsite dk Doc Release zsh 19 html SEC124 122123Zsh Notes 124125To enable advanced completion add something like this to your zshrc 126127 autoload U compinit128 compinit12913 For some extra verbosity and general niceness add these lines too 131132 zstyle completion verbose yes133 zstyle completion descriptions format B d b 134 zstyle completion messages format d 135 zstyle completion warnings format No matches for d 136137Have fun 138 139import itertools sys commands os path14 141from twisted python import reflect util usage142from twisted scripts mktap import IServiceMaker143144class MyOptions usage Options 145 146 Options for this file147 148 longdesc 149 synopsis Usage python zshcomp py install i output directory 15 optFlags install i 151 Output files to the installation directory 152 twisted python zsh in the currently active 153 Twisted package 154 optParameters directory d None 155 Output files to this directory 156 def postOptions self 157 if self install and self directory 158 raise usage UsageError Can t have install and 159 directory at the same time 16 if not self install and not self directory 161 raise usage UsageError Not enough arguments 162 if self directory and not os path isdir self directory 163 raise usage UsageError s is not a directory self directory 164165class Builder 166 def init self cmd name options file 167 168 type cmd name C str 169 param cmd name The name of the command17 171 type options C twisted usage Options 172 param options The C twisted usage Options instance defined for173 this command174175 type file C file 176 param file The C file to write the completion function to177 178179 self cmd name cmd name18 self options options181 self file file182183 def write self 184 185 Write the completion function to the file given to init 186 return C None 187 188 by default we just write out a single call to arguments189 self file write compdef s n self cmd name 19 gen ArgumentsGenerator self cmd name self options self file 191 gen write 192193class SubcommandBuilder Builder 194 195 Use this builder for commands that have sub commands twisted python usage196 has the notion of sub commands that are defined using an entirely seperate197 Options class 198 199 interface None2 subcmdLabel None2 12 2 def write self 2 3 2 4 Write the completion function to the file given to init 2 5 return C None 2 6 2 7 self file write compdef s n self cmd name 2 8 self file write local zsh subcmds array n zsh subcmds array n 2 9 from twisted import plugin as newplugin21 plugins newplugin getPlugins self interface 211212 for p in plugins 213 self file write s s n p tapname p description 214 self file write n n 215216 self options class zsh extras subcmd subcmd 217 gen ArgumentsGenerator self cmd name self options self file 218 gen write 21922 self file write if CURRENT 1 then221 describe s zsh subcmds array ret 222fi223 ret return 224225service words 1 226227case service in n self subcmdLabel 228229 plugins newplugin getPlugins self interface 23 for p in plugins 231 self file write p tapname n 232 gen ArgumentsGenerator p tapname p options self file 233 gen write 234 self file write n 235 self file write message don t know how to 236 complete service nesac 237238class MktapBuilder SubcommandBuilder 239 24 Builder for the mktap command241 242 interface IServiceMaker243 subcmdLabel tap to build 244245class TwistdBuilder SubcommandBuilder 246 247 Builder for the twistd command248 249 interface IServiceMaker25 subcmdLabel service to run 251252class ArgumentsGenerator 253 254 Generate a call to the zsh arguments completion function255 based on data in a usage Options subclass256 257 def init self cmd name options file 258 259 type cmd name C str 26 param cmd name The name of the command261262 type options C twisted usage Options 263 param options The C twisted usage Options instance defined264 for this command265266 type file C file 267 param file The C file to write the completion function to268 269 self cmd name cmd name27 self options options271 self file file272273 self altArgDescr 274 self actionDescr 275 self multiUse 276 self mutuallyExclusive 277 self actions 278 self extras 27928 aCL reflect accumulateClassList281 aCD reflect accumulateClassDict282283 aCD options class zsh altArgDescr self altArgDescr 284 aCD options class zsh actionDescr self actionDescr 285 aCL options class zsh multiUse self multiUse 286 aCL options class zsh mutuallyExclusive 287 self mutuallyExclusive 288 aCD options class zsh actions self actions 289 aCL options class zsh extras self extras 29 291 optFlags 292 optParams 293294 aCL options class optFlags optFlags 295 aCL options class optParameters optParams 296297 for i optList in enumerate optFlags 298 if len optList 3 299 optFlags i util padTo 3 optList 3 3 1 for i optList in enumerate optParams 3 2 if len optList 4 3 3 optParams i util padTo 4 optList 3 43 53 6 self optFlags optFlags3 7 self optParams optParams3 83 9 optParams d 31 for optList in optParams 311 optParams d optList optList 1 312 self optParams d optParams d313314 optFlags d 315 for optList in optFlags 316 optFlags d optList optList 1 317 self optFlags d optFlags d318319 optAll d 32 optAll d update optParams d 321 optAll d update optFlags d 322 self optAll d optAll d323324 self addAdditionalOptions 325326 makes sure none of the zsh data structures reference option327 names that don t exist great for catching typos 328 self verifyZshNames 32933 self excludes self makeExcludesDict 331332 def write self 333 334 Write the zsh completion code to the file given to init 335 return C None 336 337 self writeHeader 338 self writeExtras 339 self writeOptions 34 self writeFooter 341342 def writeHeader self 343 344 This is the start of the code that calls arguments345 return C None 346 347 self file write arguments s A n 348349 def writeOptions self 35 351 Write out zsh code for each option in this command352 return C None 353 354 optNames self optAll d keys 355 optNames sort 356 for long in optNames 357 self writeOpt long 358359 def writeExtras self 36 361 Write out the extras list These are just passed verbatim to the362 arguments call363 return C None 364 365 for s in self extras 366 self file write escape s 367 self file write n 368369 def writeFooter self 37 371 Write the last bit of code that finishes the call to arguments372 return C None 373 374 self file write return n 375376 def verifyZshNames self 377 378 Ensure that none of the names given in zsh variables are typoed379 return C None 38 raise ValueError Raised if unknown option names have been given in381 zsh variables382 383 def err name 384 raise ValueError Unknown option name s found while n 385 examining zsh attributes for the s command 386 name self cmd name 387388 for name in itertools chain self altArgDescr self actionDescr 389 self actions self multiUse 39 if name not in self optAll d 391 err name 392393 for seq in self mutuallyExclusive 394 for name in seq 395 if name not in self optAll d 396 err name 397398 def excludeStr self long buildShort False 399 4 Generate an exclusion string for the given option4 14 2 type long C str 4 3 param long The long name of the option4 4 i e verbose instead of v 4 54 6 type buildShort C bool 4 7 param buildShort May be True to indicate we re building an excludes4 8 string for the short option that correspondes to4 9 the given long opt41 411 return The generated C str 412 413 if long in self excludes 414 exclusions self excludes long 415 else 416 exclusions 417418 if long isn t a multiUse option can t appear on the cmd line more419 than once then we have to exclude the short option if we re42 building for the long option and vice versa 421 if long not in self multiUse 422 if buildShort is False 423 short self getShortOption long 424 if short is not None 425 exclusions append short 426 else 427 exclusions append long 428429 if not exclusions 43 return 431432 strings 433 for optName in exclusions 434 if len optName 1 435 short option436 strings append optName 437 else 438 strings append optName 439 return s join strings 44 441 def makeExcludesDict self 442 443 return A C dict that maps each option name appearing in444 self mutuallyExclusive to a list of those option names that445 is it mutually exclusive with can t appear on the cmd line with 446 447448 create a mapping of long option name single character name449 longToShort 45 for optList in itertools chain self optParams self optFlags 451 try 452 if optList 1 None 453 longToShort optList optList 1 454 except IndexError 455 pass456457 excludes 458 for lst in self mutuallyExclusive 459 for i long in enumerate lst 46 tmp 461 tmp extend lst i 462 tmp extend lst i 1 463 for name in tmp 464 if name in longToShort 465 tmp append longToShort name 466467 if long in excludes 468 excludes long extend tmp 469 else 47 excludes long tmp471 return excludes472473 def writeOpt self long 474 475 Write out the zsh code for the given argument This is just part of the476 one big call to arguments477478 type long C str 479 param long The long name of the option48 i e verbose instead of v 481482 return C None 483 484 if long in self optFlags d 485 It s a flag option Not one that takes a parameter 486 long field s long487 else 488 long field s long48949 short self getShortOption long 491 if short None 492 short field short493 else 494 short field 495496 descr self getDescription long 497 descr field descr replace 498 descr field descr field replace 499 descr field s descr field5 5 1 if long in self actionDescr 5 2 actionDescr field self actionDescr long 5 3 else 5 4 actionDescr field descr5 55 6 action field self getAction long 5 7 if long in self multiUse 5 8 multi field 5 9 else 51 multi field 511512 longExclusions field self excludeStr long 513514 if short 515 we have to write an extra line for the short option if we have one516 shortExclusions field self excludeStr long buildShort True 517 self file write escape s s s s s shortExclusions field 518 multi field short field descr field action field 519 self file write n 52 521 self file write escape s s s s s longExclusions field 522 multi field long field descr field action field 523 self file write n 524525 def getAction self long 526 527 Return a zsh action string for the given argument528 return C str 529 53 if long in self actions 531 if callable self actions long 532 action self actions long 533 else 534 action self actions long 535 return s s self getActionDescr long action 536 if long in self optParams d 537 return s files self getActionDescr long 538 return 53954 def getActionDescr self long 541 542 Return the description to be used when this argument is completed543 return C str 544 545 if long in self actionDescr 546 return self actionDescr long 547 else 548 return long54955 def getDescription self long 551 552 Return the description to be used for this argument553 return C str 554 555 check if we have an alternate descr for this arg and if so use it556 if long in self altArgDescr 557 return self altArgDescr long 558559 otherwise we have to get it from the optFlags or optParams56 try 561 descr self optFlags d long 1 562 except KeyError 563 try 564 descr self optParams d long 2 565 except KeyError 566 descr None567568 if descr is not None 569 return descr57 571 lets try to get it from the opt foo method doc string if there is one572 longMangled long replace this is what t p usage does573 obj getattr self options opt s longMangled None 574 if obj 575 descr descrFromDoc obj 576 if descr is not None 577 return descr578579 return long we really ought to have a good description to use58 581 def getShortOption self long 582 583 Return the short option letter or None584 return C str or C None 585 586 optList self optAll d long 587 try 588 return optList or None589 except IndexError 59 pass591592 def addAdditionalOptions self 593 594 Add additional options to the optFlags and optParams lists 595 These will be defined by opt foo methods of the Options subclass596 return C None 597 598 methodsDict 599 reflect accumulateMethods self options methodsDict opt 6 methodToShort 6 1 for name in methodsDict copy 6 2 if len name 1 6 3 methodToShort methodsDict name name6 4 del methodsDict name 6 56 6 for methodName methodObj in methodsDict items 6 7 long methodName replace t p usage does this6 8 if this option is already defined by the optFlags or6 9 optParameters then we don t want to override that data61 if long in self optAll d 611 continue612613 descr self getDescription long 614615 short None616 if methodObj in methodToShort 617 short methodToShort methodObj 618619 reqArgs methodObj im func func code co argcount62 if reqArgs 2 621 self optParams append long short None descr 622 self optParams d long short None descr 623 self optAll d long short None descr 624 elif reqArgs 1 625 self optFlags append long short descr 626 self optFlags d long short descr 627 self optAll d long short None descr 628 else 629 raise TypeError r has wrong number 63 of arguments methodObj 631632def descrFromDoc obj 633 634 Generate an appropriate description from docstring of the given object635 636 if obj doc is None 637 return None638639 lines obj doc split n 64 descr None641 try 642 if lines and not lines isspace 643 descr lines lstrip 644 skip first line if it s blank645 elif lines 1 and not lines 1 isspace 646 descr lines 1 lstrip 647 except IndexError 648 pass649 return descr65 651def firstLine s 652 653 Return the first line of the given string654 655 try 656 i s index n 657 return s i 658 except ValueError 659 return s66 661def escape str 662 663 Shell escape the given string664 665 return commands mkarg str 1 666667def siteFunctionsPath 668 669 Return the path to the system wide site functions directory or67 C None if it cannot be determined671 672 try 673 cmd zsh f c echo M fpath site functions 674 output commands getoutput cmd 675 if os path isdir output 676 return output677 except 678 pass67968 generateFor conch twisted conch scripts conch ClientOptions 681 mktap twisted scripts mktap FirstPassOptions 682 trial twisted scripts trial Options 683 cftp twisted conch scripts cftp ClientOptions 684 tapconvert twisted scripts tapconvert ConvertOptions 685 twistd twisted scripts twistd ServerOptions 686 ckeygen twisted conch scripts ckeygen GeneralOptions 687 lore twisted lore scripts lore Options 688 pyhtmlizer twisted scripts htmlizer Options 689 tap2deb twisted scripts tap2deb MyOptions 69 tkconch twisted conch scripts tkconch GeneralOptions 691 manhole twisted scripts manhole MyOptions 692 tap2rpm twisted scripts tap2rpm MyOptions 693 websetroot None None 694 tkmktap None None 695 696 NOTE the commands using None above are no longer included in Twisted 697 However due to limitations in zsh s completion system the version of698 twisted zsh stub shipped with zsh contains a static list of Twisted s699 commands It will display errors if completion functions for these missing7 commands are not found So we just include dummy empty completion7 1 function files7 27 3specialBuilders mktap MktapBuilder 7 4 twistd TwistdBuilder 7 57 6def makeCompFunctionFiles out path generateFor generateFor 7 7 specialBuilders specialBuilders 7 8 7 9 Generate completion function files in the given directory for all71 twisted commands711712 type out path C str 713 param out path The path to the directory to generate completion function714 fils in715716 param generateFor Sequence in the form of the generateFor top level717 variable as defined in this module Indicates what718 commands to build completion files for 71972 param specialBuilders Sequence in the form of the specialBuilders 721 top level variable as defined in this module 722 Indicates what commands require a special723 Builder class 724725 return C list of 2 tuples of the form cmd name error indicating726 commands that we skipped building completions for cmd name727 is the name of the skipped command and error is the Exception728 that was raised when trying to import the script module 729 Commands are usually skipped due to a missing dependency 73 e g Tkinter 731 732 skips 733 for cmd name module name class name in generateFor 734 if module name is None 735 create empty file736 f openCmdFile out path cmd name 737 f close 738 continue739 try 74 m import s module name None None class name 741 f openCmdFile out path cmd name 742 o getattr m class name instantiate Options class743744 if cmd name in specialBuilders 745 b specialBuilders cmd name cmd name o f 746 b write 747 else 748 b Builder cmd name o f 749 b write 75 except Exception e 751 skips append cmd name e 752 continue753 return skips754755def openCmdFile out path cmd name 756 return file os path join out path cmd name w 757758def run 759 options MyOptions 76 try 761 options parseOptions sys argv 1 762 except usage UsageError e 763 print e764 print options getUsage 765 sys exit 2 766767 if options install 768 import twisted769 dir os path join os path dirname twisted file python zsh 77 skips makeCompFunctionFiles dir 771 else 772 skips makeCompFunctionFiles options directory 773774 for cmd name error in skips 775 sys stderr write zshcomp Skipped building for s Script module 776 could not be imported n cmd name 777 sys stderr write str error n 778 if skips 779 sys exit 3 78 781if name main 782 run Note See TracBrowser for help on using the repository browser Download in other formats Plain Text Original Format Powered by Trac 1 1 By Edgewall Software All content copyright 2 7 2 8 by LUCI http luci ics uci edu ", "_id": "http://djp3-pc2.ics.uci.edu/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/zshcomp.py", "title": "\n      zshcomp.py in nomatic/tags/nomaticim-0.0.5/buddy_bots/src/twisted/python\n     \u2013 nomatic*im\n    ", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n  \n\n\n  <head>\n\t\t<title>\n      zshcomp.py in nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python\n     \u2013 Nomatic*IM\n    </title><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><link rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search\" /><link rel=\"help\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/zshcomp.py?format=txt\" type=\"text/plain\" title=\"Plain Text\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/zshcomp.py\" type=\"application/x-python; charset=iso-8859-15\" title=\"Original Format\" /><link rel=\"start\" href=\"/LUCICodeRepository/nomaticIM/wiki\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/code.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/pygments/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/browser.css\" type=\"text/css\" /><link rel=\"shortcut icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link rel=\"icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link type=\"application/opensearchdescription+xml\" rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search/opensearch\" title=\"Search Nomatic*IM\" /><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/jquery.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/babel.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/messages/en_US.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/trac.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/search.js\"></script><script type=\"text/javascript\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/folding.js\"></script><script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\".trac-toggledeleted\").show().click(function() {\n                  $(this).siblings().find(\".trac-deleted\").toggle();\n                  return false;\n        }).click();\n        $(\"#jumploc input\").hide();\n        $(\"#jumploc select\").change(function () {\n          this.parentNode.parentNode.submit();\n        });\n          $('#preview table.code').enableCollapsibleColumns($('#preview table.code thead th.content'));\n      });\n    </script>\n\t</head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://luci.ics.uci.edu/#code\"><img src=\"http://luci.ics.uci.edu/blog/archives/LUCIhorzTight.jpg\" alt=\"LUCI Code Repository\" /></a>\n      </div>\n      <form id=\"search\" action=\"/LUCICodeRepository/nomaticIM/search\" method=\"get\">\n        <div>\n          <label for=\"proj-search\">Search:</label>\n          <input type=\"text\" id=\"proj-search\" name=\"q\" size=\"18\" value=\"\" />\n          <input type=\"submit\" value=\"Search\" />\n        </div>\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/login\">Login</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/prefs\">Preferences</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\">Help/Guide</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/wiki\">Wiki</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/timeline\">Timeline</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/roadmap\">Roadmap</a></li><li class=\"active\"><a href=\"/LUCICodeRepository/nomaticIM/browser\">Browse Source</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/report\">View Tickets</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/search\">Search</a></li>\n    </ul>\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/buddy_bots/twisted/python/zshcomp.py?annotate=blame\" title=\"Annotate each line with the last changed revision (this can be time consuming...)\">Blame</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/log/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/zshcomp.py\">Revision Log</a></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"browser\">\n        <h1>\n          \n<a class=\"pathentry first\" href=\"/LUCICodeRepository/nomaticIM/browser?order=name\" title=\"Go to repository root\">source:</a>\n<a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic?order=name\" title=\"View nomatic\">nomatic</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags?order=name\" title=\"View tags\">tags</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5?order=name\" title=\"View NomaticIM-0.0.5\">NomaticIM-0.0.5</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots?order=name\" title=\"View buddy_bots\">buddy_bots</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src?order=name\" title=\"View src\">src</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted?order=name\" title=\"View twisted\">twisted</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python?order=name\" title=\"View python\">python</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/zshcomp.py?order=name\" title=\"View zshcomp.py\">zshcomp.py</a>\n<br style=\"clear: both\" />\n\n        </h1>\n        <div id=\"diffrev\">\n          <form action=\"/LUCICodeRepository/nomaticIM/changeset\" method=\"get\">\n            <div>\n              <label title=\"Show the diff against a specific revision\">\n                View diff against: <input type=\"text\" name=\"old\" size=\"6\" />\n                <input type=\"hidden\" name=\"old_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/zshcomp.py\" />\n                <input type=\"hidden\" name=\"new\" />\n                <input type=\"hidden\" name=\"new_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/zshcomp.py\" />\n              </label>\n            </div>\n          </form>\n        </div>\n        <div id=\"jumprev\">\n          <form action=\"\" method=\"get\">\n            <div>\n              <label for=\"rev\">\n                View revision:</label>\n              <input type=\"text\" id=\"rev\" name=\"rev\" size=\"6\" />\n            </div>\n          </form>\n        </div>\n        <div id=\"jumploc\">\n          <form action=\"\" method=\"get\">\n            <div class=\"buttons\">\n              <label for=\"preselected\">Visit:</label>\n              <select id=\"preselected\" name=\"preselected\">\n                <option selected=\"selected\"></option>\n                <optgroup label=\"branches\">\n                  <option value=\"/LUCICodeRepository/nomaticIM/browser/trunk\">trunk</option>\n                </optgroup>\n              </select>\n              <input type=\"submit\" value=\"Go!\" title=\"Jump to the chosen preselected path\" />\n            </div>\n          </form>\n        </div>\n        <div class=\"trac-tags\">\n        </div>\n      <table id=\"info\" summary=\"Revision info\">\n        <tr>\n          <th>\n                <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/nomatic/trunk/buddy_bots/twisted/python/zshcomp.py\" title=\"View differences\">Last change</a>\n                  on this file was\n                  <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/\" title=\"View changeset 712\">712</a>,\n                  checked in by cbaker, <a class=\"timeline\" href=\"/LUCICodeRepository/nomaticIM/timeline?from=2008-02-16T08%3A16%3A53-08%3A00&amp;precision=second\" title=\"See timeline at Feb 16, 2008, 8:16:53 AM\">7 years ago</a>\n          </th>\n        </tr>\n        <tr>\n          <td class=\"message searchable\">\n              <p>\nFirst draft of nomatic buddy bots. oscar_bot is functional if you give it good authentication credentials, jabber_bot is just an example from the web <br />\n</p>\n          </td>\n        </tr>\n        <tr><td colspan=\"2\">\n            <strong>File size:</strong>\n            <span title=\"27604 bytes\">27.0 KB</span>\n          </td></tr>\n      </table>\n      <div id=\"preview\" class=\"searchable\">\n        \n  <table class=\"code\"><thead><tr><th class=\"lineno\" title=\"Line numbers\">Line</th><th class=\"content\">\u00a0</th></tr></thead><tbody><tr><th id=\"L1\"><a href=\"#L1\">1</a></th><td><span class=\"c\"># -*- test-case-name: twisted.test.test_zshcomp -*-</span></td></tr><tr><th id=\"L2\"><a href=\"#L2\">2</a></th><td><span class=\"c\"># Copyright (c) 2006 Twisted Matrix Laboratories.</span></td></tr><tr><th id=\"L3\"><a href=\"#L3\">3</a></th><td><span class=\"c\"># See LICENSE for details.</span></td></tr><tr><th id=\"L4\"><a href=\"#L4\">4</a></th><td></td></tr><tr><th id=\"L5\"><a href=\"#L5\">5</a></th><td><span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L6\"><a href=\"#L6\">6</a></th><td><span class=\"sd\">Rebuild the completion functions for the currently active version of Twisted:</span></td></tr><tr><th id=\"L7\"><a href=\"#L7\">7</a></th><td><span class=\"sd\">\u00a0 \u00a0 $ python zshcomp.py -i</span></td></tr><tr><th id=\"L8\"><a href=\"#L8\">8</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L9\"><a href=\"#L9\">9</a></th><td><span class=\"sd\">This module implements a zsh code generator which generates completion code for</span></td></tr><tr><th id=\"L10\"><a href=\"#L10\">10</a></th><td><span class=\"sd\">commands that use twisted.python.usage. This is the stuff that makes pressing</span></td></tr><tr><th id=\"L11\"><a href=\"#L11\">11</a></th><td><span class=\"sd\">Tab at the command line work.</span></td></tr><tr><th id=\"L12\"><a href=\"#L12\">12</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L13\"><a href=\"#L13\">13</a></th><td><span class=\"sd\">API Stability: Unstable</span></td></tr><tr><th id=\"L14\"><a href=\"#L14\">14</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L15\"><a href=\"#L15\">15</a></th><td><span class=\"sd\">@maintainer: Eric Mangold</span></td></tr><tr><th id=\"L16\"><a href=\"#L16\">16</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L17\"><a href=\"#L17\">17</a></th><td><span class=\"sd\">To build completion functions for your own commands, and not Twisted commands,</span></td></tr><tr><th id=\"L18\"><a href=\"#L18\">18</a></th><td><span class=\"sd\">then just do something like this::</span></td></tr><tr><th id=\"L19\"><a href=\"#L19\">19</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L20\"><a href=\"#L20\">20</a></th><td><span class=\"sd\">\u00a0 \u00a0 o = mymodule.MyOptions()</span></td></tr><tr><th id=\"L21\"><a href=\"#L21\">21</a></th><td><span class=\"sd\">\u00a0 \u00a0 f = file('_mycommand', 'w')</span></td></tr><tr><th id=\"L22\"><a href=\"#L22\">22</a></th><td><span class=\"sd\">\u00a0 \u00a0 Builder(\"mycommand\", o, f).write()</span></td></tr><tr><th id=\"L23\"><a href=\"#L23\">23</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L24\"><a href=\"#L24\">24</a></th><td><span class=\"sd\">Then all you have to do is place the generated file somewhere in your</span></td></tr><tr><th id=\"L25\"><a href=\"#L25\">25</a></th><td><span class=\"sd\">C{$fpath}, and restart zsh. Note the \"site-functions\" directory in your</span></td></tr><tr><th id=\"L26\"><a href=\"#L26\">26</a></th><td><span class=\"sd\">C{$fpath} where you may install 3rd-party completion functions (like the one</span></td></tr><tr><th id=\"L27\"><a href=\"#L27\">27</a></th><td><span class=\"sd\">you're building). Call C{siteFunctionsPath} to locate this directory</span></td></tr><tr><th id=\"L28\"><a href=\"#L28\">28</a></th><td><span class=\"sd\">programmatically.</span></td></tr><tr><th id=\"L29\"><a href=\"#L29\">29</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L30\"><a href=\"#L30\">30</a></th><td><span class=\"sd\">SPECIAL CLASS VARIABLES. You may set these on your usage.Options subclass::</span></td></tr><tr><th id=\"L31\"><a href=\"#L31\">31</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L32\"><a href=\"#L32\">32</a></th><td><span class=\"sd\">\u00a0 \u00a0 zsh_altArgDescr</span></td></tr><tr><th id=\"L33\"><a href=\"#L33\">33</a></th><td><span class=\"sd\">\u00a0 \u00a0 zsh_multiUse</span></td></tr><tr><th id=\"L34\"><a href=\"#L34\">34</a></th><td><span class=\"sd\">\u00a0 \u00a0 zsh_mutuallyExclusive</span></td></tr><tr><th id=\"L35\"><a href=\"#L35\">35</a></th><td><span class=\"sd\">\u00a0 \u00a0 zsh_actions</span></td></tr><tr><th id=\"L36\"><a href=\"#L36\">36</a></th><td><span class=\"sd\">\u00a0 \u00a0 zsh_actionDescr</span></td></tr><tr><th id=\"L37\"><a href=\"#L37\">37</a></th><td><span class=\"sd\">\u00a0 \u00a0 zsh_extras</span></td></tr><tr><th id=\"L38\"><a href=\"#L38\">38</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L39\"><a href=\"#L39\">39</a></th><td><span class=\"sd\">Here is what they mean (with examples)::</span></td></tr><tr><th id=\"L40\"><a href=\"#L40\">40</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L41\"><a href=\"#L41\">41</a></th><td><span class=\"sd\">\u00a0 \u00a0 zsh_altArgDescr = {\"foo\":\"use this description for foo instead\"}</span></td></tr><tr><th id=\"L42\"><a href=\"#L42\">42</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 A dict mapping long option names to alternate descriptions.\u00a0 When this</span></td></tr><tr><th id=\"L43\"><a href=\"#L43\">43</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 variable is present, the descriptions contained here will override</span></td></tr><tr><th id=\"L44\"><a href=\"#L44\">44</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 those descriptions provided in the optFlags and optParameters</span></td></tr><tr><th id=\"L45\"><a href=\"#L45\">45</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 variables.</span></td></tr><tr><th id=\"L46\"><a href=\"#L46\">46</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L47\"><a href=\"#L47\">47</a></th><td><span class=\"sd\">\u00a0 \u00a0 zsh_multiUse = [\"foo\", \"bar\"]</span></td></tr><tr><th id=\"L48\"><a href=\"#L48\">48</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 A sequence containing those long option names which may appear on the</span></td></tr><tr><th id=\"L49\"><a href=\"#L49\">49</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 command line more than once. By default, options will only be completed</span></td></tr><tr><th id=\"L50\"><a href=\"#L50\">50</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 one time.</span></td></tr><tr><th id=\"L51\"><a href=\"#L51\">51</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L52\"><a href=\"#L52\">52</a></th><td><span class=\"sd\">\u00a0 \u00a0 zsh_mutuallyExclusive = [(\"foo\", \"bar\"), (\"bar\", \"baz\")]</span></td></tr><tr><th id=\"L53\"><a href=\"#L53\">53</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 A sequence of sequences, with each sub-sequence containing those long</span></td></tr><tr><th id=\"L54\"><a href=\"#L54\">54</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 option names that are mutually exclusive. That is, those options that</span></td></tr><tr><th id=\"L55\"><a href=\"#L55\">55</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 cannot appear on the command line together.</span></td></tr><tr><th id=\"L56\"><a href=\"#L56\">56</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L57\"><a href=\"#L57\">57</a></th><td><span class=\"sd\">\u00a0 \u00a0 zsh_actions = {\"foo\":'_files -g \"*.foo\"', \"bar\":\"(one two three)\",</span></td></tr><tr><th id=\"L58\"><a href=\"#L58\">58</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"colors\":\"_values -s , 'colors to use' red green blue\"}</span></td></tr><tr><th id=\"L59\"><a href=\"#L59\">59</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 A dict mapping long option names to Zsh \"actions\". These actions</span></td></tr><tr><th id=\"L60\"><a href=\"#L60\">60</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 define what will be completed as the argument to the given option.\u00a0 By</span></td></tr><tr><th id=\"L61\"><a href=\"#L61\">61</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 default, all files/dirs will be completed if no action is given.</span></td></tr><tr><th id=\"L62\"><a href=\"#L62\">62</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L63\"><a href=\"#L63\">63</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Callables may instead be given for the values in this dict. The</span></td></tr><tr><th id=\"L64\"><a href=\"#L64\">64</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 callable should accept no arguments, and return a string that will be</span></td></tr><tr><th id=\"L65\"><a href=\"#L65\">65</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 used as the zsh \"action\" in the same way as the literal strings in the</span></td></tr><tr><th id=\"L66\"><a href=\"#L66\">66</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 examples above.</span></td></tr><tr><th id=\"L67\"><a href=\"#L67\">67</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L68\"><a href=\"#L68\">68</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 As you can see in the example above. The \"foo\" option will have files</span></td></tr><tr><th id=\"L69\"><a href=\"#L69\">69</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 that end in .foo completed when the user presses Tab. The \"bar\"</span></td></tr><tr><th id=\"L70\"><a href=\"#L70\">70</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 option will have either of the strings \"one\", \"two\", or \"three\"</span></td></tr><tr><th id=\"L71\"><a href=\"#L71\">71</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 completed when the user presses Tab.</span></td></tr><tr><th id=\"L72\"><a href=\"#L72\">72</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L73\"><a href=\"#L73\">73</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"colors\" will allow multiple arguments to be completed, seperated by</span></td></tr><tr><th id=\"L74\"><a href=\"#L74\">74</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 commas. The possible arguments are red, green, and blue. Examples::</span></td></tr><tr><th id=\"L75\"><a href=\"#L75\">75</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L76\"><a href=\"#L76\">76</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 my_command --foo some-file.foo --colors=red,green</span></td></tr><tr><th id=\"L77\"><a href=\"#L77\">77</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 my_command --colors=green</span></td></tr><tr><th id=\"L78\"><a href=\"#L78\">78</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 my_command --colors=green,blue</span></td></tr><tr><th id=\"L79\"><a href=\"#L79\">79</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L80\"><a href=\"#L80\">80</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Actions may take many forms, and it is beyond the scope of this</span></td></tr><tr><th id=\"L81\"><a href=\"#L81\">81</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 document to illustrate them all. Please refer to the documention for</span></td></tr><tr><th id=\"L82\"><a href=\"#L82\">82</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 the Zsh _arguments function. zshcomp is basically a front-end to Zsh's</span></td></tr><tr><th id=\"L83\"><a href=\"#L83\">83</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 _arguments completion function.</span></td></tr><tr><th id=\"L84\"><a href=\"#L84\">84</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L85\"><a href=\"#L85\">85</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 That documentation is available on the zsh web site at this URL:</span></td></tr><tr><th id=\"L86\"><a href=\"#L86\">86</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 U{http://zsh.sunsite.dk/Doc/Release/zsh_19.html#SEC124}</span></td></tr><tr><th id=\"L87\"><a href=\"#L87\">87</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L88\"><a href=\"#L88\">88</a></th><td><span class=\"sd\">\u00a0 \u00a0 zsh_actionDescr = {\"logfile\":\"log file name\", \"random\":\"random seed\"}</span></td></tr><tr><th id=\"L89\"><a href=\"#L89\">89</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 A dict mapping long option names to a description for the corresponding</span></td></tr><tr><th id=\"L90\"><a href=\"#L90\">90</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 zsh \"action\". These descriptions are show above the generated matches</span></td></tr><tr><th id=\"L91\"><a href=\"#L91\">91</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 when the user is doing completions for this option.</span></td></tr><tr><th id=\"L92\"><a href=\"#L92\">92</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L93\"><a href=\"#L93\">93</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Normally Zsh does not show these descriptions unless you have</span></td></tr><tr><th id=\"L94\"><a href=\"#L94\">94</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"verbose\" completion turned on. Turn on verbosity with this in your</span></td></tr><tr><th id=\"L95\"><a href=\"#L95\">95</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 ~/.zshrc::</span></td></tr><tr><th id=\"L96\"><a href=\"#L96\">96</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L97\"><a href=\"#L97\">97</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 zstyle ':completion:*' verbose yes</span></td></tr><tr><th id=\"L98\"><a href=\"#L98\">98</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 zstyle ':completion:*:descriptions' format '%B%d%b'</span></td></tr><tr><th id=\"L99\"><a href=\"#L99\">99</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L100\"><a href=\"#L100\">100</a></th><td><span class=\"sd\">\u00a0 \u00a0 zsh_extras = [\":file to read from:action\", \":file to write to:action\"]</span></td></tr><tr><th id=\"L101\"><a href=\"#L101\">101</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 A sequence of extra arguments that will be passed verbatim to Zsh's</span></td></tr><tr><th id=\"L102\"><a href=\"#L102\">102</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 _arguments completion function. The _arguments function does all the</span></td></tr><tr><th id=\"L103\"><a href=\"#L103\">103</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 hard work of doing command line completions. You can see how zshcomp</span></td></tr><tr><th id=\"L104\"><a href=\"#L104\">104</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 invokes the _arguments call by looking at the generated completion</span></td></tr><tr><th id=\"L105\"><a href=\"#L105\">105</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 files that this module creates.</span></td></tr><tr><th id=\"L106\"><a href=\"#L106\">106</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L107\"><a href=\"#L107\">107</a></th><td><span class=\"sd\">\u00a0 \u00a0*** NOTE ***</span></td></tr><tr><th id=\"L108\"><a href=\"#L108\">108</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L109\"><a href=\"#L109\">109</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 You will need to use this variable to describe completions for normal</span></td></tr><tr><th id=\"L110\"><a href=\"#L110\">110</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 command line arguments. That is, those arguments that are not</span></td></tr><tr><th id=\"L111\"><a href=\"#L111\">111</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 associated with an option. That is, the arguments that are given to the</span></td></tr><tr><th id=\"L112\"><a href=\"#L112\">112</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 parseArgs method of your usage.Options subclass.</span></td></tr><tr><th id=\"L113\"><a href=\"#L113\">113</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L114\"><a href=\"#L114\">114</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 In the example above, the 1st non-option argument will be described as</span></td></tr><tr><th id=\"L115\"><a href=\"#L115\">115</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"file to read from\" and completion options will be generated in</span></td></tr><tr><th id=\"L116\"><a href=\"#L116\">116</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 accordance with the \"action\". (See above about zsh \"actions\") The</span></td></tr><tr><th id=\"L117\"><a href=\"#L117\">117</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 2nd non-option argument will be described as \"file to write to\" and</span></td></tr><tr><th id=\"L118\"><a href=\"#L118\">118</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 the action will be interpreted likewise.</span></td></tr><tr><th id=\"L119\"><a href=\"#L119\">119</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L120\"><a href=\"#L120\">120</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Things you can put here are all documented under the _arguments</span></td></tr><tr><th id=\"L121\"><a href=\"#L121\">121</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 function here: U{http://zsh.sunsite.dk/Doc/Release/zsh_19.html#SEC124}</span></td></tr><tr><th id=\"L122\"><a href=\"#L122\">122</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L123\"><a href=\"#L123\">123</a></th><td><span class=\"sd\">Zsh Notes:</span></td></tr><tr><th id=\"L124\"><a href=\"#L124\">124</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L125\"><a href=\"#L125\">125</a></th><td><span class=\"sd\">To enable advanced completion add something like this to your ~/.zshrc::</span></td></tr><tr><th id=\"L126\"><a href=\"#L126\">126</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L127\"><a href=\"#L127\">127</a></th><td><span class=\"sd\">\u00a0 \u00a0 autoload -U compinit</span></td></tr><tr><th id=\"L128\"><a href=\"#L128\">128</a></th><td><span class=\"sd\">\u00a0 \u00a0 compinit</span></td></tr><tr><th id=\"L129\"><a href=\"#L129\">129</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L130\"><a href=\"#L130\">130</a></th><td><span class=\"sd\">For some extra verbosity, and general niceness add these lines too::</span></td></tr><tr><th id=\"L131\"><a href=\"#L131\">131</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L132\"><a href=\"#L132\">132</a></th><td><span class=\"sd\">\u00a0 \u00a0 zstyle ':completion:*' verbose yes</span></td></tr><tr><th id=\"L133\"><a href=\"#L133\">133</a></th><td><span class=\"sd\">\u00a0 \u00a0 zstyle ':completion:*:descriptions' format '%B%d%b'</span></td></tr><tr><th id=\"L134\"><a href=\"#L134\">134</a></th><td><span class=\"sd\">\u00a0 \u00a0 zstyle ':completion:*:messages' format '%d'</span></td></tr><tr><th id=\"L135\"><a href=\"#L135\">135</a></th><td><span class=\"sd\">\u00a0 \u00a0 zstyle ':completion:*:warnings' format 'No matches for: %d'</span></td></tr><tr><th id=\"L136\"><a href=\"#L136\">136</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L137\"><a href=\"#L137\">137</a></th><td><span class=\"sd\">Have fun!</span></td></tr><tr><th id=\"L138\"><a href=\"#L138\">138</a></th><td><span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L139\"><a href=\"#L139\">139</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">itertools</span><span class=\"o\">,</span>\u00a0<span class=\"nn\">sys</span><span class=\"o\">,</span>\u00a0<span class=\"nn\">commands</span><span class=\"o\">,</span>\u00a0<span class=\"nn\">os.path</span></td></tr><tr><th id=\"L140\"><a href=\"#L140\">140</a></th><td></td></tr><tr><th id=\"L141\"><a href=\"#L141\">141</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.python</span>\u00a0<span class=\"kn\">import</span>\u00a0reflect<span class=\"p\">,</span>\u00a0util<span class=\"p\">,</span>\u00a0usage</td></tr><tr><th id=\"L142\"><a href=\"#L142\">142</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.scripts.mktap</span>\u00a0<span class=\"kn\">import</span>\u00a0IServiceMaker</td></tr><tr><th id=\"L143\"><a href=\"#L143\">143</a></th><td></td></tr><tr><th id=\"L144\"><a href=\"#L144\">144</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">MyOptions</span><span class=\"p\">(</span>usage<span class=\"o\">.</span>Options<span class=\"p\">):</span></td></tr><tr><th id=\"L145\"><a href=\"#L145\">145</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L146\"><a href=\"#L146\">146</a></th><td><span class=\"sd\">\u00a0 \u00a0 Options for this file</span></td></tr><tr><th id=\"L147\"><a href=\"#L147\">147</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L148\"><a href=\"#L148\">148</a></th><td>\u00a0 \u00a0 longdesc <span class=\"o\">=</span>\u00a0<span class=\"s\">\"\"</span></td></tr><tr><th id=\"L149\"><a href=\"#L149\">149</a></th><td>\u00a0 \u00a0 synopsis <span class=\"o\">=</span>\u00a0<span class=\"s\">\"Usage: python zshcomp.py [--install | -i] | &lt;output directory&gt;\"</span></td></tr><tr><th id=\"L150\"><a href=\"#L150\">150</a></th><td>\u00a0 \u00a0 optFlags <span class=\"o\">=</span>\u00a0<span class=\"p\">[[</span><span class=\"s\">\"install\"</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"i\"</span><span class=\"p\">,</span></td></tr><tr><th id=\"L151\"><a href=\"#L151\">151</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"s\">'Output files to the \"installation\" directory '</span>\u00a0\\</td></tr><tr><th id=\"L152\"><a href=\"#L152\">152</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"s\">'(twisted/python/zsh in the currently active '</span>\u00a0\\</td></tr><tr><th id=\"L153\"><a href=\"#L153\">153</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"s\">'Twisted package)'</span><span class=\"p\">]]</span></td></tr><tr><th id=\"L154\"><a href=\"#L154\">154</a></th><td>\u00a0 \u00a0 optParameters <span class=\"o\">=</span>\u00a0<span class=\"p\">[[</span><span class=\"s\">\"directory\"</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"d\"</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">,</span></td></tr><tr><th id=\"L155\"><a href=\"#L155\">155</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">\"Output files to this directory\"</span><span class=\"p\">]]</span></td></tr><tr><th id=\"L156\"><a href=\"#L156\">156</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">postOptions</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L157\"><a href=\"#L157\">157</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s\">'install'</span><span class=\"p\">]</span>\u00a0<span class=\"ow\">and</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s\">'directory'</span><span class=\"p\">]:</span></td></tr><tr><th id=\"L158\"><a href=\"#L158\">158</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0usage<span class=\"o\">.</span>UsageError<span class=\"p\">,</span>\u00a0<span class=\"s\">\"Can't have --install and \"</span>\u00a0\\</td></tr><tr><th id=\"L159\"><a href=\"#L159\">159</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">\"--directory at the same time\"</span></td></tr><tr><th id=\"L160\"><a href=\"#L160\">160</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s\">'install'</span><span class=\"p\">]</span>\u00a0<span class=\"ow\">and</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s\">'directory'</span><span class=\"p\">]:</span></td></tr><tr><th id=\"L161\"><a href=\"#L161\">161</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0usage<span class=\"o\">.</span>UsageError<span class=\"p\">,</span>\u00a0<span class=\"s\">\"Not enough arguments\"</span></td></tr><tr><th id=\"L162\"><a href=\"#L162\">162</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s\">'directory'</span><span class=\"p\">]</span>\u00a0<span class=\"ow\">and</span>\u00a0<span class=\"ow\">not</span>\u00a0os<span class=\"o\">.</span>path<span class=\"o\">.</span>isdir<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s\">'directory'</span><span class=\"p\">]):</span></td></tr><tr><th id=\"L163\"><a href=\"#L163\">163</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0usage<span class=\"o\">.</span>UsageError<span class=\"p\">,</span>\u00a0<span class=\"s\">\"</span><span class=\"si\">%s</span><span class=\"s\">\u00a0is not a directory\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s\">'directory'</span><span class=\"p\">]</span></td></tr><tr><th id=\"L164\"><a href=\"#L164\">164</a></th><td></td></tr><tr><th id=\"L165\"><a href=\"#L165\">165</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">Builder</span><span class=\"p\">:</span></td></tr><tr><th id=\"L166\"><a href=\"#L166\">166</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0cmd_name<span class=\"p\">,</span>\u00a0options<span class=\"p\">,</span>\u00a0<span class=\"nb\">file</span><span class=\"p\">):</span></td></tr><tr><th id=\"L167\"><a href=\"#L167\">167</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L168\"><a href=\"#L168\">168</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @type cmd_name: C{str}</span></td></tr><tr><th id=\"L169\"><a href=\"#L169\">169</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param cmd_name: The name of the command</span></td></tr><tr><th id=\"L170\"><a href=\"#L170\">170</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L171\"><a href=\"#L171\">171</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @type options: C{twisted.usage.Options}</span></td></tr><tr><th id=\"L172\"><a href=\"#L172\">172</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param options: The C{twisted.usage.Options} instance defined for</span></td></tr><tr><th id=\"L173\"><a href=\"#L173\">173</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 this command</span></td></tr><tr><th id=\"L174\"><a href=\"#L174\">174</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L175\"><a href=\"#L175\">175</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @type file: C{file}</span></td></tr><tr><th id=\"L176\"><a href=\"#L176\">176</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param file: The C{file} to write the completion function to</span></td></tr><tr><th id=\"L177\"><a href=\"#L177\">177</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L178\"><a href=\"#L178\">178</a></th><td></td></tr><tr><th id=\"L179\"><a href=\"#L179\">179</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>cmd_name <span class=\"o\">=</span>\u00a0cmd_name</td></tr><tr><th id=\"L180\"><a href=\"#L180\">180</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>options <span class=\"o\">=</span>\u00a0options</td></tr><tr><th id=\"L181\"><a href=\"#L181\">181</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>file <span class=\"o\">=</span>\u00a0<span class=\"nb\">file</span></td></tr><tr><th id=\"L182\"><a href=\"#L182\">182</a></th><td></td></tr><tr><th id=\"L183\"><a href=\"#L183\">183</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">write</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L184\"><a href=\"#L184\">184</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L185\"><a href=\"#L185\">185</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Write the completion function to the file given to __init__</span></td></tr><tr><th id=\"L186\"><a href=\"#L186\">186</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: C{None}</span></td></tr><tr><th id=\"L187\"><a href=\"#L187\">187</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L188\"><a href=\"#L188\">188</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># by default, we just write out a single call to _arguments</span></td></tr><tr><th id=\"L189\"><a href=\"#L189\">189</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>file<span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"s\">'#compdef </span><span class=\"si\">%s</span><span class=\"se\">\\n</span><span class=\"s\">'</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>cmd_name<span class=\"p\">,))</span></td></tr><tr><th id=\"L190\"><a href=\"#L190\">190</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 gen <span class=\"o\">=</span>\u00a0ArgumentsGenerator<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>cmd_name<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>options<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>file<span class=\"p\">)</span></td></tr><tr><th id=\"L191\"><a href=\"#L191\">191</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 gen<span class=\"o\">.</span>write<span class=\"p\">()</span></td></tr><tr><th id=\"L192\"><a href=\"#L192\">192</a></th><td></td></tr><tr><th id=\"L193\"><a href=\"#L193\">193</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">SubcommandBuilder</span><span class=\"p\">(</span>Builder<span class=\"p\">):</span></td></tr><tr><th id=\"L194\"><a href=\"#L194\">194</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L195\"><a href=\"#L195\">195</a></th><td><span class=\"sd\">\u00a0 \u00a0 Use this builder for commands that have sub-commands. twisted.python.usage</span></td></tr><tr><th id=\"L196\"><a href=\"#L196\">196</a></th><td><span class=\"sd\">\u00a0 \u00a0 has the notion of sub-commands that are defined using an entirely seperate</span></td></tr><tr><th id=\"L197\"><a href=\"#L197\">197</a></th><td><span class=\"sd\">\u00a0 \u00a0 Options class.</span></td></tr><tr><th id=\"L198\"><a href=\"#L198\">198</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L199\"><a href=\"#L199\">199</a></th><td>\u00a0 \u00a0 interface <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L200\"><a href=\"#L200\">200</a></th><td>\u00a0 \u00a0 subcmdLabel <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L201\"><a href=\"#L201\">201</a></th><td></td></tr><tr><th id=\"L202\"><a href=\"#L202\">202</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">write</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L203\"><a href=\"#L203\">203</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L204\"><a href=\"#L204\">204</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Write the completion function to the file given to __init__</span></td></tr><tr><th id=\"L205\"><a href=\"#L205\">205</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: C{None}</span></td></tr><tr><th id=\"L206\"><a href=\"#L206\">206</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L207\"><a href=\"#L207\">207</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>file<span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"s\">'#compdef </span><span class=\"si\">%s</span><span class=\"se\">\\n</span><span class=\"s\">'</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>cmd_name<span class=\"p\">,))</span></td></tr><tr><th id=\"L208\"><a href=\"#L208\">208</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>file<span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"s\">'local _zsh_subcmds_array</span><span class=\"se\">\\n</span><span class=\"s\">_zsh_subcmds_array=(</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L209\"><a href=\"#L209\">209</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted</span>\u00a0<span class=\"kn\">import</span>\u00a0plugin <span class=\"k\">as</span>\u00a0newplugin</td></tr><tr><th id=\"L210\"><a href=\"#L210\">210</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 plugins <span class=\"o\">=</span>\u00a0newplugin<span class=\"o\">.</span>getPlugins<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>interface<span class=\"p\">)</span></td></tr><tr><th id=\"L211\"><a href=\"#L211\">211</a></th><td></td></tr><tr><th id=\"L212\"><a href=\"#L212\">212</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0p <span class=\"ow\">in</span>\u00a0plugins<span class=\"p\">:</span></td></tr><tr><th id=\"L213\"><a href=\"#L213\">213</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>file<span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"s\">'\"</span><span class=\"si\">%s</span><span class=\"s\">:</span><span class=\"si\">%s</span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">'</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span>p<span class=\"o\">.</span>tapname<span class=\"p\">,</span>\u00a0p<span class=\"o\">.</span>description<span class=\"p\">))</span></td></tr><tr><th id=\"L214\"><a href=\"#L214\">214</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>file<span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"s\">\")</span><span class=\"se\">\\n\\n</span><span class=\"s\">\"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L215\"><a href=\"#L215\">215</a></th><td></td></tr><tr><th id=\"L216\"><a href=\"#L216\">216</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>options<span class=\"o\">.</span>__class__<span class=\"o\">.</span>zsh_extras <span class=\"o\">=</span>\u00a0<span class=\"p\">[</span><span class=\"s\">'*::subcmd:-&gt;subcmd'</span><span class=\"p\">]</span></td></tr><tr><th id=\"L217\"><a href=\"#L217\">217</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 gen <span class=\"o\">=</span>\u00a0ArgumentsGenerator<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>cmd_name<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>options<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>file<span class=\"p\">)</span></td></tr><tr><th id=\"L218\"><a href=\"#L218\">218</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 gen<span class=\"o\">.</span>write<span class=\"p\">()</span></td></tr><tr><th id=\"L219\"><a href=\"#L219\">219</a></th><td></td></tr><tr><th id=\"L220\"><a href=\"#L220\">220</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>file<span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"s\">\"\"\"if (( CURRENT == 1 )); then</span></td></tr><tr><th id=\"L221\"><a href=\"#L221\">221</a></th><td><span class=\"s\">\u00a0 _describe \"</span><span class=\"si\">%s</span><span class=\"s\">\" _zsh_subcmds_array &amp;&amp; ret=0</span></td></tr><tr><th id=\"L222\"><a href=\"#L222\">222</a></th><td><span class=\"s\">fi</span></td></tr><tr><th id=\"L223\"><a href=\"#L223\">223</a></th><td><span class=\"s\">(( ret )) || return 0</span></td></tr><tr><th id=\"L224\"><a href=\"#L224\">224</a></th><td><span class=\"s\"></span></td></tr><tr><th id=\"L225\"><a href=\"#L225\">225</a></th><td><span class=\"s\">service=\"$words[1]\"</span></td></tr><tr><th id=\"L226\"><a href=\"#L226\">226</a></th><td><span class=\"s\"></span></td></tr><tr><th id=\"L227\"><a href=\"#L227\">227</a></th><td><span class=\"s\">case $service in</span><span class=\"se\">\\n</span><span class=\"s\">\"\"\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>subcmdLabel<span class=\"p\">,))</span></td></tr><tr><th id=\"L228\"><a href=\"#L228\">228</a></th><td></td></tr><tr><th id=\"L229\"><a href=\"#L229\">229</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 plugins <span class=\"o\">=</span>\u00a0newplugin<span class=\"o\">.</span>getPlugins<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>interface<span class=\"p\">)</span></td></tr><tr><th id=\"L230\"><a href=\"#L230\">230</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0p <span class=\"ow\">in</span>\u00a0plugins<span class=\"p\">:</span></td></tr><tr><th id=\"L231\"><a href=\"#L231\">231</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>file<span class=\"o\">.</span>write<span class=\"p\">(</span>p<span class=\"o\">.</span>tapname <span class=\"o\">+</span>\u00a0<span class=\"s\">\")</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L232\"><a href=\"#L232\">232</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 gen <span class=\"o\">=</span>\u00a0ArgumentsGenerator<span class=\"p\">(</span>p<span class=\"o\">.</span>tapname<span class=\"p\">,</span>\u00a0p<span class=\"o\">.</span>options<span class=\"p\">(),</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>file<span class=\"p\">)</span></td></tr><tr><th id=\"L233\"><a href=\"#L233\">233</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 gen<span class=\"o\">.</span>write<span class=\"p\">()</span></td></tr><tr><th id=\"L234\"><a href=\"#L234\">234</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>file<span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"s\">\";;</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L235\"><a href=\"#L235\">235</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>file<span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"s\">\"*) _message </span><span class=\"se\">\\\"</span><span class=\"s\">don't know how to\"</span>\u00a0\\</td></tr><tr><th id=\"L236\"><a href=\"#L236\">236</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">\" complete $service</span><span class=\"se\">\\\"</span><span class=\"s\">;;</span><span class=\"se\">\\n</span><span class=\"s\">esac\"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L237\"><a href=\"#L237\">237</a></th><td></td></tr><tr><th id=\"L238\"><a href=\"#L238\">238</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">MktapBuilder</span><span class=\"p\">(</span>SubcommandBuilder<span class=\"p\">):</span></td></tr><tr><th id=\"L239\"><a href=\"#L239\">239</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L240\"><a href=\"#L240\">240</a></th><td><span class=\"sd\">\u00a0 \u00a0 Builder for the mktap command</span></td></tr><tr><th id=\"L241\"><a href=\"#L241\">241</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L242\"><a href=\"#L242\">242</a></th><td>\u00a0 \u00a0 interface <span class=\"o\">=</span>\u00a0IServiceMaker</td></tr><tr><th id=\"L243\"><a href=\"#L243\">243</a></th><td>\u00a0 \u00a0 subcmdLabel <span class=\"o\">=</span>\u00a0<span class=\"s\">'tap to build'</span></td></tr><tr><th id=\"L244\"><a href=\"#L244\">244</a></th><td></td></tr><tr><th id=\"L245\"><a href=\"#L245\">245</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">TwistdBuilder</span><span class=\"p\">(</span>SubcommandBuilder<span class=\"p\">):</span></td></tr><tr><th id=\"L246\"><a href=\"#L246\">246</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L247\"><a href=\"#L247\">247</a></th><td><span class=\"sd\">\u00a0 \u00a0 Builder for the twistd command</span></td></tr><tr><th id=\"L248\"><a href=\"#L248\">248</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L249\"><a href=\"#L249\">249</a></th><td>\u00a0 \u00a0 interface <span class=\"o\">=</span>\u00a0IServiceMaker</td></tr><tr><th id=\"L250\"><a href=\"#L250\">250</a></th><td>\u00a0 \u00a0 subcmdLabel <span class=\"o\">=</span>\u00a0<span class=\"s\">'service to run'</span></td></tr><tr><th id=\"L251\"><a href=\"#L251\">251</a></th><td></td></tr><tr><th id=\"L252\"><a href=\"#L252\">252</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">ArgumentsGenerator</span><span class=\"p\">:</span></td></tr><tr><th id=\"L253\"><a href=\"#L253\">253</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L254\"><a href=\"#L254\">254</a></th><td><span class=\"sd\">\u00a0 \u00a0 Generate a call to the zsh _arguments completion function</span></td></tr><tr><th id=\"L255\"><a href=\"#L255\">255</a></th><td><span class=\"sd\">\u00a0 \u00a0 based on data in a usage.Options subclass</span></td></tr><tr><th id=\"L256\"><a href=\"#L256\">256</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L257\"><a href=\"#L257\">257</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0cmd_name<span class=\"p\">,</span>\u00a0options<span class=\"p\">,</span>\u00a0<span class=\"nb\">file</span><span class=\"p\">):</span></td></tr><tr><th id=\"L258\"><a href=\"#L258\">258</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L259\"><a href=\"#L259\">259</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @type cmd_name: C{str}</span></td></tr><tr><th id=\"L260\"><a href=\"#L260\">260</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param cmd_name: The name of the command</span></td></tr><tr><th id=\"L261\"><a href=\"#L261\">261</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L262\"><a href=\"#L262\">262</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @type options: C{twisted.usage.Options}</span></td></tr><tr><th id=\"L263\"><a href=\"#L263\">263</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param options: The C{twisted.usage.Options} instance defined</span></td></tr><tr><th id=\"L264\"><a href=\"#L264\">264</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 for this command</span></td></tr><tr><th id=\"L265\"><a href=\"#L265\">265</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L266\"><a href=\"#L266\">266</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @type file: C{file}</span></td></tr><tr><th id=\"L267\"><a href=\"#L267\">267</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param file: The C{file} to write the completion function to</span></td></tr><tr><th id=\"L268\"><a href=\"#L268\">268</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L269\"><a href=\"#L269\">269</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>cmd_name <span class=\"o\">=</span>\u00a0cmd_name</td></tr><tr><th id=\"L270\"><a href=\"#L270\">270</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>options <span class=\"o\">=</span>\u00a0options</td></tr><tr><th id=\"L271\"><a href=\"#L271\">271</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>file <span class=\"o\">=</span>\u00a0<span class=\"nb\">file</span></td></tr><tr><th id=\"L272\"><a href=\"#L272\">272</a></th><td></td></tr><tr><th id=\"L273\"><a href=\"#L273\">273</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>altArgDescr <span class=\"o\">=</span>\u00a0<span class=\"p\">{}</span></td></tr><tr><th id=\"L274\"><a href=\"#L274\">274</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>actionDescr <span class=\"o\">=</span>\u00a0<span class=\"p\">{}</span></td></tr><tr><th id=\"L275\"><a href=\"#L275\">275</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>multiUse <span class=\"o\">=</span>\u00a0<span class=\"p\">[]</span></td></tr><tr><th id=\"L276\"><a href=\"#L276\">276</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>mutuallyExclusive <span class=\"o\">=</span>\u00a0<span class=\"p\">[]</span></td></tr><tr><th id=\"L277\"><a href=\"#L277\">277</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>actions <span class=\"o\">=</span>\u00a0<span class=\"p\">{}</span></td></tr><tr><th id=\"L278\"><a href=\"#L278\">278</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>extras <span class=\"o\">=</span>\u00a0<span class=\"p\">[]</span></td></tr><tr><th id=\"L279\"><a href=\"#L279\">279</a></th><td></td></tr><tr><th id=\"L280\"><a href=\"#L280\">280</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 aCL <span class=\"o\">=</span>\u00a0reflect<span class=\"o\">.</span>accumulateClassList</td></tr><tr><th id=\"L281\"><a href=\"#L281\">281</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 aCD <span class=\"o\">=</span>\u00a0reflect<span class=\"o\">.</span>accumulateClassDict</td></tr><tr><th id=\"L282\"><a href=\"#L282\">282</a></th><td></td></tr><tr><th id=\"L283\"><a href=\"#L283\">283</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 aCD<span class=\"p\">(</span>options<span class=\"o\">.</span>__class__<span class=\"p\">,</span>\u00a0<span class=\"s\">'zsh_altArgDescr'</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>altArgDescr<span class=\"p\">)</span></td></tr><tr><th id=\"L284\"><a href=\"#L284\">284</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 aCD<span class=\"p\">(</span>options<span class=\"o\">.</span>__class__<span class=\"p\">,</span>\u00a0<span class=\"s\">'zsh_actionDescr'</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>actionDescr<span class=\"p\">)</span></td></tr><tr><th id=\"L285\"><a href=\"#L285\">285</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 aCL<span class=\"p\">(</span>options<span class=\"o\">.</span>__class__<span class=\"p\">,</span>\u00a0<span class=\"s\">'zsh_multiUse'</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>multiUse<span class=\"p\">)</span></td></tr><tr><th id=\"L286\"><a href=\"#L286\">286</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 aCL<span class=\"p\">(</span>options<span class=\"o\">.</span>__class__<span class=\"p\">,</span>\u00a0<span class=\"s\">'zsh_mutuallyExclusive'</span><span class=\"p\">,</span></td></tr><tr><th id=\"L287\"><a href=\"#L287\">287</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>mutuallyExclusive<span class=\"p\">)</span></td></tr><tr><th id=\"L288\"><a href=\"#L288\">288</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 aCD<span class=\"p\">(</span>options<span class=\"o\">.</span>__class__<span class=\"p\">,</span>\u00a0<span class=\"s\">'zsh_actions'</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>actions<span class=\"p\">)</span></td></tr><tr><th id=\"L289\"><a href=\"#L289\">289</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 aCL<span class=\"p\">(</span>options<span class=\"o\">.</span>__class__<span class=\"p\">,</span>\u00a0<span class=\"s\">'zsh_extras'</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>extras<span class=\"p\">)</span></td></tr><tr><th id=\"L290\"><a href=\"#L290\">290</a></th><td></td></tr><tr><th id=\"L291\"><a href=\"#L291\">291</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 optFlags <span class=\"o\">=</span>\u00a0<span class=\"p\">[]</span></td></tr><tr><th id=\"L292\"><a href=\"#L292\">292</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 optParams <span class=\"o\">=</span>\u00a0<span class=\"p\">[]</span></td></tr><tr><th id=\"L293\"><a href=\"#L293\">293</a></th><td></td></tr><tr><th id=\"L294\"><a href=\"#L294\">294</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 aCL<span class=\"p\">(</span>options<span class=\"o\">.</span>__class__<span class=\"p\">,</span>\u00a0<span class=\"s\">'optFlags'</span><span class=\"p\">,</span>\u00a0optFlags<span class=\"p\">)</span></td></tr><tr><th id=\"L295\"><a href=\"#L295\">295</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 aCL<span class=\"p\">(</span>options<span class=\"o\">.</span>__class__<span class=\"p\">,</span>\u00a0<span class=\"s\">'optParameters'</span><span class=\"p\">,</span>\u00a0optParams<span class=\"p\">)</span></td></tr><tr><th id=\"L296\"><a href=\"#L296\">296</a></th><td></td></tr><tr><th id=\"L297\"><a href=\"#L297\">297</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0i<span class=\"p\">,</span>\u00a0optList <span class=\"ow\">in</span>\u00a0<span class=\"nb\">enumerate</span><span class=\"p\">(</span>optFlags<span class=\"p\">):</span></td></tr><tr><th id=\"L298\"><a href=\"#L298\">298</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span>optList<span class=\"p\">)</span>\u00a0<span class=\"o\">!=</span>\u00a0<span class=\"mi\">3</span><span class=\"p\">:</span></td></tr><tr><th id=\"L299\"><a href=\"#L299\">299</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 optFlags<span class=\"p\">[</span>i<span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0util<span class=\"o\">.</span>padTo<span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span>\u00a0optList<span class=\"p\">)</span></td></tr><tr><th id=\"L300\"><a href=\"#L300\">300</a></th><td></td></tr><tr><th id=\"L301\"><a href=\"#L301\">301</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0i<span class=\"p\">,</span>\u00a0optList <span class=\"ow\">in</span>\u00a0<span class=\"nb\">enumerate</span><span class=\"p\">(</span>optParams<span class=\"p\">):</span></td></tr><tr><th id=\"L302\"><a href=\"#L302\">302</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span>optList<span class=\"p\">)</span>\u00a0<span class=\"o\">!=</span>\u00a0<span class=\"mi\">4</span><span class=\"p\">:</span></td></tr><tr><th id=\"L303\"><a href=\"#L303\">303</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 optParams<span class=\"p\">[</span>i<span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0util<span class=\"o\">.</span>padTo<span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span>\u00a0optList<span class=\"p\">)</span></td></tr><tr><th id=\"L304\"><a href=\"#L304\">304</a></th><td></td></tr><tr><th id=\"L305\"><a href=\"#L305\">305</a></th><td></td></tr><tr><th id=\"L306\"><a href=\"#L306\">306</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>optFlags <span class=\"o\">=</span>\u00a0optFlags</td></tr><tr><th id=\"L307\"><a href=\"#L307\">307</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>optParams <span class=\"o\">=</span>\u00a0optParams</td></tr><tr><th id=\"L308\"><a href=\"#L308\">308</a></th><td></td></tr><tr><th id=\"L309\"><a href=\"#L309\">309</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 optParams_d <span class=\"o\">=</span>\u00a0<span class=\"p\">{}</span></td></tr><tr><th id=\"L310\"><a href=\"#L310\">310</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0optList <span class=\"ow\">in</span>\u00a0optParams<span class=\"p\">:</span></td></tr><tr><th id=\"L311\"><a href=\"#L311\">311</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 optParams_d<span class=\"p\">[</span>optList<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]]</span>\u00a0<span class=\"o\">=</span>\u00a0optList<span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]</span></td></tr><tr><th id=\"L312\"><a href=\"#L312\">312</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>optParams_d <span class=\"o\">=</span>\u00a0optParams_d</td></tr><tr><th id=\"L313\"><a href=\"#L313\">313</a></th><td></td></tr><tr><th id=\"L314\"><a href=\"#L314\">314</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 optFlags_d <span class=\"o\">=</span>\u00a0<span class=\"p\">{}</span></td></tr><tr><th id=\"L315\"><a href=\"#L315\">315</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0optList <span class=\"ow\">in</span>\u00a0optFlags<span class=\"p\">:</span></td></tr><tr><th id=\"L316\"><a href=\"#L316\">316</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 optFlags_d<span class=\"p\">[</span>optList<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]]</span>\u00a0<span class=\"o\">=</span>\u00a0optList<span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]</span></td></tr><tr><th id=\"L317\"><a href=\"#L317\">317</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>optFlags_d <span class=\"o\">=</span>\u00a0optFlags_d</td></tr><tr><th id=\"L318\"><a href=\"#L318\">318</a></th><td></td></tr><tr><th id=\"L319\"><a href=\"#L319\">319</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 optAll_d <span class=\"o\">=</span>\u00a0<span class=\"p\">{}</span></td></tr><tr><th id=\"L320\"><a href=\"#L320\">320</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 optAll_d<span class=\"o\">.</span>update<span class=\"p\">(</span>optParams_d<span class=\"p\">)</span></td></tr><tr><th id=\"L321\"><a href=\"#L321\">321</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 optAll_d<span class=\"o\">.</span>update<span class=\"p\">(</span>optFlags_d<span class=\"p\">)</span></td></tr><tr><th id=\"L322\"><a href=\"#L322\">322</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>optAll_d <span class=\"o\">=</span>\u00a0optAll_d</td></tr><tr><th id=\"L323\"><a href=\"#L323\">323</a></th><td></td></tr><tr><th id=\"L324\"><a href=\"#L324\">324</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>addAdditionalOptions<span class=\"p\">()</span></td></tr><tr><th id=\"L325\"><a href=\"#L325\">325</a></th><td></td></tr><tr><th id=\"L326\"><a href=\"#L326\">326</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># makes sure none of the zsh_ data structures reference option</span></td></tr><tr><th id=\"L327\"><a href=\"#L327\">327</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># names that don't exist. (great for catching typos)</span></td></tr><tr><th id=\"L328\"><a href=\"#L328\">328</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>verifyZshNames<span class=\"p\">()</span></td></tr><tr><th id=\"L329\"><a href=\"#L329\">329</a></th><td></td></tr><tr><th id=\"L330\"><a href=\"#L330\">330</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>excludes <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>makeExcludesDict<span class=\"p\">()</span></td></tr><tr><th id=\"L331\"><a href=\"#L331\">331</a></th><td></td></tr><tr><th id=\"L332\"><a href=\"#L332\">332</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">write</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L333\"><a href=\"#L333\">333</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L334\"><a href=\"#L334\">334</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Write the zsh completion code to the file given to __init__</span></td></tr><tr><th id=\"L335\"><a href=\"#L335\">335</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: C{None}</span></td></tr><tr><th id=\"L336\"><a href=\"#L336\">336</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L337\"><a href=\"#L337\">337</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>writeHeader<span class=\"p\">()</span></td></tr><tr><th id=\"L338\"><a href=\"#L338\">338</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>writeExtras<span class=\"p\">()</span></td></tr><tr><th id=\"L339\"><a href=\"#L339\">339</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>writeOptions<span class=\"p\">()</span></td></tr><tr><th id=\"L340\"><a href=\"#L340\">340</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>writeFooter<span class=\"p\">()</span></td></tr><tr><th id=\"L341\"><a href=\"#L341\">341</a></th><td></td></tr><tr><th id=\"L342\"><a href=\"#L342\">342</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">writeHeader</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L343\"><a href=\"#L343\">343</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L344\"><a href=\"#L344\">344</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This is the start of the code that calls _arguments</span></td></tr><tr><th id=\"L345\"><a href=\"#L345\">345</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: C{None}</span></td></tr><tr><th id=\"L346\"><a href=\"#L346\">346</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L347\"><a href=\"#L347\">347</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>file<span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"s\">'_arguments -s -A \"-*\" </span><span class=\"se\">\\\\\\n</span><span class=\"s\">'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L348\"><a href=\"#L348\">348</a></th><td></td></tr><tr><th id=\"L349\"><a href=\"#L349\">349</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">writeOptions</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L350\"><a href=\"#L350\">350</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L351\"><a href=\"#L351\">351</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Write out zsh code for each option in this command</span></td></tr><tr><th id=\"L352\"><a href=\"#L352\">352</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: C{None}</span></td></tr><tr><th id=\"L353\"><a href=\"#L353\">353</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L354\"><a href=\"#L354\">354</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 optNames <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>optAll_d<span class=\"o\">.</span>keys<span class=\"p\">()</span></td></tr><tr><th id=\"L355\"><a href=\"#L355\">355</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 optNames<span class=\"o\">.</span>sort<span class=\"p\">()</span></td></tr><tr><th id=\"L356\"><a href=\"#L356\">356</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0<span class=\"nb\">long</span>\u00a0<span class=\"ow\">in</span>\u00a0optNames<span class=\"p\">:</span></td></tr><tr><th id=\"L357\"><a href=\"#L357\">357</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>writeOpt<span class=\"p\">(</span><span class=\"nb\">long</span><span class=\"p\">)</span></td></tr><tr><th id=\"L358\"><a href=\"#L358\">358</a></th><td></td></tr><tr><th id=\"L359\"><a href=\"#L359\">359</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">writeExtras</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L360\"><a href=\"#L360\">360</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L361\"><a href=\"#L361\">361</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Write out the \"extras\" list. These are just passed verbatim to the</span></td></tr><tr><th id=\"L362\"><a href=\"#L362\">362</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 _arguments call</span></td></tr><tr><th id=\"L363\"><a href=\"#L363\">363</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: C{None}</span></td></tr><tr><th id=\"L364\"><a href=\"#L364\">364</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L365\"><a href=\"#L365\">365</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0s <span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>extras<span class=\"p\">:</span></td></tr><tr><th id=\"L366\"><a href=\"#L366\">366</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>file<span class=\"o\">.</span>write<span class=\"p\">(</span>escape<span class=\"p\">(</span>s<span class=\"p\">))</span></td></tr><tr><th id=\"L367\"><a href=\"#L367\">367</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>file<span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"s\">' </span><span class=\"se\">\\\\\\n</span><span class=\"s\">'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L368\"><a href=\"#L368\">368</a></th><td></td></tr><tr><th id=\"L369\"><a href=\"#L369\">369</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">writeFooter</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L370\"><a href=\"#L370\">370</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L371\"><a href=\"#L371\">371</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Write the last bit of code that finishes the call to _arguments</span></td></tr><tr><th id=\"L372\"><a href=\"#L372\">372</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: C{None}</span></td></tr><tr><th id=\"L373\"><a href=\"#L373\">373</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L374\"><a href=\"#L374\">374</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>file<span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"s\">'&amp;&amp; return 0</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L375\"><a href=\"#L375\">375</a></th><td></td></tr><tr><th id=\"L376\"><a href=\"#L376\">376</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">verifyZshNames</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L377\"><a href=\"#L377\">377</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L378\"><a href=\"#L378\">378</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Ensure that none of the names given in zsh_* variables are typoed</span></td></tr><tr><th id=\"L379\"><a href=\"#L379\">379</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: C{None}</span></td></tr><tr><th id=\"L380\"><a href=\"#L380\">380</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @raise ValueError: Raised if unknown option names have been given in</span></td></tr><tr><th id=\"L381\"><a href=\"#L381\">381</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0zsh_* variables</span></td></tr><tr><th id=\"L382\"><a href=\"#L382\">382</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L383\"><a href=\"#L383\">383</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">err</span><span class=\"p\">(</span>name<span class=\"p\">):</span></td></tr><tr><th id=\"L384\"><a href=\"#L384\">384</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">ValueError</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"Unknown option name </span><span class=\"se\">\\\"</span><span class=\"si\">%s</span><span class=\"se\">\\\"</span><span class=\"s\">\u00a0found while</span><span class=\"se\">\\n</span><span class=\"s\">\"</span>\u00a0\\</td></tr><tr><th id=\"L385\"><a href=\"#L385\">385</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">\"examining zsh_ attributes for the </span><span class=\"si\">%s</span><span class=\"s\">\u00a0command\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span></td></tr><tr><th id=\"L386\"><a href=\"#L386\">386</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 name<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>cmd_name<span class=\"p\">)</span></td></tr><tr><th id=\"L387\"><a href=\"#L387\">387</a></th><td></td></tr><tr><th id=\"L388\"><a href=\"#L388\">388</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0name <span class=\"ow\">in</span>\u00a0itertools<span class=\"o\">.</span>chain<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>altArgDescr<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>actionDescr<span class=\"p\">,</span></td></tr><tr><th id=\"L389\"><a href=\"#L389\">389</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>actions<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>multiUse<span class=\"p\">):</span></td></tr><tr><th id=\"L390\"><a href=\"#L390\">390</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0name <span class=\"ow\">not</span>\u00a0<span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>optAll_d<span class=\"p\">:</span></td></tr><tr><th id=\"L391\"><a href=\"#L391\">391</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 err<span class=\"p\">(</span>name<span class=\"p\">)</span></td></tr><tr><th id=\"L392\"><a href=\"#L392\">392</a></th><td></td></tr><tr><th id=\"L393\"><a href=\"#L393\">393</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0seq <span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>mutuallyExclusive<span class=\"p\">:</span></td></tr><tr><th id=\"L394\"><a href=\"#L394\">394</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0name <span class=\"ow\">in</span>\u00a0seq<span class=\"p\">:</span></td></tr><tr><th id=\"L395\"><a href=\"#L395\">395</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0name <span class=\"ow\">not</span>\u00a0<span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>optAll_d<span class=\"p\">:</span></td></tr><tr><th id=\"L396\"><a href=\"#L396\">396</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 err<span class=\"p\">(</span>name<span class=\"p\">)</span></td></tr><tr><th id=\"L397\"><a href=\"#L397\">397</a></th><td></td></tr><tr><th id=\"L398\"><a href=\"#L398\">398</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">excludeStr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"nb\">long</span><span class=\"p\">,</span>\u00a0buildShort<span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">):</span></td></tr><tr><th id=\"L399\"><a href=\"#L399\">399</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L400\"><a href=\"#L400\">400</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Generate an \"exclusion string\" for the given option</span></td></tr><tr><th id=\"L401\"><a href=\"#L401\">401</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L402\"><a href=\"#L402\">402</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @type long: C{str}</span></td></tr><tr><th id=\"L403\"><a href=\"#L403\">403</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param long: The long name of the option</span></td></tr><tr><th id=\"L404\"><a href=\"#L404\">404</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0(i.e. \"verbose\" instead of \"v\")</span></td></tr><tr><th id=\"L405\"><a href=\"#L405\">405</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L406\"><a href=\"#L406\">406</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @type buildShort: C{bool}</span></td></tr><tr><th id=\"L407\"><a href=\"#L407\">407</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param buildShort: May be True to indicate we're building an excludes</span></td></tr><tr><th id=\"L408\"><a href=\"#L408\">408</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0string for the short option that correspondes to</span></td></tr><tr><th id=\"L409\"><a href=\"#L409\">409</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0the given long opt</span></td></tr><tr><th id=\"L410\"><a href=\"#L410\">410</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L411\"><a href=\"#L411\">411</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: The generated C{str}</span></td></tr><tr><th id=\"L412\"><a href=\"#L412\">412</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L413\"><a href=\"#L413\">413</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">long</span>\u00a0<span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>excludes<span class=\"p\">:</span></td></tr><tr><th id=\"L414\"><a href=\"#L414\">414</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 exclusions <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>excludes<span class=\"p\">[</span><span class=\"nb\">long</span><span class=\"p\">][:]</span></td></tr><tr><th id=\"L415\"><a href=\"#L415\">415</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L416\"><a href=\"#L416\">416</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 exclusions <span class=\"o\">=</span>\u00a0<span class=\"p\">[]</span></td></tr><tr><th id=\"L417\"><a href=\"#L417\">417</a></th><td></td></tr><tr><th id=\"L418\"><a href=\"#L418\">418</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># if long isn't a multiUse option (can't appear on the cmd line more</span></td></tr><tr><th id=\"L419\"><a href=\"#L419\">419</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># than once), then we have to exclude the short option if we're</span></td></tr><tr><th id=\"L420\"><a href=\"#L420\">420</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># building for the long option, and vice versa.</span></td></tr><tr><th id=\"L421\"><a href=\"#L421\">421</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">long</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>multiUse<span class=\"p\">:</span></td></tr><tr><th id=\"L422\"><a href=\"#L422\">422</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0buildShort <span class=\"ow\">is</span>\u00a0<span class=\"bp\">False</span><span class=\"p\">:</span></td></tr><tr><th id=\"L423\"><a href=\"#L423\">423</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 short <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>getShortOption<span class=\"p\">(</span><span class=\"nb\">long</span><span class=\"p\">)</span></td></tr><tr><th id=\"L424\"><a href=\"#L424\">424</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0short <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L425\"><a href=\"#L425\">425</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 exclusions<span class=\"o\">.</span>append<span class=\"p\">(</span>short<span class=\"p\">)</span></td></tr><tr><th id=\"L426\"><a href=\"#L426\">426</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L427\"><a href=\"#L427\">427</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 exclusions<span class=\"o\">.</span>append<span class=\"p\">(</span><span class=\"nb\">long</span><span class=\"p\">)</span></td></tr><tr><th id=\"L428\"><a href=\"#L428\">428</a></th><td></td></tr><tr><th id=\"L429\"><a href=\"#L429\">429</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0exclusions<span class=\"p\">:</span></td></tr><tr><th id=\"L430\"><a href=\"#L430\">430</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"s\">''</span></td></tr><tr><th id=\"L431\"><a href=\"#L431\">431</a></th><td></td></tr><tr><th id=\"L432\"><a href=\"#L432\">432</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 strings <span class=\"o\">=</span>\u00a0<span class=\"p\">[]</span></td></tr><tr><th id=\"L433\"><a href=\"#L433\">433</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0optName <span class=\"ow\">in</span>\u00a0exclusions<span class=\"p\">:</span></td></tr><tr><th id=\"L434\"><a href=\"#L434\">434</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span>optName<span class=\"p\">)</span>\u00a0<span class=\"o\">==</span>\u00a0<span class=\"mi\">1</span><span class=\"p\">:</span></td></tr><tr><th id=\"L435\"><a href=\"#L435\">435</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># short option</span></td></tr><tr><th id=\"L436\"><a href=\"#L436\">436</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 strings<span class=\"o\">.</span>append<span class=\"p\">(</span><span class=\"s\">\"-\"</span>\u00a0<span class=\"o\">+</span>\u00a0optName<span class=\"p\">)</span></td></tr><tr><th id=\"L437\"><a href=\"#L437\">437</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L438\"><a href=\"#L438\">438</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 strings<span class=\"o\">.</span>append<span class=\"p\">(</span><span class=\"s\">\"--\"</span>\u00a0<span class=\"o\">+</span>\u00a0optName<span class=\"p\">)</span></td></tr><tr><th id=\"L439\"><a href=\"#L439\">439</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"s\">\"(</span><span class=\"si\">%s</span><span class=\"s\">)\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"s\">\" \"</span><span class=\"o\">.</span>join<span class=\"p\">(</span>strings<span class=\"p\">)</span></td></tr><tr><th id=\"L440\"><a href=\"#L440\">440</a></th><td></td></tr><tr><th id=\"L441\"><a href=\"#L441\">441</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">makeExcludesDict</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L442\"><a href=\"#L442\">442</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L443\"><a href=\"#L443\">443</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: A C{dict} that maps each option name appearing in</span></td></tr><tr><th id=\"L444\"><a href=\"#L444\">444</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 self.mutuallyExclusive to a list of those option names that</span></td></tr><tr><th id=\"L445\"><a href=\"#L445\">445</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 is it mutually exclusive with (can't appear on the cmd line with)</span></td></tr><tr><th id=\"L446\"><a href=\"#L446\">446</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L447\"><a href=\"#L447\">447</a></th><td></td></tr><tr><th id=\"L448\"><a href=\"#L448\">448</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\">#create a mapping of long option name -&gt; single character name</span></td></tr><tr><th id=\"L449\"><a href=\"#L449\">449</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 longToShort <span class=\"o\">=</span>\u00a0<span class=\"p\">{}</span></td></tr><tr><th id=\"L450\"><a href=\"#L450\">450</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0optList <span class=\"ow\">in</span>\u00a0itertools<span class=\"o\">.</span>chain<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>optParams<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>optFlags<span class=\"p\">):</span></td></tr><tr><th id=\"L451\"><a href=\"#L451\">451</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L452\"><a href=\"#L452\">452</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0optList<span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\u00a0<span class=\"o\">!=</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L453\"><a href=\"#L453\">453</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 longToShort<span class=\"p\">[</span>optList<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]]</span>\u00a0<span class=\"o\">=</span>\u00a0optList<span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span></td></tr><tr><th id=\"L454\"><a href=\"#L454\">454</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">IndexError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L455\"><a href=\"#L455\">455</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L456\"><a href=\"#L456\">456</a></th><td></td></tr><tr><th id=\"L457\"><a href=\"#L457\">457</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 excludes <span class=\"o\">=</span>\u00a0<span class=\"p\">{}</span></td></tr><tr><th id=\"L458\"><a href=\"#L458\">458</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0lst <span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>mutuallyExclusive<span class=\"p\">:</span></td></tr><tr><th id=\"L459\"><a href=\"#L459\">459</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0i<span class=\"p\">,</span>\u00a0<span class=\"nb\">long</span>\u00a0<span class=\"ow\">in</span>\u00a0<span class=\"nb\">enumerate</span><span class=\"p\">(</span>lst<span class=\"p\">):</span></td></tr><tr><th id=\"L460\"><a href=\"#L460\">460</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 tmp <span class=\"o\">=</span>\u00a0<span class=\"p\">[]</span></td></tr><tr><th id=\"L461\"><a href=\"#L461\">461</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 tmp<span class=\"o\">.</span>extend<span class=\"p\">(</span>lst<span class=\"p\">[:</span>i<span class=\"p\">])</span></td></tr><tr><th id=\"L462\"><a href=\"#L462\">462</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 tmp<span class=\"o\">.</span>extend<span class=\"p\">(</span>lst<span class=\"p\">[</span>i<span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">:])</span></td></tr><tr><th id=\"L463\"><a href=\"#L463\">463</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0name <span class=\"ow\">in</span>\u00a0tmp<span class=\"p\">[:]:</span></td></tr><tr><th id=\"L464\"><a href=\"#L464\">464</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0name <span class=\"ow\">in</span>\u00a0longToShort<span class=\"p\">:</span></td></tr><tr><th id=\"L465\"><a href=\"#L465\">465</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 tmp<span class=\"o\">.</span>append<span class=\"p\">(</span>longToShort<span class=\"p\">[</span>name<span class=\"p\">])</span></td></tr><tr><th id=\"L466\"><a href=\"#L466\">466</a></th><td></td></tr><tr><th id=\"L467\"><a href=\"#L467\">467</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">long</span>\u00a0<span class=\"ow\">in</span>\u00a0excludes<span class=\"p\">:</span></td></tr><tr><th id=\"L468\"><a href=\"#L468\">468</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 excludes<span class=\"p\">[</span><span class=\"nb\">long</span><span class=\"p\">]</span><span class=\"o\">.</span>extend<span class=\"p\">(</span>tmp<span class=\"p\">)</span></td></tr><tr><th id=\"L469\"><a href=\"#L469\">469</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L470\"><a href=\"#L470\">470</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 excludes<span class=\"p\">[</span><span class=\"nb\">long</span><span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0tmp</td></tr><tr><th id=\"L471\"><a href=\"#L471\">471</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0excludes</td></tr><tr><th id=\"L472\"><a href=\"#L472\">472</a></th><td></td></tr><tr><th id=\"L473\"><a href=\"#L473\">473</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">writeOpt</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"nb\">long</span><span class=\"p\">):</span></td></tr><tr><th id=\"L474\"><a href=\"#L474\">474</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L475\"><a href=\"#L475\">475</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Write out the zsh code for the given argument. This is just part of the</span></td></tr><tr><th id=\"L476\"><a href=\"#L476\">476</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 one big call to _arguments</span></td></tr><tr><th id=\"L477\"><a href=\"#L477\">477</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L478\"><a href=\"#L478\">478</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @type long: C{str}</span></td></tr><tr><th id=\"L479\"><a href=\"#L479\">479</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param long: The long name of the option</span></td></tr><tr><th id=\"L480\"><a href=\"#L480\">480</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0(i.e. \"verbose\" instead of \"v\")</span></td></tr><tr><th id=\"L481\"><a href=\"#L481\">481</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L482\"><a href=\"#L482\">482</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: C{None}</span></td></tr><tr><th id=\"L483\"><a href=\"#L483\">483</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L484\"><a href=\"#L484\">484</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">long</span>\u00a0<span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>optFlags_d<span class=\"p\">:</span></td></tr><tr><th id=\"L485\"><a href=\"#L485\">485</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># It's a flag option. Not one that takes a parameter.</span></td></tr><tr><th id=\"L486\"><a href=\"#L486\">486</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 long_field <span class=\"o\">=</span>\u00a0<span class=\"s\">\"--</span><span class=\"si\">%s</span><span class=\"s\">\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"nb\">long</span></td></tr><tr><th id=\"L487\"><a href=\"#L487\">487</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L488\"><a href=\"#L488\">488</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 long_field <span class=\"o\">=</span>\u00a0<span class=\"s\">\"--</span><span class=\"si\">%s</span><span class=\"s\">=\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"nb\">long</span></td></tr><tr><th id=\"L489\"><a href=\"#L489\">489</a></th><td></td></tr><tr><th id=\"L490\"><a href=\"#L490\">490</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 short <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>getShortOption<span class=\"p\">(</span><span class=\"nb\">long</span><span class=\"p\">)</span></td></tr><tr><th id=\"L491\"><a href=\"#L491\">491</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0short <span class=\"o\">!=</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L492\"><a href=\"#L492\">492</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 short_field <span class=\"o\">=</span>\u00a0<span class=\"s\">\"-\"</span>\u00a0<span class=\"o\">+</span>\u00a0short</td></tr><tr><th id=\"L493\"><a href=\"#L493\">493</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L494\"><a href=\"#L494\">494</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 short_field <span class=\"o\">=</span>\u00a0<span class=\"s\">''</span></td></tr><tr><th id=\"L495\"><a href=\"#L495\">495</a></th><td></td></tr><tr><th id=\"L496\"><a href=\"#L496\">496</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 descr <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>getDescription<span class=\"p\">(</span><span class=\"nb\">long</span><span class=\"p\">)</span></td></tr><tr><th id=\"L497\"><a href=\"#L497\">497</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 descr_field <span class=\"o\">=</span>\u00a0descr<span class=\"o\">.</span>replace<span class=\"p\">(</span><span class=\"s\">\"[\"</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"\\[\"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L498\"><a href=\"#L498\">498</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 descr_field <span class=\"o\">=</span>\u00a0descr_field<span class=\"o\">.</span>replace<span class=\"p\">(</span><span class=\"s\">\"]\"</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"\\]\"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L499\"><a href=\"#L499\">499</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 descr_field <span class=\"o\">=</span>\u00a0<span class=\"s\">'[</span><span class=\"si\">%s</span><span class=\"s\">]'</span>\u00a0<span class=\"o\">%</span>\u00a0descr_field</td></tr><tr><th id=\"L500\"><a href=\"#L500\">500</a></th><td></td></tr><tr><th id=\"L501\"><a href=\"#L501\">501</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">long</span>\u00a0<span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>actionDescr<span class=\"p\">:</span></td></tr><tr><th id=\"L502\"><a href=\"#L502\">502</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 actionDescr_field <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>actionDescr<span class=\"p\">[</span><span class=\"nb\">long</span><span class=\"p\">]</span></td></tr><tr><th id=\"L503\"><a href=\"#L503\">503</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L504\"><a href=\"#L504\">504</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 actionDescr_field <span class=\"o\">=</span>\u00a0descr</td></tr><tr><th id=\"L505\"><a href=\"#L505\">505</a></th><td></td></tr><tr><th id=\"L506\"><a href=\"#L506\">506</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 action_field <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>getAction<span class=\"p\">(</span><span class=\"nb\">long</span><span class=\"p\">)</span></td></tr><tr><th id=\"L507\"><a href=\"#L507\">507</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">long</span>\u00a0<span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>multiUse<span class=\"p\">:</span></td></tr><tr><th id=\"L508\"><a href=\"#L508\">508</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 multi_field <span class=\"o\">=</span>\u00a0<span class=\"s\">'*'</span></td></tr><tr><th id=\"L509\"><a href=\"#L509\">509</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L510\"><a href=\"#L510\">510</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 multi_field <span class=\"o\">=</span>\u00a0<span class=\"s\">''</span></td></tr><tr><th id=\"L511\"><a href=\"#L511\">511</a></th><td></td></tr><tr><th id=\"L512\"><a href=\"#L512\">512</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 longExclusions_field <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>excludeStr<span class=\"p\">(</span><span class=\"nb\">long</span><span class=\"p\">)</span></td></tr><tr><th id=\"L513\"><a href=\"#L513\">513</a></th><td></td></tr><tr><th id=\"L514\"><a href=\"#L514\">514</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0short<span class=\"p\">:</span></td></tr><tr><th id=\"L515\"><a href=\"#L515\">515</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\">#we have to write an extra line for the short option if we have one</span></td></tr><tr><th id=\"L516\"><a href=\"#L516\">516</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 shortExclusions_field <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>excludeStr<span class=\"p\">(</span><span class=\"nb\">long</span><span class=\"p\">,</span>\u00a0buildShort<span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span></td></tr><tr><th id=\"L517\"><a href=\"#L517\">517</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>file<span class=\"o\">.</span>write<span class=\"p\">(</span>escape<span class=\"p\">(</span><span class=\"s\">'</span><span class=\"si\">%s%s%s%s%s</span><span class=\"s\">'</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span>shortExclusions_field<span class=\"p\">,</span></td></tr><tr><th id=\"L518\"><a href=\"#L518\">518</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 multi_field<span class=\"p\">,</span>\u00a0short_field<span class=\"p\">,</span>\u00a0descr_field<span class=\"p\">,</span>\u00a0action_field<span class=\"p\">)))</span></td></tr><tr><th id=\"L519\"><a href=\"#L519\">519</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>file<span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"s\">' </span><span class=\"se\">\\\\\\n</span><span class=\"s\">'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L520\"><a href=\"#L520\">520</a></th><td></td></tr><tr><th id=\"L521\"><a href=\"#L521\">521</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>file<span class=\"o\">.</span>write<span class=\"p\">(</span>escape<span class=\"p\">(</span><span class=\"s\">'</span><span class=\"si\">%s%s%s%s%s</span><span class=\"s\">'</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span>longExclusions_field<span class=\"p\">,</span></td></tr><tr><th id=\"L522\"><a href=\"#L522\">522</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 multi_field<span class=\"p\">,</span>\u00a0long_field<span class=\"p\">,</span>\u00a0descr_field<span class=\"p\">,</span>\u00a0action_field<span class=\"p\">)))</span></td></tr><tr><th id=\"L523\"><a href=\"#L523\">523</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>file<span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"s\">' </span><span class=\"se\">\\\\\\n</span><span class=\"s\">'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L524\"><a href=\"#L524\">524</a></th><td></td></tr><tr><th id=\"L525\"><a href=\"#L525\">525</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getAction</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"nb\">long</span><span class=\"p\">):</span></td></tr><tr><th id=\"L526\"><a href=\"#L526\">526</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L527\"><a href=\"#L527\">527</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Return a zsh \"action\" string for the given argument</span></td></tr><tr><th id=\"L528\"><a href=\"#L528\">528</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: C{str}</span></td></tr><tr><th id=\"L529\"><a href=\"#L529\">529</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L530\"><a href=\"#L530\">530</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">long</span>\u00a0<span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>actions<span class=\"p\">:</span></td></tr><tr><th id=\"L531\"><a href=\"#L531\">531</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">callable</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>actions<span class=\"p\">[</span><span class=\"nb\">long</span><span class=\"p\">]):</span></td></tr><tr><th id=\"L532\"><a href=\"#L532\">532</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 action <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>actions<span class=\"p\">[</span><span class=\"nb\">long</span><span class=\"p\">]()</span></td></tr><tr><th id=\"L533\"><a href=\"#L533\">533</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L534\"><a href=\"#L534\">534</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 action <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>actions<span class=\"p\">[</span><span class=\"nb\">long</span><span class=\"p\">]</span></td></tr><tr><th id=\"L535\"><a href=\"#L535\">535</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"s\">\":</span><span class=\"si\">%s</span><span class=\"s\">:</span><span class=\"si\">%s</span><span class=\"s\">\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>getActionDescr<span class=\"p\">(</span><span class=\"nb\">long</span><span class=\"p\">),</span>\u00a0action<span class=\"p\">)</span></td></tr><tr><th id=\"L536\"><a href=\"#L536\">536</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">long</span>\u00a0<span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>optParams_d<span class=\"p\">:</span></td></tr><tr><th id=\"L537\"><a href=\"#L537\">537</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"s\">':</span><span class=\"si\">%s</span><span class=\"s\">:_files'</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>getActionDescr<span class=\"p\">(</span><span class=\"nb\">long</span><span class=\"p\">)</span></td></tr><tr><th id=\"L538\"><a href=\"#L538\">538</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"s\">''</span></td></tr><tr><th id=\"L539\"><a href=\"#L539\">539</a></th><td></td></tr><tr><th id=\"L540\"><a href=\"#L540\">540</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getActionDescr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"nb\">long</span><span class=\"p\">):</span></td></tr><tr><th id=\"L541\"><a href=\"#L541\">541</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L542\"><a href=\"#L542\">542</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Return the description to be used when this argument is completed</span></td></tr><tr><th id=\"L543\"><a href=\"#L543\">543</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: C{str}</span></td></tr><tr><th id=\"L544\"><a href=\"#L544\">544</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L545\"><a href=\"#L545\">545</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">long</span>\u00a0<span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>actionDescr<span class=\"p\">:</span></td></tr><tr><th id=\"L546\"><a href=\"#L546\">546</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>actionDescr<span class=\"p\">[</span><span class=\"nb\">long</span><span class=\"p\">]</span></td></tr><tr><th id=\"L547\"><a href=\"#L547\">547</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L548\"><a href=\"#L548\">548</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"nb\">long</span></td></tr><tr><th id=\"L549\"><a href=\"#L549\">549</a></th><td></td></tr><tr><th id=\"L550\"><a href=\"#L550\">550</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getDescription</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"nb\">long</span><span class=\"p\">):</span></td></tr><tr><th id=\"L551\"><a href=\"#L551\">551</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L552\"><a href=\"#L552\">552</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Return the description to be used for this argument</span></td></tr><tr><th id=\"L553\"><a href=\"#L553\">553</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: C{str}</span></td></tr><tr><th id=\"L554\"><a href=\"#L554\">554</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L555\"><a href=\"#L555\">555</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\">#check if we have an alternate descr for this arg, and if so use it</span></td></tr><tr><th id=\"L556\"><a href=\"#L556\">556</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">long</span>\u00a0<span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>altArgDescr<span class=\"p\">:</span></td></tr><tr><th id=\"L557\"><a href=\"#L557\">557</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>altArgDescr<span class=\"p\">[</span><span class=\"nb\">long</span><span class=\"p\">]</span></td></tr><tr><th id=\"L558\"><a href=\"#L558\">558</a></th><td></td></tr><tr><th id=\"L559\"><a href=\"#L559\">559</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\">#otherwise we have to get it from the optFlags or optParams</span></td></tr><tr><th id=\"L560\"><a href=\"#L560\">560</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L561\"><a href=\"#L561\">561</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 descr <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>optFlags_d<span class=\"p\">[</span><span class=\"nb\">long</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span></td></tr><tr><th id=\"L562\"><a href=\"#L562\">562</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">KeyError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L563\"><a href=\"#L563\">563</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L564\"><a href=\"#L564\">564</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 descr <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>optParams_d<span class=\"p\">[</span><span class=\"nb\">long</span><span class=\"p\">][</span><span class=\"mi\">2</span><span class=\"p\">]</span></td></tr><tr><th id=\"L565\"><a href=\"#L565\">565</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">KeyError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L566\"><a href=\"#L566\">566</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 descr <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L567\"><a href=\"#L567\">567</a></th><td></td></tr><tr><th id=\"L568\"><a href=\"#L568\">568</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0descr <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L569\"><a href=\"#L569\">569</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0descr</td></tr><tr><th id=\"L570\"><a href=\"#L570\">570</a></th><td></td></tr><tr><th id=\"L571\"><a href=\"#L571\">571</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># lets try to get it from the opt_foo method doc string if there is one</span></td></tr><tr><th id=\"L572\"><a href=\"#L572\">572</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 longMangled <span class=\"o\">=</span>\u00a0<span class=\"nb\">long</span><span class=\"o\">.</span>replace<span class=\"p\">(</span><span class=\"s\">'-'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'_'</span><span class=\"p\">)</span>\u00a0<span class=\"c\"># this is what t.p.usage does</span></td></tr><tr><th id=\"L573\"><a href=\"#L573\">573</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 obj <span class=\"o\">=</span>\u00a0<span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>options<span class=\"p\">,</span>\u00a0<span class=\"s\">'opt_</span><span class=\"si\">%s</span><span class=\"s\">'</span>\u00a0<span class=\"o\">%</span>\u00a0longMangled<span class=\"p\">,</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">)</span></td></tr><tr><th id=\"L574\"><a href=\"#L574\">574</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0obj<span class=\"p\">:</span></td></tr><tr><th id=\"L575\"><a href=\"#L575\">575</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 descr <span class=\"o\">=</span>\u00a0descrFromDoc<span class=\"p\">(</span>obj<span class=\"p\">)</span></td></tr><tr><th id=\"L576\"><a href=\"#L576\">576</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0descr <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L577\"><a href=\"#L577\">577</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0descr</td></tr><tr><th id=\"L578\"><a href=\"#L578\">578</a></th><td></td></tr><tr><th id=\"L579\"><a href=\"#L579\">579</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"nb\">long</span>\u00a0<span class=\"c\"># we really ought to have a good description to use</span></td></tr><tr><th id=\"L580\"><a href=\"#L580\">580</a></th><td></td></tr><tr><th id=\"L581\"><a href=\"#L581\">581</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getShortOption</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"nb\">long</span><span class=\"p\">):</span></td></tr><tr><th id=\"L582\"><a href=\"#L582\">582</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L583\"><a href=\"#L583\">583</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Return the short option letter or None</span></td></tr><tr><th id=\"L584\"><a href=\"#L584\">584</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: C{str} or C{None}</span></td></tr><tr><th id=\"L585\"><a href=\"#L585\">585</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L586\"><a href=\"#L586\">586</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 optList <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>optAll_d<span class=\"p\">[</span><span class=\"nb\">long</span><span class=\"p\">]</span></td></tr><tr><th id=\"L587\"><a href=\"#L587\">587</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L588\"><a href=\"#L588\">588</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0optList<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\u00a0<span class=\"ow\">or</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L589\"><a href=\"#L589\">589</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">IndexError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L590\"><a href=\"#L590\">590</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L591\"><a href=\"#L591\">591</a></th><td></td></tr><tr><th id=\"L592\"><a href=\"#L592\">592</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">addAdditionalOptions</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L593\"><a href=\"#L593\">593</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L594\"><a href=\"#L594\">594</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Add additional options to the optFlags and optParams lists.</span></td></tr><tr><th id=\"L595\"><a href=\"#L595\">595</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 These will be defined by 'opt_foo' methods of the Options subclass</span></td></tr><tr><th id=\"L596\"><a href=\"#L596\">596</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: C{None}</span></td></tr><tr><th id=\"L597\"><a href=\"#L597\">597</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L598\"><a href=\"#L598\">598</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 methodsDict <span class=\"o\">=</span>\u00a0<span class=\"p\">{}</span></td></tr><tr><th id=\"L599\"><a href=\"#L599\">599</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 reflect<span class=\"o\">.</span>accumulateMethods<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>options<span class=\"p\">,</span>\u00a0methodsDict<span class=\"p\">,</span>\u00a0<span class=\"s\">'opt_'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L600\"><a href=\"#L600\">600</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 methodToShort <span class=\"o\">=</span>\u00a0<span class=\"p\">{}</span></td></tr><tr><th id=\"L601\"><a href=\"#L601\">601</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0name <span class=\"ow\">in</span>\u00a0methodsDict<span class=\"o\">.</span>copy<span class=\"p\">():</span></td></tr><tr><th id=\"L602\"><a href=\"#L602\">602</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span>name<span class=\"p\">)</span>\u00a0<span class=\"o\">==</span>\u00a0<span class=\"mi\">1</span><span class=\"p\">:</span></td></tr><tr><th id=\"L603\"><a href=\"#L603\">603</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 methodToShort<span class=\"p\">[</span>methodsDict<span class=\"p\">[</span>name<span class=\"p\">]]</span>\u00a0<span class=\"o\">=</span>\u00a0name</td></tr><tr><th id=\"L604\"><a href=\"#L604\">604</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0methodsDict<span class=\"p\">[</span>name<span class=\"p\">]</span></td></tr><tr><th id=\"L605\"><a href=\"#L605\">605</a></th><td></td></tr><tr><th id=\"L606\"><a href=\"#L606\">606</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0methodName<span class=\"p\">,</span>\u00a0methodObj <span class=\"ow\">in</span>\u00a0methodsDict<span class=\"o\">.</span>items<span class=\"p\">():</span></td></tr><tr><th id=\"L607\"><a href=\"#L607\">607</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">long</span>\u00a0<span class=\"o\">=</span>\u00a0methodName<span class=\"o\">.</span>replace<span class=\"p\">(</span><span class=\"s\">'_'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'-'</span><span class=\"p\">)</span>\u00a0<span class=\"c\"># t.p.usage does this</span></td></tr><tr><th id=\"L608\"><a href=\"#L608\">608</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># if this option is already defined by the optFlags or</span></td></tr><tr><th id=\"L609\"><a href=\"#L609\">609</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># optParameters then we don't want to override that data</span></td></tr><tr><th id=\"L610\"><a href=\"#L610\">610</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">long</span>\u00a0<span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>optAll_d<span class=\"p\">:</span></td></tr><tr><th id=\"L611\"><a href=\"#L611\">611</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">continue</span></td></tr><tr><th id=\"L612\"><a href=\"#L612\">612</a></th><td></td></tr><tr><th id=\"L613\"><a href=\"#L613\">613</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 descr <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>getDescription<span class=\"p\">(</span><span class=\"nb\">long</span><span class=\"p\">)</span></td></tr><tr><th id=\"L614\"><a href=\"#L614\">614</a></th><td></td></tr><tr><th id=\"L615\"><a href=\"#L615\">615</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 short <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L616\"><a href=\"#L616\">616</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0methodObj <span class=\"ow\">in</span>\u00a0methodToShort<span class=\"p\">:</span></td></tr><tr><th id=\"L617\"><a href=\"#L617\">617</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 short <span class=\"o\">=</span>\u00a0methodToShort<span class=\"p\">[</span>methodObj<span class=\"p\">]</span></td></tr><tr><th id=\"L618\"><a href=\"#L618\">618</a></th><td></td></tr><tr><th id=\"L619\"><a href=\"#L619\">619</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 reqArgs <span class=\"o\">=</span>\u00a0methodObj<span class=\"o\">.</span>im_func<span class=\"o\">.</span>func_code<span class=\"o\">.</span>co_argcount</td></tr><tr><th id=\"L620\"><a href=\"#L620\">620</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0reqArgs <span class=\"o\">==</span>\u00a0<span class=\"mi\">2</span><span class=\"p\">:</span></td></tr><tr><th id=\"L621\"><a href=\"#L621\">621</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>optParams<span class=\"o\">.</span>append<span class=\"p\">([</span><span class=\"nb\">long</span><span class=\"p\">,</span>\u00a0short<span class=\"p\">,</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">,</span>\u00a0descr<span class=\"p\">])</span></td></tr><tr><th id=\"L622\"><a href=\"#L622\">622</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>optParams_d<span class=\"p\">[</span><span class=\"nb\">long</span><span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0<span class=\"p\">[</span>short<span class=\"p\">,</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">,</span>\u00a0descr<span class=\"p\">]</span></td></tr><tr><th id=\"L623\"><a href=\"#L623\">623</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>optAll_d<span class=\"p\">[</span><span class=\"nb\">long</span><span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0<span class=\"p\">[</span>short<span class=\"p\">,</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">,</span>\u00a0descr<span class=\"p\">]</span></td></tr><tr><th id=\"L624\"><a href=\"#L624\">624</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0reqArgs <span class=\"o\">==</span>\u00a0<span class=\"mi\">1</span><span class=\"p\">:</span></td></tr><tr><th id=\"L625\"><a href=\"#L625\">625</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>optFlags<span class=\"o\">.</span>append<span class=\"p\">([</span><span class=\"nb\">long</span><span class=\"p\">,</span>\u00a0short<span class=\"p\">,</span>\u00a0descr<span class=\"p\">])</span></td></tr><tr><th id=\"L626\"><a href=\"#L626\">626</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>optFlags_d<span class=\"p\">[</span><span class=\"nb\">long</span><span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0<span class=\"p\">[</span>short<span class=\"p\">,</span>\u00a0descr<span class=\"p\">]</span></td></tr><tr><th id=\"L627\"><a href=\"#L627\">627</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>optAll_d<span class=\"p\">[</span><span class=\"nb\">long</span><span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0<span class=\"p\">[</span>short<span class=\"p\">,</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">,</span>\u00a0descr<span class=\"p\">]</span></td></tr><tr><th id=\"L628\"><a href=\"#L628\">628</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L629\"><a href=\"#L629\">629</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">TypeError</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'</span><span class=\"si\">%r</span><span class=\"s\">\u00a0has wrong number '</span>\u00a0\\</td></tr><tr><th id=\"L630\"><a href=\"#L630\">630</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"s\">'of arguments'</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span>methodObj<span class=\"p\">,)</span></td></tr><tr><th id=\"L631\"><a href=\"#L631\">631</a></th><td></td></tr><tr><th id=\"L632\"><a href=\"#L632\">632</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">descrFromDoc</span><span class=\"p\">(</span>obj<span class=\"p\">):</span></td></tr><tr><th id=\"L633\"><a href=\"#L633\">633</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L634\"><a href=\"#L634\">634</a></th><td><span class=\"sd\">\u00a0 \u00a0 Generate an appropriate description from docstring of the given object</span></td></tr><tr><th id=\"L635\"><a href=\"#L635\">635</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L636\"><a href=\"#L636\">636</a></th><td>\u00a0 \u00a0 <span class=\"k\">if</span>\u00a0obj<span class=\"o\">.</span>__doc__ <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L637\"><a href=\"#L637\">637</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L638\"><a href=\"#L638\">638</a></th><td></td></tr><tr><th id=\"L639\"><a href=\"#L639\">639</a></th><td>\u00a0 \u00a0 lines <span class=\"o\">=</span>\u00a0obj<span class=\"o\">.</span>__doc__<span class=\"o\">.</span>split<span class=\"p\">(</span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L640\"><a href=\"#L640\">640</a></th><td>\u00a0 \u00a0 descr <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L641\"><a href=\"#L641\">641</a></th><td>\u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L642\"><a href=\"#L642\">642</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0lines<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\u00a0<span class=\"o\">!=</span>\u00a0<span class=\"s\">\"\"</span>\u00a0<span class=\"ow\">and</span>\u00a0<span class=\"ow\">not</span>\u00a0lines<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span>isspace<span class=\"p\">():</span></td></tr><tr><th id=\"L643\"><a href=\"#L643\">643</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 descr <span class=\"o\">=</span>\u00a0lines<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span>lstrip<span class=\"p\">()</span></td></tr><tr><th id=\"L644\"><a href=\"#L644\">644</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># skip first line if it's blank</span></td></tr><tr><th id=\"L645\"><a href=\"#L645\">645</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0lines<span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\u00a0<span class=\"o\">!=</span>\u00a0<span class=\"s\">\"\"</span>\u00a0<span class=\"ow\">and</span>\u00a0<span class=\"ow\">not</span>\u00a0lines<span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span>isspace<span class=\"p\">():</span></td></tr><tr><th id=\"L646\"><a href=\"#L646\">646</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 descr <span class=\"o\">=</span>\u00a0lines<span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span>lstrip<span class=\"p\">()</span></td></tr><tr><th id=\"L647\"><a href=\"#L647\">647</a></th><td>\u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">IndexError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L648\"><a href=\"#L648\">648</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L649\"><a href=\"#L649\">649</a></th><td>\u00a0 \u00a0 <span class=\"k\">return</span>\u00a0descr</td></tr><tr><th id=\"L650\"><a href=\"#L650\">650</a></th><td></td></tr><tr><th id=\"L651\"><a href=\"#L651\">651</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">firstLine</span><span class=\"p\">(</span>s<span class=\"p\">):</span></td></tr><tr><th id=\"L652\"><a href=\"#L652\">652</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L653\"><a href=\"#L653\">653</a></th><td><span class=\"sd\">\u00a0 \u00a0 Return the first line of the given string</span></td></tr><tr><th id=\"L654\"><a href=\"#L654\">654</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L655\"><a href=\"#L655\">655</a></th><td>\u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L656\"><a href=\"#L656\">656</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 i <span class=\"o\">=</span>\u00a0s<span class=\"o\">.</span>index<span class=\"p\">(</span><span class=\"s\">'</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L657\"><a href=\"#L657\">657</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0s<span class=\"p\">[:</span>i<span class=\"p\">]</span></td></tr><tr><th id=\"L658\"><a href=\"#L658\">658</a></th><td>\u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">ValueError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L659\"><a href=\"#L659\">659</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0s</td></tr><tr><th id=\"L660\"><a href=\"#L660\">660</a></th><td></td></tr><tr><th id=\"L661\"><a href=\"#L661\">661</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">escape</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">):</span></td></tr><tr><th id=\"L662\"><a href=\"#L662\">662</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L663\"><a href=\"#L663\">663</a></th><td><span class=\"sd\">\u00a0 \u00a0 Shell escape the given string</span></td></tr><tr><th id=\"L664\"><a href=\"#L664\">664</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L665\"><a href=\"#L665\">665</a></th><td>\u00a0 \u00a0 <span class=\"k\">return</span>\u00a0commands<span class=\"o\">.</span>mkarg<span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">:]</span></td></tr><tr><th id=\"L666\"><a href=\"#L666\">666</a></th><td></td></tr><tr><th id=\"L667\"><a href=\"#L667\">667</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">siteFunctionsPath</span><span class=\"p\">():</span></td></tr><tr><th id=\"L668\"><a href=\"#L668\">668</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L669\"><a href=\"#L669\">669</a></th><td><span class=\"sd\">\u00a0 \u00a0 Return the path to the system-wide site-functions directory or</span></td></tr><tr><th id=\"L670\"><a href=\"#L670\">670</a></th><td><span class=\"sd\">\u00a0 \u00a0 C{None} if it cannot be determined</span></td></tr><tr><th id=\"L671\"><a href=\"#L671\">671</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L672\"><a href=\"#L672\">672</a></th><td>\u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L673\"><a href=\"#L673\">673</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 cmd <span class=\"o\">=</span>\u00a0<span class=\"s\">\"zsh -f -c 'echo ${(M)fpath:#/*/site-functions}'\"</span></td></tr><tr><th id=\"L674\"><a href=\"#L674\">674</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 output <span class=\"o\">=</span>\u00a0commands<span class=\"o\">.</span>getoutput<span class=\"p\">(</span>cmd<span class=\"p\">)</span></td></tr><tr><th id=\"L675\"><a href=\"#L675\">675</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0os<span class=\"o\">.</span>path<span class=\"o\">.</span>isdir<span class=\"p\">(</span>output<span class=\"p\">):</span></td></tr><tr><th id=\"L676\"><a href=\"#L676\">676</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0output</td></tr><tr><th id=\"L677\"><a href=\"#L677\">677</a></th><td>\u00a0 \u00a0 <span class=\"k\">except</span><span class=\"p\">:</span></td></tr><tr><th id=\"L678\"><a href=\"#L678\">678</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L679\"><a href=\"#L679\">679</a></th><td></td></tr><tr><th id=\"L680\"><a href=\"#L680\">680</a></th><td>generateFor <span class=\"o\">=</span>\u00a0<span class=\"p\">[(</span><span class=\"s\">'conch'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'twisted.conch.scripts.conch'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'ClientOptions'</span><span class=\"p\">),</span></td></tr><tr><th id=\"L681\"><a href=\"#L681\">681</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"p\">(</span><span class=\"s\">'mktap'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'twisted.scripts.mktap'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'FirstPassOptions'</span><span class=\"p\">),</span></td></tr><tr><th id=\"L682\"><a href=\"#L682\">682</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"p\">(</span><span class=\"s\">'trial'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'twisted.scripts.trial'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'Options'</span><span class=\"p\">),</span></td></tr><tr><th id=\"L683\"><a href=\"#L683\">683</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"p\">(</span><span class=\"s\">'cftp'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'twisted.conch.scripts.cftp'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'ClientOptions'</span><span class=\"p\">),</span></td></tr><tr><th id=\"L684\"><a href=\"#L684\">684</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"p\">(</span><span class=\"s\">'tapconvert'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'twisted.scripts.tapconvert'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'ConvertOptions'</span><span class=\"p\">),</span></td></tr><tr><th id=\"L685\"><a href=\"#L685\">685</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"p\">(</span><span class=\"s\">'twistd'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'twisted.scripts.twistd'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'ServerOptions'</span><span class=\"p\">),</span></td></tr><tr><th id=\"L686\"><a href=\"#L686\">686</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"p\">(</span><span class=\"s\">'ckeygen'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'twisted.conch.scripts.ckeygen'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'GeneralOptions'</span><span class=\"p\">),</span></td></tr><tr><th id=\"L687\"><a href=\"#L687\">687</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"p\">(</span><span class=\"s\">'lore'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'twisted.lore.scripts.lore'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'Options'</span><span class=\"p\">),</span></td></tr><tr><th id=\"L688\"><a href=\"#L688\">688</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"p\">(</span><span class=\"s\">'pyhtmlizer'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'twisted.scripts.htmlizer'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'Options'</span><span class=\"p\">),</span></td></tr><tr><th id=\"L689\"><a href=\"#L689\">689</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"p\">(</span><span class=\"s\">'tap2deb'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'twisted.scripts.tap2deb'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'MyOptions'</span><span class=\"p\">),</span></td></tr><tr><th id=\"L690\"><a href=\"#L690\">690</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"p\">(</span><span class=\"s\">'tkconch'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'twisted.conch.scripts.tkconch'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'GeneralOptions'</span><span class=\"p\">),</span></td></tr><tr><th id=\"L691\"><a href=\"#L691\">691</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"p\">(</span><span class=\"s\">'manhole'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'twisted.scripts.manhole'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'MyOptions'</span><span class=\"p\">),</span></td></tr><tr><th id=\"L692\"><a href=\"#L692\">692</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"p\">(</span><span class=\"s\">'tap2rpm'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'twisted.scripts.tap2rpm'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'MyOptions'</span><span class=\"p\">),</span></td></tr><tr><th id=\"L693\"><a href=\"#L693\">693</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"p\">(</span><span class=\"s\">'websetroot'</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">),</span></td></tr><tr><th id=\"L694\"><a href=\"#L694\">694</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"p\">(</span><span class=\"s\">'tkmktap'</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">),</span></td></tr><tr><th id=\"L695\"><a href=\"#L695\">695</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"p\">]</span></td></tr><tr><th id=\"L696\"><a href=\"#L696\">696</a></th><td><span class=\"c\"># NOTE: the commands using None above are no longer included in Twisted.</span></td></tr><tr><th id=\"L697\"><a href=\"#L697\">697</a></th><td><span class=\"c\"># However due to limitations in zsh's completion system the version of</span></td></tr><tr><th id=\"L698\"><a href=\"#L698\">698</a></th><td><span class=\"c\"># _twisted_zsh_stub shipped with zsh contains a static list of Twisted's</span></td></tr><tr><th id=\"L699\"><a href=\"#L699\">699</a></th><td><span class=\"c\"># commands. It will display errors if completion functions for these missing</span></td></tr><tr><th id=\"L700\"><a href=\"#L700\">700</a></th><td><span class=\"c\"># commands are not found :( So we just include dummy (empty) completion</span></td></tr><tr><th id=\"L701\"><a href=\"#L701\">701</a></th><td><span class=\"c\"># function files</span></td></tr><tr><th id=\"L702\"><a href=\"#L702\">702</a></th><td></td></tr><tr><th id=\"L703\"><a href=\"#L703\">703</a></th><td>specialBuilders <span class=\"o\">=</span>\u00a0<span class=\"p\">{</span><span class=\"s\">'mktap'</span>\u00a0 <span class=\"p\">:</span>\u00a0MktapBuilder<span class=\"p\">,</span></td></tr><tr><th id=\"L704\"><a href=\"#L704\">704</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"s\">'twistd'</span>\u00a0<span class=\"p\">:</span>\u00a0TwistdBuilder<span class=\"p\">}</span></td></tr><tr><th id=\"L705\"><a href=\"#L705\">705</a></th><td></td></tr><tr><th id=\"L706\"><a href=\"#L706\">706</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">makeCompFunctionFiles</span><span class=\"p\">(</span>out_path<span class=\"p\">,</span>\u00a0generateFor<span class=\"o\">=</span>generateFor<span class=\"p\">,</span></td></tr><tr><th id=\"L707\"><a href=\"#L707\">707</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 specialBuilders<span class=\"o\">=</span>specialBuilders<span class=\"p\">):</span></td></tr><tr><th id=\"L708\"><a href=\"#L708\">708</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L709\"><a href=\"#L709\">709</a></th><td><span class=\"sd\">\u00a0 \u00a0 Generate completion function files in the given directory for all</span></td></tr><tr><th id=\"L710\"><a href=\"#L710\">710</a></th><td><span class=\"sd\">\u00a0 \u00a0 twisted commands</span></td></tr><tr><th id=\"L711\"><a href=\"#L711\">711</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L712\"><a href=\"#L712\">712</a></th><td><span class=\"sd\">\u00a0 \u00a0 @type out_path: C{str}</span></td></tr><tr><th id=\"L713\"><a href=\"#L713\">713</a></th><td><span class=\"sd\">\u00a0 \u00a0 @param out_path: The path to the directory to generate completion function</span></td></tr><tr><th id=\"L714\"><a href=\"#L714\">714</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0fils in</span></td></tr><tr><th id=\"L715\"><a href=\"#L715\">715</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L716\"><a href=\"#L716\">716</a></th><td><span class=\"sd\">\u00a0 \u00a0 @param generateFor: Sequence in the form of the 'generateFor' top-level</span></td></tr><tr><th id=\"L717\"><a href=\"#L717\">717</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 variable as defined in this module. Indicates what</span></td></tr><tr><th id=\"L718\"><a href=\"#L718\">718</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 commands to build completion files for.</span></td></tr><tr><th id=\"L719\"><a href=\"#L719\">719</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L720\"><a href=\"#L720\">720</a></th><td><span class=\"sd\">\u00a0 \u00a0 @param specialBuilders: Sequence in the form of the 'specialBuilders'</span></td></tr><tr><th id=\"L721\"><a href=\"#L721\">721</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 top-level variable as defined in this module.</span></td></tr><tr><th id=\"L722\"><a href=\"#L722\">722</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Indicates what commands require a special</span></td></tr><tr><th id=\"L723\"><a href=\"#L723\">723</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Builder class.</span></td></tr><tr><th id=\"L724\"><a href=\"#L724\">724</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L725\"><a href=\"#L725\">725</a></th><td><span class=\"sd\">\u00a0 \u00a0 @return: C{list} of 2-tuples of the form (cmd_name, error) indicating</span></td></tr><tr><th id=\"L726\"><a href=\"#L726\">726</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0commands that we skipped building completions for. cmd_name</span></td></tr><tr><th id=\"L727\"><a href=\"#L727\">727</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0is the name of the skipped command, and error is the Exception</span></td></tr><tr><th id=\"L728\"><a href=\"#L728\">728</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0that was raised when trying to import the script module.</span></td></tr><tr><th id=\"L729\"><a href=\"#L729\">729</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Commands are usually skipped due to a missing dependency,</span></td></tr><tr><th id=\"L730\"><a href=\"#L730\">730</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0e.g. Tkinter.</span></td></tr><tr><th id=\"L731\"><a href=\"#L731\">731</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L732\"><a href=\"#L732\">732</a></th><td>\u00a0 \u00a0 skips <span class=\"o\">=</span>\u00a0<span class=\"p\">[]</span></td></tr><tr><th id=\"L733\"><a href=\"#L733\">733</a></th><td>\u00a0 \u00a0 <span class=\"k\">for</span>\u00a0cmd_name<span class=\"p\">,</span>\u00a0module_name<span class=\"p\">,</span>\u00a0class_name <span class=\"ow\">in</span>\u00a0generateFor<span class=\"p\">:</span></td></tr><tr><th id=\"L734\"><a href=\"#L734\">734</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0module_name <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L735\"><a href=\"#L735\">735</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># create empty file</span></td></tr><tr><th id=\"L736\"><a href=\"#L736\">736</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 f <span class=\"o\">=</span>\u00a0_openCmdFile<span class=\"p\">(</span>out_path<span class=\"p\">,</span>\u00a0cmd_name<span class=\"p\">)</span></td></tr><tr><th id=\"L737\"><a href=\"#L737\">737</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 f<span class=\"o\">.</span>close<span class=\"p\">()</span></td></tr><tr><th id=\"L738\"><a href=\"#L738\">738</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">continue</span></td></tr><tr><th id=\"L739\"><a href=\"#L739\">739</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L740\"><a href=\"#L740\">740</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 m <span class=\"o\">=</span>\u00a0<span class=\"nb\">__import__</span><span class=\"p\">(</span><span class=\"s\">'</span><span class=\"si\">%s</span><span class=\"s\">'</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span>module_name<span class=\"p\">,),</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">,</span>\u00a0<span class=\"p\">(</span>class_name<span class=\"p\">))</span></td></tr><tr><th id=\"L741\"><a href=\"#L741\">741</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 f <span class=\"o\">=</span>\u00a0_openCmdFile<span class=\"p\">(</span>out_path<span class=\"p\">,</span>\u00a0cmd_name<span class=\"p\">)</span></td></tr><tr><th id=\"L742\"><a href=\"#L742\">742</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 o <span class=\"o\">=</span>\u00a0<span class=\"nb\">getattr</span><span class=\"p\">(</span>m<span class=\"p\">,</span>\u00a0class_name<span class=\"p\">)()</span>\u00a0<span class=\"c\"># instantiate Options class</span></td></tr><tr><th id=\"L743\"><a href=\"#L743\">743</a></th><td></td></tr><tr><th id=\"L744\"><a href=\"#L744\">744</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0cmd_name <span class=\"ow\">in</span>\u00a0specialBuilders<span class=\"p\">:</span></td></tr><tr><th id=\"L745\"><a href=\"#L745\">745</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 b <span class=\"o\">=</span>\u00a0specialBuilders<span class=\"p\">[</span>cmd_name<span class=\"p\">](</span>cmd_name<span class=\"p\">,</span>\u00a0o<span class=\"p\">,</span>\u00a0f<span class=\"p\">)</span></td></tr><tr><th id=\"L746\"><a href=\"#L746\">746</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 b<span class=\"o\">.</span>write<span class=\"p\">()</span></td></tr><tr><th id=\"L747\"><a href=\"#L747\">747</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L748\"><a href=\"#L748\">748</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 b <span class=\"o\">=</span>\u00a0Builder<span class=\"p\">(</span>cmd_name<span class=\"p\">,</span>\u00a0o<span class=\"p\">,</span>\u00a0f<span class=\"p\">)</span></td></tr><tr><th id=\"L749\"><a href=\"#L749\">749</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 b<span class=\"o\">.</span>write<span class=\"p\">()</span></td></tr><tr><th id=\"L750\"><a href=\"#L750\">750</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">Exception</span><span class=\"p\">,</span>\u00a0e<span class=\"p\">:</span></td></tr><tr><th id=\"L751\"><a href=\"#L751\">751</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 skips<span class=\"o\">.</span>append<span class=\"p\">(</span>\u00a0<span class=\"p\">(</span>cmd_name<span class=\"p\">,</span>\u00a0e<span class=\"p\">)</span>\u00a0<span class=\"p\">)</span></td></tr><tr><th id=\"L752\"><a href=\"#L752\">752</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">continue</span></td></tr><tr><th id=\"L753\"><a href=\"#L753\">753</a></th><td>\u00a0 \u00a0 <span class=\"k\">return</span>\u00a0skips</td></tr><tr><th id=\"L754\"><a href=\"#L754\">754</a></th><td></td></tr><tr><th id=\"L755\"><a href=\"#L755\">755</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">_openCmdFile</span><span class=\"p\">(</span>out_path<span class=\"p\">,</span>\u00a0cmd_name<span class=\"p\">):</span></td></tr><tr><th id=\"L756\"><a href=\"#L756\">756</a></th><td>\u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"nb\">file</span><span class=\"p\">(</span>os<span class=\"o\">.</span>path<span class=\"o\">.</span>join<span class=\"p\">(</span>out_path<span class=\"p\">,</span>\u00a0<span class=\"s\">'_'</span><span class=\"o\">+</span>cmd_name<span class=\"p\">),</span>\u00a0<span class=\"s\">'w'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L757\"><a href=\"#L757\">757</a></th><td></td></tr><tr><th id=\"L758\"><a href=\"#L758\">758</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">run</span><span class=\"p\">():</span></td></tr><tr><th id=\"L759\"><a href=\"#L759\">759</a></th><td>\u00a0 \u00a0 options <span class=\"o\">=</span>\u00a0MyOptions<span class=\"p\">()</span></td></tr><tr><th id=\"L760\"><a href=\"#L760\">760</a></th><td>\u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L761\"><a href=\"#L761\">761</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 options<span class=\"o\">.</span>parseOptions<span class=\"p\">(</span>sys<span class=\"o\">.</span>argv<span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:])</span></td></tr><tr><th id=\"L762\"><a href=\"#L762\">762</a></th><td>\u00a0 \u00a0 <span class=\"k\">except</span>\u00a0usage<span class=\"o\">.</span>UsageError<span class=\"p\">,</span>\u00a0e<span class=\"p\">:</span></td></tr><tr><th id=\"L763\"><a href=\"#L763\">763</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">print</span>\u00a0e</td></tr><tr><th id=\"L764\"><a href=\"#L764\">764</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">print</span>\u00a0options<span class=\"o\">.</span>getUsage<span class=\"p\">()</span></td></tr><tr><th id=\"L765\"><a href=\"#L765\">765</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 sys<span class=\"o\">.</span>exit<span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span></td></tr><tr><th id=\"L766\"><a href=\"#L766\">766</a></th><td></td></tr><tr><th id=\"L767\"><a href=\"#L767\">767</a></th><td>\u00a0 \u00a0 <span class=\"k\">if</span>\u00a0options<span class=\"p\">[</span><span class=\"s\">'install'</span><span class=\"p\">]:</span></td></tr><tr><th id=\"L768\"><a href=\"#L768\">768</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"kn\">import</span>\u00a0<span class=\"nn\">twisted</span></td></tr><tr><th id=\"L769\"><a href=\"#L769\">769</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">dir</span>\u00a0<span class=\"o\">=</span>\u00a0os<span class=\"o\">.</span>path<span class=\"o\">.</span>join<span class=\"p\">(</span>os<span class=\"o\">.</span>path<span class=\"o\">.</span>dirname<span class=\"p\">(</span>twisted<span class=\"o\">.</span>__file__<span class=\"p\">),</span>\u00a0<span class=\"s\">\"python\"</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"zsh\"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L770\"><a href=\"#L770\">770</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 skips <span class=\"o\">=</span>\u00a0makeCompFunctionFiles<span class=\"p\">(</span><span class=\"nb\">dir</span><span class=\"p\">)</span></td></tr><tr><th id=\"L771\"><a href=\"#L771\">771</a></th><td>\u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L772\"><a href=\"#L772\">772</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 skips <span class=\"o\">=</span>\u00a0makeCompFunctionFiles<span class=\"p\">(</span>options<span class=\"p\">[</span><span class=\"s\">'directory'</span><span class=\"p\">])</span></td></tr><tr><th id=\"L773\"><a href=\"#L773\">773</a></th><td></td></tr><tr><th id=\"L774\"><a href=\"#L774\">774</a></th><td>\u00a0 \u00a0 <span class=\"k\">for</span>\u00a0cmd_name<span class=\"p\">,</span>\u00a0error <span class=\"ow\">in</span>\u00a0skips<span class=\"p\">:</span></td></tr><tr><th id=\"L775\"><a href=\"#L775\">775</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 sys<span class=\"o\">.</span>stderr<span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"s\">\"zshcomp: Skipped building for </span><span class=\"si\">%s</span><span class=\"s\">. Script module \"</span>\u00a0\\</td></tr><tr><th id=\"L776\"><a href=\"#L776\">776</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"s\">\"could not be imported:</span><span class=\"se\">\\n</span><span class=\"s\">\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span>cmd_name<span class=\"p\">,))</span></td></tr><tr><th id=\"L777\"><a href=\"#L777\">777</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 sys<span class=\"o\">.</span>stderr<span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span>error<span class=\"p\">)</span><span class=\"o\">+</span><span class=\"s\">'</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L778\"><a href=\"#L778\">778</a></th><td>\u00a0 \u00a0 <span class=\"k\">if</span>\u00a0skips<span class=\"p\">:</span></td></tr><tr><th id=\"L779\"><a href=\"#L779\">779</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 sys<span class=\"o\">.</span>exit<span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span></td></tr><tr><th id=\"L780\"><a href=\"#L780\">780</a></th><td></td></tr><tr><th id=\"L781\"><a href=\"#L781\">781</a></th><td><span class=\"k\">if</span>\u00a0__name__ <span class=\"o\">==</span>\u00a0<span class=\"s\">'__main__'</span><span class=\"p\">:</span></td></tr><tr><th id=\"L782\"><a href=\"#L782\">782</a></th><td>\u00a0 \u00a0 run<span class=\"p\">()</span></td></tr></tbody></table>\n\n      </div>\n      <div id=\"anydiff\">\n        <form action=\"/LUCICodeRepository/nomaticIM/diff\" method=\"get\">\n          <div class=\"buttons\">\n            <input type=\"hidden\" name=\"new_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/zshcomp.py\" />\n            <input type=\"hidden\" name=\"old_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/zshcomp.py\" />\n            <input type=\"hidden\" name=\"new_rev\" />\n            <input type=\"hidden\" name=\"old_rev\" />\n            <input type=\"submit\" value=\"View changes...\" title=\"Select paths and revs for Diff\" />\n          </div>\n        </form>\n      </div>\n      <div id=\"help\"><strong>Note:</strong> See <a href=\"/LUCICodeRepository/nomaticIM/wiki/TracBrowser\">TracBrowser</a>\n        for help on using the repository browser.</div>\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"first\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/zshcomp.py?format=txt\">Plain Text</a>\n        </li><li class=\"last\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/zshcomp.py\">Original Format</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/LUCICodeRepository/nomaticIM/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/LUCICodeRepository/nomaticIM/about\"><strong>Trac 1.0.1</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">All content copyright 2007-2008 by LUCI <br /><a href=\"http://luci.ics.uci.edu/\">http://luci.ics.uci.edu/</a></p>\n    </div>\n\t\t<div id=\"sitefooter\">\n\t\t\t<script src=\"http://www.google-analytics.com/urchin.js\" type=\"text/javascript\">\n\t\t\t</script>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t\t_uacct = \"UA-338915-2\";\n\t\t\t\turchinTracker();\n\t\t\t</script>\n\t\t</div>\n\t</body>\n</html>", "id": 44303.0}