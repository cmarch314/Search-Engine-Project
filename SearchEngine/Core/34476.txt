{"text": "View Javadoc 1 2 Created on Mar 19 2 5 3 4 5 package edu uci isr impromptu pie 6 7 import java io File 8 9 import edu uci isr impromptu pie Configuration 1 import edu uci isr impromptu common Utils 11 12 13 14 Platform utility to copy and open file 15 16 author Jie Ren 17 18 public class Platform 19 2 Cannot use stream to control a single process to perform this rather simple task 21 because we need read the output to know the command is finished 22 but the readLine will block 23 24 25 The name of the underlying OS 26 27 private static String os System getProperty os name 28 29 Is the underlying OS Windows 3 31 private static boolean isWindows os indexOf Win 1 32 33 Is the underlying OS Mac 34 35 private static boolean isMac os indexOf Mac 1 36 37 38 Whether the platform is Mac 39 return true if running on a Mac 4 41 public static boolean isMac 42 return isMac 43 44 45 46 The default drive letter for Windows 47 48 private static String destinationDriveWinDefault I 49 5 The default mount point for Mac 51 52 private static String destinationDriveMacDefault Volumes impromptu 53 54 Get the default drive or mount point 55 return the default drive or mount point 56 57 public static String getDestinationDriveDefault 58 if isWindows 59 return destinationDriveWinDefault 6 else if isMac 61 return destinationDriveMacDefault 62 else 63 return 64 65 66 67 Get the file system prefix for each exported file 68 return the file system prefix 69 7 public static String getDestinationPrefix 71 String prefix Configuration getDestinationDrive 72 if isWindows 73 prefix 74 else if isMac 75 If a file is exposed as mountPoint fileName Mac DavFS has problem 76 writing it Exposing as mountPoint files fileName works 77 prefix edu uci isr impromptu common Configuration FILES PATH 78 return prefix 79 8 81 82 Get the file system prefix for storing persistent files 83 return the file system prefix for the persistent directory 84 85 public static String getPersistentPrefix 86 String prefix persistent 87 if isWindows 88 prefix 89 else if isMac 9 prefix 91 return prefix 92 93 94 95 Copy is an internal command of cmd exe 96 Relying on OS copy s overwriting and name supplying when only a destination directory is given 97 98 private static String copyCommandWin cmd c copy y 99 1 Mac cp command 1 1 1 2 private static String copyCommandMac cp f 1 3 1 4 Copy a file to the Impromptu proxy using OS copy command 1 5 param file the file to import 1 6 return for successful copy 1 for unsuccessful copy 1 7 1 8 public static int importFile File file 1 9 int result 1 11 try 111 if isWindows 112 This position 4 is for Windows 113 copyCommandWin 4 file getPath 114 copyCommandWin 5 getDestinationPrefix 115 result Runtime getRuntime exec copyCommandWin waitFor 116 117 else if isMac 118 copyCommandMac 2 file getPath 119 copyCommandMac 3 getDestinationPrefix 12 result Runtime getRuntime exec copyCommandMac waitFor 121 122 set the last modification date of the newly created file 123 as that of the imported file 124 File newFile new File getDestinationPrefix file getName 125 This trick only works on Windows Mac s webdav driver does not change the timestap 126 newFile setLastModified file lastModified 127 128 catch Exception e 129 Utils handleException e 13 result 1 131 132 return result 133 134 135 136 Whether the current file is newer than the original file 137 param current the current file name 138 param original the original file name 139 return true if newer false otherwise Return true only on Windows since 14 Mac webdav driver does not honor the original setLastModified request in import 141 142 public static boolean isNewer String current String original 143 boolean result false 144 if isWindows 145 File local new File original 146 File repository new File current 147 if repository lastModified local lastModified 148 result true 149 15 return result 151 152 153 154 Export a file from the Impromptu proxy using OS copy command 155 156 param source the source file name to export 157 param destination the destination file name to export 158 return for successful copy 1 for unsuccessful copy 159 16 public static int exportFile String source String destination 161 int result 1 162 try 163 if isWindows 164 copyCommandWin 4 getDestinationPrefix source 165 copyCommandWin 5 destination 166 result Runtime getRuntime exec copyCommandWin waitFor 167 168 else if isMac 169 copyCommandMac 2 getDestinationPrefix source 17 copyCommandMac 3 destination 171 result Runtime getRuntime exec copyCommandMac waitFor 172 173 174 catch Exception e 175 Utils handleException e 176 result 1 177 178 return result 179 18 181 182 Start is also an internal command of cmd exe Relying on Command Extensions 183 184 private static String openCommandWin cmd c start 185 186 Mac open command 187 188 private static String openCommandMac open 189 19 Open a file from the Impromptu proxy using OS open command 191 param fileName the file name to open 192 return for successful open 1 for unsuccessful open 193 194 public static int openFile String fileName 195 int result 1 196 try 197 if isWindows 198 This position 3 is for Windows 199 openCommandWin 3 getDestinationPrefix quoteFileName fileName 2 If we pass the string array to exec then Java will confuse Windows cmd 2 1 probably because of Java s quotation of command and arguments 2 2 So let s give this single string to exec 2 3 String singleOpenCommand cmd c start openCommandWin 3 2 4 This only waits for the cmd exe not the real file processor 2 5 result Runtime getRuntime exec singleOpenCommand waitFor 2 6 2 7 else if isMac 2 8 openCommandMac 1 getDestinationPrefix fileName 2 9 result Runtime getRuntime exec openCommandMac waitFor 21 211 212 catch Exception e 213 Utils handleException e 214 result 1 215 216 return result 217 218 219 22 Quote a file name for cmd c 221 222 param fileName the unquoted file name 223 return the quoted file name 224 225 public static String quoteFileName String fileName 226 StringBuffer sb new StringBuffer 227 Must quote these special characters this way 228 If just use fileName Windows cmd will think it as the window title 229 Refer to cmd 23 for int i i fileName length i 231 char c fileName charAt i 232 switch c 233 case 234 case 235 case 236 case 237 case 238 case 239 case 24 case 241 case 242 case 243 case 244 case 245 case 246 case 247 case 248 case 249 case 25 sb append 251 sb append c 252 sb append 253 break 254 255 default 256 sb append c 257 break 258 259 26 return sb toString 261 262 263 264 Delete is an internal command of cmd exe 265 266 private static String deleteCommandWin cmd c del 267 268 Mac delete command 269 27 private static String deleteCommandMac rm 271 272 Delete a file from the Impromptu proxy using OS delete command 273 param fileName the file name to delete 274 return for successful deletion 1 for unsuccessful deletion 275 276 public static int deleteFile String fileName 277 int result 1 278 try 279 if isWindows 28 This position 3 is for Windows 281 deleteCommandWin 3 getDestinationPrefix fileName 282 result Runtime getRuntime exec deleteCommandWin waitFor 283 284 else if isMac 285 deleteCommandMac 1 getDestinationPrefix fileName 286 result Runtime getRuntime exec deleteCommandMac waitFor 287 288 289 catch Exception e 29 Utils handleException e 291 result 1 292 293 return result 294 295 296 297 net use z http localhost impromptu files user userName password 298 299 private static String mountCommandWin net use user 3 private static String mountCommandMac mountMac 3 1 3 2 Mount the Impromptu proxy as a drive for later access 3 3 param userName the name used to mount this drive 3 4 param password the password used to mount the drive 3 5 return for successful mount 1 for unsuccessful mount 3 6 3 7 public static int mountDrive String userName String password 3 8 int result 1 3 9 try 31 if isWindows 311 mountCommandWin 2 Configuration getDestinationDrive 312 mountCommandWin 3 Configuration getImpromptuProxy edu uci isr impromptu common Configuration FILES PATH 313 mountCommandWin 4 user userName 314 mountCommandWin 5 password 315 String singleMountCommandWin 316 for int i i mountCommandWin length i 317 singleMountCommandWin mountCommandWin i 318 if i mountCommandWin length 1 319 singleMountCommandWin 32 321 for int i i 3 result i 322 retry three times sicne Windows Redirector is not perfectly reliable 323 result Runtime getRuntime exec mountCommandWin waitFor 324 Use the single string version since the user name might confuse Java 325 result Runtime getRuntime exec singleMountCommandWin waitFor 326 if result 327 try 328 http support microsoft com default aspx scid kb en us 832161 329 Sleep for 3 seconds since by default the bad 33 entry stays in the list for 6 seconds and we 331 change it to 1 second Still this does not garantee success 332 But an external net use is much faster before success 333 Thread sleep 2 334 335 catch InterruptedException ie 336 337 338 339 34 else if isMac 341 mountCommandMac 1 Configuration getDestinationDrive 342 On Mac slide must be mounted from the root not at files 343 so the file system driver write can succeed 344 mountCommandMac 2 Configuration getImpromptuProxy 345 mountCommandMac 3 userName 346 mountCommandMac 4 password 347 result Runtime getRuntime exec mountCommandMac waitFor 348 349 35 catch Exception e 351 Utils handleException e 352 result 1 353 354 return result 355 356 357 private static String unmountCommandWin net use delete 358 private static String unmountCommandMac umount 359 36 Unmount the Impromptu proxy drive 361 return for successful unmount 1 for unsuccessful unmount 362 363 public static int unmountDrive 364 int result 1 365 try 366 if isWindows 367 unmountCommandWin 2 Configuration getDestinationDrive 368 result Runtime getRuntime exec unmountCommandWin waitFor 369 37 else if isMac 371 unmountCommandMac 1 Configuration getDestinationDrive 372 result Runtime getRuntime exec unmountCommandMac waitFor 373 374 375 catch Exception e 376 Utils handleException e 377 result 1 378 379 return result 38 381 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.30/xref/edu/uci/isr/impromptu/pie/Platform.html", "title": "platform xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>Platform xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../../../../stylesheet.css\" />\n</head>\n<body>\n<div id=\"overview\"><a href=\"../../../../../../apidocs/edu/uci/isr/impromptu/pie/Platform.html\">View Javadoc</a></div><pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <em class=\"comment\">/*</em>\n<a name=\"2\" href=\"#2\">2</a>   <em class=\"comment\"> * Created on Mar 19, 2005</em>\n<a name=\"3\" href=\"#3\">3</a>   <em class=\"comment\"> *</em>\n<a name=\"4\" href=\"#4\">4</a>   <em class=\"comment\"> */</em>\n<a name=\"5\" href=\"#5\">5</a>   <strong>package</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pie/package-summary.html\">edu.uci.isr.impromptu.pie</a>;\n<a name=\"6\" href=\"#6\">6</a>   \n<a name=\"7\" href=\"#7\">7</a>   <strong>import</strong> java.io.File;\n<a name=\"8\" href=\"#8\">8</a>   \n<a name=\"9\" href=\"#9\">9</a>   <strong>import</strong> edu.uci.isr.impromptu.pie.Configuration;\n<a name=\"10\" href=\"#10\">10</a>  <strong>import</strong> edu.uci.isr.impromptu.common.Utils;\n<a name=\"11\" href=\"#11\">11</a>  \n<a name=\"12\" href=\"#12\">12</a>  \n<a name=\"13\" href=\"#13\">13</a>  <em>/**<em>*</em></em>\n<a name=\"14\" href=\"#14\">14</a>  <em> * Platform utility to copy and open file</em>\n<a name=\"15\" href=\"#15\">15</a>  <em> * </em>\n<a name=\"16\" href=\"#16\">16</a>  <em> * @author Jie Ren</em>\n<a name=\"17\" href=\"#17\">17</a>  <em> */</em>\n<a name=\"18\" href=\"#18\">18</a>  <strong>public</strong> <strong>class</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pie/Platform.html\">Platform</a> {\n<a name=\"19\" href=\"#19\">19</a>      <em class=\"comment\">/*</em>\n<a name=\"20\" href=\"#20\">20</a>  <em class=\"comment\">     * Cannot use stream to control a single process to perform this rather simple task, </em>\n<a name=\"21\" href=\"#21\">21</a>  <em class=\"comment\">     * because we need read the output to know the command is finished, </em>\n<a name=\"22\" href=\"#22\">22</a>  <em class=\"comment\">     * but the readLine will block.</em>\n<a name=\"23\" href=\"#23\">23</a>  <em class=\"comment\">     */</em> \n<a name=\"24\" href=\"#24\">24</a>      <em>/**<em>*</em></em>\n<a name=\"25\" href=\"#25\">25</a>  <em>     * The name of the underlying OS</em>\n<a name=\"26\" href=\"#26\">26</a>  <em>     */</em>\n<a name=\"27\" href=\"#27\">27</a>      <strong>private</strong> <strong>static</strong> String\t\tos = System.getProperty(<span class=\"string\">\"os.name\"</span>);\n<a name=\"28\" href=\"#28\">28</a>      <em>/**<em>*</em></em>\n<a name=\"29\" href=\"#29\">29</a>  <em>     * Is the underlying OS Windows?</em>\n<a name=\"30\" href=\"#30\">30</a>  <em>     */</em>\n<a name=\"31\" href=\"#31\">31</a>      <strong>private</strong> <strong>static</strong> <strong>boolean</strong>\t\tisWindows = os.indexOf(<span class=\"string\">\"Win\"</span>) != -1;\n<a name=\"32\" href=\"#32\">32</a>      <em>/**<em>*</em></em>\n<a name=\"33\" href=\"#33\">33</a>  <em>     * Is the underlying OS Mac?</em>\n<a name=\"34\" href=\"#34\">34</a>  <em>     */</em>\n<a name=\"35\" href=\"#35\">35</a>      <strong>private</strong> <strong>static</strong> <strong>boolean</strong> \t\tisMac = os.indexOf(<span class=\"string\">\"Mac\"</span>) != -1;\n<a name=\"36\" href=\"#36\">36</a>      \n<a name=\"37\" href=\"#37\">37</a>      <em>/**<em>*</em></em>\n<a name=\"38\" href=\"#38\">38</a>  <em>     * Whether the platform is Mac</em>\n<a name=\"39\" href=\"#39\">39</a>  <em>     * @return true if running on a Mac</em>\n<a name=\"40\" href=\"#40\">40</a>  <em>     */</em>\n<a name=\"41\" href=\"#41\">41</a>      <strong>public</strong> <strong>static</strong> <strong>boolean</strong> isMac() {\n<a name=\"42\" href=\"#42\">42</a>          <strong>return</strong> isMac;\n<a name=\"43\" href=\"#43\">43</a>      }\n<a name=\"44\" href=\"#44\">44</a>  \n<a name=\"45\" href=\"#45\">45</a>      <em>/**<em>*</em></em>\n<a name=\"46\" href=\"#46\">46</a>  <em>     * The default drive letter for Windows</em>\n<a name=\"47\" href=\"#47\">47</a>  <em>     */</em>\n<a name=\"48\" href=\"#48\">48</a>      <strong>private</strong> <strong>static</strong> String\tdestinationDriveWinDefault = <span class=\"string\">\"I:\"</span>;\n<a name=\"49\" href=\"#49\">49</a>      <em>/**<em>*</em></em>\n<a name=\"50\" href=\"#50\">50</a>  <em>     * The default mount point for Mac</em>\n<a name=\"51\" href=\"#51\">51</a>  <em>     */</em>\n<a name=\"52\" href=\"#52\">52</a>      <strong>private</strong> <strong>static</strong> String\tdestinationDriveMacDefault = <span class=\"string\">\"/Volumes/impromptu\"</span>;\n<a name=\"53\" href=\"#53\">53</a>      <em>/**<em>*</em></em>\n<a name=\"54\" href=\"#54\">54</a>  <em>     * Get the default drive or mount point</em>\n<a name=\"55\" href=\"#55\">55</a>  <em>     * @return the default drive or mount point</em>\n<a name=\"56\" href=\"#56\">56</a>  <em>     */</em>\n<a name=\"57\" href=\"#57\">57</a>      <strong>public</strong> <strong>static</strong> String getDestinationDriveDefault() {\n<a name=\"58\" href=\"#58\">58</a>          <strong>if</strong> (isWindows)\n<a name=\"59\" href=\"#59\">59</a>              <strong>return</strong> destinationDriveWinDefault;\n<a name=\"60\" href=\"#60\">60</a>          <strong>else</strong> <strong>if</strong> (isMac)\n<a name=\"61\" href=\"#61\">61</a>              <strong>return</strong> destinationDriveMacDefault;\n<a name=\"62\" href=\"#62\">62</a>          <strong>else</strong>\n<a name=\"63\" href=\"#63\">63</a>              <strong>return</strong> <span class=\"string\">\"\"</span>;\n<a name=\"64\" href=\"#64\">64</a>      }\n<a name=\"65\" href=\"#65\">65</a>  \n<a name=\"66\" href=\"#66\">66</a>      <em>/**<em>*</em></em>\n<a name=\"67\" href=\"#67\">67</a>  <em>     * Get the file system prefix for each exported file </em>\n<a name=\"68\" href=\"#68\">68</a>  <em>     * @return the file system prefix</em>\n<a name=\"69\" href=\"#69\">69</a>  <em>     */</em>\n<a name=\"70\" href=\"#70\">70</a>      <strong>public</strong> <strong>static</strong> String getDestinationPrefix() {\n<a name=\"71\" href=\"#71\">71</a>          String\t\tprefix = Configuration.getDestinationDrive();\n<a name=\"72\" href=\"#72\">72</a>          <strong>if</strong> (isWindows)\n<a name=\"73\" href=\"#73\">73</a>              prefix += <span class=\"string\">\"&#47;&#47;\"</span>;\n<a name=\"74\" href=\"#74\">74</a>          <strong>else</strong> <strong>if</strong> (isMac)\n<a name=\"75\" href=\"#75\">75</a>              <em class=\"comment\">// If a file is exposed as /mountPoint/fileName, Mac DavFS has problem </em>\n<a name=\"76\" href=\"#76\">76</a>              <em class=\"comment\">//\t\twriting it. Exposing as /mountPoint/files/fileName works.</em>\n<a name=\"77\" href=\"#77\">77</a>              prefix += (edu.uci.isr.impromptu.common.Configuration.FILES_PATH + <span class=\"string\">\"/\"</span>);\n<a name=\"78\" href=\"#78\">78</a>          <strong>return</strong> prefix;\n<a name=\"79\" href=\"#79\">79</a>      }\n<a name=\"80\" href=\"#80\">80</a>      \n<a name=\"81\" href=\"#81\">81</a>      <em>/**<em>*</em></em>\n<a name=\"82\" href=\"#82\">82</a>  <em>     * Get the file system prefix for storing persistent files </em>\n<a name=\"83\" href=\"#83\">83</a>  <em>     * @return the file system prefix for the persistent directory</em>\n<a name=\"84\" href=\"#84\">84</a>  <em>     */</em>\n<a name=\"85\" href=\"#85\">85</a>      <strong>public</strong> <strong>static</strong> String getPersistentPrefix() {\n<a name=\"86\" href=\"#86\">86</a>          String\t\tprefix = <span class=\"string\">\"persistent\"</span>;\n<a name=\"87\" href=\"#87\">87</a>          <strong>if</strong> (isWindows)\n<a name=\"88\" href=\"#88\">88</a>              prefix += <span class=\"string\">\"&#47;&#47;\"</span>;\n<a name=\"89\" href=\"#89\">89</a>          <strong>else</strong> <strong>if</strong> (isMac)\n<a name=\"90\" href=\"#90\">90</a>              prefix += <span class=\"string\">\"/\"</span>;\n<a name=\"91\" href=\"#91\">91</a>          <strong>return</strong> prefix;\n<a name=\"92\" href=\"#92\">92</a>      }\n<a name=\"93\" href=\"#93\">93</a>      \n<a name=\"94\" href=\"#94\">94</a>      <em>/**<em>*</em></em>\n<a name=\"95\" href=\"#95\">95</a>  <em>     * Copy is an internal command of cmd.exe. </em>\n<a name=\"96\" href=\"#96\">96</a>  <em>     * Relying on OS copy's overwriting and name supplying when only a destination directory is given</em>\n<a name=\"97\" href=\"#97\">97</a>  <em>     */</em>\n<a name=\"98\" href=\"#98\">98</a>      <strong>private</strong> <strong>static</strong> String  \tcopyCommandWin[] = {<span class=\"string\">\"cmd\"</span>, <span class=\"string\">\"/c\"</span>, <span class=\"string\">\"copy\"</span>, <span class=\"string\">\"/y\"</span>, <span class=\"string\">\"\"</span>, <span class=\"string\">\"\"</span>};\n<a name=\"99\" href=\"#99\">99</a>      <em>/**<em>*</em></em>\n<a name=\"100\" href=\"#100\">100</a> <em>     * Mac cp command</em>\n<a name=\"101\" href=\"#101\">101</a> <em>     */</em>\n<a name=\"102\" href=\"#102\">102</a>     <strong>private</strong> <strong>static</strong> String\tcopyCommandMac[] = {<span class=\"string\">\"cp\"</span>, <span class=\"string\">\"-f\"</span>, <span class=\"string\">\"\"</span>, <span class=\"string\">\"\"</span>};\n<a name=\"103\" href=\"#103\">103</a>     <em>/**<em>*</em></em>\n<a name=\"104\" href=\"#104\">104</a> <em>     * Copy a file to the Impromptu proxy, using OS copy command</em>\n<a name=\"105\" href=\"#105\">105</a> <em>     * @param file\tthe file to import</em>\n<a name=\"106\" href=\"#106\">106</a> <em>     * @return 0 for successful copy, -1 for unsuccessful copy</em>\n<a name=\"107\" href=\"#107\">107</a> <em>     */</em>\n<a name=\"108\" href=\"#108\">108</a>     <strong>public</strong> <strong>static</strong> <strong>int</strong> importFile(File file) {\n<a name=\"109\" href=\"#109\">109</a>         <strong>int</strong>\t\t\tresult = -1;\t\t\n<a name=\"110\" href=\"#110\">110</a>         <strong>try</strong> {\n<a name=\"111\" href=\"#111\">111</a>             <strong>if</strong> (isWindows) {\n<a name=\"112\" href=\"#112\">112</a> \t            <em class=\"comment\">// This position, 4, is for Windows</em>\n<a name=\"113\" href=\"#113\">113</a> \t            copyCommandWin[4] = <span class=\"string\">\"\\&quot;\"</span> + file.getPath() + <span class=\"string\">\"\\&quot;\"</span>;\n<a name=\"114\" href=\"#114\">114</a> \t            copyCommandWin[5] = getDestinationPrefix();\n<a name=\"115\" href=\"#115\">115</a> \t\t\t\tresult =  Runtime.getRuntime().exec(copyCommandWin).waitFor();\n<a name=\"116\" href=\"#116\">116</a>             }\n<a name=\"117\" href=\"#117\">117</a>             <strong>else</strong> <strong>if</strong> (isMac) {\n<a name=\"118\" href=\"#118\">118</a>                 copyCommandMac[2] = file.getPath();  \n<a name=\"119\" href=\"#119\">119</a>                 copyCommandMac[3] = getDestinationPrefix();\n<a name=\"120\" href=\"#120\">120</a>                 result =  Runtime.getRuntime().exec(copyCommandMac).waitFor();\n<a name=\"121\" href=\"#121\">121</a>             }\n<a name=\"122\" href=\"#122\">122</a>             <em class=\"comment\">// set the last modification date of the newly created file </em>\n<a name=\"123\" href=\"#123\">123</a>             <em class=\"comment\">//\tas that of the imported file</em>\n<a name=\"124\" href=\"#124\">124</a>             File\t<strong>new</strong>File = <strong>new</strong> File(getDestinationPrefix() + file.getName());\n<a name=\"125\" href=\"#125\">125</a>             <em class=\"comment\">// This trick only works on Windows. Mac's webdav driver does not change the timestap.</em>\n<a name=\"126\" href=\"#126\">126</a>             newFile.setLastModified(file.lastModified());\n<a name=\"127\" href=\"#127\">127</a>         }\n<a name=\"128\" href=\"#128\">128</a>         <strong>catch</strong> (Exception e) {\n<a name=\"129\" href=\"#129\">129</a>             Utils.handleException(e);\n<a name=\"130\" href=\"#130\">130</a>             result = -1;\n<a name=\"131\" href=\"#131\">131</a>         }\n<a name=\"132\" href=\"#132\">132</a> \t\t<strong>return</strong> result; \n<a name=\"133\" href=\"#133\">133</a>     }\n<a name=\"134\" href=\"#134\">134</a> \n<a name=\"135\" href=\"#135\">135</a>     <em>/**<em>*</em></em>\n<a name=\"136\" href=\"#136\">136</a> <em>     * Whether the current file is newer than the original file</em>\n<a name=\"137\" href=\"#137\">137</a> <em>     * @param current\tthe current file name</em>\n<a name=\"138\" href=\"#138\">138</a> <em>     * @param original\tthe original file name</em>\n<a name=\"139\" href=\"#139\">139</a> <em>     * @return true if newer, false otherwise. Return true only on Windows, since</em>\n<a name=\"140\" href=\"#140\">140</a> <em>     * Mac webdav driver does not honor the original setLastModified request in import  </em>\n<a name=\"141\" href=\"#141\">141</a> <em>     */</em>\n<a name=\"142\" href=\"#142\">142</a>     <strong>public</strong> <strong>static</strong> <strong>boolean</strong> isNewer(String current, String original) {\n<a name=\"143\" href=\"#143\">143</a>         <strong>boolean</strong> result = false;\n<a name=\"144\" href=\"#144\">144</a>         <strong>if</strong> (isWindows) {\n<a name=\"145\" href=\"#145\">145</a> \t        File\tlocal = <strong>new</strong> File(original);\n<a name=\"146\" href=\"#146\">146</a> \t        File\trepository = <strong>new</strong> File(current);\n<a name=\"147\" href=\"#147\">147</a> \t        <strong>if</strong> (repository.lastMod<strong>if</strong>ied()>local.lastMod<strong>if</strong>ied())\n<a name=\"148\" href=\"#148\">148</a> \t            result = <strong>true</strong>;\n<a name=\"149\" href=\"#149\">149</a>         }\n<a name=\"150\" href=\"#150\">150</a>         <strong>return</strong> result;\n<a name=\"151\" href=\"#151\">151</a>     }\n<a name=\"152\" href=\"#152\">152</a>     \n<a name=\"153\" href=\"#153\">153</a>     <em>/**<em>*</em></em>\n<a name=\"154\" href=\"#154\">154</a> <em>     * Export a file from the Impromptu proxy, using OS copy command</em>\n<a name=\"155\" href=\"#155\">155</a> <em>     * </em>\n<a name=\"156\" href=\"#156\">156</a> <em>     * @param source\t\tthe source file name to export</em>\n<a name=\"157\" href=\"#157\">157</a> <em>     * @param destination\tthe destination file name to export</em>\n<a name=\"158\" href=\"#158\">158</a> <em>     * @return 0 for successful copy, -1 for unsuccessful copy</em>\n<a name=\"159\" href=\"#159\">159</a> <em>     */</em>\n<a name=\"160\" href=\"#160\">160</a>     <strong>public</strong> <strong>static</strong> <strong>int</strong> exportFile(String source, String destination) {\n<a name=\"161\" href=\"#161\">161</a>         <strong>int</strong>\t\t\tresult = -1;\t\t\n<a name=\"162\" href=\"#162\">162</a>         <strong>try</strong> {\n<a name=\"163\" href=\"#163\">163</a>             <strong>if</strong> (isWindows) {\n<a name=\"164\" href=\"#164\">164</a> \t            copyCommandWin[4] = <span class=\"string\">\"\\&quot;\"</span> + getDestinationPrefix() + source + <span class=\"string\">\"\\&quot;\"</span>;\n<a name=\"165\" href=\"#165\">165</a> \t            copyCommandWin[5] = destination;\n<a name=\"166\" href=\"#166\">166</a> \t\t\t\tresult =  Runtime.getRuntime().exec(copyCommandWin).waitFor();\n<a name=\"167\" href=\"#167\">167</a>             }\n<a name=\"168\" href=\"#168\">168</a>             <strong>else</strong> <strong>if</strong> (isMac) {\n<a name=\"169\" href=\"#169\">169</a>                 copyCommandMac[2] = getDestinationPrefix() + source;  \n<a name=\"170\" href=\"#170\">170</a>                 copyCommandMac[3] = destination;\n<a name=\"171\" href=\"#171\">171</a>                 result =  Runtime.getRuntime().exec(copyCommandMac).waitFor();\n<a name=\"172\" href=\"#172\">172</a>             }\n<a name=\"173\" href=\"#173\">173</a>         }\n<a name=\"174\" href=\"#174\">174</a>         <strong>catch</strong> (Exception e) {\n<a name=\"175\" href=\"#175\">175</a>             Utils.handleException(e);\n<a name=\"176\" href=\"#176\">176</a>             result = -1;\n<a name=\"177\" href=\"#177\">177</a>         }\n<a name=\"178\" href=\"#178\">178</a> \t\t<strong>return</strong> result; \n<a name=\"179\" href=\"#179\">179</a>     }\n<a name=\"180\" href=\"#180\">180</a>     \n<a name=\"181\" href=\"#181\">181</a>     <em>/**<em>*</em></em>\n<a name=\"182\" href=\"#182\">182</a> <em>     * Start is also an internal command of cmd.exe. Relying on Command Extensions. </em>\n<a name=\"183\" href=\"#183\">183</a> <em>     */</em>\n<a name=\"184\" href=\"#184\">184</a>     <strong>private</strong> <strong>static</strong> String\topenCommandWin[] = {<span class=\"string\">\"cmd\"</span>, <span class=\"string\">\"/c\"</span>, <span class=\"string\">\"start\"</span>, <span class=\"string\">\"\"</span>};\n<a name=\"185\" href=\"#185\">185</a>     <em>/**<em>*</em></em>\n<a name=\"186\" href=\"#186\">186</a> <em>     * Mac open command </em>\n<a name=\"187\" href=\"#187\">187</a> <em>     */</em>\n<a name=\"188\" href=\"#188\">188</a>     <strong>private</strong> <strong>static</strong> String    openCommandMac[] = {<span class=\"string\">\"open\"</span>, <span class=\"string\">\"\"</span>};\n<a name=\"189\" href=\"#189\">189</a>     <em>/**<em>*</em></em>\n<a name=\"190\" href=\"#190\">190</a> <em>     * Open a file from the Impromptu proxy, using OS open command</em>\n<a name=\"191\" href=\"#191\">191</a> <em>     * @param fileName the file name to open</em>\n<a name=\"192\" href=\"#192\">192</a> <em>     * @return 0 for successful open, -1 for unsuccessful open</em>\n<a name=\"193\" href=\"#193\">193</a> <em>     */</em>\n<a name=\"194\" href=\"#194\">194</a>     <strong>public</strong> <strong>static</strong> <strong>int</strong> openFile(String fileName) {\n<a name=\"195\" href=\"#195\">195</a>         <strong>int</strong>\t\t\tresult = -1;\t\t\n<a name=\"196\" href=\"#196\">196</a>         <strong>try</strong> {\n<a name=\"197\" href=\"#197\">197</a>             <strong>if</strong> (isWindows) {\n<a name=\"198\" href=\"#198\">198</a> \t            <em class=\"comment\">// This position, 3, is for Windows</em>\n<a name=\"199\" href=\"#199\">199</a> \t            openCommandWin[3] = getDestinationPrefix() + quoteFileName(fileName);\n<a name=\"200\" href=\"#200\">200</a> \t            <em class=\"comment\">// If we pass the string array to exec, then Java will confuse Windows' cmd</em>\n<a name=\"201\" href=\"#201\">201</a> \t            <em class=\"comment\">// \t\tprobably because of Java's quotation of command and arguments</em>\n<a name=\"202\" href=\"#202\">202</a> \t            <em class=\"comment\">// So let's give this single string to exec  </em>\n<a name=\"203\" href=\"#203\">203</a> \t            String singleOpenCommand = <span class=\"string\">\"cmd /c start \"</span> + openCommandWin[3];\n<a name=\"204\" href=\"#204\">204</a> \t            <em class=\"comment\">// This only waits for the cmd.exe, not the real file processor</em>\n<a name=\"205\" href=\"#205\">205</a> \t\t\t\tresult = Runtime.getRuntime().exec(singleOpenCommand).waitFor();\n<a name=\"206\" href=\"#206\">206</a>             } \n<a name=\"207\" href=\"#207\">207</a>             <strong>else</strong> <strong>if</strong> (isMac) {\n<a name=\"208\" href=\"#208\">208</a>                 openCommandMac[1] = getDestinationPrefix() + fileName;  \n<a name=\"209\" href=\"#209\">209</a> \t\t\t\tresult =  Runtime.getRuntime().exec(openCommandMac).waitFor();\n<a name=\"210\" href=\"#210\">210</a>             }\n<a name=\"211\" href=\"#211\">211</a>         }\n<a name=\"212\" href=\"#212\">212</a>         <strong>catch</strong> (Exception e) {\n<a name=\"213\" href=\"#213\">213</a>             Utils.handleException(e);\n<a name=\"214\" href=\"#214\">214</a>             result = -1;\n<a name=\"215\" href=\"#215\">215</a>         }\n<a name=\"216\" href=\"#216\">216</a>         <strong>return</strong> result;\n<a name=\"217\" href=\"#217\">217</a>     }\n<a name=\"218\" href=\"#218\">218</a> \n<a name=\"219\" href=\"#219\">219</a>     <em>/**<em>*</em></em>\n<a name=\"220\" href=\"#220\">220</a> <em>     * Quote a file name for cmd /c</em>\n<a name=\"221\" href=\"#221\">221</a> <em>     * </em>\n<a name=\"222\" href=\"#222\">222</a> <em>     * @param fileName the unquoted file name</em>\n<a name=\"223\" href=\"#223\">223</a> <em>     * @return the quoted file name</em>\n<a name=\"224\" href=\"#224\">224</a> <em>     */</em>\n<a name=\"225\" href=\"#225\">225</a>     <strong>public</strong> <strong>static</strong> String quoteFileName(String fileName) {\n<a name=\"226\" href=\"#226\">226</a>         StringBuffer\tsb = <strong>new</strong> StringBuffer();\n<a name=\"227\" href=\"#227\">227</a>         <em class=\"comment\">// Must quote these special characters  this way</em>\n<a name=\"228\" href=\"#228\">228</a>         <em class=\"comment\">// If just use \"fileName\", Windows cmd will think it as the window title</em>\n<a name=\"229\" href=\"#229\">229</a>         <em class=\"comment\">// Refer to \"cmd /?\"</em>\n<a name=\"230\" href=\"#230\">230</a>         <strong>for</strong> (<strong>int</strong> i = 0; i&lt;fileName.length(); i++) {\n<a name=\"231\" href=\"#231\">231</a>             <strong>char</strong>\tc = fileName.<strong>char</strong>At(i);\n<a name=\"232\" href=\"#232\">232</a>             <strong>switch</strong> (c) {\n<a name=\"233\" href=\"#233\">233</a>             \t<strong>case</strong>  '&amp;':\n<a name=\"234\" href=\"#234\">234</a>             \t<strong>case</strong>  '(':\n<a name=\"235\" href=\"#235\">235</a>             \t<strong>case</strong>  ')':\n<a name=\"236\" href=\"#236\">236</a>             \t<strong>case</strong>  '[':\n<a name=\"237\" href=\"#237\">237</a>             \t<strong>case</strong>  ']':\n<a name=\"238\" href=\"#238\">238</a>             \t<strong>case</strong>  '{':\n<a name=\"239\" href=\"#239\">239</a>             \t<strong>case</strong>  '}':\n<a name=\"240\" href=\"#240\">240</a>             \t<strong>case</strong>  '^':\n<a name=\"241\" href=\"#241\">241</a>             \t<strong>case</strong>  '=':\n<a name=\"242\" href=\"#242\">242</a>             \t<strong>case</strong>  ';':\n<a name=\"243\" href=\"#243\">243</a>             \t<strong>case</strong>  '!':\n<a name=\"244\" href=\"#244\">244</a>             \t<strong>case</strong>  '\\'':\n<a name=\"245\" href=\"#245\">245</a>             \t<strong>case</strong>  '+':\n<a name=\"246\" href=\"#246\">246</a>             \t<strong>case</strong>  ',':\n<a name=\"247\" href=\"#247\">247</a>             \t<strong>case</strong>  '`':\n<a name=\"248\" href=\"#248\">248</a>             \t<strong>case</strong>  '~':\n<a name=\"249\" href=\"#249\">249</a>             \t<strong>case</strong>  ' ':\n<a name=\"250\" href=\"#250\">250</a>             \t    sb.append('&quot;');\n<a name=\"251\" href=\"#251\">251</a>             \t    sb.append(c);\n<a name=\"252\" href=\"#252\">252</a>             \t    sb.append('&quot;');\n<a name=\"253\" href=\"#253\">253</a>             \t    <strong>break</strong>;\n<a name=\"254\" href=\"#254\">254</a>             \t    \n<a name=\"255\" href=\"#255\">255</a>             \t<strong>default</strong>:\n<a name=\"256\" href=\"#256\">256</a>             \t    sb.append(c);\n<a name=\"257\" href=\"#257\">257</a>             \t\t<strong>break</strong>;\n<a name=\"258\" href=\"#258\">258</a>             }\n<a name=\"259\" href=\"#259\">259</a>         }\n<a name=\"260\" href=\"#260\">260</a>         <strong>return</strong> sb.toString();\n<a name=\"261\" href=\"#261\">261</a>     }\n<a name=\"262\" href=\"#262\">262</a> \n<a name=\"263\" href=\"#263\">263</a>     <em>/**<em>*</em></em>\n<a name=\"264\" href=\"#264\">264</a> <em>     * Delete is an internal command of cmd.exe. </em>\n<a name=\"265\" href=\"#265\">265</a> <em>     */</em>\n<a name=\"266\" href=\"#266\">266</a>     <strong>private</strong> <strong>static</strong> String  \tdeleteCommandWin[] = {<span class=\"string\">\"cmd\"</span>, <span class=\"string\">\"/c\"</span>, <span class=\"string\">\"del\"</span>, <span class=\"string\">\"\"</span>};\n<a name=\"267\" href=\"#267\">267</a>     <em>/**<em>*</em></em>\n<a name=\"268\" href=\"#268\">268</a> <em>     * Mac delete command </em>\n<a name=\"269\" href=\"#269\">269</a> <em>     */</em>\n<a name=\"270\" href=\"#270\">270</a>     <strong>private</strong> <strong>static</strong> String    deleteCommandMac[] = {<span class=\"string\">\"rm\"</span>, <span class=\"string\">\"\"</span>};\n<a name=\"271\" href=\"#271\">271</a>     <em>/**<em>*</em></em>\n<a name=\"272\" href=\"#272\">272</a> <em>     * Delete a file from the Impromptu proxy, using OS delete command</em>\n<a name=\"273\" href=\"#273\">273</a> <em>     * @param fileName the file name to delete</em>\n<a name=\"274\" href=\"#274\">274</a> <em>     * @return 0 for successful deletion, -1 for unsuccessful deletion</em>\n<a name=\"275\" href=\"#275\">275</a> <em>     */</em>\n<a name=\"276\" href=\"#276\">276</a>     <strong>public</strong> <strong>static</strong> <strong>int</strong> deleteFile(String fileName) {\n<a name=\"277\" href=\"#277\">277</a>         <strong>int</strong>\t\t\tresult = -1;\t\t\n<a name=\"278\" href=\"#278\">278</a>         <strong>try</strong> {\n<a name=\"279\" href=\"#279\">279</a>             <strong>if</strong> (isWindows) {\n<a name=\"280\" href=\"#280\">280</a> \t            <em class=\"comment\">// This position, 3, is for Windows</em>\n<a name=\"281\" href=\"#281\">281</a> \t            deleteCommandWin[3] = <span class=\"string\">\"\\&quot;\"</span> + getDestinationPrefix() + fileName + <span class=\"string\">\"\\&quot;\"</span>;\n<a name=\"282\" href=\"#282\">282</a> \t\t\t\tresult =  Runtime.getRuntime().exec(deleteCommandWin).waitFor();\n<a name=\"283\" href=\"#283\">283</a>             } \n<a name=\"284\" href=\"#284\">284</a>             <strong>else</strong> <strong>if</strong> (isMac) {\n<a name=\"285\" href=\"#285\">285</a>                 deleteCommandMac[1] = getDestinationPrefix() + fileName;  \n<a name=\"286\" href=\"#286\">286</a> \t\t\t\tresult =  Runtime.getRuntime().exec(deleteCommandMac).waitFor();\n<a name=\"287\" href=\"#287\">287</a>             }\n<a name=\"288\" href=\"#288\">288</a>         }\n<a name=\"289\" href=\"#289\">289</a>         <strong>catch</strong> (Exception e) {\n<a name=\"290\" href=\"#290\">290</a>             Utils.handleException(e);\n<a name=\"291\" href=\"#291\">291</a>             result = -1;\n<a name=\"292\" href=\"#292\">292</a>         }\n<a name=\"293\" href=\"#293\">293</a>         <strong>return</strong> result;\n<a name=\"294\" href=\"#294\">294</a>     }\n<a name=\"295\" href=\"#295\">295</a> \n<a name=\"296\" href=\"#296\">296</a>     <em>/**<em>*</em></em>\n<a name=\"297\" href=\"#297\">297</a> <em>     * net use z: <a href=\"http://localhost/impromptu/files\" target=\"alexandria_uri\">http://localhost/impromptu/files</a> /user:userName password </em>\n<a name=\"298\" href=\"#298\">298</a> <em>     */</em>\n<a name=\"299\" href=\"#299\">299</a>     <strong>private</strong> <strong>static</strong> String  \tmountCommandWin[] = {<span class=\"string\">\"net\"</span>, <span class=\"string\">\"use\"</span>, <span class=\"string\">\"\"</span>, <span class=\"string\">\"\"</span>, <span class=\"string\">\"/user:\"</span>, <span class=\"string\">\"\"</span>};\n<a name=\"300\" href=\"#300\">300</a>     <strong>private</strong> <strong>static</strong> String  \tmountCommandMac[] = {<span class=\"string\">\"./mountMac\"</span>, <span class=\"string\">\"\"</span>, <span class=\"string\">\"\"</span>, <span class=\"string\">\"\"</span>, <span class=\"string\">\"\"</span>};\n<a name=\"301\" href=\"#301\">301</a>     <em>/**<em>*</em></em>\n<a name=\"302\" href=\"#302\">302</a> <em>     * Mount the Impromptu proxy as a drive for later access</em>\n<a name=\"303\" href=\"#303\">303</a> <em>     * @param userName the name used to mount this drive</em>\n<a name=\"304\" href=\"#304\">304</a> <em>     * @param password the password used to mount the drive</em>\n<a name=\"305\" href=\"#305\">305</a> <em>     * @return 0 for successful mount, -1 for unsuccessful mount</em>\n<a name=\"306\" href=\"#306\">306</a> <em>     */</em>\n<a name=\"307\" href=\"#307\">307</a>     <strong>public</strong> <strong>static</strong> <strong>int</strong> mountDrive(String userName, String password) {\n<a name=\"308\" href=\"#308\">308</a>         <strong>int</strong>\t\t\tresult = -1;\t\t\n<a name=\"309\" href=\"#309\">309</a>         <strong>try</strong> {\n<a name=\"310\" href=\"#310\">310</a>             <strong>if</strong> (isWindows) {\n<a name=\"311\" href=\"#311\">311</a>                 mountCommandWin[2] = Configuration.getDestinationDrive();\n<a name=\"312\" href=\"#312\">312</a>                 mountCommandWin[3] = Configuration.getImpromptuProxy() + edu.uci.isr.impromptu.common.Configuration.FILES_PATH;\n<a name=\"313\" href=\"#313\">313</a> \t            mountCommandWin[4] = <span class=\"string\">\"/user:\\&quot;\"</span> + userName + <span class=\"string\">\"\\&quot;\"</span>;\n<a name=\"314\" href=\"#314\">314</a> \t            mountCommandWin[5] = password;\n<a name=\"315\" href=\"#315\">315</a> \t            String\tsingleMountCommandWin = <span class=\"string\">\"\"</span>;\n<a name=\"316\" href=\"#316\">316</a> \t            <strong>for</strong> (<strong>int</strong> i = 0; i&lt;mountCommandWin.length; i++) {\n<a name=\"317\" href=\"#317\">317</a> \t                singleMountCommandWin += mountCommandWin[i];\n<a name=\"318\" href=\"#318\">318</a> \t                <strong>if</strong> (i&lt;mountCommandWin.length-1)\n<a name=\"319\" href=\"#319\">319</a> \t                    singleMountCommandWin += <span class=\"string\">\" \"</span>;\n<a name=\"320\" href=\"#320\">320</a> \t            }\n<a name=\"321\" href=\"#321\">321</a> \t            <strong>for</strong> (<strong>int</strong> i = 0; i&lt; 3 &amp;&amp; result != 0; i++) {\t\n<a name=\"322\" href=\"#322\">322</a> \t                <em class=\"comment\">// retry three times, sicne Windows Redirector is not perfectly reliable </em>\n<a name=\"323\" href=\"#323\">323</a> \t\t\t\t\t<em class=\"comment\">// result =  Runtime.getRuntime().exec(mountCommandWin).waitFor();</em>\n<a name=\"324\" href=\"#324\">324</a> \t\t            <em class=\"comment\">// Use the single string version, since the \"user name\" might confuse Java</em>\n<a name=\"325\" href=\"#325\">325</a> \t                result =  Runtime.getRuntime().exec(singleMountCommandWin).waitFor();\n<a name=\"326\" href=\"#326\">326</a> \t                <strong>if</strong> (result != 0) {\n<a name=\"327\" href=\"#327\">327</a> \t                    <strong>try</strong> {\n<a name=\"328\" href=\"#328\">328</a> \t\t                    <em class=\"comment\">// http://support.microsoft.com/default.aspx?scid=kb;en-us;832161</em>\n<a name=\"329\" href=\"#329\">329</a> \t                        <em class=\"comment\">// Sleep for 3 seconds, since by default the bad </em>\n<a name=\"330\" href=\"#330\">330</a> \t                        <em class=\"comment\">//\tentry stays in the list for 60 seconds, and we </em>\n<a name=\"331\" href=\"#331\">331</a> \t                        <em class=\"comment\">//  change it to 1 second. Still, this does not garantee success.</em>\n<a name=\"332\" href=\"#332\">332</a> \t                        <em class=\"comment\">//  But an external net use is much faster before success.</em>\n<a name=\"333\" href=\"#333\">333</a> \t                        Thread.sleep(2000);\n<a name=\"334\" href=\"#334\">334</a> \t                    }\n<a name=\"335\" href=\"#335\">335</a> \t                    <strong>catch</strong> (InterruptedException ie) {\n<a name=\"336\" href=\"#336\">336</a> \t                    }\n<a name=\"337\" href=\"#337\">337</a> \t                }\n<a name=\"338\" href=\"#338\">338</a> \t            }\n<a name=\"339\" href=\"#339\">339</a>             } \n<a name=\"340\" href=\"#340\">340</a>             <strong>else</strong> <strong>if</strong> (isMac) {\n<a name=\"341\" href=\"#341\">341</a>                 mountCommandMac[1] = Configuration.getDestinationDrive();\n<a name=\"342\" href=\"#342\">342</a>                 <em class=\"comment\">// On Mac slide must be mounted from the / root, not at /files, </em>\n<a name=\"343\" href=\"#343\">343</a>                 <em class=\"comment\">// so the file system driver write can succeed</em>\n<a name=\"344\" href=\"#344\">344</a>                 mountCommandMac[2] = Configuration.getImpromptuProxy();\n<a name=\"345\" href=\"#345\">345</a> \t            mountCommandMac[3] = userName;\n<a name=\"346\" href=\"#346\">346</a> \t            mountCommandMac[4] = password;\n<a name=\"347\" href=\"#347\">347</a> \t\t\t\tresult =  Runtime.getRuntime().exec(mountCommandMac).waitFor();\n<a name=\"348\" href=\"#348\">348</a>             }\n<a name=\"349\" href=\"#349\">349</a>         }\n<a name=\"350\" href=\"#350\">350</a>         <strong>catch</strong> (Exception e) {\n<a name=\"351\" href=\"#351\">351</a>             Utils.handleException(e);\n<a name=\"352\" href=\"#352\">352</a>             result = -1;\n<a name=\"353\" href=\"#353\">353</a>         }\n<a name=\"354\" href=\"#354\">354</a>         <strong>return</strong> result;\n<a name=\"355\" href=\"#355\">355</a>     }\n<a name=\"356\" href=\"#356\">356</a>     \n<a name=\"357\" href=\"#357\">357</a>     <strong>private</strong> <strong>static</strong> String  \tunmountCommandWin[] = {<span class=\"string\">\"net\"</span>, <span class=\"string\">\"use\"</span>, <span class=\"string\">\"\"</span>, <span class=\"string\">\"/delete\"</span>}; \n<a name=\"358\" href=\"#358\">358</a>     <strong>private</strong> <strong>static</strong> String  \tunmountCommandMac[] = {<span class=\"string\">\"umount\"</span>, <span class=\"string\">\"\"</span>};\n<a name=\"359\" href=\"#359\">359</a>     <em>/**<em>*</em></em>\n<a name=\"360\" href=\"#360\">360</a> <em>     * Unmount the Impromptu proxy drive</em>\n<a name=\"361\" href=\"#361\">361</a> <em>     * @return 0 for successful unmount, -1 for unsuccessful unmount</em>\n<a name=\"362\" href=\"#362\">362</a> <em>     */</em>\n<a name=\"363\" href=\"#363\">363</a>     <strong>public</strong> <strong>static</strong> <strong>int</strong> unmountDrive() {\n<a name=\"364\" href=\"#364\">364</a>         <strong>int</strong>\t\t\tresult = -1;\t\t\n<a name=\"365\" href=\"#365\">365</a>         <strong>try</strong> {\n<a name=\"366\" href=\"#366\">366</a>             <strong>if</strong> (isWindows) {\n<a name=\"367\" href=\"#367\">367</a>                 unmountCommandWin[2] = Configuration.getDestinationDrive();\n<a name=\"368\" href=\"#368\">368</a> \t\t\t\tresult =  Runtime.getRuntime().exec(unmountCommandWin).waitFor();\n<a name=\"369\" href=\"#369\">369</a>             } \n<a name=\"370\" href=\"#370\">370</a>             <strong>else</strong> <strong>if</strong> (isMac) {\n<a name=\"371\" href=\"#371\">371</a>                 unmountCommandMac[1] = Configuration.getDestinationDrive();\n<a name=\"372\" href=\"#372\">372</a> \t\t\t\tresult =  Runtime.getRuntime().exec(unmountCommandMac).waitFor();\n<a name=\"373\" href=\"#373\">373</a>             }\n<a name=\"374\" href=\"#374\">374</a>         }\n<a name=\"375\" href=\"#375\">375</a>         <strong>catch</strong> (Exception e) {\n<a name=\"376\" href=\"#376\">376</a>             Utils.handleException(e);\n<a name=\"377\" href=\"#377\">377</a>             result = -1;\n<a name=\"378\" href=\"#378\">378</a>         }\n<a name=\"379\" href=\"#379\">379</a>         <strong>return</strong> result;\n<a name=\"380\" href=\"#380\">380</a>     }\n<a name=\"381\" href=\"#381\">381</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 34476.0}