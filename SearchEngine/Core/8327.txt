{"text": "ICS 26 Fundamentals of the Design and Analysis of Algorithms Fall 2 2 Eppstein Instructor David Eppstein CS 358D 949 824 6384 eppstein ics uci edu Office hours by appointment call or send email to set up a time I will usually be available immediately after class Class meeting Tuesdays and Thursdays 12 3 1 5 PM in IERF B 15 Adds drops etc There are plenty of seats in the classroom so I will be happy to add you to the class DURING THE FIRST WEEK You may drop the course any time up through the sixth week of classes Course Text There is no required text Some of the material will be taken from the following books AMO Ahuja Magnanti and Orlin Network Flows Prentice Hall 1993 CLRS Cormen Leiserson Rivest and Stein Introduction to Algorithms See also the online errata GJ Garey and Johnson Computers and Intractability A Guide to the Theory of NP completeness W H Freeman and Company 1979 P Papadimitriou Computational Complexity Addison Wesley 1994 In addition course notes are available online Please be aware that the notes are from a previous offering of 26 and although they cover roughly the same material as I expect to they do not necessarily have the same emphasis You are responsible for all material covered in the lecture even if it is not covered in the course notes Coursework and grading Due to the lack of teaching assistance for this course there will be no required homeworks However you may find it helpful to study Prof Dillencourt s homeworks from last Winter The graded courseworks will consist of two midterms each worth 3 of the grade and a comprehensive final exam worth 4 Note I reserve the right to assign a failing grade to a student who performs extremely poorly on the final exam irrespective of his her performance on the midterms Similarly I reserve the right to assign a student who performs extremely well on the final exam a higher grade than his her course average would dictate Exams are closed book and sharing or copying answers is not allowed violating this honesty policy will result in failing the class Schedule Week 1 Review of O notation and algorithm analysis Graphs graph representation and traversal See also Guido van Rossum s essay on graph representation in Python Week 2 Shortest paths Week 3 Network flow Week 4 Matching MIDTERM Week 5 Dynamic programming Longest common subsequences change making problem optimal triangulation Week 6 Greedy algorithms Huffman coding minimum spanning trees approximate traveling salesman and set cover Week 7 Linear programming Week 8 MIDTERM NP completeness definitions Week 9 NP completeness Cook s theorem and satisfiability Thanksgiving day Week 1 NP completeness Example reductions Case study truck scheduling algorithms Branch and bound Friday Dec 13 1 3 12 3 FINAL EXAM Sample exams from the Fall 2 1 offering of ICS 26 First midterm solutions Second midterm solutions Final exam solutions D Eppstein ICS UC Irvine ", "_id": "http://www.ics.uci.edu/~eppstein/260/", "title": "ics 260 - fundamentals of the design and analysis of\nalgorithms", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<html>\n<head>\n<title>ICS 260 - Fundamentals of the Design and Analysis of\nAlgorithms</title>\n</head>\n<body bgcolor=\"#ffffff\" text=\"#000000\">\n<h2>ICS 260 - Fundamentals of the Design and Analysis of Algorithms\n- Fall, 2002 (Eppstein)</h2>\n\n<p><b>Instructor:</b> David Eppstein, CS 358D, 949-824-6384, <a\nhref=\"mailto:eppstein@ics.uci.edu\">eppstein@ics.uci.edu</a>.<br>\nOffice hours by appointment; call or send email to set up a time. I\nwill usually be available immediately after class.</p>\n\n<p><b>Class meeting:</b> <a href= \n\"http://www.reg.uci.edu/cgi-bin/options.py?script=soc_course.py&amp;course_code=36589&amp;year=01&amp;term=2\">\nTuesdays and Thursdays, 12:30 - 1:50PM, in IERF B015.</a></p>\n\n<p><b>Adds, drops, etc.:</b> There are plenty of seats in the\nclassroom, so I will be happy to add you to the class DURING THE\nFIRST WEEK. You may drop the course any time up through the sixth\nweek of classes.</p>\n\n<p><b>Course Text:</b> There is no required text. Some of the\nmaterial will be taken from the following books:</p>\n\n<ul>\n<li>[AMO] Ahuja, Magnanti and Orlin. <em> Network Flows</em>,\nPrentice Hall, 1993.</li>\n\n<li>[CLRS] Cormen, Leiserson, Rivest, and Stein. <em> Introduction to\nAlgorithms</em>.  See also the <a\nhref=\"http://www.cs.dartmouth.edu/~thc/clrs-2e-bugs.html\">online errata</a>.</li>\n\n<li>[GJ] Garey and Johnson, <em>Computers and Intractability: A\nGuide to the Theory of NP-completeness</em>, W. H. Freeman and\nCompany 1979.</li>\n\n<li>[P] Papadimitriou, <em>Computational Complexity</em> ,\nAddison-Wesley, 1994.</li>\n</ul>\n\nIn addition, <a href=\"notes/\">course notes are available\nonline</a>. Please be aware that the notes are from a previous\noffering of 260, and although they cover roughly the same material\nas I expect to, they do not necessarily have the same emphasis. You\nare responsible for all material covered in the lecture, even if it\nis not covered in the course notes. \n\n<p><b>Coursework and grading:</b> Due to the lack of teaching\nassistance for this course, there will be no required homeworks.\nHowever, you may find it helpful to study <a href= \n\"http://www.ics.uci.edu/~dillenco/ics260/homework.html\">Prof.\nDillencourt's homeworks</a> from last Winter. The graded\ncourseworks will consist of two midterms (each worth 30% of the\ngrade) and a comprehensive final exam (worth 40%). Note: I reserve\nthe right to assign a failing grade to a student who performs\nextremely poorly on the final exam, irrespective of his/her\nperformance on the midterms. Similarly, I reserve the right to\nassign a student who performs extremely well on the final exam a\nhigher grade than his/her course average would dictate. Exams are\nclosed-book, and sharing or copying answers is not allowed;\nviolating this honesty policy will result in failing the class.</p>\n\n<hr>\n<h3>Schedule</h3>\n\n<ul>\n<li>Week 1: Review of O-notation and algorithm analysis. <a href= \n\"http://www.ics.uci.edu/~eppstein/161/960201.html\">Graphs, graph\nrepresentation, and traversal.</a>\nSee also\n<a href=\"http://www.python.org/doc/essays/graphs.html\">Guido van Rossum's\nessay on graph representation in Python</a>.</li>\n\n<li>Week 2: <a href= \n\"http://www.ics.uci.edu/~eppstein/161/960208.html\">Shortest\npaths</a>.</li>\n\n<li>Week 3: Network flow.</li>\n\n<li>Week 4: Matching. MIDTERM.</li>\n\n<li>Week 5: Dynamic programming. <a href=\n\"/~eppstein/161/960229.html\">Longest common subsequences</a>,\nchange-making problem, <a href=\"011023/\">optimal\ntriangulation</a>.</li>\n\n<li>Week 6: Greedy algorithms. Huffman coding,\n<a href=\"http://www.ics.uci.edu/~eppstein/161/960206.html\">minimum spanning\ntrees</a>, approximate traveling salesman and set cover.</li>\n\n<li>Week 7: Linear programming.</li>\n\n<li>Week 8: MIDTERM. NP-completeness: definitions.</li>\n\n<li>Week 9: NP-completeness: Cook's theorem and\nsatisfiability. Thanksgiving day.</li>\n\n<li>Week 10: NP-completeness: Example reductions.\n<a href=\"http://www.wired.com/wired/archive/9.12/sheffi.html\">Case study: truck\nscheduling algorithms.</a> Branch and bound.</li>\n\n<li>Friday, Dec. 13, 10:30 - 12:30: FINAL EXAM.\n</ul>\n\nSample exams from the Fall 2001 offering of ICS 260:\n<ul>\n<li><a href=\"MT1.pdf\">First midterm</a> [<a href=\"MT1-ans.pdf\">solutions</a>].</li>\n<li><a href=\"MT2.pdf\">Second midterm</a> [<a href=\"MT2-ans.pdf\">solutions</a>].</li>\n<li><a href=\"final.pdf\">Final exam</a> [<a href=\"final-ans.pdf\">solutions</a>].</li>\n</ul>\n\n<hr>\n<a href=\"/~eppstein/\">D. Eppstein</a>, <a href=\"/\">ICS</a>, UC\nIrvine.\n</body>\n</html>\n\n", "id": 8327.0}