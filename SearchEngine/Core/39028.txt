{"text": "Navigation Up Table of Contents Bibliography Index Title Page CGAL Largest empty iso rectangle 2 T Definition Given a set of points in the plane the class Largest empty iso rectangle 2 T is a data structure that maintains an iso rectangle with the largest area among all iso rectangles that are inside a given bounding box iso rectangle and that do not contain any point of the point set The class Largest empty iso rectangle 2 T expects a model of the concept LargestEmptyIsoRectangleTraits 2 as its template argument include CGAL Largest empty iso rectangle 2 h TypesThe class Largest empty iso rectangle 2 T defines the following types typedef T Traits typedef Traits Point 2 Point 2 typedef Traits Iso rectangle 2 Iso rectangle 2 The following iterator allows to enumerate the points It is non mutable bidirectional and its value type is Point 2 It is invalidated by any insertion or removal of a point Largest empty iso rectangle 2 T const iterator Iterator over the points Creation Largest empty iso rectangle 2 T l Iso rectangle 2 b Constructor The iso rectangle b is the bounding rectangle Largest empty iso rectangle 2 T l const Point 2 p const Point 2 q Constructor The iso rectangle whose lower left and upper right points are p and q respectively is the bounding rectangle Largest empty iso rectangle 2 T l Constructor The iso rectangle whose lower left point and upper right points are and 1 1 respectively is the bounding rectangle Largest empty iso rectangle 2 T l const Largest empty iso rectangle 2 Traits tr Copy constructor Operations Assignment Largest empty iso rectangle 2 T l tr Access Functions Traits l traits Returns a const reference to the traits object const iterator l begin Returns an iterator to the beginning of the point set const iterator l end Returns a past the end iterator for the point set Queries Quadruple Point 2 Point 2 Point 2 Point 2 l get left bottom right top Returns the four points that define the largest empty iso rectangle Note that these points are not necessarily on a corner of an iso rectangle Iso rectangle 2 l get largest empty iso rectangle Returns the largest empty iso rectangle Note that the two points defining the iso rectangle are not necessarily part of the point set Iso rectangle 2 l get bounding box Returns the iso rectangle passed in the constructor Insertion void l insert Point 2 p Inserts point p in the point set if it is not already in the set void l push back Point 2 p Inserts point p in the point set if it is not already in the set template class InputIterator int l insert InputIterator first InputIterator last Inserts the points in the range first last Returns the number of inserted points RequirementsThe value type of first and last is Point Removal bool l remove Point 2 p Removes point p Returns false iff p is not in the point set void l clear Removes all points of l Implementation The algorithm is an implementation of Orl9 The runtime of an insertion or a removal is O logn A query takes O n2 worst case time and O n logn expected time The working storage is O n Next LargestEmptyIsoRectangleTraits 2 Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Optimisation_ref/Class_Largest_empty_iso_rectangle_2.html", "title": "largest_empty_iso_rectangle_2&lt;t&gt;", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Optimisation_ref/Largest_empty_iso_rectangle_2_ref.tex' -->\n<html> <head>  \n<title>Largest_empty_iso_rectangle_2&lt;T&gt;</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_1193\"></A>\n\n<A NAME=\"Cross_link_anchor_1194\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_1233\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Class.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_CGAL::Largest_empty_iso_rectangle_2<T>\"></A>\n<h2><I>CGAL::Largest_empty_iso_rectangle_2&lt;T&gt;</I></h2>\n\n\r\n\r\n\r\n\r\n<H3>Definition</H3>\n<P>\n\nGiven a set of points in the plane, the class <I><A HREF=\"Class_Largest_empty_iso_rectangle_2.html#Cross_link_anchor_1194\">Largest_empty_iso_rectangle_2</A>&lt;T&gt;</I> is a data\r\nstructure that maintains an iso-rectangle with the largest <A HREF=\"../Kernel_23_ref/Function_area.html#Cross_link_anchor_159\">area</A> among\r\nall iso-rectangles that are inside a given bounding box( iso-rectangle), and\r\nthat do not contain any point of the point set.\r\n\r\nThe class <I><A HREF=\"Class_Largest_empty_iso_rectangle_2.html#Cross_link_anchor_1194\">Largest_empty_iso_rectangle_2</A>&lt;T&gt;</I> expects a model of the concept <I><A HREF=\"Concept_LargestEmptyIsoRectangleTraits_2.html#Cross_link_anchor_1195\">LargestEmptyIsoRectangleTraits_2</A></I> as its template argument.  \r\n\r\n<I>#include &lt;<A HREF=\"../../../include/CGAL/Largest_empty_iso_rectangle_2.h\">CGAL/Largest_empty_iso_rectangle_2.h</A>&gt;</I>\n<P>\n\n<H3>Types</H3>The class <I><A HREF=\"Class_Largest_empty_iso_rectangle_2.html#Cross_link_anchor_1194\">Largest_empty_iso_rectangle_2</A>&lt;T&gt;</I> defines the following types:\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Traits\"></A>\n<A NAME=\"Typedef_Traits\"></A>\ntypedef T\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    Traits;\n        </I></NOBR>\n        </TD>\n    \n        </TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Point_2\"></A>\n<A NAME=\"Typedef_Point_2\"></A>\ntypedef Traits::<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A>;\n        </I></NOBR>\n        </TD>\n    \n        </TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Iso_rectangle_2\"></A>\n<A NAME=\"Typedef_Iso_rectangle_2\"></A>\ntypedef Traits::<A HREF=\"../Kernel_23_ref/Class_Iso_rectangle_2.html#Cross_link_anchor_48\">Iso_rectangle_2</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"../Kernel_23_ref/Class_Iso_rectangle_2.html#Cross_link_anchor_48\">Iso_rectangle_2</A>;\n        </I></NOBR>\n        </TD>\n    \n        </TR>\n        </TABLE>\n\r\n\r\n\r\nThe following iterator allows to enumerate the points. \r\nIt is non mutable, bidirectional\r\nand its value type is <I><A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A></I>. \r\nIt is invalidated by any insertion or removal of a point. \r\n\r\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Largest_empty_iso_rectangle_2.html#Cross_link_anchor_1194\">Largest_empty_iso_rectangle_2</A>&lt;T&gt;::const_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Iterator over the points.\n<P>\n\n</TD></TR>\n        </TABLE>\n\r\n\r\n\r\n<H3>Creation</H3>  \r\n\r\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Largest_empty_iso_rectangle_2.html#Cross_link_anchor_1194\">Largest_empty_iso_rectangle_2</A>&lt;T&gt; l (  <A HREF=\"../Kernel_23_ref/Class_Iso_rectangle_2.html#Cross_link_anchor_48\">Iso_rectangle_2</A> b);\n        </I></NOBR>\n        </TD></TR>\n<P>\n\n</TABLE>\n\nConstructor. The iso-rectangle <I>b</I> is the bounding rectangle. \r\n\r\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Largest_empty_iso_rectangle_2.html#Cross_link_anchor_1194\">Largest_empty_iso_rectangle_2</A>&lt;T&gt; l ( const <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p, const <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> q);\n        </I></NOBR>\n        </TD></TR>\n<P>\n\n</TABLE>\n\nConstructor. The iso-rectangle whose lower left and upper right points are <I>p</I> and\r\n<I>q</I> respectively is the bounding rectangle. \r\n\r\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Largest_empty_iso_rectangle_2.html#Cross_link_anchor_1194\">Largest_empty_iso_rectangle_2</A>&lt;T&gt; l;\n        </I></NOBR>\n        </TD></TR>\n<P>\n\n</TABLE>\n\nConstructor. The iso-rectangle whose lower left point and upper right points are (0,0) \r\nand (1,1) respectively is the bounding rectangle. \r\n\r\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    <A HREF=\"Class_Largest_empty_iso_rectangle_2.html#Cross_link_anchor_1194\">Largest_empty_iso_rectangle_2</A>&lt;T&gt; l ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    const <A HREF=\"Class_Largest_empty_iso_rectangle_2.html#Cross_link_anchor_1194\">Largest_empty_iso_rectangle_2</A>&lt;Traits&gt; tr);</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TD></TR>\n<P>\n\n</TABLE>\n\nCopy constructor. \r\n\r\n<H3>Operations</H3>\r\n\r\n<H3>Assignment</H3>\r\n\r\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A HREF=\"Class_Largest_empty_iso_rectangle_2.html#Cross_link_anchor_1194\">Largest_empty_iso_rectangle_2</A>&lt;T&gt;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n     l =  tr<A NAME=\"Function_Largest_empty_iso_rectangle_26T9_operator=6const_Largest_empty_iso_rectangle_26T9___tr9;\"></A>\n\n        </I></NOBR>\n        </TD>\n    \n        </TR>\n        </TABLE>\n\n\r\n\r\n<H3>Access Functions</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_const_Traits___traits69_const;\"></A>\n Traits\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    l.traits ()\n        </I></NOBR>\n        </TD>\n    \n        </TR>\n        </TABLE>\n\nReturns a const reference to the traits object.\r\n\r\n\r\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_const_iterator_begin69_const;\"></A>\nconst_iterator\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    l.begin ()\n        </I></NOBR>\n        </TD>\n    \n        </TR>\n        </TABLE>\n\nReturns an iterator to the beginning of the point set.\r\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_const_iterator_end69_const;\"></A>\nconst_iterator\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    l.end ()\n        </I></NOBR>\n        </TD>\n    \n        </TR>\n        </TABLE>\n\nReturns a past-the-end iterator for the point set.\r\n\r\n\r\n<H3>Queries</H3>\r\n\r\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Quadruple6Point_2+_Point_2+_Point_2+_Point_29_get_left_bottom_right_top69;\"></A>\n<A HREF=\"../STL_Extension_ref/Class_Quadruple.html#Cross_link_anchor_1586\">Quadruple</A>&lt;<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A>, <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A>, <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A>, <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A>&gt;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    l.get_left_bottom_right_top ()\n        </I></NOBR>\n        \n    \n        </TR>\n        </TABLE>\n\nReturns the four points that define the largest empty iso-rectangle.\r\n(Note that these points are not necessarily on a corner of an iso-rectangle.)\r\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Iso_rectangle_2_get_largest_empty_iso_rectangle69;\"></A>\n<A HREF=\"../Kernel_23_ref/Class_Iso_rectangle_2.html#Cross_link_anchor_48\">Iso_rectangle_2</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    l.get_largest_empty_iso_rectangle ()\n        </I></NOBR>\n        \n    \n        </TR>\n        </TABLE>\n\nReturns the largest empty iso-rectangle. (Note that the two\r\npoints defining the iso-rectangle are not necessarily part of \r\nthe point set.)\r\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Iso_rectangle_2_get_bounding_box69;\"></A>\n<A HREF=\"../Kernel_23_ref/Class_Iso_rectangle_2.html#Cross_link_anchor_48\">Iso_rectangle_2</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    l.get_bounding_box ()\n        </I></NOBR>\n        \n    \n        </TR>\n        </TABLE>\n\nReturns  the iso-rectangle passed in the constructor.\r\n<H3>Insertion</H3>\r\n\r\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_insert6const_Point_2__p9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    l.insert (  <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p)\n        </I></NOBR>\n        \n    \n        </TR>\n        </TABLE>\n\nInserts point <I>p</I> in the point set, if it is not already in the set.\r\n\r\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_push_back6const_Point_2__p9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    l.push_back (  <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p)\n        </I></NOBR>\n        \n    \n        </TR>\n        </TABLE>\n\nInserts point <I>p</I> in the point set, if it is not already in the set.\r\n\r\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    template &lt; class InputIterator &gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_int_insert6InputIterator_first+_InputIterator_last9;\"></A>\nint\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    l.insert ( InputIterator first,  InputIterator last)\n        </I></NOBR>\n        \n    \n        </TR>\n        </TABLE>\n\nInserts the points in the range <MATH><I>[.</I></MATH><I>first</I>,\r\n<I>last</I><MATH><I>.)</I></MATH>.  Returns the number of inserted points.<BR>\n\n<BR>\n\n<H3>Requirements</H3>The <I>value_type</I> of <I>first</I> and <I>last</I> is <I>Point</I>.\r\n\r\n<H3>Removal</H3>\r\n\r\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_remove6const_Point_2__p9;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    l.remove (  <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Removes point <I>p</I>.\r\nReturns false iff <I>p</I> is not in the point set.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_clear69;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    l.clear ()\n        </I></NOBR>\n        </TD>\n    \n        </TR>\n        </TABLE>\n\nRemoves all points of <I>l</I>.\r\n\r\n\r\n<H3>Implementation</H3>\n<P>\n\nThe algorithm is an implementation of [<A HREF=\"../biblio.html#Biblio_o-naler-90\">Orl90</A>]. The runtime of an\r\ninsertion or a removal is <MATH><I>O(</I></MATH>log<MATH><I>n)</I></MATH>. A query takes <MATH><I>O(n<SUP>2</SUP>)</I></MATH> worst\r\ncase time and <MATH><I>O(n </I></MATH>log<MATH><I>n)</I></MATH> expected time. The working storage is <MATH><I>\r\nO(n)</I></MATH>.\r\n\r\n\r\n\r\n\n                   <div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Concept_LargestEmptyIsoRectangleTraits_2.html\"><I>LargestEmptyIsoRectangleTraits_2</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_52!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 39028.0}