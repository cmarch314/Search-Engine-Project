{"text": "Search LoginPreferencesHelp GuideAbout Trac WikiTimelineRoadmapBrowse SourceView TicketsSearch Context Navigation Previous ChangesetNext Changeset Changeset 125 View differences inlineside by side Show lines around each change Show the changes in full context Ignore Blank lines Case changes White space changes Timestamp Jan 23 2 7 1 22 29 PM 8 years ago Author djp3Message Deleted classification class Location trunk Nomatic Gaim current client gtk plugins nomatic Files 2 deleted12 edited modified 1 prop Makefile am modified 1 diff classification c deleted classification h deleted completionField c modified 4 diffs completionField h modified 2 diffs feature c modified 15 diffs feature h modified 3 diffs featureCollection c modified 8 diffs featureCollection h modified 1 diff myUtilities c modified 2 diffs myUtilities h modified 1 diff nomatic c modified 42 diffs nomatic h modified 2 diffs Legend UnmodifiedAddedRemoved trunk Nomatic Gaim current client gtk plugins nomatic Property svn ignore old new 33 deps 44 libs 5trash trunk Nomatic Gaim current client gtk plugins nomatic Makefile am r116 r125 1313 completionField c 1414 feature c 15 classification c 1615 featureCollection c 1716 myUtilities c trunk Nomatic Gaim current client gtk plugins nomatic completionField c r116 r125 88 include completionField h 99 include feature h 1 include classification h 111 1211 119118 12 119 121 bool addLocationClassificationToCompletionField feature train classification c GtkEntryCompletion completion 12 bool addLocationClassificationToCompletionField char locationStatus GtkEntryCompletion completion 122121 123 if c isFreeForm 124 addCompletionString completion c context parsed location 122 if locationStatus completion 123 addCompletionString completion locationStatus 125124 126125 return FALSE 128127 129128 13 bool addActivityClassificationToCompletionField feature train classification c GtkEntryCompletion completion 129bool addActivityClassificationToCompletionField char activityStatus GtkEntryCompletion completion 13113 132 if c isFreeForm 133 addCompletionString completion c context parsed activity 131 if activityStatus completion 132 addCompletionString completion activityStatus 134133 135134 return FALSE 137136 138137 139 bool addSocialStatusClassificationToCompletionField feature train classification c GtkEntryCompletion completion 138bool addSocialStatusClassificationToCompletionField char socialStatusStatus GtkEntryCompletion completion 14 139 141 if c isFreeForm 142 addCompletionString completion c context parsed socialStatus 14 if socialStatusStatus completion 141 addCompletionString completion socialStatusStatus 143142 144143 return FALSE 145144 146145 147 bool addFreeFormClassificationToCompletionField feature train classification c GtkEntryCompletion completion 146bool addFreeFormClassificationToCompletionField char freeFormStatus GtkEntryCompletion completion 148147 149 if c isFreeForm 15 addCompletionString completion c context freeForm 148 if freeFormStatus completion 149 addCompletionString completion freeFormStatus 15115 152151 return FALSE trunk Nomatic Gaim current client gtk plugins nomatic completionField h r116 r125 55 66 include feature h 7 include classification h 87 98 111 GtkTreeModel completionModelInit void 1211void addCompletionString GtkEntryCompletion completion const gchar string 13 bool addLocationClassificationToCompletionField feature train classification c GtkEntryCompletion completion 14 bool addActivityClassificationToCompletionField feature train classification c GtkEntryCompletion completion 15 bool addSocialStatusClassificationToCompletionField feature train classification c GtkEntryCompletion completion 16 bool addFreeFormClassificationToCompletionField feature train classification c GtkEntryCompletion completion 12bool addLocationClassificationToCompletionField char locationStatus GtkEntryCompletion completion 13bool addActivityClassificationToCompletionField char activityStatus GtkEntryCompletion completion 14bool addSocialStatusClassificationToCompletionField char socialStatusStatus GtkEntryCompletion completion 15bool addFreeFormClassificationToCompletionField char freeFormStatus GtkEntryCompletion completion 1716 1817 endif COMPLETIONFIELD H trunk Nomatic Gaim current client gtk plugins nomatic feature c r124 r125 1717FILE dataFile NULL 1818 19 2 feature newFeature int minutes 21 int wday 22 int ip4 int ip3 int ip2 int ip1 23 const char dNSName 24 const char locationStatus 25 const char activityStatus 26 const char socialStatusStatus 27 const char freeFormStatus 28 29 19 2 The ints are passed as pointers so that the can be explicitly unset by passing NULL 21feature newFeature 22 const int weekday 23 const int minutes 24 const int seconds 25 const int ip4 const int ip3 const int ip2 const int ip1 26 const char dNSName 27 const char activityStatus 28 const char locationStatus 29 const char socialStatusStatus 3 const char freeFormStatus 31 32 33 Error check 34 if freeFormStatus NULL socialStatusStatus NULL activityStatus NULL locationStatus NULL 35 nomaticDebugFatal NULL Nomatic newFeature called with mutually exclusive settings n s n s n s n s n locationStatus activityStatus socialStatusStatus freeFormStatus 36 37 38 Allocate memory for the structure 3 39 feature fv feature calloc 1 sizeof feature 314 32 fv minutes minutes 33 fv wday wday 34 fv ip4 ip4 35 fv ip3 ip3 36 fv ip2 ip2 37 fv ip1 ip1 38 39 fv dNSName NULL 4 if dNSName 41 fv dNSName strdup dNSName 42 43 44 fv locationStatus NULL 45 if locationStatus 46 fv locationStatus strdup locationStatus 47 48 fv activityStatus NULL 49 if activityStatus 5 fv activityStatus strdup activityStatus 51 52 fv socialStatusStatus NULL 53 if socialStatusStatus 54 fv socialStatusStatus strdup socialStatusStatus 55 56 fv freeFormStatus NULL 41 Initialize all the members to NULL 42 fv weekday NULL 43 fv minutes NULL 44 fv seconds NULL 45 fv ip4 NULL 46 fv ip3 NULL 47 fv ip2 NULL 48 fv ip1 NULL 49 fv dNSName NULL 5 fv isStructured NULL 51 fv context structured activityStatus NULL 52 fv context structured locationStatus NULL 53 fv context structured socialStatusStatus NULL 54 55 Set members if they aren t NULL 56 if weekday 57 featureSetWeekday fv weekday 58 59 if minutes 6 featureSetMinutes fv minutes 61 62 if ip4 63 featureSetIP4 fv ip4 64 65 if ip3 66 featureSetIP4 fv ip3 67 68 if ip2 69 featureSetIP4 fv ip2 7 71 if ip1 72 featureSetIP4 fv ip1 73 74 featureSetDNSName fv dNSName 5775 if freeFormStatus 58 fv freeFormStatus strdup freeFormStatus 76 featureSetIsStructured fv FALSE 77 featureSetFreeFormStatus fv freeFormStatus 78 nomaticDebugMisc NULL Nomatic newFeature here 4 n 79 8 else 81 featureSetIsStructured fv TRUE 82 featureSetActivityStatus fv activityStatus 83 featureSetLocationStatus fv locationStatus 84 featureSetSocialStatusStatus fv socialStatusStatus 5985 6 86 return fv 6187 6288 63 64 float calculateDistanceMinutes int a int b 65 66 float dummy 67 68 minutes 69 dummy float a float b 48 6 7 return dummy dummy 71 72 73 74 float calculateDistanceWeekday int a int b 89int featureGetWeekday const feature f 9 91 return featureGetWeekday P f 92 93const int featureGetWeekday P const feature f 94 95 return f weekday 96 97void featureAllocateWeekday P feature f 98 99 f weekday int calloc 1 sizeof int 1 1 1void featureSetWeekday feature f const int weekday 1 2 1 3 if featureGetWeekday P f 1 4 featureAllocateWeekday P f 1 5 1 6 f weekday weekday 1 7 1 8 1 9int featureGetMinutes const feature f 11 111 return featureGetMinutes P f 112 113const int featureGetMinutes P const feature f 114 115 return f minutes 116 117void featureAllocateMinutes P feature f 118 119 f minutes int calloc 1 sizeof int 12 121void featureSetMinutes feature f const int minutes 122 123 if featureGetMinutes P f 124 featureAllocateMinutes P f 125 126 f minutes minutes 127 128 129int featureGetSeconds const feature f 13 131 return featureGetSeconds P f 132 133const int featureGetSeconds P const feature f 134 135 return f seconds 136 137void featureAllocateSeconds P feature f 138 139 f seconds int calloc 1 sizeof int 14 141void featureSetSeconds feature f const int seconds 142 143 if featureGetSeconds P f 144 featureAllocateSeconds P f 145 146 f seconds seconds 147 148 149int featureGetIP4 const feature f 15 151 return featureGetIP4 P f 152 153const int featureGetIP4 P const feature f 154 155 return f ip4 156 157void featureAllocateIP4 P feature f 158 159 f ip4 int calloc 1 sizeof int 16 161void featureSetIP4 feature f const int ip4 162 163 if featureGetIP4 P f 164 featureAllocateIP4 P f 165 166 f ip4 ip4 167 168 169int featureGetIP3 const feature f 17 171 return featureGetIP3 P f 172 173const int featureGetIP3 P const feature f 174 175 return f ip3 176 177void featureAllocateIP3 P feature f 178 179 f ip3 int calloc 1 sizeof int 18 181void featureSetIP3 feature f const int ip3 182 183 if featureGetIP3 P f 184 featureAllocateIP3 P f 185 186 f ip3 ip3 187 188 189int featureGetIP2 const feature f 19 191 return featureGetIP2 P f 192 193const int featureGetIP2 P const feature f 194 195 return f ip2 196 197void featureAllocateIP2 P feature f 198 199 f ip2 int calloc 1 sizeof int 2 2 1void featureSetIP2 feature f const int ip2 2 2 2 3 if featureGetIP2 P f 2 4 featureAllocateIP2 P f 2 5 2 6 f ip2 ip2 2 7 2 8 2 9int featureGetIP1 const feature f 21 211 return featureGetIP1 P f 212 213const int featureGetIP1 P const feature f 214 215 return f ip1 216 217void featureAllocateIP1 P feature f 218 219 f ip1 int calloc 1 sizeof int 22 221void featureSetIP1 feature f const int ip1 222 223 if featureGetIP1 P f 224 featureAllocateIP1 P f 225 226 f ip1 ip1 227 228 229void featureSetIP feature f const int ip4 const int ip3 const int ip2 const int ip1 23 231 featureSetIP4 f ip4 232 featureSetIP4 f ip3 233 featureSetIP4 f ip2 234 featureSetIP4 f ip1 235 236 237const char featureGetDNSName const feature f 238 239 return f dNSName 24 241 242void featureSetDNSName feature f const char DNSName 243 244 if f dNSName 245 free f dNSName 246 247 if DNSName 248 f dNSName strdup DNSName 249 else 25 f dNSName NULL 251 252 253 254 255bool featureGetIsStructured const feature f 256 257 return featureGetIsStructured P f 258 259const bool featureGetIsStructured P const feature f 26 261 return f isStructured 262 263void featureAllocateIsStructured P feature f 264 265 f isStructured bool calloc 1 sizeof bool 266 267 268void featureSetIsStructured feature f const bool isStructured 269 27 if featureGetIsStructured P f 271 featureAllocateIsStructured P f 272 273 f isStructured isStructured 274 275 276const char featureGetActivityStatus const feature f 277 278 if featureGetIsStructured f 279 return f context structured activityStatus 28 else 281 nomaticDebugFatal NULL Nomatic requested activityStatus from an unstructured feature n 282 return NULL Won t ever get here 283 284 285 286void featureSetActivityStatus feature f const char activityStatus 287 288 if featureGetIsStructured f 289 if f context structured activityStatus 29 free f context structured activityStatus 291 292 if activityStatus 293 f context structured activityStatus strdup activityStatus 294 else 295 f context structured activityStatus NULL 296 297 else 298 nomaticDebugFatal NULL Nomatic modifying activityStatus in an unstructured feature n 299 3 3 1 3 2const char featureGetLocationStatus const feature f 3 3 3 4 if featureGetIsStructured f 3 5 return f context structured locationStatus 3 6 else 3 7 nomaticDebugFatal NULL Nomatic requested locationStatus from an unstructured feature n 3 8 return NULL Won t ever get here 3 9 31 311 312void featureSetLocationStatus feature f const char locationStatus 313 314 if featureGetIsStructured f 315 if f context structured locationStatus 316 free f context structured locationStatus 317 318 if locationStatus 319 f context structured locationStatus strdup locationStatus 32 else 321 f context structured locationStatus NULL 322 323 else 324 nomaticDebugFatal NULL Nomatic modifying locationStatus in an unstructured feature n 325 326 327 328const char featureGetSocialStatusStatus const feature f 329 33 if featureGetIsStructured f 331 return f context structured socialStatusStatus 332 else 333 nomaticDebugFatal NULL Nomatic requested socialStatusStatus from an unstructured feature n 334 return NULL Won t ever get here 335 336 337 338void featureSetSocialStatusStatus feature f const char socialStatusStatus 339 34 if featureGetIsStructured f 341 if f context structured socialStatusStatus 342 free f context structured socialStatusStatus 343 344 if socialStatusStatus 345 f context structured socialStatusStatus strdup socialStatusStatus 346 else 347 f context structured socialStatusStatus NULL 348 349 else 35 nomaticDebugFatal NULL Nomatic modifying socialStatusStatus in an unstructured feature n 351 352 353 354const char featureGetFreeFormStatus const feature f 355 356 if featureGetIsStructured f 357 nomaticDebugFatal NULL Nomatic requested freeFormStatus from a structured feature n 358 return NULL Won t ever get here 359 else 36 return f context unstructured freeFormStatus 361 362 363 364void featureSetFreeFormStatus feature f const char freeFormStatus 365 366 if featureGetIsStructured f 367 nomaticDebugFatal NULL Nomatic modifying freeFormStatus in a structured feature n 368 else 369 if f context unstructured freeFormStatus 37 free f context unstructured freeFormStatus 371 372 if freeFormStatus 373 f context unstructured freeFormStatus strdup freeFormStatus 374 else 375 f context unstructured freeFormStatus NULL 376 377 378 379 38 381 382 383 384float calculateDistanceWeekday const int a const int b 75385 76386float dist 954 5 964 6 97 float calculateDistanceIPAddress int aIP4 int aIP3 int aIP2 int aIP1 int bIP4 int bIP3 int bIP2 int bIP1 4 7float calculateDistanceMinutes const int a const int b 4 8 4 9float dummy 41 411 minutes 412 dummy float a float b 48 6 413 return dummy dummy 414 415 416float calculateDistanceSeconds const int a const int b 417 418float dummy 419 42 seconds 421 dummy float a float b 6 422 return dummy dummy 423 424 425float calculateDistanceIPAddress const int aIP4 const int aIP3 const int aIP2 const int aIP1 const int bIP4 const int bIP3 const int bIP2 const int bIP1 98426 99427float dummy 12 448 121449 122 float calculateDistanceDNSName char a char b 45 float calculateDistanceDNSName const char a const char b 123451 124452 name address 148476 149477 15 float calculateDistanceAnyStatus char a char b 478float calculateDistanceAnyStatus const char a const char b 151479 15248 Compare NULLs 168496 169497 17 float calculateDistance feature a feature b 498float calculateDistance const feature a const feature b 171499 1725 float dist 1735 1 174 175 dist calculateDistanceMinutes a minutes b minutes 176 177 dist calculateDistanceWeekday a wday b wday 178 179 dist calculateDistanceIPAddress a ip4 a ip3 a ip2 a ip1 b ip4 b ip3 b ip2 b ip1 18 181 dist calculateDistanceDNSName a dNSName b dNSName 182 183 dist calculateDistanceAnyStatus a locationStatus b locationStatus 184 185 dist calculateDistanceAnyStatus a activityStatus b activityStatus 186 187 dist calculateDistanceAnyStatus a socialStatusStatus b socialStatusStatus 188 189 dist calculateDistanceAnyStatus a freeFormStatus b freeFormStatus 5 2 dist calculateDistanceWeekday featureGetWeekday a featureGetWeekday b 5 3 5 4 dist calculateDistanceMinutes featureGetMinutes a featureGetMinutes b 5 5 5 6 dist calculateDistanceSeconds featureGetSeconds a featureGetSeconds b 5 7 5 8 dist calculateDistanceIPAddress featureGetIP4 a 5 9 featureGetIP3 a 51 featureGetIP2 a 511 featureGetIP1 a 512 featureGetIP4 b 513 featureGetIP3 b 514 featureGetIP2 b 515 featureGetIP1 b 516 517 dist calculateDistanceDNSName featureGetDNSName a featureGetDNSName b 518 519 if featureGetIsStructured a featureGetIsStructured b 52 if featureGetIsStructured a 521 dist calculateDistanceAnyStatus featureGetLocationStatus a featureGetLocationStatus b 522 523 dist calculateDistanceAnyStatus featureGetActivityStatus a featureGetActivityStatus b 524 525 dist calculateDistanceAnyStatus featureGetSocialStatusStatus a featureGetSocialStatusStatus b 526 527 else 528 dist calculateDistanceAnyStatus featureGetFreeFormStatus a featureGetFreeFormStatus b 529 53 else 531 the context is incomparable and no additional similarity on this axis is warranted 532 dist 533 19 534 191535 return sqrt dist 194538 195539 196 feature cloneFeature feature f 197 198 return newFeature f minutes 199 f wday 2 f ip4 f ip3 f ip2 f ip1 2 1 f dNSName 2 2 f locationStatus 2 3 f activityStatus 2 4 f socialStatusStatus 2 5 f freeFormStatus 54 feature cloneFeature const feature f 541 542 if featureGetIsStructured f 543 return newFeature featureGetWeekday P f 544 featureGetMinutes P f 545 featureGetSeconds P f 546 featureGetIP4 P f 547 featureGetIP3 P f 548 featureGetIP2 P f 549 featureGetIP1 P f 55 featureGetDNSName f 551 featureGetActivityStatus f 552 featureGetLocationStatus f 553 featureGetSocialStatusStatus f 554 NULL 555 556 else 557 return newFeature featureGetWeekday P f 558 featureGetMinutes P f 559 featureGetSeconds P f 56 featureGetIP4 P f 561 featureGetIP3 P f 562 featureGetIP2 P f 563 featureGetIP1 P f 564 featureGetDNSName f 565 NULL 566 NULL 567 NULL 568 featureGetFreeFormStatus f 569 57 571 572 573void overwriteFeature feature dest const feature source 574 575 if source dest 576 if featureGetWeekday P source 577 featureSetWeekday dest featureGetWeekday source 578 579 if featureGetMinutes P source 58 featureSetMinutes dest featureGetMinutes source 581 582 if featureGetSeconds P source 583 featureSetSeconds dest featureGetSeconds source 584 585 if featureGetIP4 P source 586 featureSetIP4 dest featureGetIP4 source 587 588 if featureGetIP3 P source 589 featureSetIP3 dest featureGetIP3 source 59 591 if featureGetIP2 P source 592 featureSetIP2 dest featureGetIP2 source 593 594 if featureGetIP1 P source 595 featureSetIP1 dest featureGetIP1 source 596 597 if featureGetDNSName source 598 featureSetDNSName dest featureGetDNSName source 599 6 if featureGetIsStructured dest featureGetIsStructured source 6 1 if featureGetIsStructured source 6 2 if featureGetActivityStatus source 6 3 featureSetActivityStatus dest strdup featureGetActivityStatus source 6 4 6 5 else 6 6 featureSetActivityStatus dest NULL 6 7 6 8 if featureGetLocationStatus source 6 9 featureSetLocationStatus dest strdup featureGetLocationStatus source 61 611 else 612 featureSetLocationStatus dest NULL 613 614 if featureGetSocialStatusStatus source 615 featureSetSocialStatusStatus dest strdup featureGetSocialStatusStatus source 616 617 else 618 featureSetSocialStatusStatus dest NULL 619 62 else 621 if featureGetFreeFormStatus source 622 featureSetFreeFormStatus dest strdup featureGetFreeFormStatus source 623 624 else 625 featureSetFreeFormStatus dest NULL 626 627 628 629 else if featureGetIsStructured dest 63 And therefore source is not Structured 631 featureSetActivityStatus dest NULL 632 featureSetLocationStatus dest NULL 633 featureSetSocialStatusStatus dest NULL 634 635 featureSetIsStructured dest FALSE 636 if featureGetFreeFormStatus source 637 featureSetFreeFormStatus dest strdup featureGetFreeFormStatus source 638 639 else 64 featureSetFreeFormStatus dest NULL 641 642 643 else 644 dest is not structured and source is 645 featureSetFreeFormStatus dest NULL 646 647 featureSetIsStructured dest TRUE 648 if featureGetActivityStatus source 649 featureSetActivityStatus dest strdup featureGetActivityStatus source 65 else 651 featureSetActivityStatus dest NULL 652 653 if featureGetLocationStatus source 654 featureSetLocationStatus dest strdup featureGetLocationStatus source 655 else 656 featureSetLocationStatus dest NULL 657 658 if featureGetSocialStatusStatus source 659 featureSetSocialStatusStatus dest strdup featureGetSocialStatusStatus source 66 else 661 featureSetSocialStatusStatus dest NULL 662 663 664 2 6665 2 7666 21 669 21167 if a b 212 if a wday b wday 671 if featureGetWeekday a featureGetWeekday b 213672 return 1 214 else if a wday b wday 673 else if featureGetWeekday a featureGetWeekday b 215674 return 1 216675 217676 else 218 return a minutes b minutes 677 if featureGetMinutes a featureGetMinutes b 678 return featureGetMinutes a featureGetMinutes b 679 68 else 681 if featureGetIP4 a featureGetIP4 b 682 return featureGetIP4 a featureGetIP4 b 683 684 else 685 if featureGetIP3 a featureGetIP3 b 686 return featureGetIP3 a featureGetIP3 b 687 688 else 689 if featureGetIP2 a featureGetIP2 b 69 return featureGetIP2 a featureGetIP2 b 691 692 else 693 if featureGetIP1 a featureGetIP1 b 694 return featureGetIP1 a featureGetIP1 b 695 696 else 697 if strcmp featureGetDNSName a featureGetDNSName b 698 return strcmp featureGetDNSName a featureGetDNSName b 699 7 else 7 1 if featureGetIsStructured a featureGetIsStructured b 7 2 if featureGetIsStructured a 7 3 if strcmp featureGetLocationStatus a featureGetLocationStatus b 7 4 return strcmp featureGetLocationStatus a featureGetLocationStatus b 7 5 7 6 else 7 7 if strcmp featureGetActivityStatus a featureGetActivityStatus b 7 8 return strcmp featureGetActivityStatus a featureGetActivityStatus b 7 9 71 else 711 return strcmp featureGetSocialStatusStatus a featureGetSocialStatusStatus b 712 713 714 715 else 716 return strcmp featureGetFreeFormStatus a featureGetFreeFormStatus b 717 718 719 Can t really compare an unstructured and a structured context list so just call it equal 72 return 721 722 723 724 725 726 219727 22 728 223731 return 1 224732 225 if b 226 return 1 227 228 229 23 231 int makeFeatureCSV char s size t size feature f 733 else if b 734 return 1 735 736 else 737 return 738 739 74 741 742 743int makeFeatureCSV char s size t size const feature f 232744 233745 if f 237749 return 23875 snprintf s size 239 d d d d d d s s s s s n 24 f minutes 241 f wday 242 f ip4 f ip3 f ip2 f ip1 243 f dNSName f dNSName 244 f locationStatus f locationStatus 245 f activityStatus f activityStatus 246 f socialStatusStatus f socialStatusStatus 247 f freeFormStatus f freeFormStatus 248 249 25 251 int makeFeatureText char s size t size feature f 751 d d d d d d d s d s s s s n 752 featureGetWeekday f 753 featureGetMinutes f 754 featureGetSeconds f 755 featureGetIP4 f 756 featureGetIP3 f 757 featureGetIP2 f 758 featureGetIP1 f 759 featureGetDNSName f 76 featureGetIsStructured f 761 featureGetIsStructured f featureGetActivityStatus f featureGetActivityStatus f NULL 762 featureGetIsStructured f featureGetLocationStatus f featureGetLocationStatus f NULL 763 featureGetIsStructured f featureGetSocialStatusStatus f featureGetSocialStatusStatus f NULL 764 featureGetIsStructured f featureGetFreeFormStatus f featureGetFreeFormStatus f NULL 765 766 767 768int makeFeatureText char s size t size const feature f 252769 25377 return 254771 snprintf s size 255 Minutes d Day d IP d d d d DNS s locationStatus s activityStatus s socialStatusStatus s freeFormStatus s n 256 f minutes 257 f wday 258 f ip4 f ip3 f ip2 f ip1 259 f dNSName f dNSName 26 f locationStatus f locationStatus 261 f activityStatus f activityStatus 262 f socialStatusStatus f socialStatusStatus 263 f freeFormStatus f freeFormStatus 772 Weekday d Minutes d Seconds d IP d d d d DNS s structured d locationStatus s activityStatus s socialStatusStatus s freeFormStatus s n 773 featureGetWeekday f 774 featureGetMinutes f 775 featureGetSeconds f 776 featureGetIP4 f 777 featureGetIP3 f 778 featureGetIP2 f 779 featureGetIP1 f 78 featureGetDNSName f 781 int featureGetIsStructured f 782 featureGetIsStructured f featureGetActivityStatus f featureGetActivityStatus f NULL 783 featureGetIsStructured f featureGetLocationStatus f featureGetLocationStatus f NULL 784 featureGetIsStructured f featureGetSocialStatusStatus f featureGetSocialStatusStatus f NULL 785 featureGetIsStructured f featureGetFreeFormStatus f featureGetFreeFormStatus f NULL 264786 265787 266788void outputFeatureCSVHeader FILE file 267789 79 fprintf file Weekday 268791 fprintf file Minutes 269 fprintf file Day 792 fprintf file Seconds 27 793 fprintf file IP 271794 fprintf file DNS 795 fprintf file isStructured 796 fprintf file activityStatus 272797 fprintf file locationStatus 273 fprintf file activityStatus 274798 fprintf file socialStatusStatus 275799 fprintf file freeFormStatus n 297821 298822 299 fwrite f minutes sizeof int 1 file 3 fwrite f wday sizeof int 1 file 3 1 fwrite f ip4 sizeof int 1 file 3 2 fwrite f ip3 sizeof int 1 file 3 3 fwrite f ip2 sizeof int 1 file 3 4 fwrite f ip1 sizeof int 1 file 3 5 3 6 outputString file f dNSName 3 7 outputString file f locationStatus 3 8 outputString file f activityStatus 3 9 outputString file f socialStatusStatus 31 outputString file f freeFormStatus 311 823 fwrite featureGetWeekday P f sizeof int 1 file 824 fwrite featureGetMinutes P f sizeof int 1 file 825 fwrite featureGetSeconds P f sizeof int 1 file 826 fwrite featureGetIP4 P f sizeof int 1 file 827 fwrite featureGetIP3 P f sizeof int 1 file 828 fwrite featureGetIP2 P f sizeof int 1 file 829 fwrite featureGetIP1 P f sizeof int 1 file 83 831 outputString file featureGetDNSName f 832 833 fwrite featureGetIsStructured P f sizeof int 1 file 834 835 if featureGetIsStructured f 836 outputString file featureGetActivityStatus f 837 outputString file featureGetLocationStatus f 838 outputString file featureGetSocialStatusStatus f 839 outputString file 84 else 841 outputString file 842 outputString file 843 outputString file 844 outputString file featureGetFreeFormStatus f 845 312846 313847 317851bool inputFeatureRaw FILE input feature f 318852 853int weekday 319854int minutes 32 int wday 855int seconds 321856int ip4 ip3 ip2 ip1 322857char dNSName 255 858int isStructured 859char activityStatus 255 32386 char locationStatus 255 324 char activityStatus 255 325861char socialStatusStatus 255 326862char freeFormStatus 255 327863 328864 865 fread weekday sizeof int 1 input 866 if feof input return FALSE 329867 fread minutes sizeof int 1 input 33 868 if feof input return FALSE 331 fread wday sizeof int 1 input 869 fread seconds sizeof int 1 input 33287 if feof input return FALSE 333871 34288 343881 if inputString dNSName sizeof dNSName input return FALSE 882 883 fread isStructured sizeof bool 1 input 884 if feof input return FALSE 885 886 if inputString activityStatus sizeof activityStatus input return FALSE 344887 if inputString locationStatus sizeof locationStatus input return FALSE 345 if inputString activityStatus sizeof activityStatus input return FALSE 346888 if inputString socialStatusStatus sizeof socialStatusStatus input return FALSE 347889 if inputString freeFormStatus sizeof freeFormStatus input return FALSE 34889 349 f newFeature minutes wday ip4 ip3 ip2 ip1 dNSName locationStatus activityStatus socialStatusStatus freeFormStatus 891 f newFeature weekday minutes seconds ip4 ip3 ip2 ip1 dNSName activityStatus locationStatus socialStatusStatus freeFormStatus 35 892 char s 1 24 351893 makeFeatureText s sizeof s f 352 gaim debug misc NULL Nomatic s n s 894 nomaticDebugMisc NULL Nomatic s n s 353895 354896 return TRUE 36 9 2 3619 3 362 void 363 freeFeature feature f 364 365 free f dNSName 366 free f locationStatus 367 free f activityStatus 368 free f socialStatusStatus 369 free f freeFormStatus 9 4void freeFeature feature f 9 5 9 6 if f 9 7 free f weekday 9 8 free f minutes 9 9 free f seconds 91 free f ip4 911 free f ip3 912 free f ip2 913 free f ip1 914 free f dNSName 915 if featureGetIsStructured f 916 free f context structured activityStatus 917 free f context structured locationStatus 918 free f context structured socialStatusStatus 919 92 else 921 free f context unstructured freeFormStatus 922 923 free f isStructured 37 924 free f 371925 f NULL 372 373 374 375 feature senseFeature const char ls const char as const char ss const char ffs 926 927 928 929 93 feature senseFeature 376931 377932time t tim time NULL 383938 384939 char token 94 941 int minutes 942 minutes timeinfo tm hour 6 timeinfo tm min 943 385944 386945 int ip4 ip3 ip2 ip1 39195 char dNSName network get local system hostname 392951 393 f newFeature timeinfo tm hour 6 timeinfo tm min 394 timeinfo tm wday 395 ip4 ip3 ip2 ip1 396 dNSName 397 ls 398 as 399 ss 4 ffs 4 1 952 f newFeature 953 timeinfo tm wday 954 minutes 955 timeinfo tm sec 956 ip4 ip3 ip2 ip1 957 dNSName 958 NULL 959 NULL 96 NULL 961 NULL 962 963 nomaticDebugMisc NULL Nomatic senseFeature 2 n 964 965 966 char s 1 24 967 nomaticDebugMisc NULL Nomatic senseFeature 2 n 968 makeFeatureText s sizeof s f 969 nomaticDebugMisc NULL Nomatic senseFeature 2 n 97 nomaticDebugMisc NULL Nomatic senseFeature n s n s 971 nomaticDebugMisc NULL Nomatic senseFeature 2 n 972 973 nomaticDebugMisc NULL Nomatic senseFeature 2 n 4 2974 return f 4 3975 trunk Nomatic Gaim current client gtk plugins nomatic feature h r124 r125 55 66typedef struct 7 int minutes Minutes since midnight midnight 8 int wday Day of week 6 Sunday 9 int ip4 ip3 ip2 ip1 7 int weekday Day of week 6 Sunday 8 int minutes Minutes since midnight midnight 9 int seconds Seconds since start of current minute 1 int ip4 ip3 ip2 ip1 1 11 Components of ip address 128 195 22 217 yields 1112 ip4 128 1415 ip1 217 1516 16 char dNSName luci ics uci edu for example 17 char locationStatus 18 char activityStatus 19 char socialStatusStatus 2 char freeFormStatus 17 char dNSName luci ics uci edu for example 18 bool isStructured 19 union 2 struct 21 char activityStatus 22 char locationStatus 23 char socialStatusStatus 24 structured 25 struct 26 char freeFormStatus 27 unstructured 28 context 2129 feature 223 23 feature newFeature int minutes 24 int wday 25 int ip4 int ip3 int ip2 int ip1 31 32feature newFeature 33 const int weekday 34 const int minutes 35 const int seconds 36 const int ip4 const int ip3 const int ip2 const int ip1 2637 const char dNSName 38 const char activityStatus 2739 const char locationStatus 28 const char activityStatus 294 const char socialStatusStatus 3 const char freeFormStatus 31 41 const char freeFormStatus 3242 43int featureGetWeekday const feature f 44const int featureGetWeekday P const feature f 45void featureSetWeekday feature f const int weekday 3346 34 47int featureGetMinutes const feature f 48const int featureGetMinutes P const feature f 49void featureSetMinutes feature f const int minutes 355 36 float calculateDistanceMinutes int a int b 37 float calculateDistanceWeekday int a int b 38 float calculateDistanceIPAddress int aIP4 int aIP3 int aIP2 int aIP1 int bIP4 int bIP3 int bIP2 int bIP1 39 float calculateDistanceDNSName char a char b 4 float calculateDistanceAnyStatus char a char b 51int featureGetSeconds const feature f 52const int featureGetSeconds P const feature f 53void featureSetSeconds feature f const int seconds 4154 42 float calculateDistance feature a feature b 55int featureGetIP4 const feature f 56const int featureGetIP4 P const feature f 57void featureSetIP4 feature f const int ip4 4358 44 feature cloneFeature feature f 59int featureGetIP3 const feature f 6 const int featureGetIP3 P const feature f 61void featureSetIP3 feature f const int ip3 62 63int featureGetIP2 const feature f 64const int featureGetIP2 P const feature f 65void featureSetIP2 feature f const int ip2 66 67int featureGetIP1 const feature f 68const int featureGetIP1 P const feature f 69void featureSetIP1 feature f const int ip1 7 71void featureSetIP feature f const int ip4 const int ip3 const int ip2 const int ip1 72 73const char featureGetDNSName const feature f 74void featureSetDNSName feature f const char DNSName 75 76bool featureGetIsStructured const feature const f 77const bool featureGetIsStructured P const feature f 78void featureSetIsStructured feature f const bool isStructured 79 8 const char featureGetActivityStatus const feature f 81void featureSetActivityStatus feature f const char activityStatus 82 83const char featureGetLocationStatus const feature f 84void featureSetLocationStatus feature f const char locationStatus 85 86const char featureGetSocialStatusStatus const feature f 87void featureSetSocialStatusStatus feature f const char socialStatusStatus 88 89const char featureGetFreeFormStatus const feature f 9 void featureSetFreeFormStatus feature f const char freeFormStatus 91 92float calculateDistanceWeekday const int a const int b 93float calculateDistanceMinutes const int a const int b 94float calculateDistanceSeconds const int a const int b 95float calculateDistanceIPAddress const int aIP4 const int aIP3 const int aIP2 const int aIP1 const int bIP4 const int bIP3 const int bIP2 const int bIP1 96float calculateDistanceDNSName const char a const char b 97float calculateDistanceAnyStatus const char a const char b 98 99float calculateDistance const feature a const feature b 1 1 1feature cloneFeature const feature f 1 2void overwriteFeature feature dest const feature source 451 3 461 4int sortByTimeFunction feature a feature b 471 5 48 int makeFeatureCSV char s size t size feature f 49 int makeFeatureText char s size t size feature f 1 6int makeFeatureCSV char s size t size const feature f 1 7int makeFeatureText char s size t size const feature f 5 1 8 511 9void outputFeatureCSVHeader FILE file 57115void freeFeature feature f 58116 59 feature senseFeature const char ls const char as const char ss const char ffs 6 117feature senseFeature 61118 62119 endif FEATURE H trunk Nomatic Gaim current client gtk plugins nomatic featureCollection c r124 r125 99 1 1 Internal declarations 11 bool myFeatureCollectionOutputFunction feature train classification c FILE dataFile 12 bool findNearestNeighborFeatureHelper feature train classification c feature test 11bool myFeatureCollectionOutputFunction feature train FILE dataFile 12bool findNearestNeighborFeatureHelper feature train feature test 1313 1414 2121 NULL 2222 GDestroyNotify freeFeature 23 GDestroyNotify freeClassification 23 GDestroyNotify freeFeature 2424 2525 3131 dataFile fopen nomaticDataFile txt wb 3232 if dataFile NULL 33 gaim debug fatal NULL Nomatic Unable to open a data file for storing feature tree n 33 nomaticDebugFatal NULL Nomatic Unable to open a data file for storing feature tree n 3434 3535 else 36 gaim debug misc NULL Nomatic Opened a data file for storing feature tree n 36 nomaticDebugMisc NULL Nomatic Opened a data file for storing feature tree n 3737 3838 4646 4747 48 void storeFeature feature f classification c 48void storeFeature const feature f 4949 5 if c NULL 51 gaim debug fatal NULL Nomatic Can t store a null classification n 5 nomaticDebugMisc NULL Nomatic Tree size before d n g tree nnodes featureCollection 51 char s 1 24 52 makeFeatureText s sizeof s f 53 nomaticDebugMisc NULL Nomatic Store feature s n s 54 55 if f 56 nomaticDebugFatal NULL Nomatic Can t store a null feature n 5257 5358 else 59 nomaticDebugMisc NULL Nomatic Tree size before d n g tree nnodes featureCollection 546 If there is already an entry with the same features but maybe a different context then overwrite it after freeing the memory 5561 g tree remove featureCollection f 56 g tree insert featureCollection f c 62 Ideally we would put the same object in twice not two identical clones but the deallocation procedure would be messed up if we did 63 g tree insert featureCollection cloneFeature f cloneFeature f 64 nomaticDebugMisc NULL Nomatic Tree size after d n g tree nnodes featureCollection 5765 5866 5967 6 void featureCollectionAddTrainingData feature f classification c 68void featureCollectionAddTrainingData const feature f 6169 62 63 if f c 64 storeFeature f c 7 if f 71 storeFeature f 6572 6673 7178 7279 if featureCollection 73 gaim debug fatal NULL Nomatic FeatureCollection is null n 8 nomaticDebugFatal NULL Nomatic FeatureCollection is null n 7481 7582 if completion gtk entry get completion GTK ENTRY location 8996float bestScore 9 97feature bestF 91 classification bestC 9298 9399void 961 2 bestScore 1 971 3 bestF NULL 98 bestC NULL 991 4 1 1 5 1 1 classification findNearestNeighborFeature feature f 1 6feature findNearestNeighborFeature feature f 1 21 7 1 31 8 findNearestNeighborFeatureHelperInit 1 41 9 g tree foreach featureCollection GTraverseFunc findNearestNeighborFeatureHelper f 1 5 return bestC 11 return bestF 1 6111 1 7112 1 8113 1 9114 11 bool findNearestNeighborFeatureHelper feature train classification c feature test 115bool findNearestNeighborFeatureHelper feature train feature test 111116 112 if train c test 117 if train test 113118 float d calculateDistance train test 114119 if bestScore d bestScore 11512 bestScore d 116121 bestF train 117 bestC c 118 gaim debug misc NULL Nomatic finding NN d d ip d d d d s n bestF wday bestF minutes bestF ip4 bestF ip3 bestF ip2 bestF ip1 bestF phrase 122 nomaticDebugMisc NULL Nomatic finding NN d d ip d d d d s n bestF wday bestF minutes bestF ip4 bestF ip3 bestF ip2 bestF ip1 bestF phrase 119123 12 124 121125 else 122 gaim debug fatal NULL Nomatic Something went wrong with the data structure in findNearestNeighbor n 126 nomaticDebugFatal NULL Nomatic Something went wrong with the data structure in findNearestNeighbor n 123127 124128 return FALSE 128132 129133 13 bool myFeatureCollectionOutputFunction feature train classification c FILE dataFile 134bool myFeatureCollectionOutputFunction feature f FILE dataFile 131135 132 if train c 133 outputFeatureRaw dataFile train 134 outputClassificationRaw dataFile c 136 if f 137 outputFeatureRaw dataFile f 138 139 char s 1 24 14 makeFeatureText s sizeof s f 141 142 nomaticDebugMisc NULL Nomatic Just output a feature s n s 135143 136144 else 137 gaim debug fatal NULL Nomatic Something went wrong with the data structure n 145 nomaticDebugFatal NULL Nomatic Something went wrong with the data structure n 138146 139147 return FALSE trunk Nomatic Gaim current client gtk plugins nomatic featureCollection h r124 r125 55 66 include feature h 7 include classification h 7 8extern GTree featureCollection 89 91 void featureCollectionInit 1 11void featureCollectionShutdown 1112 12 void storeFeature feature fv classification c 13 void featureCollectionAddTrainingData feature f classification c 13void storeFeature const feature fv 14void featureCollectionAddTrainingData const feature f 1415 15 classification findNearestNeighborFeature feature fv 16feature findNearestNeighborFeature feature f 1617void featureCollectionTransferToCompletionField GtkWidget location GtkWidget activity GtkWidget socialStatus GtkWidget freeForm 1718 trunk Nomatic Gaim current client gtk plugins nomatic myUtilities c r124 r125 44 include myUtilities h 55 6 void outputString FILE f char p 6void outputString FILE f const char p 77 88char c x 3535 3636 37 38void nomaticDebugMisc void a const char format 39 4 va list args 41 42 va start args format 43 vfprintf stderr format args 44 va end args 45 46 47 48 49void nomaticDebugFatal void a const char format 5 51 va list args 52 53 va start args format 54 vfprintf stderr format args 55 va end args 56 exit 57 58 trunk Nomatic Gaim current client gtk plugins nomatic myUtilities h r124 r125 1414 endif 1515 16 void outputString FILE f char p 16void outputString FILE f const char p 1717bool inputString char string size t max FILE f 18void nomaticDebugMisc void a const char format 19void nomaticDebugFatal void a const char format 182 1921 trunk Nomatic Gaim current client gtk plugins nomatic nomatic c r124 r125 22 Research Nomatic Research 33 Title GAIM Nomatic Plugin 4 Authors Dr Patterson 4 Authors Don Patterson 55 Nick Noack 66 Kah Liu 3838 include feature h 3939 include featureCollection h 4 include classification h 414 include networkHelper h 4241 717 7271 73 static char freeFormStatus NULL 74 static char locationStatus NULL 75 static char activityStatus NULL 76 static char socialStatusStatus NULL 72static bool usingStructured TRUE 73static char activityStatus NULL 74static char locationStatus NULL 75static char socialStatusStatus NULL 76static char freeFormStatus NULL 7777 7878 Returns true if there is a change 79 bool setParse char status const char p 8 79bool setStatus char dest const char source const bool usingStructuredNow 8 81bool ret FALSE 82 8183 Degenerate case 82 if status NULL 83 gaim debug fatal NULL Nomatic setParse called with NULL parameter n 84 if dest NULL 85 nomaticDebugFatal NULL Nomatic setStatus called with NULL parameter n 86 return FALSE We shouldn t ever get here 8487 8588 86 if status NULL 87 if p NULL 88 return FALSE 89 Deal with NULL strings 9 if dest NULL 91 if source NULL 92 ret FALSE 8993 9 94 else 91 status strdup p 92 return TRUE 95 dest strdup source 96 ret TRUE 9397 9498 9599 else 96 if p NULL 97 free status 98 status NULL 99 return TRUE 1 if source NULL 1 1 free dest 1 2 dest NULL 1 3 ret TRUE 1 1 4 1 11 5 else 1 2 if strcmp status p 1 3 return FALSE 1 6 if strcmp dest source 1 7 ret FALSE 1 41 8 1 51 9 else 1 6 free status 1 7 status strdup p 1 8 return TRUE 11 free dest 111 dest strdup source 112 ret TRUE 1 9113 11 114 111115 116 117 if getUsingStructured usingStructuredNow 118 setUsingStructured usingStructuredNow 119 ret TRUE 12 121 122 if ret 123 Update status after a change 124 char newStatus makePresencePhrase 125 setPresencePhrase newStatus 126 free newStatus 127 128 129 return ret 11213 113131 114 bool setFreeFormStatus const char p 115 116 return setParse freeFormStatus p 132bool getUsingStructured 133 134 return usingStructured 135 136 137void setUsingStructured const bool usingStructuredNow 138 139 usingStructured usingStructuredNow 14 141 142bool setActivityStatus const char p bool usingStructuredNow 143 144 return setStatus activityStatus p usingStructuredNow 145 146 147const char getActivityStatus 148 149 return activityStatus 15 151 152bool setLocationStatus const char p bool usingStructuredNow 153 154 return setStatus locationStatus p usingStructuredNow 155 156 157const char getLocationStatus 158 159 return locationStatus 16 161 162bool setSocialStatusStatus const char p bool usingStructuredNow 163 164 return setStatus socialStatusStatus p usingStructuredNow 165 166 167const char getSocialStatusStatus 168 169 return socialStatusStatus 17 171 172bool setFreeFormStatus const char p bool usingStructuredNow 173 174 return setStatus freeFormStatus p usingStructuredNow 117175 118176 119177const char getFreeFormStatus 12 178 121 return freeFormStatus 122 123 124 bool setParseLocation const char p 125 126 return setParse locationStatus p 127 128 129 const char getParseLocation 13 131 return locationStatus 132 133 134 bool setParseActivity const char p 135 136 return setParse activityStatus p 137 138 139 const char getParseActivity 14 141 return activityStatus 142 143 144 bool setParseSocialStatus const char p 145 146 return setParse socialStatusStatus p 147 148 149 const char getParseSocialStatus 15 151 return socialStatusStatus 152 153 154 155 char makeStatusFromStoredParse 156 157 return makeStatusFromParse locationStatus activityStatus socialStatusStatus 158 159 16 char makeStatusFromParse char l char a char ss 179 return freeFormStatus 18 181 182 183char makePresencePhrase 161184 162185char string 164187 string char calloc 1 24 sizeof char 165188 166 snprintf string 1 24 sizeof char s s s l a ss 167 189 if getUsingStructured 19 snprintf string 1 24 sizeof char s s s getLocationStatus getActivityStatus getSocialStatusStatus 191 192 else 193 snprintf string 1 24 sizeof char s getFreeFormStatus 194 168195 return string 169196 17 197 171198 172 void setCurrentStatus const gchar phrase 199void setPresencePhrase const gchar phrase 1732 1742 1GaimSavedStatus status NULL 18 2 7 1812 8 182 void predictCurrentStatus 2 9 If the last call was longer than MIN PREDICT FREQUENCY ago then 21 sense the sensors available 211 use that info to predict the current status 212 then actually set status to that 213void predictAndSetStatus feature knownFeatures 183214 184215static int lastCheck 186217time t tim time NULL 187218struct tm timeinfo localtime tim http www cplusplus com ref ctime tm html 188 feature f 189 classification nn 19 191 219feature f nn 22 221 Don t predict Current Status more often than desired as it might take lots of resources 192222 if abs timeinfo tm min lastCheck MIN PREDICT FREQUENCY 193223 lastCheck timeinfo tm min 194224 195 f senseFeature getParseLocation getParseActivity getParseSocialStatus getFreeFormStatus 225 f senseFeature 226 nomaticDebugMisc NULL Nomatic predictAndSetStatus n 196227 if f NULL 197 gaim debug misc NULL Nomatic Sensing status minutes d day d ip d d d d n f minutes f wday f ip4 f ip3 f ip2 f ip1 228 nomaticDebugMisc NULL Nomatic predictAndSetStatus 5 n 229 overwriteFeature f knownFeatures 23 nomaticDebugMisc NULL Nomatic predictAndSetStatus 1 n 231 nomaticDebugMisc NULL Nomatic Sensing status minutes d day d ip d d d d n f minutes f wday f ip4 f ip3 f ip2 f ip1 198232 nn findNearestNeighborFeature f 233 nomaticDebugMisc NULL Nomatic predictAndSetStatus 2 n 199234 freeFeature f 235 nomaticDebugMisc NULL Nomatic predictAndSetStatus 3 n 2 236 2 1 if nn NULL 2 2 Probably because there is nothing to train on 237 if nn 238 Probably null because there is nothing to train on 239 in which case leave status the way it is 2 324 2 4241 else 2 5 if nn isFreeForm 2 6 setCurrentStatus nn context freeForm 2 7 gtk entry set text GTK ENTRY freeFormTextbox nn context freeForm 2 8 gaim debug misc NULL Nomatic Predicting by NN Free Form s n nn context freeForm 242 nomaticDebugMisc NULL Nomatic predictAndSetStatus 4 n 243 if featureGetIsStructured nn 244 setActivityStatus featureGetActivityStatus nn featureGetIsStructured nn 245 gtk entry set text GTK ENTRY activityTextbox featureGetActivityStatus nn 246 247 setLocationStatus featureGetLocationStatus nn featureGetIsStructured nn 248 gtk entry set text GTK ENTRY locationTextbox featureGetLocationStatus nn 249 25 setSocialStatusStatus featureGetSocialStatusStatus nn featureGetIsStructured nn 251 gtk entry set text GTK ENTRY socialStatusTextbox featureGetSocialStatusStatus nn 2 9252 21 253 else 211 setParseLocation nn context parsed location 212 gtk entry set text GTK ENTRY locationTextbox nn context parsed location 213 214 setParseActivity nn context parsed activity 215 gtk entry set text GTK ENTRY activityTextbox nn context parsed activity 216 217 setParseSocialStatus nn context parsed socialStatus 218 gtk entry set text GTK ENTRY socialStatusTextbox nn context parsed socialStatus 219 22 char s makeStatusFromStoredParse 221 setCurrentStatus s 222 gaim debug misc NULL Nomatic Predicting by NN Parsed s n s 223 free s 254 setFreeFormStatus featureGetFreeFormStatus nn featureGetIsStructured nn 255 gtk entry set text GTK ENTRY freeFormTextbox featureGetFreeFormStatus nn 224256 225 257 char s makePresencePhrase 258 nomaticDebugMisc NULL Nomatic Predicting by NN s s n getUsingStructured Structured Unstructured s 259 free s 22626 261 262 else 263 nomaticDebugMisc NULL Nomatic Sensing failed n 227264 228265 235272 GaimStatus status void data 236273 237 gaim debug misc NULL Nomatic buddy status changed s s to s n 274 nomaticDebugMisc NULL Nomatic buddy status changed s s to s n 238275 buddy name gaim status get id old status 239276 gaim status get id status 24 predictCurrentStatus 277 predictAndSetStatus NULL 241278 242279 245282 void data 246283 247 gaim debug misc NULL Nomatic buddy idle changed s s n 284 nomaticDebugMisc NULL Nomatic buddy idle changed s s n 248285 buddy name old idle unidled idled 249 predictCurrentStatus 286 predictAndSetStatus NULL 25 287 251288 25329 buddy signed on cb GaimBuddy buddy void data 254291 255 gaim debug misc NULL Nomatic buddy signed on s n buddy name 256 predictCurrentStatus 292 nomaticDebugMisc NULL Nomatic buddy signed on s n buddy name 293 predictAndSetStatus NULL 257294 258295 26 297buddy signed off cb GaimBuddy buddy void data 261298 262 gaim debug misc NULL Nomatic buddy signed off s n buddy name 263 predictCurrentStatus 299 nomaticDebugMisc NULL Nomatic buddy signed off s n buddy name 3 predictAndSetStatus NULL 2643 1 2653 2 2673 4buddy added cb GaimBuddy buddy void data 2683 5 269 gaim debug misc NULL Nomatic buddy added cb s n gaim buddy get name buddy 27 predictCurrentStatus 3 6 nomaticDebugMisc NULL Nomatic buddy added cb s n gaim buddy get name buddy 3 7 predictAndSetStatus NULL 2713 8 2723 9 274311buddy removed cb GaimBuddy buddy void data 275312 276 gaim debug misc NULL Nomatic buddy removed cb s n gaim buddy get name buddy 277 predictCurrentStatus 313 nomaticDebugMisc NULL Nomatic buddy removed cb s n gaim buddy get name buddy 314 predictAndSetStatus NULL 278315 279316 281318buddy icon changed cb GaimBuddy buddy 282319 283 gaim debug misc signals test buddy icon changed s n 32 nomaticDebugMisc signals test buddy icon changed s n 284321 gaim buddy get name buddy 285 predictCurrentStatus 322 predictAndSetStatus NULL 286323 287324 289326signed on cb GaimConnection gc void data 29 327 291 gaim debug misc NULL Nomatic signed on s n 328 nomaticDebugMisc NULL Nomatic signed on s n 292329 gaim account get username gaim connection get account gc 29333 296333signed off cb GaimConnection gc void data 297334 298 gaim debug misc NULL Nomatic signed off s n 335 nomaticDebugMisc NULL Nomatic signed off s n 299336 gaim account get username gaim connection get account gc 3 337 31 347gboolean plugin load GaimPlugin plugin 311348 312 feature fv NULL 313 classification c NULL 314 349feature f NULL 35 bool usingStructured FALSE 351 352 setFreeFormStatus at home using Nomatic Gaim by myself usingStructured 353 setLocationStatus at home usingStructured 354 setActivityStatus using Nomatic Gaim usingStructured 355 setSocialStatusStatus by myself usingStructured TRUE 356 315357 Create data storage 316358 featureCollectionInit 319361 FILE dataFile fopen nomaticDataFile txt rb 32 362 if dataFile NULL 321 gaim debug misc NULL Nomatic Unable to open stored data file for Nomatic n 363 nomaticDebugMisc NULL Nomatic Unable to open stored data file for Nomatic n 322364 323365 else 324 gaim debug misc NULL Nomatic Opened a stored data file for Nomatic n 366 nomaticDebugMisc NULL Nomatic Opened a stored data file for Nomatic n 325367 while feof dataFile 326 if inputFeatureRaw dataFile fv 327 if inputClassificationRaw dataFile c 328 storeFeature fv c 329 368 if inputFeatureRaw dataFile f 369 storeFeature f 33 37 371 freeFeature f 331372 332373 fclose dataFile 345386 346387 featureCollectionShutdown 347 348388 return TRUE 349389 354394 if strcmp data key press event 355395 if event keyval GDK Return 356 gaim debug misc NULL Nomatic Classification Updated from return key n 396 nomaticDebugMisc NULL Nomatic Classification Updated from return key n 357397 return TRUE 358398 3654 5 3664 6 if strcmp data focus out event 367 gaim debug misc NULL Nomatic Classification Updated from focus out event n 4 7 nomaticDebugMisc NULL Nomatic Classification Updated from focus out event n 3684 8 return TRUE 3694 9 388428 path gtk tree path new from indices selection 1 389429 if gtk tree model get iter GTK TREE MODEL store iter path 39 gaim debug fatal NULL Nomatic Got a bad path selection d n selection 43 if selection 431 nomaticDebugMisc NULL Nomatic Selected an item from an empty list Ignoring this n 432 433 else 434 nomaticDebugFatal NULL Nomatic Got a bad path selection d n selection 435 391436 392437 else 393438 char str data 394439 gtk tree model get GTK TREE MODEL store iter str data 1 395 gaim debug misc NULL Nomatic Completion Selected s n str data 44 nomaticDebugMisc NULL Nomatic Completion Selected s n str data 396441 gtk entry set text GTK ENTRY entry str data 397442 g free str data 4 2447 4 3448 4 4 static void updateStatusFromFreeForm const gchar phrase 4 5 4 6 setFreeFormStatus phrase 4 7 setCurrentStatus getFreeFormStatus 449void setFreeFormStatusFromUI const char newStatus bool usingStructuredNow GtkEntryCompletion completion 45 451 setFreeFormStatus newStatus usingStructuredNow 452 addCompletionString completion newStatus 453 454 Add this instance to the training data 455 feature x newFeature 456 NULL 457 NULL 458 NULL 459 NULL NULL NULL NULL 46 NULL 461 NULL NULL NULL 462 getFreeFormStatus 463 feature f senseFeature x 464 featureCollectionAddTrainingData f 465 466 freeFeature x 467 freeFeature f 4 8468 4 9469 419479 g free v1 42 48 421 updateStatusFromFreeForm value 481 Get the widget box 482 GtkEntryCompletion completion 483 completion gtk entry get completion GTK ENTRY entry 484 485 setFreeFormStatusFromUI value FALSE completion 422486 return FALSE 423487 424488 425489 This function is triggered when the Nomatic Free Form Status is updated 426 static gboolean setClassificationFreeForm GtkEntry entry GdkEventKey event gpointer data 49 static gboolean setFreeFormStatusCB GtkEntry entry GdkEventKey event gpointer data 427491 428492gboolean handleIt FALSE 454518 completion gtk entry get completion GTK ENTRY entry 455519 phrase gchar gtk entry get text GTK ENTRY entry 456 addCompletionString completion phrase 457 458 Change the displayed status if it s not empty 459 if strcmp phrase 46 updateStatusFromFreeForm phrase 461 462 463 Add this instance to the training data 464 classification c newClassificationFreeForm phrase 465 featureCollectionAddTrainingData senseFeature NULL NULL NULL getFreeFormStatus c 466 freeClassification c 52 521 setFreeFormStatusFromUI phrase FALSE completion 522 467523 468524 return FALSE 469525 47 526 471 static void updateStatusFromLocation const gchar phrase 472 473 setParseLocation phrase 474 char newStatus makeStatusFromStoredParse 475 setCurrentStatus newStatus 476 free newStatus 477 527void setLocationStatusFromUI const char newStatus bool usingStructuredNow GtkEntryCompletion completion 528 529 setLocationStatus newStatus usingStructuredNow 53 addCompletionString completion newStatus 531 532 Add this instance to the training data 533 feature x newFeature NULL 534 NULL 535 NULL 536 NULL NULL NULL NULL 537 NULL 538 NULL 539 getLocationStatus 54 NULL 541 NULL 542 feature f senseFeature x 543 featureCollectionAddTrainingData f 544 545 freeFeature f 546 freeFeature x 547 548 478549 47955 static gboolean matchSelectedLocationCB GtkEntryCompletion widget GtkTreeModel model GtkTreeIter iter GtkEntry entry 488559 g free v1 48956 49 updateStatusFromLocation value 561 Get the widget box 562 GtkEntryCompletion completion 563 completion gtk entry get completion GTK ENTRY entry 564 565 Update everything 566 setLocationStatusFromUI value TRUE completion 491567 return FALSE 492568 493569 49457 This function is triggered when the Nomatic Location Status is updated 495 static gboolean setClassificationLocation GtkEntry entry GdkEventKey event gpointer data 571static gboolean setLocationStatusCB GtkEntry entry GdkEventKey event gpointer data 496572 497573gboolean handleIt FALSE 5 3579 handleIt handleIt isFocusOutEvent event data 5 458 5 5 gaim debug misc NULL Nomatic Callback n 5 6 gaim debug misc NULL Nomatic last key d current key d event is s n lastKey event keyval data 581 nomaticDebugMisc NULL Nomatic Callback n 582 nomaticDebugMisc NULL Nomatic last key d current key d event is s n lastKey event keyval data 5 7583 This is a wierd corner case when the completion list is empty the user enters some text and then hits tab 5 8584 if lastKey GDK Tab event keyval isFocusOutEvent event data 5256 1 completion gtk entry get completion GTK ENTRY entry 5266 2 phrase gchar gtk entry get text GTK ENTRY entry 527 addCompletionString completion phrase 528 529 Change the displayed status 53 updateStatusFromLocation phrase 531 532 Add this instance to the training data 533 classification c newClassificationParsed getParseLocation getParseActivity getParseSocialStatus 534 featureCollectionAddTrainingData senseFeature getParseLocation getParseActivity getParseSocialStatus NULL c 535 freeClassification c 6 3 6 4 setLocationStatusFromUI phrase TRUE completion 6 5 5366 6 5376 7 return FALSE 5386 8 5396 9 54 541 542 static void updateStatusFromActivity const gchar phrase 543 544 setParseActivity phrase 545 char newStatus makeStatusFromStoredParse 546 setCurrentStatus newStatus 547 free newStatus 548 61 void setActivityStatusFromUI const char newStatus bool usingStructuredNow GtkEntryCompletion completion 611 612 setActivityStatus newStatus usingStructuredNow 613 addCompletionString completion newStatus 614 615 Add this instance to the training data 616 feature x newFeature NULL 617 NULL 618 NULL 619 NULL NULL NULL NULL 62 NULL 621 getActivityStatus 622 NULL 623 NULL 624 NULL 625 feature f senseFeature x 626 featureCollectionAddTrainingData f 627 628 freeFeature f 629 freeFeature x 63 631 549632 55 633static gboolean matchSelectedActivityCB GtkEntryCompletion widget GtkTreeModel model GtkTreeIter iter GtkEntry entry 559642 g free v1 56 643 561 updateStatusFromActivity value 644 Get the widget box 645 GtkEntryCompletion completion 646 completion gtk entry get completion GTK ENTRY entry 647 648 Update everything 649 setActivityStatusFromUI value TRUE completion 56265 return FALSE 563651 564652 565653 This function is triggered when the Nomatic Activity Status is updated 566 static gboolean setClassificationActivity GtkEntry entry GdkEventKey event gpointer data 654static gboolean setActivityStatusCB GtkEntry entry GdkEventKey event gpointer data 567655 568656gboolean handleIt FALSE 594682 completion gtk entry get completion GTK ENTRY entry 595683 phrase gchar gtk entry get text GTK ENTRY entry 596 addCompletionString completion phrase 597 598 Change the displayed status 599 updateStatusFromActivity phrase 6 6 1 Add this instance to the training data 6 2 classification c newClassificationParsed getParseLocation getParseActivity getParseSocialStatus 6 3 featureCollectionAddTrainingData senseFeature getParseLocation getParseActivity getParseSocialStatus NULL c 6 4 freeClassification c 684 685 setActivityStatusFromUI phrase TRUE completion 686 6 5687 6 6688 return FALSE 6 7689 6 869 6 9 static void updateStatusFromSocialStatus const gchar phrase 61 611 setParseSocialStatus phrase 612 char newStatus makeStatusFromStoredParse 613 setCurrentStatus newStatus 614 free newStatus 615 616 617 static gboolean matchSelectedSocialStatusCB GtkEntryCompletion widget GtkTreeModel model GtkTreeIter iter GtkEntry entry 691 692void setSocialStatusStatusFromUI const char newStatus bool usingStructuredNow GtkEntryCompletion completion 693 694 setSocialStatusStatus newStatus usingStructuredNow 695 addCompletionString completion newStatus 696 697 Add this instance to the training data 698 feature x newFeature NULL 699 NULL 7 NULL 7 1 NULL NULL NULL NULL 7 2 NULL 7 3 NULL 7 4 NULL 7 5 getSocialStatusStatus 7 6 NULL 7 7 feature f senseFeature x 7 8 featureCollectionAddTrainingData f 7 9 71 freeFeature f 711 freeFeature x 712 713 714 715static gboolean matchSelectedSocialStatusStatusCB GtkEntryCompletion widget GtkTreeModel model GtkTreeIter iter GtkEntry entry 618716 619717GValue v1 626724 g free v1 627725 628 updateStatusFromSocialStatus value 726 Get the widget box 727 GtkEntryCompletion completion 728 completion gtk entry get completion GTK ENTRY entry 729 73 Update everything 731 setSocialStatusStatusFromUI value TRUE completion 629732 return FALSE 63 733 631734 632735 This function is triggered when the Nomatic Social Status is updated 633 static gboolean 634 setClassificationSocialStatus GtkEntry entry GdkEventKey event gpointer data 736static gboolean setSocialStatusStatusCB GtkEntry entry GdkEventKey event gpointer data 635737 636738gboolean handleIt FALSE 662764 completion gtk entry get completion GTK ENTRY entry 663765 phrase gchar gtk entry get text GTK ENTRY entry 664 addCompletionString completion phrase 665 666 Change the displayed status 667 updateStatusFromSocialStatus phrase 668 669 classification c newClassificationParsed getParseLocation getParseActivity getParseSocialStatus 67 featureCollectionAddTrainingData senseFeature getParseLocation getParseActivity getParseSocialStatus NULL c 671 freeClassification c 766 767 setSocialStatusStatusFromUI phrase TRUE completion 768 672769 67377 return FALSE 719816 static void sendMap char null 72 817 721 gaim debug misc NULL my ip s gaim network get my ip 1 818 nomaticDebugMisc NULL my ip s gaim network get my ip 1 722819 72382 788885 Textbox Location 789886 locationTextbox gtk entry new 79 gtk entry set text GTK ENTRY locationTextbox at home 791 setParseLocation gtk entry get text GTK ENTRY locationTextbox 887 gtk entry set text GTK ENTRY locationTextbox getLocationStatus 792888 gtk widget set size request locationTextbox 3 2 793889 gtk box pack start GTK BOX hbox text locationTextbox TRUE TRUE 797893 798894 g signal connect G OBJECT locationTextbox key press event 799 G CALLBACK setClassificationLocation key press event 895 G CALLBACK setLocationStatusCB key press event 8 896 8 1897 g signal connect G OBJECT locationTextbox focus out event 8 2 G CALLBACK setClassificationLocation focus out event 898 G CALLBACK setLocationStatusCB focus out event 8 3899 8 49 8 69 2 Textbox Activity 8 79 3 activityTextbox gtk entry new 8 8 gtk entry set text GTK ENTRY activityTextbox using Nomatic Gaim 8 9 setParseActivity gtk entry get text GTK ENTRY activityTextbox 9 4 gtk entry set text GTK ENTRY activityTextbox getActivityStatus 81 9 5 gtk widget set size request activityTextbox 3 2 8119 6 gtk box pack start GTK BOX hbox text activityTextbox TRUE TRUE 81591 816911 g signal connect G OBJECT activityTextbox key press event 817 G CALLBACK setClassificationActivity key press event 912 G CALLBACK setActivityStatusCB key press event 818913 819914 g signal connect G OBJECT activityTextbox focus out event 82 G CALLBACK setClassificationActivity focus out event 915 G CALLBACK setActivityStatusCB focus out event 821916 822917 Textbox Social Status 823918 socialStatusTextbox gtk entry new 824 gtk entry set text GTK ENTRY socialStatusTextbox by myself 825 setParseSocialStatus gtk entry get text GTK ENTRY socialStatusTextbox 919 gtk entry set text GTK ENTRY socialStatusTextbox getSocialStatusStatus 82692 gtk widget set size request socialStatusTextbox 3 2 827921 gtk box pack start GTK BOX hbox text socialStatusTextbox TRUE TRUE 829923 completion initializeTextBoxWithCompletionField socialStatusTextbox 83 924 831 g signal connect G OBJECT completion match selected G CALLBACK matchSelectedSocialStatusCB socialStatusTextbox 925 g signal connect G OBJECT completion match selected G CALLBACK matchSelectedSocialStatusStatusCB socialStatusTextbox 832926 833927 g signal connect G OBJECT socialStatusTextbox key press event 834 G CALLBACK setClassificationSocialStatus key press event 928 G CALLBACK setSocialStatusStatusCB key press event 835929 83693 g signal connect G OBJECT socialStatusTextbox focus out event 837 G CALLBACK setClassificationSocialStatus focus out event 931 G CALLBACK setSocialStatusStatusCB focus out event 838932 839933 Elements of hbox cusLab Label of Custom Message 852946 gtk entry set text GTK ENTRY freeFormTextbox 853947 If there is no status initialize it to something 854 updateStatusFromSocialStatus getParseSocialStatus 855948 856949 85795 858 setFreeFormStatus gtk entry get text GTK ENTRY freeFormTextbox 859951 gtk box pack start GTK BOX hbox cus freeFormTextbox TRUE TRUE 86 952 completion initializeTextBoxWithCompletionField freeFormTextbox 869961 87 962 g signal connect G OBJECT freeFormTextbox key press event 871 G CALLBACK setClassificationFreeForm key press event 963 G CALLBACK setFreeFormStatusCB key press event 872964 873965 g signal connect G OBJECT freeFormTextbox focus out event 874 G CALLBACK setClassificationFreeForm focus out event 966 G CALLBACK setFreeFormStatusCB focus out event 875967 876968 9321 24 gtk toggle button set active GTK TOGGLE BUTTON button TRUE 9331 25 934 gaim debug misc NULL Nomatic Predicting Current Status at startup n 935 predictCurrentStatus 1 26 nomaticDebugMisc NULL Nomatic Predicting Current Status at startup n 1 27 predictAndSetStatus NULL 9361 28 9371 29 Attach to signals 96 1 52 gaim signal connect conn handle signed off 9611 53 plugin GAIM CALLBACK signed off cb NULL 1 54 9621 55 9631 56 9961 89init plugin GaimPlugin plugin 9971 9 Add preferences here when its time 998 freeFormStatus strdup I m busy 999 locationStatus strdup at home 1 activityStatus strdup using Nomatic Gaim 1 1 socialStatusStatus strdup by myself 1 21 91 1 31 92 trunk Nomatic Gaim current client gtk plugins nomatic nomatic h r116 r125 55 66 Predict no more than once every X minutes 7 define MIN PREDICT FREQUENCY 1 7 define MIN PREDICT FREQUENCY 88 99 gboolean plugin load GaimPlugin plugin 1 11 char makeStatusFromStoredParse 12 char makeStatusFromParse char l char a char ss 131 1411 535 5451 52char makePresencePhrase 53void setPresencePhrase const char phrase 54 55bool getUsingStructured 56void setUsingStructured const bool usingStructuredNow 57 58bool setActivityStatus const char p bool usingStructuredNow 59const char getActivityStatus 6 61bool setLocationStatus const char p bool usingStructuredNow 62const char getLocationStatus 63 64bool setSocialStatusStatus const char p bool usingStructuredNow 65const char getSocialStatusStatus 66 67bool setFreeFormStatus const char p bool usingStructuredNow 68const char getFreeFormStatus 5569 567 Note See TracChangeset for help on using the changeset viewer Download in other formats Unified Diff Zip Archive Powered by Trac 1 1 By Edgewall Software All content copyright 2 7 2 8 by LUCI http luci ics uci edu ", "_id": "http://djp3-pc2.ics.uci.edu/LUCICodeRepository/nomaticIM/changeset/125", "title": "\n      changeset 125 \u2013 nomatic*im\n    ", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n  \n\n\n  <head>\n\t\t<title>\n      Changeset 125 \u2013 Nomatic*IM\n    </title><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><link rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search\" /><link rel=\"prev\" href=\"/LUCICodeRepository/nomaticIM/changeset/124\" title=\"Changeset 124\" /><link rel=\"last\" href=\"/LUCICodeRepository/nomaticIM/changeset/1312\" title=\"Changeset 1312\" /><link rel=\"help\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\" /><link rel=\"alternate\" href=\"?format=diff&amp;new=125\" type=\"text/plain\" class=\"diff\" title=\"Unified Diff\" /><link rel=\"alternate\" href=\"?format=zip&amp;new=125\" type=\"application/zip\" class=\"zip\" title=\"Zip Archive\" /><link rel=\"next\" href=\"/LUCICodeRepository/nomaticIM/changeset/126\" title=\"Changeset 126\" /><link rel=\"start\" href=\"/LUCICodeRepository/nomaticIM/wiki\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/diff.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/changeset.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/code.css\" type=\"text/css\" /><link rel=\"first\" href=\"/LUCICodeRepository/nomaticIM/changeset/1\" title=\"Changeset 1\" /><link rel=\"shortcut icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link rel=\"icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link type=\"application/opensearchdescription+xml\" rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search/opensearch\" title=\"Search Nomatic*IM\" /><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/jquery.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/babel.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/messages/en_US.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/trac.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/search.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/diff.js\"></script><script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\".trac-toggledeleted\").show().click(function() {\n                  $(this).siblings().find(\".trac-deleted\").toggle();\n                  return false;\n        }).click();\n        $(\"#content\").find(\"li.entry h2 a\").parent().addAnchor(_(\"Link to this diff\"));\n      });\n    </script>\n\t</head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://luci.ics.uci.edu/#code\"><img src=\"http://luci.ics.uci.edu/blog/archives/LUCIhorzTight.jpg\" alt=\"LUCI Code Repository\" /></a>\n      </div>\n      <form id=\"search\" action=\"/LUCICodeRepository/nomaticIM/search\" method=\"get\">\n        <div>\n          <label for=\"proj-search\">Search:</label>\n          <input type=\"text\" id=\"proj-search\" name=\"q\" size=\"18\" value=\"\" />\n          <input type=\"submit\" value=\"Search\" />\n        </div>\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/login\">Login</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/prefs\">Preferences</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\">Help/Guide</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/wiki\">Wiki</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/timeline\">Timeline</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/roadmap\">Roadmap</a></li><li class=\"active\"><a href=\"/LUCICodeRepository/nomaticIM/browser\">Browse Source</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/report\">View Tickets</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/search\">Search</a></li>\n    </ul>\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><span>&larr; <a class=\"prev\" href=\"/LUCICodeRepository/nomaticIM/changeset/124\" title=\"Changeset 124\">Previous Changeset</a></span></li><li class=\"last\"><span><a class=\"next\" href=\"/LUCICodeRepository/nomaticIM/changeset/126\" title=\"Changeset 126\">Next Changeset</a> &rarr;</span></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"changeset\">\n      <div id=\"title\">\n            <h1>Changeset 125</h1>\n      </div>\n      <form id=\"prefs\" action=\"\">\n        <div>\n          \n  <label for=\"style\">View differences</label>\n  <select id=\"style\" name=\"style\">\n    <option selected=\"selected\" value=\"inline\">inline</option>\n    <option value=\"sidebyside\">side by side</option>\n  </select>\n  <div class=\"field\">\n    <label><input type=\"radio\" name=\"contextall\" value=\"0\" checked=\"checked\" />\n             Show</label>\n      <label><input type=\"text\" name=\"contextlines\" id=\"contextlines\" size=\"2\" maxlength=\"3\" value=\"2\" />\n             lines around each change</label><br />\n    <label><input type=\"radio\" name=\"contextall\" value=\"1\" />\n           Show the changes in full context</label>\n  </div>\n  <fieldset id=\"ignore\">\n    <legend>Ignore:</legend>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignoreblanklines\" name=\"ignoreblanklines\" />\n      <label for=\"ignoreblanklines\">Blank lines</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorecase\" name=\"ignorecase\" />\n      <label for=\"ignorecase\">Case changes</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorewhitespace\" name=\"ignorewhitespace\" />\n      <label for=\"ignorewhitespace\">White space changes</label>\n    </div>\n  </fieldset>\n  <div class=\"buttons\">\n    <input type=\"submit\" name=\"update\" value=\"Update\" />\n  </div>\n\n        </div>\n      </form>\n      <dl id=\"overview\">\n          <dt class=\"property time\">Timestamp:</dt>\n          <dd class=\"time\">\n             Jan 23, 2007, 1:22:29 PM\n             (<a class=\"timeline\" href=\"/LUCICodeRepository/nomaticIM/timeline?from=2007-01-23T13%3A22%3A29-08%3A00&amp;precision=second\" title=\"See timeline at Jan 23, 2007, 1:22:29 PM\">8 years</a> ago)\n          </dd>\n          <dt class=\"property author\">Author:</dt>\n          <dd class=\"author\">djp3</dd>\n          <dt class=\"property message\">Message:</dt>\n          <dd class=\"message searchable\">\n            \n            \n              <p>\nDeleted classification class<br />\n</p>\n\n            \n            \n          </dd>\n          <dt class=\"property location\">Location:</dt>\n          <dd class=\"searchable\"><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic?rev=125\">trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic</a></dd>\n        <dt class=\"property files\">\n          Files:\n        </dt>\n        <dd class=\"files\">\n          <div class=\"legend\" id=\"file-legend\">\n            <dl>\n              <dt class=\"rem\"></dt><dd>2 deleted</dd>\n              <dt class=\"mod\"></dt><dd>12 edited</dd>\n            </dl>\n          </div>\n          <br />\n          <ul>\n            <li>\n          <div class=\"mod\"> </div>\n            <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic?rev=125\">\n              .\n            </a>\n          <span class=\"comment\">(modified)</span>\n              (<a title=\"Show differences\" href=\"#file0\">1 prop</a>)\n            </li><li>\n          <div class=\"mod\"> </div>\n            <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/Makefile.am?rev=125\">\n              Makefile.am\n            </a>\n          <span class=\"comment\">(modified)</span>\n              (<a title=\"Show differences\" href=\"#file1\">1 diff</a>)\n            </li><li>\n          <div class=\"rem\"> </div>\n            <a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/classification.c?rev=124\" title=\"Show what was removed (content at revision 124)\">\n              classification.c\n            </a>\n          <span class=\"comment\">(deleted)</span>\n            </li><li>\n          <div class=\"rem\"> </div>\n            <a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/classification.h?rev=124\" title=\"Show what was removed (content at revision 124)\">\n              classification.h\n            </a>\n          <span class=\"comment\">(deleted)</span>\n            </li><li>\n          <div class=\"mod\"> </div>\n            <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/completionField.c?rev=125\">\n              completionField.c\n            </a>\n          <span class=\"comment\">(modified)</span>\n              (<a title=\"Show differences\" href=\"#file4\">4 diffs</a>)\n            </li><li>\n          <div class=\"mod\"> </div>\n            <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/completionField.h?rev=125\">\n              completionField.h\n            </a>\n          <span class=\"comment\">(modified)</span>\n              (<a title=\"Show differences\" href=\"#file5\">2 diffs</a>)\n            </li><li>\n          <div class=\"mod\"> </div>\n            <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=125\">\n              feature.c\n            </a>\n          <span class=\"comment\">(modified)</span>\n              (<a title=\"Show differences\" href=\"#file6\">15 diffs</a>)\n            </li><li>\n          <div class=\"mod\"> </div>\n            <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.h?rev=125\">\n              feature.h\n            </a>\n          <span class=\"comment\">(modified)</span>\n              (<a title=\"Show differences\" href=\"#file7\">3 diffs</a>)\n            </li><li>\n          <div class=\"mod\"> </div>\n            <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/featureCollection.c?rev=125\">\n              featureCollection.c\n            </a>\n          <span class=\"comment\">(modified)</span>\n              (<a title=\"Show differences\" href=\"#file8\">8 diffs</a>)\n            </li><li>\n          <div class=\"mod\"> </div>\n            <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/featureCollection.h?rev=125\">\n              featureCollection.h\n            </a>\n          <span class=\"comment\">(modified)</span>\n              (<a title=\"Show differences\" href=\"#file9\">1 diff</a>)\n            </li><li>\n          <div class=\"mod\"> </div>\n            <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/myUtilities.c?rev=125\">\n              myUtilities.c\n            </a>\n          <span class=\"comment\">(modified)</span>\n              (<a title=\"Show differences\" href=\"#file10\">2 diffs</a>)\n            </li><li>\n          <div class=\"mod\"> </div>\n            <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/myUtilities.h?rev=125\">\n              myUtilities.h\n            </a>\n          <span class=\"comment\">(modified)</span>\n              (<a title=\"Show differences\" href=\"#file11\">1 diff</a>)\n            </li><li>\n          <div class=\"mod\"> </div>\n            <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125\">\n              nomatic.c\n            </a>\n          <span class=\"comment\">(modified)</span>\n              (<a title=\"Show differences\" href=\"#file12\">42 diffs</a>)\n            </li><li>\n          <div class=\"mod\"> </div>\n            <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.h?rev=125\">\n              nomatic.h\n            </a>\n          <span class=\"comment\">(modified)</span>\n              (<a title=\"Show differences\" href=\"#file13\">2 diffs</a>)\n            </li>\n          </ul>\n        </dd>\n      </dl>\n      <div class=\"diff\">\n        <div class=\"legend\" id=\"diff-legend\">\n          <h3>Legend:</h3>\n          <dl>\n            <dt class=\"unmod\"></dt><dd>Unmodified</dd>\n            <dt class=\"add\"></dt><dd>Added</dd>\n            <dt class=\"rem\"></dt><dd>Removed</dd>\n          </dl>\n        </div>\n        <div class=\"diff\">\n  <ul class=\"entries\">\n      <li class=\"entry\">\n        <h2 id=\"file0\">\n          <a href=\"/LUCICodeRepository/nomaticIM/changeset/125/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic\" title=\"Show the changeset 125 restricted to trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic\">trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic</a>\n        </h2>\n        <ul class=\"props\">\n            <li>Property <strong>svn:ignore</strong><div class=\"diff\">\n  <ul class=\"entries\">\n      <li class=\"entry\">\n        <h2>\n          \u00a0\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"File \">\n                      old\n                  </th>\n                  <th title=\"File \">\n                      new\n                  </th>\n                  <td><em></em>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>3</th><th>3</th><td class=\"l\"><span>.deps</span>\u00a0</td>\n                  </tr><tr>\n                          <th>4</th><th>4</th><td class=\"l\"><span>.libs</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"last first\">\n                          <th>\u00a0</th><th>5</th><td class=\"r\"><ins>trash</ins>\u00a0</td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n  </ul>\n</div></li>\n        </ul>\n      </li>\n      <li class=\"entry\">\n        <h2 id=\"file1\">\n          <a href=\"/LUCICodeRepository/nomaticIM/changeset/125/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/Makefile.am\" title=\"Show the changeset 125 restricted to trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/Makefile.am\">trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/Makefile.am</a>\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"Revision 116\">\n                    <a title=\"Show revision 116 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/Makefile.am?rev=116#L13\">\n                      r116</a>\n                  </th>\n                  <th title=\"Revision 125\">\n                    <a title=\"Show revision 125 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/Makefile.am?rev=125#L13\">\n                      r125</a>\n                  </th>\n                  <td>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>13</th><th>13</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; completionField.c\\</span>\u00a0</td>\n                  </tr><tr>\n                          <th>14</th><th>14</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; feature.c\\</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"last first\">\n                          <th>15</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; classification.c\\</del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>16</th><th>15</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; featureCollection.c\\</span>\u00a0</td>\n                  </tr><tr>\n                          <th>17</th><th>16</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; myUtilities.c\\</span>\u00a0</td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n      <li class=\"entry\">\n        <h2 id=\"file4\">\n          <a href=\"/LUCICodeRepository/nomaticIM/changeset/125/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/completionField.c\" title=\"Show the changeset 125 restricted to trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/completionField.c\">trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/completionField.c</a>\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"Revision 116\">\n                    <a title=\"Show revision 116 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/completionField.c?rev=116#L8\">\n                      r116</a>\n                  </th>\n                  <th title=\"Revision 125\">\n                    <a title=\"Show revision 125 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/completionField.c?rev=125#L8\">\n                      r125</a>\n                  </th>\n                  <td>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>8</th><th>8</th><td class=\"l\"><span>#include \"completionField.h\"</span>\u00a0</td>\n                  </tr><tr>\n                          <th>9</th><th>9</th><td class=\"l\"><span>#include \"feature.h\"</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"last first\">\n                          <th>10</th><th>\u00a0</th><td class=\"l\"><del>#include \"classification.h\"</del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>11</th><th>10</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>12</th><th>11</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/completionField.c?rev=116#L119\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/completionField.c?rev=125#L118\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>119</th><th>118</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>120</th><th>119</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>121</th><th>\u00a0</th><td class=\"l\"><span>bool addLocationClassificationToCompletionField(<del>feature *train,classification *c</del>,GtkEntryCompletion *completion)</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>120</th><td class=\"r\"><span>bool addLocationClassificationToCompletionField(<ins>char *locationStatus</ins>,GtkEntryCompletion *completion)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>122</th><th>121</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>123</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(<del>!(c-&gt;isFreeForm)</del>){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>124</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; addCompletionString(completion,<del>c-&gt;context.parsed.location</del>);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>122</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(<ins>locationStatus &amp;&amp; completion</ins>){</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>123</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; addCompletionString(completion,<ins>locationStatus</ins>);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>125</th><th>124</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>126</th><th>125</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/completionField.c?rev=116#L128\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/completionField.c?rev=125#L127\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>128</th><th>127</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>129</th><th>128</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>130</th><th>\u00a0</th><td class=\"l\"><span>bool addActivityClassificationToCompletionField(<del>feature *train,classification *c</del>,GtkEntryCompletion *completion)</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>129</th><td class=\"r\"><span>bool addActivityClassificationToCompletionField(<ins>char *activityStatus</ins>,GtkEntryCompletion *completion)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>131</th><th>130</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>132</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(<del>!(c-&gt;isFreeForm)</del>){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>133</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; addCompletionString(completion,<del>c-&gt;context.parsed.activity</del>);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>131</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(<ins>activityStatus &amp;&amp; completion</ins>){</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>132</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; addCompletionString(completion,<ins>activityStatus</ins>);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>134</th><th>133</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>135</th><th>134</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/completionField.c?rev=116#L137\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/completionField.c?rev=125#L136\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>137</th><th>136</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>138</th><th>137</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>139</th><th>\u00a0</th><td class=\"l\"><span>bool addSocialStatusClassificationToCompletionField(<del>feature *train,classification *c</del>,GtkEntryCompletion *completion)</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>138</th><td class=\"r\"><span>bool addSocialStatusClassificationToCompletionField(<ins>char *socialStatusStatus</ins>,GtkEntryCompletion *completion)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>140</th><th>139</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>141</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(<del>!(c-&gt;isFreeForm)</del>){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>142</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; addCompletionString(completion,<del>c-&gt;context.parsed.social</del>Status);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>140</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(<ins>&nbsp;socialStatusStatus &amp;&amp; completion</ins>){</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>141</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; addCompletionString(completion,<ins>socialStatus</ins>Status);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>143</th><th>142</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>144</th><th>143</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>145</th><th>144</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>146</th><th>145</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>147</th><th>\u00a0</th><td class=\"l\"><span>bool addFreeFormClassificationToCompletionField(<del>feature *train,classification *c</del>,GtkEntryCompletion *completion)</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>146</th><td class=\"r\"><span>bool addFreeFormClassificationToCompletionField(<ins>char *freeFormStatus</ins>,GtkEntryCompletion *completion)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>148</th><th>147</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>149</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(<del>c-&gt;isFreeForm</del>){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>150</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; addCompletionString(completion,<del>c-&gt;context.freeForm</del>);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>148</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(<ins>freeFormStatus &amp;&amp; completion</ins>){</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>149</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; addCompletionString(completion,<ins>freeFormStatus</ins>);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>151</th><th>150</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>152</th><th>151</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</span>\u00a0</td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n      <li class=\"entry\">\n        <h2 id=\"file5\">\n          <a href=\"/LUCICodeRepository/nomaticIM/changeset/125/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/completionField.h\" title=\"Show the changeset 125 restricted to trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/completionField.h\">trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/completionField.h</a>\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"Revision 116\">\n                    <a title=\"Show revision 116 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/completionField.h?rev=116#L5\">\n                      r116</a>\n                  </th>\n                  <th title=\"Revision 125\">\n                    <a title=\"Show revision 125 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/completionField.h?rev=125#L5\">\n                      r125</a>\n                  </th>\n                  <td>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>5</th><th>5</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>6</th><th>6</th><td class=\"l\"><span>#include \"feature.h\"</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"last first\">\n                          <th>7</th><th>\u00a0</th><td class=\"l\"><del>#include \"classification.h\"</del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>8</th><th>7</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>9</th><th>8</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/completionField.h?rev=116#L11\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/completionField.h?rev=125#L10\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>11</th><th>10</th><td class=\"l\"><span>GtkTreeModel *completionModelInit (void);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>12</th><th>11</th><td class=\"l\"><span>void addCompletionString(GtkEntryCompletion *completion,const gchar *string);</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>13</th><th>\u00a0</th><td class=\"l\"><span>bool addLocationClassificationToCompletionField(<del>feature *train,classification *c</del>,GtkEntryCompletion *completion);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>14</th><th>\u00a0</th><td class=\"l\"><span>bool addActivityClassificationToCompletionField(<del>feature *train,classification *c</del>,GtkEntryCompletion *completion);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>15</th><th>\u00a0</th><td class=\"l\"><span>bool addSocialStatusClassificationToCompletionField(<del>feature *train,classification *c</del>,GtkEntryCompletion *completion);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>16</th><th>\u00a0</th><td class=\"l\"><span>bool addFreeFormClassificationToCompletionField(<del>feature *train,classification *c</del>,GtkEntryCompletion *completion);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>12</th><td class=\"r\"><span>bool addLocationClassificationToCompletionField(<ins>char *locationStatus</ins>,GtkEntryCompletion *completion);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>13</th><td class=\"r\"><span>bool addActivityClassificationToCompletionField(<ins>char *activityStatus</ins>,GtkEntryCompletion *completion);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>14</th><td class=\"r\"><span>bool addSocialStatusClassificationToCompletionField(<ins>char *socialStatusStatus</ins>,GtkEntryCompletion *completion);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>15</th><td class=\"r\"><span>bool addFreeFormClassificationToCompletionField(<ins>char *freeFormStatus</ins>,GtkEntryCompletion *completion);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>17</th><th>16</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>18</th><th>17</th><td class=\"l\"><span>#endif /*COMPLETIONFIELD_H_*/</span>\u00a0</td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n      <li class=\"entry\">\n        <h2 id=\"file6\">\n          <a href=\"/LUCICodeRepository/nomaticIM/changeset/125/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c\" title=\"Show the changeset 125 restricted to trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c\">trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c</a>\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"Revision 124\">\n                    <a title=\"Show revision 124 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=124#L17\">\n                      r124</a>\n                  </th>\n                  <th title=\"Revision 125\">\n                    <a title=\"Show revision 125 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=125#L17\">\n                      r125</a>\n                  </th>\n                  <td>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>17</th><th>17</th><td class=\"l\"><span>FILE *dataFile = NULL;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>18</th><th>18</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>19</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>20</th><th>\u00a0</th><td class=\"l\"><span>feature *newFeature(int minutes,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>21</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int wday,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>22</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int ip4, int ip3, int ip2,int ip1,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>23</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const char *dNSName,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>24</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const char *locationStatus,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>25</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const char *activityStatus,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>26</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const char *socialStatusStatus,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>27</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const char *freeFormStatus</span>\u00a0</td>\n                      </tr><tr>\n                        <th>28</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; )</span>\u00a0</td>\n                      </tr><tr>\n                        <th>29</th><th>\u00a0</th><td class=\"l\"><span>{</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>19</th><td class=\"r\"><span>/** </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>20</th><td class=\"r\"><span>&nbsp;* The ints are passed as pointers so that the can be explicitly unset by passing NULL */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>21</th><td class=\"r\"><span>feature *newFeature(</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>22</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const int *weekday,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>23</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const int *minutes,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>24</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const int *seconds,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>25</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const int *ip4, const int *ip3, const int *ip2,const int *ip1,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>26</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const char *dNSName,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>27</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const char *activityStatus,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>28</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const char *locationStatus,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>29</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const char *socialStatusStatus,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>30</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const char *freeFormStatus</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>31</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; )</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>32</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>33</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; //Error check</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>34</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if((freeFormStatus != NULL) &amp;&amp; ((socialStatusStatus != NULL) || (activityStatus != NULL) || (locationStatus != NULL))){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>35</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugFatal(NULL,\"Nomatic: newFeature called with mutually exclusive settings\\n%s\\n%s\\n%s\\n%s\\n\",locationStatus,activityStatus,socialStatusStatus,freeFormStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>36</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>37</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>38</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; //Allocate memory for the structure</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>30</th><th>39</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; feature *fv = (feature *)calloc(1,sizeof(feature));</span>\u00a0</td>\n                  </tr><tr>\n                          <th>31</th><th>40</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>32</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;minutes = minutes;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>33</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;wday = wday;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>34</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;ip4 = ip4;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>35</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;ip3 = ip3;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>36</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;ip2 = ip2;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>37</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;ip1 = ip1;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>38</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>39</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;dNSName=NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>40</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(dNSName){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>41</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;dNSName = strdup(dNSName);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>42</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>43</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>44</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;locationStatus=NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>45</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(locationStatus){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>46</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;locationStatus = strdup(locationStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>47</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>48</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;activityStatus=NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>49</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(activityStatus){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>50</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;activityStatus = strdup(activityStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>51</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>52</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;socialStatusStatus=NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>53</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(socialStatusStatus){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>54</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;socialStatusStatus = strdup(socialStatusStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>55</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>56</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;freeFormStatus=NULL;</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>41</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; //Initialize all the members to NULL</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>42</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;_weekday = NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>43</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;_minutes = NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>44</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;_seconds = NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>45</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;_ip4 = NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>46</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;_ip3 = NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>47</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;_ip2 = NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>48</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;_ip1 = NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>49</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;_dNSName = NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>50</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;_isStructured = NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>51</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;_context._structured.activityStatus = NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>52</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;_context._structured.locationStatus = NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>53</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;_context._structured.socialStatusStatus = NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>54</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>55</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; //Set members if they aren't NULL</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>56</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(weekday){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>57</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetWeekday(fv,*weekday);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>58</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>59</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(minutes){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>60</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetMinutes(fv,*minutes);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>61</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>62</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(ip4){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>63</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetIP4(fv,*ip4);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>64</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>65</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(ip3){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>66</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetIP4(fv,*ip3);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>67</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>68</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(ip2){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>69</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetIP4(fv,*ip2);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>70</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>71</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(ip1){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>72</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetIP4(fv,*ip1);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>73</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>74</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; featureSetDNSName(fv,dNSName);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>57</th><th>75</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(freeFormStatus){</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>58</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fv-&gt;freeFormStatus = strdup(freeFormStatus);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>76</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetIsStructured(fv,FALSE);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>77</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetFreeFormStatus(fv,freeFormStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>78</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugMisc(NULL,\"Nomatic: newFeature:here 4\\n\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>79</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>80</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>81</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetIsStructured(fv,TRUE);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>82</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetActivityStatus(fv,activityStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>83</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetLocationStatus(fv,locationStatus);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>84</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetSocialStatusStatus(fv,socialStatusStatus);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>59</th><th>85</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>60</th><th>86</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(fv);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>61</th><th>87</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>62</th><th>88</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>63</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>64</th><th>\u00a0</th><td class=\"l\"><span>float calculateDistanceMinutes(int a,int b)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>65</th><th>\u00a0</th><td class=\"l\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>66</th><th>\u00a0</th><td class=\"l\"><span>float dummy;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>67</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>68</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /*minutes */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>69</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; dummy = ((float) a - (float) b) / (48.0*60.0);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>70</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(dummy*dummy);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>71</th><th>\u00a0</th><td class=\"l\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>72</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>73</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>74</th><th>\u00a0</th><td class=\"l\"><span>float calculateDistanceWeekday(int a, int b)</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>89</th><td class=\"r\"><span>int featureGetWeekday(const feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>90</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>91</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(*featureGetWeekday_P(f));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>92</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>93</th><td class=\"r\"><span>const int *featureGetWeekday_P(const feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>94</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>95</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(f-&gt;_weekday);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>96</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>97</th><td class=\"r\"><span>void featureAllocateWeekday_P(feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>98</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>99</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; f-&gt;_weekday = (int *)calloc(1,sizeof(int));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>100</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>101</th><td class=\"r\"><span>void featureSetWeekday(feature *f,const int weekday)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>102</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>103</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(!featureGetWeekday_P(f)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>104</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureAllocateWeekday_P(f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>105</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>106</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; *(f-&gt;_weekday) = weekday;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>107</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>108</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>109</th><td class=\"r\"><span>int featureGetMinutes(const feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>110</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>111</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(*featureGetMinutes_P(f));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>112</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>113</th><td class=\"r\"><span>const int *featureGetMinutes_P(const feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>114</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>115</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(f-&gt;_minutes);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>116</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>117</th><td class=\"r\"><span>void featureAllocateMinutes_P(feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>118</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>119</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; f-&gt;_minutes = (int *)calloc(1,sizeof(int));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>120</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>121</th><td class=\"r\"><span>void featureSetMinutes(feature *f,const int minutes)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>122</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>123</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(!featureGetMinutes_P(f)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>124</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureAllocateMinutes_P(f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>125</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>126</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; *(f-&gt;_minutes) = minutes;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>127</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>128</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>129</th><td class=\"r\"><span>int featureGetSeconds(const feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>130</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>131</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(*featureGetSeconds_P(f));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>132</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>133</th><td class=\"r\"><span>const int *featureGetSeconds_P(const feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>134</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>135</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(f-&gt;_seconds);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>136</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>137</th><td class=\"r\"><span>void featureAllocateSeconds_P(feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>138</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>139</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; f-&gt;_seconds = (int *)calloc(1,sizeof(int));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>140</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>141</th><td class=\"r\"><span>void featureSetSeconds(feature *f,const int seconds)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>142</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>143</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(!featureGetSeconds_P(f)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>144</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureAllocateSeconds_P(f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>145</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>146</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; *(f-&gt;_seconds) = seconds;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>147</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>148</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>149</th><td class=\"r\"><span>int featureGetIP4(const feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>150</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>151</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(*featureGetIP4_P(f));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>152</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>153</th><td class=\"r\"><span>const int *featureGetIP4_P(const feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>154</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>155</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(f-&gt;_ip4);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>156</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>157</th><td class=\"r\"><span>void featureAllocateIP4_P(feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>158</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>159</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; f-&gt;_ip4 = (int *)calloc(1,sizeof(int));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>160</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>161</th><td class=\"r\"><span>void featureSetIP4(feature *f,const int ip4)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>162</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>163</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(!featureGetIP4_P(f)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>164</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureAllocateIP4_P(f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>165</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>166</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; *(f-&gt;_ip4) = ip4;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>167</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>168</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>169</th><td class=\"r\"><span>int featureGetIP3(const feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>170</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>171</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(*(featureGetIP3_P(f)));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>172</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>173</th><td class=\"r\"><span>const int *featureGetIP3_P(const feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>174</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>175</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(f-&gt;_ip3);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>176</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>177</th><td class=\"r\"><span>void featureAllocateIP3_P(feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>178</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>179</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; f-&gt;_ip3 = (int *)calloc(1,sizeof(int));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>180</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>181</th><td class=\"r\"><span>void featureSetIP3(feature *f,const int ip3)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>182</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>183</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(!featureGetIP3_P(f)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>184</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureAllocateIP3_P(f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>185</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>186</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; *(f-&gt;_ip3) = ip3;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>187</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>188</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>189</th><td class=\"r\"><span>int featureGetIP2(const feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>190</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>191</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(*(featureGetIP2_P(f)));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>192</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>193</th><td class=\"r\"><span>const int *featureGetIP2_P(const feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>194</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>195</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(f-&gt;_ip2);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>196</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>197</th><td class=\"r\"><span>void featureAllocateIP2_P(feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>198</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>199</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; f-&gt;_ip2 = (int *)calloc(1,sizeof(int));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>200</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>201</th><td class=\"r\"><span>void featureSetIP2(feature *f,const int ip2)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>202</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>203</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(!featureGetIP2_P(f)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>204</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureAllocateIP2_P(f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>205</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>206</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; *(f-&gt;_ip2) = ip2;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>207</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>208</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>209</th><td class=\"r\"><span>int featureGetIP1(const feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>210</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>211</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(*(featureGetIP1_P(f)));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>212</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>213</th><td class=\"r\"><span>const int *featureGetIP1_P(const feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>214</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>215</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(f-&gt;_ip1);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>216</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>217</th><td class=\"r\"><span>void featureAllocateIP1_P(feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>218</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>219</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; f-&gt;_ip1 = (int *)calloc(1,sizeof(int));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>220</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>221</th><td class=\"r\"><span>void featureSetIP1(feature *f,const int ip1)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>222</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>223</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(!featureGetIP1_P(f)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>224</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureAllocateIP1_P(f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>225</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>226</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; *(f-&gt;_ip1) = ip1;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>227</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>228</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>229</th><td class=\"r\"><span>void featureSetIP(feature *f,const int ip4,const int ip3,const int ip2,const int ip1)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>230</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>231</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; featureSetIP4(f,ip4);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>232</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; featureSetIP4(f,ip3);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>233</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; featureSetIP4(f,ip2);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>234</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; featureSetIP4(f,ip1);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>235</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>236</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>237</th><td class=\"r\"><span>const char *featureGetDNSName(const feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>238</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>239</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(f-&gt;_dNSName);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>240</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>241</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>242</th><td class=\"r\"><span>void featureSetDNSName(feature *f,const char *DNSName)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>243</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>244</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(f-&gt;_dNSName){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>245</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(f-&gt;_dNSName);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>246</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>247</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(DNSName){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>248</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; f-&gt;_dNSName = strdup(DNSName);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>249</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>250</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; f-&gt;_dNSName = NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>251</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>252</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>253</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>254</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>255</th><td class=\"r\"><span>bool featureGetIsStructured(const feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>256</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>257</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(*(featureGetIsStructured_P(f)));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>258</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>259</th><td class=\"r\"><span>const bool *featureGetIsStructured_P(const feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>260</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>261</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(f-&gt;_isStructured);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>262</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>263</th><td class=\"r\"><span>void featureAllocateIsStructured_P(feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>264</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>265</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; f-&gt;_isStructured = (bool *)calloc(1,sizeof(bool));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>266</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>267</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>268</th><td class=\"r\"><span>void featureSetIsStructured(feature *f,const bool isStructured)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>269</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>270</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(!(featureGetIsStructured_P(f))){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>271</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureAllocateIsStructured_P(f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>272</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>273</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; *(f-&gt;_isStructured) = isStructured;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>274</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>275</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>276</th><td class=\"r\"><span>const char *featureGetActivityStatus(const feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>277</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>278</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(featureGetIsStructured(f)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>279</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(f-&gt;_context._structured.activityStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>280</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>281</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugFatal(NULL,\"Nomatic: requested activityStatus from an unstructured feature\\n\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>282</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(NULL); //Won't ever get here</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>283</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>284</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>285</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>286</th><td class=\"r\"><span>void featureSetActivityStatus(feature *f,const char *activityStatus)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>287</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>288</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(featureGetIsStructured(f)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>289</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(f-&gt;_context._structured.activityStatus){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>290</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(f-&gt;_context._structured.activityStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>291</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>292</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(activityStatus){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>293</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; f-&gt;_context._structured.activityStatus = strdup(activityStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>294</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>295</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; f-&gt;_context._structured.activityStatus = NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>296</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>297</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>298</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugFatal(NULL,\"Nomatic: modifying activityStatus in an unstructured feature\\n\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>299</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>300</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>301</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>302</th><td class=\"r\"><span>const char *featureGetLocationStatus(const feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>303</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>304</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(featureGetIsStructured(f)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>305</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(f-&gt;_context._structured.locationStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>306</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>307</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugFatal(NULL,\"Nomatic: requested locationStatus from an unstructured feature\\n\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>308</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(NULL); //Won't ever get here</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>309</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>310</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>311</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>312</th><td class=\"r\"><span>void featureSetLocationStatus(feature *f,const char *locationStatus)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>313</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>314</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(featureGetIsStructured(f)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>315</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(f-&gt;_context._structured.locationStatus){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>316</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(f-&gt;_context._structured.locationStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>317</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>318</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(locationStatus){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>319</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; f-&gt;_context._structured.locationStatus = strdup(locationStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>320</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>321</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; f-&gt;_context._structured.locationStatus = NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>322</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>323</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>324</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugFatal(NULL,\"Nomatic: modifying locationStatus in an unstructured feature\\n\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>325</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>326</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>327</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>328</th><td class=\"r\"><span>const char *featureGetSocialStatusStatus(const feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>329</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>330</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(featureGetIsStructured(f)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>331</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(f-&gt;_context._structured.socialStatusStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>332</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>333</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugFatal(NULL,\"Nomatic: requested socialStatusStatus from an unstructured feature\\n\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>334</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(NULL); //Won't ever get here</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>335</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>336</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>337</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>338</th><td class=\"r\"><span>void featureSetSocialStatusStatus(feature *f,const char *socialStatusStatus)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>339</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>340</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(featureGetIsStructured(f)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>341</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(f-&gt;_context._structured.socialStatusStatus){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>342</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(f-&gt;_context._structured.socialStatusStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>343</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>344</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(socialStatusStatus){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>345</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; f-&gt;_context._structured.socialStatusStatus = strdup(socialStatusStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>346</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>347</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; f-&gt;_context._structured.socialStatusStatus = NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>348</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>349</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>350</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugFatal(NULL,\"Nomatic: modifying socialStatusStatus in an unstructured feature\\n\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>351</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>352</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>353</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>354</th><td class=\"r\"><span>const char *featureGetFreeFormStatus(const feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>355</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>356</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(featureGetIsStructured(f)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>357</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugFatal(NULL,\"Nomatic: requested freeFormStatus from a structured feature\\n\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>358</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(NULL); //Won't ever get here</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>359</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>360</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(f-&gt;_context._unstructured.freeFormStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>361</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>362</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>363</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>364</th><td class=\"r\"><span>void featureSetFreeFormStatus(feature *f,const char *freeFormStatus)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>365</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>366</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(featureGetIsStructured(f)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>367</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugFatal(NULL,\"Nomatic: modifying freeFormStatus in a structured feature\\n\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>368</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>369</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(f-&gt;_context._unstructured.freeFormStatus){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>370</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(f-&gt;_context._unstructured.freeFormStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>371</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>372</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(freeFormStatus){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>373</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; f-&gt;_context._unstructured.freeFormStatus= strdup(freeFormStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>374</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>375</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; f-&gt;_context._unstructured.freeFormStatus= NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>376</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>377</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>378</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>379</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>380</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>381</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>382</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>383</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>384</th><td class=\"r\"><span>float calculateDistanceWeekday(const int a,const int b)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>75</th><th>385</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>76</th><th>386</th><td class=\"l\"><span>float dist=0.0;</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=124#L95\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=125#L405\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>95</th><th>405</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>96</th><th>406</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>97</th><th>\u00a0</th><td class=\"l\"><span>float calculateDistanceIPAddress( int aIP4, int aIP3, int aIP2, int aIP1, int bIP4, int bIP3, int bIP2, int bIP1 )</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>407</th><td class=\"r\"><span>float calculateDistanceMinutes(const int a,const int b)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>408</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>409</th><td class=\"r\"><span>float dummy;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>410</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>411</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /*minutes */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>412</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; dummy = ((float) a - (float) b) / (48.0*60.0);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>413</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(dummy*dummy);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>414</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>415</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>416</th><td class=\"r\"><span>float calculateDistanceSeconds(const int a,const int b)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>417</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>418</th><td class=\"r\"><span>float dummy;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>419</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>420</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* seconds */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>421</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; dummy = ((float) a - (float) b) / (60.0);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>422</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(dummy*dummy);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>423</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>424</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>425</th><td class=\"r\"><span>float calculateDistanceIPAddress(const int aIP4,const int aIP3,const int aIP2,const int aIP1,const int bIP4,const int bIP3,const int bIP2,const int bIP1 )</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>98</th><th>426</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>99</th><th>427</th><td class=\"l\"><span>float dummy;</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=124#L120\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=125#L448\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>120</th><th>448</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>121</th><th>449</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>122</th><th>\u00a0</th><td class=\"l\"><span>float calculateDistanceDNSName(c<del>har *a,</del>char *b)</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>450</th><td class=\"r\"><span>float calculateDistanceDNSName(c<ins>onst char *a,const </ins>char *b)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>123</th><th>451</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>124</th><th>452</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /*name address*/</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=124#L148\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=125#L476\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>148</th><th>476</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>149</th><th>477</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>150</th><th>\u00a0</th><td class=\"l\"><span>float calculateDistanceAnyStatus(c<del>har *a,</del>char *b)</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>478</th><td class=\"r\"><span>float calculateDistanceAnyStatus(c<ins>onst char *a,const </ins>char *b)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>151</th><th>479</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>152</th><th>480</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* Compare NULLs */</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=124#L168\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=125#L496\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>168</th><th>496</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>169</th><th>497</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>170</th><th>\u00a0</th><td class=\"l\"><span>float calculateDistance(<del>feature *a,</del>feature *b)</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>498</th><td class=\"r\"><span>float calculateDistance(<ins>const feature *a,const </ins>feature *b)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>171</th><th>499</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>172</th><th>500</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; float dist=0.0;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>173</th><th>501</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>174</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>175</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; dist += calculateDistanceMinutes(a-&gt;minutes,b-&gt;minutes);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>176</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>177</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; dist += calculateDistanceWeekday(a-&gt;wday,b-&gt;wday);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>178</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>179</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; dist += calculateDistanceIPAddress( a-&gt;ip4, a-&gt;ip3, a-&gt;ip2, a-&gt;ip1, b-&gt;ip4, b-&gt;ip3, b-&gt;ip2, b-&gt;ip1);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>180</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>181</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; dist += calculateDistanceDNSName(a-&gt;dNSName,b-&gt;dNSName);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>182</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>183</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; dist += calculateDistanceAnyStatus(a-&gt;locationStatus,b-&gt;locationStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>184</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>185</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; dist += calculateDistanceAnyStatus(a-&gt;activityStatus,b-&gt;activityStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>186</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>187</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; dist += calculateDistanceAnyStatus(a-&gt;socialStatusStatus,b-&gt;socialStatusStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>188</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>189</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; dist += calculateDistanceAnyStatus(a-&gt;freeFormStatus,b-&gt;freeFormStatus);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>502</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; dist += calculateDistanceWeekday(featureGetWeekday(a),featureGetWeekday(b));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>503</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>504</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; dist += calculateDistanceMinutes(featureGetMinutes(a),featureGetMinutes(b));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>505</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>506</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; dist += calculateDistanceSeconds(featureGetSeconds(a),featureGetSeconds(b));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>507</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>508</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; dist += calculateDistanceIPAddress( featureGetIP4(a),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>509</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetIP3(a),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>510</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetIP2(a),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>511</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetIP1(a),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>512</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetIP4(b),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>513</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetIP3(b),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>514</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetIP2(b),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>515</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetIP1(b));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>516</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>517</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; dist += calculateDistanceDNSName(featureGetDNSName(a),featureGetDNSName(b));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>518</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>519</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(featureGetIsStructured(a) == featureGetIsStructured(b)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>520</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(featureGetIsStructured(a)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>521</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dist += calculateDistanceAnyStatus(featureGetLocationStatus(a),featureGetLocationStatus(b));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>522</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>523</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dist += calculateDistanceAnyStatus(featureGetActivityStatus(a),featureGetActivityStatus(b));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>524</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>525</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dist += calculateDistanceAnyStatus(featureGetSocialStatusStatus(a),featureGetSocialStatusStatus(b));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>526</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>527</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>528</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dist += calculateDistanceAnyStatus(featureGetFreeFormStatus(a),featureGetFreeFormStatus(b));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>529</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>530</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>531</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //the context is incomparable and no additional similarity on this axis is warranted</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>532</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // dist += 0.0;</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>533</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>190</th><th>534</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>191</th><th>535</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(sqrt(dist));</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=124#L194\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=125#L538\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>194</th><th>538</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>195</th><th>539</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>196</th><th>\u00a0</th><td class=\"l\"><span>feature *cloneFeature(feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>197</th><th>\u00a0</th><td class=\"l\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>198</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(newFeature(f-&gt;minutes,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>199</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; f-&gt;wday,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>200</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; f-&gt;ip4,f-&gt;ip3,f-&gt;ip2,f-&gt;ip1,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>201</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; f-&gt;dNSName,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>202</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; f-&gt;locationStatus,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>203</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; f-&gt;activityStatus,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>204</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; f-&gt;socialStatusStatus,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>205</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; f-&gt;freeFormStatus));</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>540</th><td class=\"r\"><span>feature *cloneFeature(const feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>541</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>542</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(featureGetIsStructured(f)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>543</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(newFeature(&nbsp; featureGetWeekday_P(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>544</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetMinutes_P(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>545</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetSeconds_P(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>546</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetIP4_P(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>547</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetIP3_P(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>548</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetIP2_P(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>549</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetIP1_P(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>550</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetDNSName(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>551</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetActivityStatus(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>552</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetLocationStatus(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>553</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetSocialStatusStatus(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>554</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>555</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>556</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>557</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(newFeature(&nbsp; featureGetWeekday_P(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>558</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetMinutes_P(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>559</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetSeconds_P(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>560</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetIP4_P(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>561</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetIP3_P(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>562</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetIP2_P(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>563</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetIP1_P(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>564</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetDNSName(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>565</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>566</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>567</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>568</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetFreeFormStatus(f)));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>569</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>570</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>571</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>572</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>573</th><td class=\"r\"><span>void overwriteFeature(feature *dest, const feature *source)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>574</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>575</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(source &amp;&amp; dest){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>576</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(featureGetWeekday_P(source)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>577</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetWeekday(dest,featureGetWeekday(source));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>578</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>579</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(featureGetMinutes_P(source)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>580</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetMinutes(dest,featureGetMinutes(source));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>581</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>582</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(featureGetSeconds_P(source)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>583</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetSeconds(dest,featureGetSeconds(source));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>584</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>585</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(featureGetIP4_P(source)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>586</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetIP4(dest,featureGetIP4(source));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>587</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>588</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(featureGetIP3_P(source)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>589</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetIP3(dest,featureGetIP3(source));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>590</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>591</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(featureGetIP2_P(source)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>592</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetIP2(dest,featureGetIP2(source));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>593</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>594</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(featureGetIP1_P(source)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>595</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetIP1(dest,featureGetIP1(source));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>596</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>597</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(featureGetDNSName(source)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>598</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetDNSName(dest,featureGetDNSName(source));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>599</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>600</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(featureGetIsStructured(dest) == featureGetIsStructured(source)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>601</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(featureGetIsStructured(source)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>602</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(featureGetActivityStatus(source)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>603</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetActivityStatus(dest,strdup(featureGetActivityStatus(source)));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>604</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>605</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>606</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetActivityStatus(dest,NULL);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>607</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>608</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(featureGetLocationStatus(source)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>609</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetLocationStatus(dest,strdup(featureGetLocationStatus(source)));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>610</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>611</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>612</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetLocationStatus(dest,NULL);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>613</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>614</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(featureGetSocialStatusStatus(source)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>615</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetSocialStatusStatus(dest,strdup(featureGetSocialStatusStatus(source)));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>616</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>617</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>618</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetSocialStatusStatus(dest,NULL);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>619</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>620</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>621</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(featureGetFreeFormStatus(source)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>622</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetFreeFormStatus(dest,strdup(featureGetFreeFormStatus(source)));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>623</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>624</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>625</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetFreeFormStatus(dest,NULL);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>626</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>627</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>628</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>629</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else if(featureGetIsStructured(dest)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>630</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //And therefore source is not Structured</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>631</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetActivityStatus(dest,NULL);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>632</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetLocationStatus(dest,NULL);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>633</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetSocialStatusStatus(dest,NULL);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>634</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>635</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetIsStructured(dest,FALSE);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>636</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(featureGetFreeFormStatus(source)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>637</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetFreeFormStatus(dest,strdup(featureGetFreeFormStatus(source)));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>638</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>639</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>640</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetFreeFormStatus(dest,NULL);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>641</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>642</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>643</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>644</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //dest is not structured and source is</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>645</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetFreeFormStatus(dest,NULL);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>646</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>647</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetIsStructured(dest,TRUE);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>648</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(featureGetActivityStatus(source)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>649</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetActivityStatus(dest,strdup(featureGetActivityStatus(source)));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>650</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>651</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetActivityStatus(dest,NULL);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>652</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>653</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(featureGetLocationStatus(source)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>654</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetLocationStatus(dest,strdup(featureGetLocationStatus(source)));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>655</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>656</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetLocationStatus(dest,NULL);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>657</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>658</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(featureGetSocialStatusStatus(source)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>659</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetSocialStatusStatus(dest,strdup(featureGetSocialStatusStatus(source)));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>660</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>661</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureSetSocialStatusStatus(dest,NULL);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>662</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>663</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>664</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>206</th><th>665</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>207</th><th>666</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=124#L210\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=125#L669\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>210</th><th>669</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>211</th><th>670</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(a &amp;&amp; b){</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>212</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(<del>a-&gt;wday &lt; b-&gt;wday</del>){</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>671</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(<ins>featureGetWeekday(a) &lt; featureGetWeekday(b)</ins>){</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>213</th><th>672</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(-1);</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>214</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }else if(<del>a-&gt;wday &gt; b-&gt;wday</del>){</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>673</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }else if(<ins>featureGetWeekday(a) &gt; featureGetWeekday(b)</ins>){</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>215</th><th>674</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(1);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>216</th><th>675</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>217</th><th>676</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>218</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return((a-&gt;minutes)-(b-&gt;minutes));</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>677</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(featureGetMinutes(a) != featureGetMinutes(b)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>678</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(featureGetMinutes(a) - featureGetMinutes(b));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>679</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>680</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>681</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(featureGetIP4(a) != featureGetIP4(b)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>682</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(featureGetIP4(a) - featureGetIP4(b));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>683</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>684</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>685</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(featureGetIP3(a) != featureGetIP3(b)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>686</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(featureGetIP3(a) - featureGetIP3(b));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>687</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>688</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>689</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(featureGetIP2(a) != featureGetIP2(b)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>690</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(featureGetIP2(a) - featureGetIP2(b));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>691</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>692</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>693</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(featureGetIP1(a) != featureGetIP1(b)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>694</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(featureGetIP1(a) - featureGetIP1(b));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>695</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>696</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>697</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(strcmp(featureGetDNSName(a),featureGetDNSName(b)) != 0){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>698</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(strcmp(featureGetDNSName(a),featureGetDNSName(b)));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>699</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>700</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>701</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(featureGetIsStructured(a) == featureGetIsStructured(b)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>702</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(featureGetIsStructured(a)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>703</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(strcmp(featureGetLocationStatus(a),featureGetLocationStatus(b)) != 0){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>704</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(strcmp(featureGetLocationStatus(a),featureGetLocationStatus(b)));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>705</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>706</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>707</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(strcmp(featureGetActivityStatus(a),featureGetActivityStatus(b)) != 0){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>708</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(strcmp(featureGetActivityStatus(a),featureGetActivityStatus(b)));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>709</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>710</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>711</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(strcmp(featureGetSocialStatusStatus(a),featureGetSocialStatusStatus(b)));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>712</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>713</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>714</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>715</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>716</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(strcmp(featureGetFreeFormStatus(a),featureGetFreeFormStatus(b)));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>717</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>718</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>719</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //Can't really compare an unstructured and a structured context list, so just call it equal</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>720</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(0);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>721</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>722</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>723</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>724</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>725</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>726</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>219</th><th>727</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>220</th><th>728</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=124#L223\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=125#L731\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>223</th><th>731</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(-1);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>224</th><th>732</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>225</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //if(!b)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>226</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(1);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>227</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>228</th><th>\u00a0</th><td class=\"l\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>229</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>230</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>231</th><th>\u00a0</th><td class=\"l\"><span>int makeFeatureCSV(char *s,size_t size, feature *f)</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>733</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else if(!b){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>734</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(1);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>735</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>736</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>737</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(0);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>738</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>739</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>740</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>741</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>742</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>743</th><td class=\"r\"><span>int makeFeatureCSV(char *s,size_t size,const feature *f)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>232</th><th>744</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>233</th><th>745</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(!f){</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=124#L237\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=125#L749\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>237</th><th>749</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(</span>\u00a0</td>\n                  </tr><tr>\n                          <th>238</th><th>750</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; snprintf(s,size,</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>239</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"%d,%d,%d.%d.%d.%d,%s,%s,%s,%s,%s\\n\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>240</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; f-&gt;minutes,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>241</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; f-&gt;wday,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>242</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; f-&gt;ip4,f-&gt;ip3,f-&gt;ip2,f-&gt;ip1,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>243</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (f-&gt;dNSName)?f-&gt;dNSName:\"\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>244</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (f-&gt;locationStatus)?f-&gt;locationStatus:\"\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>245</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (f-&gt;activityStatus)?f-&gt;activityStatus:\"\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>246</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (f-&gt;socialStatusStatus)?f-&gt;socialStatusStatus:\"\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>247</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (f-&gt;freeFormStatus)?f-&gt;freeFormStatus:\"\"));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>248</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>249</th><th>\u00a0</th><td class=\"l\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>250</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>251</th><th>\u00a0</th><td class=\"l\"><span>int makeFeatureText(char *s,size_t size, feature *f)</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>751</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"%d,%d,%d,%d.%d.%d.%d,%s,%d,%s,%s,%s,%s\\n\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>752</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetWeekday(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>753</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetMinutes(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>754</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetSeconds(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>755</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetIP4(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>756</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetIP3(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>757</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetIP2(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>758</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetIP1(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>759</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetDNSName(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>760</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetIsStructured(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>761</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (featureGetIsStructured(f)&amp;&amp;(featureGetActivityStatus(f)))?featureGetActivityStatus(f):\"NULL\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>762</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (featureGetIsStructured(f)&amp;&amp;(featureGetLocationStatus(f)))?featureGetLocationStatus(f):\"NULL\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>763</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (featureGetIsStructured(f)&amp;&amp;(featureGetSocialStatusStatus(f)))?featureGetSocialStatusStatus(f):\"NULL\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>764</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (!(featureGetIsStructured(f))&amp;&amp;(featureGetFreeFormStatus(f)))?featureGetFreeFormStatus(f):\"NULL\"));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>765</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>766</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>767</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>768</th><td class=\"r\"><span>int makeFeatureText(char *s,size_t size, const feature *f)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>252</th><th>769</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>253</th><th>770</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(</span>\u00a0</td>\n                  </tr><tr>\n                          <th>254</th><th>771</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; snprintf(s,size,</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>255</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; \"Minutes: %d, Day: %d, IP: %d.%d.%d.%d, DNS: %s, locationStatus: %s, activityStatus: %s, socialStatusStatus: %s, freeFormStatus: %s\\n\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>256</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; f-&gt;minutes,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>257</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; f-&gt;wday,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>258</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; f-&gt;ip4,f-&gt;ip3,f-&gt;ip2,f-&gt;ip1,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>259</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (f-&gt;dNSName)?f-&gt;dNSName:\"\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>260</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (f-&gt;locationStatus)?f-&gt;locationStatus:\"\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>261</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (f-&gt;activityStatus)?f-&gt;activityStatus:\"\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>262</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (f-&gt;socialStatusStatus)?f-&gt;socialStatusStatus:\"\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>263</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (f-&gt;freeFormStatus)?f-&gt;freeFormStatus:\"\"));</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>772</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"Weekday:%d, Minutes: %d, Seconds: %d, IP: %d.%d.%d.%d, DNS: %s, structured: %d, locationStatus: %s, activityStatus: %s, socialStatusStatus: %s, freeFormStatus: %s\\n\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>773</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetWeekday(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>774</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetMinutes(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>775</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetSeconds(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>776</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetIP4(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>777</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetIP3(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>778</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetIP2(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>779</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetIP1(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>780</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureGetDNSName(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>781</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (int)featureGetIsStructured(f),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>782</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (featureGetIsStructured(f)&amp;&amp;(featureGetActivityStatus(f)))?featureGetActivityStatus(f):\"NULL\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>783</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (featureGetIsStructured(f)&amp;&amp;(featureGetLocationStatus(f)))?featureGetLocationStatus(f):\"NULL\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>784</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (featureGetIsStructured(f)&amp;&amp;(featureGetSocialStatusStatus(f)))?featureGetSocialStatusStatus(f):\"NULL\",</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>785</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (!(featureGetIsStructured(f))&amp;&amp;(featureGetFreeFormStatus(f)))?featureGetFreeFormStatus(f):\"NULL\"));</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>264</th><th>786</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>265</th><th>787</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>266</th><th>788</th><td class=\"l\"><span>void outputFeatureCSVHeader(FILE *file)</span>\u00a0</td>\n                  </tr><tr>\n                          <th>267</th><th>789</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"last first\">\n                          <th>\u00a0</th><th>790</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; fprintf(file,\"Weekday,\");</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>268</th><th>791</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fprintf(file,\"Minutes,\");</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>269</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fprintf(file,\"<del>Day</del>,\");</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>792</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fprintf(file,\"<ins>Seconds</ins>,\");</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>270</th><th>793</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fprintf(file,\"IP,\");</span>\u00a0</td>\n                  </tr><tr>\n                          <th>271</th><th>794</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fprintf(file,\"DNS,\");</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>795</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; fprintf(file,\"isStructured,\");</ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>796</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; fprintf(file,\"activityStatus,\");</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>272</th><th>797</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fprintf(file,\"locationStatus,\");</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"last first\">\n                          <th>273</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; fprintf(file,\"activityStatus,\");</del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>274</th><th>798</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fprintf(file,\"socialStatusStatus,\");</span>\u00a0</td>\n                  </tr><tr>\n                          <th>275</th><th>799</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fprintf(file,\"freeFormStatus\\n\");</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=124#L297\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=125#L821\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>297</th><th>821</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>298</th><th>822</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>299</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fwrite(&amp;(f-&gt;minutes),sizeof(int),1,file);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>300</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fwrite(&amp;(f-&gt;wday),sizeof(int),1,file);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>301</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fwrite(&amp;(f-&gt;ip4),sizeof(int),1,file);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>302</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fwrite(&amp;(f-&gt;ip3),sizeof(int),1,file);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>303</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fwrite(&amp;(f-&gt;ip2),sizeof(int),1,file);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>304</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fwrite(&amp;(f-&gt;ip1),sizeof(int),1,file);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>305</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>306</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; outputString(file,f-&gt;dNSName);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>307</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; outputString(file,f-&gt;locationStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>308</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; outputString(file,f-&gt;activityStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>309</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; outputString(file,f-&gt;socialStatusStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>310</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; outputString(file,f-&gt;freeFormStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>311</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>823</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fwrite(featureGetWeekday_P(f),sizeof(int),1,file);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>824</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fwrite(featureGetMinutes_P(f),sizeof(int),1,file);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>825</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fwrite(featureGetSeconds_P(f),sizeof(int),1,file);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>826</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fwrite(featureGetIP4_P(f),sizeof(int),1,file);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>827</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fwrite(featureGetIP3_P(f),sizeof(int),1,file);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>828</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fwrite(featureGetIP2_P(f),sizeof(int),1,file);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>829</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fwrite(featureGetIP1_P(f),sizeof(int),1,file);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>830</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>831</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; outputString(file,featureGetDNSName(f));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>832</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>833</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fwrite(featureGetIsStructured_P(f),sizeof(int),1,file);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>834</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>835</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(featureGetIsStructured(f)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>836</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; outputString(file,featureGetActivityStatus(f));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>837</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; outputString(file,featureGetLocationStatus(f));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>838</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; outputString(file,featureGetSocialStatusStatus(f));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>839</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; outputString(file,\"\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>840</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>841</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; outputString(file,\"\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>842</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; outputString(file,\"\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>843</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; outputString(file,\"\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>844</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; outputString(file,featureGetFreeFormStatus(f));</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>845</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>312</th><th>846</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>313</th><th>847</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=124#L317\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=125#L851\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>317</th><th>851</th><td class=\"l\"><span>bool inputFeatureRaw(FILE *input,feature **f)</span>\u00a0</td>\n                  </tr><tr>\n                          <th>318</th><th>852</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"last first\">\n                          <th>\u00a0</th><th>853</th><td class=\"r\"><ins>int weekday;</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>319</th><th>854</th><td class=\"l\"><span>int minutes;</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>320</th><th>\u00a0</th><td class=\"l\"><span>int <del>wday</del>;</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>855</th><td class=\"r\"><span>int <ins>seconds</ins>;</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>321</th><th>856</th><td class=\"l\"><span>int ip4,ip3,ip2,ip1;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>322</th><th>857</th><td class=\"l\"><span>char dNSName[255];</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>858</th><td class=\"r\"><ins>int isStructured;</ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>859</th><td class=\"r\"><ins>char activityStatus[255];</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>323</th><th>860</th><td class=\"l\"><span>char locationStatus[255];</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"last first\">\n                          <th>324</th><th>\u00a0</th><td class=\"l\"><del>char activityStatus[255];</del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>325</th><th>861</th><td class=\"l\"><span>char socialStatusStatus[255];</span>\u00a0</td>\n                  </tr><tr>\n                          <th>326</th><th>862</th><td class=\"l\"><span>char freeFormStatus[255];</span>\u00a0</td>\n                  </tr><tr>\n                          <th>327</th><th>863</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>328</th><th>864</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>865</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; fread(&amp;(weekday),sizeof(int),1,input);</ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>866</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(feof(input)) return(FALSE);</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>329</th><th>867</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fread(&amp;(minutes),sizeof(int),1,input);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>330</th><th>868</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(feof(input)) return(FALSE);</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>331</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fread(&amp;(<del>wday</del>),sizeof(int),1,input);</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>869</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; fread(&amp;(<ins>seconds</ins>),sizeof(int),1,input);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>332</th><th>870</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(feof(input)) return(FALSE);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>333</th><th>871</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=124#L342\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=125#L880\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>342</th><th>880</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>343</th><th>881</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(!inputString(dNSName,sizeof(dNSName),input)) return(FALSE);</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>882</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>883</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; fread(&amp;(isStructured),sizeof(bool),1,input);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>884</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(feof(input)) return(FALSE);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>885</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>886</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(!inputString(activityStatus,sizeof(activityStatus),input)) return(FALSE);</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>344</th><th>887</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(!inputString(locationStatus,sizeof(locationStatus),input)) return(FALSE);</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"last first\">\n                          <th>345</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; if(!inputString(activityStatus,sizeof(activityStatus),input)) return(FALSE);</del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>346</th><th>888</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(!inputString(socialStatusStatus,sizeof(socialStatusStatus),input)) return(FALSE);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>347</th><th>889</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(!inputString(freeFormStatus,sizeof(freeFormStatus),input)) return(FALSE);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>348</th><th>890</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>349</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; *f= newFeature(<del>minutes,wday,ip4,ip3,ip2,ip1,dNSName,locationStatus,activity</del>Status,socialStatusStatus,freeFormStatus);</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>891</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; *f= newFeature(<ins>&amp;weekday,&amp;minutes,&amp;seconds,&amp;ip4,&amp;ip3,&amp;ip2,&amp;ip1,dNSName,activityStatus,location</ins>Status,socialStatusStatus,freeFormStatus);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>350</th><th>892</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; char s[1024];</span>\u00a0</td>\n                  </tr><tr>\n                          <th>351</th><th>893</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; makeFeatureText(s,sizeof(s),*f);</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>352</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; <del>gaim_debug_m</del>isc(NULL,\"Nomatic: %s\\n\",s);</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>894</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; <ins>nomaticDebugM</ins>isc(NULL,\"Nomatic: %s\\n\",s);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>353</th><th>895</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>354</th><th>896</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(TRUE);</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=124#L360\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=125#L902\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>360</th><th>902</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>361</th><th>903</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>362</th><th>\u00a0</th><td class=\"l\"><span>void</span>\u00a0</td>\n                      </tr><tr>\n                        <th>363</th><th>\u00a0</th><td class=\"l\"><span>freeFeature(feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>364</th><th>\u00a0</th><td class=\"l\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>365</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(f-&gt;dNSName);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>366</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(f-&gt;locationStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>367</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(f-&gt;activityStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>368</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(f-&gt;socialStatusStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>369</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(f-&gt;freeFormStatus);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>904</th><td class=\"r\"><span>void freeFeature(feature *f)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>905</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>906</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(f){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>907</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(f-&gt;_weekday);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>908</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(f-&gt;_minutes);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>909</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(f-&gt;_seconds);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>910</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(f-&gt;_ip4);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>911</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(f-&gt;_ip3);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>912</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(f-&gt;_ip2);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>913</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(f-&gt;_ip1);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>914</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(f-&gt;_dNSName);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>915</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(featureGetIsStructured(f)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>916</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(f-&gt;_context._structured.activityStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>917</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(f-&gt;_context._structured.locationStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>918</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(f-&gt;_context._structured.socialStatusStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>919</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>920</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>921</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(f-&gt;_context._unstructured.freeFormStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>922</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>923</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(f-&gt;_isStructured);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>370</th><th>924</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(f);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>371</th><th>925</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; f=NULL;</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>372</th><th>\u00a0</th><td class=\"l\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>373</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>374</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>375</th><th>\u00a0</th><td class=\"l\"><span>feature *senseFeature(const char *ls,const char *as,const char *ss,const char *ffs)</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>926</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>927</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>928</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>929</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>930</th><td class=\"r\"><span>feature *senseFeature()</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>376</th><th>931</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>377</th><th>932</th><td class=\"l\"><span>time_t tim = time(NULL);</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=124#L383\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=125#L938\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>383</th><th>938</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>384</th><th>939</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; char *token;</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>940</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>941</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; int minutes;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>942</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; minutes = timeinfo-&gt;tm_hour * 60 + timeinfo-&gt;tm_min;</ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>943</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>385</th><th>944</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>386</th><th>945</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; int ip4,ip3,ip2,ip1;</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=124#L391\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.c?rev=125#L950\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>391</th><th>950</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; char *dNSName = network_get_local_system_hostname();</span>\u00a0</td>\n                  </tr><tr>\n                          <th>392</th><th>951</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>393</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; f = newFeature( timeinfo-&gt;tm_hour * 60 + timeinfo-&gt;tm_min,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>394</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; timeinfo-&gt;tm_wday,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>395</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ip4,ip3,ip2,ip1,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>396</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dNSName,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>397</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ls,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>398</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; as,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>399</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ss,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>400</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ffs</span>\u00a0</td>\n                      </tr><tr>\n                        <th>401</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; );</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>952</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; f = newFeature( </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>953</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &amp;(timeinfo-&gt;tm_wday),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>954</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &amp;minutes,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>955</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &amp;(timeinfo-&gt;tm_sec),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>956</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &amp;ip4,&amp;ip3,&amp;ip2,&amp;ip1,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>957</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dNSName,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>958</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>959</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>960</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>961</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>962</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; );</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>963</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugMisc(NULL,\"Nomatic: senseFeature: 2\\n\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>964</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>965</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>966</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char s[1024];</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>967</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugMisc(NULL,\"Nomatic: senseFeature: 2\\n\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>968</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; makeFeatureText(s,sizeof(s),f); </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>969</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugMisc(NULL,\"Nomatic: senseFeature: 2\\n\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>970</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugMisc(NULL,\"Nomatic: senseFeature:\\n%s\\n\",s);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>971</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugMisc(NULL,\"Nomatic: senseFeature: 2\\n\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>972</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>973</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugMisc(NULL,\"Nomatic: senseFeature: 2\\n\");</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>402</th><th>974</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(f);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>403</th><th>975</th><td class=\"l\"><span>}&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span>\u00a0</td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n      <li class=\"entry\">\n        <h2 id=\"file7\">\n          <a href=\"/LUCICodeRepository/nomaticIM/changeset/125/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.h\" title=\"Show the changeset 125 restricted to trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.h\">trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.h</a>\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"Revision 124\">\n                    <a title=\"Show revision 124 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.h?rev=124#L5\">\n                      r124</a>\n                  </th>\n                  <th title=\"Revision 125\">\n                    <a title=\"Show revision 125 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.h?rev=125#L5\">\n                      r125</a>\n                  </th>\n                  <td>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>5</th><th>5</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>6</th><th>6</th><td class=\"l\"><span>typedef struct {</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>7</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; int minutes;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Minutes since midnight (midnight == 0)*/</span>\u00a0</td>\n                      </tr><tr>\n                        <th>8</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; int wday;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/* Day of week (0 - 6 : 0 = Sunday) */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>9</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; int ip4,ip3,ip2,ip1;</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>7</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; int *_weekday;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Day of week (0 - 6 : 0 = Sunday) */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>8</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; int *_minutes;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Minutes since midnight (midnight == 0)*/</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>9</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; int *_seconds;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Seconds since start of current minute */</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>10</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; int *_ip4,*_ip3,*_ip2,*_ip1;</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>10</th><th>11</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /*Components of ip address 128.195.22.217 yields</span>\u00a0</td>\n                  </tr><tr>\n                          <th>11</th><th>12</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* ip4 = 128</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.h?rev=124#L14\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.h?rev=125#L15\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>14</th><th>15</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* ip1 = 217</span>\u00a0</td>\n                  </tr><tr>\n                          <th>15</th><th>16</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*/</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>16</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; char *dNSName;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /*luci.ics.uci.edu for example */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>17</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; char *locationStatus;&nbsp; &nbsp;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>18</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; char *activityStatus;&nbsp; &nbsp;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>19</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; char *socialStatusStatus;&nbsp; &nbsp; &nbsp; &nbsp;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>20</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; char *freeFormStatus;&nbsp; &nbsp;</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>17</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; char *_dNSName;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/*luci.ics.uci.edu for example */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>18</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; bool *_isStructured;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>19</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; union{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>20</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; struct{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>21</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char *activityStatus;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>22</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char *locationStatus;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>23</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char *socialStatusStatus;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>24</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }_structured;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>25</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; struct{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>26</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char *freeFormStatus;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>27</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }_unstructured;</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>28</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }_context;</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>21</th><th>29</th><td class=\"l\"><span>} feature;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>22</th><th>30</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>23</th><th>\u00a0</th><td class=\"l\"><span>feature *newFeature(int minutes,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>24</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int wday,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>25</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int ip4, int ip3, int ip2,int ip1,</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>31</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>32</th><td class=\"r\"><span>feature *newFeature(</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>33</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const int *weekday,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>34</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const int *minutes,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>35</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const int *seconds,</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>36</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const int *ip4, const int *ip3, const int *ip2,const int *ip1,</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>26</th><th>37</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const char *dNSName,</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"last first\">\n                          <th>\u00a0</th><th>38</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const char *activityStatus,</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>27</th><th>39</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const char *locationStatus,</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"last first\">\n                          <th>28</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const char *activityStatus,</del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>29</th><th>40</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const char *socialStatusStatus,</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>30</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const char *freeFormStatus</span>\u00a0</td>\n                      </tr><tr>\n                        <th>31</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; );</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>41</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const char *freeFormStatus);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>32</th><th>42</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>43</th><td class=\"r\"><ins>int featureGetWeekday(const feature *f);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>44</th><td class=\"r\"><ins>const int *featureGetWeekday_P(const feature *f);</ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>45</th><td class=\"r\"><ins>void featureSetWeekday(feature *f,const int weekday);</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>33</th><th>46</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>34</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>47</th><td class=\"r\"><span>int featureGetMinutes(const feature *f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>48</th><td class=\"r\"><span>const int *featureGetMinutes_P(const feature *f);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>49</th><td class=\"r\"><span>void featureSetMinutes(feature *f,const int minutes);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>35</th><th>50</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>36</th><th>\u00a0</th><td class=\"l\"><span>float calculateDistanceMinutes(int a,int b);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>37</th><th>\u00a0</th><td class=\"l\"><span>float calculateDistanceWeekday(int a, int b);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>38</th><th>\u00a0</th><td class=\"l\"><span>float calculateDistanceIPAddress( int aIP4, int aIP3, int aIP2, int aIP1, int bIP4, int bIP3, int bIP2, int bIP1 );</span>\u00a0</td>\n                      </tr><tr>\n                        <th>39</th><th>\u00a0</th><td class=\"l\"><span>float calculateDistanceDNSName(char *a,char *b);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>40</th><th>\u00a0</th><td class=\"l\"><span>float calculateDistanceAnyStatus(char *a,char *b);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>51</th><td class=\"r\"><span>int featureGetSeconds(const feature *f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>52</th><td class=\"r\"><span>const int *featureGetSeconds_P(const feature *f);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>53</th><td class=\"r\"><span>void featureSetSeconds(feature *f,const int seconds);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>41</th><th>54</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>42</th><th>\u00a0</th><td class=\"l\"><span>float calculateDistance(feature *a,feature *b);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>55</th><td class=\"r\"><span>int featureGetIP4(const feature *f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>56</th><td class=\"r\"><span>const int *featureGetIP4_P(const feature *f);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>57</th><td class=\"r\"><span>void featureSetIP4(feature *f,const int ip4);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>43</th><th>58</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>44</th><th>\u00a0</th><td class=\"l\"><span>feature *cloneFeature(feature *f);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>59</th><td class=\"r\"><span>int featureGetIP3(const feature *f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>60</th><td class=\"r\"><span>const int *featureGetIP3_P(const feature *f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>61</th><td class=\"r\"><span>void featureSetIP3(feature *f,const int ip3);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>62</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>63</th><td class=\"r\"><span>int featureGetIP2(const feature *f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>64</th><td class=\"r\"><span>const int *featureGetIP2_P(const feature *f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>65</th><td class=\"r\"><span>void featureSetIP2(feature *f,const int ip2);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>66</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>67</th><td class=\"r\"><span>int featureGetIP1(const feature *f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>68</th><td class=\"r\"><span>const int *featureGetIP1_P(const feature *f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>69</th><td class=\"r\"><span>void featureSetIP1(feature *f,const int ip1);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>70</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>71</th><td class=\"r\"><span>void featureSetIP(feature *f,const int ip4,const int ip3,const int ip2,const int ip1);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>72</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>73</th><td class=\"r\"><span>const char *featureGetDNSName(const feature *f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>74</th><td class=\"r\"><span>void featureSetDNSName(feature *f,const char *DNSName);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>75</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>76</th><td class=\"r\"><span>bool featureGetIsStructured(const feature *const f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>77</th><td class=\"r\"><span>const bool *featureGetIsStructured_P(const feature *f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>78</th><td class=\"r\"><span>void featureSetIsStructured(feature *f,const bool isStructured);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>79</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>80</th><td class=\"r\"><span>const char *featureGetActivityStatus(const feature *f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>81</th><td class=\"r\"><span>void featureSetActivityStatus(feature *f,const char *activityStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>82</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>83</th><td class=\"r\"><span>const char *featureGetLocationStatus(const feature *f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>84</th><td class=\"r\"><span>void featureSetLocationStatus(feature *f,const char *locationStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>85</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>86</th><td class=\"r\"><span>const char *featureGetSocialStatusStatus(const feature *f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>87</th><td class=\"r\"><span>void featureSetSocialStatusStatus(feature *f,const char *socialStatusStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>88</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>89</th><td class=\"r\"><span>const char *featureGetFreeFormStatus(const feature *f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>90</th><td class=\"r\"><span>void featureSetFreeFormStatus(feature *f,const char *freeFormStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>91</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>92</th><td class=\"r\"><span>float calculateDistanceWeekday(const int a, const int b);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>93</th><td class=\"r\"><span>float calculateDistanceMinutes(const int a,const int b);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>94</th><td class=\"r\"><span>float calculateDistanceSeconds(const int a,const int b);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>95</th><td class=\"r\"><span>float calculateDistanceIPAddress(const int aIP4,const int aIP3,const int aIP2,const int aIP1,const int bIP4,const int bIP3,const int bIP2,const int bIP1 );</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>96</th><td class=\"r\"><span>float calculateDistanceDNSName(const char *a,const char *b);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>97</th><td class=\"r\"><span>float calculateDistanceAnyStatus(const char *a,const char *b);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>98</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>99</th><td class=\"r\"><span>float calculateDistance(const feature *a,const feature *b);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>100</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>101</th><td class=\"r\"><span>feature *cloneFeature(const feature *f);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>102</th><td class=\"r\"><span>void overwriteFeature(feature *dest, const feature *source);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>45</th><th>103</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>46</th><th>104</th><td class=\"l\"><span>int sortByTimeFunction(feature *a,feature *b);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>47</th><th>105</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>48</th><th>\u00a0</th><td class=\"l\"><span>int makeFeatureCSV(char *s,size_t size,<del></del> feature *f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>49</th><th>\u00a0</th><td class=\"l\"><span>int makeFeatureText(char *s,size_t size,<del></del> feature *f);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>106</th><td class=\"r\"><span>int makeFeatureCSV(char *s,size_t size,<ins>const</ins> feature *f);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>107</th><td class=\"r\"><span>int makeFeatureText(char *s,size_t size,<ins>const</ins> feature *f);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>50</th><th>108</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>51</th><th>109</th><td class=\"l\"><span>void outputFeatureCSVHeader(FILE *file);</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.h?rev=124#L57\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/feature.h?rev=125#L115\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>57</th><th>115</th><td class=\"l\"><span>void freeFeature(feature *f);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>58</th><th>116</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>59</th><th>\u00a0</th><td class=\"l\"><span>feature *senseFeature(const char *ls, const char *as, const char *ss, const char *ffs);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>60</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>117</th><td class=\"r\"><span>feature *senseFeature();</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>61</th><th>118</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>62</th><th>119</th><td class=\"l\"><span>#endif /*FEATURE_H_*/</span>\u00a0</td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n      <li class=\"entry\">\n        <h2 id=\"file8\">\n          <a href=\"/LUCICodeRepository/nomaticIM/changeset/125/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/featureCollection.c\" title=\"Show the changeset 125 restricted to trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/featureCollection.c\">trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/featureCollection.c</a>\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"Revision 124\">\n                    <a title=\"Show revision 124 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/featureCollection.c?rev=124#L9\">\n                      r124</a>\n                  </th>\n                  <th title=\"Revision 125\">\n                    <a title=\"Show revision 125 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/featureCollection.c?rev=125#L9\">\n                      r125</a>\n                  </th>\n                  <td>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>9</th><th>9</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>10</th><th>10</th><td class=\"l\"><span>//Internal declarations</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>11</th><th>\u00a0</th><td class=\"l\"><span>bool myFeatureCollectionOutputFunction(feature *train,<del>classification *c,</del>FILE *dataFile);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>12</th><th>\u00a0</th><td class=\"l\"><span>bool findNearestNeighborFeatureHelper(feature *train,<del>classification *c,</del>feature *test);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>11</th><td class=\"r\"><span>bool myFeatureCollectionOutputFunction(feature *train,<ins></ins>FILE *dataFile);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>12</th><td class=\"r\"><span>bool findNearestNeighborFeatureHelper(feature *train,<ins></ins>feature *test);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>13</th><th>13</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>14</th><th>14</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/featureCollection.c?rev=124#L21\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/featureCollection.c?rev=125#L21\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>21</th><th>21</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,</span>\u00a0</td>\n                  </tr><tr>\n                          <th>22</th><th>22</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (GDestroyNotify)freeFeature,</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>23</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (GDestroyNotify)free<del>Classification</del>);</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>23</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (GDestroyNotify)free<ins>Feature</ins>);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>24</th><th>24</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>25</th><th>25</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/featureCollection.c?rev=124#L31\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/featureCollection.c?rev=125#L31\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>31</th><th>31</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; dataFile = fopen(\"nomaticDataFile.txt\",\"wb\");</span>\u00a0</td>\n                  </tr><tr>\n                          <th>32</th><th>32</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(dataFile == NULL){</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>33</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <del>gaim_debug_f</del>atal(NULL,\"Nomatic: Unable to open a data file for storing feature tree\\n\");</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>33</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <ins>nomaticDebugF</ins>atal(NULL,\"Nomatic: Unable to open a data file for storing feature tree\\n\");</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>34</th><th>34</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>35</th><th>35</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>36</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <del>gaim_debug_m</del>isc(NULL,\"Nomatic: Opened a data file for storing feature tree\\n\");</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>36</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <ins>nomaticDebugM</ins>isc(NULL,\"Nomatic: Opened a data file for storing feature tree\\n\");</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>37</th><th>37</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>38</th><th>38</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/featureCollection.c?rev=124#L46\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/featureCollection.c?rev=125#L46\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>46</th><th>46</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>47</th><th>47</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>48</th><th>\u00a0</th><td class=\"l\"><span>void storeFeature(<del>feature *f,classification *c</del>)</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>48</th><td class=\"r\"><span>void storeFeature(<ins>const feature *f</ins>)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>49</th><th>49</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>50</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(c == NULL){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>51</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_fatal(NULL,\"Nomatic: Can't store a null classification \\n\");</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>50</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugMisc(NULL,\"Nomatic: Tree size before %d\\n\", g_tree_nnodes(featureCollection));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>51</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; char s[1024];</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>52</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; makeFeatureText(s,sizeof(s),f); </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>53</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugMisc(NULL,\"Nomatic: Store feature: %s\\n\",s);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>54</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>55</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if( !f ){</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>56</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugFatal(NULL,\"Nomatic: Can't store a null feature\\n\");</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>52</th><th>57</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>53</th><th>58</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"last first\">\n                          <th>\u00a0</th><th>59</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugMisc(NULL,\"Nomatic: Tree size before %d\\n\", g_tree_nnodes(featureCollection));</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>54</th><th>60</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* If there is already an entry with the same features, but maybe a different context, then overwrite it after freeing the memory */</span>\u00a0</td>\n                  </tr><tr>\n                          <th>55</th><th>61</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; g_tree_remove(featureCollection,f);</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>56</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; g_tree_insert(featureCollection,f,c);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>62</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Ideally we would put the same object in twice, not two identical clones, but the deallocation procedure would be messed up if we did */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>63</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; g_tree_insert(featureCollection,cloneFeature(f),cloneFeature(f));</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>64</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugMisc(NULL,\"Nomatic: Tree size after %d\\n\", g_tree_nnodes(featureCollection));</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>57</th><th>65</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>58</th><th>66</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>59</th><th>67</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>60</th><th>\u00a0</th><td class=\"l\"><span>void featureCollectionAddTrainingData(<del>feature *f,classification *c</del>)</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>68</th><td class=\"r\"><span>void featureCollectionAddTrainingData(<ins>const feature *f</ins>)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>61</th><th>69</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>62</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>63</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(f &amp;&amp; c){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>64</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; storeFeature(f,c);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>70</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if( f ){</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>71</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; storeFeature(f);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>65</th><th>72</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>66</th><th>73</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/featureCollection.c?rev=124#L71\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/featureCollection.c?rev=125#L78\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>71</th><th>78</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>72</th><th>79</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(!featureCollection){</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>73</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <del>gaim_debug_f</del>atal(NULL,\"Nomatic: FeatureCollection is null\\n\");</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>80</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <ins>nomaticDebugF</ins>atal(NULL,\"Nomatic: FeatureCollection is null\\n\");</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>74</th><th>81</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>75</th><th>82</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if( (completion = gtk_entry_get_completion(GTK_ENTRY(location)))){</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/featureCollection.c?rev=124#L89\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/featureCollection.c?rev=125#L96\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>89</th><th>96</th><td class=\"l\"><span>float bestScore;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>90</th><th>97</th><td class=\"l\"><span>feature *bestF;</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"last first\">\n                          <th>91</th><th>\u00a0</th><td class=\"l\"><del>classification *bestC;</del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>92</th><th>98</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>93</th><th>99</th><td class=\"l\"><span>void</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/featureCollection.c?rev=124#L96\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/featureCollection.c?rev=125#L102\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>96</th><th>102</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; bestScore = -1.0;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>97</th><th>103</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; bestF = NULL;</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"last first\">\n                          <th>98</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; bestC = NULL;</del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>99</th><th>104</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>100</th><th>105</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>101</th><th>\u00a0</th><td class=\"l\"><span><del>classification</del> *findNearestNeighborFeature(feature *f)</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>106</th><td class=\"r\"><span><ins>feature</ins> *findNearestNeighborFeature(feature *f)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>102</th><th>107</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>103</th><th>108</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; findNearestNeighborFeatureHelperInit();</span>\u00a0</td>\n                  </tr><tr>\n                          <th>104</th><th>109</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; g_tree_foreach(featureCollection,(GTraverseFunc)findNearestNeighborFeatureHelper,f);</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>105</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(best<del>C</del>);</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>110</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(best<ins>F</ins>);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>106</th><th>111</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>107</th><th>112</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>108</th><th>113</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>109</th><th>114</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>110</th><th>\u00a0</th><td class=\"l\"><span>bool findNearestNeighborFeatureHelper(feature *train,<del>classification *c,</del>feature *test)</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>115</th><td class=\"r\"><span>bool findNearestNeighborFeatureHelper(feature *train,<ins></ins>feature *test)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>111</th><th>116</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>112</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if( train &amp;&amp; <del>c &amp;&amp; </del>test){</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>117</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if( train &amp;&amp; <ins></ins>test){</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>113</th><th>118</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; float d = calculateDistance(train,test);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>114</th><th>119</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if ((bestScore &lt; 0.0) || (d &lt; bestScore)){</span>\u00a0</td>\n                  </tr><tr>\n                          <th>115</th><th>120</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bestScore = d;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>116</th><th>121</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bestF = train;</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>117</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bestC = c;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>118</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //gaim_debug_misc(NULL,\"Nomatic: finding NN: %d, %d, ip %d.%d.%d.%d %s\\n\",bestF-&gt;wday,bestF-&gt;minutes,bestF-&gt;ip4,bestF-&gt;ip3,bestF-&gt;ip2,bestF-&gt;ip1,bestF-&gt;phrase);</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>122</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //nomaticDebugMisc(NULL,\"Nomatic: finding NN: %d, %d, ip %d.%d.%d.%d %s\\n\",bestF-&gt;wday,bestF-&gt;minutes,bestF-&gt;ip4,bestF-&gt;ip3,bestF-&gt;ip2,bestF-&gt;ip1,bestF-&gt;phrase);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>119</th><th>123</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>120</th><th>124</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>121</th><th>125</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>122</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <del>gaim_debug_f</del>atal(NULL,\"Nomatic: Something went wrong with the data structure in findNearestNeighbor\\n\");</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>126</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <ins>nomaticDebugF</ins>atal(NULL,\"Nomatic: Something went wrong with the data structure in findNearestNeighbor\\n\");</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>123</th><th>127</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>124</th><th>128</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/featureCollection.c?rev=124#L128\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/featureCollection.c?rev=125#L132\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>128</th><th>132</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>129</th><th>133</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>130</th><th>\u00a0</th><td class=\"l\"><span>bool myFeatureCollectionOutputFunction(feature *<del>train,classification *c</del>,FILE *dataFile)</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>134</th><td class=\"r\"><span>bool myFeatureCollectionOutputFunction(feature *<ins>f</ins>,FILE *dataFile)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>131</th><th>135</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>132</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(train &amp;&amp; c){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>133</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; outputFeatureRaw(dataFile,train);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>134</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; outputClassificationRaw(dataFile,c);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>136</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(f){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>137</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; outputFeatureRaw(dataFile,f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>138</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>139</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char s[1024];</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>140</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; makeFeatureText(s,sizeof(s),f); </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>141</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>142</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugMisc(NULL,\"Nomatic: Just output a feature: %s\\n\",s);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>135</th><th>143</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>136</th><th>144</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>137</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <del>gaim_debug_f</del>atal(NULL,\"Nomatic: Something went wrong with the data structure\\n\");</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>145</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <ins>nomaticDebugF</ins>atal(NULL,\"Nomatic: Something went wrong with the data structure\\n\");</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>138</th><th>146</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>139</th><th>147</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</span>\u00a0</td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n      <li class=\"entry\">\n        <h2 id=\"file9\">\n          <a href=\"/LUCICodeRepository/nomaticIM/changeset/125/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/featureCollection.h\" title=\"Show the changeset 125 restricted to trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/featureCollection.h\">trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/featureCollection.h</a>\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"Revision 124\">\n                    <a title=\"Show revision 124 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/featureCollection.h?rev=124#L5\">\n                      r124</a>\n                  </th>\n                  <th title=\"Revision 125\">\n                    <a title=\"Show revision 125 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/featureCollection.h?rev=125#L5\">\n                      r125</a>\n                  </th>\n                  <td>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>5</th><th>5</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>6</th><th>6</th><td class=\"l\"><span>#include \"feature.h\"</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>7</th><th>\u00a0</th><td class=\"l\"><span>#include \"classification.h\"</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>7</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>8</th><td class=\"r\"><span>extern GTree *featureCollection;</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>8</th><th>9</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>9</th><th>10</th><td class=\"l\"><span>void featureCollectionInit();</span>\u00a0</td>\n                  </tr><tr>\n                          <th>10</th><th>11</th><td class=\"l\"><span>void featureCollectionShutdown();</span>\u00a0</td>\n                  </tr><tr>\n                          <th>11</th><th>12</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>12</th><th>\u00a0</th><td class=\"l\"><span>void storeFeature(<del>feature *fv,classification *c</del>);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>13</th><th>\u00a0</th><td class=\"l\"><span>void featureCollectionAddTrainingData(<del>feature *f,classification *c</del>);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>13</th><td class=\"r\"><span>void storeFeature(<ins>const feature *fv</ins>);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>14</th><td class=\"r\"><span>void featureCollectionAddTrainingData(<ins>const feature *f</ins>);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>14</th><th>15</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>15</th><th>\u00a0</th><td class=\"l\"><span><del>classification *findNearestNeighborFeature(feature *fv</del>);</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>16</th><td class=\"r\"><span><ins>feature *findNearestNeighborFeature(feature *f</ins>);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>16</th><th>17</th><td class=\"l\"><span>void featureCollectionTransferToCompletionField(GtkWidget *location,GtkWidget *activity, GtkWidget *socialStatus, GtkWidget *freeForm);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>17</th><th>18</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n      <li class=\"entry\">\n        <h2 id=\"file10\">\n          <a href=\"/LUCICodeRepository/nomaticIM/changeset/125/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/myUtilities.c\" title=\"Show the changeset 125 restricted to trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/myUtilities.c\">trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/myUtilities.c</a>\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"Revision 124\">\n                    <a title=\"Show revision 124 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/myUtilities.c?rev=124#L4\">\n                      r124</a>\n                  </th>\n                  <th title=\"Revision 125\">\n                    <a title=\"Show revision 125 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/myUtilities.c?rev=125#L4\">\n                      r125</a>\n                  </th>\n                  <td>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>4</th><th>4</th><td class=\"l\"><span>#include \"myUtilities.h\"</span>\u00a0</td>\n                  </tr><tr>\n                          <th>5</th><th>5</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>6</th><th>\u00a0</th><td class=\"l\"><span>void outputString(FILE *f,c<del></del>har *p)</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>6</th><td class=\"r\"><span>void outputString(FILE *f,c<ins>onst c</ins>har *p)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>7</th><th>7</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>8</th><th>8</th><td class=\"l\"><span>char c = 'x';</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/myUtilities.c?rev=124#L35\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/myUtilities.c?rev=125#L35\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>35</th><th>35</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>36</th><th>36</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>37</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>38</th><td class=\"r\"><ins>void nomaticDebugMisc(void *a, const char *format, ...)</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>39</th><td class=\"r\"><ins>{</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>40</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; va_list args;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>41</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>42</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; va_start(args, format);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>43</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; vfprintf(stderr,format, args);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>44</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; va_end(args);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>45</th><td class=\"r\"><ins>}</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>46</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>47</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>48</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>49</th><td class=\"r\"><ins>void nomaticDebugFatal(void *a, const char *format, ...)</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>50</th><td class=\"r\"><ins>{</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>51</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; va_list args;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>52</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>53</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; va_start(args, format);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>54</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; vfprintf(stderr,format, args);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>55</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; va_end(args);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>56</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; exit(0);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>57</th><td class=\"r\"><ins>}</ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>58</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n      <li class=\"entry\">\n        <h2 id=\"file11\">\n          <a href=\"/LUCICodeRepository/nomaticIM/changeset/125/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/myUtilities.h\" title=\"Show the changeset 125 restricted to trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/myUtilities.h\">trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/myUtilities.h</a>\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"Revision 124\">\n                    <a title=\"Show revision 124 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/myUtilities.h?rev=124#L14\">\n                      r124</a>\n                  </th>\n                  <th title=\"Revision 125\">\n                    <a title=\"Show revision 125 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/myUtilities.h?rev=125#L14\">\n                      r125</a>\n                  </th>\n                  <td>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>14</th><th>14</th><td class=\"l\"><span>#endif</span>\u00a0</td>\n                  </tr><tr>\n                          <th>15</th><th>15</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>16</th><th>\u00a0</th><td class=\"l\"><span>void outputString(FILE *f,c<del></del>har *p);</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>16</th><td class=\"r\"><span>void outputString(FILE *f,c<ins>onst c</ins>har *p);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>17</th><th>17</th><td class=\"l\"><span>bool inputString(char *string,size_t max,FILE *f);</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>18</th><td class=\"r\"><ins>void nomaticDebugMisc(void *a, const char *format, ...);</ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>19</th><td class=\"r\"><ins>void nomaticDebugFatal(void *a, const char *format, ...);</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>18</th><th>20</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>19</th><th>21</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n      <li class=\"entry\">\n        <h2 id=\"file12\">\n          <a href=\"/LUCICodeRepository/nomaticIM/changeset/125/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c\" title=\"Show the changeset 125 restricted to trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c\">trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c</a>\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"Revision 124\">\n                    <a title=\"Show revision 124 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L2\">\n                      r124</a>\n                  </th>\n                  <th title=\"Revision 125\">\n                    <a title=\"Show revision 125 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L2\">\n                      r125</a>\n                  </th>\n                  <td>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>2</th><th>2</th><td class=\"l\"><span>&nbsp; &nbsp; Research:&nbsp; &nbsp;Nomatic Research</span>\u00a0</td>\n                  </tr><tr>\n                          <th>3</th><th>3</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; Title:&nbsp; &nbsp; &nbsp; GAIM Nomatic Plugin</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>4</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; Authors:&nbsp; &nbsp; D<del>r.</del> Patterson</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>4</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; Authors:&nbsp; &nbsp; D<ins>on</ins> Patterson</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>5</th><th>5</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Nick Noack </span>\u00a0</td>\n                  </tr><tr>\n                          <th>6</th><th>6</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Kah Liu</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L38\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L38\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>38</th><th>38</th><td class=\"l\"><span>#include \"feature.h\"</span>\u00a0</td>\n                  </tr><tr>\n                          <th>39</th><th>39</th><td class=\"l\"><span>#include \"featureCollection.h\"</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"last first\">\n                          <th>40</th><th>\u00a0</th><td class=\"l\"><del>#include \"classification.h\"</del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>41</th><th>40</th><td class=\"l\"><span>#include \"networkHelper.h\"</span>\u00a0</td>\n                  </tr><tr>\n                          <th>42</th><th>41</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L71\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L70\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>71</th><th>70</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>72</th><th>71</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>73</th><th>\u00a0</th><td class=\"l\"><span>static char *freeFormStatus=NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>74</th><th>\u00a0</th><td class=\"l\"><span>static char *locationStatus=NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>75</th><th>\u00a0</th><td class=\"l\"><span>static char *activityStatus=NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>76</th><th>\u00a0</th><td class=\"l\"><span>static char *socialStatusStatus=NULL;</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>72</th><td class=\"r\"><span>static bool _usingStructured = TRUE;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>73</th><td class=\"r\"><span>static char *_activityStatus=NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>74</th><td class=\"r\"><span>static char *_locationStatus=NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>75</th><td class=\"r\"><span>static char *_socialStatusStatus=NULL;</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>76</th><td class=\"r\"><span>static char *_freeFormStatus=NULL;</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>77</th><th>77</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>78</th><th>78</th><td class=\"l\"><span>/* Returns true if there is a change */</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>79</th><th>\u00a0</th><td class=\"l\"><span>bool setParse(char **status,const char *p)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>80</th><th>\u00a0</th><td class=\"l\"><span>{</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>79</th><td class=\"r\"><span>bool setStatus(char **dest,const char *source,const bool usingStructuredNow)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>80</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>81</th><td class=\"r\"><span>bool ret = FALSE;</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>82</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>81</th><th>83</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; //Degenerate case</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>82</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(status == NULL){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>83</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_fatal(NULL,\"Nomatic: setParse called with NULL parameter\\n\");</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>84</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(dest == NULL){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>85</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugFatal(NULL,\"Nomatic: setStatus called with NULL parameter\\n\");</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>86</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(FALSE); //We shouldn't ever get here</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>84</th><th>87</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>85</th><th>88</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>86</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(*status == NULL){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>87</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(p == NULL){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>88</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>89</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; //Deal with NULL strings&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>90</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(*dest == NULL){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>91</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(source == NULL){</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>92</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ret = FALSE;</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>89</th><th>93</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>90</th><th>94</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>91</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *<del>status = strdup(p</del>);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>92</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ret<del>urn(TRUE)</del>;</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>95</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *<ins>dest = strdup(source</ins>);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>96</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ret<ins>&nbsp;= TRUE</ins>;</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>93</th><th>97</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>94</th><th>98</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>95</th><th>99</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>96</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(<del>p</del> == NULL){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>97</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(*<del>status</del>);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>98</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *<del>status</del> = NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>99</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ret<del>urn(TRUE)</del>;</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>100</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(<ins>source</ins> == NULL){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>101</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(*<ins>dest</ins>);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>102</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *<ins>dest</ins> = NULL;</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>103</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ret<ins>&nbsp;= TRUE</ins>;</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>100</th><th>104</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>101</th><th>105</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>102</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(strcmp(*<del>status,p</del>)==0){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>103</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ret<del>urn(FALSE)</del>;</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>106</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(strcmp(*<ins>dest,source</ins>)==0){</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>107</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ret<ins>&nbsp;= FALSE</ins>;</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>104</th><th>108</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>105</th><th>109</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>106</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(*<del>status</del>);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>107</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *<del>status = strdup(p</del>);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>108</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ret<del>urn(TRUE)</del>;</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>110</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(*<ins>dest</ins>);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>111</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *<ins>dest = strdup(source</ins>);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>112</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ret<ins>&nbsp;= TRUE</ins>;</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>109</th><th>113</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>110</th><th>114</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>111</th><th>115</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>116</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>117</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(getUsingStructured() != usingStructuredNow){</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>118</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setUsingStructured(usingStructuredNow);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>119</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ret = TRUE;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>120</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>121</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>122</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(ret){</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>123</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //Update status after a change&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>124</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char *newStatus = makePresencePhrase();</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>125</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setPresencePhrase(newStatus);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>126</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(newStatus);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>127</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>128</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>129</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return(ret);</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>112</th><th>130</th><td class=\"l\"><span>}&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>113</th><th>131</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>114</th><th>\u00a0</th><td class=\"l\"><span>bool setFreeFormStatus(const char *p)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>115</th><th>\u00a0</th><td class=\"l\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>116</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(setParse(&amp;freeFormStatus,p));</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>132</th><td class=\"r\"><span>bool getUsingStructured()</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>133</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>134</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(_usingStructured);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>135</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>136</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>137</th><td class=\"r\"><span>void setUsingStructured(const bool usingStructuredNow)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>138</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>139</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; _usingStructured = usingStructuredNow;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>140</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>141</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>142</th><td class=\"r\"><span>bool setActivityStatus(const char *p,bool usingStructuredNow)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>143</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>144</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(setStatus(&amp;_activityStatus,p,usingStructuredNow));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>145</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>146</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>147</th><td class=\"r\"><span>const char *getActivityStatus()</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>148</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>149</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(_activityStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>150</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>151</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>152</th><td class=\"r\"><span>bool setLocationStatus(const char *p,bool usingStructuredNow)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>153</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>154</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(setStatus(&amp;_locationStatus,p,usingStructuredNow));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>155</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>156</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>157</th><td class=\"r\"><span>const char *getLocationStatus()</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>158</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>159</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(_locationStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>160</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>161</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>162</th><td class=\"r\"><span>bool setSocialStatusStatus(const char *p,bool usingStructuredNow)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>163</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>164</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(setStatus(&amp;_socialStatusStatus,p,usingStructuredNow));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>165</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>166</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>167</th><td class=\"r\"><span>const char *getSocialStatusStatus()</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>168</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>169</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(_socialStatusStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>170</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>171</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>172</th><td class=\"r\"><span>bool setFreeFormStatus(const char *p,bool usingStructuredNow)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>173</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>174</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(setStatus(&amp;_freeFormStatus,p,usingStructuredNow));</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>117</th><th>175</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>118</th><th>176</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>119</th><th>177</th><td class=\"l\"><span>const char *getFreeFormStatus()</span>\u00a0</td>\n                  </tr><tr>\n                          <th>120</th><th>178</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>121</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(freeFormStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>122</th><th>\u00a0</th><td class=\"l\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>123</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>124</th><th>\u00a0</th><td class=\"l\"><span>bool setParseLocation(const char *p)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>125</th><th>\u00a0</th><td class=\"l\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>126</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(setParse(&amp;locationStatus,p));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>127</th><th>\u00a0</th><td class=\"l\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>128</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>129</th><th>\u00a0</th><td class=\"l\"><span>const char *getParseLocation()</span>\u00a0</td>\n                      </tr><tr>\n                        <th>130</th><th>\u00a0</th><td class=\"l\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>131</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(locationStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>132</th><th>\u00a0</th><td class=\"l\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>133</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>134</th><th>\u00a0</th><td class=\"l\"><span>bool setParseActivity(const char *p)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>135</th><th>\u00a0</th><td class=\"l\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>136</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(setParse(&amp;activityStatus,p));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>137</th><th>\u00a0</th><td class=\"l\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>138</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>139</th><th>\u00a0</th><td class=\"l\"><span>const char *getParseActivity()</span>\u00a0</td>\n                      </tr><tr>\n                        <th>140</th><th>\u00a0</th><td class=\"l\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>141</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(activityStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>142</th><th>\u00a0</th><td class=\"l\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>143</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>144</th><th>\u00a0</th><td class=\"l\"><span>bool setParseSocialStatus(const char *p)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>145</th><th>\u00a0</th><td class=\"l\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>146</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(setParse(&amp;socialStatusStatus,p));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>147</th><th>\u00a0</th><td class=\"l\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>148</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>149</th><th>\u00a0</th><td class=\"l\"><span>const char *getParseSocialStatus()</span>\u00a0</td>\n                      </tr><tr>\n                        <th>150</th><th>\u00a0</th><td class=\"l\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>151</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(socialStatusStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>152</th><th>\u00a0</th><td class=\"l\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>153</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>154</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>155</th><th>\u00a0</th><td class=\"l\"><span>char *makeStatusFromStoredParse()</span>\u00a0</td>\n                      </tr><tr>\n                        <th>156</th><th>\u00a0</th><td class=\"l\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>157</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(makeStatusFromParse(locationStatus,activityStatus,socialStatusStatus));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>158</th><th>\u00a0</th><td class=\"l\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>159</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>160</th><th>\u00a0</th><td class=\"l\"><span>char *makeStatusFromParse(char *l,char *a,char *ss)</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>179</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(_freeFormStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>180</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>181</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>182</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>183</th><td class=\"r\"><span>char *makePresencePhrase()</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>161</th><th>184</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>162</th><th>185</th><td class=\"l\"><span>char *string;</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L164\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L187\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>164</th><th>187</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; string = (char *)calloc(1024,sizeof(char));</span>\u00a0</td>\n                  </tr><tr>\n                          <th>165</th><th>188</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>166</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; snprintf(string,1024*sizeof(char),\"%s %s %s\",l,a,ss);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>167</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>189</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(getUsingStructured()){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>190</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; snprintf(string,1024*sizeof(char),\"%s %s %s\",getLocationStatus(),getActivityStatus(),getSocialStatusStatus());</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>191</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>192</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>193</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; snprintf(string,1024*sizeof(char),\"%s\",getFreeFormStatus());</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>194</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>168</th><th>195</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(string);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>169</th><th>196</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>170</th><th>197</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>171</th><th>198</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>172</th><th>\u00a0</th><td class=\"l\"><span>void set<del>CurrentStatus</del>(const gchar *phrase)</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>199</th><td class=\"r\"><span>void set<ins>PresencePhrase</ins>(const gchar *phrase)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>173</th><th>200</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>174</th><th>201</th><td class=\"l\"><span>GaimSavedStatus *status = NULL;</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L180\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L207\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>180</th><th>207</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>181</th><th>208</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>182</th><th>\u00a0</th><td class=\"l\"><span>void predictCurrentStatus()</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>209</th><td class=\"r\"><span>/** If the last call was longer than MIN_PREDICT_FREQUENCY ago, then</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>210</th><td class=\"r\"><span>&nbsp;* sense the sensors available,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>211</th><td class=\"r\"><span>&nbsp;* use that info to predict the current status,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>212</th><td class=\"r\"><span>&nbsp;* then actually set status to that*/</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>213</th><td class=\"r\"><span>void predictAndSetStatus(feature *knownFeatures)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>183</th><th>214</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>184</th><th>215</th><td class=\"l\"><span>static int lastCheck=0;</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L186\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L217\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>186</th><th>217</th><td class=\"l\"><span>time_t tim = time(NULL);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>187</th><th>218</th><td class=\"l\"><span>struct tm *timeinfo= localtime(&amp;tim); /**http://www.cplusplus.com/ref/ctime/tm.html**/</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>188</th><th>\u00a0</th><td class=\"l\"><span>feature *f;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>189</th><th>\u00a0</th><td class=\"l\"><span>classification *nn;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>190</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>191</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>219</th><td class=\"r\"><span>feature *f,*nn;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>220</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>221</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* Don't predict Current Status more often than desired as it might take lots of resources */</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>192</th><th>222</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(abs(timeinfo-&gt;tm_min - lastCheck) &gt;= MIN_PREDICT_FREQUENCY){</span>\u00a0</td>\n                  </tr><tr>\n                          <th>193</th><th>223</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lastCheck = timeinfo-&gt;tm_min;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>194</th><th>224</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>195</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; f = senseFeature(getParseLocation(),getParseActivity(),getParseSocialStatus(),getFreeFormStatus());</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>225</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; f = senseFeature();</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>226</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugMisc(NULL,\"Nomatic: predictAndSetStatus 0\\n\");</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>196</th><th>227</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(f != NULL){</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>197</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_misc(NULL,\"Nomatic: Sensing status: minutes:%d, day:%d, ip %d.%d.%d.%d\\n\",f-&gt;minutes,f-&gt;wday,f-&gt;ip4,f-&gt;ip3,f-&gt;ip2,f-&gt;ip1);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>228</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugMisc(NULL,\"Nomatic: predictAndSetStatus 0.5\\n\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>229</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; overwriteFeature(f,knownFeatures);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>230</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugMisc(NULL,\"Nomatic: predictAndSetStatus 1\\n\");</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>231</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //nomaticDebugMisc(NULL,\"Nomatic: Sensing status: minutes:%d, day:%d, ip %d.%d.%d.%d\\n\",f-&gt;minutes,f-&gt;wday,f-&gt;ip4,f-&gt;ip3,f-&gt;ip2,f-&gt;ip1);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>198</th><th>232</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nn = findNearestNeighborFeature(f);</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"last first\">\n                          <th>\u00a0</th><th>233</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugMisc(NULL,\"Nomatic: predictAndSetStatus 2\\n\");</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>199</th><th>234</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; freeFeature(f);</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"last first\">\n                          <th>\u00a0</th><th>235</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugMisc(NULL,\"Nomatic: predictAndSetStatus 3\\n\");</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>200</th><th>236</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>201</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(nn == NULL){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>202</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //Probably because there is nothing to train on </span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>237</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!nn){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>238</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //Probably null because there is nothing to train on,</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>239</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //in which case leave status the way it is</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>203</th><th>240</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>204</th><th>241</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>205</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(nn-&gt;isFreeForm){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>206</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setCurrentStatus(nn-&gt;context.freeForm);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>207</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text(GTK_ENTRY(freeFormTextbox),nn-&gt;context.freeForm);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>208</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_misc(NULL,\"Nomatic: Predicting by NN: Free Form:%s\\n\",nn-&gt;context.freeForm);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>242</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugMisc(NULL,\"Nomatic: predictAndSetStatus 4\\n\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>243</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(featureGetIsStructured(nn)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>244</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setActivityStatus(featureGetActivityStatus(nn),featureGetIsStructured(nn));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>245</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text(GTK_ENTRY(activityTextbox),featureGetActivityStatus(nn));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>246</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>247</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setLocationStatus(featureGetLocationStatus(nn),featureGetIsStructured(nn));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>248</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text(GTK_ENTRY(locationTextbox),featureGetLocationStatus(nn));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>249</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>250</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setSocialStatusStatus(featureGetSocialStatusStatus(nn),featureGetIsStructured(nn));</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>251</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text(GTK_ENTRY(socialStatusTextbox),featureGetSocialStatusStatus(nn));</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>209</th><th>252</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>210</th><th>253</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>211</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setParseLocation(nn-&gt;context.parsed.location);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>212</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text(GTK_ENTRY(locationTextbox),nn-&gt;context.parsed.location);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>213</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>214</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setParseActivity(nn-&gt;context.parsed.activity);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>215</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text(GTK_ENTRY(activityTextbox),nn-&gt;context.parsed.activity);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>216</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>217</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setParseSocialStatus(nn-&gt;context.parsed.socialStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>218</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text(GTK_ENTRY(socialStatusTextbox),nn-&gt;context.parsed.socialStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>219</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>220</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char *s=makeStatusFromStoredParse();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>221</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setCurrentStatus(s);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>222</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_misc(NULL,\"Nomatic: Predicting by NN: Parsed :%s\\n\",s);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>223</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(s);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>254</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setFreeFormStatus(featureGetFreeFormStatus(nn),featureGetIsStructured(nn));</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>255</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text(GTK_ENTRY(freeFormTextbox),featureGetFreeFormStatus(nn));</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>224</th><th>256</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>225</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>257</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char *s = makePresencePhrase();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>258</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugMisc(NULL,\"Nomatic: Predicting by NN: %s :%s\\n\",(getUsingStructured())?\"Structured\":\"Unstructured\",s);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>259</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(s);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>226</th><th>260</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>261</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>262</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>263</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugMisc(NULL,\"Nomatic: Sensing failed\\n\");</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>227</th><th>264</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>228</th><th>265</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L235\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L272\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>235</th><th>272</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GaimStatus *status, void *data)</span>\u00a0</td>\n                  </tr><tr>\n                          <th>236</th><th>273</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>237</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; <del>gaim_debug_m</del>isc(NULL,\"Nomatic: buddy-status-changed (%s %s to %s)\\n\",</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>274</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; <ins>nomaticDebugM</ins>isc(NULL,\"Nomatic: buddy-status-changed (%s %s to %s)\\n\",</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>238</th><th>275</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; buddy-&gt;name, gaim_status_get_id(old_status),</span>\u00a0</td>\n                  </tr><tr>\n                          <th>239</th><th>276</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_status_get_id(status));</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>240</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; predict<del>CurrentStatus(</del>);</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>277</th><td class=\"r\"><span>&nbsp; &nbsp; predict<ins>AndSetStatus(NULL</ins>);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>241</th><th>278</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>242</th><th>279</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L245\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L282\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>245</th><th>282</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; void *data)</span>\u00a0</td>\n                  </tr><tr>\n                          <th>246</th><th>283</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>247</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; <del>gaim_debug_m</del>isc(NULL,\"Nomatic: buddy-idle-changed (%s %s)\\n\",</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>284</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; <ins>nomaticDebugM</ins>isc(NULL,\"Nomatic: buddy-idle-changed (%s %s)\\n\",</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>248</th><th>285</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; buddy-&gt;name, old_idle ? \"unidled\" : \"idled\");</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>249</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; predict<del>CurrentStatus(</del>);</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>286</th><td class=\"r\"><span>&nbsp; &nbsp; predict<ins>AndSetStatus(NULL</ins>);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>250</th><th>287</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>251</th><th>288</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L253\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L290\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>253</th><th>290</th><td class=\"l\"><span>buddy_signed_on_cb(GaimBuddy *buddy, void *data)</span>\u00a0</td>\n                  </tr><tr>\n                          <th>254</th><th>291</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>255</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; <del>gaim_debug_m</del>isc(NULL,\"Nomatic: buddy-signed-on (%s)\\n\", buddy-&gt;name);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>256</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; predict<del>CurrentStatus(</del>);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>292</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; <ins>nomaticDebugM</ins>isc(NULL,\"Nomatic: buddy-signed-on (%s)\\n\", buddy-&gt;name);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>293</th><td class=\"r\"><span>&nbsp; &nbsp; predict<ins>AndSetStatus(NULL</ins>);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>257</th><th>294</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>258</th><th>295</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L260\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L297\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>260</th><th>297</th><td class=\"l\"><span>buddy_signed_off_cb(GaimBuddy *buddy, void *data)</span>\u00a0</td>\n                  </tr><tr>\n                          <th>261</th><th>298</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>262</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; <del>gaim_debug_m</del>isc(NULL,\"Nomatic: buddy-signed-off (%s)\\n\", buddy-&gt;name);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>263</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; predict<del>CurrentStatus(</del>);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>299</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; <ins>nomaticDebugM</ins>isc(NULL,\"Nomatic: buddy-signed-off (%s)\\n\", buddy-&gt;name);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>300</th><td class=\"r\"><span>&nbsp; &nbsp; predict<ins>AndSetStatus(NULL</ins>);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>264</th><th>301</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>265</th><th>302</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L267\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L304\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>267</th><th>304</th><td class=\"l\"><span>buddy_added_cb(GaimBuddy *buddy, void *data)</span>\u00a0</td>\n                  </tr><tr>\n                          <th>268</th><th>305</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>269</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; <del>gaim_debug_m</del>isc(NULL,\"Nomatic: buddy_added_cb (%s)\\n\", gaim_buddy_get_name(buddy));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>270</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; predict<del>CurrentStatus(</del>);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>306</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; <ins>nomaticDebugM</ins>isc(NULL,\"Nomatic: buddy_added_cb (%s)\\n\", gaim_buddy_get_name(buddy));</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>307</th><td class=\"r\"><span>&nbsp; &nbsp; predict<ins>AndSetStatus(NULL</ins>);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>271</th><th>308</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>272</th><th>309</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L274\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L311\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>274</th><th>311</th><td class=\"l\"><span>buddy_removed_cb(GaimBuddy *buddy, void *data)</span>\u00a0</td>\n                  </tr><tr>\n                          <th>275</th><th>312</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>276</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; <del>gaim_debug_m</del>isc(NULL,\"Nomatic: buddy_removed_cb (%s)\\n\", gaim_buddy_get_name(buddy));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>277</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; predict<del>CurrentStatus(</del>);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>313</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; <ins>nomaticDebugM</ins>isc(NULL,\"Nomatic: buddy_removed_cb (%s)\\n\", gaim_buddy_get_name(buddy));</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>314</th><td class=\"r\"><span>&nbsp; &nbsp; predict<ins>AndSetStatus(NULL</ins>);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>278</th><th>315</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>279</th><th>316</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L281\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L318\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>281</th><th>318</th><td class=\"l\"><span>buddy_icon_changed_cb(GaimBuddy *buddy)</span>\u00a0</td>\n                  </tr><tr>\n                          <th>282</th><th>319</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>283</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; <del>gaim_debug_m</del>isc(\"signals test\", \"buddy icon changed (%s)\\n\",</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>320</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; <ins>nomaticDebugM</ins>isc(\"signals test\", \"buddy icon changed (%s)\\n\",</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>284</th><th>321</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_buddy_get_name(buddy));</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>285</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; predict<del>CurrentStatus(</del>);</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>322</th><td class=\"r\"><span>&nbsp; &nbsp; predict<ins>AndSetStatus(NULL</ins>);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>286</th><th>323</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>287</th><th>324</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L289\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L326\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>289</th><th>326</th><td class=\"l\"><span>signed_on_cb(GaimConnection *gc, void *data)</span>\u00a0</td>\n                  </tr><tr>\n                          <th>290</th><th>327</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>291</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; <del>gaim_debug_m</del>isc(NULL, \"Nomatic: signed-on (%s)\\n\",</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>328</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; <ins>nomaticDebugM</ins>isc(NULL, \"Nomatic: signed-on (%s)\\n\",</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>292</th><th>329</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_account_get_username(gaim_connection_get_account(gc)));</span>\u00a0</td>\n                  </tr><tr>\n                          <th>293</th><th>330</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L296\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L333\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>296</th><th>333</th><td class=\"l\"><span>signed_off_cb(GaimConnection *gc, void *data)</span>\u00a0</td>\n                  </tr><tr>\n                          <th>297</th><th>334</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>298</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; <del>gaim_debug_m</del>isc(NULL, \"Nomatic: signed-off (%s)\\n\",</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>335</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; <ins>nomaticDebugM</ins>isc(NULL, \"Nomatic: signed-off (%s)\\n\",</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>299</th><th>336</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_account_get_username(gaim_connection_get_account(gc)));</span>\u00a0</td>\n                  </tr><tr>\n                          <th>300</th><th>337</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L310\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L347\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>310</th><th>347</th><td class=\"l\"><span>gboolean plugin_load(GaimPlugin *plugin) </span>\u00a0</td>\n                  </tr><tr>\n                          <th>311</th><th>348</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>312</th><th>\u00a0</th><td class=\"l\"><span>feature *fv = NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>313</th><th>\u00a0</th><td class=\"l\"><span>classification *c = NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>314</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>349</th><td class=\"r\"><span>feature *f = NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>350</th><td class=\"r\"><span>bool usingStructured = FALSE;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>351</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>352</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setFreeFormStatus(\"at home using Nomatic*Gaim by myself\",usingStructured);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>353</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setLocationStatus(\"at home\",usingStructured);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>354</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setActivityStatus(\"using Nomatic*Gaim\",usingStructured);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>355</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setSocialStatusStatus(\"by myself\",usingStructured = TRUE);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>356</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>315</th><th>357</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /*Create data storage */</span>\u00a0</td>\n                  </tr><tr>\n                          <th>316</th><th>358</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; featureCollectionInit();</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L319\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L361\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>319</th><th>361</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; FILE *dataFile = fopen(\"nomaticDataFile.txt\",\"rb\");</span>\u00a0</td>\n                  </tr><tr>\n                          <th>320</th><th>362</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(dataFile == NULL){</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>321</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <del>gaim_debug_m</del>isc(NULL,\"Nomatic: Unable to open stored data file for Nomatic\\n\");</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>363</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <ins>nomaticDebugM</ins>isc(NULL,\"Nomatic: Unable to open stored data file for Nomatic\\n\");</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>322</th><th>364</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>323</th><th>365</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>324</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <del>gaim_debug_m</del>isc(NULL,\"Nomatic: Opened a stored data file for Nomatic\\n\");</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>366</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <ins>nomaticDebugM</ins>isc(NULL,\"Nomatic: Opened a stored data file for Nomatic\\n\");</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>325</th><th>367</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; while(!feof(dataFile)){</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>326</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(inputFeatureRaw(dataFile,&amp;fv)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>327</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(inputClassificationRaw(dataFile,&amp;c)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>328</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; storeFeature(fv,c);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>329</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>368</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(inputFeatureRaw(dataFile,&amp;f)){</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>369</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; storeFeature(f);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>330</th><th>370</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"last first\">\n                          <th>\u00a0</th><th>371</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; freeFeature(f);</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>331</th><th>372</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>332</th><th>373</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fclose(dataFile);</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L345\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L386\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>345</th><th>386</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>346</th><th>387</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; featureCollectionShutdown();</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"last first\">\n                          <th>347</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; </del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>348</th><th>388</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return TRUE;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>349</th><th>389</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L354\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L394\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>354</th><th>394</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(!strcmp(data, \"key_press_event\")){</span>\u00a0</td>\n                  </tr><tr>\n                          <th>355</th><th>395</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(event-&gt;keyval == GDK_Return){&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>356</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //<del>gaim_debug_m</del>isc(NULL,\"Nomatic: Classification Updated from return key\\n\");</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>396</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //<ins>nomaticDebugM</ins>isc(NULL,\"Nomatic: Classification Updated from return key\\n\");</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>357</th><th>397</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(TRUE);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>358</th><th>398</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L365\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L405\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>365</th><th>405</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>366</th><th>406</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(!strcmp(data, \"focus_out_event\")){</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>367</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //<del>gaim_debug_m</del>isc(NULL,\"Nomatic: Classification Updated from focus out event\\n\");</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>407</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //<ins>nomaticDebugM</ins>isc(NULL,\"Nomatic: Classification Updated from focus out event\\n\");</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>368</th><th>408</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return(TRUE);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>369</th><th>409</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L388\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L428\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>388</th><th>428</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; path = gtk_tree_path_new_from_indices (selection,-1);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>389</th><th>429</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!gtk_tree_model_get_iter (GTK_TREE_MODEL (store),&amp;iter, path)){</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>390</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_fatal(NULL,\"Nomatic: Got a bad path, selection=%d\\n\",selection);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>430</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(selection == 0){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>431</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugMisc(NULL,\"Nomatic: Selected an item from an empty list - Ignoring this\\n\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>432</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>433</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>434</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nomaticDebugFatal(NULL,\"Nomatic: Got a bad path, selection=%d\\n\",selection);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>435</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>391</th><th>436</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>392</th><th>437</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>393</th><th>438</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char *str_data;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>394</th><th>439</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_tree_model_get(GTK_TREE_MODEL(store),&amp;iter,0,&amp;str_data,-1);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>395</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <del>gaim_debug_m</del>isc(NULL,\"Nomatic: Completion Selected %s\\n\",str_data);</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>440</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <ins>nomaticDebugM</ins>isc(NULL,\"Nomatic: Completion Selected %s\\n\",str_data);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>396</th><th>441</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text(GTK_ENTRY(entry),str_data);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>397</th><th>442</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; g_free(str_data);</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L402\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L447\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>402</th><th>447</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>403</th><th>448</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>404</th><th>\u00a0</th><td class=\"l\"><span>static void updateStatusFromFreeForm(const gchar *phrase)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>405</th><th>\u00a0</th><td class=\"l\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>406</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setFreeFormStatus(phrase);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>407</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setCurrentStatus(getFreeFormStatus());</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>449</th><td class=\"r\"><span>void setFreeFormStatusFromUI(const char *newStatus,bool usingStructuredNow, GtkEntryCompletion *completion)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>450</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>451</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setFreeFormStatus(newStatus,usingStructuredNow);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>452</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; addCompletionString(completion,newStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>453</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>454</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* Add this instance to the training data */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>455</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; feature *x = newFeature(</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>456</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>457</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>458</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>459</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,NULL,NULL,NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>460</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>461</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,NULL,NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>462</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; getFreeFormStatus());</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>463</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; feature *f = senseFeature(x);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>464</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; featureCollectionAddTrainingData(f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>465</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>466</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; freeFeature(x);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>467</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; freeFeature(f);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>408</th><th>468</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>409</th><th>469</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L419\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L479\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>419</th><th>479</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; g_free(v1);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>420</th><th>480</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>421</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; updateStatusFromFreeForm(value);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>481</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* Get the widget box */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>482</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; GtkEntryCompletion *completion;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>483</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; completion = gtk_entry_get_completion(GTK_ENTRY(entry));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>484</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>485</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setFreeFormStatusFromUI(value,FALSE,completion);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>422</th><th>486</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>423</th><th>487</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>424</th><th>488</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>425</th><th>489</th><td class=\"l\"><span>// This function is triggered when the Nomatic Free Form Status is updated</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>426</th><th>\u00a0</th><td class=\"l\"><span>static gboolean set<del>ClassificationFreeForm</del> (GtkEntry *entry, GdkEventKey *event, gpointer data)</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>490</th><td class=\"r\"><span>static gboolean set<ins>FreeFormStatusCB</ins> (GtkEntry *entry, GdkEventKey *event, gpointer data)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>427</th><th>491</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>428</th><th>492</th><td class=\"l\"><span>gboolean handleIt = FALSE;</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L454\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L518\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>454</th><th>518</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completion = gtk_entry_get_completion(GTK_ENTRY(entry));</span>\u00a0</td>\n                  </tr><tr>\n                          <th>455</th><th>519</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; phrase = (gchar *)gtk_entry_get_text(GTK_ENTRY(entry));</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>456</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; addCompletionString(completion,phrase);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>457</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>458</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Change the displayed status if it's not empty*/</span>\u00a0</td>\n                      </tr><tr>\n                        <th>459</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(strcmp(phrase,\"\")!= 0){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>460</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; updateStatusFromFreeForm(phrase);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>461</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>462</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>463</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Add this instance to the training data */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>464</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; classification *c = newClassificationFreeForm(phrase);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>465</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureCollectionAddTrainingData(senseFeature(NULL,NULL,NULL,getFreeFormStatus()),c);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>466</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; freeClassification(c);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>520</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>521</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setFreeFormStatusFromUI(phrase,FALSE,completion);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>522</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>467</th><th>523</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>468</th><th>524</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>469</th><th>525</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>470</th><th>526</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>471</th><th>\u00a0</th><td class=\"l\"><span>static void updateStatusFromLocation(const gchar *phrase)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>472</th><th>\u00a0</th><td class=\"l\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>473</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setParseLocation(phrase);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>474</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; char *newStatus = makeStatusFromStoredParse();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>475</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setCurrentStatus(newStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>476</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; free(newStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>477</th><th>\u00a0</th><td class=\"l\"><span>}</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>527</th><td class=\"r\"><span>void setLocationStatusFromUI(const char *newStatus,bool usingStructuredNow, GtkEntryCompletion *completion)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>528</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>529</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setLocationStatus(newStatus,usingStructuredNow);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>530</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; addCompletionString(completion,newStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>531</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>532</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* Add this instance to the training data */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>533</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; feature *x = newFeature(NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>534</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>535</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>536</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,NULL,NULL,NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>537</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>538</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>539</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; getLocationStatus(),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>540</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>541</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>542</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; feature *f = senseFeature(x);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>543</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; featureCollectionAddTrainingData(f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>544</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>545</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; freeFeature(f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>546</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; freeFeature(x);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>547</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>548</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>478</th><th>549</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>479</th><th>550</th><td class=\"l\"><span>static gboolean matchSelectedLocationCB(GtkEntryCompletion *widget,GtkTreeModel *model,GtkTreeIter *iter,GtkEntry *entry)&nbsp; &nbsp;</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L488\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L559\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>488</th><th>559</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; g_free(v1);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>489</th><th>560</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>490</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; updateStatusFromLocation(value);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>561</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* Get the widget box */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>562</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; GtkEntryCompletion *completion;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>563</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; completion = gtk_entry_get_completion(GTK_ENTRY(entry));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>564</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>565</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* Update everything */</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>566</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setLocationStatusFromUI(value,TRUE,completion);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>491</th><th>567</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>492</th><th>568</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>493</th><th>569</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>494</th><th>570</th><td class=\"l\"><span>// This function is triggered when the Nomatic Location Status is updated</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>495</th><th>\u00a0</th><td class=\"l\"><span>static gboolean set<del>ClassificationLocation</del> (GtkEntry *entry, GdkEventKey *event, gpointer data)</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>571</th><td class=\"r\"><span>static gboolean set<ins>LocationStatusCB</ins> (GtkEntry *entry, GdkEventKey *event, gpointer data)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>496</th><th>572</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>497</th><th>573</th><td class=\"l\"><span>gboolean handleIt = FALSE;</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L503\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L579\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>503</th><th>579</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; handleIt = handleIt || isFocusOutEvent(event,data);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>504</th><th>580</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>505</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; //<del>gaim_debug_m</del>isc(NULL,\"Nomatic: Callback\\n\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>506</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; //<del>gaim_debug_m</del>isc(NULL,\"Nomatic: last key = %d, current key = %d, event is %s\\n\",lastKey, event-&gt;keyval, data);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>581</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; //<ins>nomaticDebugM</ins>isc(NULL,\"Nomatic: Callback\\n\");</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>582</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; //<ins>nomaticDebugM</ins>isc(NULL,\"Nomatic: last key = %d, current key = %d, event is %s\\n\",lastKey, event-&gt;keyval, data);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>507</th><th>583</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /*This is a wierd corner case when the completion list is empty, the user enters some text and then hits tab */</span>\u00a0</td>\n                  </tr><tr>\n                          <th>508</th><th>584</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if((lastKey == GDK_Tab) &amp;&amp; (event-&gt;keyval == 0) &amp;&amp; isFocusOutEvent(event,data)){</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L525\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L601\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>525</th><th>601</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completion = gtk_entry_get_completion(GTK_ENTRY(entry));</span>\u00a0</td>\n                  </tr><tr>\n                          <th>526</th><th>602</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; phrase = (gchar *)gtk_entry_get_text(GTK_ENTRY(entry));</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>527</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; addCompletionString(completion,phrase);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>528</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>529</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Change the displayed status */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>530</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; updateStatusFromLocation(phrase);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>531</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>532</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Add this instance to the training data */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>533</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; classification *c = newClassificationParsed(getParseLocation(),getParseActivity(),getParseSocialStatus());</span>\u00a0</td>\n                      </tr><tr>\n                        <th>534</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureCollectionAddTrainingData(senseFeature(getParseLocation(),getParseActivity(),getParseSocialStatus(),NULL),c);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>535</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; freeClassification(c);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>603</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>604</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setLocationStatusFromUI(phrase,TRUE,completion);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>605</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>536</th><th>606</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>537</th><th>607</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>538</th><th>608</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>539</th><th>609</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>540</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>541</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>542</th><th>\u00a0</th><td class=\"l\"><span>static void updateStatusFromActivity(const gchar *phrase)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>543</th><th>\u00a0</th><td class=\"l\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>544</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setParseActivity(phrase);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>545</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; char *newStatus = makeStatusFromStoredParse();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>546</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setCurrentStatus(newStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>547</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; free(newStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>548</th><th>\u00a0</th><td class=\"l\"><span>}</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>610</th><td class=\"r\"><span>void setActivityStatusFromUI(const char *newStatus,bool usingStructuredNow, GtkEntryCompletion *completion)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>611</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>612</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setActivityStatus(newStatus,usingStructuredNow);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>613</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; addCompletionString(completion,newStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>614</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>615</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* Add this instance to the training data */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>616</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; feature *x = newFeature(NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>617</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>618</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>619</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,NULL,NULL,NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>620</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>621</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; getActivityStatus(),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>622</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>623</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>624</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>625</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; feature *f = senseFeature(x);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>626</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; featureCollectionAddTrainingData(f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>627</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>628</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; freeFeature(f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>629</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; freeFeature(x);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>630</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>631</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>549</th><th>632</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>550</th><th>633</th><td class=\"l\"><span>static gboolean matchSelectedActivityCB(GtkEntryCompletion *widget,GtkTreeModel *model,GtkTreeIter *iter,GtkEntry *entry)&nbsp; &nbsp;</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L559\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L642\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>559</th><th>642</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; g_free(v1);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>560</th><th>643</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>561</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; updateStatusFromActivity(value);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>644</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* Get the widget box */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>645</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; GtkEntryCompletion *completion;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>646</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; completion = gtk_entry_get_completion(GTK_ENTRY(entry));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>647</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>648</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* Update everything */</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>649</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setActivityStatusFromUI(value,TRUE,completion);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>562</th><th>650</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>563</th><th>651</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>564</th><th>652</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>565</th><th>653</th><td class=\"l\"><span>// This function is triggered when the Nomatic Activity Status is updated</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>566</th><th>\u00a0</th><td class=\"l\"><span>static gboolean set<del>ClassificationActivity</del> (GtkEntry *entry, GdkEventKey *event, gpointer data)</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>654</th><td class=\"r\"><span>static gboolean set<ins>ActivityStatusCB</ins> (GtkEntry *entry, GdkEventKey *event, gpointer data)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>567</th><th>655</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>568</th><th>656</th><td class=\"l\"><span>gboolean handleIt = FALSE;</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L594\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L682\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>594</th><th>682</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completion = gtk_entry_get_completion(GTK_ENTRY(entry));</span>\u00a0</td>\n                  </tr><tr>\n                          <th>595</th><th>683</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; phrase = (gchar *)gtk_entry_get_text(GTK_ENTRY(entry));</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>596</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; addCompletionString(completion,phrase);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>597</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>598</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Change the displayed status */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>599</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; updateStatusFromActivity(phrase);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>600</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>601</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Add this instance to the training data */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>602</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; classification *c = newClassificationParsed(getParseLocation(),getParseActivity(),getParseSocialStatus());</span>\u00a0</td>\n                      </tr><tr>\n                        <th>603</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureCollectionAddTrainingData(senseFeature(getParseLocation(),getParseActivity(),getParseSocialStatus(),NULL),c);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>604</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; freeClassification(c);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>684</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>685</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setActivityStatusFromUI(phrase,TRUE,completion);&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>686</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>605</th><th>687</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>606</th><th>688</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>607</th><th>689</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>608</th><th>690</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>609</th><th>\u00a0</th><td class=\"l\"><span>static void updateStatusFromSocialStatus(const gchar *phrase)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>610</th><th>\u00a0</th><td class=\"l\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>611</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setParseSocialStatus(phrase);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>612</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; char *newStatus = makeStatusFromStoredParse();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>613</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setCurrentStatus(newStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>614</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; free(newStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>615</th><th>\u00a0</th><td class=\"l\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>616</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>617</th><th>\u00a0</th><td class=\"l\"><span>static gboolean matchSelectedSocialStatusCB(GtkEntryCompletion *widget,GtkTreeModel *model,GtkTreeIter *iter,GtkEntry *entry)&nbsp; &nbsp;</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>691</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>692</th><td class=\"r\"><span>void setSocialStatusStatusFromUI(const char *newStatus,bool usingStructuredNow, GtkEntryCompletion *completion)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>693</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>694</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setSocialStatusStatus(newStatus,usingStructuredNow);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>695</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; addCompletionString(completion,newStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>696</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>697</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* Add this instance to the training data */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>698</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; feature *x = newFeature(NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>699</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>700</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>701</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,NULL,NULL,NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>702</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>703</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>704</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>705</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; getSocialStatusStatus(),</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>706</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NULL);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>707</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; feature *f = senseFeature(x);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>708</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; featureCollectionAddTrainingData(f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>709</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>710</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; freeFeature(f);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>711</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; freeFeature(x);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>712</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>713</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>714</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>715</th><td class=\"r\"><span>static gboolean matchSelectedSocialStatusStatusCB(GtkEntryCompletion *widget,GtkTreeModel *model,GtkTreeIter *iter,GtkEntry *entry)&nbsp; &nbsp;</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>618</th><th>716</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>619</th><th>717</th><td class=\"l\"><span>GValue *v1;</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L626\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L724\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>626</th><th>724</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; g_free(v1);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>627</th><th>725</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>628</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; updateStatusFromSocialStatus(value);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>726</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* Get the widget box */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>727</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; GtkEntryCompletion *completion;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>728</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; completion = gtk_entry_get_completion(GTK_ENTRY(entry));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>729</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>730</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* Update everything */</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>731</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setSocialStatusStatusFromUI(value,TRUE,completion);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>629</th><th>732</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>630</th><th>733</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>631</th><th>734</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>632</th><th>735</th><td class=\"l\"><span>// This function is triggered when the Nomatic Social Status is updated</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>633</th><th>\u00a0</th><td class=\"l\"><span>static gboolean</span>\u00a0</td>\n                      </tr><tr>\n                        <th>634</th><th>\u00a0</th><td class=\"l\"><span>setClassificationSocialStatus (GtkEntry *entry, GdkEventKey *event, gpointer data)</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>736</th><td class=\"r\"><span>static gboolean setSocialStatusStatusCB (GtkEntry *entry, GdkEventKey *event, gpointer data)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>635</th><th>737</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>636</th><th>738</th><td class=\"l\"><span>gboolean handleIt = FALSE;</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L662\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L764\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>662</th><th>764</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completion = gtk_entry_get_completion(GTK_ENTRY(entry));</span>\u00a0</td>\n                  </tr><tr>\n                          <th>663</th><th>765</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; phrase = (gchar *)gtk_entry_get_text(GTK_ENTRY(entry));</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>664</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; addCompletionString(completion,phrase);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>665</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>666</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Change the displayed status */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>667</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; updateStatusFromSocialStatus(phrase);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>668</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>669</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; classification *c = newClassificationParsed(getParseLocation(),getParseActivity(),getParseSocialStatus());</span>\u00a0</td>\n                      </tr><tr>\n                        <th>670</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureCollectionAddTrainingData(senseFeature(getParseLocation(),getParseActivity(),getParseSocialStatus(),NULL),c);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>671</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; freeClassification(c);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>766</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>767</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setSocialStatusStatusFromUI(phrase,TRUE,completion);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>768</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>672</th><th>769</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>673</th><th>770</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L719\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L816\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>719</th><th>816</th><td class=\"l\"><span>//static void sendMap( char *null )</span>\u00a0</td>\n                  </tr><tr>\n                          <th>720</th><th>817</th><td class=\"l\"><span>//{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>721</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /*<del>gaim_debug_m</del>isc(NULL,\"my_ip: %s\",gaim_network_get_my_ip(-1));*/</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>818</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /*<ins>nomaticDebugM</ins>isc(NULL,\"my_ip: %s\",gaim_network_get_my_ip(-1));*/</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>722</th><th>819</th><td class=\"l\"><span>//}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>723</th><th>820</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L788\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L885\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>788</th><th>885</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Textbox - Location</span>\u00a0</td>\n                  </tr><tr>\n                          <th>789</th><th>886</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; locationTextbox = gtk_entry_new();</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>790</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text (GTK_ENTRY (locationTextbox), \"at home\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>791</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setParseLocation(gtk_entry_get_text(GTK_ENTRY (locationTextbox)));</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>887</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text (GTK_ENTRY (locationTextbox), getLocationStatus());</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>792</th><th>888</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_widget_set_size_request(locationTextbox, 30, 20);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>793</th><th>889</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_box_pack_start(GTK_BOX(hbox_text), locationTextbox, TRUE, TRUE, 0);</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L797\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L893\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>797</th><th>893</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>798</th><th>894</th><td class=\"l\"><span>&nbsp; &nbsp; g_signal_connect (G_OBJECT (locationTextbox), \"key_press_event\",</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>799</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (set<del>ClassificationLocation</del>), \"key_press_event\");</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>895</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (set<ins>LocationStatusCB</ins>), \"key_press_event\");</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>800</th><th>896</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>801</th><th>897</th><td class=\"l\"><span>&nbsp; &nbsp; g_signal_connect (G_OBJECT (locationTextbox), \"focus_out_event\",</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>802</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (set<del>ClassificationLocation</del>), \"focus_out_event\");</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>898</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (set<ins>LocationStatusCB</ins>), \"focus_out_event\");</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>803</th><th>899</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>804</th><th>900</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L806\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L902\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>806</th><th>902</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Textbox - Activity</span>\u00a0</td>\n                  </tr><tr>\n                          <th>807</th><th>903</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; activityTextbox = gtk_entry_new();</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>808</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text (GTK_ENTRY (activityTextbox), \"using Nomatic*Gaim\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>809</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setParseActivity(gtk_entry_get_text(GTK_ENTRY (activityTextbox)));</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>904</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text (GTK_ENTRY (activityTextbox), getActivityStatus());</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>810</th><th>905</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_widget_set_size_request (activityTextbox, 30, 20);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>811</th><th>906</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_box_pack_start(GTK_BOX(hbox_text), activityTextbox, TRUE, TRUE, 0);</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L815\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L910\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>815</th><th>910</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>816</th><th>911</th><td class=\"l\"><span>&nbsp; &nbsp; g_signal_connect (G_OBJECT (activityTextbox), \"key_press_event\",</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>817</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (set<del>ClassificationActivity</del>), \"key_press_event\");</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>912</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (set<ins>ActivityStatusCB</ins>), \"key_press_event\");</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>818</th><th>913</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>819</th><th>914</th><td class=\"l\"><span>&nbsp; &nbsp; g_signal_connect (G_OBJECT (activityTextbox), \"focus_out_event\",</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>820</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (set<del>ClassificationActivity</del>), \"focus_out_event\");</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>915</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (set<ins>ActivityStatusCB</ins>), \"focus_out_event\");</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>821</th><th>916</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>822</th><th>917</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Textbox - Social Status</span>\u00a0</td>\n                  </tr><tr>\n                          <th>823</th><th>918</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; socialStatusTextbox = gtk_entry_new();</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>824</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text (GTK_ENTRY (socialStatusTextbox), \"by myself\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>825</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setParseSocialStatus(gtk_entry_get_text(GTK_ENTRY (socialStatusTextbox)));</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>919</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text (GTK_ENTRY (socialStatusTextbox), getSocialStatusStatus());</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>826</th><th>920</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_widget_set_size_request (socialStatusTextbox, 30, 20);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>827</th><th>921</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_box_pack_start(GTK_BOX(hbox_text), socialStatusTextbox, TRUE, TRUE, 0);</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L829\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L923\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>829</th><th>923</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; completion=initializeTextBoxWithCompletionField(socialStatusTextbox);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>830</th><th>924</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>831</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; g_signal_connect (G_OBJECT (completion), \"match-selected\", G_CALLBACK (matchSelectedSocialStatus<del></del>CB), socialStatusTextbox);</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>925</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; g_signal_connect (G_OBJECT (completion), \"match-selected\", G_CALLBACK (matchSelectedSocialStatus<ins>Status</ins>CB), socialStatusTextbox);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>832</th><th>926</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>833</th><th>927</th><td class=\"l\"><span>&nbsp; &nbsp; g_signal_connect (G_OBJECT (socialStatusTextbox), \"key_press_event\",</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>834</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (set<del>ClassificationSocialStatus</del>), \"key_press_event\");</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>928</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (set<ins>SocialStatusStatusCB</ins>), \"key_press_event\");</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>835</th><th>929</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>836</th><th>930</th><td class=\"l\"><span>&nbsp; &nbsp; g_signal_connect (G_OBJECT (socialStatusTextbox), \"focus_out_event\",</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>837</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (set<del>ClassificationSocialStatus</del>), \"focus_out_event\");</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>931</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (set<ins>SocialStatusStatusCB</ins>), \"focus_out_event\");</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>838</th><th>932</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>839</th><th>933</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; // Elements of hbox_cusLab - Label of Custom Message</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L852\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L946\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>852</th><th>946</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text(GTK_ENTRY(freeFormTextbox), \"\");</span>\u00a0</td>\n                  </tr><tr>\n                          <th>853</th><th>947</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* If there is no status, initialize it to something*/</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"last first\">\n                          <th>854</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; updateStatusFromSocialStatus(getParseSocialStatus());&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>855</th><th>948</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>856</th><th>949</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>857</th><th>950</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"last first\">\n                          <th>858</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; setFreeFormStatus(gtk_entry_get_text(GTK_ENTRY (freeFormTextbox)));</del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>859</th><th>951</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_box_pack_start(GTK_BOX(hbox_cus), freeFormTextbox, TRUE, TRUE, 0);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>860</th><th>952</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; completion = initializeTextBoxWithCompletionField(freeFormTextbox);</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L869\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L961\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>869</th><th>961</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>870</th><th>962</th><td class=\"l\"><span>&nbsp; &nbsp; g_signal_connect (G_OBJECT (freeFormTextbox), \"key_press_event\",</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>871</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (set<del>ClassificationFreeForm</del>), \"key_press_event\");</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>963</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (set<ins>FreeFormStatusCB</ins>), \"key_press_event\");</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>872</th><th>964</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>873</th><th>965</th><td class=\"l\"><span>&nbsp; &nbsp; g_signal_connect (G_OBJECT (freeFormTextbox), \"focus_out_event\",</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>874</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (set<del>ClassificationFreeForm</del>), \"focus_out_event\");</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>966</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (set<ins>FreeFormStatusCB</ins>), \"focus_out_event\");</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>875</th><th>967</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>876</th><th>968</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L932\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L1024\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>932</th><th>1024</th><td class=\"l\"><span>&nbsp; &nbsp; gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (button), TRUE);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>933</th><th>1025</th><td class=\"l\"><span>&nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>934</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; <del>gaim_debug_m</del>isc(NULL,\"Nomatic: Predicting Current Status at startup\\n\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>935</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; predict<del>CurrentStatus(</del>);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>1026</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; <ins>nomaticDebugM</ins>isc(NULL,\"Nomatic: Predicting Current Status at startup\\n\");</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>1027</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; predict<ins>AndSetStatus(NULL</ins>);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>936</th><th>1028</th><td class=\"l\"><span>&nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>937</th><th>1029</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* Attach to signals */</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L960\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L1052\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>960</th><th>1052</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gaim_signal_connect(conn_handle, \"signed-off\",</span>\u00a0</td>\n                  </tr><tr>\n                          <th>961</th><th>1053</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; plugin, GAIM_CALLBACK(signed_off_cb), NULL);</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"last first\">\n                          <th>\u00a0</th><th>1054</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>962</th><th>1055</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>963</th><th>1056</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=124#L996\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=125#L1089\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>996</th><th>1089</th><td class=\"l\"><span>init_plugin(GaimPlugin *plugin) {</span>\u00a0</td>\n                  </tr><tr>\n                          <th>997</th><th>1090</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; //Add preferences here when its time</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"first\">\n                          <th>998</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; freeFormStatus=strdup(\"I'm busy\");</del>\u00a0</td>\n                  </tr><tr>\n                          <th>999</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; locationStatus=strdup(\"at home\");</del>\u00a0</td>\n                  </tr><tr>\n                          <th>1000</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; activityStatus=strdup(\"using Nomatic*Gaim\");</del>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>1001</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; socialStatusStatus=strdup(\"by myself\");</del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>1002</th><th>1091</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>1003</th><th>1092</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n      <li class=\"entry\">\n        <h2 id=\"file13\">\n          <a href=\"/LUCICodeRepository/nomaticIM/changeset/125/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.h\" title=\"Show the changeset 125 restricted to trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.h\">trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.h</a>\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"Revision 116\">\n                    <a title=\"Show revision 116 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.h?rev=116#L5\">\n                      r116</a>\n                  </th>\n                  <th title=\"Revision 125\">\n                    <a title=\"Show revision 125 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.h?rev=125#L5\">\n                      r125</a>\n                  </th>\n                  <td>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>5</th><th>5</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>6</th><th>6</th><td class=\"l\"><span>//Predict no more than once every X minutes</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>7</th><th>\u00a0</th><td class=\"l\"><span>#define MIN_PREDICT_FREQUENCY <del>1</del></span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>7</th><td class=\"r\"><span>#define MIN_PREDICT_FREQUENCY <ins>0</ins></span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>8</th><th>8</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>9</th><th>9</th><td class=\"l\"><span>//gboolean plugin_load(GaimPlugin *plugin) /;</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"first\">\n                          <th>10</th><th>\u00a0</th><td class=\"l\"><del></del>\u00a0</td>\n                  </tr><tr>\n                          <th>11</th><th>\u00a0</th><td class=\"l\"><del>char *makeStatusFromStoredParse();</del>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>12</th><th>\u00a0</th><td class=\"l\"><del>char *makeStatusFromParse(char *l,char *a,char *ss);</del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>13</th><th>10</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>14</th><th>11</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/nomatic.h?rev=116#L53\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.h?rev=125#L50\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>53</th><th>50</th><td class=\"l\"><span>};</span>\u00a0</td>\n                  </tr><tr>\n                          <th>54</th><th>51</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>52</th><td class=\"r\"><ins>char *makePresencePhrase();</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>53</th><td class=\"r\"><ins>void setPresencePhrase(const char *phrase);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>54</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>55</th><td class=\"r\"><ins>bool getUsingStructured();</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>56</th><td class=\"r\"><ins>void setUsingStructured(const bool usingStructuredNow);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>57</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>58</th><td class=\"r\"><ins>bool setActivityStatus(const char *p,bool usingStructuredNow);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>59</th><td class=\"r\"><ins>const char *getActivityStatus();</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>60</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>61</th><td class=\"r\"><ins>bool setLocationStatus(const char *p,bool usingStructuredNow);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>62</th><td class=\"r\"><ins>const char *getLocationStatus();</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>63</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>64</th><td class=\"r\"><ins>bool setSocialStatusStatus(const char *p,bool usingStructuredNow);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>65</th><td class=\"r\"><ins>const char *getSocialStatusStatus();</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>66</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>67</th><td class=\"r\"><ins>bool setFreeFormStatus(const char *p,bool usingStructuredNow);</ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>68</th><td class=\"r\"><ins>const char *getFreeFormStatus();</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>55</th><th>69</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>56</th><th>70</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n  </ul>\n</div>\n        <div id=\"help\"><strong>Note:</strong> See <a href=\"/LUCICodeRepository/nomaticIM/wiki/TracChangeset\">TracChangeset</a>\n          for help on using the changeset viewer.</div>\n      </div>\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"first\">\n          <a rel=\"nofollow\" href=\"?format=diff&amp;new=125\" class=\"diff\">Unified Diff</a>\n        </li><li class=\"last\">\n          <a rel=\"nofollow\" href=\"?format=zip&amp;new=125\" class=\"zip\">Zip Archive</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/LUCICodeRepository/nomaticIM/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/LUCICodeRepository/nomaticIM/about\"><strong>Trac 1.0.1</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">All content copyright 2007-2008 by LUCI <br /><a href=\"http://luci.ics.uci.edu/\">http://luci.ics.uci.edu/</a></p>\n    </div>\n\t\t<div id=\"sitefooter\">\n\t\t\t<script src=\"http://www.google-analytics.com/urchin.js\" type=\"text/javascript\">\n\t\t\t</script>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t\t_uacct = \"UA-338915-2\";\n\t\t\t\turchinTracker();\n\t\t\t</script>\n\t\t</div>\n\t</body>\n</html>", "id": 45701.0}