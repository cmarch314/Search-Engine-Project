{"text": "Mechanism Binary Transformations Intent Binary transformations rewrite portions of an application to introduce new functionality Also Known As Binary Patch files Motivation A scenario that illustrates a problem and how the different elements of the mechanism solve the problem The scenario will help you understand the more abstract description of the mechanism below Applicability What are the situations in which the mechanism can be applied What are examples of poor designs that the mechansim can address How can you recognize these situations An applicable situation Participants The elements participating in the mechanism and their responsibilities Participant Name Responsibility for what Collaborations How the participants collaborate to carry out their responsibilities Collaboration Consequences Binary transformations have the following benefits They don t require source code Since the transformation is performed on object or executable code the source code of the application is not required for adaptation They can be used for fault isolation Applications can be modified to prevent certain undesireable behavior during execution This is commonly refered to as sandboxing executing the code in an a restricted environment Binary transformations have the following limitations They are low level They are difficult to compose Implementation What pitfalls hints or techniques should you be aware of when implementing the mechanism Are there language specific issues Description of Bullet Known Uses EEL from University of Wisconsin Pure Atria s Purify and Quantify are examples of binary transformations Related Mechanisms What mechanisms are closely related to this one What are the important differences With which other mechanisms should this one be used Back to the Adaptation home page This page maintained by Peyman Oreizy peymano at ics uci edu Last updated on ", "_id": "http://www.ics.uci.edu/~peymano/adaptation/binary-transformations.html", "title": "mechanism:", "html": "<html>\r\r\r\r<head>\r\r<meta http-equiv=\"Content-Type\"\r\rcontent=\"text/html; charset=iso-8859-1\">\r\r<meta name=\"GENERATOR\" content=\"Microsoft FrontPage 6.0\">\r\r<title>Mechanism:</title>\r\r</head>\r\r\r\r<body bgcolor=\"#FFFFFF\">\r\r\r\r<h2>Mechanism: Binary Transformations</h2>\r\r\r\r<h3>Intent</h3>\r\r\r\r<blockquote>\r\r    <p>Binary transformations rewrite portions of an application\r\r    to introduce new functionality.</p>\r\r</blockquote>\r\r\r\r<h3>Also Known As</h3>\r\r\r\r<blockquote>\r\r    <p>Binary Patch files.</p>\r\r</blockquote>\r\r\r\r<h3>Motivation</h3>\r\r\r\r<blockquote>\r\r    <p><em>A scenario that illustrates a problem and how the\r\r    different elements of the mechanism solve the problem. The\r\r    scenario will help you understand the more abstract\r\r    description of the mechanism below. </em></p>\r\r</blockquote>\r\r\r\r<h3>Applicability</h3>\r\r\r\r<blockquote>\r\r    <p><em>What are the situations in which the mechanism can be\r\r    applied? What are examples of poor designs that the mechansim\r\r    can address? How can you recognize these situations? </em></p>\r\r    <ul>\r\r        <li><em>An applicable situation </em></li>\r\r    </ul>\r\r</blockquote>\r\r\r\r<h3>Participants</h3>\r\r\r\r<blockquote>\r\r    <p>The elements participating in the mechanism and their\r\r    responsibilities. </p>\r\r    <ul>\r\r        <li>Participant Name: Responsibility for what </li>\r\r    </ul>\r\r</blockquote>\r\r\r\r<h3>Collaborations</h3>\r\r\r\r<blockquote>\r\r    <p>How the participants collaborate to carry out their\r\r    responsibilities. </p>\r\r    <ul>\r\r        <li>[Collaboration] </li>\r\r    </ul>\r\r</blockquote>\r\r\r\r<h3>Consequences</h3>\r\r\r\r<blockquote>\r\r    <p>Binary transformations have the following benefits:</p>\r\r    <ol>\r\r        <li><em>They don't require source code</em>. Since the\r\r            transformation is performed on object or executable\r\r            code, the source code of the application is not\r\r            required for adaptation.</li>\r\r        <li><em>They can be used for fault isolation</em>.\r\r            Applications can be modified to prevent certain\r\r            undesireable behavior during execution. This is\r\r            commonly refered to as sandboxing (executing the code\r\r            in an a restricted environment).</li>\r\r    </ol>\r\r    <p>Binary transformations have the following limitations:</p>\r\r    <ol>\r\r        <li>They are low-level.</li>\r\r        <li>They are difficult to compose.</li>\r\r    </ol>\r\r</blockquote>\r\r\r\r<h3>Implementation</h3>\r\r\r\r<blockquote>\r\r    <p><em>What pitfalls, hints, or techniques should you be\r\r    aware of when implementing the mechanism? Are there\r\r    language-specific issues? </em></p>\r\r    <ol>\r\r        <li><em>Description of Bullet </em></li>\r\r    </ol>\r\r</blockquote>\r\r\r\r<h3>Known Uses</h3>\r\r\r\r<blockquote>\r\r    <p>EEL from University of Wisconsin, Pure Atria's <a\r\r    href=\"http://www.rational.com/products/purify/\">Purify</a>\r\r    and <a href=\"http://www.rational.com/products/quantify/\">Quantify</a>\r\r    are examples of binary transformations.</p>\r\r</blockquote>\r\r\r\r<h3>Related Mechanisms</h3>\r\r\r\r<blockquote>\r\r    <p><em>What mechanisms are closely related to this one? What\r\r    are the important differences? With which other mechanisms\r\r    should this one be used?</em> </p>\r\r</blockquote>\r\r\r\r<hr>\r\r\r\r<p><a href=\"http://www.ics.uci.edu/~peymano/adaptation/\"><em>Back\r\rto the Adaptation home page</em></a><em>. This page maintained by\r\rPeyman Oreizy </em>(<a href=\"mailto:peymano at ics.uci.edu\">peymano at ics.uci.edu</a>).\r\rLast updated on <!--#flastmod virtual = \"template.html\" -->.</p>\r\r</body>\r\r</html>\r\r\ufffd", "id": 29513.0}