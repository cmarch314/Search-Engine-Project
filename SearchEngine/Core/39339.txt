{"text": "Navigation Up Table of Contents Bibliography Index Title Page CGAL Vector 2 Kernel Definition An object of the class Vector 2 Kernel is a vector in the two dimensional vector space 2 Geometrically spoken a vector is the difference of two points p2 p1 and denotes the direction and the distance from p1 to p2 CGAL defines a symbolic constant NULL VECTOR We will explicitly state where you can pass this constant as an argument instead of a vector initialized with zeros Creation Vector 2 Kernel v Point 2 Kernel a Point 2 Kernel b introduces the vector b a Vector 2 Kernel v Segment 2 Kernel s introduces the vector s target s source Vector 2 Kernel v Ray 2 Kernel r introduces the vector having the same direction as r Vector 2 Kernel v Line 2 Kernel l introduces the vector having the same direction as l Vector 2 Kernel v Null vector NULL VECTOR introduces a null vector v Vector 2 Kernel v Kernel RT hx Kernel RT hy Kernel RT hw RT 1 introduces a vector v initialized to hx hw hy hw Precondition hw not equal to Operations bool v operator w Test for equality two vectors are equal iff their x and y coordinates are equal You can compare a vector with the NULL VECTOR bool v operator w Test for inequality You can compare a vector with the NULL VECTOR There are two sets of coordinate access functions namely to the homogeneous and to the Cartesian coordinates They can be used independently from the chosen kernel model Kernel RT v hx returns the homogeneous x coordinate Kernel RT v hy returns the homogeneous y coordinate Kernel RT v hw returns the homogenizing coordinate Note that you do not loose information with the homogeneous representation because the FieldNumberType is a quotient Kernel FT v x returns the x coordinate of v that is hx hw Kernel FT v y returns the y coordinate of v that is hy hw The following operations are for convenience and for compatibility with higher dimensional vectors Again they come in a Cartesian and homogeneous flavor Kernel RT v homogeneous int i returns the i th homogeneous coordinate of v starting with Precondition i 2 Kernel FT v cartesian int i returns the i th Cartesian coordinate of v starting at Precondition i 1 Kernel FT v operator int i returns cartesian i Precondition i 1 int v dimension returns the dimension the constant 2 Direction 2 Kernel v direction returns the direction which passes through v Vector 2 Kernel v transform Aff transformation 2 Kernel t returns the vector obtained by applying t on v Vector 2 Kernel v perpendicular Orientation o returns the vector perpendicular to v in clockwise or counterclockwise orientation Operators The following operations can be applied to vectors Vector 2 Kernel v operator w Addition Vector 2 Kernel v operator w Subtraction Vector 2 Kernel v operator returns the opposite vector Kernel FT v operator w returns the scalar product inner product of the two vectors Vector 2 Kernel operator v Kernel RT s Multiplication with a scalar from the right Vector 2 Kernel operator v Kernel FT s Multiplication with a scalar from the right Vector 2 Kernel operator Kernel RT s v Multiplication with a scalar from the left Vector 2 Kernel operator Kernel FT s v Multiplication with a scalar from the left Vector 2 Kernel v operator Kernel RT s Division by a scalar See AlsoKernel Vector 2 Next Bbox 3 Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Kernel_23_ref/Class_Vector_2.html", "title": "vector_2&lt;kernel&gt;", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Kernel_23_ref/Vector_2.tex' -->\n<html> <head>  \n<title>Vector_2&lt;Kernel&gt;</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_main.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_59\"></A>\n\n<A NAME=\"Cross_link_anchor_60\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_51\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Class.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_CGAL::Vector_2<Kernel>\"></A>\n<h2><I>CGAL::Vector_2&lt;Kernel&gt;</I></h2>\n<P>\n\n<H3>Definition</H3>\n<P>\n\nAn object of the class <I><A HREF=\"Class_Vector_2.html#Cross_link_anchor_60\">Vector_2</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;</I> is a vector in the two-dimensional \nvector space <MATH><I> <IMG BORDER=0 WIDTH=13 HEIGHT=12 ALIGN=BOTTOM SRC=\"cc_mathbb_R.gif\"> <SUP>2</SUP></I></MATH>. Geometrically spoken, a vector is the difference\nof two points <MATH><I>p<SUB>2</SUB></I></MATH>, <MATH><I>p<SUB>1</SUB></I></MATH> and denotes the direction and the distance\nfrom   <MATH><I>p<SUB>1</SUB></I></MATH> to <MATH><I>p<SUB>2</SUB></I></MATH>.\n<P>\n\nC<SMALL>GAL</SMALL> defines a symbolic constant <I><A HREF=\"Constant_NULL_VECTOR.html#Cross_link_anchor_137\">NULL_VECTOR</A></I>. We \nwill explicitly state where you can pass this constant as an argument\ninstead of a vector initialized with zeros.\n<P>\n\n<H3>Creation</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_2.html#Cross_link_anchor_60\">Vector_2</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; v (  <A HREF=\"Class_Point_2.html#Cross_link_anchor_52\">Point_2</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; a,  <A HREF=\"Class_Point_2.html#Cross_link_anchor_52\">Point_2</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; b);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    introduces the vector <MATH><I>b-a</I></MATH>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_2.html#Cross_link_anchor_60\">Vector_2</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; v (  <A HREF=\"Class_Segment_2.html#Cross_link_anchor_56\">Segment_2</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; s);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    introduces the vector <MATH><I>s.target()-s.source()</I></MATH>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_2.html#Cross_link_anchor_60\">Vector_2</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; v (  <A HREF=\"Class_Ray_2.html#Cross_link_anchor_54\">Ray_2</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; r);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    introduces the vector having the same direction as <MATH><I>r</I></MATH>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_2.html#Cross_link_anchor_60\">Vector_2</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; v (  <A HREF=\"Class_Line_2.html#Cross_link_anchor_50\">Line_2</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; l);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    introduces the vector having the same direction as <MATH><I>l</I></MATH>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_2.html#Cross_link_anchor_60\">Vector_2</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; v (  <A HREF=\"Class_Null_vector.html#Cross_link_anchor_135\">Null_vector</A> <A HREF=\"Constant_NULL_VECTOR.html#Cross_link_anchor_137\">NULL_VECTOR</A>);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    introduces a null vector <I>v</I>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_2.html#Cross_link_anchor_60\">Vector_2</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; v (  <A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::RT hx,  <A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::RT hy,  <A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::RT hw = RT(1));\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    introduces a vector <I>v</I> initialized to <MATH><I>(hx/hw,hy/hw)</I></MATH>.<BR>\n\n<EM>Precondition: </EM>hw not equal to 0\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Operations</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    bool<A NAME=\"Function_bool_operator==6const_Vector_26Kernel9__w9_const;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    v.operator== (  w)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Test for equality: two vectors are equal, iff their <MATH><I>x</I></MATH> and <MATH><I>y</I></MATH> \n        coordinates are equal. You can <A HREF=\"../NumberTypeSupport_ref/Function_compare.html#Cross_link_anchor_1339\">compare</A> a vector with the\n        <I><A HREF=\"Constant_NULL_VECTOR.html#Cross_link_anchor_137\">NULL_VECTOR</A></I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    bool<A NAME=\"Function_bool_operator!=6const_Vector_26Kernel9__w9_const;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    v.operator!= (  w)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Test for inequality. You can <A HREF=\"../NumberTypeSupport_ref/Function_compare.html#Cross_link_anchor_1339\">compare</A> a vector with the\n        <I><A HREF=\"Constant_NULL_VECTOR.html#Cross_link_anchor_137\">NULL_VECTOR</A></I>.\n        </TD></TR>\n        </TABLE>\n<P>\n\nThere are two sets of coordinate access functions, namely to the\nhomogeneous and to the \n<!-- REMOVE_LINKS_BEGIN -->\nCartesian\n<!-- REMOVE_LINKS_END -->\n coordinates. They can be used\nindependently from the chosen kernel model.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Kernel::RT_hx69_const;\"></A>\n<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::RT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    v.hx ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the homogeneous <MATH><I>x</I></MATH> coordinate.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Kernel::RT_hy69_const;\"></A>\n<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::RT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    v.hy ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the homogeneous <MATH><I>y</I></MATH> coordinate.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Kernel::RT_hw69_const;\"></A>\n<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::RT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    v.hw ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the homogenizing  coordinate.\n        </TD></TR>\n        </TABLE>\n<P>\n\nNote that you do not loose information with the homogeneous\nrepresentation, because the <A HREF=\"Concept_FieldNumberType.html#Cross_link_anchor_2\">FieldNumberType</A> is a quotient.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Kernel::FT_x69_const;\"></A>\n<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::FT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    v.x ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the <I>x</I>-coordinate of <I>v</I>, that is <MATH><I>hx/hw</I></MATH>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Kernel::FT_y69_const;\"></A>\n<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::FT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    v.y ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the <I>y</I>-coordinate of <I>v</I>, that is <MATH><I>hy/hw</I></MATH>.\n        </TD></TR>\n        </TABLE>\n<P>\n\nThe following operations are for convenience and for compatibility\nwith higher dimensional vectors.  Again they come in a\n\n<!-- REMOVE_LINKS_BEGIN -->\nCartesian\n<!-- REMOVE_LINKS_END -->\n and homogeneous flavor.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Kernel::RT_homogeneous6int_i9_const;\"></A>\n<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::RT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    v.homogeneous ( int i)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the i'th homogeneous coordinate of <I>v</I>, starting with 0.<BR>\n\n<EM>Precondition: </EM><MATH><I>0 <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> 2</I></MATH>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Kernel::FT_cartesian6int_i9_const;\"></A>\n<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::FT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    v.cartesian ( int i)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the i'th \n<!-- REMOVE_LINKS_BEGIN -->\nCartesian\n<!-- REMOVE_LINKS_END -->\n coordinate of <I>v</I>, starting at 0.<BR>\n\n<EM>Precondition: </EM><MATH><I>0 <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> 1</I></MATH>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::FT<A NAME=\"Function_Kernel::FT_operator696int_i9_const;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    v.operator[] ( int i)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns  <I>cartesian(i)</I>.<BR>\n\n<EM>Precondition: </EM><MATH><I>0 <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> 1</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_int_dimension69_const;\"></A>\nint\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    v.dimension ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the dimension (the constant 2).\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Direction_26Kernel9_direction69_const;\"></A>\n<A HREF=\"Class_Direction_2.html#Cross_link_anchor_46\">Direction_2</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    v.direction ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the direction which passes through <I>v</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Vector_26Kernel9_transform6const_Aff_transformation_26Kernel9__t9_const;\"></A>\n<A HREF=\"Class_Vector_2.html#Cross_link_anchor_60\">Vector_2</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    v.transform (  <A HREF=\"Class_Aff_transformation_2.html#Cross_link_anchor_40\">Aff_transformation_2</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt; t)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the vector obtained by applying <MATH><I>t</I></MATH> on <I>v</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Vector_26Kernel9_perpendicular6const_Orientation__o9_const;\"></A>\n<A HREF=\"Class_Vector_2.html#Cross_link_anchor_60\">Vector_2</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    v.perpendicular (  <A HREF=\"Enum_Orientation.html#Cross_link_anchor_114\">Orientation</A> o)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the vector perpendicular to <I>v</I> in clockwise or\n        counterclockwise <A HREF=\"Function_orientation.html#Cross_link_anchor_247\">orientation</A>.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Operators</H3>\n<P>\n\nThe following operations can be applied to vectors:\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_2.html#Cross_link_anchor_60\">Vector_2</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;<A NAME=\"Function_Vector_26Kernel9_operator+6const_Vector_26Kernel9__w9_const;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    v.operator+ (  w)\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Addition.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_2.html#Cross_link_anchor_60\">Vector_2</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;<A NAME=\"Function_Vector_26Kernel9_operator-6const_Vector_26Kernel9__w9_const;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    v.operator- (  w)\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Subtraction.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_2.html#Cross_link_anchor_60\">Vector_2</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;<A NAME=\"Function_Vector_26Kernel9_operator-69_const;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    v.operator- ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the <A HREF=\"Function_opposite.html#Cross_link_anchor_243\">opposite</A> vector.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::FT<A NAME=\"Function_Kernel::FT_operator*6const_Vector_26Kernel9__w9_const;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    v.operator* (  w)\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the scalar product (= inner product) of the two vectors.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_2.html#Cross_link_anchor_60\">Vector_2</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;<A NAME=\"Function_Vector_26Kernel9_operator*6const_Vector_26Kernel9__v+_const_Kernel::RT__s9;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    operator* (  v,  <A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::RT s)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Multiplication with a scalar from the right.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_2.html#Cross_link_anchor_60\">Vector_2</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;<A NAME=\"Function_Vector_26Kernel9_operator*6const_Vector_26Kernel9__v+_const_Kernel::FT__s9;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    operator* (  v,  <A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::FT s)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Multiplication with a scalar from the right.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_2.html#Cross_link_anchor_60\">Vector_2</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;<A NAME=\"Function_Vector_26Kernel9_operator*6const_Kernel::RT__s+_const_Vector_26Kernel9__v9;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    operator* (  <A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::RT s,  v)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Multiplication with a scalar from the left.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_2.html#Cross_link_anchor_60\">Vector_2</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;<A NAME=\"Function_Vector_26Kernel9_operator*6const_Kernel::FT__s+_const_Vector_26Kernel9__v9;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    operator* (  <A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::FT s,  v)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Multiplication with a scalar from the left.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Class_Vector_2.html#Cross_link_anchor_60\">Vector_2</A>&lt;<A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>&gt;<A NAME=\"Function_Vector_26Kernel9_operator/6const_Kernel::RT__s9_const;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    v.operator/ (  <A HREF=\"Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A>::RT s)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Division by a scalar.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>See Also</H3><I><A HREF=\"Concept_Kernel--Vector_2.html#Cross_link_anchor_473\">Kernel::Vector_2</A></I>\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Class_Bbox_3.html\"><I>Bbox_3</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_7!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 39339.0}