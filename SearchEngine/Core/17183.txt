{"text": "Operation Tables for Scheduling in the Presence of Partial Bypassing Aviral Shrivastava Eugene Earlie Nikil Dutt and Alex Nicolau CODES ISSS 2 5 Proceedings of the 2 5 International Conference on Compilers Architectures and Synthesis for Embedded Systems on Hardware Software Codesign and System Synthesis Abstract Register bypassing is a powerful and widely used feature in modern processors to eliminate certain data hazards Although complete bypassing is ideal for performance bypassing has significant impact on cycle time area and power consumption of the processor Due to the strict constraints on performance cost and power consumption in embedded processors architects need to evaluate and implement incomplete register bypassing mechanisms However traditional data hazard detection and or avoidance techniques used in retargetable schedulers break down in the presence of incomplete bypassing In this paper we present the concept of Operation Tables which can be used to detect data hazards even in the presence of incomplete bypassing Furthermore our technique integrates the detection of both data as well as resource hazards and can be easily employed in a compiler to generate better schedules Our experimental results on the popular Intel XScale embedded processor platform show that even with a simple intra basic block scheduling technique we achieve upto 2 performance improvement over fully optimized GCC generated code on embedded applications from the MiBench suite Center For Embedded Computer Systems Department of Information and Computer Science University of California Irvine Strategic CAD Labs Intel Corporation Hudson Massachussets ", "_id": "http://www.ics.uci.edu/~aviral/papers/otCompiler.html", "title": "otcompiler", "html": "<title>OTCompiler</title>\n<body bgcolor=#ffffff>\n<h2> Operation Tables for Scheduling in the Presence of Partial Bypassing \n</h2>\n  \n<a href=\"http://www.ics.uci.edu/~aviral/papers/OTCompiler.pdf\"><img\nsrc=\"pdf.png\" alt=\"pdf\" width=\"34\" height=\"34\" border=\"0\"></a>\n\n<a href=\"http://www.ics.uci.edu/~aviral/papers/OTCompiler.ppt\"><img\nsrc=\"ppt.png\" alt=\"ppt\" width=\"34\" height=\"34\" border=\"0\"></a>\n\n<p><i>\n<a href=\"http://www.ics.uci.edu/~aviral\"> Aviral Shrivastava</a>, \n<a href=\"http://search2.intel.com/corporate/default.aspx?culture=en-US&q=Eugene+Earlie\"> Eugene Earlie</a>,\n<a href=\"http://www.ics.uci.edu/~dutt\"> Nikil Dutt </a>, and\n<a href=\"http://www.ics.uci.edu/~nicolau\"> Alex Nicolau</a> \n</i>\n\n\n<p><b>CODES+ISSS 2005: </b><i>Proceedings of the 2005 International Conference on Compilers, \nArchitectures and Synthesis for Embedded Systems on Hardware/Software \nCodesign and System Synthesis</i>\n\n\n<p><b>Abstract: </b>\nRegister bypassing is a powerful and widely used feature\nin modern processors to eliminate certain data hazards. Although\ncomplete bypassing is ideal for performance, bypassing\nhas significant impact on cycle time, area, and power\nconsumption of the processor. Due to the strict constraints\non performance, cost and power consumption in embedded\nprocessors, architects need to evaluate and implement incomplete\nregister bypassing mechanisms. However traditional\ndata hazard detection and/or avoidance techniques\nused in retargetable schedulers break down in the presence of\nincomplete bypassing. In this paper, we present the concept\nof Operation Tables, which can be used to detect data hazards,\neven in the presence of incomplete bypassing. Furthermore\nour technique integrates the detection of both data, as\nwell as resource hazards, and can be easily employed in a\ncompiler to generate better schedules. Our experimental results\non the popular Intel XScale embedded processor platform\nshow that even with a simple intra-basic block scheduling\ntechnique, we achieve upto 20% performance improvement\nover fully optimized GCC generated code on embedded\napplications from the MiBench suite.\n<p>\n\n<hr>\n\n<table cellpadding=\"2\" cellspacing=\"2\" border=\"0\" width=\"100%\">\n  <tbody>\n    <tr>\n      <td valign=\"left\">\n      Center For Embedded Computer Systems,<br> \n      Department of Information and Computer Science,<br>\n      University of California, Irvine.\n      </td>\n    \n      <td valign=\"right\">\n      Strategic CAD Labs,<br>\n      Intel Corporation, <br>\n      Hudson, Massachussets.\n      </td>\n    </tr>\n  </tbody>\n</table>\n", "id": 17183.0}