{"text": "OEChem C Theory Manual Version 1 3 1 Previous 3 Reading and Writing Up 3 Reading and Writing Next 3 2 Reading Molecules with 3 1 Using OEChem oemolstreams The previous example demonstrated reading and writing SMILES strings from a file This required the programmer to perform the file I O explicitly Whilst this may be reasonable for SMILES strings that may be read via STL s getline it isn t suitable for more complex file formats To ease this task OEChem provides the oemolstream abstraction The classes oemolistream and oemolostream allow input and output of molecules using C s and operators respectively include oechem h using namespace OEChem int main oemolistream ims oemolostream oms OEMol mol while ims mol oms mol return Download as text In this example the program will read molecules from cin or stdin in SMILES format and write them to cout or stdout in absolute SMILES format Notice that in this example there s no need to call the mol Clear method to reset the molecule OEAssignAromaticFlags to normalize aromaticity or if mol to test the validity of the molecule This is done automatically for you by the operator Some C programmers prefer and C Python and Java programmers need to use a functional interface rather than use the and operators for file I O These are provided by the functions OEReadMolecule and OEWriteMolecule that both take a oemolstream and OEMolBase as arguments Identically OEReadMolecule calls mol Clear and perceives appropriate properties for each connection table and skips any invalid molecules automatically include oechem h using namespace OEChem int main oemolistream ims oemolostream oms OEMol mol while OEReadMolecule ims mol OEWriteMolecule oms mol return Download as text OEChem C Theory Manual Version 1 3 1 Previous 3 Reading and Writing Up 3 Reading and Writing Next 3 2 Reading Molecules with Documentation released on July 3 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/oechem/cplusprog/node15.html", "title": "3.1 using oechem oemolstreams", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<html>\n<head>\n<title>3.1 Using OEChem oemolstreams</title>\n<META NAME=\"description\" CONTENT=\"3.1 Using OEChem oemolstreams\">\n<META NAME=\"keywords\" CONTENT=\"cplusprog\">\n<META NAME=\"resource-type\" CONTENT=\"document\">\n<META NAME=\"distribution\" CONTENT=\"global\">\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n<link rel=\"STYLESHEET\" href=\"cplusprog.css\">\n<link rel=\"first\" href=\"cplusprog.html\">\n<link rel=\"contents\" href=\"contents.html\" title=\"Contents\">\n\n<LINK REL=\"next\" HREF=\"node16.html\">\n<LINK REL=\"previous\" HREF=\"node14.html\">\n<LINK REL=\"up\" HREF=\"node14.html\">\n<LINK REL=\"next\" HREF=\"node16.html\">\n</head>\n<body>\n<DIV CLASS=\"navigation\">\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node14.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node14.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node16.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - C++ Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><img src=\"../icons/blank_4.gif\"\n  border=\"0\" alt=\"\"></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node14.html\">3. Reading and Writing</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node14.html\">3. Reading and Writing</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node16.html\">3.2 Reading Molecules with</A>\n<br><hr>\n</DIV>\n<!--End of Navigation Panel-->\n\n<H1><A NAME=\"SECTION006100000000000000000\">\n3.1 Using OEChem oemolstreams</A>\n</H1>\n\n<P>\nThe previous example demonstrated reading and writing SMILES strings\nfrom a file.  This required the programmer to perform the file I/O\nexplicitly.  Whilst this may be reasonable for SMILES strings that may\nbe read via STL's getline, it isn't suitable for more complex file\nformats.  To ease this task, OEChem provides the <i>oemolstream</i>\nabstraction.  The classes oemolistream and oemolostream allow input and\noutput of molecules using C++'s <code>&#171;</code> and <code>&#187;</code> operators\nrespectively.\n\n<P>\n<dl><dd><pre class=\"verbatim\">#include \"oechem.h\"\n\nusing namespace OEChem;\n\nint main()\n{\n  oemolistream ims;\n  oemolostream oms;\n  OEMol mol;\n\n  while (ims &gt;&#62; mol)\n    oms &lt;&#60; mol;\n  return 0;\n}\n</pre>\n<div class=\"verbatiminput-footer\">\n<a href=\"ch4-1.txt\" type=\"text/plain\">Download as text.</a>\n</div>\n</dd></dl>\n\n<P>\nIn this example, the program will read molecules from cin (or stdin) in\nSMILES format and write them to cout (or stdout) in (absolute) SMILES\nformat.  Notice that in this example, there's no need to call the\n<code>mol.Clear()</code> method to reset the molecule,\n<code>OEAssignAromaticFlags()</code> to normalize aromaticity, or <code>if(mol)</code>\nto test the validity of the molecule.  This is done automatically for you\nby the <code>&#187;</code> operator.\n\n<P>\nSome C++ programmers prefer--and C, Python and Java programmers need\nto use--a functional interface rather than use the <code>&#171;</code> and\n<code>&#187;</code> operators for file I/O.  These are provided by the functions\nOEReadMolecule and OEWriteMolecule that both take a oemolstream and\nOEMolBase&amp; as arguments.  Identically, OEReadMolecule calls\n<code>mol.Clear()</code> and perceives appropriate properties for each\nconnection table, and skips any invalid molecules automatically.\n\n<P>\n<dl><dd><pre class=\"verbatim\">#include \"oechem.h\"\n\nusing namespace OEChem;\n\nint main()\n{\n  oemolistream ims;\n  oemolostream oms;\n  OEMol mol;\n\n  while (OEReadMolecule(ims,mol))\n    OEWriteMolecule(oms,mol);\n  return 0;\n}\n</pre>\n<div class=\"verbatiminput-footer\">\n<a href=\"ch4-2.txt\" type=\"text/plain\">Download as text.</a>\n</div>\n</dd></dl>\n\n<P>\n\n<DIV CLASS=\"navigation\">\n<p><hr>\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node14.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node14.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node16.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - C++ Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><img src=\"../icons/blank_4.gif\"\n  border=\"0\" alt=\"\"></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node14.html\">3. Reading and Writing</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node14.html\">3. Reading and Writing</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node16.html\">3.2 Reading Molecules with</A>\n<hr>\n<span class=\"release-info\">Documentation released on July 30, 2004.</span>\n</DIV>\n<!--End of Navigation Panel-->\n\n</BODY>\n</HTML>\n", "id": 38453.0}