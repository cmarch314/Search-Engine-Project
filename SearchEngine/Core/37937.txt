{"text": "Navigation Up Table of Contents Bibliography Index Title Page CGAL Segment Voronoi diagram hierarchy 2 Gt STag DS Definition We provide an alternative to the class Segment Voronoi diagram 2 Gt DS for the incremental construction of the segment Voronoi diagram The Segment Voronoi diagram hierarchy 2 Gt STag DS class maintains a hierarchy of Voronoi diagrams There are two possibilities as to how this hierarchy is constructed In the first case the bottom most level of the hierarchy contains the full segment Voronoi diagram The upper levels of the hierarchy contain only points that are either point sites or endpoints of segment sites in the bottom most Voronoi diagram A point that is in level i either as an individdual point or as the endpoint of a segment is inserted in level i 1 with probability 1 where 1 is some constant In the second case the upper levels of the hierarchy contains not only points but also segments A site that is in level i is in level i 1 with probability 1 where 1 is some constant The difference between the Segment Voronoi diagram 2 Gt DS class and the Segment Voronoi diagram hierarchy 2 Gt STag DS class both versions of it is on how the nearest neighbor location is done Given a point p the location is done as follows at the top most level we find the nearest neighbor of p as in the Segment Voronoi diagram 2 Gt DS class At every subsequent level i we use the nearest neighbor found at level i 1 to find the nearest neighbor at level i This is a variant of the corresponding hierarchy for points found in Dev 2 The details are described in Kar 4 The class has three template parameters The first and third have essentially the same semantics as in the Segment Voronoi diagram 2 Gt DS class The first template parameter must be a model of the SegmentVoronoiDiagramTraits 2 concept The third template parameter must be a model of the SegmentVoronoiDiagramDataStructure 2 concept However the vertex base class that is to be used in the segment Voronoi diagram data structure must be a model of the SegmentVoronoiDiagramHierarchyVertexBase 2 concept The third template parameter defaults to Triangulation data structure 2 Segment Voronoi diagram hierarchy vertex base 2 Segment Voronoi diagram vertex base 2 Gt Triangulation face base 2 Gt The second template parameter controls whether or not segments are added in the upper levels of the hierarchy It s possible values are CGAL Tag true and CGAL Tag false If it is set to CGAL Tag true segments are also inserted in the upper levels of the hierarchy The value CGAL Tag false indicates that only points are to be inserted in the upper levels of the hierarchy The default value for the second template parameter is CGAL Tag false The Segment Voronoi diagram hierarchy 2 Gt STag DS class derives publicly from the Segment Voronoi diagram 2 Gt DS class The interface is the same with its base class In the sequel only additional types and methods defined are documented include CGAL Segment Voronoi diagram hierarchy 2 h Is Model for the ConceptDefaultConstructible CopyConstructible Assignable Inherits FromCGAL Segment Voronoi diagram 2 Gt DS TypesSegment Voronoi diagram hierarchy 2 Gt STag DS introduces the following types in addition to those introduced by its base class Segment Voronoi diagram 2 Gt DS typedef STag Segments in hierarchy tag A type for the STag template parameter typedef CGAL Segment Voronoi diagram 2 Gt DS Base A type for the base class Creation In addition to the default and copy constructors the following constructors are defined Segment Voronoi diagram hierarchy 2 Gt STag DS svdh Gt gt Gt Creates a hierarchy of segment Voronoi diagrams using gt as geometric traits template class Input iterator Segment Voronoi diagram hierarchy 2 Gt STag DS svdh Input iterator first Input iterator beyond Gt gt Gt Creates a segment Voronoi diagram hierarchy using gt as geometric traits and inserts all sites in the range first beyond Input iterator must be a model of InputIterator The value type of Input iterator must be either Point 2 or Site 2 See AlsoSegmentVoronoiDiagramDataStructure 2 SegmentVoronoiDiagramTraits 2 SegmentVoronoiDiagramHierarchyVertexBase 2 CGAL Segment Voronoi diagram 2 Gt DS CGAL Triangulation data structure 2 Vb Fb CGAL Segment Voronoi diagram traits 2 K MTag CGAL Segment Voronoi diagram traits without intersections 2 K MTag CGAL Segment Voronoi diagram filtered traits 2 CK CM EK EM FK FM CGAL Segment Voronoi diagram filtered traits without intersections 2 CK CM EK EM FK FM CGAL Segment Voronoi diagram hierarchy vertex base 2 Vbb Next SegmentVoronoiDiagramHierarchyVertexBase 2 Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Segment_Voronoi_diagram_2_ref/Class_Segment_Voronoi_diagram_hierarchy_2.html", "title": "segment_voronoi_diagram_hierarchy_2&lt;gt,stag,ds&gt;", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Segment_Voronoi_diagram_2_ref/Segment_Voronoi_diagram_hierarchy_2.tex' -->\n<html> <head>  \n<title>Segment_Voronoi_diagram_hierarchy_2&lt;Gt,STag,DS&gt;</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_1061\"></A>\n\n<A NAME=\"Cross_link_anchor_1062\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_976\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Class.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_CGAL::Segment_Voronoi_diagram_hierarchy_2<Gt,STag,DS>\"></A>\n<h2><I>CGAL::Segment_Voronoi_diagram_hierarchy_2&lt;Gt,STag,DS&gt;</I></h2>\n<P>\n\n<H3>Definition</H3>\n<P>\n\nWe provide an alternative to the class\n<I><A HREF=\"Class_Segment_Voronoi_diagram_2.html#Cross_link_anchor_1041\">Segment_Voronoi_diagram_2</A>&lt;Gt,DS&gt;</I> for the incremental\nconstruction of the segment Voronoi diagram. The <I><A HREF=\"Class_Segment_Voronoi_diagram_hierarchy_2.html#Cross_link_anchor_1062\">Segment_Voronoi_diagram_hierarchy_2</A>&lt;Gt,STag,DS&gt;</I> class\nmaintains a hierarchy of Voronoi diagrams. There are two possibilities\nas to how this hierarchy is constructed.\n<P>\n\nIn the first case the bottom-most level of the hierarchy contains the\nfull segment Voronoi diagram. The upper levels of the hierarchy\ncontain only points that are either point sites or endpoints of\nsegment sites in the bottom-most Voronoi diagram. \nA point that is in level <MATH><I>i</I></MATH> (either as an individdual point or as the\nendpoint of a segment), is inserted in level <MATH><I>i+1</I></MATH> with probability\n<MATH><I>1/<IMG BORDER=0 WIDTH=9 HEIGHT=8 ALIGN=BOTTOM SRC=\"cc_alpha.gif\"></I></MATH> where <MATH><I><IMG BORDER=0 WIDTH=9 HEIGHT=8 ALIGN=BOTTOM SRC=\"cc_alpha.gif\">&gt;1</I></MATH> is some constant.\nIn the second case the upper levels of the hierarchy contains not only\npoints but also segments. A site that is in level <MATH><I>i</I></MATH>, is in level\n<MATH><I>i+1</I></MATH> with probability <MATH><I>1/<IMG BORDER=0 WIDTH=10 HEIGHT=27 ALIGN=MIDDLE SRC=\"cc_beta.gif\"></I></MATH> where <MATH><I><IMG BORDER=0 WIDTH=10 HEIGHT=27 ALIGN=MIDDLE SRC=\"cc_beta.gif\">&gt; 1</I></MATH> is some constant.\n<P>\n\nThe difference between the <I><A HREF=\"Class_Segment_Voronoi_diagram_2.html#Cross_link_anchor_1041\">Segment_Voronoi_diagram_2</A>&lt;Gt,DS&gt;</I>\nclass and the <I><A HREF=\"Class_Segment_Voronoi_diagram_hierarchy_2.html#Cross_link_anchor_1062\">Segment_Voronoi_diagram_hierarchy_2</A>&lt;Gt,STag,DS&gt;</I> class (both versions of it) is on how the\nnearest neighbor location is done. Given a point <MATH><I>p</I></MATH> the location is\ndone as follows: at the top most level we find the nearest neighbor of\n<MATH><I>p</I></MATH> as in the <I><A HREF=\"Class_Segment_Voronoi_diagram_2.html#Cross_link_anchor_1041\">Segment_Voronoi_diagram_2</A>&lt;Gt,DS&gt;</I> class. At\nevery subsequent level <MATH><I>i</I></MATH> we use the nearest neighbor found at level\n<MATH><I>i+1</I></MATH> to find the nearest neighbor at level <MATH><I>i</I></MATH>. This is a variant of\nthe corresponding hierarchy for points found in [<A HREF=\"../biblio.html#Biblio_cgal:d-dh-02\">Dev02</A>]. The\ndetails are described in [<A HREF=\"../biblio.html#Biblio_cgal:k-reisv-04\">Kar04</A>].\n<P>\n\nThe class has three template parameters. The first and third\nhave essentially the same semantics as in the\n<I><A HREF=\"Class_Segment_Voronoi_diagram_2.html#Cross_link_anchor_1041\">Segment_Voronoi_diagram_2</A>&lt;Gt,DS&gt;</I> class. The\nfirst template parameter must be a model of the\n<I><A HREF=\"Concept_SegmentVoronoiDiagramTraits_2.html#Cross_link_anchor_1052\">SegmentVoronoiDiagramTraits_2</A></I> concept. The third template\nparameter must be a model of the\n<I><A HREF=\"Concept_SegmentVoronoiDiagramDataStructure_2.html#Cross_link_anchor_1048\">SegmentVoronoiDiagramDataStructure_2</A></I> concept. However, the\nvertex base class that is to be used in the segment Voronoi diagram\ndata structure must be a model of the\n<I><A HREF=\"Concept_SegmentVoronoiDiagramHierarchyVertexBase_2.html#Cross_link_anchor_1063\">SegmentVoronoiDiagramHierarchyVertexBase_2</A></I>\nconcept. The third template parameter defaults to\n<I><A HREF=\"../TDS_2_ref/Class_Triangulation_data_structure_2.html#Cross_link_anchor_966\">Triangulation_data_structure_2</A>&lt; <A HREF=\"Class_Segment_Voronoi_diagram_hierarchy_vertex_base_2.html#Cross_link_anchor_1065\">Segment_Voronoi_diagram_hierarchy_vertex_base_2</A>&lt;  <A HREF=\"Class_Segment_Voronoi_diagram_vertex_base_2.html#Cross_link_anchor_1051\">Segment_Voronoi_diagram_vertex_base_2</A>&lt;Gt&gt; &gt;, <A HREF=\"../Triangulation_2_ref/Class_Triangulation_face_base_2.html#Cross_link_anchor_947\">Triangulation_face_base_2</A>&lt;Gt&gt; &gt;</I>. The second template\nparameter controls whether or not segments are added in the upper\nlevels of the hierarchy. It's possible values are <I><A HREF=\"../Kernel_23_ref/Class_Tag_true.html#Cross_link_anchor_477\">CGAL::Tag_true</A></I>\nand <I><A HREF=\"../Kernel_23_ref/Class_Tag_false.html#Cross_link_anchor_475\">CGAL::Tag_false</A></I>. If it is set to <I><A HREF=\"../Kernel_23_ref/Class_Tag_true.html#Cross_link_anchor_477\">CGAL::Tag_true</A></I>,\nsegments are also inserted in the upper levels of the hierarchy. The\nvalue <I><A HREF=\"../Kernel_23_ref/Class_Tag_false.html#Cross_link_anchor_475\">CGAL::Tag_false</A></I> indicates that only points are to be\ninserted in the upper levels of the hierarchy. The default value for\nthe second template parameter is <I><A HREF=\"../Kernel_23_ref/Class_Tag_false.html#Cross_link_anchor_475\">CGAL::Tag_false</A></I>.\n<P>\n\nThe <I><A HREF=\"Class_Segment_Voronoi_diagram_hierarchy_2.html#Cross_link_anchor_1062\">Segment_Voronoi_diagram_hierarchy_2</A>&lt;Gt,STag,DS&gt;</I> class derives publicly from the\n<I><A HREF=\"Class_Segment_Voronoi_diagram_2.html#Cross_link_anchor_1041\">Segment_Voronoi_diagram_2</A>&lt;Gt,DS&gt;</I> class. The interface is\nthe same with its base class. In the sequel only additional types\nand methods defined are documented.\n<P>\n\n<I>#include &lt;<A HREF=\"../../../include/CGAL/Segment_Voronoi_diagram_hierarchy_2.h\">CGAL/Segment_Voronoi_diagram_hierarchy_2.h</A>&gt;</I>\n<P>\n\n<H3>Is Model for the Concept</H3><I>DefaultConstructible</I><BR>\n\n<I>CopyConstructible</I><BR>\n\n<I>Assignable</I>\n<P>\n\n<H3>Inherits From</H3><I><A HREF=\"Class_Segment_Voronoi_diagram_2.html#Cross_link_anchor_1040\">CGAL::Segment_Voronoi_diagram_2</A>&lt;Gt,DS&gt;</I>\n<P>\n\n<H3>Types</H3><I><A HREF=\"Class_Segment_Voronoi_diagram_hierarchy_2.html#Cross_link_anchor_1062\">Segment_Voronoi_diagram_hierarchy_2</A>&lt;Gt,STag,DS&gt;</I> introduces the following types in addition to those\nintroduced by its base class\n<I><A HREF=\"Class_Segment_Voronoi_diagram_2.html#Cross_link_anchor_1041\">Segment_Voronoi_diagram_2</A>&lt;Gt,DS&gt;</I>.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Segments_in_hierarchy_tag\"></A>\n<A NAME=\"Typedef_Segments_in_hierarchy_tag\"></A>\ntypedef STag\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    Segments_in_hierarchy_tag;\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    A type for the\n  <I>STag</I> template parameter.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Base\"></A>\n<A NAME=\"Typedef_Base\"></A>\ntypedef <A HREF=\"Class_Segment_Voronoi_diagram_2.html#Cross_link_anchor_1040\">CGAL::Segment_Voronoi_diagram_2</A>&lt;Gt,DS&gt;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    Base;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    A type for the base class.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Creation</H3>\n<P>\n\nIn addition to the default and copy constructors, the following\nconstructors are defined:\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Segment_Voronoi_diagram_hierarchy_2.html#Cross_link_anchor_1062\">Segment_Voronoi_diagram_hierarchy_2</A>&lt;Gt,STag,DS&gt; svdh ( Gt gt=Gt());\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Creates a hierarchy of segment Voronoi diagrams using\n  <I>gt</I> as geometric traits.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    template&lt; class Input_iterator &gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    <A HREF=\"Class_Segment_Voronoi_diagram_hierarchy_2.html#Cross_link_anchor_1062\">Segment_Voronoi_diagram_hierarchy_2</A>&lt;Gt,STag,DS&gt; svdh ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    Input_iterator first,<BR>\n\nInput_iterator beyond,<BR>\n\nGt gt=Gt());</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Creates a segment Voronoi diagram hierarchy using \n<I>gt</I> as geometric traits and inserts all sites in the\nrange [<I>first</I>, <I>beyond</I>). <I>Input_iterator</I> must be a\n  model of <I>InputIterator</I>. The value type of <I>Input_iterator</I>\n  must be either <I><A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A></I> or <I>Site_2</I>.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>See Also</H3><I><A HREF=\"Concept_SegmentVoronoiDiagramDataStructure_2.html#Cross_link_anchor_1048\">SegmentVoronoiDiagramDataStructure_2</A></I><BR>\n\n<I><A HREF=\"Concept_SegmentVoronoiDiagramTraits_2.html#Cross_link_anchor_1052\">SegmentVoronoiDiagramTraits_2</A></I><BR>\n\n<I><A HREF=\"Concept_SegmentVoronoiDiagramHierarchyVertexBase_2.html#Cross_link_anchor_1063\">SegmentVoronoiDiagramHierarchyVertexBase_2</A></I><BR>\n\n<I><A HREF=\"Class_Segment_Voronoi_diagram_2.html#Cross_link_anchor_1040\">CGAL::Segment_Voronoi_diagram_2</A>&lt;Gt,DS&gt;</I><BR>\n\n<I><A HREF=\"../TDS_2_ref/Class_Triangulation_data_structure_2.html#Cross_link_anchor_965\">CGAL::Triangulation_data_structure_2</A>&lt;Vb,Fb&gt;</I><BR>\n\n<I><A HREF=\"Class_Segment_Voronoi_diagram_traits_2.html#Cross_link_anchor_1053\">CGAL::Segment_Voronoi_diagram_traits_2</A>&lt;K,MTag&gt;</I><BR>\n\n<I><A HREF=\"Class_Segment_Voronoi_diagram_traits_without_intersections_2.html#Cross_link_anchor_1055\">CGAL::Segment_Voronoi_diagram_traits_without_intersections_2</A>&lt;K,MTag&gt;</I><BR>\n\n<I><A HREF=\"Class_Segment_Voronoi_diagram_filtered_traits_2.html#Cross_link_anchor_1057\">CGAL::Segment_Voronoi_diagram_filtered_traits_2</A>&lt;CK,CM,EK,EM,FK,FM&gt;</I><BR>\n\n<I><A HREF=\"Class_Segment_Voronoi_diagram_filtered_traits_without_intersections_2.html#Cross_link_anchor_1059\">CGAL::Segment_Voronoi_diagram_filtered_traits_without_intersections_2</A>&lt;CK,CM,EK,EM,FK,FM&gt;</I><BR>\n\n<I><A HREF=\"Class_Segment_Voronoi_diagram_hierarchy_vertex_base_2.html#Cross_link_anchor_1064\">CGAL::Segment_Voronoi_diagram_hierarchy_vertex_base_2</A>&lt;Vbb&gt;</I>\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Concept_SegmentVoronoiDiagramHierarchyVertexBase_2.html\"><I>SegmentVoronoiDiagramHierarchyVertexBase_2</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_44!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 37937.0}