{"text": "OEChem C Theory Manual Version 1 3 1 Previous 22 6 Predefined OEChem Functors Up 22 Predicate Functors Next 22 8 Composition Functors in 22 7 Using your own Functors in OEChem While many predefined functors exist it is not difficult to find a situation which calls for a new functor Acquiring a complete understanding of functors can be daunting but generating a functor to pass to OEChem functions is less difficult The following example shows a user defined functor which screens for atoms whose atomic mass is greater than 15 include oechem h include oesystem h include iostream using namespace OESystem using namespace OEChem using namespace std class WeightGT15 public OEUnaryPredicate OEAtomBase public bool operator const OEAtomBase atom const return OEGetAverageWeight atom GetAtomicNum 15 OEUnaryFunction OEAtomBase bool CreateCopy const return new WeightGT15 protected bool Eval const OEAtomBase atom const return operator atom bool Eval const OEAtomBase return false int main OEGraphMol mol OEParseSmiles mol c1c O c O c Cl cc1CCCBr OEIter OEAtomBase atom for atom mol GetAtoms WeightGT15 atom atom cout atom GetName has weight 15 endl return Download as text OEChem C Theory Manual Version 1 3 1 Previous 22 6 Predefined OEChem Functors Up 22 Predicate Functors Next 22 8 Composition Functors in Documentation released on July 3 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/oechem/cplusprog/node178.html", "title": "22.7 using your own functors in oechem", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<html>\n<head>\n<title>22.7 Using your own Functors in OEChem</title>\n<META NAME=\"description\" CONTENT=\"22.7 Using your own Functors in OEChem\">\n<META NAME=\"keywords\" CONTENT=\"cplusprog\">\n<META NAME=\"resource-type\" CONTENT=\"document\">\n<META NAME=\"distribution\" CONTENT=\"global\">\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n<link rel=\"STYLESHEET\" href=\"cplusprog.css\">\n<link rel=\"first\" href=\"cplusprog.html\">\n<link rel=\"contents\" href=\"contents.html\" title=\"Contents\">\n\n<LINK REL=\"next\" HREF=\"node179.html\">\n<LINK REL=\"previous\" HREF=\"node177.html\">\n<LINK REL=\"up\" HREF=\"node171.html\">\n<LINK REL=\"next\" HREF=\"node179.html\">\n</head>\n<body>\n<DIV CLASS=\"navigation\">\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node177.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node171.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node179.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - C++ Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><img src=\"../icons/blank_4.gif\"\n  border=\"0\" alt=\"\"></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node177.html\">22.6 Predefined OEChem Functors</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node171.html\">22. Predicate Functors</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node179.html\">22.8 Composition Functors in</A>\n<br><hr>\n</DIV>\n<!--End of Navigation Panel-->\n\n<H1><A NAME=\"SECTION0025700000000000000000\">\n22.7 Using your own Functors in OEChem</A>\n</H1>\n\n<P>\nWhile many predefined functors exist it is not difficult to find a\nsituation which calls for a new functor.  Acquiring a complete\nunderstanding of functors can be daunting, but generating a functor to pass\nto OEChem functions is less difficult.\n\n<P>\nThe following example shows a user defined functor which screens for atoms\nwhose atomic mass is greater than 15.\n\n<P>\n<dl><dd><pre class=\"verbatim\">#include \"oechem.h\"\n#include \"oesystem.h\"\n\n#include &lt;iostream&gt;\n\nusing namespace OESystem;\nusing namespace OEChem;\nusing namespace std;\n\nclass WeightGT15 : public OEUnaryPredicate&lt;OEAtomBase&gt;\n{\npublic:\n  bool operator()(const OEAtomBase &amp;atom) const\n  {\n    return OEGetAverageWeight(atom.GetAtomicNum()) &gt; 15;\n  }\n  OEUnaryFunction&lt;OEAtomBase,bool&gt; *CreateCopy() const\n  {\n    return new WeightGT15;\n  }\nprotected:\n  bool Eval(const OEAtomBase &amp;atom) const { return operator()(atom); }\n  bool Eval(const OEAtomBase &amp;)           { return false; }\n};\n\nint main()\n{\n  OEGraphMol mol;\n  OEParseSmiles(mol, \"c1c(O)c(O)c(Cl)cc1CCCBr\");\n\n  OEIter&lt;OEAtomBase&gt; atom;\n  for(atom = mol.GetAtoms(WeightGT15());atom;++atom)\n    cout &lt;&#60; atom-&gt;GetName() &lt;&#60; \" has weight &gt; 15.\" &lt;&#60; endl;\n\n  return 0;\n}\n</pre>\n<div class=\"verbatiminput-footer\">\n<a href=\"ch22-2.txt\" type=\"text/plain\">Download as text.</a>\n</div>\n</dd></dl>\n\n<P>\n\n<DIV CLASS=\"navigation\">\n<p><hr>\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node177.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node171.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node179.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - C++ Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><img src=\"../icons/blank_4.gif\"\n  border=\"0\" alt=\"\"></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node177.html\">22.6 Predefined OEChem Functors</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node171.html\">22. Predicate Functors</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node179.html\">22.8 Composition Functors in</A>\n<hr>\n<span class=\"release-info\">Documentation released on July 30, 2004.</span>\n</DIV>\n<!--End of Navigation Panel-->\n\n</BODY>\n</HTML>\n", "id": 38498.0}