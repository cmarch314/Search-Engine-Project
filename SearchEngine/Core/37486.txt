{"text": "OEChem Python Theory Manual Version 1 3 1 Previous 21 Predicate Functions Up 21 Predicate Functions Next 21 2 Predefined OEChem Functors 21 1 Callbacks Simply stated predicate functors boolean functors are functions which return true or false In OEChem these functors are often passed into another function The functors are then called from inside the second function This is the concept of a callback because the second function provides the argument and call s back to the functor which was passed into the function We ve already seen examples of this for the generator methods like GetAtoms and GetBonds However you can write your own functions and pass predicates as a function argument usr bin env python ch21 1 py from openeye oechem import def Count fcn mol count for atom in mol GetAtoms if fcn atom 1 count 1 return count mol OEGraphMol OEParseSmiles mol c1c O c O c Cl cc1CCCBr print Number of Oxygens Count IsOxygen mol print Number of Carbons Count HasAtomicNum 6 mol print Number of Halides Count IsHalide mol Download as text In the example above the function Count loops over the atom and performs a callback to the predicate functor fcn for each atom If the predicate returns true a counter is incremented The main loop passes three of OEChem s predefined atom predicates to the Count function allowing the same function to calculate the number atoms in the molecule which satisfy the functor passed to it OEChem Python Theory Manual Version 1 3 1 Previous 21 Predicate Functions Up 21 Predicate Functions Next 21 2 Predefined OEChem Functors Documentation released on July 3 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/oechem/pyprog/node187.html", "title": "21.1 callbacks", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<html>\n<head>\n<title>21.1 Callbacks</title>\n<META NAME=\"description\" CONTENT=\"21.1 Callbacks\">\n<META NAME=\"keywords\" CONTENT=\"pyprog\">\n<META NAME=\"resource-type\" CONTENT=\"document\">\n<META NAME=\"distribution\" CONTENT=\"global\">\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n<link rel=\"STYLESHEET\" href=\"pyprog.css\">\n<link rel=\"first\" href=\"pyprog.html\">\n<link rel=\"contents\" href=\"contents.html\" title=\"Contents\">\n\n<LINK REL=\"next\" HREF=\"node188.html\">\n<LINK REL=\"previous\" HREF=\"node186.html\">\n<LINK REL=\"up\" HREF=\"node186.html\">\n<LINK REL=\"next\" HREF=\"node188.html\">\n</head>\n<body>\n<DIV CLASS=\"navigation\">\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node186.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node186.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node188.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - Python Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"genindex.html\"><img src=\"../icons/index.gif\"\n  border=\"0\" alt=\"Index\"></A></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node186.html\">21. Predicate Functions</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node186.html\">21. Predicate Functions</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node188.html\">21.2 Predefined OEChem Functors</A>\n<br><hr>\n</DIV>\n<!--End of Navigation Panel-->\n\n<H1><A NAME=\"SECTION0023100000000000000000\">\n21.1 Callbacks</A>\n</H1>\n\n<P>\nSimply stated, predicate functors (boolean functors) are functions which\nreturn \"true\" or \"false\".  In OEChem, these functors are often passed into\nanother function.  The functors are then called from inside the second\nfunction.  This is the concept of a \"callback\" because the second function\nprovides the argument and \"call's back\" to the functor which was passed\ninto the function.  We've already seen examples of this for the generator\nmethods like <code>GetAtoms</code> and <code>GetBonds</code>. However, you can write\nyour own functions and pass predicates as a function argument.\n\n<P>\n<dl><dd><pre class=\"verbatim\">#!/usr/bin/env python\n# ch21-1.py\n\nfrom openeye.oechem import *\n\ndef Count(fcn, mol):\n    count=0\n    for atom in mol.GetAtoms():\n        if fcn(atom)==1:\n            count += 1\n    return count\n\nmol = OEGraphMol()\nOEParseSmiles(mol, \"c1c(O)c(O)c(Cl)cc1CCCBr\")\n\nprint \"Number of Oxygens = \", Count(IsOxygen(), mol)\nprint \"Number of Carbons = \", Count(HasAtomicNum(6), mol)\nprint \"Number of Halides = \", Count(IsHalide(), mol)\n\n</pre>\n<div class=\"verbatiminput-footer\">\n<a href=\"ch21-1.txt\" type=\"text/plain\">Download as text.</a>\n</div>\n</dd></dl>\n\n<P>\nIn the example above, the function <code>Count</code> loops over the atom and\nperforms a callback to the predicate functor <code>fcn</code> for each atom.  If\nthe predicate returns true, a counter is incremented.  The main loop passes\nthree of OEChem's predefined atom predicates to the <code>Count</code> function,\nallowing the same function to calculate the number atoms in the molecule\nwhich satisfy the functor passed to it.\n\n<P>\n\n<DIV CLASS=\"navigation\">\n<p><hr>\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node186.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node186.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node188.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - Python Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"genindex.html\"><img src=\"../icons/index.gif\"\n  border=\"0\" alt=\"Index\"></A></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node186.html\">21. Predicate Functions</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node186.html\">21. Predicate Functions</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node188.html\">21.2 Predefined OEChem Functors</A>\n<hr>\n<span class=\"release-info\">Documentation released on July 30, 2004.</span>\n</DIV>\n<!--End of Navigation Panel-->\n\n</BODY>\n</HTML>\n", "id": 37486.0}