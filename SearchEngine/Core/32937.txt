{"text": "View Javadoc 1 package swirl workspace 2 3 import javax servlet http HttpServletRequest 4 import javax servlet http HttpServletResponse 5 6 import org apache commons httpclient HttpMethod 7 import org apache webdav lib methods MkcolMethod 8 9 1 Proxies an WebDAV MKCOL command to a specific peer 11 12 author Ben Pillet Kari Nies 13 14 public class MkcolCommand extends ProxyCommand 15 16 17 Constructor that calls super constructor 18 19 param req see super 2 param resp see super 21 param host see super 22 param path see super 23 param peerManager see super 24 25 public MkcolCommand final HttpServletRequest req 26 final HttpServletResponse resp final String host 27 final String path final PeerManager peerManager 28 29 super req resp host path peerManager 3 31 32 33 Implements the abstract method from ProxyCommand to return a WebDAV 34 MKCOL method 35 36 param url the url to execute the method on 37 38 return an instance of MkcolMethod 39 4 public HttpMethod createMethod final String url 41 42 MkcolMethod method new MkcolMethod url 43 44 it seems that you cannot forward a message body in the MkcolMethod implementation 45 try 46 47 method setRequestBody getRequest getInputStream 48 method setRequestContentLength getRequest getContentLength 49 5 catch IOException ex 51 52 log error ex 53 54 55 return method 56 57 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.20/xref/swirl/workspace/MkcolCommand.html", "title": "mkcolcommand xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>MkcolCommand xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../stylesheet.css\" />\n</head>\n<body>\n<div id=\"overview\"><a href=\"../../../apidocs/swirl/workspace/MkcolCommand.html\">View Javadoc</a></div><pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <strong>package</strong> <a href=\"../../swirl/workspace/package-summary.html\">swirl.workspace</a>;\n<a name=\"2\" href=\"#2\">2</a>   \n<a name=\"3\" href=\"#3\">3</a>   <strong>import</strong> javax.servlet.http.HttpServletRequest;\n<a name=\"4\" href=\"#4\">4</a>   <strong>import</strong> javax.servlet.http.HttpServletResponse;\n<a name=\"5\" href=\"#5\">5</a>   \n<a name=\"6\" href=\"#6\">6</a>   <strong>import</strong> org.apache.commons.httpclient.HttpMethod;\n<a name=\"7\" href=\"#7\">7</a>   <strong>import</strong> org.apache.webdav.lib.methods.MkcolMethod;\n<a name=\"8\" href=\"#8\">8</a>   \n<a name=\"9\" href=\"#9\">9</a>   <em>/**<em>*</em></em>\n<a name=\"10\" href=\"#10\">10</a>  <em> * Proxies an WebDAV MKCOL command to a specific peer</em>\n<a name=\"11\" href=\"#11\">11</a>  <em> *</em>\n<a name=\"12\" href=\"#12\">12</a>  <em> * @author Ben Pillet/Kari Nies</em>\n<a name=\"13\" href=\"#13\">13</a>  <em> */</em>\n<a name=\"14\" href=\"#14\">14</a>  <strong>public</strong> <strong>class</strong> <a href=\"../../swirl/workspace/MkcolCommand.html\">MkcolCommand</a> <strong>extends</strong> <a href=\"../../swirl/workspace/ProxyCommand.html\">ProxyCommand</a>\n<a name=\"15\" href=\"#15\">15</a>  {\n<a name=\"16\" href=\"#16\">16</a>      <em>/**<em>*</em></em>\n<a name=\"17\" href=\"#17\">17</a>  <em>     * Constructor that calls super constructor</em>\n<a name=\"18\" href=\"#18\">18</a>  <em>     *</em>\n<a name=\"19\" href=\"#19\">19</a>  <em>     * @param req see super</em>\n<a name=\"20\" href=\"#20\">20</a>  <em>     * @param resp see super</em>\n<a name=\"21\" href=\"#21\">21</a>  <em>     * @param host see super</em>\n<a name=\"22\" href=\"#22\">22</a>  <em>     * @param path see super</em>\n<a name=\"23\" href=\"#23\">23</a>  <em>     * @param peerManager see super</em>\n<a name=\"24\" href=\"#24\">24</a>  <em>     */</em>\n<a name=\"25\" href=\"#25\">25</a>      <strong>public</strong> <a href=\"../../swirl/workspace/MkcolCommand.html\">MkcolCommand</a>(<strong>final</strong> HttpServletRequest req,\n<a name=\"26\" href=\"#26\">26</a>                          <strong>final</strong> HttpServletResponse resp, <strong>final</strong> String host,\n<a name=\"27\" href=\"#27\">27</a>                          <strong>final</strong> String path, <strong>final</strong> <a href=\"../../swirl/workspace/PeerManager.html\">PeerManager</a> peerManager)\n<a name=\"28\" href=\"#28\">28</a>      {\n<a name=\"29\" href=\"#29\">29</a>          <strong>super</strong>(req, resp, host, path, peerManager);\n<a name=\"30\" href=\"#30\">30</a>      }\n<a name=\"31\" href=\"#31\">31</a>  \n<a name=\"32\" href=\"#32\">32</a>      <em>/**<em>*</em></em>\n<a name=\"33\" href=\"#33\">33</a>  <em>     * Implements the abstract method from ProxyCommand to return a WebDAV</em>\n<a name=\"34\" href=\"#34\">34</a>  <em>     * MKCOL method</em>\n<a name=\"35\" href=\"#35\">35</a>  <em>     *</em>\n<a name=\"36\" href=\"#36\">36</a>  <em>     * @param url the url to execute the method on</em>\n<a name=\"37\" href=\"#37\">37</a>  <em>     *</em>\n<a name=\"38\" href=\"#38\">38</a>  <em>     * @return an instance of MkcolMethod</em>\n<a name=\"39\" href=\"#39\">39</a>  <em>     */</em>\n<a name=\"40\" href=\"#40\">40</a>      <strong>public</strong> HttpMethod createMethod(<strong>final</strong> String url)\n<a name=\"41\" href=\"#41\">41</a>      {\n<a name=\"42\" href=\"#42\">42</a>          MkcolMethod method = <strong>new</strong> MkcolMethod(url);\n<a name=\"43\" href=\"#43\">43</a>  \n<a name=\"44\" href=\"#44\">44</a>          <em class=\"comment\">/*<em class=\"comment\"> it seems that you cannot forward a message body in the MkcolMethod implementation.</em></em>\n<a name=\"45\" href=\"#45\">45</a>  <em class=\"comment\">           try</em>\n<a name=\"46\" href=\"#46\">46</a>  <em class=\"comment\">           {</em>\n<a name=\"47\" href=\"#47\">47</a>  <em class=\"comment\">               method.setRequestBody(getRequest().getInputStream());</em>\n<a name=\"48\" href=\"#48\">48</a>  <em class=\"comment\">               method.setRequestContentLength(getRequest().getContentLength());</em>\n<a name=\"49\" href=\"#49\">49</a>  <em class=\"comment\">           }</em>\n<a name=\"50\" href=\"#50\">50</a>  <em class=\"comment\">           catch (IOException ex)</em>\n<a name=\"51\" href=\"#51\">51</a>  <em class=\"comment\">           {</em>\n<a name=\"52\" href=\"#52\">52</a>  <em class=\"comment\">               log.error(ex);</em>\n<a name=\"53\" href=\"#53\">53</a>  <em class=\"comment\">           }</em>\n<a name=\"54\" href=\"#54\">54</a>  <em class=\"comment\">         */</em>\n<a name=\"55\" href=\"#55\">55</a>          <strong>return</strong> method;\n<a name=\"56\" href=\"#56\">56</a>      }\n<a name=\"57\" href=\"#57\">57</a>  }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 32937.0}