{"text": "LOCK UNLOCK Need lock on both reference and target to prevent surprises Default LOCK on direct reference locks target Rules of good citizenship prevent surprise changes to reference Consistent with typical behavior of methods on direct references Default LOCK on redirect reference locks reference Avoids 3 2 responses when operating on a collection 3 2 would make it impossible to lock collections that contain redirect references Previous slide Next slide Back to first slide View graphic version Notes Even if you lock both the reference and its target you can t prevent all surprises If there is a reference embedded in the URL you would have to lock that too But then you would be preventing anyone from working in that collection an unacceptable situation especially for configuration management So since we can t prevent surprises let s do what s consistent with most other default behavior pass the LOCK request through to the target There s a debate about what ref 2518 requires what would we have to say to be consistent with it In versioning The resource that a reference points to is determined not just by the reference but by a computation on the reference Workspace or Revision Name header Locking the reference in this situation would not give the right result Geoff Do you want to say we should NEVER allow the reference to be locked We should forbid No Passthrough on a LOCK request For redirects revisit the question whether it s ok to prevent any LOCKing of collections that contain redirect references That would be the effect of having 3 2 responses Yaron seems to think this is ok ", "_id": "http://www.ics.uci.edu/~ejw/authoring/minneapolis/dav/advcol/tsld011.htm", "title": "lock / unlock", "html": "\n<HTML>\n\n<HEAD>\n<META HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html;charset=windows-1252\">\n<meta name=\"GENERATOR\" content=\"Microsoft Internet Assistant for PowerPoint 97\">\n <TITLE>LOCK / UNLOCK</TITLE> \n</HEAD>\n\n<BODY     >\n\n <H1>LOCK / UNLOCK</H1> \n <P><UL>\n<LI><H2>Need lock on both reference and target to prevent surprises\n</H2>\n</UL><UL>\n<LI><H2>Default: LOCK on direct reference locks target\n</H2>\n<UL>\n<LI>Rules of good citizenship prevent surprise changes to reference\n<LI>Consistent with typical behavior of methods on direct references\n</UL></UL><UL>\n<LI><H2>Default: LOCK on redirect reference locks reference\n</H2>\n<UL>\n<LI>Avoids 302 responses when operating on a collection\n<LI>302 would make it impossible to lock collections that contain redirect references</UL></UL></P>\n<P></P> \n<P>\n<TABLE>\n  <TD HEIGHT=100 WIDTH=100> <A HREF=\"tsld010.htm\">Previous slide</A> </TD>\n  <TD HEIGHT=100 WIDTH=100> <A HREF=\"tsld012.htm\">Next slide</A> </TD>\n  <TD HEIGHT=100 WIDTH=150> <A HREF=\"tsld001.htm\">Back to first slide</A> </TD>\n  <TD HEIGHT=100 WIDTH=150> <A HREF=\"sld011.htm\">View graphic version</A> </TD>\n</TABLE>\n<BR>\n</P>\n\n <FONT size=4><STRONG> Notes: </FONT></STRONG>\n  <HR SIZE=3> <P> <UL>\nEven if you lock both the reference and its target, you can\ufffdt prevent all surprises.  If there is a reference embedded in the URL, you would have to lock that, too.  But then you would be preventing anyone from working in that collection, an unacceptable situation especially for configuration management.  So since we can\ufffdt prevent surprises, let\ufffds do what\ufffds consistent with most other default behavior: pass the LOCK request through to the target.\n</UL><UL>\nThere\ufffds a debate about what ref 2518 requires -- what would we have to say to be consistent with it?\n</UL><UL>\nIn versioning: The resource that a reference points to is determined not just by the reference, but by a computation on the reference + Workspace or Revision-Name header.  Locking the reference in this situation would not give the right result.\n</UL><UL>\nGeoff: Do you want to say we should NEVER allow the reference to be locked? We should forbid No-Passthrough on a LOCK request?\n</UL><UL>\nFor redirects, revisit the question whether it\ufffds ok to prevent any LOCKing of collections that contain redirect references.  That would be the effect of having 302 responses.  Yaron seems to think this is ok.</UL> </P> \n\n</Body>\n</HTML>\n", "id": 36821.0}