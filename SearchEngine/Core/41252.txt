{"text": " Home Trees Indices Help Package CHEM Package CombiCDB Module ReactionModel hide private frames no frames Module ReactionModel Common objects base classes used to support reaction processing Primarily revolves around Reagent object models to predict products from input reactants The example code below illustrates how to load existing reagents from the database using the ReagentSearchModel and SMIRKSReagent loadDBInstances method Once these are ready and any settings are made such as the removal of inherent products the reagent as a functor which can take in a list of reactant molecule objects and generated predicted product molecule objects from CHEM Common Util import molBySmiles from CHEM CombiCDB ReactionModel import SMIRKSReagent ReagentSearchModel reactionStepStr from CHEM CombiCDB test ReagentIdentifiers import HYDROBROMINATION reagentQuery ReagentSearchModel reagentQuery reagentIDs HYDROBROMINATION reagents SMIRKSReagent loadDBInstances reagentQuery reagent reagents Expect only the one hydrobromination reagent reagent removeInherentProducts True Not interested in inherent products print reagent reagent id reagent description Reagent works as a dictionary 1 Hydrobromination reactants molBySmiles CC C List of molecule objects as reactant input products reagent reactants Use reagent as function to generate products reactionStep reactants reagent products Combined elements of a complete reaction print reactionStepStr reactionStep replace t Tab characters mess up doctest CC C CC C Br Hydrobromination Classes hide private BaseReagent Generic object class to model reaction reagents SMIRKSReagent Specific implementation of BaseReagent that uses SMIRKS string processing to execute the transformations TrackingDataModel Simple struct to store tracking variables while processing reagents SupplementalDataModel Simple struct to store supplemental data that can be returned after reagent processing if the caller is interested ReagentSearchModel Simple struct containing query parameters indicating which reagents to pull out of the database ReactionStep Class to represent a single step in a reaction synthesis pathway Functions hide private countAtomCharges molList chargeValue Go through every atom of every molecule in the list clearSentinelCharges mol chargeValue Look for atoms in the molecule with the specified sentinel charge value and clear them out to normal values reactionStepStr reactionStep Convenience function for converting a reaction step into a comprehensible string Variables hide private REACTANTS REAGENT 1 PRODUCTS 2 Function Details hide private countAtomCharges molList chargeValue Go through every atom of every molecule in the list Count up the number of them whose formal charge is equal to the specified chargeValue clearSentinelCharges mol chargeValue Look for atoms in the molecule with the specified sentinel charge value and clear them out to normal values Returns whether any such changes were made reactionStepStr reactionStep Convenience function for converting a reaction step into a comprehensible string Reaction step model is currently just a 3 ple consisting of List of reactant SMILES strings or molecule objects Reagent object List of product SMILES strings or molecule objects Home Trees Indices Help Generated by Epydoc 3 beta1 on Thu Nov 8 17 49 21 2 7 http epydoc sourceforge net", "_id": "http://www.ics.uci.edu/~dock/CHEM_docs/CHEM.CombiCDB.ReactionModel-module.html", "title": "chem.combicdb.reactionmodel", "html": "<?xml version=\"1.0\" encoding=\"ascii\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n          \"DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n  <title>CHEM.CombiCDB.ReactionModel</title>\n  <link rel=\"stylesheet\" href=\"epydoc.css\" type=\"text/css\" />\n  <script type=\"text/javascript\" src=\"epydoc.js\"></script>\n</head>\n\n<body bgcolor=\"white\" text=\"black\" link=\"blue\" vlink=\"#204080\"\n      alink=\"#204080\">\n<!-- ==================== NAVIGATION BAR ==================== -->\n<table class=\"navbar\" border=\"0\" width=\"100%\" cellpadding=\"0\"\n       bgcolor=\"#a0c0ff\" cellspacing=\"0\">\n  <tr valign=\"middle\">\n  <!-- Home link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"CHEM-module.html\">Home</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Tree link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"module-tree.html\">Trees</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Index link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"identifier-index.html\">Indices</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Help link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"help.html\">Help</a>&nbsp;&nbsp;&nbsp;</th>\n\n      <th class=\"navbar\" width=\"100%\"></th>\n  </tr>\n</table>\n<table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n  <tr valign=\"top\">\n    <td width=\"100%\">\n      <span class=\"breadcrumbs\">\n        <a href=\"CHEM-module.html\">Package&nbsp;CHEM</a> ::\n        <a href=\"CHEM.CombiCDB-module.html\">Package&nbsp;CombiCDB</a> ::\n        Module&nbsp;ReactionModel\n      </span>\n    </td>\n    <td>\n      <table cellpadding=\"0\" cellspacing=\"0\">\n        <!-- hide/show private -->\n        <tr><td align=\"right\"><span class=\"options\">[<a href=\"javascript:void(0);\" class=\"privatelink\"\n    onclick=\"toggle_private();\">hide&nbsp;private</a>]</span></td></tr>\n        <tr><td align=\"right\"><span class=\"options\"\n            >[<a href=\"frames.html\" target=\"_top\">frames</a\n            >]&nbsp;|&nbsp;<a href=\"CHEM.CombiCDB.ReactionModel-module.html\"\n            target=\"_top\">no&nbsp;frames</a>]</span></td></tr>\n      </table>\n    </td>\n  </tr>\n</table>\n<!-- ==================== MODULE DESCRIPTION ==================== -->\n<h1 class=\"epydoc\">Module ReactionModel</h1><br /><br />\n<p>Common objects / base classes used to support reaction processing.</p>\n  Primarily revolves around Reagent object models to predict products \n  from input reactants.  The example code below illustrates how to load \n  existing reagents from the database using the ReagentSearchModel and \n  SMIRKSReagent.loadDBInstances method. Once these are ready, and any \n  settings are made (such as the removal of inherent products), the reagent\n  as a functor which can take in a list of reactant molecule objects and \n  generated predicted product molecule objects.\n<pre class=\"py-doctest\">\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">from</span> CHEM.Common.Util <span class=\"py-keyword\">import</span> molBySmiles;\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">from</span> CHEM.CombiCDB.ReactionModel <span class=\"py-keyword\">import</span> SMIRKSReagent, ReagentSearchModel, reactionStepStr;\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">from</span> CHEM.CombiCDB.test.ReagentIdentifiers <span class=\"py-keyword\">import</span> HYDROBROMINATION;\n<span class=\"py-prompt\">&gt;&gt;&gt; </span>reagentQuery = ReagentSearchModel();\n<span class=\"py-prompt\">&gt;&gt;&gt; </span>reagentQuery.reagentIDs = [HYDROBROMINATION];\n<span class=\"py-prompt\">&gt;&gt;&gt; </span>reagents = SMIRKSReagent.loadDBInstances( reagentQuery );\n<span class=\"py-prompt\">&gt;&gt;&gt; </span>reagent = reagents[0];  <span class=\"py-comment\"># Expect only the one hydrobromination reagent</span>\n<span class=\"py-prompt\">&gt;&gt;&gt; </span>reagent.removeInherentProducts = True;  <span class=\"py-comment\"># Not interested in inherent products</span>\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">print</span> reagent[<span class=\"py-string\">&quot;reagent_id&quot;</span>], reagent[<span class=\"py-string\">&quot;description&quot;</span>];    <span class=\"py-comment\"># Reagent works as a dictionary</span>\n<span class=\"py-output\">1 Hydrobromination</span>\n<span class=\"py-output\"></span><span class=\"py-prompt\">&gt;&gt;&gt; </span>reactants = [molBySmiles(<span class=\"py-string\">&quot;CC=C&quot;</span>)];  <span class=\"py-comment\"># List of molecule objects as reactant input</span>\n<span class=\"py-prompt\">&gt;&gt;&gt; </span>products = reagent( reactants );    <span class=\"py-comment\"># Use reagent as function to generate products</span>\n<span class=\"py-prompt\">&gt;&gt;&gt; </span>reactionStep = ( reactants, reagent, products );    <span class=\"py-comment\"># Combined elements of a complete reaction</span>\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">print</span> reactionStepStr( reactionStep ).replace(<span class=\"py-string\">&quot;\\t&quot;</span>,<span class=\"py-string\">&quot; &quot;</span>);   <span class=\"py-comment\"># Tab characters mess up doctest</span>\n<span class=\"py-output\">CC=C&gt;&gt;CC(C)Br Hydrobromination</span></pre><br /><br />\n\n<!-- ==================== CLASSES ==================== -->\n<a name=\"section-Classes\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Classes</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-Classes\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a href=\"CHEM.CombiCDB.ReactionModel.BaseReagent-class.html\" class=\"summary-name\">BaseReagent</a><br />\n      Generic object class to model reaction reagents.\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a href=\"CHEM.CombiCDB.ReactionModel.SMIRKSReagent-class.html\" class=\"summary-name\">SMIRKSReagent</a><br />\n      Specific implementation of BaseReagent that uses SMIRKS string \n      processing to execute the transformations.\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a href=\"CHEM.CombiCDB.ReactionModel.TrackingDataModel-class.html\" class=\"summary-name\">TrackingDataModel</a><br />\n      Simple struct to store tracking variables while processing \n        reagents.\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a href=\"CHEM.CombiCDB.ReactionModel.SupplementalDataModel-class.html\" class=\"summary-name\">SupplementalDataModel</a><br />\n      Simple struct to store supplemental data that can be returned \n        after reagent processing if the caller is interested.\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a href=\"CHEM.CombiCDB.ReactionModel.ReagentSearchModel-class.html\" class=\"summary-name\">ReagentSearchModel</a><br />\n      Simple struct containing query parameters indicating which \n        reagents to pull out of the database.\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a href=\"CHEM.CombiCDB.ReactionModel.ReactionStep-class.html\" class=\"summary-name\">ReactionStep</a><br />\n      Class to represent a single step in a reaction synthesis pathway.\n    </td>\n  </tr>\n</table>\n<!-- ==================== FUNCTIONS ==================== -->\n<a name=\"section-Functions\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Functions</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-Functions\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.CombiCDB.ReactionModel-module.html#countAtomCharges\" class=\"summary-sig-name\">countAtomCharges</a>(<span class=\"summary-sig-arg\">molList</span>,\n        <span class=\"summary-sig-arg\">chargeValue</span>)</span><br />\n      Go through every atom of every molecule in the list.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.CombiCDB.ReactionModel-module.html#clearSentinelCharges\" class=\"summary-sig-name\">clearSentinelCharges</a>(<span class=\"summary-sig-arg\">mol</span>,\n        <span class=\"summary-sig-arg\">chargeValue</span>)</span><br />\n      Look for atoms in the molecule with the specified sentinel charge \n      value and clear them out to normal values.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.CombiCDB.ReactionModel-module.html#reactionStepStr\" class=\"summary-sig-name\">reactionStepStr</a>(<span class=\"summary-sig-arg\">reactionStep</span>)</span><br />\n      Convenience function for converting a reaction step into a \n      comprehensible string.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n</table>\n<!-- ==================== VARIABLES ==================== -->\n<a name=\"section-Variables\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Variables</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-Variables\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a name=\"REACTANTS\"></a><span class=\"summary-name\">REACTANTS</span> = <code title=\"0\">0</code>\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a name=\"REAGENT\"></a><span class=\"summary-name\">REAGENT</span> = <code title=\"1\">1</code>\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a name=\"PRODUCTS\"></a><span class=\"summary-name\">PRODUCTS</span> = <code title=\"2\">2</code>\n    </td>\n  </tr>\n</table>\n<!-- ==================== FUNCTION DETAILS ==================== -->\n<a name=\"section-FunctionDetails\"></a>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Function Details</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-FunctionDetails\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n</table>\n<a name=\"countAtomCharges\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">countAtomCharges</span>(<span class=\"sig-arg\">molList</span>,\n        <span class=\"sig-arg\">chargeValue</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Go through every atom of every molecule in the list. Count up the \n  number of them whose formal charge is equal to the specified \n  chargeValue\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"clearSentinelCharges\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">clearSentinelCharges</span>(<span class=\"sig-arg\">mol</span>,\n        <span class=\"sig-arg\">chargeValue</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Look for atoms in the molecule with the specified sentinel charge \n  value and clear them out to normal values.  Returns whether any such \n  changes were made.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"reactionStepStr\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">reactionStepStr</span>(<span class=\"sig-arg\">reactionStep</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Convenience function for converting a reaction step into a \n  comprehensible string. Reaction step model is currently just a 3-ple \n  consisting of\n  <ul>\n    <li>\n      List of reactant SMILES strings (or molecule objects)\n    </li>\n    <li>\n      Reagent object\n    </li>\n    <li>\n      List of product SMILES strings (or molecule objects)\n    </li>\n  </ul>\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<br />\n<!-- ==================== NAVIGATION BAR ==================== -->\n<table class=\"navbar\" border=\"0\" width=\"100%\" cellpadding=\"0\"\n       bgcolor=\"#a0c0ff\" cellspacing=\"0\">\n  <tr valign=\"middle\">\n  <!-- Home link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"CHEM-module.html\">Home</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Tree link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"module-tree.html\">Trees</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Index link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"identifier-index.html\">Indices</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Help link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"help.html\">Help</a>&nbsp;&nbsp;&nbsp;</th>\n\n      <th class=\"navbar\" width=\"100%\"></th>\n  </tr>\n</table>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%%\">\n  <tr>\n    <td align=\"left\" class=\"footer\">\n    Generated by Epydoc 3.0beta1 on Thu Nov  8 17:49:21 2007\n    </td>\n    <td align=\"right\" class=\"footer\">\n      <a href=\"http://epydoc.sourceforge.net\">http://epydoc.sourceforge.net</a>\n    </td>\n  </tr>\n</table>\n\n<script type=\"text/javascript\">\n  <!--\n  // Private objects are initially displayed (because if\n  // javascript is turned off then we want them to be\n  // visible); but by default, we want to hide them.  So hide\n  // them unless we have a cookie that says to show them.\n  checkCookie()\n  // -->\n</script>\n  \n</body>\n</html>\n", "id": 41252.0}