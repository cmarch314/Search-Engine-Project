{"text": "1 package swirl workspace 2 3 import junit framework Test 4 import junit framework TestSuite 5 6 import org apache commons httpclient HttpClient 7 import org apache commons httpclient HttpMethod 8 import org apache commons httpclient methods DeleteMethod 9 import org apache commons logging Log 1 import org apache commons logging LogFactory 11 import org apache webdav lib methods MkcolMethod 12 13 14 TODO 15 16 author author 17 version Revision 1 9 18 19 public class MkcolCommandTest extends CommandTest 2 21 TODO 22 public static final String COLLECTION mkcoltest collection 23 24 TODO 25 public static final String DEEP COLLECTION COLLECTION 26 deep collection 27 28 TODO 29 public static final String MAC COLLECTION untitled 2 folder 3 31 TODO 32 private Log log 33 34 35 Creates a new MkcolCommandTest object 36 37 param name TODO 38 39 public MkcolCommandTest String name 4 41 super name 42 log LogFactory getLog this getClass 43 44 45 46 TODO 47 48 return TODO 49 5 public static Test suite 51 52 TestSuite suite new TestSuite 53 54 suite addTestSuite MkcolCommandTest class 55 56 suite addTest new MkcolCommandTest testGoodPut 57 suite addTest new MkcolCommandTest testOverwrite 58 suite addTest new MkcolCommandTest testDeepPut 59 suite addTest new MkcolCommandTest testPutBadCollection 6 suite addTest new MkcolCommandTest testCollectionWithSpace 61 return wrapSuite suite 62 63 64 65 TODO 66 67 public void tearDown 68 69 HttpClient client new HttpClient 7 String deletes COLLECTION DEEP COLLECTION MAC COLLECTION 71 72 delete all collections 73 for int i i deletes length i 74 75 try 76 77 DeleteMethod method new DeleteMethod SlideTestSetup LOCALHOST 78 SlideTestSetup SLIDE 79 deletes i 8 81 if log isDebugEnabled 82 83 log debug method client executeMethod method 84 method getStatusText 85 86 87 catch Exception ex 88 89 log error attempting to tearDown MkcolCommand test fixture ex 9 91 92 93 94 95 TODO 96 97 throws Exception TODO 98 99 public void testCollectionWithSpace throws Exception 1 1 1 go SlideTestSetup LOCALHOST SlideTestSetup SWIRL MAC COLLECTION 2 1 1 2 1 3 1 4 1 5 TODO 1 6 1 7 throws Exception TODO 1 8 1 9 public void testConflict throws Exception 11 111 this should fail with a Conflict status code because an ancestor collection 112 does not exist 113 go SlideTestSetup LOCALHOST SlideTestSetup SWIRL DEEP COLLECTION 114 4 9 115 116 117 Response should be 118 119 12 121 122 TODO 123 124 throws Exception TODO 125 126 public void testDeepCollection throws Exception 127 128 create collection 129 testGoodCollection 13 131 create deep collection 132 go SlideTestSetup LOCALHOST SlideTestSetup SWIRL DEEP COLLECTION 133 2 1 134 135 136 Response should be 137 138 139 14 good tests 141 public void testGoodCollection throws Exception 142 143 go SlideTestSetup LOCALHOST SlideTestSetup SWIRL COLLECTION 2 1 144 145 146 Response should be 147 148 149 15 bad tests expect error codes 151 public void testOverwriteCollection throws Exception 152 153 create collection 154 testGoodCollection 155 156 attempt to overwrite it 157 go SlideTestSetup LOCALHOST SlideTestSetup SWIRL COLLECTION 4 5 158 159 note difference in expected return value 16 161 162 Response should be 163 164 165 166 167 TODO 168 169 param uri TODO 17 171 return TODO 172 173 protected HttpMethod createMethod String uri 174 175 return new MkcolMethod uri 176 177 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.20/xref-test/swirl/workspace/MkcolCommandTest.html", "title": "mkcolcommandtest xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>MkcolCommandTest xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../stylesheet.css\" />\n</head>\n<body>\n<pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <strong>package</strong> <a href=\"../../swirl/workspace/package-summary.html\">swirl.workspace</a>;\n<a name=\"2\" href=\"#2\">2</a>   \n<a name=\"3\" href=\"#3\">3</a>   <strong>import</strong> junit.framework.Test;\n<a name=\"4\" href=\"#4\">4</a>   <strong>import</strong> junit.framework.TestSuite;\n<a name=\"5\" href=\"#5\">5</a>   \n<a name=\"6\" href=\"#6\">6</a>   <strong>import</strong> org.apache.commons.httpclient.HttpClient;\n<a name=\"7\" href=\"#7\">7</a>   <strong>import</strong> org.apache.commons.httpclient.HttpMethod;\n<a name=\"8\" href=\"#8\">8</a>   <strong>import</strong> org.apache.commons.httpclient.methods.DeleteMethod;\n<a name=\"9\" href=\"#9\">9</a>   <strong>import</strong> org.apache.commons.logging.Log;\n<a name=\"10\" href=\"#10\">10</a>  <strong>import</strong> org.apache.commons.logging.LogFactory;\n<a name=\"11\" href=\"#11\">11</a>  <strong>import</strong> org.apache.webdav.lib.methods.MkcolMethod;\n<a name=\"12\" href=\"#12\">12</a>  \n<a name=\"13\" href=\"#13\">13</a>  <em>/**<em>*</em></em>\n<a name=\"14\" href=\"#14\">14</a>  <em> * TODO</em>\n<a name=\"15\" href=\"#15\">15</a>  <em> *</em>\n<a name=\"16\" href=\"#16\">16</a>  <em> * @author $author$</em>\n<a name=\"17\" href=\"#17\">17</a>  <em> * @version $Revision: 1.9 $</em>\n<a name=\"18\" href=\"#18\">18</a>  <em> */</em>\n<a name=\"19\" href=\"#19\">19</a>  <strong>public</strong> <strong>class</strong> <a href=\"../../swirl/workspace/MkcolCommandTest.html\">MkcolCommandTest</a> <strong>extends</strong> <a href=\"../../swirl/workspace/CommandTest.html\">CommandTest</a>\n<a name=\"20\" href=\"#20\">20</a>  {\n<a name=\"21\" href=\"#21\">21</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"22\" href=\"#22\">22</a>      <strong>public</strong> <strong>static</strong> <strong>final</strong> String COLLECTION = <span class=\"string\">\"mkcoltest-collection\"</span>;\n<a name=\"23\" href=\"#23\">23</a>  \n<a name=\"24\" href=\"#24\">24</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"25\" href=\"#25\">25</a>      <strong>public</strong> <strong>static</strong> <strong>final</strong> String DEEP_COLLECTION = COLLECTION\n<a name=\"26\" href=\"#26\">26</a>                                                   + <span class=\"string\">\"/deep-collection\"</span>;\n<a name=\"27\" href=\"#27\">27</a>  \n<a name=\"28\" href=\"#28\">28</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"29\" href=\"#29\">29</a>      <strong>public</strong> <strong>static</strong> <strong>final</strong> String MAC_COLLECTION = <span class=\"string\">\"untitled%20folder\"</span>;\n<a name=\"30\" href=\"#30\">30</a>  \n<a name=\"31\" href=\"#31\">31</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"32\" href=\"#32\">32</a>      <strong>private</strong> Log log;\n<a name=\"33\" href=\"#33\">33</a>  \n<a name=\"34\" href=\"#34\">34</a>      <em>/**<em>*</em></em>\n<a name=\"35\" href=\"#35\">35</a>  <em>     * Creates a new MkcolCommandTest object.</em>\n<a name=\"36\" href=\"#36\">36</a>  <em>     *</em>\n<a name=\"37\" href=\"#37\">37</a>  <em>     * @param name TODO</em>\n<a name=\"38\" href=\"#38\">38</a>  <em>     */</em>\n<a name=\"39\" href=\"#39\">39</a>      <strong>public</strong> <a href=\"../../swirl/workspace/MkcolCommandTest.html\">MkcolCommandTest</a>(String name)\n<a name=\"40\" href=\"#40\">40</a>      {\n<a name=\"41\" href=\"#41\">41</a>          <strong>super</strong>(name);\n<a name=\"42\" href=\"#42\">42</a>          log = LogFactory.getLog(<strong>this</strong>.getClass());\n<a name=\"43\" href=\"#43\">43</a>      }\n<a name=\"44\" href=\"#44\">44</a>  \n<a name=\"45\" href=\"#45\">45</a>      <em>/**<em>*</em></em>\n<a name=\"46\" href=\"#46\">46</a>  <em>     * TODO</em>\n<a name=\"47\" href=\"#47\">47</a>  <em>     *</em>\n<a name=\"48\" href=\"#48\">48</a>  <em>     * @return TODO</em>\n<a name=\"49\" href=\"#49\">49</a>  <em>     */</em>\n<a name=\"50\" href=\"#50\">50</a>      <strong>public</strong> <strong>static</strong> Test suite()\n<a name=\"51\" href=\"#51\">51</a>      {\n<a name=\"52\" href=\"#52\">52</a>          TestSuite suite = <strong>new</strong> TestSuite();\n<a name=\"53\" href=\"#53\">53</a>  \n<a name=\"54\" href=\"#54\">54</a>          suite.addTestSuite(MkcolCommandTest.<strong>class</strong>);\n<a name=\"55\" href=\"#55\">55</a>  \n<a name=\"56\" href=\"#56\">56</a>          <em class=\"comment\">//suite.addTest(new MkcolCommandTest(\"testGoodPut\"));</em>\n<a name=\"57\" href=\"#57\">57</a>          <em class=\"comment\">//suite.addTest(new MkcolCommandTest(\"testOverwrite\"));</em>\n<a name=\"58\" href=\"#58\">58</a>          <em class=\"comment\">//suite.addTest(new MkcolCommandTest(\"testDeepPut\"));</em>\n<a name=\"59\" href=\"#59\">59</a>          <em class=\"comment\">//suite.addTest(new MkcolCommandTest(\"testPutBadCollection\"));</em>\n<a name=\"60\" href=\"#60\">60</a>          <em class=\"comment\">//suite.addTest(new MkcolCommandTest(\"testCollectionWithSpace\"));</em>\n<a name=\"61\" href=\"#61\">61</a>          <strong>return</strong> wrapSuite(suite);\n<a name=\"62\" href=\"#62\">62</a>      }\n<a name=\"63\" href=\"#63\">63</a>  \n<a name=\"64\" href=\"#64\">64</a>      <em>/**<em>*</em></em>\n<a name=\"65\" href=\"#65\">65</a>  <em>     * TODO</em>\n<a name=\"66\" href=\"#66\">66</a>  <em>     */</em>\n<a name=\"67\" href=\"#67\">67</a>      <strong>public</strong> <strong>void</strong> tearDown()\n<a name=\"68\" href=\"#68\">68</a>      {\n<a name=\"69\" href=\"#69\">69</a>          HttpClient client = <strong>new</strong> HttpClient();\n<a name=\"70\" href=\"#70\">70</a>          String[] deletes = {COLLECTION, DEEP_COLLECTION, MAC_COLLECTION};\n<a name=\"71\" href=\"#71\">71</a>  \n<a name=\"72\" href=\"#72\">72</a>          <em class=\"comment\">//delete all collections</em>\n<a name=\"73\" href=\"#73\">73</a>          <strong>for</strong>(<strong>int</strong> i = 0; i &lt; deletes.length; ++i)\n<a name=\"74\" href=\"#74\">74</a>          {\n<a name=\"75\" href=\"#75\">75</a>              <strong>try</strong>\n<a name=\"76\" href=\"#76\">76</a>              {\n<a name=\"77\" href=\"#77\">77</a>                  DeleteMethod method = <strong>new</strong> DeleteMethod(SlideTestSetup.LOCALHOST\n<a name=\"78\" href=\"#78\">78</a>                                                         + SlideTestSetup.SLIDE\n<a name=\"79\" href=\"#79\">79</a>                                                         + deletes[i]);\n<a name=\"80\" href=\"#80\">80</a>  \n<a name=\"81\" href=\"#81\">81</a>                  <strong>if</strong>(log.isDebugEnabled())\n<a name=\"82\" href=\"#82\">82</a>                  {\n<a name=\"83\" href=\"#83\">83</a>                      log.debug(<span class=\"string\">\"method: \"</span> + client.executeMethod(method)\n<a name=\"84\" href=\"#84\">84</a>                                + method.getStatusText());\n<a name=\"85\" href=\"#85\">85</a>                  }\n<a name=\"86\" href=\"#86\">86</a>              }\n<a name=\"87\" href=\"#87\">87</a>              <strong>catch</strong>(Exception ex)\n<a name=\"88\" href=\"#88\">88</a>              {\n<a name=\"89\" href=\"#89\">89</a>                  log.error(<span class=\"string\">\"attempting to tearDown MkcolCommand test fixture\"</span>, ex);\n<a name=\"90\" href=\"#90\">90</a>              }\n<a name=\"91\" href=\"#91\">91</a>          }\n<a name=\"92\" href=\"#92\">92</a>      }\n<a name=\"93\" href=\"#93\">93</a>  \n<a name=\"94\" href=\"#94\">94</a>      <em>/**<em>*</em></em>\n<a name=\"95\" href=\"#95\">95</a>  <em>     * TODO</em>\n<a name=\"96\" href=\"#96\">96</a>  <em>     *</em>\n<a name=\"97\" href=\"#97\">97</a>  <em>     * @throws Exception TODO</em>\n<a name=\"98\" href=\"#98\">98</a>  <em>     */</em>\n<a name=\"99\" href=\"#99\">99</a>      <strong>public</strong> <strong>void</strong> testCollectionWithSpace() throws Exception\n<a name=\"100\" href=\"#100\">100</a>     {\n<a name=\"101\" href=\"#101\">101</a>         go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL + MAC_COLLECTION, 201);\n<a name=\"102\" href=\"#102\">102</a>     }\n<a name=\"103\" href=\"#103\">103</a> \n<a name=\"104\" href=\"#104\">104</a>     <em>/**<em>*</em></em>\n<a name=\"105\" href=\"#105\">105</a> <em>     * TODO</em>\n<a name=\"106\" href=\"#106\">106</a> <em>     *</em>\n<a name=\"107\" href=\"#107\">107</a> <em>     * @throws Exception TODO</em>\n<a name=\"108\" href=\"#108\">108</a> <em>     */</em>\n<a name=\"109\" href=\"#109\">109</a>     <strong>public</strong> <strong>void</strong> testConflict() throws Exception\n<a name=\"110\" href=\"#110\">110</a>     {\n<a name=\"111\" href=\"#111\">111</a>         <em class=\"comment\">// this should fail with a Conflict status code because an ancestor collection</em>\n<a name=\"112\" href=\"#112\">112</a>         <em class=\"comment\">// does not exist.</em>\n<a name=\"113\" href=\"#113\">113</a>         go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL + DEEP_COLLECTION,\n<a name=\"114\" href=\"#114\">114</a>            409);\n<a name=\"115\" href=\"#115\">115</a> \n<a name=\"116\" href=\"#116\">116</a>         <em>/**<em>*</em></em>\n<a name=\"117\" href=\"#117\">117</a> <em>         * Response should be</em>\n<a name=\"118\" href=\"#118\">118</a> <em>         */</em>\n<a name=\"119\" href=\"#119\">119</a>     }\n<a name=\"120\" href=\"#120\">120</a> \n<a name=\"121\" href=\"#121\">121</a>     <em>/**<em>*</em></em>\n<a name=\"122\" href=\"#122\">122</a> <em>     * TODO</em>\n<a name=\"123\" href=\"#123\">123</a> <em>     *</em>\n<a name=\"124\" href=\"#124\">124</a> <em>     * @throws Exception TODO</em>\n<a name=\"125\" href=\"#125\">125</a> <em>     */</em>\n<a name=\"126\" href=\"#126\">126</a>     <strong>public</strong> <strong>void</strong> testDeepCollection() throws Exception\n<a name=\"127\" href=\"#127\">127</a>     {\n<a name=\"128\" href=\"#128\">128</a>         <em class=\"comment\">// create collection </em>\n<a name=\"129\" href=\"#129\">129</a>         testGoodCollection();\n<a name=\"130\" href=\"#130\">130</a> \n<a name=\"131\" href=\"#131\">131</a>         <em class=\"comment\">// create deep collection</em>\n<a name=\"132\" href=\"#132\">132</a>         go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL + DEEP_COLLECTION,\n<a name=\"133\" href=\"#133\">133</a>            201);\n<a name=\"134\" href=\"#134\">134</a> \n<a name=\"135\" href=\"#135\">135</a>         <em>/**<em>*</em></em>\n<a name=\"136\" href=\"#136\">136</a> <em>         * Response should be</em>\n<a name=\"137\" href=\"#137\">137</a> <em>         */</em>\n<a name=\"138\" href=\"#138\">138</a>     }\n<a name=\"139\" href=\"#139\">139</a> \n<a name=\"140\" href=\"#140\">140</a>     <em class=\"comment\">// good tests</em>\n<a name=\"141\" href=\"#141\">141</a>     <strong>public</strong> <strong>void</strong> testGoodCollection() throws Exception\n<a name=\"142\" href=\"#142\">142</a>     {\n<a name=\"143\" href=\"#143\">143</a>         go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL + COLLECTION, 201);\n<a name=\"144\" href=\"#144\">144</a> \n<a name=\"145\" href=\"#145\">145</a>         <em>/**<em>*</em></em>\n<a name=\"146\" href=\"#146\">146</a> <em>         * Response should be</em>\n<a name=\"147\" href=\"#147\">147</a> <em>         */</em>\n<a name=\"148\" href=\"#148\">148</a>     }\n<a name=\"149\" href=\"#149\">149</a> \n<a name=\"150\" href=\"#150\">150</a>     <em class=\"comment\">// bad tests, expect error codes</em>\n<a name=\"151\" href=\"#151\">151</a>     <strong>public</strong> <strong>void</strong> testOverwriteCollection() throws Exception\n<a name=\"152\" href=\"#152\">152</a>     {\n<a name=\"153\" href=\"#153\">153</a>         <em class=\"comment\">// create collection </em>\n<a name=\"154\" href=\"#154\">154</a>         testGoodCollection();\n<a name=\"155\" href=\"#155\">155</a> \n<a name=\"156\" href=\"#156\">156</a>         <em class=\"comment\">// attempt to overwrite it</em>\n<a name=\"157\" href=\"#157\">157</a>         go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL + COLLECTION, 405);\n<a name=\"158\" href=\"#158\">158</a> \n<a name=\"159\" href=\"#159\">159</a>         <em class=\"comment\">// note difference in expected return value</em>\n<a name=\"160\" href=\"#160\">160</a> \n<a name=\"161\" href=\"#161\">161</a>         <em>/**<em>*</em></em>\n<a name=\"162\" href=\"#162\">162</a> <em>         * Response should be</em>\n<a name=\"163\" href=\"#163\">163</a> <em>         */</em>\n<a name=\"164\" href=\"#164\">164</a>     }\n<a name=\"165\" href=\"#165\">165</a> \n<a name=\"166\" href=\"#166\">166</a>     <em>/**<em>*</em></em>\n<a name=\"167\" href=\"#167\">167</a> <em>     * TODO</em>\n<a name=\"168\" href=\"#168\">168</a> <em>     *</em>\n<a name=\"169\" href=\"#169\">169</a> <em>     * @param uri TODO</em>\n<a name=\"170\" href=\"#170\">170</a> <em>     *</em>\n<a name=\"171\" href=\"#171\">171</a> <em>     * @return TODO</em>\n<a name=\"172\" href=\"#172\">172</a> <em>     */</em>\n<a name=\"173\" href=\"#173\">173</a>     <strong>protected</strong> HttpMethod createMethod(String uri)\n<a name=\"174\" href=\"#174\">174</a>     {\n<a name=\"175\" href=\"#175\">175</a>         <strong>return</strong> <strong>new</strong> MkcolMethod(uri);\n<a name=\"176\" href=\"#176\">176</a>     }\n<a name=\"177\" href=\"#177\">177</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 34338.0}