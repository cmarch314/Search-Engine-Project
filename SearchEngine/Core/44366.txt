{"text": "Search LoginPreferencesHelp GuideAbout Trac WikiTimelineRoadmapBrowse SourceView TicketsSearch Context Navigation BlameRevision Log source nomatic tags NomaticIM 5 buddy bots src twisted protocols basic py View diff against View revision Visit trunk Last change on this file was 712 checked in by cbaker 7 years ago First draft of nomatic buddy bots oscar bot is functional if you give it good authentication credentials jabber bot is just an example from the web File size 14 9 KB Line 1 test case name twisted test test protocols 23 Copyright c 2 1 2 4 Twisted Matrix Laboratories 4 See LICENSE for details 567 Basic protocols such as line oriented netstring and 32 bit int prefixed strings 89API Stability semi stable 1 11Maintainer U Itamar Shtull Trauring mailto twisted itamarst org 12 1314 System imports15import re16import struct1718 Twisted imports19from twisted internet import protocol defer interfaces error2 from twisted python import log21from zope interface import implements2223LENGTH DATA COMMA range 3 24NUMBER re compile d 25DEBUG 2627class NetstringParseError ValueError 28 The incoming data is not in valid Netstring format 29 pass3 3132class NetstringReceiver protocol Protocol 33 This uses djb s Netstrings protocol to break up the input into strings 3435 Each string makes a callback to stringReceived with a single36 argument of that string 3738 Security features 39 1 Messages are limited in size useful if you don t want someone4 sending you a 5 MB netstring change MAX LENGTH to the maximum41 length you wish to accept 42 2 The connection is lost if an illegal message is received 43 4445 MAX LENGTH 9999946 brokenPeer 47 readerState LENGTH48 readerLength 495 def stringReceived self line 51 52 Override this 53 54 raise NotImplementedError5556 def doData self 57 buffer self data self data int self readerLength self data int self readerLength 58 self readerLength self readerLength len buffer 59 self buffer self buffer buffer6 if self readerLength 61 return62 self stringReceived self buffer 63 self readerState COMMA6465 def doComma self 66 self readerState LENGTH67 if self data 68 if DEBUG 69 raise NetstringParseError repr self data 7 else 71 raise NetstringParseError72 self data self data 1 737475 def doLength self 76 m NUMBER match self data 77 if not m end 78 if DEBUG 79 raise NetstringParseError repr self data 8 else 81 raise NetstringParseError82 self data self data m end 83 if m group 1 84 try 85 self readerLength self readerLength 1 len m group 1 long m group 1 86 except OverflowError 87 raise NetstringParseError netstring too long 88 if self readerLength self MAX LENGTH 89 raise NetstringParseError netstring too long 9 if m group 2 91 self buffer 92 self readerState DATA9394 def dataReceived self data 95 self data data96 try 97 while self data 98 if self readerState DATA 99 self doData 1 elif self readerState COMMA 1 1 self doComma 1 2 elif self readerState LENGTH 1 3 self doLength 1 4 else 1 5 raise RuntimeError mode is not DATA COMMA or LENGTH 1 6 except NetstringParseError 1 7 self transport loseConnection 1 8 self brokenPeer 11 911 def sendString self data 111 self transport write d s len data data 112113114class SafeNetstringReceiver NetstringReceiver 115 This class is deprecated use NetstringReceiver instead 116 117118119class LineOnlyReceiver protocol Protocol 12 A protocol that receives only lines 121122 This is purely a speed optimisation over LineReceiver for the123 cases that raw mode is known to be unnecessary 124125 cvar delimiter The line ending delimiter to use By default this is126 r n 127 cvar MAX LENGTH The maximum length of a line to allow If a128 sent line is longer than this the connection is dropped 129 Default is 16384 13 131 buffer 132 delimiter r n 133 MAX LENGTH 16384134135 def dataReceived self data 136 Translates bytes into lines and calls lineReceived 137 lines self buffer data split self delimiter 138 self buffer lines pop 1 139 for line in lines 14 if self transport disconnecting 141 this is necessary because the transport may be told to lose142 the connection by a line within a larger packet and it is143 important to disregard all the lines in that packet following144 the one that told it to close 145 return146 if len line self MAX LENGTH 147 return self lineLengthExceeded line 148 else 149 self lineReceived line 15 if len self buffer self MAX LENGTH 151 return self lineLengthExceeded self buffer 152153 def lineReceived self line 154 Override this for when each line is received 155 156 raise NotImplementedError157158 def sendLine self line 159 Sends a line to the other end of the connection 16 161 return self transport writeSequence line self delimiter 162163 def lineLengthExceeded self line 164 Called when the maximum line length has been reached 165 Override if it needs to be dealt with in some special way 166 167 return error ConnectionLost Line length exceeded 16816917 class PauseableMixin 171 paused False172173 def pauseProducing self 174 self paused True175 self transport pauseProducing 176177 def resumeProducing self 178 self paused False179 self transport resumeProducing 18 self dataReceived 181182 def stopProducing self 183 self paused True184 self transport stopProducing 185186187class LineReceiver protocol Protocol PauseableMixin 188 A protocol that receives lines and or raw data depending on mode 18919 In line mode each line that s received becomes a callback to191 L lineReceived In raw data mode each chunk of raw data becomes a192 callback to L rawDataReceived The L setLineMode and L setRawMode 193 methods switch between the two modes 194195 This is useful for line oriented protocols such as IRC HTTP POP etc 196197 cvar delimiter The line ending delimiter to use By default this is198 r n 199 cvar MAX LENGTH The maximum length of a line to allow If a2 sent line is longer than this the connection is dropped 2 1 Default is 16384 2 2 2 3 line mode 12 4 buffer 2 5 delimiter r n 2 6 MAX LENGTH 163842 72 8 def clearLineBuffer self 2 9 Clear buffered data 21 self buffer 211212 def dataReceived self data 213 Protocol dataReceived 214 Translates bytes into lines and calls lineReceived or215 rawDataReceived depending on mode 216 217 self buffer self buffer data218 while self line mode and not self paused 219 try 22 line self buffer self buffer split self delimiter 1 221 except ValueError 222 if len self buffer self MAX LENGTH 223 line self buffer self buffer 224 return self lineLengthExceeded line 225 break226 else 227 linelength len line 228 if linelength self MAX LENGTH 229 exceeded line self buffer23 self buffer 231 return self lineLengthExceeded exceeded 232 why self lineReceived line 233 if why or self transport and self transport disconnecting 234 return why235 else 236 if not self paused 237 data self buffer238 self buffer 239 if data 24 return self rawDataReceived data 241242 def setLineMode self extra 243 Sets the line mode of this receiver 244245 If you are calling this from a rawDataReceived callback 246 you can pass in extra unhandled data and that data will247 be parsed for lines Further data received will be sent248 to lineReceived rather than rawDataReceived 24925 Do not pass extra data if calling this function from251 within a lineReceived callback 252 253 self line mode 1254 if extra 255 return self dataReceived extra 256257 def setRawMode self 258 Sets the raw mode of this receiver 259 Further data received will be sent to rawDataReceived rather26 than lineReceived 261 262 self line mode 263264 def rawDataReceived self data 265 Override this for when raw data is received 266 267 raise NotImplementedError268269 def lineReceived self line 27 Override this for when each line is received 271 272 raise NotImplementedError273274 def sendLine self line 275 Sends a line to the other end of the connection 276 277 return self transport write line self delimiter 278279 def lineLengthExceeded self line 28 Called when the maximum line length has been reached 281 Override if it needs to be dealt with in some special way 282283 The argument line contains the remainder of the buffer starting284 with at least some part of the line which is too long This may285 be more than one line or may be only the initial portion of the286 line 287 288 return self transport loseConnection 28929 291class Int32StringReceiver protocol Protocol PauseableMixin 292 A receiver for int32 prefixed strings 293294 An int32 string is a string prefixed by 4 bytes the 32 bit length of295 the string encoded in network byte order 296297 This class publishes the same interface as NetstringReceiver 298 2993 MAX LENGTH 999993 1 recvd 3 23 3 def stringReceived self msg 3 4 Override this 3 5 3 6 raise NotImplementedError3 73 8 def dataReceived self recd 3 9 Convert int32 prefixed strings into calls to stringReceived 31 311 self recvd self recvd recd312 while len self recvd 3 and not self paused 313 length struct unpack i self recvd 4 314 if length self MAX LENGTH 315 self transport loseConnection 316 return317 if len self recvd length 4 318 break319 packet self recvd 4 length 4 32 self recvd self recvd length 4 321 self stringReceived packet 322323 def sendString self data 324 Send an int32 prefixed string to the other end of the connection 325 326 self transport write struct pack i len data data 327328329class Int16StringReceiver protocol Protocol PauseableMixin 33 A receiver for int16 prefixed strings 331332 An int16 string is a string prefixed by 2 bytes the 16 bit length of333 the string encoded in network byte order 334335 This class publishes the same interface as NetstringReceiver 336 337338 recvd 33934 def stringReceived self msg 341 Override this 342 343 raise NotImplementedError344345 def dataReceived self recd 346 Convert int16 prefixed strings into calls to stringReceived 347 348 self recvd self recvd recd349 while len self recvd 1 and not self paused 35 length ord self recvd 256 ord self recvd 1 351 if len self recvd length 2 352 break353 packet self recvd 2 length 2 354 self recvd self recvd length 2 355 self stringReceived packet 356357 def sendString self data 358 Send an int16 prefixed string to the other end of the connection 359 36 assert len data 65536 message too long 361 self transport write struct pack h len data data 362363364class StatefulStringProtocol 365 A stateful string protocol 366367 This is a mixin for string protocols Int32StringReceiver 368 NetstringReceiver which translates stringReceived into a callback369 prefixed with proto depending on state 37 371 state init 372373 def stringReceived self string 374 Choose a protocol phase function and call it 375376 Call back to the appropriate protocol phase this begins with377 the function proto init and moves on to proto depending on378 what each proto function returns For example if379 self proto init returns foo then self proto foo will be the38 next function called when a protocol message is received 381 382 try 383 pto proto self state384 statehandler getattr self pto 385 except AttributeError 386 log msg callback self state not found 387 else 388 self state statehandler string 389 if self state done 39 self transport loseConnection 391392class FileSender 393 A producer that sends the contents of a file to a consumer 394395 This is a helper for protocols that at some point will take a396 file like object read its contents and write them out to the network 397 optionally performing some transformation on the bytes in between 398399 This API is unstable 4 4 1 implements interfaces IProducer 4 24 3 CHUNK SIZE 2 144 44 5 lastSent 4 6 deferred None4 74 8 def beginFileTransfer self file consumer transform None 4 9 Begin transferring a file41 411 type file Any file like object412 param file The file object to read data from413414 type consumer Any implementor of IConsumer415 param consumer The object to write data to416417 param transform A callable taking one string argument and returning418 the same All bytes read from the file are passed through this before419 being written to the consumer 42 421 rtype C Deferred 422 return A deferred whose callback will be invoked when the file has been423 completely written to the consumer The last byte written to the consumer424 is passed to the callback 425 426 self file file427 self consumer consumer428 self transform transform42943 self deferred deferred defer Deferred 431 self consumer registerProducer self False 432 return deferred433434 def resumeProducing self 435 chunk 436 if self file 437 chunk self file read self CHUNK SIZE 438 if not chunk 439 self file None44 self consumer unregisterProducer 441 if self deferred 442 self deferred callback self lastSent 443 self deferred None444 return445446 if self transform 447 chunk self transform chunk 448 self consumer write chunk 449 self lastSent chunk 1 45 451 def pauseProducing self 452 pass453454 def stopProducing self 455 if self deferred 456 self deferred errback Exception Consumer asked us to stop producing 457 self deferred None Note See TracBrowser for help on using the repository browser Download in other formats Plain Text Original Format Powered by Trac 1 1 By Edgewall Software All content copyright 2 7 2 8 by LUCI http luci ics uci edu ", "_id": "http://djp3-pc2.ics.uci.edu/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/basic.py", "title": "\n      basic.py in nomatic/tags/nomaticim-0.0.5/buddy_bots/src/twisted/protocols\n     \u2013 nomatic*im\n    ", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n  \n\n\n  <head>\n\t\t<title>\n      basic.py in nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols\n     \u2013 Nomatic*IM\n    </title><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><link rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search\" /><link rel=\"help\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/basic.py?format=txt\" type=\"text/plain\" title=\"Plain Text\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/basic.py\" type=\"application/x-python; charset=iso-8859-15\" title=\"Original Format\" /><link rel=\"start\" href=\"/LUCICodeRepository/nomaticIM/wiki\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/code.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/pygments/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/browser.css\" type=\"text/css\" /><link rel=\"shortcut icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link rel=\"icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link type=\"application/opensearchdescription+xml\" rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search/opensearch\" title=\"Search Nomatic*IM\" /><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/jquery.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/babel.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/messages/en_US.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/trac.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/search.js\"></script><script type=\"text/javascript\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/folding.js\"></script><script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\".trac-toggledeleted\").show().click(function() {\n                  $(this).siblings().find(\".trac-deleted\").toggle();\n                  return false;\n        }).click();\n        $(\"#jumploc input\").hide();\n        $(\"#jumploc select\").change(function () {\n          this.parentNode.parentNode.submit();\n        });\n          $('#preview table.code').enableCollapsibleColumns($('#preview table.code thead th.content'));\n      });\n    </script>\n\t</head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://luci.ics.uci.edu/#code\"><img src=\"http://luci.ics.uci.edu/blog/archives/LUCIhorzTight.jpg\" alt=\"LUCI Code Repository\" /></a>\n      </div>\n      <form id=\"search\" action=\"/LUCICodeRepository/nomaticIM/search\" method=\"get\">\n        <div>\n          <label for=\"proj-search\">Search:</label>\n          <input type=\"text\" id=\"proj-search\" name=\"q\" size=\"18\" value=\"\" />\n          <input type=\"submit\" value=\"Search\" />\n        </div>\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/login\">Login</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/prefs\">Preferences</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\">Help/Guide</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/wiki\">Wiki</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/timeline\">Timeline</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/roadmap\">Roadmap</a></li><li class=\"active\"><a href=\"/LUCICodeRepository/nomaticIM/browser\">Browse Source</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/report\">View Tickets</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/search\">Search</a></li>\n    </ul>\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/buddy_bots/twisted/protocols/basic.py?annotate=blame\" title=\"Annotate each line with the last changed revision (this can be time consuming...)\">Blame</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/log/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/basic.py\">Revision Log</a></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"browser\">\n        <h1>\n          \n<a class=\"pathentry first\" href=\"/LUCICodeRepository/nomaticIM/browser?order=name\" title=\"Go to repository root\">source:</a>\n<a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic?order=name\" title=\"View nomatic\">nomatic</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags?order=name\" title=\"View tags\">tags</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5?order=name\" title=\"View NomaticIM-0.0.5\">NomaticIM-0.0.5</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots?order=name\" title=\"View buddy_bots\">buddy_bots</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src?order=name\" title=\"View src\">src</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted?order=name\" title=\"View twisted\">twisted</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols?order=name\" title=\"View protocols\">protocols</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/basic.py?order=name\" title=\"View basic.py\">basic.py</a>\n<br style=\"clear: both\" />\n\n        </h1>\n        <div id=\"diffrev\">\n          <form action=\"/LUCICodeRepository/nomaticIM/changeset\" method=\"get\">\n            <div>\n              <label title=\"Show the diff against a specific revision\">\n                View diff against: <input type=\"text\" name=\"old\" size=\"6\" />\n                <input type=\"hidden\" name=\"old_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/basic.py\" />\n                <input type=\"hidden\" name=\"new\" />\n                <input type=\"hidden\" name=\"new_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/basic.py\" />\n              </label>\n            </div>\n          </form>\n        </div>\n        <div id=\"jumprev\">\n          <form action=\"\" method=\"get\">\n            <div>\n              <label for=\"rev\">\n                View revision:</label>\n              <input type=\"text\" id=\"rev\" name=\"rev\" size=\"6\" />\n            </div>\n          </form>\n        </div>\n        <div id=\"jumploc\">\n          <form action=\"\" method=\"get\">\n            <div class=\"buttons\">\n              <label for=\"preselected\">Visit:</label>\n              <select id=\"preselected\" name=\"preselected\">\n                <option selected=\"selected\"></option>\n                <optgroup label=\"branches\">\n                  <option value=\"/LUCICodeRepository/nomaticIM/browser/trunk\">trunk</option>\n                </optgroup>\n              </select>\n              <input type=\"submit\" value=\"Go!\" title=\"Jump to the chosen preselected path\" />\n            </div>\n          </form>\n        </div>\n        <div class=\"trac-tags\">\n        </div>\n      <table id=\"info\" summary=\"Revision info\">\n        <tr>\n          <th>\n                <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/nomatic/trunk/buddy_bots/twisted/protocols/basic.py\" title=\"View differences\">Last change</a>\n                  on this file was\n                  <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/\" title=\"View changeset 712\">712</a>,\n                  checked in by cbaker, <a class=\"timeline\" href=\"/LUCICodeRepository/nomaticIM/timeline?from=2008-02-16T08%3A16%3A53-08%3A00&amp;precision=second\" title=\"See timeline at Feb 16, 2008, 8:16:53 AM\">7 years ago</a>\n          </th>\n        </tr>\n        <tr>\n          <td class=\"message searchable\">\n              <p>\nFirst draft of nomatic buddy bots. oscar_bot is functional if you give it good authentication credentials, jabber_bot is just an example from the web <br />\n</p>\n          </td>\n        </tr>\n        <tr><td colspan=\"2\">\n            <strong>File size:</strong>\n            <span title=\"15246 bytes\">14.9 KB</span>\n          </td></tr>\n      </table>\n      <div id=\"preview\" class=\"searchable\">\n        \n  <table class=\"code\"><thead><tr><th class=\"lineno\" title=\"Line numbers\">Line</th><th class=\"content\">\u00a0</th></tr></thead><tbody><tr><th id=\"L1\"><a href=\"#L1\">1</a></th><td><span class=\"c\"># -*- test-case-name: twisted.test.test_protocols -*-</span></td></tr><tr><th id=\"L2\"><a href=\"#L2\">2</a></th><td></td></tr><tr><th id=\"L3\"><a href=\"#L3\">3</a></th><td><span class=\"c\"># Copyright (c) 2001-2004 Twisted Matrix Laboratories.</span></td></tr><tr><th id=\"L4\"><a href=\"#L4\">4</a></th><td><span class=\"c\"># See LICENSE for details.</span></td></tr><tr><th id=\"L5\"><a href=\"#L5\">5</a></th><td></td></tr><tr><th id=\"L6\"><a href=\"#L6\">6</a></th><td></td></tr><tr><th id=\"L7\"><a href=\"#L7\">7</a></th><td><span class=\"sd\">\"\"\"Basic protocols, such as line-oriented, netstring, and 32-bit-int prefixed strings.</span></td></tr><tr><th id=\"L8\"><a href=\"#L8\">8</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L9\"><a href=\"#L9\">9</a></th><td><span class=\"sd\">API Stability: semi-stable.</span></td></tr><tr><th id=\"L10\"><a href=\"#L10\">10</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L11\"><a href=\"#L11\">11</a></th><td><span class=\"sd\">Maintainer: U{Itamar Shtull-Trauring&lt;mailto:twisted@itamarst.org&gt;}</span></td></tr><tr><th id=\"L12\"><a href=\"#L12\">12</a></th><td><span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L13\"><a href=\"#L13\">13</a></th><td></td></tr><tr><th id=\"L14\"><a href=\"#L14\">14</a></th><td><span class=\"c\"># System imports</span></td></tr><tr><th id=\"L15\"><a href=\"#L15\">15</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">re</span></td></tr><tr><th id=\"L16\"><a href=\"#L16\">16</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">struct</span></td></tr><tr><th id=\"L17\"><a href=\"#L17\">17</a></th><td></td></tr><tr><th id=\"L18\"><a href=\"#L18\">18</a></th><td><span class=\"c\"># Twisted imports</span></td></tr><tr><th id=\"L19\"><a href=\"#L19\">19</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet</span>\u00a0<span class=\"kn\">import</span>\u00a0protocol<span class=\"p\">,</span>\u00a0defer<span class=\"p\">,</span>\u00a0interfaces<span class=\"p\">,</span>\u00a0error</td></tr><tr><th id=\"L20\"><a href=\"#L20\">20</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.python</span>\u00a0<span class=\"kn\">import</span>\u00a0log</td></tr><tr><th id=\"L21\"><a href=\"#L21\">21</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">zope.interface</span>\u00a0<span class=\"kn\">import</span>\u00a0implements</td></tr><tr><th id=\"L22\"><a href=\"#L22\">22</a></th><td></td></tr><tr><th id=\"L23\"><a href=\"#L23\">23</a></th><td>LENGTH<span class=\"p\">,</span>\u00a0DATA<span class=\"p\">,</span>\u00a0COMMA <span class=\"o\">=</span>\u00a0<span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span></td></tr><tr><th id=\"L24\"><a href=\"#L24\">24</a></th><td>NUMBER <span class=\"o\">=</span>\u00a0re<span class=\"o\">.</span>compile<span class=\"p\">(</span><span class=\"s\">'(\\d*)(:?)'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L25\"><a href=\"#L25\">25</a></th><td>DEBUG <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L26\"><a href=\"#L26\">26</a></th><td></td></tr><tr><th id=\"L27\"><a href=\"#L27\">27</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">NetstringParseError</span><span class=\"p\">(</span><span class=\"ne\">ValueError</span><span class=\"p\">):</span></td></tr><tr><th id=\"L28\"><a href=\"#L28\">28</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"The incoming data is not in valid Netstring format.\"\"\"</span></td></tr><tr><th id=\"L29\"><a href=\"#L29\">29</a></th><td>\u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L30\"><a href=\"#L30\">30</a></th><td></td></tr><tr><th id=\"L31\"><a href=\"#L31\">31</a></th><td></td></tr><tr><th id=\"L32\"><a href=\"#L32\">32</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">NetstringReceiver</span><span class=\"p\">(</span>protocol<span class=\"o\">.</span>Protocol<span class=\"p\">):</span></td></tr><tr><th id=\"L33\"><a href=\"#L33\">33</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"This uses djb's Netstrings protocol to break up the input into strings.</span></td></tr><tr><th id=\"L34\"><a href=\"#L34\">34</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L35\"><a href=\"#L35\">35</a></th><td><span class=\"sd\">\u00a0 \u00a0 Each string makes a callback to stringReceived, with a single</span></td></tr><tr><th id=\"L36\"><a href=\"#L36\">36</a></th><td><span class=\"sd\">\u00a0 \u00a0 argument of that string.</span></td></tr><tr><th id=\"L37\"><a href=\"#L37\">37</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L38\"><a href=\"#L38\">38</a></th><td><span class=\"sd\">\u00a0 \u00a0 Security features:</span></td></tr><tr><th id=\"L39\"><a href=\"#L39\">39</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 1. Messages are limited in size, useful if you don't want someone</span></td></tr><tr><th id=\"L40\"><a href=\"#L40\">40</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0sending you a 500MB netstring (change MAX_LENGTH to the maximum</span></td></tr><tr><th id=\"L41\"><a href=\"#L41\">41</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0length you wish to accept).</span></td></tr><tr><th id=\"L42\"><a href=\"#L42\">42</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 2. The connection is lost if an illegal message is received.</span></td></tr><tr><th id=\"L43\"><a href=\"#L43\">43</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L44\"><a href=\"#L44\">44</a></th><td></td></tr><tr><th id=\"L45\"><a href=\"#L45\">45</a></th><td>\u00a0 \u00a0 MAX_LENGTH <span class=\"o\">=</span>\u00a0<span class=\"mi\">99999</span></td></tr><tr><th id=\"L46\"><a href=\"#L46\">46</a></th><td>\u00a0 \u00a0 brokenPeer <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L47\"><a href=\"#L47\">47</a></th><td>\u00a0 \u00a0 _readerState <span class=\"o\">=</span>\u00a0LENGTH</td></tr><tr><th id=\"L48\"><a href=\"#L48\">48</a></th><td>\u00a0 \u00a0 _readerLength <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L49\"><a href=\"#L49\">49</a></th><td></td></tr><tr><th id=\"L50\"><a href=\"#L50\">50</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">stringReceived</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0line<span class=\"p\">):</span></td></tr><tr><th id=\"L51\"><a href=\"#L51\">51</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L52\"><a href=\"#L52\">52</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Override this.</span></td></tr><tr><th id=\"L53\"><a href=\"#L53\">53</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L54\"><a href=\"#L54\">54</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">NotImplementedError</span></td></tr><tr><th id=\"L55\"><a href=\"#L55\">55</a></th><td></td></tr><tr><th id=\"L56\"><a href=\"#L56\">56</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">doData</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L57\"><a href=\"#L57\">57</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">buffer</span><span class=\"p\">,</span><span class=\"bp\">self</span><span class=\"o\">.</span>__data <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__data<span class=\"p\">[:</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>_readerLength<span class=\"p\">)],</span><span class=\"bp\">self</span><span class=\"o\">.</span>__data<span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>_readerLength<span class=\"p\">):]</span></td></tr><tr><th id=\"L58\"><a href=\"#L58\">58</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_readerLength <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_readerLength <span class=\"o\">-</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"nb\">buffer</span><span class=\"p\">)</span></td></tr><tr><th id=\"L59\"><a href=\"#L59\">59</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>__buffer <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__buffer <span class=\"o\">+</span>\u00a0<span class=\"nb\">buffer</span></td></tr><tr><th id=\"L60\"><a href=\"#L60\">60</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_readerLength <span class=\"o\">!=</span>\u00a0<span class=\"mi\">0</span><span class=\"p\">:</span></td></tr><tr><th id=\"L61\"><a href=\"#L61\">61</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span></td></tr><tr><th id=\"L62\"><a href=\"#L62\">62</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>stringReceived<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>__buffer<span class=\"p\">)</span></td></tr><tr><th id=\"L63\"><a href=\"#L63\">63</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_readerState <span class=\"o\">=</span>\u00a0COMMA</td></tr><tr><th id=\"L64\"><a href=\"#L64\">64</a></th><td></td></tr><tr><th id=\"L65\"><a href=\"#L65\">65</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">doComma</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L66\"><a href=\"#L66\">66</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_readerState <span class=\"o\">=</span>\u00a0LENGTH</td></tr><tr><th id=\"L67\"><a href=\"#L67\">67</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__data<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\u00a0<span class=\"o\">!=</span>\u00a0<span class=\"s\">','</span><span class=\"p\">:</span></td></tr><tr><th id=\"L68\"><a href=\"#L68\">68</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0DEBUG<span class=\"p\">:</span></td></tr><tr><th id=\"L69\"><a href=\"#L69\">69</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0NetstringParseError<span class=\"p\">(</span><span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>__data<span class=\"p\">))</span></td></tr><tr><th id=\"L70\"><a href=\"#L70\">70</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L71\"><a href=\"#L71\">71</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0NetstringParseError</td></tr><tr><th id=\"L72\"><a href=\"#L72\">72</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>__data <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__data<span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]</span></td></tr><tr><th id=\"L73\"><a href=\"#L73\">73</a></th><td></td></tr><tr><th id=\"L74\"><a href=\"#L74\">74</a></th><td></td></tr><tr><th id=\"L75\"><a href=\"#L75\">75</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">doLength</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L76\"><a href=\"#L76\">76</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 m <span class=\"o\">=</span>\u00a0NUMBER<span class=\"o\">.</span>match<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>__data<span class=\"p\">)</span></td></tr><tr><th id=\"L77\"><a href=\"#L77\">77</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0m<span class=\"o\">.</span>end<span class=\"p\">():</span></td></tr><tr><th id=\"L78\"><a href=\"#L78\">78</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0DEBUG<span class=\"p\">:</span></td></tr><tr><th id=\"L79\"><a href=\"#L79\">79</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0NetstringParseError<span class=\"p\">(</span><span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>__data<span class=\"p\">))</span></td></tr><tr><th id=\"L80\"><a href=\"#L80\">80</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L81\"><a href=\"#L81\">81</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0NetstringParseError</td></tr><tr><th id=\"L82\"><a href=\"#L82\">82</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>__data <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__data<span class=\"p\">[</span>m<span class=\"o\">.</span>end<span class=\"p\">():]</span></td></tr><tr><th id=\"L83\"><a href=\"#L83\">83</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0m<span class=\"o\">.</span>group<span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">):</span></td></tr><tr><th id=\"L84\"><a href=\"#L84\">84</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L85\"><a href=\"#L85\">85</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_readerLength <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_readerLength <span class=\"o\">*</span>\u00a0<span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"o\">**</span><span class=\"nb\">len</span><span class=\"p\">(</span>m<span class=\"o\">.</span>group<span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)))</span>\u00a0<span class=\"o\">+</span>\u00a0<span class=\"nb\">long</span><span class=\"p\">(</span>m<span class=\"o\">.</span>group<span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">))</span></td></tr><tr><th id=\"L86\"><a href=\"#L86\">86</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">OverflowError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L87\"><a href=\"#L87\">87</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0NetstringParseError<span class=\"p\">,</span>\u00a0<span class=\"s\">\"netstring too long\"</span></td></tr><tr><th id=\"L88\"><a href=\"#L88\">88</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_readerLength <span class=\"o\">&gt;</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>MAX_LENGTH<span class=\"p\">:</span></td></tr><tr><th id=\"L89\"><a href=\"#L89\">89</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0NetstringParseError<span class=\"p\">,</span>\u00a0<span class=\"s\">\"netstring too long\"</span></td></tr><tr><th id=\"L90\"><a href=\"#L90\">90</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0m<span class=\"o\">.</span>group<span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">):</span></td></tr><tr><th id=\"L91\"><a href=\"#L91\">91</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>__buffer <span class=\"o\">=</span>\u00a0<span class=\"s\">''</span></td></tr><tr><th id=\"L92\"><a href=\"#L92\">92</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_readerState <span class=\"o\">=</span>\u00a0DATA</td></tr><tr><th id=\"L93\"><a href=\"#L93\">93</a></th><td></td></tr><tr><th id=\"L94\"><a href=\"#L94\">94</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">dataReceived</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0data<span class=\"p\">):</span></td></tr><tr><th id=\"L95\"><a href=\"#L95\">95</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>__data <span class=\"o\">=</span>\u00a0data</td></tr><tr><th id=\"L96\"><a href=\"#L96\">96</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L97\"><a href=\"#L97\">97</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">while</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__data<span class=\"p\">:</span></td></tr><tr><th id=\"L98\"><a href=\"#L98\">98</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_readerState <span class=\"o\">==</span>\u00a0DATA<span class=\"p\">:</span></td></tr><tr><th id=\"L99\"><a href=\"#L99\">99</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>doData<span class=\"p\">()</span></td></tr><tr><th id=\"L100\"><a href=\"#L100\">100</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_readerState <span class=\"o\">==</span>\u00a0COMMA<span class=\"p\">:</span></td></tr><tr><th id=\"L101\"><a href=\"#L101\">101</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>doComma<span class=\"p\">()</span></td></tr><tr><th id=\"L102\"><a href=\"#L102\">102</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_readerState <span class=\"o\">==</span>\u00a0LENGTH<span class=\"p\">:</span></td></tr><tr><th id=\"L103\"><a href=\"#L103\">103</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>doLength<span class=\"p\">()</span></td></tr><tr><th id=\"L104\"><a href=\"#L104\">104</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L105\"><a href=\"#L105\">105</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">RuntimeError</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"mode is not DATA, COMMA or LENGTH\"</span></td></tr><tr><th id=\"L106\"><a href=\"#L106\">106</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0NetstringParseError<span class=\"p\">:</span></td></tr><tr><th id=\"L107\"><a href=\"#L107\">107</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>transport<span class=\"o\">.</span>loseConnection<span class=\"p\">()</span></td></tr><tr><th id=\"L108\"><a href=\"#L108\">108</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>brokenPeer <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L109\"><a href=\"#L109\">109</a></th><td></td></tr><tr><th id=\"L110\"><a href=\"#L110\">110</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">sendString</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0data<span class=\"p\">):</span></td></tr><tr><th id=\"L111\"><a href=\"#L111\">111</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>transport<span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"s\">'</span><span class=\"si\">%d</span><span class=\"s\">:</span><span class=\"si\">%s</span><span class=\"s\">,'</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span>data<span class=\"p\">),</span>\u00a0data<span class=\"p\">))</span></td></tr><tr><th id=\"L112\"><a href=\"#L112\">112</a></th><td></td></tr><tr><th id=\"L113\"><a href=\"#L113\">113</a></th><td></td></tr><tr><th id=\"L114\"><a href=\"#L114\">114</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">SafeNetstringReceiver</span><span class=\"p\">(</span>NetstringReceiver<span class=\"p\">):</span></td></tr><tr><th id=\"L115\"><a href=\"#L115\">115</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"This class is deprecated, use NetstringReceiver instead.</span></td></tr><tr><th id=\"L116\"><a href=\"#L116\">116</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L117\"><a href=\"#L117\">117</a></th><td></td></tr><tr><th id=\"L118\"><a href=\"#L118\">118</a></th><td></td></tr><tr><th id=\"L119\"><a href=\"#L119\">119</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">LineOnlyReceiver</span><span class=\"p\">(</span>protocol<span class=\"o\">.</span>Protocol<span class=\"p\">):</span></td></tr><tr><th id=\"L120\"><a href=\"#L120\">120</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"A protocol that receives only lines.</span></td></tr><tr><th id=\"L121\"><a href=\"#L121\">121</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L122\"><a href=\"#L122\">122</a></th><td><span class=\"sd\">\u00a0 \u00a0 This is purely a speed optimisation over LineReceiver, for the</span></td></tr><tr><th id=\"L123\"><a href=\"#L123\">123</a></th><td><span class=\"sd\">\u00a0 \u00a0 cases that raw mode is known to be unnecessary.</span></td></tr><tr><th id=\"L124\"><a href=\"#L124\">124</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L125\"><a href=\"#L125\">125</a></th><td><span class=\"sd\">\u00a0 \u00a0 @cvar delimiter: The line-ending delimiter to use. By default this is</span></td></tr><tr><th id=\"L126\"><a href=\"#L126\">126</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0'\\\\r\\\\n'.</span></td></tr><tr><th id=\"L127\"><a href=\"#L127\">127</a></th><td><span class=\"sd\">\u00a0 \u00a0 @cvar MAX_LENGTH: The maximum length of a line to allow (If a</span></td></tr><tr><th id=\"L128\"><a href=\"#L128\">128</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 sent line is longer than this, the connection is dropped).</span></td></tr><tr><th id=\"L129\"><a href=\"#L129\">129</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Default is 16384.</span></td></tr><tr><th id=\"L130\"><a href=\"#L130\">130</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L131\"><a href=\"#L131\">131</a></th><td>\u00a0 \u00a0 _buffer <span class=\"o\">=</span>\u00a0<span class=\"s\">''</span></td></tr><tr><th id=\"L132\"><a href=\"#L132\">132</a></th><td>\u00a0 \u00a0 delimiter <span class=\"o\">=</span>\u00a0<span class=\"s\">'</span><span class=\"se\">\\r\\n</span><span class=\"s\">'</span></td></tr><tr><th id=\"L133\"><a href=\"#L133\">133</a></th><td>\u00a0 \u00a0 MAX_LENGTH <span class=\"o\">=</span>\u00a0<span class=\"mi\">16384</span></td></tr><tr><th id=\"L134\"><a href=\"#L134\">134</a></th><td></td></tr><tr><th id=\"L135\"><a href=\"#L135\">135</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">dataReceived</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0data<span class=\"p\">):</span></td></tr><tr><th id=\"L136\"><a href=\"#L136\">136</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Translates bytes into lines, and calls lineReceived.\"\"\"</span></td></tr><tr><th id=\"L137\"><a href=\"#L137\">137</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 lines\u00a0 <span class=\"o\">=</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>_buffer<span class=\"o\">+</span>data<span class=\"p\">)</span><span class=\"o\">.</span>split<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>delimiter<span class=\"p\">)</span></td></tr><tr><th id=\"L138\"><a href=\"#L138\">138</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_buffer <span class=\"o\">=</span>\u00a0lines<span class=\"o\">.</span>pop<span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span></td></tr><tr><th id=\"L139\"><a href=\"#L139\">139</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0line <span class=\"ow\">in</span>\u00a0lines<span class=\"p\">:</span></td></tr><tr><th id=\"L140\"><a href=\"#L140\">140</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>transport<span class=\"o\">.</span>disconnecting<span class=\"p\">:</span></td></tr><tr><th id=\"L141\"><a href=\"#L141\">141</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># this is necessary because the transport may be told to lose</span></td></tr><tr><th id=\"L142\"><a href=\"#L142\">142</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># the connection by a line within a larger packet, and it is</span></td></tr><tr><th id=\"L143\"><a href=\"#L143\">143</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># important to disregard all the lines in that packet following</span></td></tr><tr><th id=\"L144\"><a href=\"#L144\">144</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># the one that told it to close.</span></td></tr><tr><th id=\"L145\"><a href=\"#L145\">145</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span></td></tr><tr><th id=\"L146\"><a href=\"#L146\">146</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span>line<span class=\"p\">)</span>\u00a0<span class=\"o\">&gt;</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>MAX_LENGTH<span class=\"p\">:</span></td></tr><tr><th id=\"L147\"><a href=\"#L147\">147</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>lineLengthExceeded<span class=\"p\">(</span>line<span class=\"p\">)</span></td></tr><tr><th id=\"L148\"><a href=\"#L148\">148</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L149\"><a href=\"#L149\">149</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>lineReceived<span class=\"p\">(</span>line<span class=\"p\">)</span></td></tr><tr><th id=\"L150\"><a href=\"#L150\">150</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>_buffer<span class=\"p\">)</span>\u00a0<span class=\"o\">&gt;</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>MAX_LENGTH<span class=\"p\">:</span></td></tr><tr><th id=\"L151\"><a href=\"#L151\">151</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>lineLengthExceeded<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>_buffer<span class=\"p\">)</span></td></tr><tr><th id=\"L152\"><a href=\"#L152\">152</a></th><td></td></tr><tr><th id=\"L153\"><a href=\"#L153\">153</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">lineReceived</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0line<span class=\"p\">):</span></td></tr><tr><th id=\"L154\"><a href=\"#L154\">154</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Override this for when each line is received.</span></td></tr><tr><th id=\"L155\"><a href=\"#L155\">155</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L156\"><a href=\"#L156\">156</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">NotImplementedError</span></td></tr><tr><th id=\"L157\"><a href=\"#L157\">157</a></th><td></td></tr><tr><th id=\"L158\"><a href=\"#L158\">158</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">sendLine</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0line<span class=\"p\">):</span></td></tr><tr><th id=\"L159\"><a href=\"#L159\">159</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Sends a line to the other end of the connection.</span></td></tr><tr><th id=\"L160\"><a href=\"#L160\">160</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L161\"><a href=\"#L161\">161</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>transport<span class=\"o\">.</span>writeSequence<span class=\"p\">((</span>line<span class=\"p\">,</span><span class=\"bp\">self</span><span class=\"o\">.</span>delimiter<span class=\"p\">))</span></td></tr><tr><th id=\"L162\"><a href=\"#L162\">162</a></th><td></td></tr><tr><th id=\"L163\"><a href=\"#L163\">163</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">lineLengthExceeded</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0line<span class=\"p\">):</span></td></tr><tr><th id=\"L164\"><a href=\"#L164\">164</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Called when the maximum line length has been reached.</span></td></tr><tr><th id=\"L165\"><a href=\"#L165\">165</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Override if it needs to be dealt with in some special way.</span></td></tr><tr><th id=\"L166\"><a href=\"#L166\">166</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L167\"><a href=\"#L167\">167</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0error<span class=\"o\">.</span>ConnectionLost<span class=\"p\">(</span><span class=\"s\">'Line length exceeded'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L168\"><a href=\"#L168\">168</a></th><td></td></tr><tr><th id=\"L169\"><a href=\"#L169\">169</a></th><td></td></tr><tr><th id=\"L170\"><a href=\"#L170\">170</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">_PauseableMixin</span><span class=\"p\">:</span></td></tr><tr><th id=\"L171\"><a href=\"#L171\">171</a></th><td>\u00a0 \u00a0 paused <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L172\"><a href=\"#L172\">172</a></th><td></td></tr><tr><th id=\"L173\"><a href=\"#L173\">173</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">pauseProducing</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L174\"><a href=\"#L174\">174</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>paused <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L175\"><a href=\"#L175\">175</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>transport<span class=\"o\">.</span>pauseProducing<span class=\"p\">()</span></td></tr><tr><th id=\"L176\"><a href=\"#L176\">176</a></th><td></td></tr><tr><th id=\"L177\"><a href=\"#L177\">177</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">resumeProducing</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L178\"><a href=\"#L178\">178</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>paused <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L179\"><a href=\"#L179\">179</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>transport<span class=\"o\">.</span>resumeProducing<span class=\"p\">()</span></td></tr><tr><th id=\"L180\"><a href=\"#L180\">180</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>dataReceived<span class=\"p\">(</span><span class=\"s\">''</span><span class=\"p\">)</span></td></tr><tr><th id=\"L181\"><a href=\"#L181\">181</a></th><td></td></tr><tr><th id=\"L182\"><a href=\"#L182\">182</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">stopProducing</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L183\"><a href=\"#L183\">183</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>paused <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L184\"><a href=\"#L184\">184</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>transport<span class=\"o\">.</span>stopProducing<span class=\"p\">()</span></td></tr><tr><th id=\"L185\"><a href=\"#L185\">185</a></th><td></td></tr><tr><th id=\"L186\"><a href=\"#L186\">186</a></th><td></td></tr><tr><th id=\"L187\"><a href=\"#L187\">187</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">LineReceiver</span><span class=\"p\">(</span>protocol<span class=\"o\">.</span>Protocol<span class=\"p\">,</span>\u00a0_PauseableMixin<span class=\"p\">):</span></td></tr><tr><th id=\"L188\"><a href=\"#L188\">188</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"A protocol that receives lines and/or raw data, depending on mode.</span></td></tr><tr><th id=\"L189\"><a href=\"#L189\">189</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L190\"><a href=\"#L190\">190</a></th><td><span class=\"sd\">\u00a0 \u00a0 In line mode, each line that's received becomes a callback to</span></td></tr><tr><th id=\"L191\"><a href=\"#L191\">191</a></th><td><span class=\"sd\">\u00a0 \u00a0 L{lineReceived}.\u00a0 In raw data mode, each chunk of raw data becomes a</span></td></tr><tr><th id=\"L192\"><a href=\"#L192\">192</a></th><td><span class=\"sd\">\u00a0 \u00a0 callback to L{rawDataReceived}.\u00a0 The L{setLineMode} and L{setRawMode}</span></td></tr><tr><th id=\"L193\"><a href=\"#L193\">193</a></th><td><span class=\"sd\">\u00a0 \u00a0 methods switch between the two modes.</span></td></tr><tr><th id=\"L194\"><a href=\"#L194\">194</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L195\"><a href=\"#L195\">195</a></th><td><span class=\"sd\">\u00a0 \u00a0 This is useful for line-oriented protocols such as IRC, HTTP, POP, etc.</span></td></tr><tr><th id=\"L196\"><a href=\"#L196\">196</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L197\"><a href=\"#L197\">197</a></th><td><span class=\"sd\">\u00a0 \u00a0 @cvar delimiter: The line-ending delimiter to use. By default this is</span></td></tr><tr><th id=\"L198\"><a href=\"#L198\">198</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0'\\\\r\\\\n'.</span></td></tr><tr><th id=\"L199\"><a href=\"#L199\">199</a></th><td><span class=\"sd\">\u00a0 \u00a0 @cvar MAX_LENGTH: The maximum length of a line to allow (If a</span></td></tr><tr><th id=\"L200\"><a href=\"#L200\">200</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 sent line is longer than this, the connection is dropped).</span></td></tr><tr><th id=\"L201\"><a href=\"#L201\">201</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Default is 16384.</span></td></tr><tr><th id=\"L202\"><a href=\"#L202\">202</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L203\"><a href=\"#L203\">203</a></th><td>\u00a0 \u00a0 line_mode <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L204\"><a href=\"#L204\">204</a></th><td>\u00a0 \u00a0 __buffer <span class=\"o\">=</span>\u00a0<span class=\"s\">''</span></td></tr><tr><th id=\"L205\"><a href=\"#L205\">205</a></th><td>\u00a0 \u00a0 delimiter <span class=\"o\">=</span>\u00a0<span class=\"s\">'</span><span class=\"se\">\\r\\n</span><span class=\"s\">'</span></td></tr><tr><th id=\"L206\"><a href=\"#L206\">206</a></th><td>\u00a0 \u00a0 MAX_LENGTH <span class=\"o\">=</span>\u00a0<span class=\"mi\">16384</span></td></tr><tr><th id=\"L207\"><a href=\"#L207\">207</a></th><td></td></tr><tr><th id=\"L208\"><a href=\"#L208\">208</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">clearLineBuffer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L209\"><a href=\"#L209\">209</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Clear buffered data.\"\"\"</span></td></tr><tr><th id=\"L210\"><a href=\"#L210\">210</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>__buffer <span class=\"o\">=</span>\u00a0<span class=\"s\">\"\"</span></td></tr><tr><th id=\"L211\"><a href=\"#L211\">211</a></th><td></td></tr><tr><th id=\"L212\"><a href=\"#L212\">212</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">dataReceived</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0data<span class=\"p\">):</span></td></tr><tr><th id=\"L213\"><a href=\"#L213\">213</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Protocol.dataReceived.</span></td></tr><tr><th id=\"L214\"><a href=\"#L214\">214</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Translates bytes into lines, and calls lineReceived (or</span></td></tr><tr><th id=\"L215\"><a href=\"#L215\">215</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 rawDataReceived, depending on mode.)</span></td></tr><tr><th id=\"L216\"><a href=\"#L216\">216</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L217\"><a href=\"#L217\">217</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>__buffer <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__buffer<span class=\"o\">+</span>data</td></tr><tr><th id=\"L218\"><a href=\"#L218\">218</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">while</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>line_mode <span class=\"ow\">and</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>paused<span class=\"p\">:</span></td></tr><tr><th id=\"L219\"><a href=\"#L219\">219</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L220\"><a href=\"#L220\">220</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 line<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__buffer <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__buffer<span class=\"o\">.</span>split<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>delimiter<span class=\"p\">,</span>\u00a0<span class=\"mi\">1</span><span class=\"p\">)</span></td></tr><tr><th id=\"L221\"><a href=\"#L221\">221</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">ValueError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L222\"><a href=\"#L222\">222</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>__buffer<span class=\"p\">)</span>\u00a0<span class=\"o\">&gt;</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>MAX_LENGTH<span class=\"p\">:</span></td></tr><tr><th id=\"L223\"><a href=\"#L223\">223</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 line<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__buffer <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__buffer<span class=\"p\">,</span>\u00a0<span class=\"s\">''</span></td></tr><tr><th id=\"L224\"><a href=\"#L224\">224</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>lineLengthExceeded<span class=\"p\">(</span>line<span class=\"p\">)</span></td></tr><tr><th id=\"L225\"><a href=\"#L225\">225</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">break</span></td></tr><tr><th id=\"L226\"><a href=\"#L226\">226</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L227\"><a href=\"#L227\">227</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 linelength <span class=\"o\">=</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span>line<span class=\"p\">)</span></td></tr><tr><th id=\"L228\"><a href=\"#L228\">228</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0linelength <span class=\"o\">&gt;</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>MAX_LENGTH<span class=\"p\">:</span></td></tr><tr><th id=\"L229\"><a href=\"#L229\">229</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 exceeded <span class=\"o\">=</span>\u00a0line <span class=\"o\">+</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>__buffer</td></tr><tr><th id=\"L230\"><a href=\"#L230\">230</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>__buffer <span class=\"o\">=</span>\u00a0<span class=\"s\">''</span></td></tr><tr><th id=\"L231\"><a href=\"#L231\">231</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>lineLengthExceeded<span class=\"p\">(</span>exceeded<span class=\"p\">)</span></td></tr><tr><th id=\"L232\"><a href=\"#L232\">232</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 why <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>lineReceived<span class=\"p\">(</span>line<span class=\"p\">)</span></td></tr><tr><th id=\"L233\"><a href=\"#L233\">233</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0why <span class=\"ow\">or</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>transport <span class=\"ow\">and</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>transport<span class=\"o\">.</span>disconnecting<span class=\"p\">:</span></td></tr><tr><th id=\"L234\"><a href=\"#L234\">234</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0why</td></tr><tr><th id=\"L235\"><a href=\"#L235\">235</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L236\"><a href=\"#L236\">236</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>paused<span class=\"p\">:</span></td></tr><tr><th id=\"L237\"><a href=\"#L237\">237</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 data<span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span>__buffer</td></tr><tr><th id=\"L238\"><a href=\"#L238\">238</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>__buffer<span class=\"o\">=</span><span class=\"s\">''</span></td></tr><tr><th id=\"L239\"><a href=\"#L239\">239</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0data<span class=\"p\">:</span></td></tr><tr><th id=\"L240\"><a href=\"#L240\">240</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>rawDataReceived<span class=\"p\">(</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L241\"><a href=\"#L241\">241</a></th><td></td></tr><tr><th id=\"L242\"><a href=\"#L242\">242</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">setLineMode</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0extra<span class=\"o\">=</span><span class=\"s\">''</span><span class=\"p\">):</span></td></tr><tr><th id=\"L243\"><a href=\"#L243\">243</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Sets the line-mode of this receiver.</span></td></tr><tr><th id=\"L244\"><a href=\"#L244\">244</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L245\"><a href=\"#L245\">245</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 If you are calling this from a rawDataReceived callback,</span></td></tr><tr><th id=\"L246\"><a href=\"#L246\">246</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 you can pass in extra unhandled data, and that data will</span></td></tr><tr><th id=\"L247\"><a href=\"#L247\">247</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 be parsed for lines.\u00a0 Further data received will be sent</span></td></tr><tr><th id=\"L248\"><a href=\"#L248\">248</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 to lineReceived rather than rawDataReceived.</span></td></tr><tr><th id=\"L249\"><a href=\"#L249\">249</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L250\"><a href=\"#L250\">250</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Do not pass extra data if calling this function from</span></td></tr><tr><th id=\"L251\"><a href=\"#L251\">251</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 within a lineReceived callback.</span></td></tr><tr><th id=\"L252\"><a href=\"#L252\">252</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L253\"><a href=\"#L253\">253</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>line_mode <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L254\"><a href=\"#L254\">254</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0extra<span class=\"p\">:</span></td></tr><tr><th id=\"L255\"><a href=\"#L255\">255</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>dataReceived<span class=\"p\">(</span>extra<span class=\"p\">)</span></td></tr><tr><th id=\"L256\"><a href=\"#L256\">256</a></th><td></td></tr><tr><th id=\"L257\"><a href=\"#L257\">257</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">setRawMode</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L258\"><a href=\"#L258\">258</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Sets the raw mode of this receiver.</span></td></tr><tr><th id=\"L259\"><a href=\"#L259\">259</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Further data received will be sent to rawDataReceived rather</span></td></tr><tr><th id=\"L260\"><a href=\"#L260\">260</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 than lineReceived.</span></td></tr><tr><th id=\"L261\"><a href=\"#L261\">261</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L262\"><a href=\"#L262\">262</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>line_mode <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L263\"><a href=\"#L263\">263</a></th><td></td></tr><tr><th id=\"L264\"><a href=\"#L264\">264</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">rawDataReceived</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0data<span class=\"p\">):</span></td></tr><tr><th id=\"L265\"><a href=\"#L265\">265</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Override this for when raw data is received.</span></td></tr><tr><th id=\"L266\"><a href=\"#L266\">266</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L267\"><a href=\"#L267\">267</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">NotImplementedError</span></td></tr><tr><th id=\"L268\"><a href=\"#L268\">268</a></th><td></td></tr><tr><th id=\"L269\"><a href=\"#L269\">269</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">lineReceived</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0line<span class=\"p\">):</span></td></tr><tr><th id=\"L270\"><a href=\"#L270\">270</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Override this for when each line is received.</span></td></tr><tr><th id=\"L271\"><a href=\"#L271\">271</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L272\"><a href=\"#L272\">272</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">NotImplementedError</span></td></tr><tr><th id=\"L273\"><a href=\"#L273\">273</a></th><td></td></tr><tr><th id=\"L274\"><a href=\"#L274\">274</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">sendLine</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0line<span class=\"p\">):</span></td></tr><tr><th id=\"L275\"><a href=\"#L275\">275</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Sends a line to the other end of the connection.</span></td></tr><tr><th id=\"L276\"><a href=\"#L276\">276</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L277\"><a href=\"#L277\">277</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>transport<span class=\"o\">.</span>write<span class=\"p\">(</span>line <span class=\"o\">+</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>delimiter<span class=\"p\">)</span></td></tr><tr><th id=\"L278\"><a href=\"#L278\">278</a></th><td></td></tr><tr><th id=\"L279\"><a href=\"#L279\">279</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">lineLengthExceeded</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0line<span class=\"p\">):</span></td></tr><tr><th id=\"L280\"><a href=\"#L280\">280</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Called when the maximum line length has been reached.</span></td></tr><tr><th id=\"L281\"><a href=\"#L281\">281</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Override if it needs to be dealt with in some special way.</span></td></tr><tr><th id=\"L282\"><a href=\"#L282\">282</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L283\"><a href=\"#L283\">283</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 The argument 'line' contains the remainder of the buffer, starting</span></td></tr><tr><th id=\"L284\"><a href=\"#L284\">284</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 with (at least some part) of the line which is too long. This may</span></td></tr><tr><th id=\"L285\"><a href=\"#L285\">285</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 be more than one line, or may be only the initial portion of the</span></td></tr><tr><th id=\"L286\"><a href=\"#L286\">286</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 line.</span></td></tr><tr><th id=\"L287\"><a href=\"#L287\">287</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L288\"><a href=\"#L288\">288</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>transport<span class=\"o\">.</span>loseConnection<span class=\"p\">()</span></td></tr><tr><th id=\"L289\"><a href=\"#L289\">289</a></th><td></td></tr><tr><th id=\"L290\"><a href=\"#L290\">290</a></th><td></td></tr><tr><th id=\"L291\"><a href=\"#L291\">291</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">Int32StringReceiver</span><span class=\"p\">(</span>protocol<span class=\"o\">.</span>Protocol<span class=\"p\">,</span>\u00a0_PauseableMixin<span class=\"p\">):</span></td></tr><tr><th id=\"L292\"><a href=\"#L292\">292</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"A receiver for int32-prefixed strings.</span></td></tr><tr><th id=\"L293\"><a href=\"#L293\">293</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L294\"><a href=\"#L294\">294</a></th><td><span class=\"sd\">\u00a0 \u00a0 An int32 string is a string prefixed by 4 bytes, the 32-bit length of</span></td></tr><tr><th id=\"L295\"><a href=\"#L295\">295</a></th><td><span class=\"sd\">\u00a0 \u00a0 the string encoded in network byte order.</span></td></tr><tr><th id=\"L296\"><a href=\"#L296\">296</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L297\"><a href=\"#L297\">297</a></th><td><span class=\"sd\">\u00a0 \u00a0 This class publishes the same interface as NetstringReceiver.</span></td></tr><tr><th id=\"L298\"><a href=\"#L298\">298</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L299\"><a href=\"#L299\">299</a></th><td></td></tr><tr><th id=\"L300\"><a href=\"#L300\">300</a></th><td>\u00a0 \u00a0 MAX_LENGTH <span class=\"o\">=</span>\u00a0<span class=\"mi\">99999</span></td></tr><tr><th id=\"L301\"><a href=\"#L301\">301</a></th><td>\u00a0 \u00a0 recvd <span class=\"o\">=</span>\u00a0<span class=\"s\">\"\"</span></td></tr><tr><th id=\"L302\"><a href=\"#L302\">302</a></th><td></td></tr><tr><th id=\"L303\"><a href=\"#L303\">303</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">stringReceived</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0msg<span class=\"p\">):</span></td></tr><tr><th id=\"L304\"><a href=\"#L304\">304</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Override this.</span></td></tr><tr><th id=\"L305\"><a href=\"#L305\">305</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L306\"><a href=\"#L306\">306</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">NotImplementedError</span></td></tr><tr><th id=\"L307\"><a href=\"#L307\">307</a></th><td></td></tr><tr><th id=\"L308\"><a href=\"#L308\">308</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">dataReceived</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0recd<span class=\"p\">):</span></td></tr><tr><th id=\"L309\"><a href=\"#L309\">309</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Convert int32 prefixed strings into calls to stringReceived.</span></td></tr><tr><th id=\"L310\"><a href=\"#L310\">310</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L311\"><a href=\"#L311\">311</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>recvd <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>recvd <span class=\"o\">+</span>\u00a0recd</td></tr><tr><th id=\"L312\"><a href=\"#L312\">312</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">while</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>recvd<span class=\"p\">)</span>\u00a0<span class=\"o\">&gt;</span>\u00a0<span class=\"mi\">3</span>\u00a0<span class=\"ow\">and</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>paused<span class=\"p\">:</span></td></tr><tr><th id=\"L313\"><a href=\"#L313\">313</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 length <span class=\"p\">,</span><span class=\"o\">=</span>\u00a0struct<span class=\"o\">.</span>unpack<span class=\"p\">(</span><span class=\"s\">\"!i\"</span><span class=\"p\">,</span><span class=\"bp\">self</span><span class=\"o\">.</span>recvd<span class=\"p\">[:</span><span class=\"mi\">4</span><span class=\"p\">])</span></td></tr><tr><th id=\"L314\"><a href=\"#L314\">314</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0length <span class=\"o\">&gt;</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>MAX_LENGTH<span class=\"p\">:</span></td></tr><tr><th id=\"L315\"><a href=\"#L315\">315</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>transport<span class=\"o\">.</span>loseConnection<span class=\"p\">()</span></td></tr><tr><th id=\"L316\"><a href=\"#L316\">316</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span></td></tr><tr><th id=\"L317\"><a href=\"#L317\">317</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>recvd<span class=\"p\">)</span>\u00a0<span class=\"o\">&lt;</span>\u00a0length<span class=\"o\">+</span><span class=\"mi\">4</span><span class=\"p\">:</span></td></tr><tr><th id=\"L318\"><a href=\"#L318\">318</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">break</span></td></tr><tr><th id=\"L319\"><a href=\"#L319\">319</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 packet <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>recvd<span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">:</span>length<span class=\"o\">+</span><span class=\"mi\">4</span><span class=\"p\">]</span></td></tr><tr><th id=\"L320\"><a href=\"#L320\">320</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>recvd <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>recvd<span class=\"p\">[</span>length<span class=\"o\">+</span><span class=\"mi\">4</span><span class=\"p\">:]</span></td></tr><tr><th id=\"L321\"><a href=\"#L321\">321</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>stringReceived<span class=\"p\">(</span>packet<span class=\"p\">)</span></td></tr><tr><th id=\"L322\"><a href=\"#L322\">322</a></th><td></td></tr><tr><th id=\"L323\"><a href=\"#L323\">323</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">sendString</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0data<span class=\"p\">):</span></td></tr><tr><th id=\"L324\"><a href=\"#L324\">324</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Send an int32-prefixed string to the other end of the connection.</span></td></tr><tr><th id=\"L325\"><a href=\"#L325\">325</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L326\"><a href=\"#L326\">326</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>transport<span class=\"o\">.</span>write<span class=\"p\">(</span>struct<span class=\"o\">.</span>pack<span class=\"p\">(</span><span class=\"s\">\"!i\"</span><span class=\"p\">,</span><span class=\"nb\">len</span><span class=\"p\">(</span>data<span class=\"p\">))</span><span class=\"o\">+</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L327\"><a href=\"#L327\">327</a></th><td></td></tr><tr><th id=\"L328\"><a href=\"#L328\">328</a></th><td></td></tr><tr><th id=\"L329\"><a href=\"#L329\">329</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">Int16StringReceiver</span><span class=\"p\">(</span>protocol<span class=\"o\">.</span>Protocol<span class=\"p\">,</span>\u00a0_PauseableMixin<span class=\"p\">):</span></td></tr><tr><th id=\"L330\"><a href=\"#L330\">330</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"A receiver for int16-prefixed strings.</span></td></tr><tr><th id=\"L331\"><a href=\"#L331\">331</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L332\"><a href=\"#L332\">332</a></th><td><span class=\"sd\">\u00a0 \u00a0 An int16 string is a string prefixed by 2 bytes, the 16-bit length of</span></td></tr><tr><th id=\"L333\"><a href=\"#L333\">333</a></th><td><span class=\"sd\">\u00a0 \u00a0 the string encoded in network byte order.</span></td></tr><tr><th id=\"L334\"><a href=\"#L334\">334</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L335\"><a href=\"#L335\">335</a></th><td><span class=\"sd\">\u00a0 \u00a0 This class publishes the same interface as NetstringReceiver.</span></td></tr><tr><th id=\"L336\"><a href=\"#L336\">336</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L337\"><a href=\"#L337\">337</a></th><td></td></tr><tr><th id=\"L338\"><a href=\"#L338\">338</a></th><td>\u00a0 \u00a0 recvd <span class=\"o\">=</span>\u00a0<span class=\"s\">\"\"</span></td></tr><tr><th id=\"L339\"><a href=\"#L339\">339</a></th><td></td></tr><tr><th id=\"L340\"><a href=\"#L340\">340</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">stringReceived</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0msg<span class=\"p\">):</span></td></tr><tr><th id=\"L341\"><a href=\"#L341\">341</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Override this.</span></td></tr><tr><th id=\"L342\"><a href=\"#L342\">342</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L343\"><a href=\"#L343\">343</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">NotImplementedError</span></td></tr><tr><th id=\"L344\"><a href=\"#L344\">344</a></th><td></td></tr><tr><th id=\"L345\"><a href=\"#L345\">345</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">dataReceived</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0recd<span class=\"p\">):</span></td></tr><tr><th id=\"L346\"><a href=\"#L346\">346</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Convert int16 prefixed strings into calls to stringReceived.</span></td></tr><tr><th id=\"L347\"><a href=\"#L347\">347</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L348\"><a href=\"#L348\">348</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>recvd <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>recvd <span class=\"o\">+</span>\u00a0recd</td></tr><tr><th id=\"L349\"><a href=\"#L349\">349</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">while</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>recvd<span class=\"p\">)</span>\u00a0<span class=\"o\">&gt;</span>\u00a0<span class=\"mi\">1</span>\u00a0<span class=\"ow\">and</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>paused<span class=\"p\">:</span></td></tr><tr><th id=\"L350\"><a href=\"#L350\">350</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 length <span class=\"o\">=</span>\u00a0<span class=\"p\">(</span><span class=\"nb\">ord</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>recvd<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\u00a0<span class=\"o\">*</span>\u00a0<span class=\"mi\">256</span><span class=\"p\">)</span>\u00a0<span class=\"o\">+</span>\u00a0<span class=\"nb\">ord</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>recvd<span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span></td></tr><tr><th id=\"L351\"><a href=\"#L351\">351</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>recvd<span class=\"p\">)</span>\u00a0<span class=\"o\">&lt;</span>\u00a0length<span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">:</span></td></tr><tr><th id=\"L352\"><a href=\"#L352\">352</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">break</span></td></tr><tr><th id=\"L353\"><a href=\"#L353\">353</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 packet <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>recvd<span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">:</span>length<span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">]</span></td></tr><tr><th id=\"L354\"><a href=\"#L354\">354</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>recvd <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>recvd<span class=\"p\">[</span>length<span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">:]</span></td></tr><tr><th id=\"L355\"><a href=\"#L355\">355</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>stringReceived<span class=\"p\">(</span>packet<span class=\"p\">)</span></td></tr><tr><th id=\"L356\"><a href=\"#L356\">356</a></th><td></td></tr><tr><th id=\"L357\"><a href=\"#L357\">357</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">sendString</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0data<span class=\"p\">):</span></td></tr><tr><th id=\"L358\"><a href=\"#L358\">358</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Send an int16-prefixed string to the other end of the connection.</span></td></tr><tr><th id=\"L359\"><a href=\"#L359\">359</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L360\"><a href=\"#L360\">360</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">assert</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span>data<span class=\"p\">)</span>\u00a0<span class=\"o\">&lt;</span>\u00a0<span class=\"mi\">65536</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"message too long\"</span></td></tr><tr><th id=\"L361\"><a href=\"#L361\">361</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>transport<span class=\"o\">.</span>write<span class=\"p\">(</span>struct<span class=\"o\">.</span>pack<span class=\"p\">(</span><span class=\"s\">\"!h\"</span><span class=\"p\">,</span><span class=\"nb\">len</span><span class=\"p\">(</span>data<span class=\"p\">))</span>\u00a0<span class=\"o\">+</span>\u00a0data<span class=\"p\">)</span></td></tr><tr><th id=\"L362\"><a href=\"#L362\">362</a></th><td></td></tr><tr><th id=\"L363\"><a href=\"#L363\">363</a></th><td></td></tr><tr><th id=\"L364\"><a href=\"#L364\">364</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">StatefulStringProtocol</span><span class=\"p\">:</span></td></tr><tr><th id=\"L365\"><a href=\"#L365\">365</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"A stateful string protocol.</span></td></tr><tr><th id=\"L366\"><a href=\"#L366\">366</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L367\"><a href=\"#L367\">367</a></th><td><span class=\"sd\">\u00a0 \u00a0 This is a mixin for string protocols (Int32StringReceiver,</span></td></tr><tr><th id=\"L368\"><a href=\"#L368\">368</a></th><td><span class=\"sd\">\u00a0 \u00a0 NetstringReceiver) which translates stringReceived into a callback</span></td></tr><tr><th id=\"L369\"><a href=\"#L369\">369</a></th><td><span class=\"sd\">\u00a0 \u00a0 (prefixed with 'proto_') depending on state.\"\"\"</span></td></tr><tr><th id=\"L370\"><a href=\"#L370\">370</a></th><td></td></tr><tr><th id=\"L371\"><a href=\"#L371\">371</a></th><td>\u00a0 \u00a0 state <span class=\"o\">=</span>\u00a0<span class=\"s\">'init'</span></td></tr><tr><th id=\"L372\"><a href=\"#L372\">372</a></th><td></td></tr><tr><th id=\"L373\"><a href=\"#L373\">373</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">stringReceived</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>string<span class=\"p\">):</span></td></tr><tr><th id=\"L374\"><a href=\"#L374\">374</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Choose a protocol phase function and call it.</span></td></tr><tr><th id=\"L375\"><a href=\"#L375\">375</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L376\"><a href=\"#L376\">376</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Call back to the appropriate protocol phase; this begins with</span></td></tr><tr><th id=\"L377\"><a href=\"#L377\">377</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 the function proto_init and moves on to proto_* depending on</span></td></tr><tr><th id=\"L378\"><a href=\"#L378\">378</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 what each proto_* function returns.\u00a0 (For example, if</span></td></tr><tr><th id=\"L379\"><a href=\"#L379\">379</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 self.proto_init returns 'foo', then self.proto_foo will be the</span></td></tr><tr><th id=\"L380\"><a href=\"#L380\">380</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 next function called when a protocol message is received.</span></td></tr><tr><th id=\"L381\"><a href=\"#L381\">381</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L382\"><a href=\"#L382\">382</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L383\"><a href=\"#L383\">383</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 pto <span class=\"o\">=</span>\u00a0<span class=\"s\">'proto_'</span><span class=\"o\">+</span><span class=\"bp\">self</span><span class=\"o\">.</span>state</td></tr><tr><th id=\"L384\"><a href=\"#L384\">384</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 statehandler <span class=\"o\">=</span>\u00a0<span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>pto<span class=\"p\">)</span></td></tr><tr><th id=\"L385\"><a href=\"#L385\">385</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">AttributeError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L386\"><a href=\"#L386\">386</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log<span class=\"o\">.</span>msg<span class=\"p\">(</span><span class=\"s\">'callback'</span><span class=\"p\">,</span><span class=\"bp\">self</span><span class=\"o\">.</span>state<span class=\"p\">,</span><span class=\"s\">'not found'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L387\"><a href=\"#L387\">387</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L388\"><a href=\"#L388\">388</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>state <span class=\"o\">=</span>\u00a0statehandler<span class=\"p\">(</span>string<span class=\"p\">)</span></td></tr><tr><th id=\"L389\"><a href=\"#L389\">389</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>state <span class=\"o\">==</span>\u00a0<span class=\"s\">'done'</span><span class=\"p\">:</span></td></tr><tr><th id=\"L390\"><a href=\"#L390\">390</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>transport<span class=\"o\">.</span>loseConnection<span class=\"p\">()</span></td></tr><tr><th id=\"L391\"><a href=\"#L391\">391</a></th><td></td></tr><tr><th id=\"L392\"><a href=\"#L392\">392</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">FileSender</span><span class=\"p\">:</span></td></tr><tr><th id=\"L393\"><a href=\"#L393\">393</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"A producer that sends the contents of a file to a consumer.</span></td></tr><tr><th id=\"L394\"><a href=\"#L394\">394</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L395\"><a href=\"#L395\">395</a></th><td><span class=\"sd\">\u00a0 \u00a0 This is a helper for protocols that, at some point, will take a</span></td></tr><tr><th id=\"L396\"><a href=\"#L396\">396</a></th><td><span class=\"sd\">\u00a0 \u00a0 file-like object, read its contents, and write them out to the network,</span></td></tr><tr><th id=\"L397\"><a href=\"#L397\">397</a></th><td><span class=\"sd\">\u00a0 \u00a0 optionally performing some transformation on the bytes in between.</span></td></tr><tr><th id=\"L398\"><a href=\"#L398\">398</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L399\"><a href=\"#L399\">399</a></th><td><span class=\"sd\">\u00a0 \u00a0 This API is unstable.</span></td></tr><tr><th id=\"L400\"><a href=\"#L400\">400</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L401\"><a href=\"#L401\">401</a></th><td>\u00a0 \u00a0 implements<span class=\"p\">(</span>interfaces<span class=\"o\">.</span>IProducer<span class=\"p\">)</span></td></tr><tr><th id=\"L402\"><a href=\"#L402\">402</a></th><td></td></tr><tr><th id=\"L403\"><a href=\"#L403\">403</a></th><td>\u00a0 \u00a0 CHUNK_SIZE <span class=\"o\">=</span>\u00a0<span class=\"mi\">2</span>\u00a0<span class=\"o\">**</span>\u00a0<span class=\"mi\">14</span></td></tr><tr><th id=\"L404\"><a href=\"#L404\">404</a></th><td></td></tr><tr><th id=\"L405\"><a href=\"#L405\">405</a></th><td>\u00a0 \u00a0 lastSent <span class=\"o\">=</span>\u00a0<span class=\"s\">''</span></td></tr><tr><th id=\"L406\"><a href=\"#L406\">406</a></th><td>\u00a0 \u00a0 deferred <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L407\"><a href=\"#L407\">407</a></th><td></td></tr><tr><th id=\"L408\"><a href=\"#L408\">408</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">beginFileTransfer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"nb\">file</span><span class=\"p\">,</span>\u00a0consumer<span class=\"p\">,</span>\u00a0transform <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L409\"><a href=\"#L409\">409</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Begin transferring a file</span></td></tr><tr><th id=\"L410\"><a href=\"#L410\">410</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L411\"><a href=\"#L411\">411</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @type file: Any file-like object</span></td></tr><tr><th id=\"L412\"><a href=\"#L412\">412</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param file: The file object to read data from</span></td></tr><tr><th id=\"L413\"><a href=\"#L413\">413</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L414\"><a href=\"#L414\">414</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @type consumer: Any implementor of IConsumer</span></td></tr><tr><th id=\"L415\"><a href=\"#L415\">415</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param consumer: The object to write data to</span></td></tr><tr><th id=\"L416\"><a href=\"#L416\">416</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L417\"><a href=\"#L417\">417</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param transform: A callable taking one string argument and returning</span></td></tr><tr><th id=\"L418\"><a href=\"#L418\">418</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 the same.\u00a0 All bytes read from the file are passed through this before</span></td></tr><tr><th id=\"L419\"><a href=\"#L419\">419</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 being written to the consumer.</span></td></tr><tr><th id=\"L420\"><a href=\"#L420\">420</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L421\"><a href=\"#L421\">421</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @rtype: C{Deferred}</span></td></tr><tr><th id=\"L422\"><a href=\"#L422\">422</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: A deferred whose callback will be invoked when the file has been</span></td></tr><tr><th id=\"L423\"><a href=\"#L423\">423</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 completely written to the consumer.\u00a0 The last byte written to the consumer</span></td></tr><tr><th id=\"L424\"><a href=\"#L424\">424</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 is passed to the callback.</span></td></tr><tr><th id=\"L425\"><a href=\"#L425\">425</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L426\"><a href=\"#L426\">426</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>file <span class=\"o\">=</span>\u00a0<span class=\"nb\">file</span></td></tr><tr><th id=\"L427\"><a href=\"#L427\">427</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>consumer <span class=\"o\">=</span>\u00a0consumer</td></tr><tr><th id=\"L428\"><a href=\"#L428\">428</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>transform <span class=\"o\">=</span>\u00a0transform</td></tr><tr><th id=\"L429\"><a href=\"#L429\">429</a></th><td></td></tr><tr><th id=\"L430\"><a href=\"#L430\">430</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>deferred <span class=\"o\">=</span>\u00a0deferred <span class=\"o\">=</span>\u00a0defer<span class=\"o\">.</span>Deferred<span class=\"p\">()</span></td></tr><tr><th id=\"L431\"><a href=\"#L431\">431</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>consumer<span class=\"o\">.</span>registerProducer<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">False</span><span class=\"p\">)</span></td></tr><tr><th id=\"L432\"><a href=\"#L432\">432</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0deferred</td></tr><tr><th id=\"L433\"><a href=\"#L433\">433</a></th><td></td></tr><tr><th id=\"L434\"><a href=\"#L434\">434</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">resumeProducing</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L435\"><a href=\"#L435\">435</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 chunk <span class=\"o\">=</span>\u00a0<span class=\"s\">''</span></td></tr><tr><th id=\"L436\"><a href=\"#L436\">436</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>file<span class=\"p\">:</span></td></tr><tr><th id=\"L437\"><a href=\"#L437\">437</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 chunk <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>file<span class=\"o\">.</span>read<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>CHUNK_SIZE<span class=\"p\">)</span></td></tr><tr><th id=\"L438\"><a href=\"#L438\">438</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0chunk<span class=\"p\">:</span></td></tr><tr><th id=\"L439\"><a href=\"#L439\">439</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>file <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L440\"><a href=\"#L440\">440</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>consumer<span class=\"o\">.</span>unregisterProducer<span class=\"p\">()</span></td></tr><tr><th id=\"L441\"><a href=\"#L441\">441</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>deferred<span class=\"p\">:</span></td></tr><tr><th id=\"L442\"><a href=\"#L442\">442</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>deferred<span class=\"o\">.</span>callback<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>lastSent<span class=\"p\">)</span></td></tr><tr><th id=\"L443\"><a href=\"#L443\">443</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>deferred <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L444\"><a href=\"#L444\">444</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span></td></tr><tr><th id=\"L445\"><a href=\"#L445\">445</a></th><td></td></tr><tr><th id=\"L446\"><a href=\"#L446\">446</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>transform<span class=\"p\">:</span></td></tr><tr><th id=\"L447\"><a href=\"#L447\">447</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 chunk <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>transform<span class=\"p\">(</span>chunk<span class=\"p\">)</span></td></tr><tr><th id=\"L448\"><a href=\"#L448\">448</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>consumer<span class=\"o\">.</span>write<span class=\"p\">(</span>chunk<span class=\"p\">)</span></td></tr><tr><th id=\"L449\"><a href=\"#L449\">449</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>lastSent <span class=\"o\">=</span>\u00a0chunk<span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span></td></tr><tr><th id=\"L450\"><a href=\"#L450\">450</a></th><td></td></tr><tr><th id=\"L451\"><a href=\"#L451\">451</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">pauseProducing</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L452\"><a href=\"#L452\">452</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L453\"><a href=\"#L453\">453</a></th><td></td></tr><tr><th id=\"L454\"><a href=\"#L454\">454</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">stopProducing</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L455\"><a href=\"#L455\">455</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>deferred<span class=\"p\">:</span></td></tr><tr><th id=\"L456\"><a href=\"#L456\">456</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>deferred<span class=\"o\">.</span>errback<span class=\"p\">(</span><span class=\"ne\">Exception</span><span class=\"p\">(</span><span class=\"s\">\"Consumer asked us to stop producing\"</span><span class=\"p\">))</span></td></tr><tr><th id=\"L457\"><a href=\"#L457\">457</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>deferred <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr></tbody></table>\n\n      </div>\n      <div id=\"anydiff\">\n        <form action=\"/LUCICodeRepository/nomaticIM/diff\" method=\"get\">\n          <div class=\"buttons\">\n            <input type=\"hidden\" name=\"new_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/basic.py\" />\n            <input type=\"hidden\" name=\"old_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/basic.py\" />\n            <input type=\"hidden\" name=\"new_rev\" />\n            <input type=\"hidden\" name=\"old_rev\" />\n            <input type=\"submit\" value=\"View changes...\" title=\"Select paths and revs for Diff\" />\n          </div>\n        </form>\n      </div>\n      <div id=\"help\"><strong>Note:</strong> See <a href=\"/LUCICodeRepository/nomaticIM/wiki/TracBrowser\">TracBrowser</a>\n        for help on using the repository browser.</div>\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"first\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/basic.py?format=txt\">Plain Text</a>\n        </li><li class=\"last\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/basic.py\">Original Format</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/LUCICodeRepository/nomaticIM/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/LUCICodeRepository/nomaticIM/about\"><strong>Trac 1.0.1</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">All content copyright 2007-2008 by LUCI <br /><a href=\"http://luci.ics.uci.edu/\">http://luci.ics.uci.edu/</a></p>\n    </div>\n\t\t<div id=\"sitefooter\">\n\t\t\t<script src=\"http://www.google-analytics.com/urchin.js\" type=\"text/javascript\">\n\t\t\t</script>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t\t_uacct = \"UA-338915-2\";\n\t\t\t\turchinTracker();\n\t\t\t</script>\n\t\t</div>\n\t</body>\n</html>", "id": 44366.0}