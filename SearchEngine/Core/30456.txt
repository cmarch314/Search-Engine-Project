{"text": "Next Exploiting ECLiPSe Features Up Porting Applications to Previous Name clashes with Porting Programs to plain ECLiPSe If you want to use ECLiPSe to do further development of your application it is probably advantageous to modify it such that it runs under plain ECLiPSe In the following we summarise the main aspects that have to be considered when doing so In general it is almost always possible to add to your program a small routine that fixes the problem rather than to modify the source of the application in many places E g name clashes are easier fixed by using the local 1 declaration rather than to rename the clashing predicate in the whole application program Due to lack of standardisation some subtle differences in the syntax exist between Prolog systems See for details ECLiPSe has a number of options that make it possible to configure its behaviour as desired ECLiPSe has the string data type which is not present in Prolog of the Edinburgh family Double quoted items are parsed as strings in ECLiPSe while they are lists of integers in other systems and when the compatibility packages are used cf chapter I O predicates of the see and tell group are not builtins in ECLiPSe but they are provided in the cio library Call lib cio in order to have them available cf appendix A Similarly for numbervars 3 In ECLiPSe some builtins raise events in cases where they just fail in other systems e g arg 1 2 X fails in C Prolog but raises a type error in ECLiPSe If some code relies on such behaviour it is best to modify it by adding an explicit check like compound T arg N T X Another alternative is to redefine the arg 3 builtin using call explicit 2 to access the original version local arg 3 arg N T X compound X call explicit arg N T X sepia kernel A third alternative which is used in the compatibility packages is to define an error handler which will fail the predicate whenever the event is raised In this case my type error arg fail my type error E Goal error default E Goal set error handler 5 my type error 2 As the ECLiPSe compiler does not accept procedures whose clauses are not consecutive in a file you have to load the library scattered pl if you want to compile such procedures Next Exploiting ECLiPSe Features Up Porting Applications to Previous Name clashes with Micha Meier Mon Mar 4 12 11 45 MET 1996", "_id": "http://www.ics.uci.edu/~dechter/courses/ics-275a/fall-99/slides/node61.html", "title": "", "html": "<!DOCTYPE HTML PUBLIC \"-//W3O//DTD W3 HTML 2.0//EN\">\r\n<!Converted with LaTeX2HTML 95.1 (Fri Jan 20 1995) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds >\r\n<HEAD>\r\n<TITLE> Porting Programs to plain  ECLiPSe\r\n </TITLE>\r\n</HEAD>\r\n<BODY>\r\n<meta name=\"description\" value=\" Porting Programs to plain  ECLiPSe\r\n \">\r\n<meta name=\"keywords\" value=\"umsroot\">\r\n<meta name=\"resource-type\" value=\"document\">\r\n<meta name=\"distribution\" value=\"global\">\r\n<P>\r\n <BR> <HR><A NAME=tex2html2983 HREF=\"node62.html\"><IMG ALIGN=BOTTOM ALT=\"next\" SRC=\"http://www.ecrc.de/eclipse/new_icons//next_motif.gif\"></A>   <A NAME=tex2html2981 HREF=\"node57.html\"><IMG ALIGN=BOTTOM ALT=\"up\" SRC=\"http://www.ecrc.de/eclipse/new_icons//up_motif.gif\"></A>   <A NAME=tex2html2975 HREF=\"node60.html\"><IMG ALIGN=BOTTOM ALT=\"previous\" SRC=\"http://www.ecrc.de/eclipse/new_icons//previous_motif.gif\"></A>      <A NAME=tex2html2985 HREF=\"node321.html\"><IMG ALIGN=BOTTOM ALT=\"index\" SRC=\"http://www.ecrc.de/eclipse/new_icons//index_motif.gif\"></A>   <BR>\r\n<B> Next:</B> <A NAME=tex2html2984 HREF=\"node62.html\"> Exploiting  ECLiPSe\r\n  Features</A>\r\n<B>Up:</B> <A NAME=tex2html2982 HREF=\"node57.html\"> Porting Applications to  </A>\r\n<B> Previous:</B> <A NAME=tex2html2976 HREF=\"node60.html\"> Name clashes with </A>\r\n<BR> <HR> <P>\r\n<H1><A NAME=SECTION00520000000000000000> Porting Programs to plain  ECLiPSe\r\n </A></H1>\r\n<P>\r\nIf you want to use <A NAME=tex2html231 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n  to do further development of your application,\r\nit is probably advantageous to modify it such that it runs under plain\r\n<A NAME=tex2html232 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n .\r\nIn the following we summarise the main aspects that have to be considered\r\nwhen doing so.\r\n<P>\r\n<UL><LI>\r\nIn general, it is almost always possible to add to your program\r\na small routine that fixes the problem, rather than to modify\r\nthe source of the application in many places.\r\nE.g. name clashes are easier fixed\r\nby using the <b> local/1</b> declaration rather than to rename\r\nthe clashing predicate in the whole application program.\r\n<P>\r\n<LI>\r\nDue to lack of standardisation, some subtle differences in the\r\nsyntax exist between Prolog systems. See <A HREF=\"#syntaxdiff\"><IMG ALIGN=BOTTOM ALT=\"gif\" SRC=\"http://www.ecrc.de/eclipse/new_icons//cross_ref_motif.gif\"></A>\r\nfor details. <A NAME=tex2html233 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n  has a number of options that make it possible\r\nto configure its behaviour as desired.\r\n<P>\r\n<LI>\r\n<A NAME=tex2html234 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n  has the <tt> string</tt> data type which is not present in Prolog\r\nof the Edinburgh family.\r\nDouble-quoted items are parsed as strings in <A NAME=tex2html235 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n , while they are\r\nlists of integers in other systems and when the compatibility\r\npackages are used (cf. chapter <A HREF=\"node165.html#chapstring\"><IMG ALIGN=BOTTOM ALT=\"gif\" SRC=\"http://www.ecrc.de/eclipse/new_icons//cross_ref_motif.gif\"></A>).\r\n<P>\r\n<LI>\r\nI/O predicates of the <b> see</b> and <b> tell</b> group are not builtins\r\nin <A NAME=tex2html236 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n , but they are provided in the <b> cio</b> library.\r\nCall <tt> lib(cio)</tt> in order to have them available (cf. appendix A).\r\nSimilarly for <b> numbervars/3</b>.\r\n<P>\r\n<LI>\r\nIn <A NAME=tex2html237 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n , some builtins raise events in cases where they just fail\r\nin other systems, e.g. <tt> arg(1,2,X)</tt> fails in C-Prolog, but\r\nraises a type error in <A NAME=tex2html238 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n .\r\nIf some code relies on such behaviour, it is best to modify it by\r\nadding an explicit check like\r\n<PRE>        ..., compound(T), arg(N, T, X), ...\r\n</PRE>\r\n<P>\r\nAnother alternative is to redefine the arg/3 builtin, using\r\ncall_explicit/2 to access the original version:\r\n<PRE>:- local arg/3.\r\narg(N, T, X) :-\r\n        compound(X),\r\n        call_explicit(arg(N, T, X), sepia_kernel).\r\n</PRE>\r\n<P>\r\nA third alternative, which is used in the compatibility packages,\r\nis to define an error handler which will fail the predicate\r\nwhenever the event is raised. In this case:\r\n<PRE>my_type_error(_, arg(_, _, _)) :- !, fail.\r\nmy_type_error(E, Goal) :- error(default(E), Goal).\r\n:- set_error_handler(5, my_type_error/2).\r\n</PRE>\r\n<P>\r\n<LI> As the <A NAME=tex2html239 HREF=\"http://www.ecrc.de/eclipse/eclipse.html\"><b> ECLiPSe</b></A>\r\n  compiler does not accept procedures whose clauses\r\nare not consecutive in a file, you have to load the library <b> scattered.pl</b>\r\nif you want to compile such procedures.\r\n<P>\r\n</UL><BR> <HR><A NAME=tex2html2983 HREF=\"node62.html\"><IMG ALIGN=BOTTOM ALT=\"next\" SRC=\"http://www.ecrc.de/eclipse/new_icons//next_motif.gif\"></A>   <A NAME=tex2html2981 HREF=\"node57.html\"><IMG ALIGN=BOTTOM ALT=\"up\" SRC=\"http://www.ecrc.de/eclipse/new_icons//up_motif.gif\"></A>   <A NAME=tex2html2975 HREF=\"node60.html\"><IMG ALIGN=BOTTOM ALT=\"previous\" SRC=\"http://www.ecrc.de/eclipse/new_icons//previous_motif.gif\"></A>      <A NAME=tex2html2985 HREF=\"node321.html\"><IMG ALIGN=BOTTOM ALT=\"index\" SRC=\"http://www.ecrc.de/eclipse/new_icons//index_motif.gif\"></A>   <BR>\r\n<B> Next:</B> <A NAME=tex2html2984 HREF=\"node62.html\"> Exploiting  ECLiPSe\r\n  Features</A>\r\n<B>Up:</B> <A NAME=tex2html2982 HREF=\"node57.html\"> Porting Applications to  </A>\r\n<B> Previous:</B> <A NAME=tex2html2976 HREF=\"node60.html\"> Name clashes with </A>\r\n<BR> <HR> <P>\r\n<BR> <HR>\r\n<P><ADDRESS>\r\n<I>Micha Meier <BR>\r\nMon Mar  4 12:11:45 MET 1996</I>\r\n</ADDRESS>\r\n</BODY>\r\n", "id": 30456.0}