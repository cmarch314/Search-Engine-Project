{"text": " Home Trees Indices Help Package CHEM Package ML Module Util Class FeatureDictReader hide private frames no frames Class FeatureDictReader object dict FeatureDictReader Decodes data feature vectors represented as index value lines in a text file into string value feature dictionary objects These were probably encoded in the first place with the matching FeatureDictWriter class The basic strategy is to just back translate the index numbers into the actual string representation features This class which extends the dict class stores the index feature mappings for subsequent access note that this is the inverse of the FeatureDictWriter s feature index mappings Note that the default implementation assumes the features are represented as simple text strings If you want a more sophisticated object representation you ll have to extend this class and override the parseFeature method to translate the string into the feature object Example Usage Note this may have problems as a doctest since the feature index mapping order is arbitrary based on the random traversal of feature keys through the feature dictionaries from cStringIO import StringIO infile StringIO doctest can t handle multi line strings well print infile Test blank line robustness print infile a So write it out as a StringIO first print infile 1 s print infile 2 d print infile 3 g print infile 4 f print infile 5 A print infile 6 F print infile 7 S print infile 8 D print infile 9 h print infile 1 G print infile 11 H print infile asdfsdfg UNKNOWN ID 1 1 2 2 2 3 1 4 2 print infile asdfasdfASDF UNKNOWN ID 2 1 2 2 2 4 2 5 1 6 1 7 1 8 1 print infile dfghDFGH UNKNOWN ID 2 1 3 1 4 1 6 1 8 1 9 1 1 1 11 1 infile StringIO infile getvalue featureReader FeatureDictReader infile Read out and print the contents of each feature dictionary for featureDict in featureReader print str featureDict a 1 s 2 d 2 g 1 f 2 a 2 A 1 d 2 F 1 f 2 S 1 s 2 D 1 D 1 g 1 F 1 h 1 f 1 G 1 H 1 d 1 for description in featureReader objDescriptions print description asdfsdfg asdfasdfASDF dfghDFGH Instance Methods hide private init self infile Constructor expects an input file object not filename to read from iter self Produce an iterator over the feature dictionary objects parsed out of the input file Inherited from dict cmp contains delitem eq ge getattribute getitem gt hash le len lt ne new repr setitem clear copy fromkeys get has key items iteritems iterkeys itervalues keys pop popitem setdefault update values Inherited from object delattr reduce reduce ex setattr str Static Methods hide private parseFeature featureStr Given a string representation of the feature extracted from the feature file return the actual feature object to key the dictionaries by Class Variables hide private infile CHEM DB rdb search NameRxnPatternMatchingModel Searc objDescriptions CHEM DB rdb search NameRxnPatternMatchingMo objNameIDs CHEM DB rdb search NameRxnPatternMatchingModel S Properties hide private Inherited from object class Method Details hide private init self infile Constructor Constructor expects an input file object not filename to read from Returns new empty dictionary Overrides dict init parseFeature featureStr Static Method Given a string representation of the feature extracted from the feature file return the actual feature object to key the dictionaries by For string based kernels and by default this can just be the string itself iter self Produce an iterator over the feature dictionary objects parsed out of the input file This method implements the iter interface which means you can do something as simple as from cStringIO import StringIO reader FeatureDictReader StringIO for featureDict objDescr in reader print objDescr featureDict However this overrides the normal meaning of the dictionary iter method Normally the iter method should get the feature keys stored in the reader dictionary rather than data pairs To access the keys in this way they must instead be accessed explicitly with the iterkeys method This method can only be called once as it iterates through the source file after which time there s no guarantee we can trace back to the start of the file If you do wish to be able to produce multiple iterators over the same data use the FeatureDictReaderFactory which will create a temp file as needed to generate as many FeatureDictReader iterators as requested Overrides dict iter Class Variable Details hide private infile Value None objDescriptions Value None objNameIDs Value None Home Trees Indices Help Generated by Epydoc 3 beta1 on Thu Nov 8 17 49 32 2 7 http epydoc sourceforge net", "_id": "http://www.ics.uci.edu/~dock/CHEM_docs/CHEM.ML.Util.FeatureDictReader-class.html", "title": "chem.ml.util.featuredictreader", "html": "<?xml version=\"1.0\" encoding=\"ascii\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n          \"DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n  <title>CHEM.ML.Util.FeatureDictReader</title>\n  <link rel=\"stylesheet\" href=\"epydoc.css\" type=\"text/css\" />\n  <script type=\"text/javascript\" src=\"epydoc.js\"></script>\n</head>\n\n<body bgcolor=\"white\" text=\"black\" link=\"blue\" vlink=\"#204080\"\n      alink=\"#204080\">\n<!-- ==================== NAVIGATION BAR ==================== -->\n<table class=\"navbar\" border=\"0\" width=\"100%\" cellpadding=\"0\"\n       bgcolor=\"#a0c0ff\" cellspacing=\"0\">\n  <tr valign=\"middle\">\n  <!-- Home link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"CHEM-module.html\">Home</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Tree link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"module-tree.html\">Trees</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Index link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"identifier-index.html\">Indices</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Help link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"help.html\">Help</a>&nbsp;&nbsp;&nbsp;</th>\n\n      <th class=\"navbar\" width=\"100%\"></th>\n  </tr>\n</table>\n<table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n  <tr valign=\"top\">\n    <td width=\"100%\">\n      <span class=\"breadcrumbs\">\n        <a href=\"CHEM-module.html\">Package&nbsp;CHEM</a> ::\n        <a href=\"CHEM.ML-module.html\">Package&nbsp;ML</a> ::\n        <a href=\"CHEM.ML.Util-module.html\">Module&nbsp;Util</a> ::\n        Class&nbsp;FeatureDictReader\n      </span>\n    </td>\n    <td>\n      <table cellpadding=\"0\" cellspacing=\"0\">\n        <!-- hide/show private -->\n        <tr><td align=\"right\"><span class=\"options\">[<a href=\"javascript:void(0);\" class=\"privatelink\"\n    onclick=\"toggle_private();\">hide&nbsp;private</a>]</span></td></tr>\n        <tr><td align=\"right\"><span class=\"options\"\n            >[<a href=\"frames.html\" target=\"_top\">frames</a\n            >]&nbsp;|&nbsp;<a href=\"CHEM.ML.Util.FeatureDictReader-class.html\"\n            target=\"_top\">no&nbsp;frames</a>]</span></td></tr>\n      </table>\n    </td>\n  </tr>\n</table>\n<!-- ==================== CLASS DESCRIPTION ==================== -->\n<h1 class=\"epydoc\">Class FeatureDictReader</h1><br /><br />\n<pre class=\"base-tree\">\nobject --+    \n         |    \n      dict --+\n             |\n            <strong class=\"uidshort\">FeatureDictReader</strong>\n</pre>\n\n<hr />\n<p>Decodes data feature vectors (represented as index:value lines in a \n  text file) into string:value feature dictionary objects.</p>\n  <p>These were probably encoded in the first place with the matching \n  &quot;FeatureDictWriter&quot; class.  The basic strategy is to just \n  back-translate the index numbers into the actual string representation \n  features. This class (which extends the dict class) stores the \n  index:feature mappings for subsequent access  (note that this is the \n  inverse of the FeatureDictWriter's feature:index mappings).</p>\n  <p>Note that the default implementation assumes the features are \n  represented as simple text strings.  If you want a more sophisticated \n  object representation, you'll have to extend this class and override the \n  parseFeature method to translate the string into the feature object.</p>\n  Example Usage: (Note this may have problems as a doctest since the \n  feature:index mapping order is arbitrary based on the &quot;random&quot; \n  traversal of feature keys through the feature dictionaries.\n<pre class=\"py-doctest\">\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">from</span> cStringIO <span class=\"py-keyword\">import</span> StringIO\n<span class=\"py-prompt\">&gt;&gt;&gt; </span>infile = StringIO();        <span class=\"py-comment\"># doctest can't handle multi-line strings well</span>\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">print</span> &gt;&gt; infile, <span class=\"py-string\">&quot;&quot;</span>         <span class=\"py-comment\"># Test blank line robustness</span>\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">print</span> &gt;&gt; infile, <span class=\"py-string\">&quot;# 0 a&quot;</span>    <span class=\"py-comment\"># So write it out as a StringIO first</span>\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">print</span> &gt;&gt; infile, <span class=\"py-string\">&quot;# 1 s&quot;</span>\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">print</span> &gt;&gt; infile, <span class=\"py-string\">&quot;# 2 d&quot;</span>\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">print</span> &gt;&gt; infile, <span class=\"py-string\">&quot;# 3 g&quot;</span>\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">print</span> &gt;&gt; infile, <span class=\"py-string\">&quot;# 4 f&quot;</span>\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">print</span> &gt;&gt; infile, <span class=\"py-string\">&quot;# 5 A&quot;</span>\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">print</span> &gt;&gt; infile, <span class=\"py-string\">&quot;# 6 F&quot;</span>\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">print</span> &gt;&gt; infile, <span class=\"py-string\">&quot;# 7 S&quot;</span>\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">print</span> &gt;&gt; infile, <span class=\"py-string\">&quot;# 8 D&quot;</span>\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">print</span> &gt;&gt; infile, <span class=\"py-string\">&quot;# 9 h&quot;</span>\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">print</span> &gt;&gt; infile, <span class=\"py-string\">&quot;# 10 G&quot;</span>\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">print</span> &gt;&gt; infile, <span class=\"py-string\">&quot;# 11 H&quot;</span>\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">print</span> &gt;&gt; infile, <span class=\"py-string\">&quot;asdfsdfg UNKNOWN_ID 0:1 1:2 2:2 3:1 4:2 &quot;</span>\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">print</span> &gt;&gt; infile, <span class=\"py-string\">&quot;asdfasdfASDF UNKNOWN_ID 0:2 1:2 2:2 4:2 5:1 6:1 7:1 8:1 &quot;</span>\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">print</span> &gt;&gt; infile, <span class=\"py-string\">&quot;dfghDFGH UNKNOWN_ID 2:1 3:1 4:1 6:1 8:1 9:1 10:1 11:1 &quot;</span>\n<span class=\"py-prompt\">&gt;&gt;&gt; </span>infile = StringIO(infile.getvalue());\n<span class=\"py-prompt\">&gt;&gt;&gt;</span>\n<span class=\"py-prompt\">&gt;&gt;&gt; </span>featureReader = FeatureDictReader(infile);\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-comment\"># Read out and print the contents of each feature dictionary</span>\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">for</span> featureDict <span class=\"py-keyword\">in</span> featureReader:\n<span class=\"py-more\">... </span>    <span class=\"py-keyword\">print</span> str(featureDict)\n<span class=\"py-output\">{'a': 1.0, 's': 2.0, 'd': 2.0, 'g': 1.0, 'f': 2.0}</span>\n<span class=\"py-output\">{'a': 2.0, 'A': 1.0, 'd': 2.0, 'F': 1.0, 'f': 2.0, 'S': 1.0, 's': 2.0, 'D': 1.0}</span>\n<span class=\"py-output\">{'D': 1.0, 'g': 1.0, 'F': 1.0, 'h': 1.0, 'f': 1.0, 'G': 1.0, 'H': 1.0, 'd': 1.0}</span>\n<span class=\"py-output\"></span><span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">for</span> description <span class=\"py-keyword\">in</span> featureReader.objDescriptions:\n<span class=\"py-more\">... </span>    <span class=\"py-keyword\">print</span> description\n<span class=\"py-output\">asdfsdfg</span>\n<span class=\"py-output\">asdfasdfASDF</span>\n<span class=\"py-output\">dfghDFGH</span></pre><br /><br />\n\n<!-- ==================== INSTANCE METHODS ==================== -->\n<a name=\"section-InstanceMethods\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Instance Methods</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-InstanceMethods\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.ML.Util.FeatureDictReader-class.html#__init__\" class=\"summary-sig-name\">__init__</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">infile</span>)</span><br />\n      Constructor expects an input file (object, not filename) to read \n      from.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.ML.Util.FeatureDictReader-class.html#__iter__\" class=\"summary-sig-name\">__iter__</a>(<span class=\"summary-sig-arg\">self</span>)</span><br />\n      Produce an iterator over the feature dictionary objects parsed out\n      of the input file.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n  <tr>\n    <td colspan=\"2\" class=\"summary\">\n    <p class=\"indent-wrapped-lines\"><b>Inherited from <code>dict</code></b>:\n      <code>__cmp__</code>,\n      <code>__contains__</code>,\n      <code>__delitem__</code>,\n      <code>__eq__</code>,\n      <code>__ge__</code>,\n      <code>__getattribute__</code>,\n      <code>__getitem__</code>,\n      <code>__gt__</code>,\n      <code>__hash__</code>,\n      <code>__le__</code>,\n      <code>__len__</code>,\n      <code>__lt__</code>,\n      <code>__ne__</code>,\n      <code>__new__</code>,\n      <code>__repr__</code>,\n      <code>__setitem__</code>,\n      <code>clear</code>,\n      <code>copy</code>,\n      <code>fromkeys</code>,\n      <code>get</code>,\n      <code>has_key</code>,\n      <code>items</code>,\n      <code>iteritems</code>,\n      <code>iterkeys</code>,\n      <code>itervalues</code>,\n      <code>keys</code>,\n      <code>pop</code>,\n      <code>popitem</code>,\n      <code>setdefault</code>,\n      <code>update</code>,\n      <code>values</code>\n      </p>\n    <p class=\"indent-wrapped-lines\"><b>Inherited from <code>object</code></b>:\n      <code>__delattr__</code>,\n      <code>__reduce__</code>,\n      <code>__reduce_ex__</code>,\n      <code>__setattr__</code>,\n      <code>__str__</code>\n      </p>\n    </td>\n  </tr>\n</table>\n<!-- ==================== STATIC METHODS ==================== -->\n<a name=\"section-StaticMethods\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Static Methods</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-StaticMethods\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.ML.Util.FeatureDictReader-class.html#parseFeature\" class=\"summary-sig-name\">parseFeature</a>(<span class=\"summary-sig-arg\">featureStr</span>)</span><br />\n      Given a string representation of the feature, extracted from the \n      feature file, return the actual feature object to key the \n      dictionaries by.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n</table>\n<!-- ==================== CLASS VARIABLES ==================== -->\n<a name=\"section-ClassVariables\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Class Variables</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-ClassVariables\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a href=\"CHEM.ML.Util.FeatureDictReader-class.html#infile\" class=\"summary-name\">infile</a> = <code title=\"None\">&lt;CHEM.DB.rdb.search.NameRxnPatternMatchingModel.Searc<code class=\"variable-ellipsis\">...</code></code>\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a href=\"CHEM.ML.Util.FeatureDictReader-class.html#objDescriptions\" class=\"summary-name\">objDescriptions</a> = <code title=\"None\">&lt;CHEM.DB.rdb.search.NameRxnPatternMatchingMo<code class=\"variable-ellipsis\">...</code></code>\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a href=\"CHEM.ML.Util.FeatureDictReader-class.html#objNameIDs\" class=\"summary-name\">objNameIDs</a> = <code title=\"None\">&lt;CHEM.DB.rdb.search.NameRxnPatternMatchingModel.S<code class=\"variable-ellipsis\">...</code></code>\n    </td>\n  </tr>\n</table>\n<!-- ==================== PROPERTIES ==================== -->\n<a name=\"section-Properties\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Properties</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-Properties\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n  <tr>\n    <td colspan=\"2\" class=\"summary\">\n    <p class=\"indent-wrapped-lines\"><b>Inherited from <code>object</code></b>:\n      <code>__class__</code>\n      </p>\n    </td>\n  </tr>\n</table>\n<!-- ==================== METHOD DETAILS ==================== -->\n<a name=\"section-MethodDetails\"></a>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Method Details</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-MethodDetails\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n</table>\n<a name=\"__init__\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">__init__</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">infile</span>)</span>\n    <br /><em class=\"fname\">(Constructor)</em>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Constructor expects an input file (object, not filename) to read \n  from.\n  <dl class=\"fields\">\n    <dt>Returns:</dt>\n        <dd><pre class=\"literalblock\">\nnew empty dictionary\n\n</pre></dd>\n    <dt>Overrides:\n      dict.__init__\n    </dt>\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"parseFeature\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">parseFeature</span>(<span class=\"sig-arg\">featureStr</span>)</span>\n    <br /><em class=\"fname\">Static Method</em>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Given a string representation of the feature, extracted from the \n  feature file, return the actual feature object to key the dictionaries \n  by. For string based kernels (and by default), this can just be the \n  string itself.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"__iter__\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">__iter__</span>(<span class=\"sig-arg\">self</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <p>Produce an iterator over the feature dictionary objects parsed out of \n  the input file.</p>\n  This method implements the __iter__ interface which means you can do \n  something as simple as:\n<pre class=\"py-doctest\">\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">from</span> cStringIO <span class=\"py-keyword\">import</span> StringIO\n<span class=\"py-prompt\">&gt;&gt;&gt; </span>reader = FeatureDictReader(StringIO(<span class=\"py-string\">&quot;&quot;</span>))\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">for</span> (featureDict, objDescr) <span class=\"py-keyword\">in</span> reader:\n<span class=\"py-more\">... </span>    <span class=\"py-keyword\">print</span> objDescr, featureDict</pre>\n  <p>However, this overrides the normal meaning of the dictionary __iter__ \n  method. Normally the __iter__ method should get the feature *keys* stored\n  in the reader dictionary rather than data pairs.  To access the keys in \n  this way, they must instead be accessed explicitly with the iterkeys() \n  method.</p>\n  This method can only be called once as it iterates through the source \n  file, after which time there's no guarantee we can trace back to the \n  start of the file.  If you do wish to be able to produce multiple \n  iterators over the same data, use the FeatureDictReaderFactory which will\n  create a temp file as needed to generate as many FeatureDictReader \n  iterators as requested.\n  <dl class=\"fields\">\n    <dt>Overrides:\n      dict.__iter__\n    </dt>\n  </dl>\n</td></tr></table>\n</div>\n<br />\n<!-- ==================== CLASS VARIABLE DETAILS ==================== -->\n<a name=\"section-ClassVariableDetails\"></a>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Class Variable Details</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-ClassVariableDetails\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n</table>\n<a name=\"infile\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <h3 class=\"epydoc\">infile</h3>\n  \n  <dl class=\"fields\">\n  </dl>\n  <dl class=\"fields\">\n    <dt>Value:</dt>\n      <dd><table><tr><td><pre class=\"variable\">\nNone\n</pre></td></tr></table>\n</dd>\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"objDescriptions\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <h3 class=\"epydoc\">objDescriptions</h3>\n  \n  <dl class=\"fields\">\n  </dl>\n  <dl class=\"fields\">\n    <dt>Value:</dt>\n      <dd><table><tr><td><pre class=\"variable\">\nNone\n</pre></td></tr></table>\n</dd>\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"objNameIDs\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <h3 class=\"epydoc\">objNameIDs</h3>\n  \n  <dl class=\"fields\">\n  </dl>\n  <dl class=\"fields\">\n    <dt>Value:</dt>\n      <dd><table><tr><td><pre class=\"variable\">\nNone\n</pre></td></tr></table>\n</dd>\n  </dl>\n</td></tr></table>\n</div>\n<br />\n<!-- ==================== NAVIGATION BAR ==================== -->\n<table class=\"navbar\" border=\"0\" width=\"100%\" cellpadding=\"0\"\n       bgcolor=\"#a0c0ff\" cellspacing=\"0\">\n  <tr valign=\"middle\">\n  <!-- Home link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"CHEM-module.html\">Home</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Tree link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"module-tree.html\">Trees</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Index link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"identifier-index.html\">Indices</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Help link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"help.html\">Help</a>&nbsp;&nbsp;&nbsp;</th>\n\n      <th class=\"navbar\" width=\"100%\"></th>\n  </tr>\n</table>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%%\">\n  <tr>\n    <td align=\"left\" class=\"footer\">\n    Generated by Epydoc 3.0beta1 on Thu Nov  8 17:49:32 2007\n    </td>\n    <td align=\"right\" class=\"footer\">\n      <a href=\"http://epydoc.sourceforge.net\">http://epydoc.sourceforge.net</a>\n    </td>\n  </tr>\n</table>\n\n<script type=\"text/javascript\">\n  <!--\n  // Private objects are initially displayed (because if\n  // javascript is turned off then we want them to be\n  // visible); but by default, we want to hide them.  So hide\n  // them unless we have a cookie that says to show them.\n  checkCookie()\n  // -->\n</script>\n  \n</body>\n</html>\n", "id": 40544.0}