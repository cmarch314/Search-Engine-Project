{"text": "Search LoginPreferencesHelp GuideAbout Trac WikiTimelineRoadmapBrowse SourceView TicketsSearch Context Navigation BlameRevision Log source nomatic tags NomaticIM 5 buddy bots src twisted internet abstract py View diff against View revision Visit trunk Last change on this file was 712 checked in by cbaker 7 years ago First draft of nomatic buddy bots oscar bot is functional if you give it good authentication credentials jabber bot is just an example from the web File size 12 5 KB Line 1 Copyright c 2 1 2 4 Twisted Matrix Laboratories 2 See LICENSE for details 345 Support for generic select able objects 67API Stability stable89Maintainer U Itamar Shtull Trauring mailto twisted itamarst org 1 1112 System Imports13import types string14from zope interface import implements1516 Twisted Imports17from twisted python import log reflect failure18from twisted persisted import styles192 Sibling Imports21import interfaces main2223class FileDescriptor log Logger styles Ephemeral object 24 An object which can be operated on by select 2526 This is an abstract superclass of all objects which may be notified when27 they are readable or writable e g they have a file descriptor that is28 valid to be passed to select 2 29 3 connected 31 producerPaused 32 streamingProducer 33 producer None34 disconnected 35 disconnecting 36 writeDisconnecting False37 writeDisconnected False38 dataBuffer 39 offset 4 41 SEND LIMIT 128 1 244243 implements interfaces IProducer interfaces IReadWriteDescriptor 44 interfaces IConsumer interfaces ITransport interfaces IHalfCloseableDescriptor 4546 def init self reactor None 47 if not reactor 48 from twisted internet import reactor49 self reactor reactor5 self tempDataBuffer will be added to dataBuffer in doWrite51 self tempDataLen 5253 def connectionLost self reason 54 The connection was lost 5556 This is called when the connection on a selectable object has been57 lost It will be called whether the connection was closed explicitly 58 an exception occurred in an event handler or the other end of the59 connection closed it first 6 61 Clean up state here but make sure to call back up to FileDescriptor 62 6364 self disconnected 165 self connected 66 if self producer is not None 67 self producer stopProducing 68 self producer None69 self stopReading 7 self stopWriting 7172 def writeSomeData self data 73 Write as much as possible of the given data immediately 7475 This is called to invoke the lower level writing functionality such as76 a socket s send method or a file s write this method returns an77 integer If positive it is the number of bytes written if negative 78 it indicates the connection was lost 79 8 81 raise NotImplementedError s does not implement writeSomeData 82 reflect qual self class 8384 def doRead self 85 Called when data is avaliable for reading 8687 Subclasses must override this method The result will be interpreted88 in the same way as a result of doWrite 89 9 raise NotImplementedError s does not implement doRead 91 reflect qual self class 9293 def doWrite self 94 Called when data can be written 9596 A result that is true which will be a negative number implies the97 connection was lost A false result implies the connection is still98 there a result of implies no write was done and a result of None99 indicates that a write was done 1 1 1 if len self dataBuffer self offset self SEND LIMIT 1 2 If there is currently less than SEND LIMIT bytes left to send1 3 in the string extend it with the array data 1 4 self dataBuffer buffer self dataBuffer self offset join self tempDataBuffer 1 5 self offset 1 6 self tempDataBuffer 1 7 self tempDataLen 1 81 9 Send as much data as you can 11 if self offset 111 l self writeSomeData buffer self dataBuffer self offset 112 else 113 l self writeSomeData self dataBuffer 114 if l or isinstance l Exception 115 return l116 if l and self dataBuffer 117 result 118 else 119 result None12 self offset l121 If there is nothing left to send 122 if self offset len self dataBuffer and not self tempDataLen 123 self dataBuffer 124 self offset 125 stop writing 126 self stopWriting 127 If I ve got a producer who is supposed to supply me with data 128 if self producer is not None and not self streamingProducer 129 or self producerPaused 13 tell them to supply some more 131 self producerPaused 132 self producer resumeProducing 133 elif self disconnecting 134 But if I was previously asked to let the connection die do135 so 136 return self postLoseConnection 137 elif self writeDisconnecting 138 I was previously asked to to half close the connection 139 result self closeWriteConnection 14 self writeDisconnected True141 return result142 return result143144 def postLoseConnection self 145 Called after a loseConnection when all data has been written 146147 Whatever this returns is then returned by doWrite 148 149 default implementation telling reactor we re finished15 return main CONNECTION DONE151152 def closeWriteConnection self 153 override in subclasses154 pass155156 def writeConnectionLost self reason 157 in current code should never be called158 self connectionLost reason 15916 def readConnectionLost self reason 161 override in subclasses162 self connectionLost reason 163164 def write self data 165 Reliably write some data 166167 The data is buffered until the underlying file descriptor is ready168 for writing If there is more than C self bufferSize data in the169 buffer and this descriptor has a registered streaming producer its17 C pauseProducing method will be called 171 172 if isinstance data unicode no really I mean it173 raise TypeError Data must not be unicode 174 if not self connected or self writeDisconnected 175 return176 if data 177 self tempDataBuffer append data 178 self tempDataLen len data 179 If we are responsible for pausing our producer 18 if self producer is not None and self streamingProducer 181 and our buffer is full 182 if len self dataBuffer self tempDataLen self bufferSize 183 pause it 184 self producerPaused 1185 self producer pauseProducing 186 self startWriting 187188 def writeSequence self iovec 189 Reliably write a sequence of data 19 191 Currently this is a convenience method roughly equivalent to 192193 for chunk in iovec 194 fd write chunk 195196 It may have a more efficient implementation at a later time or in a197 different reactor 198199 As with the C write method if a buffer size limit is reached and a2 streaming producer is registered it will be paused until the buffered2 1 data is written to the underlying file descriptor 2 2 2 3 if not self connected or not iovec or self writeDisconnected 2 4 return2 5 self tempDataBuffer extend iovec 2 6 for i in iovec 2 7 self tempDataLen len i 2 8 If we are responsible for pausing our producer 2 9 if self producer is not None and self streamingProducer 21 and our buffer is full 211 if len self dataBuffer self tempDataLen self bufferSize 212 pause it 213 self producerPaused 1214 self producer pauseProducing 215 self startWriting 216217 def loseConnection self connDone failure Failure main CONNECTION DONE 218 Close the connection at the next available opportunity 21922 Call this to cause this FileDescriptor to lose its connection It will221 first write any data that it has buffered 222223 If there is data buffered yet to be written this method will cause the224 transport to lose its connection as soon as it s done flushing its225 write buffer If you have a producer registered the connection won t226 be closed until the producer is finished Therefore make sure you227 unregister your producer when it s finished or the connection will228 never close 229 23 231 if self connected and not self disconnecting 232 if self writeDisconnected 233 doWrite won t trigger the connection close anymore234 self stopReading 235 self stopWriting 236 self connectionLost connDone 237 else 238 self stopReading 239 self startWriting 24 self disconnecting 1241242 def loseWriteConnection self 243 self writeDisconnecting True244 self startWriting 245246 def stopReading self 247 Stop waiting for read availability 248249 Call this to remove this selectable from being notified when it is25 ready for reading 251 252 self reactor removeReader self 253254 def stopWriting self 255 Stop waiting for write availability 256257 Call this to remove this selectable from being notified when it is ready258 for writing 259 26 self reactor removeWriter self 261262 def startReading self 263 Start waiting for read availability 264 265 self reactor addReader self 266267 def startWriting self 268 Start waiting for write availability 26927 Call this to have this FileDescriptor be notified whenever it is ready for271 writing 272 273 self reactor addWriter self 274275 Producer consumer implementation276277 first the consumer stuff This requires no additional work as278 any object you can write to can be a consumer really 27928 producer None281 bufferSize 2 2 2 2282283 def registerProducer self producer streaming 284 Register to receive data from a producer 285286 This sets this selectable to be a consumer for a producer When this287 selectable runs out of data on a write call it will ask the producer288 to resumeProducing When the FileDescriptor s internal data buffer is289 filled it will ask the producer to pauseProducing If the connection29 is lost FileDescriptor calls producer s stopProducing method 291292 If streaming is true the producer should provide the IPushProducer293 interface Otherwise it is assumed that producer provides the294 IPullProducer interface In this case the producer won t be asked295 to pauseProducing but it has to be careful to write data only296 when its resumeProducing method is called 297 298 if self producer is not None 299 raise RuntimeError Cannot register producer s because producer s was never unregistered producer self producer 3 if self disconnected 3 1 producer stopProducing 3 2 else 3 3 self producer producer3 4 self streamingProducer streaming3 5 if not streaming 3 6 producer resumeProducing 3 73 8 def unregisterProducer self 3 9 Stop consuming data from a producer without disconnecting 31 311 self producer None312313 def stopConsuming self 314 Stop consuming data 315316 This is called when a producer has lost its connection to tell the317 consumer to go lose its connection and break potential circular318 references 319 32 self unregisterProducer 321 self loseConnection 322323 producer interface implementation324325 def resumeProducing self 326 assert self connected and not self disconnecting327 self startReading 328329 def pauseProducing self 33 self stopReading 331332 def stopProducing self 333 self loseConnection 334335336 def fileno self 337 File Descriptor number for select 338339 This method must be overridden or assigned in subclasses to34 indicate a valid file descriptor for the operating system 341 342 return 1343344345def isIPAddress addr 346 parts string split addr 347 if len parts 4 348 try 349 for part in map int parts 35 if not part 256 351 break352 else 353 return 1354 except ValueError 355 pass356 return 357358 all FileDescriptor Note See TracBrowser for help on using the repository browser Download in other formats Plain Text Original Format Powered by Trac 1 1 By Edgewall Software All content copyright 2 7 2 8 by LUCI http luci ics uci edu ", "_id": "http://djp3-pc2.ics.uci.edu/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/abstract.py", "title": "\n      abstract.py in nomatic/tags/nomaticim-0.0.5/buddy_bots/src/twisted/internet\n     \u2013 nomatic*im\n    ", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n  \n\n\n  <head>\n\t\t<title>\n      abstract.py in nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet\n     \u2013 Nomatic*IM\n    </title><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><link rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search\" /><link rel=\"help\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/abstract.py?format=txt\" type=\"text/plain\" title=\"Plain Text\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/abstract.py\" type=\"application/x-python; charset=iso-8859-15\" title=\"Original Format\" /><link rel=\"start\" href=\"/LUCICodeRepository/nomaticIM/wiki\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/code.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/pygments/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/browser.css\" type=\"text/css\" /><link rel=\"shortcut icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link rel=\"icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link type=\"application/opensearchdescription+xml\" rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search/opensearch\" title=\"Search Nomatic*IM\" /><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/jquery.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/babel.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/messages/en_US.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/trac.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/search.js\"></script><script type=\"text/javascript\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/folding.js\"></script><script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\".trac-toggledeleted\").show().click(function() {\n                  $(this).siblings().find(\".trac-deleted\").toggle();\n                  return false;\n        }).click();\n        $(\"#jumploc input\").hide();\n        $(\"#jumploc select\").change(function () {\n          this.parentNode.parentNode.submit();\n        });\n          $('#preview table.code').enableCollapsibleColumns($('#preview table.code thead th.content'));\n      });\n    </script>\n\t</head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://luci.ics.uci.edu/#code\"><img src=\"http://luci.ics.uci.edu/blog/archives/LUCIhorzTight.jpg\" alt=\"LUCI Code Repository\" /></a>\n      </div>\n      <form id=\"search\" action=\"/LUCICodeRepository/nomaticIM/search\" method=\"get\">\n        <div>\n          <label for=\"proj-search\">Search:</label>\n          <input type=\"text\" id=\"proj-search\" name=\"q\" size=\"18\" value=\"\" />\n          <input type=\"submit\" value=\"Search\" />\n        </div>\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/login\">Login</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/prefs\">Preferences</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\">Help/Guide</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/wiki\">Wiki</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/timeline\">Timeline</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/roadmap\">Roadmap</a></li><li class=\"active\"><a href=\"/LUCICodeRepository/nomaticIM/browser\">Browse Source</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/report\">View Tickets</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/search\">Search</a></li>\n    </ul>\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/buddy_bots/twisted/internet/abstract.py?annotate=blame\" title=\"Annotate each line with the last changed revision (this can be time consuming...)\">Blame</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/log/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/abstract.py\">Revision Log</a></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"browser\">\n        <h1>\n          \n<a class=\"pathentry first\" href=\"/LUCICodeRepository/nomaticIM/browser?order=name\" title=\"Go to repository root\">source:</a>\n<a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic?order=name\" title=\"View nomatic\">nomatic</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags?order=name\" title=\"View tags\">tags</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5?order=name\" title=\"View NomaticIM-0.0.5\">NomaticIM-0.0.5</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots?order=name\" title=\"View buddy_bots\">buddy_bots</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src?order=name\" title=\"View src\">src</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted?order=name\" title=\"View twisted\">twisted</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet?order=name\" title=\"View internet\">internet</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/abstract.py?order=name\" title=\"View abstract.py\">abstract.py</a>\n<br style=\"clear: both\" />\n\n        </h1>\n        <div id=\"diffrev\">\n          <form action=\"/LUCICodeRepository/nomaticIM/changeset\" method=\"get\">\n            <div>\n              <label title=\"Show the diff against a specific revision\">\n                View diff against: <input type=\"text\" name=\"old\" size=\"6\" />\n                <input type=\"hidden\" name=\"old_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/abstract.py\" />\n                <input type=\"hidden\" name=\"new\" />\n                <input type=\"hidden\" name=\"new_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/abstract.py\" />\n              </label>\n            </div>\n          </form>\n        </div>\n        <div id=\"jumprev\">\n          <form action=\"\" method=\"get\">\n            <div>\n              <label for=\"rev\">\n                View revision:</label>\n              <input type=\"text\" id=\"rev\" name=\"rev\" size=\"6\" />\n            </div>\n          </form>\n        </div>\n        <div id=\"jumploc\">\n          <form action=\"\" method=\"get\">\n            <div class=\"buttons\">\n              <label for=\"preselected\">Visit:</label>\n              <select id=\"preselected\" name=\"preselected\">\n                <option selected=\"selected\"></option>\n                <optgroup label=\"branches\">\n                  <option value=\"/LUCICodeRepository/nomaticIM/browser/trunk\">trunk</option>\n                </optgroup>\n              </select>\n              <input type=\"submit\" value=\"Go!\" title=\"Jump to the chosen preselected path\" />\n            </div>\n          </form>\n        </div>\n        <div class=\"trac-tags\">\n        </div>\n      <table id=\"info\" summary=\"Revision info\">\n        <tr>\n          <th>\n                <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/nomatic/trunk/buddy_bots/twisted/internet/abstract.py\" title=\"View differences\">Last change</a>\n                  on this file was\n                  <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/\" title=\"View changeset 712\">712</a>,\n                  checked in by cbaker, <a class=\"timeline\" href=\"/LUCICodeRepository/nomaticIM/timeline?from=2008-02-16T08%3A16%3A53-08%3A00&amp;precision=second\" title=\"See timeline at Feb 16, 2008, 8:16:53 AM\">7 years ago</a>\n          </th>\n        </tr>\n        <tr>\n          <td class=\"message searchable\">\n              <p>\nFirst draft of nomatic buddy bots. oscar_bot is functional if you give it good authentication credentials, jabber_bot is just an example from the web <br />\n</p>\n          </td>\n        </tr>\n        <tr><td colspan=\"2\">\n            <strong>File size:</strong>\n            <span title=\"12819 bytes\">12.5 KB</span>\n          </td></tr>\n      </table>\n      <div id=\"preview\" class=\"searchable\">\n        \n  <table class=\"code\"><thead><tr><th class=\"lineno\" title=\"Line numbers\">Line</th><th class=\"content\">\u00a0</th></tr></thead><tbody><tr><th id=\"L1\"><a href=\"#L1\">1</a></th><td><span class=\"c\"># Copyright (c) 2001-2004 Twisted Matrix Laboratories.</span></td></tr><tr><th id=\"L2\"><a href=\"#L2\">2</a></th><td><span class=\"c\"># See LICENSE for details.</span></td></tr><tr><th id=\"L3\"><a href=\"#L3\">3</a></th><td></td></tr><tr><th id=\"L4\"><a href=\"#L4\">4</a></th><td></td></tr><tr><th id=\"L5\"><a href=\"#L5\">5</a></th><td><span class=\"sd\">\"\"\"Support for generic select()able objects.</span></td></tr><tr><th id=\"L6\"><a href=\"#L6\">6</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L7\"><a href=\"#L7\">7</a></th><td><span class=\"sd\">API Stability: stable</span></td></tr><tr><th id=\"L8\"><a href=\"#L8\">8</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L9\"><a href=\"#L9\">9</a></th><td><span class=\"sd\">Maintainer: U{Itamar Shtull-Trauring&lt;mailto:twisted@itamarst.org&gt;}</span></td></tr><tr><th id=\"L10\"><a href=\"#L10\">10</a></th><td><span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L11\"><a href=\"#L11\">11</a></th><td></td></tr><tr><th id=\"L12\"><a href=\"#L12\">12</a></th><td><span class=\"c\"># System Imports</span></td></tr><tr><th id=\"L13\"><a href=\"#L13\">13</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">types</span><span class=\"o\">,</span>\u00a0<span class=\"nn\">string</span></td></tr><tr><th id=\"L14\"><a href=\"#L14\">14</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">zope.interface</span>\u00a0<span class=\"kn\">import</span>\u00a0implements</td></tr><tr><th id=\"L15\"><a href=\"#L15\">15</a></th><td></td></tr><tr><th id=\"L16\"><a href=\"#L16\">16</a></th><td><span class=\"c\"># Twisted Imports</span></td></tr><tr><th id=\"L17\"><a href=\"#L17\">17</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.python</span>\u00a0<span class=\"kn\">import</span>\u00a0log<span class=\"p\">,</span>\u00a0reflect<span class=\"p\">,</span>\u00a0failure</td></tr><tr><th id=\"L18\"><a href=\"#L18\">18</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.persisted</span>\u00a0<span class=\"kn\">import</span>\u00a0styles</td></tr><tr><th id=\"L19\"><a href=\"#L19\">19</a></th><td></td></tr><tr><th id=\"L20\"><a href=\"#L20\">20</a></th><td><span class=\"c\"># Sibling Imports</span></td></tr><tr><th id=\"L21\"><a href=\"#L21\">21</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">interfaces</span><span class=\"o\">,</span>\u00a0<span class=\"nn\">main</span></td></tr><tr><th id=\"L22\"><a href=\"#L22\">22</a></th><td></td></tr><tr><th id=\"L23\"><a href=\"#L23\">23</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">FileDescriptor</span><span class=\"p\">(</span>log<span class=\"o\">.</span>Logger<span class=\"p\">,</span>\u00a0styles<span class=\"o\">.</span>Ephemeral<span class=\"p\">,</span>\u00a0<span class=\"nb\">object</span><span class=\"p\">):</span></td></tr><tr><th id=\"L24\"><a href=\"#L24\">24</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"An object which can be operated on by select().</span></td></tr><tr><th id=\"L25\"><a href=\"#L25\">25</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L26\"><a href=\"#L26\">26</a></th><td><span class=\"sd\">\u00a0 \u00a0 This is an abstract superclass of all objects which may be notified when</span></td></tr><tr><th id=\"L27\"><a href=\"#L27\">27</a></th><td><span class=\"sd\">\u00a0 \u00a0 they are readable or writable; e.g. they have a file-descriptor that is</span></td></tr><tr><th id=\"L28\"><a href=\"#L28\">28</a></th><td><span class=\"sd\">\u00a0 \u00a0 valid to be passed to select(2).</span></td></tr><tr><th id=\"L29\"><a href=\"#L29\">29</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L30\"><a href=\"#L30\">30</a></th><td>\u00a0 \u00a0 connected <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L31\"><a href=\"#L31\">31</a></th><td>\u00a0 \u00a0 producerPaused <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L32\"><a href=\"#L32\">32</a></th><td>\u00a0 \u00a0 streamingProducer <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L33\"><a href=\"#L33\">33</a></th><td>\u00a0 \u00a0 producer <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L34\"><a href=\"#L34\">34</a></th><td>\u00a0 \u00a0 disconnected <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L35\"><a href=\"#L35\">35</a></th><td>\u00a0 \u00a0 disconnecting <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L36\"><a href=\"#L36\">36</a></th><td>\u00a0 \u00a0 _writeDisconnecting <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L37\"><a href=\"#L37\">37</a></th><td>\u00a0 \u00a0 _writeDisconnected <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L38\"><a href=\"#L38\">38</a></th><td>\u00a0 \u00a0 dataBuffer <span class=\"o\">=</span>\u00a0<span class=\"s\">\"\"</span></td></tr><tr><th id=\"L39\"><a href=\"#L39\">39</a></th><td>\u00a0 \u00a0 offset <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L40\"><a href=\"#L40\">40</a></th><td></td></tr><tr><th id=\"L41\"><a href=\"#L41\">41</a></th><td>\u00a0 \u00a0 SEND_LIMIT <span class=\"o\">=</span>\u00a0<span class=\"mi\">128</span><span class=\"o\">*</span><span class=\"mi\">1024</span></td></tr><tr><th id=\"L42\"><a href=\"#L42\">42</a></th><td></td></tr><tr><th id=\"L43\"><a href=\"#L43\">43</a></th><td>\u00a0 \u00a0 implements<span class=\"p\">(</span>interfaces<span class=\"o\">.</span>IProducer<span class=\"p\">,</span>\u00a0interfaces<span class=\"o\">.</span>IReadWriteDescriptor<span class=\"p\">,</span></td></tr><tr><th id=\"L44\"><a href=\"#L44\">44</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0interfaces<span class=\"o\">.</span>IConsumer<span class=\"p\">,</span>\u00a0interfaces<span class=\"o\">.</span>ITransport<span class=\"p\">,</span>\u00a0interfaces<span class=\"o\">.</span>IHalfCloseableDescriptor<span class=\"p\">)</span></td></tr><tr><th id=\"L45\"><a href=\"#L45\">45</a></th><td></td></tr><tr><th id=\"L46\"><a href=\"#L46\">46</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reactor<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L47\"><a href=\"#L47\">47</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0reactor<span class=\"p\">:</span></td></tr><tr><th id=\"L48\"><a href=\"#L48\">48</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet</span>\u00a0<span class=\"kn\">import</span>\u00a0reactor</td></tr><tr><th id=\"L49\"><a href=\"#L49\">49</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>reactor <span class=\"o\">=</span>\u00a0reactor</td></tr><tr><th id=\"L50\"><a href=\"#L50\">50</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_tempDataBuffer <span class=\"o\">=</span>\u00a0<span class=\"p\">[]</span>\u00a0<span class=\"c\"># will be added to dataBuffer in doWrite</span></td></tr><tr><th id=\"L51\"><a href=\"#L51\">51</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_tempDataLen <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L52\"><a href=\"#L52\">52</a></th><td></td></tr><tr><th id=\"L53\"><a href=\"#L53\">53</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectionLost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reason<span class=\"p\">):</span></td></tr><tr><th id=\"L54\"><a href=\"#L54\">54</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"The connection was lost.</span></td></tr><tr><th id=\"L55\"><a href=\"#L55\">55</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L56\"><a href=\"#L56\">56</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This is called when the connection on a selectable object has been</span></td></tr><tr><th id=\"L57\"><a href=\"#L57\">57</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 lost.\u00a0 It will be called whether the connection was closed explicitly,</span></td></tr><tr><th id=\"L58\"><a href=\"#L58\">58</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 an exception occurred in an event handler, or the other end of the</span></td></tr><tr><th id=\"L59\"><a href=\"#L59\">59</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 connection closed it first.</span></td></tr><tr><th id=\"L60\"><a href=\"#L60\">60</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L61\"><a href=\"#L61\">61</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Clean up state here, but make sure to call back up to FileDescriptor.</span></td></tr><tr><th id=\"L62\"><a href=\"#L62\">62</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L63\"><a href=\"#L63\">63</a></th><td></td></tr><tr><th id=\"L64\"><a href=\"#L64\">64</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>disconnected <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L65\"><a href=\"#L65\">65</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>connected <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L66\"><a href=\"#L66\">66</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>producer <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L67\"><a href=\"#L67\">67</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>producer<span class=\"o\">.</span>stopProducing<span class=\"p\">()</span></td></tr><tr><th id=\"L68\"><a href=\"#L68\">68</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>producer <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L69\"><a href=\"#L69\">69</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>stopReading<span class=\"p\">()</span></td></tr><tr><th id=\"L70\"><a href=\"#L70\">70</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>stopWriting<span class=\"p\">()</span></td></tr><tr><th id=\"L71\"><a href=\"#L71\">71</a></th><td></td></tr><tr><th id=\"L72\"><a href=\"#L72\">72</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">writeSomeData</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0data<span class=\"p\">):</span></td></tr><tr><th id=\"L73\"><a href=\"#L73\">73</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Write as much as possible of the given data, immediately.</span></td></tr><tr><th id=\"L74\"><a href=\"#L74\">74</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L75\"><a href=\"#L75\">75</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This is called to invoke the lower-level writing functionality, such as</span></td></tr><tr><th id=\"L76\"><a href=\"#L76\">76</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 a socket's send() method, or a file's write(); this method returns an</span></td></tr><tr><th id=\"L77\"><a href=\"#L77\">77</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 integer.\u00a0 If positive, it is the number of bytes written; if negative,</span></td></tr><tr><th id=\"L78\"><a href=\"#L78\">78</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 it indicates the connection was lost.</span></td></tr><tr><th id=\"L79\"><a href=\"#L79\">79</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L80\"><a href=\"#L80\">80</a></th><td></td></tr><tr><th id=\"L81\"><a href=\"#L81\">81</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">NotImplementedError</span><span class=\"p\">(</span><span class=\"s\">\"</span><span class=\"si\">%s</span><span class=\"s\">\u00a0does not implement writeSomeData\"</span>\u00a0<span class=\"o\">%</span></td></tr><tr><th id=\"L82\"><a href=\"#L82\">82</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 reflect<span class=\"o\">.</span>qual<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>__class__<span class=\"p\">))</span></td></tr><tr><th id=\"L83\"><a href=\"#L83\">83</a></th><td></td></tr><tr><th id=\"L84\"><a href=\"#L84\">84</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">doRead</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L85\"><a href=\"#L85\">85</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Called when data is avaliable for reading.</span></td></tr><tr><th id=\"L86\"><a href=\"#L86\">86</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L87\"><a href=\"#L87\">87</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Subclasses must override this method. The result will be interpreted</span></td></tr><tr><th id=\"L88\"><a href=\"#L88\">88</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 in the same way as a result of doWrite().</span></td></tr><tr><th id=\"L89\"><a href=\"#L89\">89</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L90\"><a href=\"#L90\">90</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">NotImplementedError</span><span class=\"p\">(</span><span class=\"s\">\"</span><span class=\"si\">%s</span><span class=\"s\">\u00a0does not implement doRead\"</span>\u00a0<span class=\"o\">%</span></td></tr><tr><th id=\"L91\"><a href=\"#L91\">91</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 reflect<span class=\"o\">.</span>qual<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>__class__<span class=\"p\">))</span></td></tr><tr><th id=\"L92\"><a href=\"#L92\">92</a></th><td></td></tr><tr><th id=\"L93\"><a href=\"#L93\">93</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">doWrite</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L94\"><a href=\"#L94\">94</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Called when data can be written.</span></td></tr><tr><th id=\"L95\"><a href=\"#L95\">95</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L96\"><a href=\"#L96\">96</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 A result that is true (which will be a negative number) implies the</span></td></tr><tr><th id=\"L97\"><a href=\"#L97\">97</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 connection was lost. A false result implies the connection is still</span></td></tr><tr><th id=\"L98\"><a href=\"#L98\">98</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 there; a result of 0 implies no write was done, and a result of None</span></td></tr><tr><th id=\"L99\"><a href=\"#L99\">99</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 indicates that a write was done.</span></td></tr><tr><th id=\"L100\"><a href=\"#L100\">100</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L101\"><a href=\"#L101\">101</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>dataBuffer<span class=\"p\">)</span>\u00a0<span class=\"o\">-</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>offset <span class=\"o\">&lt;</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>SEND_LIMIT<span class=\"p\">:</span></td></tr><tr><th id=\"L102\"><a href=\"#L102\">102</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># If there is currently less than SEND_LIMIT bytes left to send</span></td></tr><tr><th id=\"L103\"><a href=\"#L103\">103</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># in the string, extend it with the array data.</span></td></tr><tr><th id=\"L104\"><a href=\"#L104\">104</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>dataBuffer <span class=\"o\">=</span>\u00a0<span class=\"nb\">buffer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>dataBuffer<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>offset<span class=\"p\">)</span>\u00a0<span class=\"o\">+</span>\u00a0<span class=\"s\">\"\"</span><span class=\"o\">.</span>join<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>_tempDataBuffer<span class=\"p\">)</span></td></tr><tr><th id=\"L105\"><a href=\"#L105\">105</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>offset <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L106\"><a href=\"#L106\">106</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_tempDataBuffer <span class=\"o\">=</span>\u00a0<span class=\"p\">[]</span></td></tr><tr><th id=\"L107\"><a href=\"#L107\">107</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_tempDataLen <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L108\"><a href=\"#L108\">108</a></th><td></td></tr><tr><th id=\"L109\"><a href=\"#L109\">109</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Send as much data as you can.</span></td></tr><tr><th id=\"L110\"><a href=\"#L110\">110</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>offset<span class=\"p\">:</span></td></tr><tr><th id=\"L111\"><a href=\"#L111\">111</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 l <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>writeSomeData<span class=\"p\">(</span><span class=\"nb\">buffer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>dataBuffer<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>offset<span class=\"p\">))</span></td></tr><tr><th id=\"L112\"><a href=\"#L112\">112</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L113\"><a href=\"#L113\">113</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 l <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>writeSomeData<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>dataBuffer<span class=\"p\">)</span></td></tr><tr><th id=\"L114\"><a href=\"#L114\">114</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0l <span class=\"o\">&lt;</span>\u00a0<span class=\"mi\">0</span>\u00a0<span class=\"ow\">or</span>\u00a0<span class=\"nb\">isinstance</span><span class=\"p\">(</span>l<span class=\"p\">,</span>\u00a0<span class=\"ne\">Exception</span><span class=\"p\">):</span></td></tr><tr><th id=\"L115\"><a href=\"#L115\">115</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0l</td></tr><tr><th id=\"L116\"><a href=\"#L116\">116</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0l <span class=\"o\">==</span>\u00a0<span class=\"mi\">0</span>\u00a0<span class=\"ow\">and</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>dataBuffer<span class=\"p\">:</span></td></tr><tr><th id=\"L117\"><a href=\"#L117\">117</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 result <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L118\"><a href=\"#L118\">118</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L119\"><a href=\"#L119\">119</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 result <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L120\"><a href=\"#L120\">120</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>offset <span class=\"o\">+=</span>\u00a0l</td></tr><tr><th id=\"L121\"><a href=\"#L121\">121</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># If there is nothing left to send,</span></td></tr><tr><th id=\"L122\"><a href=\"#L122\">122</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>offset <span class=\"o\">==</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>dataBuffer<span class=\"p\">)</span>\u00a0<span class=\"ow\">and</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_tempDataLen<span class=\"p\">:</span></td></tr><tr><th id=\"L123\"><a href=\"#L123\">123</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>dataBuffer <span class=\"o\">=</span>\u00a0<span class=\"s\">\"\"</span></td></tr><tr><th id=\"L124\"><a href=\"#L124\">124</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>offset <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L125\"><a href=\"#L125\">125</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># stop writing.</span></td></tr><tr><th id=\"L126\"><a href=\"#L126\">126</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>stopWriting<span class=\"p\">()</span></td></tr><tr><th id=\"L127\"><a href=\"#L127\">127</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># If I've got a producer who is supposed to supply me with data,</span></td></tr><tr><th id=\"L128\"><a href=\"#L128\">128</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>producer <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span>\u00a0<span class=\"ow\">and</span>\u00a0<span class=\"p\">((</span><span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>streamingProducer<span class=\"p\">)</span></td></tr><tr><th id=\"L129\"><a href=\"#L129\">129</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"ow\">or</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>producerPaused<span class=\"p\">):</span></td></tr><tr><th id=\"L130\"><a href=\"#L130\">130</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># tell them to supply some more.</span></td></tr><tr><th id=\"L131\"><a href=\"#L131\">131</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>producerPaused <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L132\"><a href=\"#L132\">132</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>producer<span class=\"o\">.</span>resumeProducing<span class=\"p\">()</span></td></tr><tr><th id=\"L133\"><a href=\"#L133\">133</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>disconnecting<span class=\"p\">:</span></td></tr><tr><th id=\"L134\"><a href=\"#L134\">134</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># But if I was previously asked to let the connection die, do</span></td></tr><tr><th id=\"L135\"><a href=\"#L135\">135</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># so.</span></td></tr><tr><th id=\"L136\"><a href=\"#L136\">136</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_postLoseConnection<span class=\"p\">()</span></td></tr><tr><th id=\"L137\"><a href=\"#L137\">137</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_writeDisconnecting<span class=\"p\">:</span></td></tr><tr><th id=\"L138\"><a href=\"#L138\">138</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># I was previously asked to to half-close the connection.</span></td></tr><tr><th id=\"L139\"><a href=\"#L139\">139</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 result <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_closeWriteConnection<span class=\"p\">()</span></td></tr><tr><th id=\"L140\"><a href=\"#L140\">140</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_writeDisconnected <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L141\"><a href=\"#L141\">141</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0result</td></tr><tr><th id=\"L142\"><a href=\"#L142\">142</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0result</td></tr><tr><th id=\"L143\"><a href=\"#L143\">143</a></th><td></td></tr><tr><th id=\"L144\"><a href=\"#L144\">144</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_postLoseConnection</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L145\"><a href=\"#L145\">145</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Called after a loseConnection(), when all data has been written.</span></td></tr><tr><th id=\"L146\"><a href=\"#L146\">146</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L147\"><a href=\"#L147\">147</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Whatever this returns is then returned by doWrite.</span></td></tr><tr><th id=\"L148\"><a href=\"#L148\">148</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L149\"><a href=\"#L149\">149</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># default implementation, telling reactor we're finished</span></td></tr><tr><th id=\"L150\"><a href=\"#L150\">150</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0main<span class=\"o\">.</span>CONNECTION_DONE</td></tr><tr><th id=\"L151\"><a href=\"#L151\">151</a></th><td></td></tr><tr><th id=\"L152\"><a href=\"#L152\">152</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_closeWriteConnection</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L153\"><a href=\"#L153\">153</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># override in subclasses</span></td></tr><tr><th id=\"L154\"><a href=\"#L154\">154</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L155\"><a href=\"#L155\">155</a></th><td></td></tr><tr><th id=\"L156\"><a href=\"#L156\">156</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">writeConnectionLost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reason<span class=\"p\">):</span></td></tr><tr><th id=\"L157\"><a href=\"#L157\">157</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># in current code should never be called</span></td></tr><tr><th id=\"L158\"><a href=\"#L158\">158</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>connectionLost<span class=\"p\">(</span>reason<span class=\"p\">)</span></td></tr><tr><th id=\"L159\"><a href=\"#L159\">159</a></th><td></td></tr><tr><th id=\"L160\"><a href=\"#L160\">160</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">readConnectionLost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reason<span class=\"p\">):</span></td></tr><tr><th id=\"L161\"><a href=\"#L161\">161</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># override in subclasses</span></td></tr><tr><th id=\"L162\"><a href=\"#L162\">162</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>connectionLost<span class=\"p\">(</span>reason<span class=\"p\">)</span></td></tr><tr><th id=\"L163\"><a href=\"#L163\">163</a></th><td></td></tr><tr><th id=\"L164\"><a href=\"#L164\">164</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">write</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0data<span class=\"p\">):</span></td></tr><tr><th id=\"L165\"><a href=\"#L165\">165</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Reliably write some data.</span></td></tr><tr><th id=\"L166\"><a href=\"#L166\">166</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L167\"><a href=\"#L167\">167</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 The data is buffered until the underlying file descriptor is ready</span></td></tr><tr><th id=\"L168\"><a href=\"#L168\">168</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 for writing. If there is more than C{self.bufferSize} data in the</span></td></tr><tr><th id=\"L169\"><a href=\"#L169\">169</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 buffer and this descriptor has a registered streaming producer, its</span></td></tr><tr><th id=\"L170\"><a href=\"#L170\">170</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 C{pauseProducing()} method will be called.</span></td></tr><tr><th id=\"L171\"><a href=\"#L171\">171</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L172\"><a href=\"#L172\">172</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">isinstance</span><span class=\"p\">(</span>data<span class=\"p\">,</span>\u00a0<span class=\"nb\">unicode</span><span class=\"p\">):</span>\u00a0<span class=\"c\"># no, really, I mean it</span></td></tr><tr><th id=\"L173\"><a href=\"#L173\">173</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">TypeError</span><span class=\"p\">(</span><span class=\"s\">\"Data must not be unicode\"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L174\"><a href=\"#L174\">174</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>connected <span class=\"ow\">or</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_writeDisconnected<span class=\"p\">:</span></td></tr><tr><th id=\"L175\"><a href=\"#L175\">175</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span></td></tr><tr><th id=\"L176\"><a href=\"#L176\">176</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0data<span class=\"p\">:</span></td></tr><tr><th id=\"L177\"><a href=\"#L177\">177</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_tempDataBuffer<span class=\"o\">.</span>append<span class=\"p\">(</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L178\"><a href=\"#L178\">178</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_tempDataLen <span class=\"o\">+=</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L179\"><a href=\"#L179\">179</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># If we are responsible for pausing our producer,</span></td></tr><tr><th id=\"L180\"><a href=\"#L180\">180</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>producer <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span>\u00a0<span class=\"ow\">and</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>streamingProducer<span class=\"p\">:</span></td></tr><tr><th id=\"L181\"><a href=\"#L181\">181</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># and our buffer is full,</span></td></tr><tr><th id=\"L182\"><a href=\"#L182\">182</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>dataBuffer<span class=\"p\">)</span>\u00a0<span class=\"o\">+</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_tempDataLen <span class=\"o\">&gt;</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>bufferSize<span class=\"p\">:</span></td></tr><tr><th id=\"L183\"><a href=\"#L183\">183</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># pause it.</span></td></tr><tr><th id=\"L184\"><a href=\"#L184\">184</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>producerPaused <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L185\"><a href=\"#L185\">185</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>producer<span class=\"o\">.</span>pauseProducing<span class=\"p\">()</span></td></tr><tr><th id=\"L186\"><a href=\"#L186\">186</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>startWriting<span class=\"p\">()</span></td></tr><tr><th id=\"L187\"><a href=\"#L187\">187</a></th><td></td></tr><tr><th id=\"L188\"><a href=\"#L188\">188</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">writeSequence</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0iovec<span class=\"p\">):</span></td></tr><tr><th id=\"L189\"><a href=\"#L189\">189</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Reliably write a sequence of data.</span></td></tr><tr><th id=\"L190\"><a href=\"#L190\">190</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L191\"><a href=\"#L191\">191</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Currently, this is a convenience method roughly equivalent to::</span></td></tr><tr><th id=\"L192\"><a href=\"#L192\">192</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L193\"><a href=\"#L193\">193</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 for chunk in iovec:</span></td></tr><tr><th id=\"L194\"><a href=\"#L194\">194</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fd.write(chunk)</span></td></tr><tr><th id=\"L195\"><a href=\"#L195\">195</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L196\"><a href=\"#L196\">196</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 It may have a more efficient implementation at a later time or in a</span></td></tr><tr><th id=\"L197\"><a href=\"#L197\">197</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 different reactor.</span></td></tr><tr><th id=\"L198\"><a href=\"#L198\">198</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L199\"><a href=\"#L199\">199</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 As with the C{write()} method, if a buffer size limit is reached and a</span></td></tr><tr><th id=\"L200\"><a href=\"#L200\">200</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 streaming producer is registered, it will be paused until the buffered</span></td></tr><tr><th id=\"L201\"><a href=\"#L201\">201</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 data is written to the underlying file descriptor.</span></td></tr><tr><th id=\"L202\"><a href=\"#L202\">202</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L203\"><a href=\"#L203\">203</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>connected <span class=\"ow\">or</span>\u00a0<span class=\"ow\">not</span>\u00a0iovec <span class=\"ow\">or</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_writeDisconnected<span class=\"p\">:</span></td></tr><tr><th id=\"L204\"><a href=\"#L204\">204</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span></td></tr><tr><th id=\"L205\"><a href=\"#L205\">205</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_tempDataBuffer<span class=\"o\">.</span>extend<span class=\"p\">(</span>iovec<span class=\"p\">)</span></td></tr><tr><th id=\"L206\"><a href=\"#L206\">206</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0i <span class=\"ow\">in</span>\u00a0iovec<span class=\"p\">:</span></td></tr><tr><th id=\"L207\"><a href=\"#L207\">207</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_tempDataLen <span class=\"o\">+=</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span>i<span class=\"p\">)</span></td></tr><tr><th id=\"L208\"><a href=\"#L208\">208</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># If we are responsible for pausing our producer,</span></td></tr><tr><th id=\"L209\"><a href=\"#L209\">209</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>producer <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span>\u00a0<span class=\"ow\">and</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>streamingProducer<span class=\"p\">:</span></td></tr><tr><th id=\"L210\"><a href=\"#L210\">210</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># and our buffer is full,</span></td></tr><tr><th id=\"L211\"><a href=\"#L211\">211</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>dataBuffer<span class=\"p\">)</span>\u00a0<span class=\"o\">+</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_tempDataLen <span class=\"o\">&gt;</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>bufferSize<span class=\"p\">:</span></td></tr><tr><th id=\"L212\"><a href=\"#L212\">212</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># pause it.</span></td></tr><tr><th id=\"L213\"><a href=\"#L213\">213</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>producerPaused <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L214\"><a href=\"#L214\">214</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>producer<span class=\"o\">.</span>pauseProducing<span class=\"p\">()</span></td></tr><tr><th id=\"L215\"><a href=\"#L215\">215</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>startWriting<span class=\"p\">()</span></td></tr><tr><th id=\"L216\"><a href=\"#L216\">216</a></th><td></td></tr><tr><th id=\"L217\"><a href=\"#L217\">217</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">loseConnection</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0_connDone<span class=\"o\">=</span>failure<span class=\"o\">.</span>Failure<span class=\"p\">(</span>main<span class=\"o\">.</span>CONNECTION_DONE<span class=\"p\">)):</span></td></tr><tr><th id=\"L218\"><a href=\"#L218\">218</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Close the connection at the next available opportunity.</span></td></tr><tr><th id=\"L219\"><a href=\"#L219\">219</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L220\"><a href=\"#L220\">220</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Call this to cause this FileDescriptor to lose its connection.\u00a0 It will</span></td></tr><tr><th id=\"L221\"><a href=\"#L221\">221</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 first write any data that it has buffered.</span></td></tr><tr><th id=\"L222\"><a href=\"#L222\">222</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L223\"><a href=\"#L223\">223</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 If there is data buffered yet to be written, this method will cause the</span></td></tr><tr><th id=\"L224\"><a href=\"#L224\">224</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 transport to lose its connection as soon as it's done flushing its</span></td></tr><tr><th id=\"L225\"><a href=\"#L225\">225</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 write buffer.\u00a0 If you have a producer registered, the connection won't</span></td></tr><tr><th id=\"L226\"><a href=\"#L226\">226</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 be closed until the producer is finished. Therefore, make sure you</span></td></tr><tr><th id=\"L227\"><a href=\"#L227\">227</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 unregister your producer when it's finished, or the connection will</span></td></tr><tr><th id=\"L228\"><a href=\"#L228\">228</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 never close.</span></td></tr><tr><th id=\"L229\"><a href=\"#L229\">229</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L230\"><a href=\"#L230\">230</a></th><td></td></tr><tr><th id=\"L231\"><a href=\"#L231\">231</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>connected <span class=\"ow\">and</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>disconnecting<span class=\"p\">:</span></td></tr><tr><th id=\"L232\"><a href=\"#L232\">232</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_writeDisconnected<span class=\"p\">:</span></td></tr><tr><th id=\"L233\"><a href=\"#L233\">233</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># doWrite won't trigger the connection close anymore</span></td></tr><tr><th id=\"L234\"><a href=\"#L234\">234</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>stopReading<span class=\"p\">()</span></td></tr><tr><th id=\"L235\"><a href=\"#L235\">235</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>stopWriting<span class=\"p\">()</span></td></tr><tr><th id=\"L236\"><a href=\"#L236\">236</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>connectionLost<span class=\"p\">(</span>_connDone<span class=\"p\">)</span></td></tr><tr><th id=\"L237\"><a href=\"#L237\">237</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L238\"><a href=\"#L238\">238</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>stopReading<span class=\"p\">()</span></td></tr><tr><th id=\"L239\"><a href=\"#L239\">239</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>startWriting<span class=\"p\">()</span></td></tr><tr><th id=\"L240\"><a href=\"#L240\">240</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>disconnecting <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L241\"><a href=\"#L241\">241</a></th><td></td></tr><tr><th id=\"L242\"><a href=\"#L242\">242</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">loseWriteConnection</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L243\"><a href=\"#L243\">243</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_writeDisconnecting <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L244\"><a href=\"#L244\">244</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>startWriting<span class=\"p\">()</span></td></tr><tr><th id=\"L245\"><a href=\"#L245\">245</a></th><td></td></tr><tr><th id=\"L246\"><a href=\"#L246\">246</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">stopReading</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L247\"><a href=\"#L247\">247</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Stop waiting for read availability.</span></td></tr><tr><th id=\"L248\"><a href=\"#L248\">248</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L249\"><a href=\"#L249\">249</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Call this to remove this selectable from being notified when it is</span></td></tr><tr><th id=\"L250\"><a href=\"#L250\">250</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 ready for reading.</span></td></tr><tr><th id=\"L251\"><a href=\"#L251\">251</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L252\"><a href=\"#L252\">252</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>reactor<span class=\"o\">.</span>removeReader<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L253\"><a href=\"#L253\">253</a></th><td></td></tr><tr><th id=\"L254\"><a href=\"#L254\">254</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">stopWriting</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L255\"><a href=\"#L255\">255</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Stop waiting for write availability.</span></td></tr><tr><th id=\"L256\"><a href=\"#L256\">256</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L257\"><a href=\"#L257\">257</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Call this to remove this selectable from being notified when it is ready</span></td></tr><tr><th id=\"L258\"><a href=\"#L258\">258</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 for writing.</span></td></tr><tr><th id=\"L259\"><a href=\"#L259\">259</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L260\"><a href=\"#L260\">260</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>reactor<span class=\"o\">.</span>removeWriter<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L261\"><a href=\"#L261\">261</a></th><td></td></tr><tr><th id=\"L262\"><a href=\"#L262\">262</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">startReading</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L263\"><a href=\"#L263\">263</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Start waiting for read availability.</span></td></tr><tr><th id=\"L264\"><a href=\"#L264\">264</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L265\"><a href=\"#L265\">265</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>reactor<span class=\"o\">.</span>addReader<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L266\"><a href=\"#L266\">266</a></th><td></td></tr><tr><th id=\"L267\"><a href=\"#L267\">267</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">startWriting</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L268\"><a href=\"#L268\">268</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Start waiting for write availability.</span></td></tr><tr><th id=\"L269\"><a href=\"#L269\">269</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L270\"><a href=\"#L270\">270</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Call this to have this FileDescriptor be notified whenever it is ready for</span></td></tr><tr><th id=\"L271\"><a href=\"#L271\">271</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 writing.</span></td></tr><tr><th id=\"L272\"><a href=\"#L272\">272</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L273\"><a href=\"#L273\">273</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>reactor<span class=\"o\">.</span>addWriter<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L274\"><a href=\"#L274\">274</a></th><td></td></tr><tr><th id=\"L275\"><a href=\"#L275\">275</a></th><td>\u00a0 \u00a0 <span class=\"c\"># Producer/consumer implementation</span></td></tr><tr><th id=\"L276\"><a href=\"#L276\">276</a></th><td></td></tr><tr><th id=\"L277\"><a href=\"#L277\">277</a></th><td>\u00a0 \u00a0 <span class=\"c\"># first, the consumer stuff.\u00a0 This requires no additional work, as</span></td></tr><tr><th id=\"L278\"><a href=\"#L278\">278</a></th><td>\u00a0 \u00a0 <span class=\"c\"># any object you can write to can be a consumer, really.</span></td></tr><tr><th id=\"L279\"><a href=\"#L279\">279</a></th><td></td></tr><tr><th id=\"L280\"><a href=\"#L280\">280</a></th><td>\u00a0 \u00a0 producer <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L281\"><a href=\"#L281\">281</a></th><td>\u00a0 \u00a0 bufferSize <span class=\"o\">=</span>\u00a0<span class=\"mi\">2</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"o\">**</span><span class=\"mi\">2</span></td></tr><tr><th id=\"L282\"><a href=\"#L282\">282</a></th><td></td></tr><tr><th id=\"L283\"><a href=\"#L283\">283</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">registerProducer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0producer<span class=\"p\">,</span>\u00a0streaming<span class=\"p\">):</span></td></tr><tr><th id=\"L284\"><a href=\"#L284\">284</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Register to receive data from a producer.</span></td></tr><tr><th id=\"L285\"><a href=\"#L285\">285</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L286\"><a href=\"#L286\">286</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This sets this selectable to be a consumer for a producer.\u00a0 When this</span></td></tr><tr><th id=\"L287\"><a href=\"#L287\">287</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 selectable runs out of data on a write() call, it will ask the producer</span></td></tr><tr><th id=\"L288\"><a href=\"#L288\">288</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 to resumeProducing(). When the FileDescriptor's internal data buffer is</span></td></tr><tr><th id=\"L289\"><a href=\"#L289\">289</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 filled, it will ask the producer to pauseProducing(). If the connection</span></td></tr><tr><th id=\"L290\"><a href=\"#L290\">290</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 is lost, FileDescriptor calls producer's stopProducing() method.</span></td></tr><tr><th id=\"L291\"><a href=\"#L291\">291</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L292\"><a href=\"#L292\">292</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 If streaming is true, the producer should provide the IPushProducer</span></td></tr><tr><th id=\"L293\"><a href=\"#L293\">293</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 interface. Otherwise, it is assumed that producer provides the</span></td></tr><tr><th id=\"L294\"><a href=\"#L294\">294</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 IPullProducer interface. In this case, the producer won't be asked</span></td></tr><tr><th id=\"L295\"><a href=\"#L295\">295</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 to pauseProducing(), but it has to be careful to write() data only</span></td></tr><tr><th id=\"L296\"><a href=\"#L296\">296</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 when its resumeProducing() method is called.</span></td></tr><tr><th id=\"L297\"><a href=\"#L297\">297</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L298\"><a href=\"#L298\">298</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>producer <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L299\"><a href=\"#L299\">299</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">RuntimeError</span><span class=\"p\">(</span><span class=\"s\">\"Cannot register producer </span><span class=\"si\">%s</span><span class=\"s\">, because producer </span><span class=\"si\">%s</span><span class=\"s\">\u00a0was never unregistered.\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span>producer<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>producer<span class=\"p\">))</span></td></tr><tr><th id=\"L300\"><a href=\"#L300\">300</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>disconnected<span class=\"p\">:</span></td></tr><tr><th id=\"L301\"><a href=\"#L301\">301</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 producer<span class=\"o\">.</span>stopProducing<span class=\"p\">()</span></td></tr><tr><th id=\"L302\"><a href=\"#L302\">302</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L303\"><a href=\"#L303\">303</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>producer <span class=\"o\">=</span>\u00a0producer</td></tr><tr><th id=\"L304\"><a href=\"#L304\">304</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>streamingProducer <span class=\"o\">=</span>\u00a0streaming</td></tr><tr><th id=\"L305\"><a href=\"#L305\">305</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0streaming<span class=\"p\">:</span></td></tr><tr><th id=\"L306\"><a href=\"#L306\">306</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 producer<span class=\"o\">.</span>resumeProducing<span class=\"p\">()</span></td></tr><tr><th id=\"L307\"><a href=\"#L307\">307</a></th><td></td></tr><tr><th id=\"L308\"><a href=\"#L308\">308</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">unregisterProducer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L309\"><a href=\"#L309\">309</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Stop consuming data from a producer, without disconnecting.</span></td></tr><tr><th id=\"L310\"><a href=\"#L310\">310</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L311\"><a href=\"#L311\">311</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>producer <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L312\"><a href=\"#L312\">312</a></th><td></td></tr><tr><th id=\"L313\"><a href=\"#L313\">313</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">stopConsuming</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L314\"><a href=\"#L314\">314</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Stop consuming data.</span></td></tr><tr><th id=\"L315\"><a href=\"#L315\">315</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L316\"><a href=\"#L316\">316</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This is called when a producer has lost its connection, to tell the</span></td></tr><tr><th id=\"L317\"><a href=\"#L317\">317</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 consumer to go lose its connection (and break potential circular</span></td></tr><tr><th id=\"L318\"><a href=\"#L318\">318</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 references).</span></td></tr><tr><th id=\"L319\"><a href=\"#L319\">319</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L320\"><a href=\"#L320\">320</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>unregisterProducer<span class=\"p\">()</span></td></tr><tr><th id=\"L321\"><a href=\"#L321\">321</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>loseConnection<span class=\"p\">()</span></td></tr><tr><th id=\"L322\"><a href=\"#L322\">322</a></th><td></td></tr><tr><th id=\"L323\"><a href=\"#L323\">323</a></th><td>\u00a0 \u00a0 <span class=\"c\"># producer interface implementation</span></td></tr><tr><th id=\"L324\"><a href=\"#L324\">324</a></th><td></td></tr><tr><th id=\"L325\"><a href=\"#L325\">325</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">resumeProducing</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L326\"><a href=\"#L326\">326</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">assert</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>connected <span class=\"ow\">and</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>disconnecting</td></tr><tr><th id=\"L327\"><a href=\"#L327\">327</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>startReading<span class=\"p\">()</span></td></tr><tr><th id=\"L328\"><a href=\"#L328\">328</a></th><td></td></tr><tr><th id=\"L329\"><a href=\"#L329\">329</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">pauseProducing</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L330\"><a href=\"#L330\">330</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>stopReading<span class=\"p\">()</span></td></tr><tr><th id=\"L331\"><a href=\"#L331\">331</a></th><td></td></tr><tr><th id=\"L332\"><a href=\"#L332\">332</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">stopProducing</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L333\"><a href=\"#L333\">333</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>loseConnection<span class=\"p\">()</span></td></tr><tr><th id=\"L334\"><a href=\"#L334\">334</a></th><td></td></tr><tr><th id=\"L335\"><a href=\"#L335\">335</a></th><td></td></tr><tr><th id=\"L336\"><a href=\"#L336\">336</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">fileno</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L337\"><a href=\"#L337\">337</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"File Descriptor number for select().</span></td></tr><tr><th id=\"L338\"><a href=\"#L338\">338</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L339\"><a href=\"#L339\">339</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This method must be overridden or assigned in subclasses to</span></td></tr><tr><th id=\"L340\"><a href=\"#L340\">340</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 indicate a valid file descriptor for the operating system.</span></td></tr><tr><th id=\"L341\"><a href=\"#L341\">341</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L342\"><a href=\"#L342\">342</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"o\">-</span><span class=\"mi\">1</span></td></tr><tr><th id=\"L343\"><a href=\"#L343\">343</a></th><td></td></tr><tr><th id=\"L344\"><a href=\"#L344\">344</a></th><td></td></tr><tr><th id=\"L345\"><a href=\"#L345\">345</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">isIPAddress</span><span class=\"p\">(</span>addr<span class=\"p\">):</span></td></tr><tr><th id=\"L346\"><a href=\"#L346\">346</a></th><td>\u00a0 \u00a0 parts <span class=\"o\">=</span>\u00a0string<span class=\"o\">.</span>split<span class=\"p\">(</span>addr<span class=\"p\">,</span>\u00a0<span class=\"s\">'.'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L347\"><a href=\"#L347\">347</a></th><td>\u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span>parts<span class=\"p\">)</span>\u00a0<span class=\"o\">==</span>\u00a0<span class=\"mi\">4</span><span class=\"p\">:</span></td></tr><tr><th id=\"L348\"><a href=\"#L348\">348</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L349\"><a href=\"#L349\">349</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0part <span class=\"ow\">in</span>\u00a0<span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">,</span>\u00a0parts<span class=\"p\">):</span></td></tr><tr><th id=\"L350\"><a href=\"#L350\">350</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"o\">&lt;=</span>part<span class=\"o\">&lt;</span><span class=\"mi\">256</span><span class=\"p\">):</span></td></tr><tr><th id=\"L351\"><a href=\"#L351\">351</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">break</span></td></tr><tr><th id=\"L352\"><a href=\"#L352\">352</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L353\"><a href=\"#L353\">353</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L354\"><a href=\"#L354\">354</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">ValueError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L355\"><a href=\"#L355\">355</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L356\"><a href=\"#L356\">356</a></th><td>\u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L357\"><a href=\"#L357\">357</a></th><td></td></tr><tr><th id=\"L358\"><a href=\"#L358\">358</a></th><td>__all__ <span class=\"o\">=</span>\u00a0<span class=\"p\">[</span><span class=\"s\">\"FileDescriptor\"</span><span class=\"p\">]</span></td></tr></tbody></table>\n\n      </div>\n      <div id=\"anydiff\">\n        <form action=\"/LUCICodeRepository/nomaticIM/diff\" method=\"get\">\n          <div class=\"buttons\">\n            <input type=\"hidden\" name=\"new_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/abstract.py\" />\n            <input type=\"hidden\" name=\"old_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/abstract.py\" />\n            <input type=\"hidden\" name=\"new_rev\" />\n            <input type=\"hidden\" name=\"old_rev\" />\n            <input type=\"submit\" value=\"View changes...\" title=\"Select paths and revs for Diff\" />\n          </div>\n        </form>\n      </div>\n      <div id=\"help\"><strong>Note:</strong> See <a href=\"/LUCICodeRepository/nomaticIM/wiki/TracBrowser\">TracBrowser</a>\n        for help on using the repository browser.</div>\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"first\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/abstract.py?format=txt\">Plain Text</a>\n        </li><li class=\"last\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/abstract.py\">Original Format</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/LUCICodeRepository/nomaticIM/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/LUCICodeRepository/nomaticIM/about\"><strong>Trac 1.0.1</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">All content copyright 2007-2008 by LUCI <br /><a href=\"http://luci.ics.uci.edu/\">http://luci.ics.uci.edu/</a></p>\n    </div>\n\t\t<div id=\"sitefooter\">\n\t\t\t<script src=\"http://www.google-analytics.com/urchin.js\" type=\"text/javascript\">\n\t\t\t</script>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t\t_uacct = \"UA-338915-2\";\n\t\t\t\turchinTracker();\n\t\t\t</script>\n\t\t</div>\n\t</body>\n</html>", "id": 44214.0}