{"text": "Navigation Up Table of Contents Bibliography Index Title Page CGAL Interval skip list Interval Definition The class Interval skip list Interval is a dynamic datastructure that allows to find all members of a set of intervals that overlap a point include CGAL Interval skip list h Types typedef Interval Value Value the type of inf and sup of the interval Interval skip list Interval const iterator An iterator over all intervals Creation Interval skip list Interval isl Default constructor template class InputIterator Interval skip list Interval isl InputIterator first InputIterator last Constructor that inserts the iterator range first last in the interval skip list Precondition The value type of first and last is Interval Operations template class InputIterator int isl insert InputIterator first InputIterator last Inserts the iterator range first last in the interval skip list and returns the number of inserted intervals Precondition The value type of first and last is Interval void isl insert Interval i inserts interval i in the interval skip list bool isl remove Interval i removes interval i from the interval skip list Returns true iff removal was succesful bool isl is contained Value v Returns true iff there is an interval that contains v template class OutputIterator OutputIterator isl find intervals Value v OutputIterator out Writes the intervals i with i inf v i sup to the output iterator out Precondition The value type of out is Interval void isl clear Removes all intervals from the interval skip list const iterator isl begin Returns an iterator over all intervals const iterator isl end Returns the past the end iterator I O ostream ostream os isl Inserts the interval skip list isl into the stream os Precondition The output operator must be defined for Interval Implementation The insertion and deletion of a segment in the interval skip list takes expected time O log2 n if the segment endpoints are chosen from a continuous distribution A stabbing query takes expected time O logn and finding all intervals that contain a point takes expected time O logn k where k is the number of intervals The implementation is based on the code developed by Eric N Hansen which can be found at http www pub cise ufl edu hanson IS lists Attention this code has memory leaks Next Interval Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Interval_skip_list_ref/Class_Interval_skip_list.html", "title": "interval_skip_list&lt;interval&gt;", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Interval_skip_list_ref/Interval_skip_list.tex' -->\n<html> <head>  \n<title>Interval_skip_list&lt;Interval&gt;</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_1226\"></A>\n\n<A NAME=\"Cross_link_anchor_1227\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_1301\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Class.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_CGAL::Interval_skip_list<Interval>\"></A>\n<h2><I>CGAL::Interval_skip_list&lt;Interval&gt;</I></h2>\n<P>\n\n<H3>Definition</H3>\n<P>\n\nThe class <I><A HREF=\"Class_Interval_skip_list.html#Cross_link_anchor_1227\">Interval_skip_list</A>&lt;<A HREF=\"Concept_Interval.html#Cross_link_anchor_1228\">Interval</A>&gt;</I> is a dynamic datastructure that \nallows to find all members of a set of intervals that overlap a point.\n<P>\n\n<I>#include &lt;<A HREF=\"../../../include/CGAL/Interval_skip_list.h\">CGAL/Interval_skip_list.h</A>&gt;</I>\n<P>\n\n<H3>Types</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Value\"></A>\n<A NAME=\"Typedef_Value\"></A>\ntypedef <A HREF=\"Concept_Interval.html#Cross_link_anchor_1228\">Interval</A>::Value\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    Value;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    the type of inf and sup of the interval.\n        </TD></TR>\n        </TABLE>\n<P>\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Interval_skip_list.html#Cross_link_anchor_1227\">Interval_skip_list</A>&lt;<A HREF=\"Concept_Interval.html#Cross_link_anchor_1228\">Interval</A>&gt;::const_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    An iterator over  all intervals.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Creation</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Interval_skip_list.html#Cross_link_anchor_1227\">Interval_skip_list</A>&lt;<A HREF=\"Concept_Interval.html#Cross_link_anchor_1228\">Interval</A>&gt; isl;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Default constructor.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    template &lt; class InputIterator &gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    <A HREF=\"Class_Interval_skip_list.html#Cross_link_anchor_1227\">Interval_skip_list</A>&lt;<A HREF=\"Concept_Interval.html#Cross_link_anchor_1228\">Interval</A>&gt; isl ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    InputIterator first,<BR>\n\nInputIterator last);</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Constructor that inserts the iterator range <I>[first, last)</I> in the interval skip list.<BR>\n\n<EM>Precondition: </EM>The <I>value_type</I> of <I>first</I> and\n<I>last</I> is <I><A HREF=\"Concept_Interval.html#Cross_link_anchor_1228\">Interval</A></I>.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Operations</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    template &lt; class InputIterator &gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_int_insert6_InputIterator_first+_InputIterator_last9;\"></A>\nint\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    isl.insert ( InputIterator first,  InputIterator last)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Inserts the iterator range <I>[first, last)</I> in the interval skip list, and returns\nthe number of inserted intervals.<BR>\n\n<EM>Precondition: </EM>The <I>value_type</I> of <I>first</I> and\n<I>last</I> is <I><A HREF=\"Concept_Interval.html#Cross_link_anchor_1228\">Interval</A></I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_insert6const_Interval__i9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    isl.insert (  <A HREF=\"Concept_Interval.html#Cross_link_anchor_1228\">Interval</A> i)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    inserts interval <I>i</I> in the interval skip list.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_remove6const_Interval__i9;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    isl.remove (  <A HREF=\"Concept_Interval.html#Cross_link_anchor_1228\">Interval</A> i)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    removes interval <I>i</I> from the interval skip list. Returns <I>true</I> iff removal was succesful.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_is_contained6const_Value__v9;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    isl.is_contained (  Value v)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns <I>true</I> iff there is an interval that contains <I>v</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    template &lt; class OutputIterator &gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_OutputIterator_find_intervals6_const_Value__v+_OutputIterator_out9;\"></A>\nOutputIterator\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    isl.find_intervals (  Value v,  OutputIterator out)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Writes the intervals <I>i</I> with <I>i.inf()</I> <MATH><I> <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> </I></MATH> <I>v</I> <MATH><I> <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> </I></MATH> <I>i.sup</I> to the\noutput iterator <I>out</I>.<BR>\n\n<EM>Precondition: </EM>The <I>value_type</I> of <I>out</I> is <I><A HREF=\"Concept_Interval.html#Cross_link_anchor_1228\">Interval</A></I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_clear69;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    isl.clear ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Removes all intervals from the interval skip list.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_const_iterator_begin69_const;\"></A>\nconst_iterator\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    isl.begin ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns an iterator over all intervals.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_const_iterator_end69_const;\"></A>\nconst_iterator\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    isl.end ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns the past the end iterator.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>I/O</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    ostream&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n     ostream&amp; os &lt;&lt;  isl<A NAME=\"Function_ostream__operator666ostream__os+_const_Interval_skip_list6Interval9__isl9;\"></A>\n\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Inserts the interval skip list <I>isl</I> into the stream <I>os</I>.<BR>\n\n<EM>Precondition: </EM>The output operator must be defined for <I><A HREF=\"Concept_Interval.html#Cross_link_anchor_1228\">Interval</A></I>.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Implementation</H3>\n<P>\n\nThe insertion and deletion of a segment in the interval skip list\ntakes expected time <MATH><I>O(</I></MATH>log<MATH><I><SUP>2</SUP> n)</I></MATH>, if the segment endpoints are\nchosen from a continuous distribution. A stabbing query takes expected \ntime <MATH><I>O(</I></MATH>log<MATH><I>n)</I></MATH>, and finding all intervals that contain a point\ntakes expected time <MATH><I>O(</I></MATH>log<MATH><I>n + k)</I></MATH>, where <MATH><I>k</I></MATH> is the number of\nintervals.\n<P>\n\nThe implementation is based on the code developed by Eric N.&nbsp;Hansen,\nwhich can be found at <TT>http://www-pub.cise.ufl.edu/~hanson/IS-lists/</TT>.\nAttention, this code has memory leaks.\n\n                   <div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Concept_Interval.html\"><I>Interval</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_56!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 38599.0}