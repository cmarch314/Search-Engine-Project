{"text": "Search LoginPreferencesHelp GuideAbout Trac WikiTimelineRoadmapBrowse SourceView TicketsSearch Context Navigation BlameRevision Log source nomatic tags NomaticIM 5 buddy bots src twisted internet posixbase py View diff against View revision Visit trunk Last change on this file was 712 checked in by cbaker 7 years ago First draft of nomatic buddy bots oscar bot is functional if you give it good authentication credentials jabber bot is just an example from the web File size 18 4 KB Line 1 test case name twisted test test internet 2 Id default py v 1 9 2 4 1 6 22 35 22 warner Exp 3 4 Copyright c 2 1 2 4 Twisted Matrix Laboratories 5 See LICENSE for details 678 Posix reactor base class91 API Stability stable1112Maintainer U Itamar Shtull Trauring mailto twisted itamarst org 13 1415import warnings16import socket17import errno18import os19import sys2 21from zope interface import implements classImplements2223from twisted internet interfaces import IReactorUNIX IReactorUNIXDatagram24from twisted internet interfaces import IReactorTCP IReactorUDP IReactorSSL IReactorArbitrary25from twisted internet interfaces import IReactorProcess IReactorMulticast26from twisted internet interfaces import IHalfCloseableDescriptor27from twisted internet import error28from twisted internet import tcp udp293 from twisted python import log threadable failure util31from twisted persisted import styles32from twisted python runtime import platformType platform3334from twisted internet base import ReactorBase3536try 37 from twisted internet import ssl38 sslEnabled True39except ImportError 4 sslEnabled False4142try 43 from twisted internet import unix44 unixEnabled True45except ImportError 46 unixEnabled False4748processEnabled False49if platformType posix 5 from twisted internet import fdesc51 import process52 processEnabled True5354if platform isWindows 55 try 56 import win32process57 processEnabled True58 except ImportError 59 win32process None6 6162class Win32Waker log Logger styles Ephemeral 63 I am a workaround for the lack of pipes on win32 6465 I am a pair of connected sockets which can wake up the main loop66 from another thread 67 68 disconnected 697 def init self reactor 71 Initialize 72 73 self reactor reactor74 Following select trigger from asyncore s example 75 server socket socket socket AF INET socket SOCK STREAM 76 client socket socket socket AF INET socket SOCK STREAM 77 client setsockopt socket IPPROTO TCP 1 1 78 server bind 127 1 79 server listen 1 8 client connect server getsockname 81 reader clientaddr server accept 82 client setblocking 83 reader setblocking 84 self r reader85 self w client86 self fileno self r fileno8788 def wakeUp self 89 Send a byte to my connection 9 91 try 92 util untilConcludes self w send x 93 except socket error err msg 94 if err errno WSAEWOULDBLOCK 95 raise9697 def doRead self 98 Read some data from my connection 99 1 try 1 1 self r recv 8192 1 2 except socket error 1 3 pass1 41 5 def connectionLost self reason 1 6 self r close 1 7 self w close 1 8 self reactor waker None1 911 class UnixWaker log Logger styles Ephemeral 111 This class provides a simple interface to wake up the event loop 112113 This is used by threads or signals to wake up the event loop 114 115 disconnected 116117 i None118 o None11912 def init self reactor 121 Initialize 122 123 self reactor reactor124 self i self o os pipe 125 fdesc setNonBlocking self i 126 fdesc setNonBlocking self o 127 self fileno lambda self i128129 def doRead self 13 Read some bytes from the pipe 131 132 fdesc readFromFD self fileno lambda data None 133134 def wakeUp self 135 Write one byte to the pipe and flush it 136 137 if self o is not None 138 try 139 util untilConcludes os write self o x 14 except OSError e 141 if e errno errno EAGAIN 142 raise143144 def connectionLost self reason 145 Close both ends of my pipe 146 147 if not hasattr self o 148 return149 for fd in self i self o 15 try 151 os close fd 152 except IOError 153 pass154 del self i self o155 self reactor waker None156157158if platformType posix 159 Waker UnixWaker16 elif platformType win32 161 Waker Win32Waker162163164class PosixReactorBase ReactorBase 165 A basis for reactors that use file descriptors 166 167 implements IReactorArbitrary IReactorTCP IReactorUDP IReactorMulticast 168169 def init self 17 ReactorBase init self 171 if self usingThreads or platformType posix 172 self installWaker 173174 def handleSignals self 175 Install the signal handlers for the Twisted event loop 176 try 177 import signal178 except ImportError 179 log msg Warning signal module unavailable not installing signal handlers 18 return181182 if signal getsignal signal SIGINT signal default int handler 183 only handle if there isn t already a handler e g for Pdb 184 signal signal signal SIGINT self sigInt 185 signal signal signal SIGTERM self sigTerm 186187 Catch Ctrl Break in windows188 if hasattr signal SIGBREAK 189 signal signal signal SIGBREAK self sigBreak 19 191 if platformType posix 192 signal signal signal SIGCHLD self handleSigchld 193194 def handleSigchld self signum frame threadSupport platform supportsThreads 195 Reap all processes on SIGCHLD 196197 This gets called on SIGCHLD We do no processing inside a signal198 handler as the calls we make here could occur between any two199 python bytecode instructions Deferring processing to the next2 eventloop round prevents us from violating the state constraints2 1 of arbitrary classes 2 2 2 3 if threadSupport 2 4 self callFromThread process reapAllProcesses 2 5 else 2 6 self callLater process reapAllProcesses 2 72 8 def startRunning self installSignalHandlers 1 2 9 Just in case we re started on a different thread than21 we re made on211 threadable registerAsIOThread 212213 self fireSystemEvent startup 214 if installSignalHandlers 215 self handleSignals 216 self running 1217218 def run self installSignalHandlers 1 219 self startRunning installSignalHandlers installSignalHandlers 22 self mainLoop 221222 def mainLoop self 223 while self running 224 try 225 while self running 226 Advance simulation time in delayed event227 processors 228 self runUntilCurrent 229 t2 self timeout 23 t self running and t2231 self doIteration t 232 except 233 log msg Unexpected error in main loop 234 log deferr 235 else 236 log msg Main loop terminated 237238 def disconnectSelectable self selectable why isRead faildict 239 error ConnectionDone failure Failure error ConnectionDone 24 error ConnectionLost failure Failure error ConnectionLost 241 242 Utility function for disconnecting a selectable 243244 Supports half close notification isRead should be boolean indicating245 whether error resulted from doRead 246 247 self removeReader selectable 248 f faildict get why class 249 if f 25 if isRead and why class error ConnectionDone251 and IHalfCloseableDescriptor providedBy selectable 252 selectable readConnectionLost f 253 else 254 self removeWriter selectable 255 selectable connectionLost f 256 else 257 self removeWriter selectable 258 selectable connectionLost failure Failure why 25926 def installWaker self 261 Install a waker to allow threads and signals to wake up the IO thread 262263 We use the self pipe trick http cr yp to docs selfpipe html to wake264 the reactor On Windows we use a pair of sockets 265 266 if not self waker 267 self waker Waker self 268 self addReader self waker 26927 271 IReactorProcess272273 def checkProcessArgs self args env 274 275 Check for valid arguments and environment to spawnProcess 276277 return A two element tuple giving values to use when creating the278 process The first element of the tuple is a C list of C str 279 giving the values for argv of the child process The second element28 of the tuple is either C None if C env was C None or a C dict 281 mapping C str environment keys to C str environment values 282 283 Any unicode string which Python would successfully implicitly284 encode to a byte string would have worked before these explicit285 checks were added Anything which would have failed with a286 UnicodeEncodeError during that implicit encoding step would have287 raised an exception in the child process and that would have been288 a pain in the butt to debug 289 29 So we will explicitly attempt the same encoding which Python291 would implicitly do later If it fails we will report an error292 without ever spawning a child process If it succeeds we ll save293 the result so that Python doesn t need to do it implicitly later 294 295 For any unicode which we can actually encode we ll also issue a296 deprecation warning because no one should be passing unicode here297 anyway 298 299 exarkun3 defaultEncoding sys getdefaultencoding 3 13 2 Common check function3 3 def argChecker arg 3 4 3 5 Return either a str or None If the given value is not3 6 allowable for some reason None is returned Otherwise a3 7 possibly different object which should be used in place of arg3 8 is returned This forces unicode encoding to happen now rather3 9 than implicitly later 31 311 if isinstance arg unicode 312 try 313 arg arg encode defaultEncoding 314 except UnicodeEncodeError 315 return None316 warnings warn 317 Argument strings and environment keys values passed to 318 reactor spawnProcess should be str not unicode 319 category DeprecationWarning 32 stacklevel 4 321 if isinstance arg str and not in arg 322 return arg323 return None324325 Make a few tests to check input validity326 if not isinstance args tuple list 327 raise TypeError Arguments must be a tuple or list 328 329 outputArgs 33 for arg in args 331 arg argChecker arg 332 if arg is None 333 raise TypeError Arguments contain a non string value 334 else 335 outputArgs append arg 336337 outputEnv None338 if env is not None 339 outputEnv 34 for key val in env iteritems 341 key argChecker key 342 if key is None 343 raise TypeError Environment contains a non string key 344 val argChecker val 345 if val is None 346 raise TypeError Environment contains a non string value 347 outputEnv key val348 return outputArgs outputEnv34935 351 def spawnProcess self processProtocol executable args 352 env path None 353 uid None gid None usePTY childFDs None 354 args env self checkProcessArgs args env 355 if platformType posix 356 if usePTY 357 if childFDs is not None 358 raise ValueError Using childFDs is not supported with usePTY True 359 return process PTYProcess self executable args env path 36 processProtocol uid gid usePTY 361 else 362 return process Process self executable args env path 363 processProtocol uid gid childFDs 364 elif platformType win32 365 if uid is not None or gid is not None 366 raise ValueError The uid and gid parameters are not supported on Windows 367 if usePTY 368 raise ValueError The usePTY parameter is not supported on Windows 369 if childFDs 37 raise ValueError Customizing childFDs is not supported on Windows 371372 if win32process 373 from twisted internet dumbwin32proc import Process374 return Process self processProtocol executable args env path 375 else 376 raise NotImplementedError spawnProcess not available since pywin32 is not installed 377 else 378 raise NotImplementedError spawnProcess only available on Windows or POSIX 37938 IReactorUDP381382 def listenUDP self port protocol interface maxPacketSize 8192 383 Connects a given L DatagramProtocol to the given numeric UDP port 384385 returns object conforming to L IListeningPort 386 387 p udp Port port protocol interface maxPacketSize self 388 p startListening 389 return p39 391 def connectUDP self remotehost remoteport protocol localport 392 interface maxPacketSize 8192 393 DEPRECATED 394395 Connects a L ConnectedDatagramProtocol instance to a UDP port 396 397 warnings warn use listenUDP and then transport connect DeprecationWarning stacklevel 2 398 p udp ConnectedPort remotehost remoteport localport protocol interface maxPacketSize self 399 p startListening 4 return p4 14 24 3 IReactorMulticast4 44 5 def listenMulticast self port protocol interface maxPacketSize 8192 listenMultiple False 4 6 Connects a given DatagramProtocol to the given numeric UDP port 4 74 8 EXPERIMENTAL 4 941 returns object conforming to IListeningPort 411 412 p udp MulticastPort port protocol interface maxPacketSize self listenMultiple 413 p startListening 414 return p415416417 IReactorUNIX418419 def connectUNIX self address factory timeout 3 checkPID 42 see twisted internet interfaces IReactorUNIX connectUNIX421 422 assert unixEnabled UNIX support is not present 423 c unix Connector address factory timeout self checkPID 424 c connect 425 return c426427 def listenUNIX self address factory backlog 5 mode 666 wantPID 428 see twisted internet interfaces IReactorUNIX listenUNIX429 43 assert unixEnabled UNIX support is not present 431 p unix Port address factory backlog mode self wantPID 432 p startListening 433 return p434435436 IReactorUNIXDatagram437438 def listenUNIXDatagram self address protocol maxPacketSize 8192 mode 666 439 Connects a given L DatagramProtocol to the given path 44 441 EXPERIMENTAL 442443 returns object conforming to L IListeningPort 444 445 assert unixEnabled UNIX support is not present 446 p unix DatagramPort address protocol maxPacketSize mode self 447 p startListening 448 return p44945 def connectUNIXDatagram self address protocol maxPacketSize 8192 mode 666 bindAddress None 451 Connects a L ConnectedDatagramProtocol instance to a path 452453 EXPERIMENTAL 454 455 assert unixEnabled UNIX support is not present 456 p unix ConnectedDatagramPort address protocol maxPacketSize mode bindAddress self 457 p startListening 458 return p45946 461 IReactorTCP462463 def listenTCP self port factory backlog 5 interface 464 see twisted internet interfaces IReactorTCP listenTCP465 466 p tcp Port port factory backlog interface self 467 p startListening 468 return p46947 def connectTCP self host port factory timeout 3 bindAddress None 471 see twisted internet interfaces IReactorTCP connectTCP472 473 c tcp Connector host port factory timeout bindAddress self 474 c connect 475 return c476477 IReactorSSL sometimes not implemented 478479 def connectSSL self host port factory contextFactory timeout 3 bindAddress None 48 see twisted internet interfaces IReactorSSL connectSSL481 482 assert sslEnabled SSL support is not present 483 c ssl Connector host port factory contextFactory timeout bindAddress self 484 c connect 485 return c486487 def listenSSL self port factory contextFactory backlog 5 interface 488 see twisted internet interfaces IReactorSSL listenSSL489 49 assert sslEnabled SSL support is not present 491 p ssl Port port factory contextFactory backlog interface self 492 p startListening 493 return p494495 IReactorArbitrary496 def listenWith self portType args kw 497 kw reactor self498 p portType args kw 499 p startListening 5 return p5 15 2 def connectWith self connectorType args kw 5 3 kw reactor self5 4 c connectorType args kw 5 5 c connect 5 6 return c5 75 8 def removeAll self readers writers 5 9 51 Remove all readers and writers and return list of Selectables 511512 Meant for calling from subclasses to implement removeAll like 513514 def removeAll self 515 return self removeAll reads writes 516517 where C reads and C writes are iterables 518 519 readers reader for reader in readers if52 reader is not self waker 521522 readers dict 523 for reader in readers 524 readers dict reader 1525526 for reader in readers 527 self removeReader reader 528 self removeWriter reader 52953 writers writer for writer in writers if531 writer not in readers dict 532 for writer in writers 533 self removeWriter writer 534535 return readers writers536537538if sslEnabled 539 classImplements PosixReactorBase IReactorSSL 54 if unixEnabled 541 classImplements PosixReactorBase IReactorUNIX IReactorUNIXDatagram 542if processEnabled 543 classImplements PosixReactorBase IReactorProcess 544545 all PosixReactorBase Note See TracBrowser for help on using the repository browser Download in other formats Plain Text Original Format Powered by Trac 1 1 By Edgewall Software All content copyright 2 7 2 8 by LUCI http luci ics uci edu ", "_id": "http://djp3-pc2.ics.uci.edu/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/posixbase.py", "title": "\n      posixbase.py in nomatic/tags/nomaticim-0.0.5/buddy_bots/src/twisted/internet\n     \u2013 nomatic*im\n    ", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n  \n\n\n  <head>\n\t\t<title>\n      posixbase.py in nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet\n     \u2013 Nomatic*IM\n    </title><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><link rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search\" /><link rel=\"help\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/posixbase.py?format=txt\" type=\"text/plain\" title=\"Plain Text\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/posixbase.py\" type=\"application/x-python; charset=iso-8859-15\" title=\"Original Format\" /><link rel=\"start\" href=\"/LUCICodeRepository/nomaticIM/wiki\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/code.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/pygments/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/browser.css\" type=\"text/css\" /><link rel=\"shortcut icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link rel=\"icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link type=\"application/opensearchdescription+xml\" rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search/opensearch\" title=\"Search Nomatic*IM\" /><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/jquery.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/babel.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/messages/en_US.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/trac.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/search.js\"></script><script type=\"text/javascript\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/folding.js\"></script><script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\".trac-toggledeleted\").show().click(function() {\n                  $(this).siblings().find(\".trac-deleted\").toggle();\n                  return false;\n        }).click();\n        $(\"#jumploc input\").hide();\n        $(\"#jumploc select\").change(function () {\n          this.parentNode.parentNode.submit();\n        });\n          $('#preview table.code').enableCollapsibleColumns($('#preview table.code thead th.content'));\n      });\n    </script>\n\t</head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://luci.ics.uci.edu/#code\"><img src=\"http://luci.ics.uci.edu/blog/archives/LUCIhorzTight.jpg\" alt=\"LUCI Code Repository\" /></a>\n      </div>\n      <form id=\"search\" action=\"/LUCICodeRepository/nomaticIM/search\" method=\"get\">\n        <div>\n          <label for=\"proj-search\">Search:</label>\n          <input type=\"text\" id=\"proj-search\" name=\"q\" size=\"18\" value=\"\" />\n          <input type=\"submit\" value=\"Search\" />\n        </div>\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/login\">Login</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/prefs\">Preferences</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\">Help/Guide</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/wiki\">Wiki</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/timeline\">Timeline</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/roadmap\">Roadmap</a></li><li class=\"active\"><a href=\"/LUCICodeRepository/nomaticIM/browser\">Browse Source</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/report\">View Tickets</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/search\">Search</a></li>\n    </ul>\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/buddy_bots/twisted/internet/posixbase.py?annotate=blame\" title=\"Annotate each line with the last changed revision (this can be time consuming...)\">Blame</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/log/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/posixbase.py\">Revision Log</a></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"browser\">\n        <h1>\n          \n<a class=\"pathentry first\" href=\"/LUCICodeRepository/nomaticIM/browser?order=name\" title=\"Go to repository root\">source:</a>\n<a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic?order=name\" title=\"View nomatic\">nomatic</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags?order=name\" title=\"View tags\">tags</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5?order=name\" title=\"View NomaticIM-0.0.5\">NomaticIM-0.0.5</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots?order=name\" title=\"View buddy_bots\">buddy_bots</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src?order=name\" title=\"View src\">src</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted?order=name\" title=\"View twisted\">twisted</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet?order=name\" title=\"View internet\">internet</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/posixbase.py?order=name\" title=\"View posixbase.py\">posixbase.py</a>\n<br style=\"clear: both\" />\n\n        </h1>\n        <div id=\"diffrev\">\n          <form action=\"/LUCICodeRepository/nomaticIM/changeset\" method=\"get\">\n            <div>\n              <label title=\"Show the diff against a specific revision\">\n                View diff against: <input type=\"text\" name=\"old\" size=\"6\" />\n                <input type=\"hidden\" name=\"old_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/posixbase.py\" />\n                <input type=\"hidden\" name=\"new\" />\n                <input type=\"hidden\" name=\"new_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/posixbase.py\" />\n              </label>\n            </div>\n          </form>\n        </div>\n        <div id=\"jumprev\">\n          <form action=\"\" method=\"get\">\n            <div>\n              <label for=\"rev\">\n                View revision:</label>\n              <input type=\"text\" id=\"rev\" name=\"rev\" size=\"6\" />\n            </div>\n          </form>\n        </div>\n        <div id=\"jumploc\">\n          <form action=\"\" method=\"get\">\n            <div class=\"buttons\">\n              <label for=\"preselected\">Visit:</label>\n              <select id=\"preselected\" name=\"preselected\">\n                <option selected=\"selected\"></option>\n                <optgroup label=\"branches\">\n                  <option value=\"/LUCICodeRepository/nomaticIM/browser/trunk\">trunk</option>\n                </optgroup>\n              </select>\n              <input type=\"submit\" value=\"Go!\" title=\"Jump to the chosen preselected path\" />\n            </div>\n          </form>\n        </div>\n        <div class=\"trac-tags\">\n        </div>\n      <table id=\"info\" summary=\"Revision info\">\n        <tr>\n          <th>\n                <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/nomatic/trunk/buddy_bots/twisted/internet/posixbase.py\" title=\"View differences\">Last change</a>\n                  on this file was\n                  <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/\" title=\"View changeset 712\">712</a>,\n                  checked in by cbaker, <a class=\"timeline\" href=\"/LUCICodeRepository/nomaticIM/timeline?from=2008-02-16T08%3A16%3A53-08%3A00&amp;precision=second\" title=\"See timeline at Feb 16, 2008, 8:16:53 AM\">7 years ago</a>\n          </th>\n        </tr>\n        <tr>\n          <td class=\"message searchable\">\n              <p>\nFirst draft of nomatic buddy bots. oscar_bot is functional if you give it good authentication credentials, jabber_bot is just an example from the web <br />\n</p>\n          </td>\n        </tr>\n        <tr><td colspan=\"2\">\n            <strong>File size:</strong>\n            <span title=\"18828 bytes\">18.4 KB</span>\n          </td></tr>\n      </table>\n      <div id=\"preview\" class=\"searchable\">\n        \n  <table class=\"code\"><thead><tr><th class=\"lineno\" title=\"Line numbers\">Line</th><th class=\"content\">\u00a0</th></tr></thead><tbody><tr><th id=\"L1\"><a href=\"#L1\">1</a></th><td><span class=\"c\"># -*- test-case-name: twisted.test.test_internet -*-</span></td></tr><tr><th id=\"L2\"><a href=\"#L2\">2</a></th><td><span class=\"c\"># $Id: default.py,v 1.90 2004/01/06 22:35:22 warner Exp $</span></td></tr><tr><th id=\"L3\"><a href=\"#L3\">3</a></th><td><span class=\"c\">#</span></td></tr><tr><th id=\"L4\"><a href=\"#L4\">4</a></th><td><span class=\"c\"># Copyright (c) 2001-2004 Twisted Matrix Laboratories.</span></td></tr><tr><th id=\"L5\"><a href=\"#L5\">5</a></th><td><span class=\"c\"># See LICENSE for details.</span></td></tr><tr><th id=\"L6\"><a href=\"#L6\">6</a></th><td></td></tr><tr><th id=\"L7\"><a href=\"#L7\">7</a></th><td></td></tr><tr><th id=\"L8\"><a href=\"#L8\">8</a></th><td><span class=\"sd\">\"\"\"Posix reactor base class</span></td></tr><tr><th id=\"L9\"><a href=\"#L9\">9</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L10\"><a href=\"#L10\">10</a></th><td><span class=\"sd\">API Stability: stable</span></td></tr><tr><th id=\"L11\"><a href=\"#L11\">11</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L12\"><a href=\"#L12\">12</a></th><td><span class=\"sd\">Maintainer: U{Itamar Shtull-Trauring&lt;mailto:twisted@itamarst.org&gt;}</span></td></tr><tr><th id=\"L13\"><a href=\"#L13\">13</a></th><td><span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L14\"><a href=\"#L14\">14</a></th><td></td></tr><tr><th id=\"L15\"><a href=\"#L15\">15</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">warnings</span></td></tr><tr><th id=\"L16\"><a href=\"#L16\">16</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">socket</span></td></tr><tr><th id=\"L17\"><a href=\"#L17\">17</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">errno</span></td></tr><tr><th id=\"L18\"><a href=\"#L18\">18</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">os</span></td></tr><tr><th id=\"L19\"><a href=\"#L19\">19</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">sys</span></td></tr><tr><th id=\"L20\"><a href=\"#L20\">20</a></th><td></td></tr><tr><th id=\"L21\"><a href=\"#L21\">21</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">zope.interface</span>\u00a0<span class=\"kn\">import</span>\u00a0implements<span class=\"p\">,</span>\u00a0classImplements</td></tr><tr><th id=\"L22\"><a href=\"#L22\">22</a></th><td></td></tr><tr><th id=\"L23\"><a href=\"#L23\">23</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet.interfaces</span>\u00a0<span class=\"kn\">import</span>\u00a0IReactorUNIX<span class=\"p\">,</span>\u00a0IReactorUNIXDatagram</td></tr><tr><th id=\"L24\"><a href=\"#L24\">24</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet.interfaces</span>\u00a0<span class=\"kn\">import</span>\u00a0IReactorTCP<span class=\"p\">,</span>\u00a0IReactorUDP<span class=\"p\">,</span>\u00a0IReactorSSL<span class=\"p\">,</span>\u00a0IReactorArbitrary</td></tr><tr><th id=\"L25\"><a href=\"#L25\">25</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet.interfaces</span>\u00a0<span class=\"kn\">import</span>\u00a0IReactorProcess<span class=\"p\">,</span>\u00a0IReactorMulticast</td></tr><tr><th id=\"L26\"><a href=\"#L26\">26</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet.interfaces</span>\u00a0<span class=\"kn\">import</span>\u00a0IHalfCloseableDescriptor</td></tr><tr><th id=\"L27\"><a href=\"#L27\">27</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet</span>\u00a0<span class=\"kn\">import</span>\u00a0error</td></tr><tr><th id=\"L28\"><a href=\"#L28\">28</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet</span>\u00a0<span class=\"kn\">import</span>\u00a0tcp<span class=\"p\">,</span>\u00a0udp</td></tr><tr><th id=\"L29\"><a href=\"#L29\">29</a></th><td></td></tr><tr><th id=\"L30\"><a href=\"#L30\">30</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.python</span>\u00a0<span class=\"kn\">import</span>\u00a0log<span class=\"p\">,</span>\u00a0threadable<span class=\"p\">,</span>\u00a0failure<span class=\"p\">,</span>\u00a0util</td></tr><tr><th id=\"L31\"><a href=\"#L31\">31</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.persisted</span>\u00a0<span class=\"kn\">import</span>\u00a0styles</td></tr><tr><th id=\"L32\"><a href=\"#L32\">32</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.python.runtime</span>\u00a0<span class=\"kn\">import</span>\u00a0platformType<span class=\"p\">,</span>\u00a0platform</td></tr><tr><th id=\"L33\"><a href=\"#L33\">33</a></th><td></td></tr><tr><th id=\"L34\"><a href=\"#L34\">34</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet.base</span>\u00a0<span class=\"kn\">import</span>\u00a0ReactorBase</td></tr><tr><th id=\"L35\"><a href=\"#L35\">35</a></th><td></td></tr><tr><th id=\"L36\"><a href=\"#L36\">36</a></th><td><span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L37\"><a href=\"#L37\">37</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet</span>\u00a0<span class=\"kn\">import</span>\u00a0ssl</td></tr><tr><th id=\"L38\"><a href=\"#L38\">38</a></th><td>\u00a0 \u00a0 sslEnabled <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L39\"><a href=\"#L39\">39</a></th><td><span class=\"k\">except</span>\u00a0<span class=\"ne\">ImportError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L40\"><a href=\"#L40\">40</a></th><td>\u00a0 \u00a0 sslEnabled <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L41\"><a href=\"#L41\">41</a></th><td></td></tr><tr><th id=\"L42\"><a href=\"#L42\">42</a></th><td><span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L43\"><a href=\"#L43\">43</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet</span>\u00a0<span class=\"kn\">import</span>\u00a0unix</td></tr><tr><th id=\"L44\"><a href=\"#L44\">44</a></th><td>\u00a0 \u00a0 unixEnabled <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L45\"><a href=\"#L45\">45</a></th><td><span class=\"k\">except</span>\u00a0<span class=\"ne\">ImportError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L46\"><a href=\"#L46\">46</a></th><td>\u00a0 \u00a0 unixEnabled <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L47\"><a href=\"#L47\">47</a></th><td></td></tr><tr><th id=\"L48\"><a href=\"#L48\">48</a></th><td>processEnabled <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L49\"><a href=\"#L49\">49</a></th><td><span class=\"k\">if</span>\u00a0platformType <span class=\"o\">==</span>\u00a0<span class=\"s\">'posix'</span><span class=\"p\">:</span></td></tr><tr><th id=\"L50\"><a href=\"#L50\">50</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet</span>\u00a0<span class=\"kn\">import</span>\u00a0fdesc</td></tr><tr><th id=\"L51\"><a href=\"#L51\">51</a></th><td>\u00a0 \u00a0 <span class=\"kn\">import</span>\u00a0<span class=\"nn\">process</span></td></tr><tr><th id=\"L52\"><a href=\"#L52\">52</a></th><td>\u00a0 \u00a0 processEnabled <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L53\"><a href=\"#L53\">53</a></th><td></td></tr><tr><th id=\"L54\"><a href=\"#L54\">54</a></th><td><span class=\"k\">if</span>\u00a0platform<span class=\"o\">.</span>isWindows<span class=\"p\">():</span></td></tr><tr><th id=\"L55\"><a href=\"#L55\">55</a></th><td>\u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L56\"><a href=\"#L56\">56</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"kn\">import</span>\u00a0<span class=\"nn\">win32process</span></td></tr><tr><th id=\"L57\"><a href=\"#L57\">57</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 processEnabled <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L58\"><a href=\"#L58\">58</a></th><td>\u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">ImportError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L59\"><a href=\"#L59\">59</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 win32process <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L60\"><a href=\"#L60\">60</a></th><td></td></tr><tr><th id=\"L61\"><a href=\"#L61\">61</a></th><td></td></tr><tr><th id=\"L62\"><a href=\"#L62\">62</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">_Win32Waker</span><span class=\"p\">(</span>log<span class=\"o\">.</span>Logger<span class=\"p\">,</span>\u00a0styles<span class=\"o\">.</span>Ephemeral<span class=\"p\">):</span></td></tr><tr><th id=\"L63\"><a href=\"#L63\">63</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"I am a workaround for the lack of pipes on win32.</span></td></tr><tr><th id=\"L64\"><a href=\"#L64\">64</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L65\"><a href=\"#L65\">65</a></th><td><span class=\"sd\">\u00a0 \u00a0 I am a pair of connected sockets which can wake up the main loop</span></td></tr><tr><th id=\"L66\"><a href=\"#L66\">66</a></th><td><span class=\"sd\">\u00a0 \u00a0 from another thread.</span></td></tr><tr><th id=\"L67\"><a href=\"#L67\">67</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L68\"><a href=\"#L68\">68</a></th><td>\u00a0 \u00a0 disconnected <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L69\"><a href=\"#L69\">69</a></th><td></td></tr><tr><th id=\"L70\"><a href=\"#L70\">70</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reactor<span class=\"p\">):</span></td></tr><tr><th id=\"L71\"><a href=\"#L71\">71</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Initialize.</span></td></tr><tr><th id=\"L72\"><a href=\"#L72\">72</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L73\"><a href=\"#L73\">73</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>reactor <span class=\"o\">=</span>\u00a0reactor</td></tr><tr><th id=\"L74\"><a href=\"#L74\">74</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Following select_trigger (from asyncore)'s example;</span></td></tr><tr><th id=\"L75\"><a href=\"#L75\">75</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 server <span class=\"o\">=</span>\u00a0socket<span class=\"o\">.</span>socket<span class=\"p\">(</span>socket<span class=\"o\">.</span>AF_INET<span class=\"p\">,</span>\u00a0socket<span class=\"o\">.</span>SOCK_STREAM<span class=\"p\">)</span></td></tr><tr><th id=\"L76\"><a href=\"#L76\">76</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 client <span class=\"o\">=</span>\u00a0socket<span class=\"o\">.</span>socket<span class=\"p\">(</span>socket<span class=\"o\">.</span>AF_INET<span class=\"p\">,</span>\u00a0socket<span class=\"o\">.</span>SOCK_STREAM<span class=\"p\">)</span></td></tr><tr><th id=\"L77\"><a href=\"#L77\">77</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 client<span class=\"o\">.</span>setsockopt<span class=\"p\">(</span>socket<span class=\"o\">.</span>IPPROTO_TCP<span class=\"p\">,</span>\u00a0<span class=\"mi\">1</span><span class=\"p\">,</span>\u00a0<span class=\"mi\">1</span><span class=\"p\">)</span></td></tr><tr><th id=\"L78\"><a href=\"#L78\">78</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 server<span class=\"o\">.</span>bind<span class=\"p\">((</span><span class=\"s\">'127.0.0.1'</span><span class=\"p\">,</span>\u00a0<span class=\"mi\">0</span><span class=\"p\">))</span></td></tr><tr><th id=\"L79\"><a href=\"#L79\">79</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 server<span class=\"o\">.</span>listen<span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span></td></tr><tr><th id=\"L80\"><a href=\"#L80\">80</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 client<span class=\"o\">.</span>connect<span class=\"p\">(</span>server<span class=\"o\">.</span>getsockname<span class=\"p\">())</span></td></tr><tr><th id=\"L81\"><a href=\"#L81\">81</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 reader<span class=\"p\">,</span>\u00a0clientaddr <span class=\"o\">=</span>\u00a0server<span class=\"o\">.</span>accept<span class=\"p\">()</span></td></tr><tr><th id=\"L82\"><a href=\"#L82\">82</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 client<span class=\"o\">.</span>setblocking<span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span></td></tr><tr><th id=\"L83\"><a href=\"#L83\">83</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 reader<span class=\"o\">.</span>setblocking<span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span></td></tr><tr><th id=\"L84\"><a href=\"#L84\">84</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>r <span class=\"o\">=</span>\u00a0reader</td></tr><tr><th id=\"L85\"><a href=\"#L85\">85</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>w <span class=\"o\">=</span>\u00a0client</td></tr><tr><th id=\"L86\"><a href=\"#L86\">86</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>fileno <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>r<span class=\"o\">.</span>fileno</td></tr><tr><th id=\"L87\"><a href=\"#L87\">87</a></th><td></td></tr><tr><th id=\"L88\"><a href=\"#L88\">88</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">wakeUp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L89\"><a href=\"#L89\">89</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Send a byte to my connection.</span></td></tr><tr><th id=\"L90\"><a href=\"#L90\">90</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L91\"><a href=\"#L91\">91</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L92\"><a href=\"#L92\">92</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 util<span class=\"o\">.</span>untilConcludes<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>w<span class=\"o\">.</span>send<span class=\"p\">,</span>\u00a0<span class=\"s\">'x'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L93\"><a href=\"#L93\">93</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0socket<span class=\"o\">.</span>error<span class=\"p\">,</span>\u00a0<span class=\"p\">(</span>err<span class=\"p\">,</span>\u00a0msg<span class=\"p\">):</span></td></tr><tr><th id=\"L94\"><a href=\"#L94\">94</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0err <span class=\"o\">!=</span>\u00a0errno<span class=\"o\">.</span>WSAEWOULDBLOCK<span class=\"p\">:</span></td></tr><tr><th id=\"L95\"><a href=\"#L95\">95</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span></td></tr><tr><th id=\"L96\"><a href=\"#L96\">96</a></th><td></td></tr><tr><th id=\"L97\"><a href=\"#L97\">97</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">doRead</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L98\"><a href=\"#L98\">98</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Read some data from my connection.</span></td></tr><tr><th id=\"L99\"><a href=\"#L99\">99</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L100\"><a href=\"#L100\">100</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L101\"><a href=\"#L101\">101</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>r<span class=\"o\">.</span>recv<span class=\"p\">(</span><span class=\"mi\">8192</span><span class=\"p\">)</span></td></tr><tr><th id=\"L102\"><a href=\"#L102\">102</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0socket<span class=\"o\">.</span>error<span class=\"p\">:</span></td></tr><tr><th id=\"L103\"><a href=\"#L103\">103</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L104\"><a href=\"#L104\">104</a></th><td></td></tr><tr><th id=\"L105\"><a href=\"#L105\">105</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectionLost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reason<span class=\"p\">):</span></td></tr><tr><th id=\"L106\"><a href=\"#L106\">106</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>r<span class=\"o\">.</span>close<span class=\"p\">()</span></td></tr><tr><th id=\"L107\"><a href=\"#L107\">107</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>w<span class=\"o\">.</span>close<span class=\"p\">()</span></td></tr><tr><th id=\"L108\"><a href=\"#L108\">108</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>reactor<span class=\"o\">.</span>waker <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L109\"><a href=\"#L109\">109</a></th><td></td></tr><tr><th id=\"L110\"><a href=\"#L110\">110</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">_UnixWaker</span><span class=\"p\">(</span>log<span class=\"o\">.</span>Logger<span class=\"p\">,</span>\u00a0styles<span class=\"o\">.</span>Ephemeral<span class=\"p\">):</span></td></tr><tr><th id=\"L111\"><a href=\"#L111\">111</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"This class provides a simple interface to wake up the event loop.</span></td></tr><tr><th id=\"L112\"><a href=\"#L112\">112</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L113\"><a href=\"#L113\">113</a></th><td><span class=\"sd\">\u00a0 \u00a0 This is used by threads or signals to wake up the event loop.</span></td></tr><tr><th id=\"L114\"><a href=\"#L114\">114</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L115\"><a href=\"#L115\">115</a></th><td>\u00a0 \u00a0 disconnected <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L116\"><a href=\"#L116\">116</a></th><td></td></tr><tr><th id=\"L117\"><a href=\"#L117\">117</a></th><td>\u00a0 \u00a0 i <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L118\"><a href=\"#L118\">118</a></th><td>\u00a0 \u00a0 o <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L119\"><a href=\"#L119\">119</a></th><td></td></tr><tr><th id=\"L120\"><a href=\"#L120\">120</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reactor<span class=\"p\">):</span></td></tr><tr><th id=\"L121\"><a href=\"#L121\">121</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Initialize.</span></td></tr><tr><th id=\"L122\"><a href=\"#L122\">122</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L123\"><a href=\"#L123\">123</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>reactor <span class=\"o\">=</span>\u00a0reactor</td></tr><tr><th id=\"L124\"><a href=\"#L124\">124</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>i<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>o <span class=\"o\">=</span>\u00a0os<span class=\"o\">.</span>pipe<span class=\"p\">()</span></td></tr><tr><th id=\"L125\"><a href=\"#L125\">125</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 fdesc<span class=\"o\">.</span>setNonBlocking<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>i<span class=\"p\">)</span></td></tr><tr><th id=\"L126\"><a href=\"#L126\">126</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 fdesc<span class=\"o\">.</span>setNonBlocking<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>o<span class=\"p\">)</span></td></tr><tr><th id=\"L127\"><a href=\"#L127\">127</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>fileno <span class=\"o\">=</span>\u00a0<span class=\"k\">lambda</span><span class=\"p\">:</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>i</td></tr><tr><th id=\"L128\"><a href=\"#L128\">128</a></th><td></td></tr><tr><th id=\"L129\"><a href=\"#L129\">129</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">doRead</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L130\"><a href=\"#L130\">130</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Read some bytes from the pipe.</span></td></tr><tr><th id=\"L131\"><a href=\"#L131\">131</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L132\"><a href=\"#L132\">132</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 fdesc<span class=\"o\">.</span>readFromFD<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>fileno<span class=\"p\">(),</span>\u00a0<span class=\"k\">lambda</span>\u00a0data<span class=\"p\">:</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">)</span></td></tr><tr><th id=\"L133\"><a href=\"#L133\">133</a></th><td></td></tr><tr><th id=\"L134\"><a href=\"#L134\">134</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">wakeUp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L135\"><a href=\"#L135\">135</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Write one byte to the pipe, and flush it.</span></td></tr><tr><th id=\"L136\"><a href=\"#L136\">136</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L137\"><a href=\"#L137\">137</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>o <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L138\"><a href=\"#L138\">138</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L139\"><a href=\"#L139\">139</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 util<span class=\"o\">.</span>untilConcludes<span class=\"p\">(</span>os<span class=\"o\">.</span>write<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>o<span class=\"p\">,</span>\u00a0<span class=\"s\">'x'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L140\"><a href=\"#L140\">140</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">OSError</span><span class=\"p\">,</span>\u00a0e<span class=\"p\">:</span></td></tr><tr><th id=\"L141\"><a href=\"#L141\">141</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0e<span class=\"o\">.</span>errno <span class=\"o\">!=</span>\u00a0errno<span class=\"o\">.</span>EAGAIN<span class=\"p\">:</span></td></tr><tr><th id=\"L142\"><a href=\"#L142\">142</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span></td></tr><tr><th id=\"L143\"><a href=\"#L143\">143</a></th><td></td></tr><tr><th id=\"L144\"><a href=\"#L144\">144</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectionLost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reason<span class=\"p\">):</span></td></tr><tr><th id=\"L145\"><a href=\"#L145\">145</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Close both ends of my pipe.</span></td></tr><tr><th id=\"L146\"><a href=\"#L146\">146</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L147\"><a href=\"#L147\">147</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"o\"</span><span class=\"p\">):</span></td></tr><tr><th id=\"L148\"><a href=\"#L148\">148</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span></td></tr><tr><th id=\"L149\"><a href=\"#L149\">149</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0fd <span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>i<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>o<span class=\"p\">:</span></td></tr><tr><th id=\"L150\"><a href=\"#L150\">150</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L151\"><a href=\"#L151\">151</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os<span class=\"o\">.</span>close<span class=\"p\">(</span>fd<span class=\"p\">)</span></td></tr><tr><th id=\"L152\"><a href=\"#L152\">152</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">IOError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L153\"><a href=\"#L153\">153</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L154\"><a href=\"#L154\">154</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>i<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>o</td></tr><tr><th id=\"L155\"><a href=\"#L155\">155</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>reactor<span class=\"o\">.</span>waker <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L156\"><a href=\"#L156\">156</a></th><td></td></tr><tr><th id=\"L157\"><a href=\"#L157\">157</a></th><td></td></tr><tr><th id=\"L158\"><a href=\"#L158\">158</a></th><td><span class=\"k\">if</span>\u00a0platformType <span class=\"o\">==</span>\u00a0<span class=\"s\">'posix'</span><span class=\"p\">:</span></td></tr><tr><th id=\"L159\"><a href=\"#L159\">159</a></th><td>\u00a0 \u00a0 _Waker <span class=\"o\">=</span>\u00a0_UnixWaker</td></tr><tr><th id=\"L160\"><a href=\"#L160\">160</a></th><td><span class=\"k\">elif</span>\u00a0platformType <span class=\"o\">==</span>\u00a0<span class=\"s\">'win32'</span><span class=\"p\">:</span></td></tr><tr><th id=\"L161\"><a href=\"#L161\">161</a></th><td>\u00a0 \u00a0 _Waker <span class=\"o\">=</span>\u00a0_Win32Waker</td></tr><tr><th id=\"L162\"><a href=\"#L162\">162</a></th><td></td></tr><tr><th id=\"L163\"><a href=\"#L163\">163</a></th><td></td></tr><tr><th id=\"L164\"><a href=\"#L164\">164</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">PosixReactorBase</span><span class=\"p\">(</span>ReactorBase<span class=\"p\">):</span></td></tr><tr><th id=\"L165\"><a href=\"#L165\">165</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"A basis for reactors that use file descriptors.</span></td></tr><tr><th id=\"L166\"><a href=\"#L166\">166</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L167\"><a href=\"#L167\">167</a></th><td>\u00a0 \u00a0 implements<span class=\"p\">(</span>IReactorArbitrary<span class=\"p\">,</span>\u00a0IReactorTCP<span class=\"p\">,</span>\u00a0IReactorUDP<span class=\"p\">,</span>\u00a0IReactorMulticast<span class=\"p\">)</span></td></tr><tr><th id=\"L168\"><a href=\"#L168\">168</a></th><td></td></tr><tr><th id=\"L169\"><a href=\"#L169\">169</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L170\"><a href=\"#L170\">170</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 ReactorBase<span class=\"o\">.</span>__init__<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L171\"><a href=\"#L171\">171</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>usingThreads <span class=\"ow\">or</span>\u00a0platformType <span class=\"o\">==</span>\u00a0<span class=\"s\">\"posix\"</span><span class=\"p\">:</span></td></tr><tr><th id=\"L172\"><a href=\"#L172\">172</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>installWaker<span class=\"p\">()</span></td></tr><tr><th id=\"L173\"><a href=\"#L173\">173</a></th><td></td></tr><tr><th id=\"L174\"><a href=\"#L174\">174</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_handleSignals</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L175\"><a href=\"#L175\">175</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Install the signal handlers for the Twisted event loop.\"\"\"</span></td></tr><tr><th id=\"L176\"><a href=\"#L176\">176</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L177\"><a href=\"#L177\">177</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"kn\">import</span>\u00a0<span class=\"nn\">signal</span></td></tr><tr><th id=\"L178\"><a href=\"#L178\">178</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">ImportError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L179\"><a href=\"#L179\">179</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log<span class=\"o\">.</span>msg<span class=\"p\">(</span><span class=\"s\">\"Warning: signal module unavailable -- not installing signal handlers.\"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L180\"><a href=\"#L180\">180</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span></td></tr><tr><th id=\"L181\"><a href=\"#L181\">181</a></th><td></td></tr><tr><th id=\"L182\"><a href=\"#L182\">182</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0signal<span class=\"o\">.</span>getsignal<span class=\"p\">(</span>signal<span class=\"o\">.</span>SIGINT<span class=\"p\">)</span>\u00a0<span class=\"o\">==</span>\u00a0signal<span class=\"o\">.</span>default_int_handler<span class=\"p\">:</span></td></tr><tr><th id=\"L183\"><a href=\"#L183\">183</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># only handle if there isn't already a handler, e.g. for Pdb.</span></td></tr><tr><th id=\"L184\"><a href=\"#L184\">184</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 signal<span class=\"o\">.</span>signal<span class=\"p\">(</span>signal<span class=\"o\">.</span>SIGINT<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>sigInt<span class=\"p\">)</span></td></tr><tr><th id=\"L185\"><a href=\"#L185\">185</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 signal<span class=\"o\">.</span>signal<span class=\"p\">(</span>signal<span class=\"o\">.</span>SIGTERM<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>sigTerm<span class=\"p\">)</span></td></tr><tr><th id=\"L186\"><a href=\"#L186\">186</a></th><td></td></tr><tr><th id=\"L187\"><a href=\"#L187\">187</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Catch Ctrl-Break in windows</span></td></tr><tr><th id=\"L188\"><a href=\"#L188\">188</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">hasattr</span><span class=\"p\">(</span>signal<span class=\"p\">,</span>\u00a0<span class=\"s\">\"SIGBREAK\"</span><span class=\"p\">):</span></td></tr><tr><th id=\"L189\"><a href=\"#L189\">189</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 signal<span class=\"o\">.</span>signal<span class=\"p\">(</span>signal<span class=\"o\">.</span>SIGBREAK<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>sigBreak<span class=\"p\">)</span></td></tr><tr><th id=\"L190\"><a href=\"#L190\">190</a></th><td></td></tr><tr><th id=\"L191\"><a href=\"#L191\">191</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0platformType <span class=\"o\">==</span>\u00a0<span class=\"s\">'posix'</span><span class=\"p\">:</span></td></tr><tr><th id=\"L192\"><a href=\"#L192\">192</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 signal<span class=\"o\">.</span>signal<span class=\"p\">(</span>signal<span class=\"o\">.</span>SIGCHLD<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_handleSigchld<span class=\"p\">)</span></td></tr><tr><th id=\"L193\"><a href=\"#L193\">193</a></th><td></td></tr><tr><th id=\"L194\"><a href=\"#L194\">194</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_handleSigchld</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0signum<span class=\"p\">,</span>\u00a0frame<span class=\"p\">,</span>\u00a0_threadSupport<span class=\"o\">=</span>platform<span class=\"o\">.</span>supportsThreads<span class=\"p\">()):</span></td></tr><tr><th id=\"L195\"><a href=\"#L195\">195</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Reap all processes on SIGCHLD.</span></td></tr><tr><th id=\"L196\"><a href=\"#L196\">196</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L197\"><a href=\"#L197\">197</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This gets called on SIGCHLD. We do no processing inside a signal</span></td></tr><tr><th id=\"L198\"><a href=\"#L198\">198</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 handler, as the calls we make here could occur between any two</span></td></tr><tr><th id=\"L199\"><a href=\"#L199\">199</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 python bytecode instructions. Deferring processing to the next</span></td></tr><tr><th id=\"L200\"><a href=\"#L200\">200</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 eventloop round prevents us from violating the state constraints</span></td></tr><tr><th id=\"L201\"><a href=\"#L201\">201</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 of arbitrary classes.</span></td></tr><tr><th id=\"L202\"><a href=\"#L202\">202</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L203\"><a href=\"#L203\">203</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0_threadSupport<span class=\"p\">:</span></td></tr><tr><th id=\"L204\"><a href=\"#L204\">204</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>callFromThread<span class=\"p\">(</span>process<span class=\"o\">.</span>reapAllProcesses<span class=\"p\">)</span></td></tr><tr><th id=\"L205\"><a href=\"#L205\">205</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L206\"><a href=\"#L206\">206</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>callLater<span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span>\u00a0process<span class=\"o\">.</span>reapAllProcesses<span class=\"p\">)</span></td></tr><tr><th id=\"L207\"><a href=\"#L207\">207</a></th><td></td></tr><tr><th id=\"L208\"><a href=\"#L208\">208</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">startRunning</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0installSignalHandlers<span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span></td></tr><tr><th id=\"L209\"><a href=\"#L209\">209</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Just in case we're started on a different thread than</span></td></tr><tr><th id=\"L210\"><a href=\"#L210\">210</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># we're made on</span></td></tr><tr><th id=\"L211\"><a href=\"#L211\">211</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 threadable<span class=\"o\">.</span>registerAsIOThread<span class=\"p\">()</span></td></tr><tr><th id=\"L212\"><a href=\"#L212\">212</a></th><td></td></tr><tr><th id=\"L213\"><a href=\"#L213\">213</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>fireSystemEvent<span class=\"p\">(</span><span class=\"s\">'startup'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L214\"><a href=\"#L214\">214</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0installSignalHandlers<span class=\"p\">:</span></td></tr><tr><th id=\"L215\"><a href=\"#L215\">215</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_handleSignals<span class=\"p\">()</span></td></tr><tr><th id=\"L216\"><a href=\"#L216\">216</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>running <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L217\"><a href=\"#L217\">217</a></th><td></td></tr><tr><th id=\"L218\"><a href=\"#L218\">218</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0installSignalHandlers<span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span></td></tr><tr><th id=\"L219\"><a href=\"#L219\">219</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>startRunning<span class=\"p\">(</span>installSignalHandlers<span class=\"o\">=</span>installSignalHandlers<span class=\"p\">)</span></td></tr><tr><th id=\"L220\"><a href=\"#L220\">220</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>mainLoop<span class=\"p\">()</span></td></tr><tr><th id=\"L221\"><a href=\"#L221\">221</a></th><td></td></tr><tr><th id=\"L222\"><a href=\"#L222\">222</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">mainLoop</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L223\"><a href=\"#L223\">223</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">while</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>running<span class=\"p\">:</span></td></tr><tr><th id=\"L224\"><a href=\"#L224\">224</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L225\"><a href=\"#L225\">225</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">while</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>running<span class=\"p\">:</span></td></tr><tr><th id=\"L226\"><a href=\"#L226\">226</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Advance simulation time in delayed event</span></td></tr><tr><th id=\"L227\"><a href=\"#L227\">227</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># processors.</span></td></tr><tr><th id=\"L228\"><a href=\"#L228\">228</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>runUntilCurrent<span class=\"p\">()</span></td></tr><tr><th id=\"L229\"><a href=\"#L229\">229</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 t2 <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>timeout<span class=\"p\">()</span></td></tr><tr><th id=\"L230\"><a href=\"#L230\">230</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 t <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>running <span class=\"ow\">and</span>\u00a0t2</td></tr><tr><th id=\"L231\"><a href=\"#L231\">231</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>doIteration<span class=\"p\">(</span>t<span class=\"p\">)</span></td></tr><tr><th id=\"L232\"><a href=\"#L232\">232</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span><span class=\"p\">:</span></td></tr><tr><th id=\"L233\"><a href=\"#L233\">233</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log<span class=\"o\">.</span>msg<span class=\"p\">(</span><span class=\"s\">\"Unexpected error in main loop.\"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L234\"><a href=\"#L234\">234</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log<span class=\"o\">.</span>deferr<span class=\"p\">()</span></td></tr><tr><th id=\"L235\"><a href=\"#L235\">235</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L236\"><a href=\"#L236\">236</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 log<span class=\"o\">.</span>msg<span class=\"p\">(</span><span class=\"s\">'Main loop terminated.'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L237\"><a href=\"#L237\">237</a></th><td></td></tr><tr><th id=\"L238\"><a href=\"#L238\">238</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_disconnectSelectable</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0selectable<span class=\"p\">,</span>\u00a0why<span class=\"p\">,</span>\u00a0isRead<span class=\"p\">,</span>\u00a0faildict<span class=\"o\">=</span><span class=\"p\">{</span></td></tr><tr><th id=\"L239\"><a href=\"#L239\">239</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 error<span class=\"o\">.</span>ConnectionDone<span class=\"p\">:</span>\u00a0failure<span class=\"o\">.</span>Failure<span class=\"p\">(</span>error<span class=\"o\">.</span>ConnectionDone<span class=\"p\">()),</span></td></tr><tr><th id=\"L240\"><a href=\"#L240\">240</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 error<span class=\"o\">.</span>ConnectionLost<span class=\"p\">:</span>\u00a0failure<span class=\"o\">.</span>Failure<span class=\"p\">(</span>error<span class=\"o\">.</span>ConnectionLost<span class=\"p\">())</span></td></tr><tr><th id=\"L241\"><a href=\"#L241\">241</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"p\">}):</span></td></tr><tr><th id=\"L242\"><a href=\"#L242\">242</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Utility function for disconnecting a selectable.</span></td></tr><tr><th id=\"L243\"><a href=\"#L243\">243</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L244\"><a href=\"#L244\">244</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Supports half-close notification, isRead should be boolean indicating</span></td></tr><tr><th id=\"L245\"><a href=\"#L245\">245</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 whether error resulted from doRead().</span></td></tr><tr><th id=\"L246\"><a href=\"#L246\">246</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L247\"><a href=\"#L247\">247</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>removeReader<span class=\"p\">(</span>selectable<span class=\"p\">)</span></td></tr><tr><th id=\"L248\"><a href=\"#L248\">248</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 f <span class=\"o\">=</span>\u00a0faildict<span class=\"o\">.</span>get<span class=\"p\">(</span>why<span class=\"o\">.</span>__class__<span class=\"p\">)</span></td></tr><tr><th id=\"L249\"><a href=\"#L249\">249</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0f<span class=\"p\">:</span></td></tr><tr><th id=\"L250\"><a href=\"#L250\">250</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"p\">(</span>isRead <span class=\"ow\">and</span>\u00a0why<span class=\"o\">.</span>__class__ <span class=\"o\">==</span>\u00a0 error<span class=\"o\">.</span>ConnectionDone</td></tr><tr><th id=\"L251\"><a href=\"#L251\">251</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"ow\">and</span>\u00a0IHalfCloseableDescriptor<span class=\"o\">.</span>providedBy<span class=\"p\">(</span>selectable<span class=\"p\">)):</span></td></tr><tr><th id=\"L252\"><a href=\"#L252\">252</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 selectable<span class=\"o\">.</span>readConnectionLost<span class=\"p\">(</span>f<span class=\"p\">)</span></td></tr><tr><th id=\"L253\"><a href=\"#L253\">253</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L254\"><a href=\"#L254\">254</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>removeWriter<span class=\"p\">(</span>selectable<span class=\"p\">)</span></td></tr><tr><th id=\"L255\"><a href=\"#L255\">255</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 selectable<span class=\"o\">.</span>connectionLost<span class=\"p\">(</span>f<span class=\"p\">)</span></td></tr><tr><th id=\"L256\"><a href=\"#L256\">256</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L257\"><a href=\"#L257\">257</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>removeWriter<span class=\"p\">(</span>selectable<span class=\"p\">)</span></td></tr><tr><th id=\"L258\"><a href=\"#L258\">258</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 selectable<span class=\"o\">.</span>connectionLost<span class=\"p\">(</span>failure<span class=\"o\">.</span>Failure<span class=\"p\">(</span>why<span class=\"p\">))</span></td></tr><tr><th id=\"L259\"><a href=\"#L259\">259</a></th><td></td></tr><tr><th id=\"L260\"><a href=\"#L260\">260</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">installWaker</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L261\"><a href=\"#L261\">261</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Install a `waker' to allow threads and signals to wake up the IO thread.</span></td></tr><tr><th id=\"L262\"><a href=\"#L262\">262</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L263\"><a href=\"#L263\">263</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 We use the self-pipe trick (http://cr.yp.to/docs/selfpipe.html) to wake</span></td></tr><tr><th id=\"L264\"><a href=\"#L264\">264</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 the reactor. On Windows we use a pair of sockets.</span></td></tr><tr><th id=\"L265\"><a href=\"#L265\">265</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L266\"><a href=\"#L266\">266</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>waker<span class=\"p\">:</span></td></tr><tr><th id=\"L267\"><a href=\"#L267\">267</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>waker <span class=\"o\">=</span>\u00a0_Waker<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L268\"><a href=\"#L268\">268</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>addReader<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>waker<span class=\"p\">)</span></td></tr><tr><th id=\"L269\"><a href=\"#L269\">269</a></th><td></td></tr><tr><th id=\"L270\"><a href=\"#L270\">270</a></th><td></td></tr><tr><th id=\"L271\"><a href=\"#L271\">271</a></th><td>\u00a0 \u00a0 <span class=\"c\"># IReactorProcess</span></td></tr><tr><th id=\"L272\"><a href=\"#L272\">272</a></th><td></td></tr><tr><th id=\"L273\"><a href=\"#L273\">273</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_checkProcessArgs</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0args<span class=\"p\">,</span>\u00a0env<span class=\"p\">):</span></td></tr><tr><th id=\"L274\"><a href=\"#L274\">274</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L275\"><a href=\"#L275\">275</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Check for valid arguments and environment to spawnProcess.</span></td></tr><tr><th id=\"L276\"><a href=\"#L276\">276</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L277\"><a href=\"#L277\">277</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: A two element tuple giving values to use when creating the</span></td></tr><tr><th id=\"L278\"><a href=\"#L278\">278</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 process.\u00a0 The first element of the tuple is a C{list} of C{str}</span></td></tr><tr><th id=\"L279\"><a href=\"#L279\">279</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 giving the values for argv of the child process.\u00a0 The second element</span></td></tr><tr><th id=\"L280\"><a href=\"#L280\">280</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 of the tuple is either C{None} if C{env} was C{None} or a C{dict}</span></td></tr><tr><th id=\"L281\"><a href=\"#L281\">281</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 mapping C{str} environment keys to C{str} environment values.</span></td></tr><tr><th id=\"L282\"><a href=\"#L282\">282</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L283\"><a href=\"#L283\">283</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Any unicode string which Python would successfully implicitly</span></td></tr><tr><th id=\"L284\"><a href=\"#L284\">284</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># encode to a byte string would have worked before these explicit</span></td></tr><tr><th id=\"L285\"><a href=\"#L285\">285</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># checks were added.\u00a0 Anything which would have failed with a</span></td></tr><tr><th id=\"L286\"><a href=\"#L286\">286</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># UnicodeEncodeError during that implicit encoding step would have</span></td></tr><tr><th id=\"L287\"><a href=\"#L287\">287</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># raised an exception in the child process and that would have been</span></td></tr><tr><th id=\"L288\"><a href=\"#L288\">288</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># a pain in the butt to debug.</span></td></tr><tr><th id=\"L289\"><a href=\"#L289\">289</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\">#</span></td></tr><tr><th id=\"L290\"><a href=\"#L290\">290</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># So, we will explicitly attempt the same encoding which Python</span></td></tr><tr><th id=\"L291\"><a href=\"#L291\">291</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># would implicitly do later.\u00a0 If it fails, we will report an error</span></td></tr><tr><th id=\"L292\"><a href=\"#L292\">292</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># without ever spawning a child process.\u00a0 If it succeeds, we'll save</span></td></tr><tr><th id=\"L293\"><a href=\"#L293\">293</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># the result so that Python doesn't need to do it implicitly later.</span></td></tr><tr><th id=\"L294\"><a href=\"#L294\">294</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\">#</span></td></tr><tr><th id=\"L295\"><a href=\"#L295\">295</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># For any unicode which we can actually encode, we'll also issue a</span></td></tr><tr><th id=\"L296\"><a href=\"#L296\">296</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># deprecation warning, because no one should be passing unicode here</span></td></tr><tr><th id=\"L297\"><a href=\"#L297\">297</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># anyway.</span></td></tr><tr><th id=\"L298\"><a href=\"#L298\">298</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\">#</span></td></tr><tr><th id=\"L299\"><a href=\"#L299\">299</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># -exarkun</span></td></tr><tr><th id=\"L300\"><a href=\"#L300\">300</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 defaultEncoding <span class=\"o\">=</span>\u00a0sys<span class=\"o\">.</span>getdefaultencoding<span class=\"p\">()</span></td></tr><tr><th id=\"L301\"><a href=\"#L301\">301</a></th><td></td></tr><tr><th id=\"L302\"><a href=\"#L302\">302</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Common check function</span></td></tr><tr><th id=\"L303\"><a href=\"#L303\">303</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">argChecker</span><span class=\"p\">(</span>arg<span class=\"p\">):</span></td></tr><tr><th id=\"L304\"><a href=\"#L304\">304</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L305\"><a href=\"#L305\">305</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Return either a str or None.\u00a0 If the given value is not</span></td></tr><tr><th id=\"L306\"><a href=\"#L306\">306</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 allowable for some reason, None is returned.\u00a0 Otherwise, a</span></td></tr><tr><th id=\"L307\"><a href=\"#L307\">307</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 possibly different object which should be used in place of arg</span></td></tr><tr><th id=\"L308\"><a href=\"#L308\">308</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 is returned.\u00a0 This forces unicode encoding to happen now, rather</span></td></tr><tr><th id=\"L309\"><a href=\"#L309\">309</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 than implicitly later.</span></td></tr><tr><th id=\"L310\"><a href=\"#L310\">310</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L311\"><a href=\"#L311\">311</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">isinstance</span><span class=\"p\">(</span>arg<span class=\"p\">,</span>\u00a0<span class=\"nb\">unicode</span><span class=\"p\">):</span></td></tr><tr><th id=\"L312\"><a href=\"#L312\">312</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L313\"><a href=\"#L313\">313</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 arg <span class=\"o\">=</span>\u00a0arg<span class=\"o\">.</span>encode<span class=\"p\">(</span>defaultEncoding<span class=\"p\">)</span></td></tr><tr><th id=\"L314\"><a href=\"#L314\">314</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">UnicodeEncodeError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L315\"><a href=\"#L315\">315</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L316\"><a href=\"#L316\">316</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 warnings<span class=\"o\">.</span>warn<span class=\"p\">(</span></td></tr><tr><th id=\"L317\"><a href=\"#L317\">317</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">\"Argument strings and environment keys/values passed to \"</span></td></tr><tr><th id=\"L318\"><a href=\"#L318\">318</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">\"reactor.spawnProcess should be str, not unicode.\"</span><span class=\"p\">,</span></td></tr><tr><th id=\"L319\"><a href=\"#L319\">319</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 category<span class=\"o\">=</span><span class=\"ne\">DeprecationWarning</span><span class=\"p\">,</span></td></tr><tr><th id=\"L320\"><a href=\"#L320\">320</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 stacklevel<span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span></td></tr><tr><th id=\"L321\"><a href=\"#L321\">321</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">isinstance</span><span class=\"p\">(</span>arg<span class=\"p\">,</span>\u00a0<span class=\"nb\">str</span><span class=\"p\">)</span>\u00a0<span class=\"ow\">and</span>\u00a0<span class=\"s\">'</span><span class=\"se\">\\0</span><span class=\"s\">'</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"ow\">in</span>\u00a0arg<span class=\"p\">:</span></td></tr><tr><th id=\"L322\"><a href=\"#L322\">322</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0arg</td></tr><tr><th id=\"L323\"><a href=\"#L323\">323</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L324\"><a href=\"#L324\">324</a></th><td></td></tr><tr><th id=\"L325\"><a href=\"#L325\">325</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Make a few tests to check input validity</span></td></tr><tr><th id=\"L326\"><a href=\"#L326\">326</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"nb\">isinstance</span><span class=\"p\">(</span>args<span class=\"p\">,</span>\u00a0<span class=\"p\">(</span><span class=\"nb\">tuple</span><span class=\"p\">,</span>\u00a0<span class=\"nb\">list</span><span class=\"p\">)):</span></td></tr><tr><th id=\"L327\"><a href=\"#L327\">327</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">TypeError</span><span class=\"p\">(</span><span class=\"s\">\"Arguments must be a tuple or list\"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L328\"><a href=\"#L328\">328</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 </td></tr><tr><th id=\"L329\"><a href=\"#L329\">329</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 outputArgs <span class=\"o\">=</span>\u00a0<span class=\"p\">[]</span></td></tr><tr><th id=\"L330\"><a href=\"#L330\">330</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0arg <span class=\"ow\">in</span>\u00a0args<span class=\"p\">:</span></td></tr><tr><th id=\"L331\"><a href=\"#L331\">331</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 arg <span class=\"o\">=</span>\u00a0argChecker<span class=\"p\">(</span>arg<span class=\"p\">)</span></td></tr><tr><th id=\"L332\"><a href=\"#L332\">332</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0arg <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L333\"><a href=\"#L333\">333</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">TypeError</span><span class=\"p\">(</span><span class=\"s\">\"Arguments contain a non-string value\"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L334\"><a href=\"#L334\">334</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L335\"><a href=\"#L335\">335</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 outputArgs<span class=\"o\">.</span>append<span class=\"p\">(</span>arg<span class=\"p\">)</span></td></tr><tr><th id=\"L336\"><a href=\"#L336\">336</a></th><td></td></tr><tr><th id=\"L337\"><a href=\"#L337\">337</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 outputEnv <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L338\"><a href=\"#L338\">338</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0env <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L339\"><a href=\"#L339\">339</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 outputEnv <span class=\"o\">=</span>\u00a0<span class=\"p\">{}</span></td></tr><tr><th id=\"L340\"><a href=\"#L340\">340</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0key<span class=\"p\">,</span>\u00a0val <span class=\"ow\">in</span>\u00a0env<span class=\"o\">.</span>iteritems<span class=\"p\">():</span></td></tr><tr><th id=\"L341\"><a href=\"#L341\">341</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 key <span class=\"o\">=</span>\u00a0argChecker<span class=\"p\">(</span>key<span class=\"p\">)</span></td></tr><tr><th id=\"L342\"><a href=\"#L342\">342</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0key <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L343\"><a href=\"#L343\">343</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">TypeError</span><span class=\"p\">(</span><span class=\"s\">\"Environment contains a non-string key\"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L344\"><a href=\"#L344\">344</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 val <span class=\"o\">=</span>\u00a0argChecker<span class=\"p\">(</span>val<span class=\"p\">)</span></td></tr><tr><th id=\"L345\"><a href=\"#L345\">345</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0val <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L346\"><a href=\"#L346\">346</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">TypeError</span><span class=\"p\">(</span><span class=\"s\">\"Environment contains a non-string value\"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L347\"><a href=\"#L347\">347</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 outputEnv<span class=\"p\">[</span>key<span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0val</td></tr><tr><th id=\"L348\"><a href=\"#L348\">348</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0outputArgs<span class=\"p\">,</span>\u00a0outputEnv</td></tr><tr><th id=\"L349\"><a href=\"#L349\">349</a></th><td></td></tr><tr><th id=\"L350\"><a href=\"#L350\">350</a></th><td></td></tr><tr><th id=\"L351\"><a href=\"#L351\">351</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">spawnProcess</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0processProtocol<span class=\"p\">,</span>\u00a0executable<span class=\"p\">,</span>\u00a0args<span class=\"o\">=</span><span class=\"p\">(),</span></td></tr><tr><th id=\"L352\"><a href=\"#L352\">352</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0env<span class=\"o\">=</span><span class=\"p\">{},</span>\u00a0path<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span></td></tr><tr><th id=\"L353\"><a href=\"#L353\">353</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0uid<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\u00a0gid<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\u00a0usePTY<span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\u00a0childFDs<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L354\"><a href=\"#L354\">354</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 args<span class=\"p\">,</span>\u00a0env <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_checkProcessArgs<span class=\"p\">(</span>args<span class=\"p\">,</span>\u00a0env<span class=\"p\">)</span></td></tr><tr><th id=\"L355\"><a href=\"#L355\">355</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0platformType <span class=\"o\">==</span>\u00a0<span class=\"s\">'posix'</span><span class=\"p\">:</span></td></tr><tr><th id=\"L356\"><a href=\"#L356\">356</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0usePTY<span class=\"p\">:</span></td></tr><tr><th id=\"L357\"><a href=\"#L357\">357</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0childFDs <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L358\"><a href=\"#L358\">358</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s\">\"Using childFDs is not supported with usePTY=True.\"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L359\"><a href=\"#L359\">359</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0process<span class=\"o\">.</span>PTYProcess<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0executable<span class=\"p\">,</span>\u00a0args<span class=\"p\">,</span>\u00a0env<span class=\"p\">,</span>\u00a0path<span class=\"p\">,</span></td></tr><tr><th id=\"L360\"><a href=\"#L360\">360</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 processProtocol<span class=\"p\">,</span>\u00a0uid<span class=\"p\">,</span>\u00a0gid<span class=\"p\">,</span>\u00a0usePTY<span class=\"p\">)</span></td></tr><tr><th id=\"L361\"><a href=\"#L361\">361</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L362\"><a href=\"#L362\">362</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0process<span class=\"o\">.</span>Process<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0executable<span class=\"p\">,</span>\u00a0args<span class=\"p\">,</span>\u00a0env<span class=\"p\">,</span>\u00a0path<span class=\"p\">,</span></td></tr><tr><th id=\"L363\"><a href=\"#L363\">363</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0processProtocol<span class=\"p\">,</span>\u00a0uid<span class=\"p\">,</span>\u00a0gid<span class=\"p\">,</span>\u00a0childFDs<span class=\"p\">)</span></td></tr><tr><th id=\"L364\"><a href=\"#L364\">364</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0platformType <span class=\"o\">==</span>\u00a0<span class=\"s\">\"win32\"</span><span class=\"p\">:</span></td></tr><tr><th id=\"L365\"><a href=\"#L365\">365</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0uid <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span>\u00a0<span class=\"ow\">or</span>\u00a0gid <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L366\"><a href=\"#L366\">366</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s\">\"The uid and gid parameters are not supported on Windows.\"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L367\"><a href=\"#L367\">367</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0usePTY<span class=\"p\">:</span></td></tr><tr><th id=\"L368\"><a href=\"#L368\">368</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s\">\"The usePTY parameter is not supported on Windows.\"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L369\"><a href=\"#L369\">369</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0childFDs<span class=\"p\">:</span></td></tr><tr><th id=\"L370\"><a href=\"#L370\">370</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s\">\"Customizing childFDs is not supported on Windows.\"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L371\"><a href=\"#L371\">371</a></th><td></td></tr><tr><th id=\"L372\"><a href=\"#L372\">372</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0win32process<span class=\"p\">:</span></td></tr><tr><th id=\"L373\"><a href=\"#L373\">373</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet._dumbwin32proc</span>\u00a0<span class=\"kn\">import</span>\u00a0Process</td></tr><tr><th id=\"L374\"><a href=\"#L374\">374</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0Process<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0processProtocol<span class=\"p\">,</span>\u00a0executable<span class=\"p\">,</span>\u00a0args<span class=\"p\">,</span>\u00a0env<span class=\"p\">,</span>\u00a0path<span class=\"p\">)</span></td></tr><tr><th id=\"L375\"><a href=\"#L375\">375</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L376\"><a href=\"#L376\">376</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">NotImplementedError</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"spawnProcess not available since pywin32 is not installed.\"</span></td></tr><tr><th id=\"L377\"><a href=\"#L377\">377</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L378\"><a href=\"#L378\">378</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">NotImplementedError</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"spawnProcess only available on Windows or POSIX.\"</span></td></tr><tr><th id=\"L379\"><a href=\"#L379\">379</a></th><td></td></tr><tr><th id=\"L380\"><a href=\"#L380\">380</a></th><td>\u00a0 \u00a0 <span class=\"c\"># IReactorUDP</span></td></tr><tr><th id=\"L381\"><a href=\"#L381\">381</a></th><td></td></tr><tr><th id=\"L382\"><a href=\"#L382\">382</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">listenUDP</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0port<span class=\"p\">,</span>\u00a0protocol<span class=\"p\">,</span>\u00a0interface<span class=\"o\">=</span><span class=\"s\">''</span><span class=\"p\">,</span>\u00a0maxPacketSize<span class=\"o\">=</span><span class=\"mi\">8192</span><span class=\"p\">):</span></td></tr><tr><th id=\"L383\"><a href=\"#L383\">383</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Connects a given L{DatagramProtocol} to the given numeric UDP port.</span></td></tr><tr><th id=\"L384\"><a href=\"#L384\">384</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L385\"><a href=\"#L385\">385</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @returns: object conforming to L{IListeningPort}.</span></td></tr><tr><th id=\"L386\"><a href=\"#L386\">386</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L387\"><a href=\"#L387\">387</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 p <span class=\"o\">=</span>\u00a0udp<span class=\"o\">.</span>Port<span class=\"p\">(</span>port<span class=\"p\">,</span>\u00a0protocol<span class=\"p\">,</span>\u00a0interface<span class=\"p\">,</span>\u00a0maxPacketSize<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L388\"><a href=\"#L388\">388</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 p<span class=\"o\">.</span>startListening<span class=\"p\">()</span></td></tr><tr><th id=\"L389\"><a href=\"#L389\">389</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0p</td></tr><tr><th id=\"L390\"><a href=\"#L390\">390</a></th><td></td></tr><tr><th id=\"L391\"><a href=\"#L391\">391</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectUDP</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0remotehost<span class=\"p\">,</span>\u00a0remoteport<span class=\"p\">,</span>\u00a0protocol<span class=\"p\">,</span>\u00a0localport<span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span></td></tr><tr><th id=\"L392\"><a href=\"#L392\">392</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 interface<span class=\"o\">=</span><span class=\"s\">''</span><span class=\"p\">,</span>\u00a0maxPacketSize<span class=\"o\">=</span><span class=\"mi\">8192</span><span class=\"p\">):</span></td></tr><tr><th id=\"L393\"><a href=\"#L393\">393</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"DEPRECATED.</span></td></tr><tr><th id=\"L394\"><a href=\"#L394\">394</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L395\"><a href=\"#L395\">395</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Connects a L{ConnectedDatagramProtocol} instance to a UDP port.</span></td></tr><tr><th id=\"L396\"><a href=\"#L396\">396</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L397\"><a href=\"#L397\">397</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 warnings<span class=\"o\">.</span>warn<span class=\"p\">(</span><span class=\"s\">\"use listenUDP and then transport.connect().\"</span><span class=\"p\">,</span>\u00a0<span class=\"ne\">DeprecationWarning</span><span class=\"p\">,</span>\u00a0stacklevel<span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span></td></tr><tr><th id=\"L398\"><a href=\"#L398\">398</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 p <span class=\"o\">=</span>\u00a0udp<span class=\"o\">.</span>ConnectedPort<span class=\"p\">((</span>remotehost<span class=\"p\">,</span>\u00a0remoteport<span class=\"p\">),</span>\u00a0localport<span class=\"p\">,</span>\u00a0protocol<span class=\"p\">,</span>\u00a0interface<span class=\"p\">,</span>\u00a0maxPacketSize<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L399\"><a href=\"#L399\">399</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 p<span class=\"o\">.</span>startListening<span class=\"p\">()</span></td></tr><tr><th id=\"L400\"><a href=\"#L400\">400</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0p</td></tr><tr><th id=\"L401\"><a href=\"#L401\">401</a></th><td></td></tr><tr><th id=\"L402\"><a href=\"#L402\">402</a></th><td></td></tr><tr><th id=\"L403\"><a href=\"#L403\">403</a></th><td>\u00a0 \u00a0 <span class=\"c\"># IReactorMulticast</span></td></tr><tr><th id=\"L404\"><a href=\"#L404\">404</a></th><td></td></tr><tr><th id=\"L405\"><a href=\"#L405\">405</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">listenMulticast</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0port<span class=\"p\">,</span>\u00a0protocol<span class=\"p\">,</span>\u00a0interface<span class=\"o\">=</span><span class=\"s\">''</span><span class=\"p\">,</span>\u00a0maxPacketSize<span class=\"o\">=</span><span class=\"mi\">8192</span><span class=\"p\">,</span>\u00a0listenMultiple<span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">):</span></td></tr><tr><th id=\"L406\"><a href=\"#L406\">406</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Connects a given DatagramProtocol to the given numeric UDP port.</span></td></tr><tr><th id=\"L407\"><a href=\"#L407\">407</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L408\"><a href=\"#L408\">408</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 EXPERIMENTAL.</span></td></tr><tr><th id=\"L409\"><a href=\"#L409\">409</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L410\"><a href=\"#L410\">410</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @returns: object conforming to IListeningPort.</span></td></tr><tr><th id=\"L411\"><a href=\"#L411\">411</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L412\"><a href=\"#L412\">412</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 p <span class=\"o\">=</span>\u00a0udp<span class=\"o\">.</span>MulticastPort<span class=\"p\">(</span>port<span class=\"p\">,</span>\u00a0protocol<span class=\"p\">,</span>\u00a0interface<span class=\"p\">,</span>\u00a0maxPacketSize<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0listenMultiple<span class=\"p\">)</span></td></tr><tr><th id=\"L413\"><a href=\"#L413\">413</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 p<span class=\"o\">.</span>startListening<span class=\"p\">()</span></td></tr><tr><th id=\"L414\"><a href=\"#L414\">414</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0p</td></tr><tr><th id=\"L415\"><a href=\"#L415\">415</a></th><td></td></tr><tr><th id=\"L416\"><a href=\"#L416\">416</a></th><td></td></tr><tr><th id=\"L417\"><a href=\"#L417\">417</a></th><td>\u00a0 \u00a0 <span class=\"c\"># IReactorUNIX</span></td></tr><tr><th id=\"L418\"><a href=\"#L418\">418</a></th><td></td></tr><tr><th id=\"L419\"><a href=\"#L419\">419</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectUNIX</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0address<span class=\"p\">,</span>\u00a0factory<span class=\"p\">,</span>\u00a0timeout<span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">,</span>\u00a0checkPID<span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span></td></tr><tr><th id=\"L420\"><a href=\"#L420\">420</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"@see: twisted.internet.interfaces.IReactorUNIX.connectUNIX</span></td></tr><tr><th id=\"L421\"><a href=\"#L421\">421</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L422\"><a href=\"#L422\">422</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">assert</span>\u00a0unixEnabled<span class=\"p\">,</span>\u00a0<span class=\"s\">\"UNIX support is not present\"</span></td></tr><tr><th id=\"L423\"><a href=\"#L423\">423</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 c <span class=\"o\">=</span>\u00a0unix<span class=\"o\">.</span>Connector<span class=\"p\">(</span>address<span class=\"p\">,</span>\u00a0factory<span class=\"p\">,</span>\u00a0timeout<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0checkPID<span class=\"p\">)</span></td></tr><tr><th id=\"L424\"><a href=\"#L424\">424</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 c<span class=\"o\">.</span>connect<span class=\"p\">()</span></td></tr><tr><th id=\"L425\"><a href=\"#L425\">425</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0c</td></tr><tr><th id=\"L426\"><a href=\"#L426\">426</a></th><td></td></tr><tr><th id=\"L427\"><a href=\"#L427\">427</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">listenUNIX</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0address<span class=\"p\">,</span>\u00a0factory<span class=\"p\">,</span>\u00a0backlog<span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span>\u00a0mode<span class=\"o\">=</span><span class=\"mo\">0666</span><span class=\"p\">,</span>\u00a0wantPID<span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span></td></tr><tr><th id=\"L428\"><a href=\"#L428\">428</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"@see: twisted.internet.interfaces.IReactorUNIX.listenUNIX</span></td></tr><tr><th id=\"L429\"><a href=\"#L429\">429</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L430\"><a href=\"#L430\">430</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">assert</span>\u00a0unixEnabled<span class=\"p\">,</span>\u00a0<span class=\"s\">\"UNIX support is not present\"</span></td></tr><tr><th id=\"L431\"><a href=\"#L431\">431</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 p <span class=\"o\">=</span>\u00a0unix<span class=\"o\">.</span>Port<span class=\"p\">(</span>address<span class=\"p\">,</span>\u00a0factory<span class=\"p\">,</span>\u00a0backlog<span class=\"p\">,</span>\u00a0mode<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0wantPID<span class=\"p\">)</span></td></tr><tr><th id=\"L432\"><a href=\"#L432\">432</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 p<span class=\"o\">.</span>startListening<span class=\"p\">()</span></td></tr><tr><th id=\"L433\"><a href=\"#L433\">433</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0p</td></tr><tr><th id=\"L434\"><a href=\"#L434\">434</a></th><td></td></tr><tr><th id=\"L435\"><a href=\"#L435\">435</a></th><td></td></tr><tr><th id=\"L436\"><a href=\"#L436\">436</a></th><td>\u00a0 \u00a0 <span class=\"c\"># IReactorUNIXDatagram</span></td></tr><tr><th id=\"L437\"><a href=\"#L437\">437</a></th><td></td></tr><tr><th id=\"L438\"><a href=\"#L438\">438</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">listenUNIXDatagram</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0address<span class=\"p\">,</span>\u00a0protocol<span class=\"p\">,</span>\u00a0maxPacketSize<span class=\"o\">=</span><span class=\"mi\">8192</span><span class=\"p\">,</span>\u00a0mode<span class=\"o\">=</span><span class=\"mo\">0666</span><span class=\"p\">):</span></td></tr><tr><th id=\"L439\"><a href=\"#L439\">439</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Connects a given L{DatagramProtocol} to the given path.</span></td></tr><tr><th id=\"L440\"><a href=\"#L440\">440</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L441\"><a href=\"#L441\">441</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 EXPERIMENTAL.</span></td></tr><tr><th id=\"L442\"><a href=\"#L442\">442</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L443\"><a href=\"#L443\">443</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @returns: object conforming to L{IListeningPort}.</span></td></tr><tr><th id=\"L444\"><a href=\"#L444\">444</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L445\"><a href=\"#L445\">445</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">assert</span>\u00a0unixEnabled<span class=\"p\">,</span>\u00a0<span class=\"s\">\"UNIX support is not present\"</span></td></tr><tr><th id=\"L446\"><a href=\"#L446\">446</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 p <span class=\"o\">=</span>\u00a0unix<span class=\"o\">.</span>DatagramPort<span class=\"p\">(</span>address<span class=\"p\">,</span>\u00a0protocol<span class=\"p\">,</span>\u00a0maxPacketSize<span class=\"p\">,</span>\u00a0mode<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L447\"><a href=\"#L447\">447</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 p<span class=\"o\">.</span>startListening<span class=\"p\">()</span></td></tr><tr><th id=\"L448\"><a href=\"#L448\">448</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0p</td></tr><tr><th id=\"L449\"><a href=\"#L449\">449</a></th><td></td></tr><tr><th id=\"L450\"><a href=\"#L450\">450</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectUNIXDatagram</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0address<span class=\"p\">,</span>\u00a0protocol<span class=\"p\">,</span>\u00a0maxPacketSize<span class=\"o\">=</span><span class=\"mi\">8192</span><span class=\"p\">,</span>\u00a0mode<span class=\"o\">=</span><span class=\"mo\">0666</span><span class=\"p\">,</span>\u00a0bindAddress<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L451\"><a href=\"#L451\">451</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Connects a L{ConnectedDatagramProtocol} instance to a path.</span></td></tr><tr><th id=\"L452\"><a href=\"#L452\">452</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L453\"><a href=\"#L453\">453</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 EXPERIMENTAL.</span></td></tr><tr><th id=\"L454\"><a href=\"#L454\">454</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L455\"><a href=\"#L455\">455</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">assert</span>\u00a0unixEnabled<span class=\"p\">,</span>\u00a0<span class=\"s\">\"UNIX support is not present\"</span></td></tr><tr><th id=\"L456\"><a href=\"#L456\">456</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 p <span class=\"o\">=</span>\u00a0unix<span class=\"o\">.</span>ConnectedDatagramPort<span class=\"p\">(</span>address<span class=\"p\">,</span>\u00a0protocol<span class=\"p\">,</span>\u00a0maxPacketSize<span class=\"p\">,</span>\u00a0mode<span class=\"p\">,</span>\u00a0bindAddress<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L457\"><a href=\"#L457\">457</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 p<span class=\"o\">.</span>startListening<span class=\"p\">()</span></td></tr><tr><th id=\"L458\"><a href=\"#L458\">458</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0p</td></tr><tr><th id=\"L459\"><a href=\"#L459\">459</a></th><td></td></tr><tr><th id=\"L460\"><a href=\"#L460\">460</a></th><td></td></tr><tr><th id=\"L461\"><a href=\"#L461\">461</a></th><td>\u00a0 \u00a0 <span class=\"c\"># IReactorTCP</span></td></tr><tr><th id=\"L462\"><a href=\"#L462\">462</a></th><td></td></tr><tr><th id=\"L463\"><a href=\"#L463\">463</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">listenTCP</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0port<span class=\"p\">,</span>\u00a0factory<span class=\"p\">,</span>\u00a0backlog<span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span>\u00a0interface<span class=\"o\">=</span><span class=\"s\">''</span><span class=\"p\">):</span></td></tr><tr><th id=\"L464\"><a href=\"#L464\">464</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"@see: twisted.internet.interfaces.IReactorTCP.listenTCP</span></td></tr><tr><th id=\"L465\"><a href=\"#L465\">465</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L466\"><a href=\"#L466\">466</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 p <span class=\"o\">=</span>\u00a0tcp<span class=\"o\">.</span>Port<span class=\"p\">(</span>port<span class=\"p\">,</span>\u00a0factory<span class=\"p\">,</span>\u00a0backlog<span class=\"p\">,</span>\u00a0interface<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L467\"><a href=\"#L467\">467</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 p<span class=\"o\">.</span>startListening<span class=\"p\">()</span></td></tr><tr><th id=\"L468\"><a href=\"#L468\">468</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0p</td></tr><tr><th id=\"L469\"><a href=\"#L469\">469</a></th><td></td></tr><tr><th id=\"L470\"><a href=\"#L470\">470</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectTCP</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0host<span class=\"p\">,</span>\u00a0port<span class=\"p\">,</span>\u00a0factory<span class=\"p\">,</span>\u00a0timeout<span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">,</span>\u00a0bindAddress<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L471\"><a href=\"#L471\">471</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"@see: twisted.internet.interfaces.IReactorTCP.connectTCP</span></td></tr><tr><th id=\"L472\"><a href=\"#L472\">472</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L473\"><a href=\"#L473\">473</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 c <span class=\"o\">=</span>\u00a0tcp<span class=\"o\">.</span>Connector<span class=\"p\">(</span>host<span class=\"p\">,</span>\u00a0port<span class=\"p\">,</span>\u00a0factory<span class=\"p\">,</span>\u00a0timeout<span class=\"p\">,</span>\u00a0bindAddress<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L474\"><a href=\"#L474\">474</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 c<span class=\"o\">.</span>connect<span class=\"p\">()</span></td></tr><tr><th id=\"L475\"><a href=\"#L475\">475</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0c</td></tr><tr><th id=\"L476\"><a href=\"#L476\">476</a></th><td></td></tr><tr><th id=\"L477\"><a href=\"#L477\">477</a></th><td>\u00a0 \u00a0 <span class=\"c\"># IReactorSSL (sometimes, not implemented)</span></td></tr><tr><th id=\"L478\"><a href=\"#L478\">478</a></th><td></td></tr><tr><th id=\"L479\"><a href=\"#L479\">479</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectSSL</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0host<span class=\"p\">,</span>\u00a0port<span class=\"p\">,</span>\u00a0factory<span class=\"p\">,</span>\u00a0contextFactory<span class=\"p\">,</span>\u00a0timeout<span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">,</span>\u00a0bindAddress<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L480\"><a href=\"#L480\">480</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"@see: twisted.internet.interfaces.IReactorSSL.connectSSL</span></td></tr><tr><th id=\"L481\"><a href=\"#L481\">481</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L482\"><a href=\"#L482\">482</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">assert</span>\u00a0sslEnabled<span class=\"p\">,</span>\u00a0<span class=\"s\">\"SSL support is not present\"</span></td></tr><tr><th id=\"L483\"><a href=\"#L483\">483</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 c <span class=\"o\">=</span>\u00a0ssl<span class=\"o\">.</span>Connector<span class=\"p\">(</span>host<span class=\"p\">,</span>\u00a0port<span class=\"p\">,</span>\u00a0factory<span class=\"p\">,</span>\u00a0contextFactory<span class=\"p\">,</span>\u00a0timeout<span class=\"p\">,</span>\u00a0bindAddress<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L484\"><a href=\"#L484\">484</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 c<span class=\"o\">.</span>connect<span class=\"p\">()</span></td></tr><tr><th id=\"L485\"><a href=\"#L485\">485</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0c</td></tr><tr><th id=\"L486\"><a href=\"#L486\">486</a></th><td></td></tr><tr><th id=\"L487\"><a href=\"#L487\">487</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">listenSSL</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0port<span class=\"p\">,</span>\u00a0factory<span class=\"p\">,</span>\u00a0contextFactory<span class=\"p\">,</span>\u00a0backlog<span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span>\u00a0interface<span class=\"o\">=</span><span class=\"s\">''</span><span class=\"p\">):</span></td></tr><tr><th id=\"L488\"><a href=\"#L488\">488</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"@see: twisted.internet.interfaces.IReactorSSL.listenSSL</span></td></tr><tr><th id=\"L489\"><a href=\"#L489\">489</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L490\"><a href=\"#L490\">490</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">assert</span>\u00a0sslEnabled<span class=\"p\">,</span>\u00a0<span class=\"s\">\"SSL support is not present\"</span></td></tr><tr><th id=\"L491\"><a href=\"#L491\">491</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 p <span class=\"o\">=</span>\u00a0ssl<span class=\"o\">.</span>Port<span class=\"p\">(</span>port<span class=\"p\">,</span>\u00a0factory<span class=\"p\">,</span>\u00a0contextFactory<span class=\"p\">,</span>\u00a0backlog<span class=\"p\">,</span>\u00a0interface<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L492\"><a href=\"#L492\">492</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 p<span class=\"o\">.</span>startListening<span class=\"p\">()</span></td></tr><tr><th id=\"L493\"><a href=\"#L493\">493</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0p</td></tr><tr><th id=\"L494\"><a href=\"#L494\">494</a></th><td></td></tr><tr><th id=\"L495\"><a href=\"#L495\">495</a></th><td>\u00a0 \u00a0 <span class=\"c\"># IReactorArbitrary</span></td></tr><tr><th id=\"L496\"><a href=\"#L496\">496</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">listenWith</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0portType<span class=\"p\">,</span>\u00a0<span class=\"o\">*</span>args<span class=\"p\">,</span>\u00a0<span class=\"o\">**</span>kw<span class=\"p\">):</span></td></tr><tr><th id=\"L497\"><a href=\"#L497\">497</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 kw<span class=\"p\">[</span><span class=\"s\">'reactor'</span><span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span></td></tr><tr><th id=\"L498\"><a href=\"#L498\">498</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 p <span class=\"o\">=</span>\u00a0portType<span class=\"p\">(</span><span class=\"o\">*</span>args<span class=\"p\">,</span>\u00a0<span class=\"o\">**</span>kw<span class=\"p\">)</span></td></tr><tr><th id=\"L499\"><a href=\"#L499\">499</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 p<span class=\"o\">.</span>startListening<span class=\"p\">()</span></td></tr><tr><th id=\"L500\"><a href=\"#L500\">500</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0p</td></tr><tr><th id=\"L501\"><a href=\"#L501\">501</a></th><td></td></tr><tr><th id=\"L502\"><a href=\"#L502\">502</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectWith</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0connectorType<span class=\"p\">,</span>\u00a0<span class=\"o\">*</span>args<span class=\"p\">,</span>\u00a0<span class=\"o\">**</span>kw<span class=\"p\">):</span></td></tr><tr><th id=\"L503\"><a href=\"#L503\">503</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 kw<span class=\"p\">[</span><span class=\"s\">'reactor'</span><span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span></td></tr><tr><th id=\"L504\"><a href=\"#L504\">504</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 c <span class=\"o\">=</span>\u00a0connectorType<span class=\"p\">(</span><span class=\"o\">*</span>args<span class=\"p\">,</span>\u00a0<span class=\"o\">**</span>kw<span class=\"p\">)</span></td></tr><tr><th id=\"L505\"><a href=\"#L505\">505</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 c<span class=\"o\">.</span>connect<span class=\"p\">()</span></td></tr><tr><th id=\"L506\"><a href=\"#L506\">506</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0c</td></tr><tr><th id=\"L507\"><a href=\"#L507\">507</a></th><td></td></tr><tr><th id=\"L508\"><a href=\"#L508\">508</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_removeAll</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0readers<span class=\"p\">,</span>\u00a0writers<span class=\"p\">):</span></td></tr><tr><th id=\"L509\"><a href=\"#L509\">509</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L510\"><a href=\"#L510\">510</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Remove all readers and writers, and return list of Selectables.</span></td></tr><tr><th id=\"L511\"><a href=\"#L511\">511</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L512\"><a href=\"#L512\">512</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Meant for calling from subclasses, to implement removeAll, like::</span></td></tr><tr><th id=\"L513\"><a href=\"#L513\">513</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L514\"><a href=\"#L514\">514</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 def removeAll(self):</span></td></tr><tr><th id=\"L515\"><a href=\"#L515\">515</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return self._removeAll(reads, writes)</span></td></tr><tr><th id=\"L516\"><a href=\"#L516\">516</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L517\"><a href=\"#L517\">517</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 where C{reads} and C{writes} are iterables.</span></td></tr><tr><th id=\"L518\"><a href=\"#L518\">518</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L519\"><a href=\"#L519\">519</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 readers <span class=\"o\">=</span>\u00a0<span class=\"p\">[</span>reader <span class=\"k\">for</span>\u00a0reader <span class=\"ow\">in</span>\u00a0readers <span class=\"k\">if</span></td></tr><tr><th id=\"L520\"><a href=\"#L520\">520</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0reader <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>waker<span class=\"p\">]</span></td></tr><tr><th id=\"L521\"><a href=\"#L521\">521</a></th><td></td></tr><tr><th id=\"L522\"><a href=\"#L522\">522</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 readers_dict <span class=\"o\">=</span>\u00a0<span class=\"p\">{}</span></td></tr><tr><th id=\"L523\"><a href=\"#L523\">523</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0reader <span class=\"ow\">in</span>\u00a0readers<span class=\"p\">:</span></td></tr><tr><th id=\"L524\"><a href=\"#L524\">524</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 readers_dict<span class=\"p\">[</span>reader<span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L525\"><a href=\"#L525\">525</a></th><td></td></tr><tr><th id=\"L526\"><a href=\"#L526\">526</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0reader <span class=\"ow\">in</span>\u00a0readers<span class=\"p\">:</span></td></tr><tr><th id=\"L527\"><a href=\"#L527\">527</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>removeReader<span class=\"p\">(</span>reader<span class=\"p\">)</span></td></tr><tr><th id=\"L528\"><a href=\"#L528\">528</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>removeWriter<span class=\"p\">(</span>reader<span class=\"p\">)</span></td></tr><tr><th id=\"L529\"><a href=\"#L529\">529</a></th><td></td></tr><tr><th id=\"L530\"><a href=\"#L530\">530</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 writers <span class=\"o\">=</span>\u00a0<span class=\"p\">[</span>writer <span class=\"k\">for</span>\u00a0writer <span class=\"ow\">in</span>\u00a0writers <span class=\"k\">if</span></td></tr><tr><th id=\"L531\"><a href=\"#L531\">531</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0writer <span class=\"ow\">not</span>\u00a0<span class=\"ow\">in</span>\u00a0readers_dict<span class=\"p\">]</span></td></tr><tr><th id=\"L532\"><a href=\"#L532\">532</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0writer <span class=\"ow\">in</span>\u00a0writers<span class=\"p\">:</span></td></tr><tr><th id=\"L533\"><a href=\"#L533\">533</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>removeWriter<span class=\"p\">(</span>writer<span class=\"p\">)</span></td></tr><tr><th id=\"L534\"><a href=\"#L534\">534</a></th><td></td></tr><tr><th id=\"L535\"><a href=\"#L535\">535</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0readers<span class=\"o\">+</span>writers</td></tr><tr><th id=\"L536\"><a href=\"#L536\">536</a></th><td></td></tr><tr><th id=\"L537\"><a href=\"#L537\">537</a></th><td></td></tr><tr><th id=\"L538\"><a href=\"#L538\">538</a></th><td><span class=\"k\">if</span>\u00a0sslEnabled<span class=\"p\">:</span></td></tr><tr><th id=\"L539\"><a href=\"#L539\">539</a></th><td>\u00a0 \u00a0 classImplements<span class=\"p\">(</span>PosixReactorBase<span class=\"p\">,</span>\u00a0IReactorSSL<span class=\"p\">)</span></td></tr><tr><th id=\"L540\"><a href=\"#L540\">540</a></th><td><span class=\"k\">if</span>\u00a0unixEnabled<span class=\"p\">:</span></td></tr><tr><th id=\"L541\"><a href=\"#L541\">541</a></th><td>\u00a0 \u00a0 classImplements<span class=\"p\">(</span>PosixReactorBase<span class=\"p\">,</span>\u00a0IReactorUNIX<span class=\"p\">,</span>\u00a0IReactorUNIXDatagram<span class=\"p\">)</span></td></tr><tr><th id=\"L542\"><a href=\"#L542\">542</a></th><td><span class=\"k\">if</span>\u00a0processEnabled<span class=\"p\">:</span></td></tr><tr><th id=\"L543\"><a href=\"#L543\">543</a></th><td>\u00a0 \u00a0 classImplements<span class=\"p\">(</span>PosixReactorBase<span class=\"p\">,</span>\u00a0IReactorProcess<span class=\"p\">)</span></td></tr><tr><th id=\"L544\"><a href=\"#L544\">544</a></th><td></td></tr><tr><th id=\"L545\"><a href=\"#L545\">545</a></th><td>__all__ <span class=\"o\">=</span>\u00a0<span class=\"p\">[</span><span class=\"s\">\"PosixReactorBase\"</span><span class=\"p\">]</span></td></tr></tbody></table>\n\n      </div>\n      <div id=\"anydiff\">\n        <form action=\"/LUCICodeRepository/nomaticIM/diff\" method=\"get\">\n          <div class=\"buttons\">\n            <input type=\"hidden\" name=\"new_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/posixbase.py\" />\n            <input type=\"hidden\" name=\"old_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/posixbase.py\" />\n            <input type=\"hidden\" name=\"new_rev\" />\n            <input type=\"hidden\" name=\"old_rev\" />\n            <input type=\"submit\" value=\"View changes...\" title=\"Select paths and revs for Diff\" />\n          </div>\n        </form>\n      </div>\n      <div id=\"help\"><strong>Note:</strong> See <a href=\"/LUCICodeRepository/nomaticIM/wiki/TracBrowser\">TracBrowser</a>\n        for help on using the repository browser.</div>\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"first\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/posixbase.py?format=txt\">Plain Text</a>\n        </li><li class=\"last\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/posixbase.py\">Original Format</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/LUCICodeRepository/nomaticIM/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/LUCICodeRepository/nomaticIM/about\"><strong>Trac 1.0.1</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">All content copyright 2007-2008 by LUCI <br /><a href=\"http://luci.ics.uci.edu/\">http://luci.ics.uci.edu/</a></p>\n    </div>\n\t\t<div id=\"sitefooter\">\n\t\t\t<script src=\"http://www.google-analytics.com/urchin.js\" type=\"text/javascript\">\n\t\t\t</script>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t\t_uacct = \"UA-338915-2\";\n\t\t\t\turchinTracker();\n\t\t\t</script>\n\t\t</div>\n\t</body>\n</html>", "id": 44022.0}