{"text": "HW1 Due date see schedule Using Matlab 6 points The goal of this problem set is to become familiar with basic Matlab commands practice manipulating vectors and matrices and try out basic image display and plotting functions If you are unsure what a Matlab function does check the reference manual at the command line type help and then the command name Watch the matlab tutorials Describe in words where appropriate the result of each of the following Matlab commands Use the help command as needed but try to determine the output without entering the commands into Matlab Do not submit a screenshot of the result of typing these commands x randperm 5 a 1 2 3 4 5 6 7 8 9 b a 2 f 15 1 2 g find f 185 h f g x 22 ones 1 1 y sum x a 1 1 b a end 1 1 Given a 1 x 1 uint8 matrix A representing a grayscale image hint use imread write a few lines of code to do each of the following Try to avoid using loops Sort all the intensities in A put the result in a single 1 dimensional vector x and plot the values in x Display a figure showing a histogram of A s intensities with 32 bins Create and display a new binary image the same size as A which is white wherever the intensity in A is greater than a threshold t and black everywhere else Display the bottom right quadrant of A Generate a new image matrix which is the same as A but with A s mean intensity value subtracted from each pixel Set any negative values to Display the mirror flipped version of image A That is if A was an image of right facing car transform A to be a left facing car Use rand to write a function that returns the roll of a six sided die Write a function that takes an input an image and with equal probability returns the original image or a mirror flipped version You will use this function in your programming assignment Let y be the vector y 1 6 Use the reshape command to form a new matrix z whose first column is 1 2 3 and whose second column is 4 5 6 Use the min and find functions to set x to the single minimum value that occurs in A and set r to the row it occurs in and c to the column it occurs in Let v be the vector v 1 8 8 2 1 3 9 8 Use the unique function to compute the total number of unique values that occur in v Programming computing average images 4 points Write a program that will average a collection of images and display the results The images below give some examples that were generated by averaging 1 unique commemorative photographs culled from the internet by Jason Salavon Your program will do something similar Download the images provided on the course website for this assignment here There are two sets set1 and set2 Notice that the images are not necessarily the same size Compute the average image in grayscale Because the images are not the same size you will first need to resize each image to a fixed size You may use matlab s imresize command Compute the average image in color by averaging per RGB channel Compute the average image in color but now randomly mirror flip each image using your function from Question 3 h before averaging Display each of the above Apply these steps to the two sets separately In your write up briefly explain the results why do the results from step 2 and 3 look different Programming digit classification 4 points Write a program that will classify digits specifically 3 s versus 8 s using two types of classifiers You will images from this matfile The data is stored in the following format train3 is a matrix whose each row represents a vectorized 28x28 image of a 3 There are analogous matrices for train8 test3 and test8 You will use train images to train a classifier that is then evaluated on each test image Visual Recall that by default Matlab uses column major order Correctly display the first training image which should look similar to one of the 3 s above 5 pt Avg Compute the average 3 and the average 8 using only the training data Display both 5 pt Avg Image Classifier Construct a classifier that automatically predicts a label for each test image from test3 and test8 as 3 or 8 The classifier will compute the distance between the test image and the averages and selecting the closer average Measure the distance using sum of squared pixel differences SSD Report back the fraction of miss classified test images You should get close to 11 error 1 pt NN Classifier Construct a nearest neighbor NN classifier that predicts a label for a test image by returning the label of the closest training image using SSD Report back the fraction of miss classified test images You should get close to 2 error 1 pt Analysis Show a few images that were confused a 3 that was confused for an 8 and vice versa for both classifiers Explain why the confusion occured Do the confusions for one classifier look for reasonable than the other 1 pt Hints Be sure to do the necessary typecasting uint8 and double when working with or displaying the images Some useful functions title subplot imagesc imshow mean imread rgb2gray dir reshape This code fragment can be used to loop through all the image files in one directory here assuming your images are in a sub directory named images with jpg extension filelist dir images jpg for i 1 length filelist imname images filelist i name nextim imread imname end Make use of subplot to generate multiple plots in a single figure This will make it much easer to create figures to embed in your writeup Make use of Matlab s excellent help command After 15 years I still use it Read in instructions for submitting homeworks To save space please do not include the images from avg tar gz in your submitted code Acknowledgements This assignment was originally prepared by Kristen Grauman ", "_id": "http://www.ics.uci.edu/~dramanan/teaching/cs116_winter15/hw/hw1.html", "title": "hw1", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html>\n  <head>\n    <title>HW1</title>\n  </head>\n\n  <body>\n    <h1>HW1</h1>\n\n    <h2> Due date (see <a href=\"../lec.html\">schedule</a>)\n\n    <h3> Using Matlab [60 points]</h3>\n\n    <p> The goal of this problem set is to become familiar with basic Matlab commands, practice manipulating vectors and matrices, and try out basic image display and plotting functions. If you are unsure what a Matlab function does, check the reference manual (at the command line, type \"help\" and then the command name).\n    <ol>\n      <p><li> Watch the matlab <a href=\"../matlab.html\">tutorials</a>.\n\t  <p><li> Describe (in words where appropriate) the result of each of the following Matlab commands. Use the help command as needed, but try to determine the output without entering the commands into Matlab. Do not submit a screenshot of the result of typing these commands.\n\t<ol type=a>\n\t    <p><li>  >> x = randperm(5);\n\t    <p><li> >> a = [1 2 3;4 5 6;7 8 9];\n\t    <br> >> b = a(2,:);\n\t    <p><li> >> f = [1501:2000];\n\t    <br> >> g = find(f > 1850);\n\t    <br> >> h = f(g);\n\t    <p><li> >> x = 22.*ones(1,10);\n\t    <br> >> y = sum(x);\n\t    <p><li> >> a = [1:100];\n\t    <br> >> b = a([end:-1:1]);\n\t</ol>\n\t<p><li> Given a 100 x 100 uint8 matrix A representing a grayscale image (hint - use \"imread\"), write a few lines of\ncode to do each of the following. Try to avoid using loops.\n\t<ol type = a>\n\t    <p><li> Sort all the intensities in <I>A</I>, put the result in a single 10,000-dimensional vector <I>x</I>,\n\t    and plot the values in <I>x</I>.\n\t    <p><li> Display a figure showing a histogram of <I>A</I>'s intensities with 32 bins.\n\t    <p><li> Create and display a new binary image the same size as <I>A</I>, which is white\n\t    wherever the intensity in A is greater than a threshold <I>t</I>, and black everywhere\n\t    else.\n\t    <p><li> Display the bottom right quadrant of <I>A</I>.\n\t    <p><li> Generate a new image (matrix), which is the same as <I>A</I>, but with <I>A</I>'s mean\n\t    intensity value subtracted from each pixel. Set any negative values to 0.\n            <p><li> Display the mirror-flipped version of image A. That is, if A was an image of right-facing car, transform A to be a left-facing car. \n\t    <p><li> Use rand to write a function that returns the roll of a six-sided die.\n            <p><li> Write a function that takes an input an image, and with equal probability, returns the original image or a mirror-flipped version. You will use this function in your programming assignment.\n\t    <p><li> Let <I>y</I> be the vector: y = [1:6]. Use the reshape command to form a new matrix <I>z</I>\n\t    whose first column is [1, 2, 3]', and whose second column is [4, 5, 6]'.\n\t    <p><li> Use the <I>min</I> and <I>find</I> functions to set <I>x</I> to the single minimum value that occurs\n\t    in <I>A</I>, and set <I>r</I> to the row it occurs in and <I>c</I> to the column it occurs in.\n\t    <p><li> Let <I>v</I> be the vector: v = [1 8 8 2 1 3 9 8]. Use the <I>unique</I> function to\n\t    compute the total number of unique values that occur in <I>v</I>.\n\t</ol>\n    </ol>\n\n    <h3> Programming: computing average images [40 points]</h3>\n    <p> Write a program that will average a collection of images and display the results.\n      \n    <p> The images below give some examples that were generated by averaging \"100 unique\n      commemorative photographs culled from the internet\" by Jason Salavon. Your program will do something similar.\n    <p><img width=\"500\" src=\"avg.jpg\">\n    <p> Download the images provided on the course website for this assignment <a href=\"avg.tar.gz\"> here </a>. There are two sets,\n      set1 and set2. Notice that the images are not necessarily the same size.\n    <ol>\n\t<p><li> Compute the average image in grayscale. Because the images are not the same size, you will first need to resize each image to a fixed size. You may use matlab's \"imresize\" command.\n\t<p><li> Compute the average image in color, by averaging per RGB channel.\n        <p><li> Compute the average image in color, but now randomly mirror-flip each image (using your function from Question 3-h) before averaging.\n<p><li> Display each of the above.\n    </ol>\n    <p> Apply these steps to the two sets, separately. In your write-up, briefly explain the results - why do the results from step (2) and (3) look different?\n\n    <h3> Programming: digit classification [40 points]</h3>\n    <p><img width=\"100\" height=\"100\" src=\"mnist3.jpg\">  <img width=\"100\" height=\"100\" src=\"mnist8.jpg\">\n    <p> Write a program that will classify digits (specifically, '3's versus '8's) using two types of classifiers. You will images from this <a href=\"mnist_3_8.mat\">matfile</a>. The data is stored in the following format: 'train3' is a matrix, whose each row represents a (vectorized) 28x28 image of a '3'. There are analogous matrices for 'train8', 'test3', and 'test8'. You will use 'train' images to train a classifier, that is then evaluated on each 'test' image. \n      <ol>\n\t<p><li> [Visual] Recall that by default, Matlab uses column-major order. Correctly display the first training image, which should look similar to one of the '3's above. [5 pt]\n\t<p><li> [Avg] Compute the average 3 and the average 8 using only the training data. Display both. [5 pt]\n\t<p><li> [Avg-Image Classifier] Construct a classifier that automatically predicts a label for each test image (from 'test3' and 'test8') as '3' or '8'. The classifier will compute the distance between the test image and the averages, and selecting the closer average. Measure the distance using sum-of-squared pixel differences (SSD). Report back the fraction of miss-classified test images. You should get close to 11% error.[10 pt]\n\t<p><li> [NN-Classifier] Construct a nearest-neighbor (NN) classifier that predicts a label for a test image by returning the label of the closest training image (using SSD). Report back the fraction of miss-classified test images. You should get close to 2% error. [10 pt]\n\t<p><li> [Analysis] Show a few images that were \"confused\"; a '3' that was confused for an '8' and vice versa, for both classifiers. Explain why the confusion occured. Do the confusions for one classifier look for reasonable than the other?[10 pt]\n    <h3> Hints </h3>\n    <ul>\n    <p><li> Be sure to do the necessary typecasting (uint8 and double) when working with or\n    displaying the images. Some useful functions: <tt>title, subplot, imagesc, imshow, mean, imread, rgb2gray, dir, reshape </tt>.\n    <p><li> This code fragment can be used to loop through all the image files in one directory (here\n      assuming your images are in a sub-directory named images, with .jpg extension):\n      \n    <pre>\n      filelist = dir('images/*.jpg');\n      for i=1:length(filelist)\n               imname = ['images/' filelist(i).name];\n               nextim = imread(imname);\n      . . .\n      end\n    </pre>\n    <p><li>Make use of subplot to generate multiple plots in a single figure. This will make it much easer to create figures to embed in your writeup.\n    <p><li>Make use of Matlab's excellent \"help\" command. After 15 years, I still use it!\n    <p><li>Read in <a href=\"../hw.html\">instructions</a> for submitting homeworks. To save space, please do <b>not</b> include the images from avg.tar.gz in your submitted code.\n    </ul>\n\n    <h3> Acknowledgements</h3>\n    <p> This assignment was originally prepared by Kristen Grauman.\n      \n    <hr>\n  </body>\n</html>\n", "id": 2799.0}