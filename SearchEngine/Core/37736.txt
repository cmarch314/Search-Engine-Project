{"text": "OEChem Python Theory Manual Version 1 3 1 Previous 18 Coordinate Handling Up 18 Coordinate Handling Next 18 1 1 C Array Wrappers 18 1 Getting and Setting Coordinates of Atoms and Molecules All molecules that conform to the OEMolBase API have a set of methods for getting coordinates and setting coordinates In Python there are several versions of each used depending on the level of access desired and the performance required Member functions for getting coordinates GetCoords returns dictionary GetCoords atom returns x y z tuple GetCoords OEDoubleArray GetCoords OEAtomsBase OEDoubleArray Member functions for setting coordinates SetCoords dictionary SetCoords OEAtomBase x y z SetCoords OEDoubleArray SetCoords OEAtomBase OEDoubleArray The first two methods in each section use Python data structures for output and input This has a potential performance cost as the structures are created and populated in the Get methods and the converted to C data structures in the Set methods However for many applications the cost is small and more than offset by the gain in using native data structures Here is a simple example looping over the atoms in a molecule and printing each atom s coordinates ifs oemolistream drugs sdf mol OEGraphMol OEReadMolecule ifs mol for atom in mol GetAtoms print atom GetIdx mol GetCoords atom If we want to format the output a bit better we can send the tuple returned from GetCoords directly to a string interpolation operator ifs oemolistream drugs sdf mol OEGraphMol OEReadMolecule ifs mol for atom in mol GetAtoms print atom GetIdx print x 6 3f y 6 3f z 6 3f mol GetCoords atom To get the coordinates of the entire molecule in one call we can use the following example Note that the return from GetCoords is a dictionary of triples indexed by atom index as returned from atom GetIdx ifs oemolistream drugs sdf mol OEGraphMol OEReadMolecule ifs mol coords mol GetCoords for atom in mol GetAtoms print atom GetIdx print x 6 3f y 6 3f z 6 3f coords atom GetIdx Setting of coordinates can be done in a completely analogous way using the corresponding SetCoords methods To zero all the coordinates on an atom by atom basis ifs oemolistream drugs sdf mol OEGraphMol OEReadMolecule ifs mol for atom in mol GetAtoms print x 6 3f y 6 3f z 6 3f mol GetCoords atom mol SetCoords atom print x 6 3f y 6 3f z 6 3f mol GetCoords atom or you can set them all at once with a dictionary ifs oemolistream drugs sdf mol OEGraphMol OEReadMolecule ifs mol create an empty dictionary coords loop over atoms adding entry to dictionary for atom in mol GetAtoms i atom GetIdx coords i set coords mol SetCoords coords loop again to verify it worked for atom in mol GetAtoms print mol GetCoords atom Subsections 18 1 1 C Array Wrappers OEChem Python Theory Manual Version 1 3 1 Previous 18 Coordinate Handling Up 18 Coordinate Handling Next 18 1 1 C Array Wrappers Documentation released on July 3 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/oechem/pyprog/node154.html", "title": "18.1 getting and setting coordinates of atoms and molecules", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<html>\n<head>\n<title>18.1 Getting and Setting Coordinates of Atoms and Molecules</title>\n<META NAME=\"description\" CONTENT=\"18.1 Getting and Setting Coordinates of Atoms and Molecules\">\n<META NAME=\"keywords\" CONTENT=\"pyprog\">\n<META NAME=\"resource-type\" CONTENT=\"document\">\n<META NAME=\"distribution\" CONTENT=\"global\">\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n<link rel=\"STYLESHEET\" href=\"pyprog.css\">\n<link rel=\"first\" href=\"pyprog.html\">\n<link rel=\"contents\" href=\"contents.html\" title=\"Contents\">\n\n<LINK REL=\"next\" HREF=\"node156.html\">\n<LINK REL=\"previous\" HREF=\"node153.html\">\n<LINK REL=\"up\" HREF=\"node153.html\">\n<LINK REL=\"next\" HREF=\"node155.html\">\n</head>\n<body>\n<DIV CLASS=\"navigation\">\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node153.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node153.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node155.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - Python Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"genindex.html\"><img src=\"../icons/index.gif\"\n  border=\"0\" alt=\"Index\"></A></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node153.html\">18. Coordinate Handling</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node153.html\">18. Coordinate Handling</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node155.html\">18.1.1 C Array Wrappers</A>\n<br><hr>\n</DIV>\n<!--End of Navigation Panel-->\n\n<H1><A NAME=\"SECTION0020100000000000000000\">\n18.1 Getting and Setting Coordinates of Atoms and Molecules</A>\n</H1>\n\n<P>\nAll molecules that conform to the OEMolBase API have a set of methods for\ngetting coordinates and setting coordinates. In Python, there are several\nversions of each, used depending on the level of access desired and the\nperformance required.\n\n<P>\nMember functions for getting coordinates:\n\n<UL>\n<LI>GetCoords() returns dictionary\n</LI>\n<LI>GetCoords(atom) returns (x,y,z) tuple\n</LI>\n<LI>GetCoords(OEDoubleArray)\n</LI>\n<LI>GetCoords(OEAtomsBase, OEDoubleArray)\n</LI>\n</UL>\n\n<P>\nMember functions for setting coordinates:\n\n<UL>\n<LI>SetCoords( dictionary )\n</LI>\n<LI>SetCoords( OEAtomBase, (x,y,z) )\n</LI>\n<LI>SetCoords(OEDoubleArray)\n</LI>\n<LI>SetCoords(OEAtomBase, OEDoubleArray)\n</LI>\n</UL>\n\n<P>\nThe first two methods in each section use Python data structures for output\nand input. This has a potential performance cost as the structures are\ncreated and populated in the Get methods and the converted to C data structures\nin the Set methods. However, for many applications, the cost is small and more\nthan offset by the gain in using native data structures.\n\n<P>\nHere is a simple example, looping over the atoms in a molecule and printing\neach atom's coordinates:\n\n<P>\n<dl><dd><pre class=\"verbatim\">ifs = oemolistream('drugs.sdf')\nmol = OEGraphMol()\nOEReadMolecule(ifs, mol)\n\nfor atom in mol.GetAtoms():\n    print atom.GetIdx(), mol.GetCoords(atom)\n</pre></dl>\n\n<P>\nIf we want to format the output a bit better, we can send the tuple\nreturned from GetCoords directly to a string interpolation operator:\n\n<P>\n<dl><dd><pre class=\"verbatim\">ifs = oemolistream('drugs.sdf')\nmol = OEGraphMol()\nOEReadMolecule(ifs, mol)\n\nfor atom in mol.GetAtoms():\n    print atom.GetIdx(),\n    print 'x = %6.3f  y = %6.3f  z = %6.3f' % mol.GetCoords(atom)\n</pre></dl>\n\n<P>\nTo get the coordinates of the entire molecule in one call, we can use the\nfollowing example. Note that the return from GetCoords() is a dictionary\nof triples indexed by atom index as returned from atom.GetIdx().\n\n<P>\n<dl><dd><pre class=\"verbatim\">ifs = oemolistream('drugs.sdf')\nmol = OEGraphMol()\nOEReadMolecule(ifs, mol)\n\ncoords = mol.GetCoords()\n\nfor atom in mol.GetAtoms():\n    print atom.GetIdx(),\n    print 'x = %6.3f  y = %6.3f  z = %6.3f' % coords[atom.GetIdx()]\n</pre></dl>\n\n<P>\nSetting of coordinates can be done in a completely analogous way using the\ncorresponding SetCoords methods. To zero all the coordinates, on an\natom-by-atom basis:\n\n<P>\n<dl><dd><pre class=\"verbatim\">ifs = oemolistream('drugs.sdf')\nmol = OEGraphMol()\nOEReadMolecule(ifs, mol)\n\nfor atom in mol.GetAtoms():\n    print 'x = %6.3f  y = %6.3f  z = %6.3f' % mol.GetCoords(atom)\n    mol.SetCoords(atom, (0.0,0.0,0.0))\n    print 'x = %6.3f  y = %6.3f  z = %6.3f' % mol.GetCoords(atom)\n</pre></dl>\n\n<P>\nor you can set them all at once with a dictionary.\n\n<P>\n<dl><dd><pre class=\"verbatim\">ifs = oemolistream('drugs.sdf')\nmol = OEGraphMol()\nOEReadMolecule(ifs, mol)\n\n# create an empty dictionary\ncoords = {}\n\n# loop over atoms, adding entry to dictionary\nfor atom in mol.GetAtoms():\n    i = atom.GetIdx()\n    coords[i] = (0.0, 0.0, 0.0)\n\n# set coords\nmol.SetCoords(coords)\n\n# loop again to verify it worked\nfor atom in mol.GetAtoms():\n    print mol.GetCoords(atom)\n</pre></dl>\n\n<P>\n\n<p><hr>\n<!--Table of Child-Links-->\n<A NAME=\"CHILD_LINKS\"><STRONG>Subsections</STRONG></a>\n\n<UL CLASS=\"ChildLinks\">\n<LI><A href=\"node155.html\">18.1.1 C Array Wrappers</a>\n</ul>\n<!--End of Table of Child-Links-->\n\n<DIV CLASS=\"navigation\">\n<p><hr>\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node153.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node153.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node155.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - Python Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"genindex.html\"><img src=\"../icons/index.gif\"\n  border=\"0\" alt=\"Index\"></A></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node153.html\">18. Coordinate Handling</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node153.html\">18. Coordinate Handling</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node155.html\">18.1.1 C Array Wrappers</A>\n<hr>\n<span class=\"release-info\">Documentation released on July 30, 2004.</span>\n</DIV>\n<!--End of Navigation Panel-->\n\n</BODY>\n</HTML>\n", "id": 37736.0}