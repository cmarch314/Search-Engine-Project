{"text": "Biomorphic Computing Winter 2 4 Professor Bill Tomlinson Tuesdays 2 4 5 pm Location ICS 189 Assignment 2 Implement a genetic algorithm to evolve a simple creature that lives on a two dimensional world and is able to move to the location of a mouse click as rapidly as possible This creature should have a fixed length bitstring genome that is made up of all of the creature s behavioral rules Each rule should have a certain number of conditional bits that encode the sensory conditions under which the rule is appropriate and a certain number of action bits that encode what the creature should do when this rule is chosen The creature must execute exactly one rule per time step No rule may cause a creature to move more than one unit in X and one unit in Y per time step nor to turn more than 9 degrees per time step A creature may not both move and turn in the same time step and must always move in the direction it is facing The evolution of the creature should start from a randomly generated initial population and should demonstrate both crossing over and mutation The full evolutionary process should take no longer than approximately 1 2 minutes on a consumer grade PC Please use the following Java source code which has a grid world and GA framework already written for you http www ics uci edu wmt courses BiomoW 4 GAFramework zip Note In Eclipse set Run Run Parameters to Width 5 Height 5 for best viewing There are five incomplete methods where it is necessary to add code Evolver generateNewPopulation please encode the process by which each successive generation is derived from the one that precedes it Creature sense please encode the process by which the creature s sensory apparatus detects the target e g the mouse click Creature chooseAction please encode the process by which a rule is chosen based on how well its conditional bits match what it sensed in Creature sense Creature takeAction once a rule has been chosen this method shows how that rule is interpreted to affect the position or forward vector of the creature TestWorld testFitness this method determines the fitness function by which the creatures are evaluated In addition to the above methods it will probably be necessary for you to add other methods and fields to the code in order for it to work well Please comment all code that you add so that it is clear what each section is doing Please email wmt uci edu if you have any questions and email an entire set of compiling files to wmt uci edu by Monday 2 2 4 at 5pm Note If you d like a bigger challenge see how efficiently you can evolve an optimal creature minimizing number of rules number of bits per rule and total processing time ", "_id": "http://www.ics.uci.edu/~wmt/courses/BiomoW04/BiomoW04Assignment2.html", "title": "autonomous characters", "html": "<html>\r\r<head>\r<meta name=Title content=\"Autonomous Characters\">\r<meta name=Keywords content=\"\">\r<meta http-equiv=Content-Type content=\"text/html; charset=macintosh\">\r<meta name=ProgId content=Word.Document>\r<meta name=Generator content=\"Microsoft Word 10\">\r<meta name=Originator content=\"Microsoft Word 10\">\r<link rel=File-List href=\"BiomoW04Assignment2_files/filelist.xml\">\r<title>Autonomous Characters</title>\r<style>\r<!--\r /* Font Definitions */\r@font-face\r\t{font-family:\"Times New Roman\";\r\tpanose-1:0 2 2 6 3 5 4 5 2 3;}\r@font-face\r\t{font-family:Arial;\r\tpanose-1:0 2 11 6 4 2 2 2 2 2;}\r /* Style Definitions */\rp.MsoNormal, li.MsoNormal, div.MsoNormal\r\t{margin:0in;\r\tmargin-bottom:.0001pt;\r\tfont-size:12.0pt;\r\tfont-family:\"Times New Roman\";}\rh1\r\t{margin-top:12.0pt;\r\tmargin-right:0in;\r\tmargin-bottom:3.0pt;\r\tmargin-left:0in;\r\tfont-size:16.0pt;\r\tfont-family:Arial;}\rp.MsoTitle, li.MsoTitle, div.MsoTitle\r\t{margin:0in;\r\tmargin-bottom:.0001pt;\r\ttext-align:center;\r\tfont-size:20.0pt;\r\tfont-family:\"Times New Roman\";}\ra:link, span.MsoHyperlink\r\t{color:blue;\r\ttext-decoration:underline;\r\ttext-underline:single;}\ra:visited, span.MsoHyperlinkFollowed\r\t{color:purple;\r\ttext-decoration:underline;\r\ttext-underline:single;}\rp.Code, li.Code, div.Code\r\t{margin-top:0in;\r\tmargin-right:0in;\r\tmargin-bottom:0in;\r\tmargin-left:.5in;\r\tmargin-bottom:.0001pt;\r\tfont-size:14.0pt;\r\tfont-family:Arial;}\r@page Section1\r\t{size:8.5in 11.0in;\r\tmargin:1.0in 1.25in 1.0in 1.25in;}\rdiv.Section1\r\t{page:Section1;}\r /* List Definitions */\r@list l0:level1\r\t{text-indent:-.25in;\r\ttab-stops:list .5in;}\r@list l1:level1\r\t{text-indent:-.25in;\r\ttab-stops:list .5in;}\r@list l1:level2\r\t{text-indent:-.25in;\r\ttab-stops:list 1.0in;}\rol\r\t{margin-bottom:0in;}\rul\r\t{margin-bottom:0in;}\r-->\r</style>\r</head>\r\r<body bgcolor=white lang=EN-US link=blue vlink=purple style='tab-interval:.5in'>\r\r<div class=Section1>\r\r<p class=MsoTitle style='margin-top:0in;margin-right:-.25in;margin-bottom:0in;\rmargin-left:-.25in;margin-bottom:.0001pt'>Biomorphic Computing</p>\r\r<p class=MsoNormal align=center style='margin-top:0in;margin-right:-.25in;\rmargin-bottom:0in;margin-left:-.25in;margin-bottom:.0001pt;text-align:center'>Winter\r2004</p>\r\r<p class=MsoNormal align=center style='margin-top:0in;margin-right:-.25in;\rmargin-bottom:0in;margin-left:-.25in;margin-bottom:.0001pt;text-align:center'>Professor:\rBill Tomlinson</p>\r\r<p class=MsoNormal align=center style='margin-top:0in;margin-right:-.25in;\rmargin-bottom:0in;margin-left:-.25in;margin-bottom:.0001pt;text-align:center'>Tuesdays\r2:00-4:50pm</p>\r\r<p class=MsoNormal align=center style='margin-top:0in;margin-right:-.25in;\rmargin-bottom:0in;margin-left:-.25in;margin-bottom:.0001pt;text-align:center'>Location:\rICS 189</p>\r\r<h1>Assignment 2</h1>\r\r<p class=MsoNormal style='text-align:justify;tab-stops:.5in'>Implement a\rgenetic algorithm to evolve a simple creature that lives on a two-dimensional\rworld and is able to move to the location of a mouse click as rapidly as\rpossible. This creature should have a fixed-length bitstring genome that is\rmade up of all of the creature\ufffds behavioral rules. Each rule should have a\rcertain number of conditional bits that encode the sensory conditions under\rwhich the rule is appropriate, and a certain number of action bits that encode\rwhat the creature should do when this rule is chosen. The creature must execute\rexactly one rule per time step. No rule may cause a creature to move more than\rone unit in X and one unit in Y per time step, nor to turn more than 90 degrees\rper time step. A creature may not both move and turn in the same time step, and\rmust always move in the direction it is facing.</p>\r\r<p class=MsoNormal style='text-align:justify;tab-stops:.5in'>&nbsp;</p>\r\r<p class=MsoNormal style='text-align:justify;tab-stops:.5in'>The evolution of\rthe creature should start from a randomly generated initial population, and\rshould demonstrate both crossing over and mutation. The full evolutionary\rprocess should take no longer than approximately 1-2 minutes on a\rconsumer-grade PC. <span style='color:black'>Please use the following Java\rsource code, which has a grid world and GA framework already written for you.</span></p>\r\r<p class=MsoNormal style='text-align:justify;tab-stops:.5in'><span\rstyle='color:black'>http://www.ics.uci.edu/~wmt/courses/BiomoW04/GAFramework.zip</span></p>\r\r<p class=MsoNormal style='text-align:justify;tab-stops:.5in'>Note: In Eclipse,\rset Run-&gt;Run\ufffdParameters to Width = 500, Height = 500 for best viewing.</p>\r\r<p class=MsoNormal style='text-align:justify;tab-stops:.5in'>&nbsp;</p>\r\r<p class=MsoNormal style='text-align:justify;tab-stops:.5in'>There are five\rincomplete methods where it is necessary to add code:</p>\r\r<p class=MsoNormal style='text-align:justify;tab-stops:.5in'>Evolver.generateNewPopulation();\r//please encode the process by which each successive generation is derived from\rthe one that precedes it.</p>\r\r<p class=MsoNormal style='text-align:justify;tab-stops:.5in'>Creature.sense();//please\rencode the process by which the creature\ufffds sensory apparatus detects the target\r(e.g., the mouse click).</p>\r\r<p class=MsoNormal style='text-align:justify;tab-stops:.5in'>Creature.chooseAction();//please\rencode the process by which a rule is chosen based on how well its conditional\rbits match what it sensed in Creature.sense().</p>\r\r<p class=MsoNormal style='text-align:justify;tab-stops:.5in'>Creature.takeAction();//once\ra rule has been chosen, this method shows how that rule is interpreted to\raffect the position or forward vector of the creature.</p>\r\r<p class=MsoNormal style='text-align:justify;tab-stops:.5in'>TestWorld.testFitness();\r//this method determines the fitness function by which the creatures are\revaluated.</p>\r\r<p class=MsoNormal style='text-align:justify;tab-stops:.5in'>&nbsp;</p>\r\r<p class=MsoNormal style='text-align:justify;tab-stops:.5in'>In addition to the\rabove methods, it will probably be necessary for you to add other methods and\rfields to the code in order for it to work well. Please comment all code that\ryou add so that it is clear what each section is doing. </p>\r\r<p class=MsoNormal style='text-align:justify;tab-stops:.5in'>&nbsp;</p>\r\r<p class=MsoNormal style='text-align:justify;tab-stops:.5in'>Please email\rwmt@uci.edu if you have any questions, and email an entire set of compiling\rfiles to wmt@uci.edu by Monday, 2/2/04 at 5pm.</p>\r\r<p class=MsoNormal style='text-align:justify;tab-stops:.5in'>&nbsp;</p>\r\r<p class=MsoNormal style='text-align:justify;tab-stops:.5in'>Note: If you\ufffdd\rlike a bigger challenge, see how efficiently you can evolve an optimal\rcreature, minimizing number of rules, number of bits per rule and total\rprocessing time.</p>\r\r</div>\r\r</body>\r\r</html>\r", "id": 299.0}