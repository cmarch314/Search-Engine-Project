{"text": "Main Page Modules Data Structures File List Data Fields Globals Related Pages Vcap classCollection of routines which cap certain exponential and hyperbolic functions More Filesfile vcap h Contains declarations for class Vcap Defines define EXPMAX 85 Maximum argument for exp sinh or cosh define EXPMIN 85 Minimum argument for exp sinh or cosh Functionsdouble Vcap exp double x int ichop Provide a capped exp function double Vcap sinh double x int ichop Provide a capped sinh function double Vcap cosh double x int ichop Provide a capped cosh function Detailed Description Collection of routines which cap certain exponential and hyperbolic functions Note These routines are based on FORTRAN code by Mike Holst Function Documentation double Vcap cosh double x int ichop Provide a capped cosh function If the argument x of Vcap cosh exceeds EXPMAX or EXPMIN then we return cosh EXPMAX or cosh EXPMIN rather than cosh x Note Original FORTRAN routine from PMG library by Mike Holst Original notes to control overflow in the hyperbolic and exp functions note that the following are the argument limits of the various functions on various machines after which overflow occurs Convex C24 Sun 3 6 Sun SPARC IBM RS 6 sinh cosh exp maximal argument abs value 88 d dsinh dcosh dexp maximal argument abs value 7 9 d Author Nathan Baker based on FORTRAN code by Mike Holst Returns cosh x or capped equivalent Parameters x Argument to cosh ichop Set to 1 if function capped otherwise double Vcap exp double x int ichop Provide a capped exp function If the argument x of Vcap exp exceeds EXPMAX or EXPMIN then we return exp EXPMAX or exp EXPMIN rather than exp x Note Original FORTRAN routine from PMG library by Mike Holst Original notes to control overflow in the hyperbolic and exp functions note that the following are the argument limits of the various functions on various machines after which overflow occurs Convex C24 Sun 3 6 Sun SPARC IBM RS 6 sinh cosh exp maximal argument abs value 88 d dsinh dcosh dexp maximal argument abs value 7 9 d Author Nathan Baker based on FORTRAN code by Mike Holst Returns exp x or capped equivalent Parameters x Argument to exp ichop Set to 1 if function capped otherwise double Vcap sinh double x int ichop Provide a capped sinh function If the argument x of Vcap sinh exceeds EXPMAX or EXPMIN then we return sinh EXPMAX or sinh EXPMIN rather than sinh x Note Original FORTRAN routine from PMG library by Mike Holst Original notes to control overflow in the hyperbolic and exp functions note that the following are the argument limits of the various functions on various machines after which overflow occurs Convex C24 Sun 3 6 Sun SPARC IBM RS 6 sinh cosh exp maximal argument abs value 88 d dsinh dcosh dexp maximal argument abs value 7 9 d Author Nathan Baker based on FORTRAN code by Mike Holst Returns sinh x or capped equivalent Parameters x Argument to sinh ichop Set to 1 if function capped otherwise Generated on Tue Dec 6 1 5 59 2 5 for APBS by 1 3 5", "_id": "http://www.ics.uci.edu/~dock/manuals/apbs/html/programmer/group__Vcap.html", "title": "apbs: vcap class", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=iso-8859-1\">\n<title>APBS: Vcap class</title>\n<link href=\"apbs.css\" rel=\"stylesheet\" type=\"text/css\">\n</head><body>\n<!-- Generated by Doxygen 1.3.5 -->\n<div class=\"qindex\"><a class=\"qindex\" href=\"index.html\">Main&nbsp;Page</a> | <a class=\"qindex\" href=\"modules.html\">Modules</a> | <a class=\"qindex\" href=\"annotated.html\">Data&nbsp;Structures</a> | <a class=\"qindex\" href=\"files.html\">File&nbsp;List</a> | <a class=\"qindex\" href=\"functions.html\">Data&nbsp;Fields</a> | <a class=\"qindex\" href=\"globals.html\">Globals</a> | <a class=\"qindex\" href=\"pages.html\">Related&nbsp;Pages</a></div>\n<h1>Vcap class</h1>Collection of routines which cap certain exponential and hyperbolic functions.  \n<a href=\"#_details\">More...</a><table border=0 cellpadding=0 cellspacing=0>\n<tr><td></td></tr>\n<tr><td colspan=2><br><h2>Files</h2></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>file &nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"vcap_8h.html\">vcap.h</a></td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Contains declarations for class Vcap. <br><br></td></tr>\n\n<p>\n<tr><td colspan=2><br><h2>Defines</h2></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top><a class=\"anchor\" name=\"ga3\" doxytag=\"Vcap::EXPMAX\" ></a>\n#define&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vcap.html#ga3\">EXPMAX</a>&nbsp;&nbsp;&nbsp;85.00</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Maximum argument for exp(), sinh(), or cosh(). <br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top><a class=\"anchor\" name=\"ga4\" doxytag=\"Vcap::EXPMIN\" ></a>\n#define&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vcap.html#ga4\">EXPMIN</a>&nbsp;&nbsp;&nbsp;-85.00</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Minimum argument for exp(), sinh(), or cosh(). <br><br></td></tr>\n<tr><td colspan=2><br><h2>Functions</h2></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vcap.html#ga0\">Vcap_exp</a> (double x, int *ichop)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Provide a capped exp() function.  <a href=\"#ga0\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vcap.html#ga1\">Vcap_sinh</a> (double x, int *ichop)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Provide a capped sinh() function.  <a href=\"#ga1\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vcap.html#ga2\">Vcap_cosh</a> (double x, int *ichop)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Provide a capped cosh() function.  <a href=\"#ga2\"></a><br><br></td></tr>\n</table>\n<hr><a name=\"_details\"></a><h2>Detailed Description</h2>\nCollection of routines which cap certain exponential and hyperbolic functions. \n<p>\n<dl compact><dt><b>Note:</b></dt><dd>These routines are based on FORTRAN code by Mike Holst </dd></dl>\n<hr><h2>Function Documentation</h2>\n<a class=\"anchor\" name=\"ga2\" doxytag=\"vcap.h::Vcap_cosh\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> double Vcap_cosh </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\">double&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>x</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>int *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>ichop</em></td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"md\">)&nbsp;</td>\n          <td class=\"md\" colspan=\"2\"></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nProvide a capped cosh() function. \n<p>\nIf the argument x of <a class=\"el\" href=\"group__Vcap.html#ga2\">Vcap_cosh()</a> exceeds EXPMAX or EXPMIN, then we return cosh(EXPMAX) or cosh(EXPMIN) rather than cosh(x).<p>\n<dl compact><dt><b>Note:</b></dt><dd>Original FORTRAN routine from PMG library by Mike Holst Original notes: to control overflow in the hyperbolic and exp functions, note that the following are the argument limits of the various functions on various machines after which overflow occurs: Convex C240, Sun 3/60, Sun SPARC, IBM RS/6000: sinh, cosh, exp: maximal argument (abs value) = 88.0d0 dsinh, dcosh, dexp: maximal argument (abs value) = 709.0d0</dd></dl>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker (based on FORTRAN code by Mike Holst) </dd></dl>\n<dl compact><dt><b>Returns:</b></dt><dd>cosh(x) or capped equivalent </dd></dl>\n<dl compact><dt><b>Parameters: </b></dt><dd>\n<table border=0 cellspacing=2 cellpadding=0>\n<tr><td valign=top><em>x</em>&nbsp;</td><td>\nArgument to cosh() </td></tr>\n<tr><td valign=top><em>ichop</em>&nbsp;</td><td>\nSet to 1 if function capped, 0 otherwise </td></tr>\n</table>\n</dl>    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga0\" doxytag=\"vcap.h::Vcap_exp\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> double Vcap_exp </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\">double&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>x</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>int *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>ichop</em></td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"md\">)&nbsp;</td>\n          <td class=\"md\" colspan=\"2\"></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nProvide a capped exp() function. \n<p>\nIf the argument x of <a class=\"el\" href=\"group__Vcap.html#ga0\">Vcap_exp()</a> exceeds EXPMAX or EXPMIN, then we return exp(EXPMAX) or exp(EXPMIN) rather than exp(x).<p>\n<dl compact><dt><b>Note:</b></dt><dd>Original FORTRAN routine from PMG library by Mike Holst Original notes: to control overflow in the hyperbolic and exp functions, note that the following are the argument limits of the various functions on various machines after which overflow occurs: Convex C240, Sun 3/60, Sun SPARC, IBM RS/6000: sinh, cosh, exp: maximal argument (abs value) = 88.0d0 dsinh, dcosh, dexp: maximal argument (abs value) = 709.0d0</dd></dl>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker (based on FORTRAN code by Mike Holst) </dd></dl>\n<dl compact><dt><b>Returns:</b></dt><dd>exp(x) or capped equivalent </dd></dl>\n<dl compact><dt><b>Parameters: </b></dt><dd>\n<table border=0 cellspacing=2 cellpadding=0>\n<tr><td valign=top><em>x</em>&nbsp;</td><td>\nArgument to exp() </td></tr>\n<tr><td valign=top><em>ichop</em>&nbsp;</td><td>\nSet to 1 if function capped, 0 otherwise </td></tr>\n</table>\n</dl>    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga1\" doxytag=\"vcap.h::Vcap_sinh\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> double Vcap_sinh </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\">double&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>x</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>int *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>ichop</em></td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"md\">)&nbsp;</td>\n          <td class=\"md\" colspan=\"2\"></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nProvide a capped sinh() function. \n<p>\nIf the argument x of <a class=\"el\" href=\"group__Vcap.html#ga1\">Vcap_sinh()</a> exceeds EXPMAX or EXPMIN, then we return sinh(EXPMAX) or sinh(EXPMIN) rather than sinh(x).<p>\n<dl compact><dt><b>Note:</b></dt><dd>Original FORTRAN routine from PMG library by Mike Holst Original notes: to control overflow in the hyperbolic and exp functions, note that the following are the argument limits of the various functions on various machines after which overflow occurs: Convex C240, Sun 3/60, Sun SPARC, IBM RS/6000: sinh, cosh, exp: maximal argument (abs value) = 88.0d0 dsinh, dcosh, dexp: maximal argument (abs value) = 709.0d0</dd></dl>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker (based on FORTRAN code by Mike Holst) </dd></dl>\n<dl compact><dt><b>Returns:</b></dt><dd>sinh(x) or capped equivalent </dd></dl>\n<dl compact><dt><b>Parameters: </b></dt><dd>\n<table border=0 cellspacing=2 cellpadding=0>\n<tr><td valign=top><em>x</em>&nbsp;</td><td>\nArgument to sinh() </td></tr>\n<tr><td valign=top><em>ichop</em>&nbsp;</td><td>\nSet to 1 if function capped, 0 otherwise </td></tr>\n</table>\n</dl>    </td>\n  </tr>\n</table>\n<hr size=\"1\"><address style=\"align: right;\"><small>Generated on Tue Dec 6 10:05:59 2005 for APBS by\n<a href=\"http://www.doxygen.org/index.html\">\n<img src=\"doxygen.png\" alt=\"doxygen\" align=\"middle\" border=0 > \n</a>1.3.5 </small></address>\n</body>\n</html>\n", "id": 42538.0}