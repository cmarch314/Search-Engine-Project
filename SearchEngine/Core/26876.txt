{"text": "Research in Software Explanation David F Redmiles This research focuses on the problem of supporting programmers in using complex software libraries It develops a cognitive theory of supporting programmers with examples and explanations The theory is motivated by previous cognitive studies of programmers as well as real consulting experience The theory is instantiated in a system called EXPLAINER running on a Symbolics Lisp machine EXPLAINER relies on a semantic network representation of program examples which captures multiple knowledge perspectives The theory is substantiated by tests of the EXPLAINER system both in a classroom setting and in a controlled empirical study To its users EXPLAINER appears much like a hypermedia or computer aided software engineering CASE tool Users can view diagrammed schemas of program examples code listings sample execution and text explanation The contents of these views can be clicked on with a mouse to expand views and access additional information However unlike hypermedia tools the information in the views is being generated in real time from a semantic network representation of the example Unlike CASE tools the diagrammed schemas and text explanation are based on knowledge perspectives about the problem the example solves and not just the structure of the example program code Basically in terms of cognitive theory EXPLAINER provides its users with the programming plans underlying an example In a classroom evaluation students learned about expert systems programming by reviewing a Mycin like system represented in EXPLAINER Students using EXPLAINER were able to better answer general questions about expert systems than students who reviewed the code and documentation on their own In a more rigorous test EXPLAINER was compared in a programming task against support provided by a hypermedia system providing conventional documentation Programmers using EXPLAINER exhibited a more controlled and directed problem solving process compared to those using the more conventional though on line documentation Observations in this test are corroborated by statistical analyses based on variances measured in the control groups The result is positive in light of studies to date which have found programmers performing with great individual variability independent of the support tool provided The success of EXPLAINER is attributed to its providing explanations based on programming plans and multiple perspective representations Further Information A Macintosh demo of Explainer really big file David F Redmiles Home Page Department of Information and Computer Science University of California Irvine CA 92717 3425", "_id": "http://www.ics.uci.edu/~redmiles/explainer.html", "title": "redmiles - software explanation", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<HTML>\n<HEAD>\n   <TITLE>Redmiles - Software Explanation</TITLE>\n   <META NAME=\"Author\" CONTENT=\"\">\n   <META NAME=\"GENERATOR\" CONTENT=\"User-Agent: Mozilla/3.01Gold (Macintosh; I; PPC)\">\n</HEAD>\n<BODY>\n\n<H2>Research in Software Explanation &shy; David F. Redmiles</H2>\n\n<P><IMG SRC=\"final-screen.gif\" HEIGHT=188 WIDTH=268 ALIGN=LEFT>This research\nfocuses on the problem of supporting programmers in using complex software\nlibraries. It develops a cognitive theory of supporting programmers with\nexamples and explanations. The theory is motivated by previous cognitive\nstudies of programmers as well as real consulting experience. The theory\nis instantiated in a system called EXPLAINER running on a Symbolics Lisp\nmachine. EXPLAINER relies on a semantic network representation of program\nexamples which captures multiple knowledge perspectives. The theory is\nsubstantiated by tests of the EXPLAINER system both in a classroom setting\nand in a controlled empirical study.</P>\n\n<P>To its users, EXPLAINER appears much like a hypermedia or computer-aided\nsoftware engineering (CASE) tool. Users can view diagrammed schemas of\nprogram examples, code listings, sample execution, and text explanation.\nThe contents of these views can be clicked on with a mouse to expand views\nand access additional information. However, unlike hypermedia tools, the\ninformation in the views is being generated in real time from a semantic\nnetwork representation of the example. Unlike CASE tools, the diagrammed\nschemas and text explanation are based on knowledge perspectives about\nthe problem the example solves and not just the structure of the example\nprogram code. Basically, in terms of cognitive theory, EXPLAINER provides\nits users with the &quot;programming plans&quot; underlying an example.</P>\n\n<P>In a classroom evaluation, students learned about expert systems programming\nby reviewing a Mycin-like system represented in EXPLAINER. Students using\nEXPLAINER were able to better answer general questions about expert systems\nthan students who reviewed the code and documentation on their own. In\na more rigorous test, EXPLAINER was compared in a programming task against\nsupport provided by a hypermedia system providing conventional documentation.\nProgrammers using EXPLAINER exhibited a more controlled and directed problem-solving\nprocess compared to those using the more conventional, though on-line,\ndocumentation. Observations in this test are corroborated by statistical\nanalyses based on variances measured in the control groups. The result\nis positive in light of studies to date which have found programmers performing\nwith great individual variability independent of the support tool provided.\nThe success of EXPLAINER is attributed to its providing explanations based\non programming plans and multiple perspective representations.</P>\n\n<H2>Further Information: </H2>\n\n<UL>\n<LI>A <A HREF=\"http://www.ics.uci.edu/~redmiles/movies/explainer.mov\">Macintosh\ndemo of Explainer</A> (really big file); </LI>\n</UL>\n\n<P>\n<HR><BR>\n<A HREF=\"http://www.ics.uci.edu/~redmiles\">David F. Redmiles &shy; Home\nPage<BR>\n</A><A HREF=\"http://www.ics.uci.edu/\">Department of Information and Computer\nScience<BR>\n</A><A HREF=\"http://www.uci.edu/\">University of California, Irvine CA 92717-3425</A>\n</P>\n\n<P><FONT SIZE=-1><SCRIPT LANGUAGE=\"JavaScript\"><!--//begin script\n document.write(\"(Last Modified: \"+document.lastModified+\")\");\n// end script --></SCRIPT></FONT></P>\n\n</BODY>\n</HTML>\n", "id": 26876.0}