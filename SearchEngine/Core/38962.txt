{"text": "Navigation Up Table of Contents Bibliography Index Title Page CGAL Explorer Definition An instance E of the data type Explorer is a decorator to explore the structure of the plane map underlying the Nef polyhedron It inherits all topological adjacency exploration operations from Topological explorer Explorer additionally allows one to explore the geometric embedding The position of each vertex is given by a so called extended point which is either a standard affine point or the tip of a ray touching an infinimaximal square frame centered at the origin A vertex v is called a standard vertex if its embedding is a standard point and non standard if its embedding is a non standard point By the straightline embedding of their source and target vertices edges correspond to either affine segments rays or lines or are part of the bounding frame Figure Extended geometry standard vertices are marked by S non standard vertices are marked by N A The possible embeddings of edges an affine segment s1 an affine ray s2 an affine line s3 B A plane map embedded by extended geometry note that the frame is arbitrarily large the 6 vertices on the frame are at infinity the two faces represent a geometrically unbounded area however they are topologically closed by the frame edges No standard point can be placed outside the frame Inherits FromTopological explorer Types Explorer Point the point type of finite vertices Explorer Ray the ray type of vertices on the frame Iterators handles and circulators are inherited from Topological explorer Creation Explorer is copy constructable and assignable An object can be obtained via the Nef polyhedron 2 explorer method of Nef polyhedron 2 Operations bool E is standard Vertex const handle v returns true iff v s position is a standard point Point E point Vertex const handle v returns the standard point that is the embedding of v Precondition E is standard v Ray E ray Vertex const handle v returns the ray defining the non standard point on the frame Precondition E is standard v bool E is frame edge Halfedge const handle e returns true iff e is part of the infinimaximal frame Next ExtendedKernelTraits 2 Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Nef_2_ref/Class_Explorer.html", "title": "explorer", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Nef_2_ref/Explorer.tex' -->\n<html> <head>  \n<title>Explorer</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_717\"></A>\n\n<A NAME=\"Cross_link_anchor_718\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_743\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Class.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_CGAL::Explorer\"></A>\n<h2><I>CGAL::Explorer</I></h2>\n<P>\n\n<H3>Definition</H3>\n<P>\n\nAn instance <I>E</I> of the data type <I><A HREF=\"Class_Explorer.html#Cross_link_anchor_718\">Explorer</A></I> is a decorator to\nexplore the structure of the plane map underlying the Nef\npolyhedron. It inherits all topological adjacency exploration\noperations from <I><A HREF=\"Class_Topological_explorer.html#Cross_link_anchor_716\">Topological_explorer</A></I>. <I><A HREF=\"Class_Explorer.html#Cross_link_anchor_718\">Explorer</A></I>\nadditionally allows one to explore the geometric embedding.\n<P>\n\nThe position of each vertex is given by a so-called extended point,\nwhich is either a standard affine point or the tip of a ray touching\nan infinimaximal <A HREF=\"../NumberTypeSupport_ref/Function_square.html#Cross_link_anchor_1418\">square</A> frame centered at the origin. A vertex <I>v</I>\nis called a <I>standard</I> vertex if its embedding is a\n<I>standard</I> point and <I>non-standard</I> if its embedding is a\n<I>non-standard</I> point. By the straightline embedding of their\nsource and target vertices, edges correspond to either affine\nsegments, rays or lines or are part of the bounding frame.\n<P>\n\n<B>Figure:&nbsp;&nbsp;</B>Extended geometry: standard vertices are marked\nby S, non-standard vertices are marked by N. <B>A</B>: The possible\nembeddings of edges: an affine segment s1, an affine ray s2, an affine\nline s3. <B>B</B>: A plane map embedded by extended geometry: note\nthat the frame is arbitrarily large, the 6 vertices on the frame are\nat infinity, the two faces represent a geometrically unbounded <A HREF=\"../Kernel_23_ref/Function_area.html#Cross_link_anchor_159\">area</A>,\nhowever they are topologically closed by the frame edges. No standard\npoint can be placed outside the frame.<A NAME=\"extsegs\"></A>\n\n<CENTER>\n<IMG BORDER=0 SRC=\"./extsegs.gif\" ALIGN=center\nALT=\"Extended geometry\">\n</CENTER>\n<P>\n\n<H3>Inherits From</H3><A HREF=\"Class_Topological_explorer.html#Cross_link_anchor_716\">Topological_explorer</A>\n<P>\n\n<H3>Types</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Explorer.html#Cross_link_anchor_718\">Explorer</A>::Point\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    the point type of finite vertices.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Explorer.html#Cross_link_anchor_718\">Explorer</A>::Ray\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    the ray type of vertices on the frame.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\nIterators, handles, and circulators are inherited from\n<I><A HREF=\"Class_Topological_explorer.html#Cross_link_anchor_716\">Topological_explorer</A></I>.\n<P>\n\n<H3>Creation</H3>\n<P>\n\n<I><A HREF=\"Class_Explorer.html#Cross_link_anchor_718\">Explorer</A></I> is copy constructable and assignable. An object can be\nobtained via the <I><A HREF=\"Class_Nef_polyhedron_2.html#Cross_link_anchor_714\">Nef_polyhedron_2</A>::explorer()</I> method of\n<I><A HREF=\"Class_Nef_polyhedron_2.html#Cross_link_anchor_714\">Nef_polyhedron_2</A></I>.\n<P>\n\n<H3>Operations</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_is_standard6Vertex_const_handle_v9_;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    E.is_standard ( Vertex_const_handle v)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns true iff\n<I>v</I>'s position is a standard point.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Point_point6Vertex_const_handle_v9_;\"></A>\nPoint\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    E.point ( Vertex_const_handle v)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the standard\npoint that is the embedding of <I>v</I>.<BR>\n\n<EM>Precondition: </EM><I>E.is_standard(v)</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Ray_ray6Vertex_const_handle_v9_;\"></A>\nRay\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    E.ray ( Vertex_const_handle v)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the ray defining\nthe non-standard point on the frame.<BR>\n\n<EM>Precondition: </EM><I>!E.is_standard(v)</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_is_frame_edge6Halfedge_const_handle_e9_;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    E.is_frame_edge ( Halfedge_const_handle e)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns true\niff <I>e</I> is part of the infinimaximal frame.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Concept_ExtendedKernelTraits_2.html\"><I>ExtendedKernelTraits_2</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_12!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 38962.0}