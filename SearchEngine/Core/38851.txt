{"text": "Navigation Up Table of Contents Bibliography Index Title Page HalfedgeDSHalfedge Definition The concept HalfedgeDSHalfedge defines the requirements for the local Halfedge type in the HalfedgeDS concept It is also required in the Halfedge wrapper Refs Traits member class template of an items class see the HalfedgeDSItems concept A halfedge is an oriented edge between two vertices It is always paired with a halfedge pointing in the opposite direction The opposite member function returns this halfedge of opposite orientation The next member function points to the successor halfedge along the face or if the halfedge is a border halfedge along the open region A halfedge optionally stores a reference to the previous halfedge along the face a reference to an incident vertex and a reference to an incident face Type tags indicate whether the related member functions are supported Figure depicts the relationship between a halfedge and its incident halfedges vertices and faces Figure The three classes Vertex Halfedge and Face of the halfedge data structure Member functions with shaded background are mandatory The others are optionally supported For the protection of the integrity of the data structure classes such as CGAL Polyhedron 3 are allowed to redefine the modifying member functions to be private In order to make them accessible for the halfedge data structure they must be derived from a base class Base where the modifying member functions are still public Even more protection is provided for the set opposite member function The base class Base base provides access to it The protection could be bypassed also by an user but not by accident Types HalfedgeDSHalfedge HalfedgeDS instantiated HalfedgeDS Refs HalfedgeDSHalfedge Base base class that allows modifications HalfedgeDSHalfedge Base base base class to access set opposite HalfedgeDSHalfedge Vertex model of HalfedgeDSVertex HalfedgeDSHalfedge Face model of HalfedgeDSFace HalfedgeDSHalfedge Vertex handle handle to vertex HalfedgeDSHalfedge Halfedge handle handle to halfedge HalfedgeDSHalfedge Face handle handle to face HalfedgeDSHalfedge Vertex const handle HalfedgeDSHalfedge Halfedge const handle HalfedgeDSHalfedge Face const handle HalfedgeDSHalfedge Supports halfedge prev CGAL Tag true or CGAL Tag false HalfedgeDSHalfedge Supports halfedge vertex HalfedgeDSHalfedge Supports halfedge face Creation HalfedgeDSHalfedge h default constructor Operations Halfedge handle h opposite Halfedge const handle h opposite const the opposite halfedge void h set opposite Halfedge handle h sets opposite halfedge to h Halfedge handle h next Halfedge const handle h next const the next halfedge around the face void h set next Halfedge handle h sets next halfedge to h bool h is border const is true if h is a border halfedge Operations available if Supports halfedge prev CGAL Tag true Halfedge handle h prev Halfedge const handle h prev const the previous halfedge around the face void h set prev Halfedge handle h sets prev halfedge to h Operations available if Supports halfedge vertex CGAL Tag true Vertex handle h vertex Vertex const handle h vertex const the incident vertex of h void h set vertex Vertex handle v sets incident vertex to v Operations available if Supports halfedge face CGAL Tag true Face handle h face Face const handle h face const the incident face of h If h is a border halfedge the result is default construction of the handle void h set face Face handle f sets incident face to f Has Models CGAL HalfedgeDS halfedge base Refs CGAL HalfedgeDS halfedge min base Refs See Also HalfedgeDS Traits Items Alloc HalfedgeDSItems HalfedgeDSVertex HalfedgeDSFace Next HalfedgeDSItems Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/HalfedgeDS_ref/Concept_HalfedgeDSHalfedge.html", "title": "halfedgedshalfedge", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './HalfedgeDS_ref/HalfedgeDSHalfedge.tex' -->\n<html> <head>  \n<title>HalfedgeDSHalfedge</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_875\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_853\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Concept.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_HalfedgeDSHalfedge\"></A>\n<h2><I>HalfedgeDSHalfedge</I></h2>\n\n\n<A NAME=\"pageHalfedgeDSItemsHalfedgeRef\"></A>\n<P>\n\n<H3>Definition</H3>\n<P>\n\nThe concept <I><A HREF=\"Concept_HalfedgeDSHalfedge.html#Cross_link_anchor_875\">HalfedgeDSHalfedge</A></I> defines the requirements for the local <I>Halfedge</I> \ntype in the <I><A HREF=\"Concept_HalfedgeDS.html#Cross_link_anchor_873\">HalfedgeDS</A></I> concept. It is also required in \nthe <I>Halfedge_wrapper&lt;Refs,Traits&gt;</I> member class template of an\nitems class, see the <I><A HREF=\"Concept_HalfedgeDSItems.html#Cross_link_anchor_876\">HalfedgeDSItems</A></I> concept.\n<P>\n\nA halfedge is an oriented edge between two vertices. It is always\npaired with a halfedge pointing in the <A HREF=\"../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243\">opposite</A> direction. The\n<I><A HREF=\"../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243\">opposite</A>()</I> member function returns this halfedge of <A HREF=\"../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243\">opposite</A>\n<A HREF=\"../Kernel_23_ref/Function_orientation.html#Cross_link_anchor_247\">orientation</A>. The <I>next()</I> member function points to the <A HREF=\"../STL_Extension_ref/Function_successor.html#Cross_link_anchor_1444\">successor</A>\nhalfedge along the face - or if the halfedge is a border halfedge -\nalong the open region. A halfedge optionally stores a reference to the\nprevious halfedge along the face, a reference to an incident vertex,\nand a reference to an incident face. Type tags indicate whether the\nrelated member functions are supported.\nFigure&nbsp;\n  <A HREF=\"#figureHalfedgeDSOptionalMethods\"><IMG \n  SRC=\"cc_ref_up_arrow.gif\" ALT=\"reference arrow\" WIDTH=\"10\" HEIGHT=\"10\"></A>\n\ndepicts the relationship between a halfedge and its incident\nhalfedges, vertices, and faces.\n<P>\n\n<CENTER>\n    <A NAME=\"figureHalfedgeDSOptionalMethods\">\n    <A HREF=\"fig/hds_optional.gif\">\n        <img src=\"fig/hds_optional_small.gif\" \n             alt=\"Class Diagram\"></A><BR>\n\n<A HREF=\"fig/hds_optional.gif\">Figure:</A>\n    The three classes <I>Vertex</I>, <I>Halfedge</I>, and \n          <I>Face</I> of the halfedge data structure. Member\n          functions with shaded background are mandatory. The others\n          are optionally supported.\n    </CENTER>\n<P>\n\nFor the protection of the integrity of the data structure classes such\nas <I><A HREF=\"../Polyhedron_ref/Class_Polyhedron_3.html#Cross_link_anchor_853\">CGAL::Polyhedron_3</A></I> are allowed to redefine the modifying member\nfunctions to be private. In order to make them accessible for the\nhalfedge data structure they must be derived from a base class\n<I>Base</I> where the modifying member functions are still public. Even\nmore protection is provided for the <I>set_opposite()</I> member\nfunction. The base class <I>Base_base</I> provides access to it.  (The\nprotection could be bypassed also by an user, but not by accident.)\n<P>\n\n<H3>Types</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_HalfedgeDSHalfedge.html#Cross_link_anchor_875\">HalfedgeDSHalfedge</A>::<A HREF=\"Concept_HalfedgeDS.html#Cross_link_anchor_873\">HalfedgeDS</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    instantiated <I><A HREF=\"Concept_HalfedgeDS.html#Cross_link_anchor_873\">HalfedgeDS</A></I> ( <MATH><I> <IMG BORDER=0 WIDTH=11 HEIGHT=9 ALIGN=BOTTOM SRC=\"cc_equiv.gif\"> </I></MATH> <I>Refs</I>).\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_HalfedgeDSHalfedge.html#Cross_link_anchor_875\">HalfedgeDSHalfedge</A>::Base\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    base class that allows modifications.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_HalfedgeDSHalfedge.html#Cross_link_anchor_875\">HalfedgeDSHalfedge</A>::Base_base\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    base class to access <I>set_opposite()</I>.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_HalfedgeDSHalfedge.html#Cross_link_anchor_875\">HalfedgeDSHalfedge</A>::Vertex\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    model of <I><A HREF=\"Concept_HalfedgeDSVertex.html#Cross_link_anchor_877\">HalfedgeDSVertex</A></I>.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_HalfedgeDSHalfedge.html#Cross_link_anchor_875\">HalfedgeDSHalfedge</A>::Face\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    model of <I><A HREF=\"Concept_HalfedgeDSFace.html#Cross_link_anchor_874\">HalfedgeDSFace</A></I>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_HalfedgeDSHalfedge.html#Cross_link_anchor_875\">HalfedgeDSHalfedge</A>::Vertex_handle\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    handle to vertex.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_HalfedgeDSHalfedge.html#Cross_link_anchor_875\">HalfedgeDSHalfedge</A>::Halfedge_handle\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    handle to halfedge.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_HalfedgeDSHalfedge.html#Cross_link_anchor_875\">HalfedgeDSHalfedge</A>::Face_handle\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    handle to face.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_HalfedgeDSHalfedge.html#Cross_link_anchor_875\">HalfedgeDSHalfedge</A>::Vertex_const_handle\n        </I></NOBR>\n        </TD></TR>\n<P>\n\n\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_HalfedgeDSHalfedge.html#Cross_link_anchor_875\">HalfedgeDSHalfedge</A>::Halfedge_const_handle\n        </I></NOBR>\n        </TD></TR>\n<P>\n\n\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_HalfedgeDSHalfedge.html#Cross_link_anchor_875\">HalfedgeDSHalfedge</A>::Face_const_handle\n        </I></NOBR>\n        </TD></TR>\n<P>\n\n<TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_HalfedgeDSHalfedge.html#Cross_link_anchor_875\">HalfedgeDSHalfedge</A>::Supports_halfedge_prev\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    <I><A HREF=\"../Kernel_23_ref/Class_Tag_true.html#Cross_link_anchor_477\">CGAL::Tag_true</A></I> or \n  <I><A HREF=\"../Kernel_23_ref/Class_Tag_false.html#Cross_link_anchor_475\">CGAL::Tag_false</A></I>.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_HalfedgeDSHalfedge.html#Cross_link_anchor_875\">HalfedgeDSHalfedge</A>::Supports_halfedge_vertex\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    &tilde;\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_HalfedgeDSHalfedge.html#Cross_link_anchor_875\">HalfedgeDSHalfedge</A>::Supports_halfedge_face\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    &tilde;\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Creation</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_HalfedgeDSHalfedge.html#Cross_link_anchor_875\">HalfedgeDSHalfedge</A> h;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    default constructor.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Operations</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Halfedge_handle_opposite69;\"></A>\nHalfedge_handle\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    h.<A HREF=\"../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243\">opposite</A> () \n        </I></NOBR>\n        </TD>\n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Halfedge_const_handle_opposite69_const;\"></A>\nHalfedge_const_handle\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    h.<A HREF=\"../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243\">opposite</A> () const\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    the <A HREF=\"../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243\">opposite</A> halfedge.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_set_opposite6_Halfedge_handle_h9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    h.set_opposite ( Halfedge_handle h) \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    sets <A HREF=\"../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243\">opposite</A> halfedge to <MATH><I>h</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Halfedge_handle_next69;\"></A>\nHalfedge_handle\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    h.next () \n        </I></NOBR>\n        </TD>\n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Halfedge_const_handle_next69_const;\"></A>\nHalfedge_const_handle\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    h.next () const\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    the next halfedge around the face.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_set_next6_Halfedge_handle_h9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    h.set_next ( Halfedge_handle h) \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    sets next halfedge to <MATH><I>h</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_is_border69_const;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    h.is_border () const\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    is true if <I>h</I> is a border halfedge.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Operations available if <I>Supports_halfedge_prev</I> <MATH><I> <IMG BORDER=0 WIDTH=11 HEIGHT=9 ALIGN=BOTTOM SRC=\"cc_equiv.gif\"> </I></MATH> \n           <I>CGAL::Tag_true</I></H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Halfedge_handle_prev69;\"></A>\nHalfedge_handle\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    h.prev () \n        </I></NOBR>\n        </TD>\n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Halfedge_const_handle_prev69_const;\"></A>\nHalfedge_const_handle\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    h.prev () const\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    the previous halfedge around the face.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_set_prev6_Halfedge_handle_h9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    h.set_prev ( Halfedge_handle h) \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    sets prev halfedge to <MATH><I>h</I></MATH>.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Operations available if <I>Supports_halfedge_vertex</I> <MATH><I> <IMG BORDER=0 WIDTH=11 HEIGHT=9 ALIGN=BOTTOM SRC=\"cc_equiv.gif\"> </I></MATH> \n           <I>CGAL::Tag_true</I></H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Vertex_handle_vertex69;\"></A>\nVertex_handle\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    h.vertex () \n        </I></NOBR>\n        </TD>\n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Vertex_const_handle_vertex69_const;\"></A>\nVertex_const_handle\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    h.vertex () const\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    the incident vertex of <I>h</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_set_vertex6_Vertex_handle_v9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    h.set_vertex ( Vertex_handle v) \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    sets incident vertex to <MATH><I>v</I></MATH>.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Operations available if <I>Supports_halfedge_face</I> <MATH><I> <IMG BORDER=0 WIDTH=11 HEIGHT=9 ALIGN=BOTTOM SRC=\"cc_equiv.gif\"> </I></MATH> \n           <I>CGAL::Tag_true</I></H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Face_handle_face69;\"></A>\nFace_handle\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    h.face () \n        </I></NOBR>\n        </TD>\n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Face_const_handle_face69_const;\"></A>\nFace_const_handle\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    h.face () const\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    the incident face of <I>h</I>.  If <I>h</I> is a border halfedge \n      the result is default construction of the handle.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_set_face6_Face_handle_f9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    h.set_face ( Face_handle f) \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    sets incident face to <MATH><I>f</I></MATH>.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Has Models</H3>\n<P>\n\n<I><A HREF=\"Class_HalfedgeDS_halfedge_base.html#Cross_link_anchor_889\">CGAL::HalfedgeDS_halfedge_base</A>&lt;Refs&gt;</I><BR>\n\n<I><A HREF=\"Class_HalfedgeDS_halfedge_min_base.html#Cross_link_anchor_891\">CGAL::HalfedgeDS_halfedge_min_base</A>&lt;Refs&gt;</I>\n<P>\n\n<H3>See Also</H3>\n<P>\n\n<I><A HREF=\"Concept_HalfedgeDS.html#Cross_link_anchor_873\">HalfedgeDS</A>&lt;Traits,Items,Alloc&gt;</I><BR>\n\n<I><A HREF=\"Concept_HalfedgeDSItems.html#Cross_link_anchor_876\">HalfedgeDSItems</A></I><BR>\n\n<I><A HREF=\"Concept_HalfedgeDSVertex.html#Cross_link_anchor_877\">HalfedgeDSVertex</A></I><BR>\n\n<I><A HREF=\"Concept_HalfedgeDSFace.html#Cross_link_anchor_874\">HalfedgeDSFace</A></I>\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Concept_HalfedgeDSItems.html\"><I>HalfedgeDSItems</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_30!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 38851.0}