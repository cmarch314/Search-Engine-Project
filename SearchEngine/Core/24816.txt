{"text": "ICS 6N Fall 2 13 Lab 1 Introductoin to MATLAB Due Wednesday Oct 16 What to hand in This lab will introduce you to some of the basic features of MATLAB You should do the exercises below As you do each one copy the relavant input and output from MATLAB and paste it into a Word document You need only include commands that worked You will hand in a printed copy of the Word document in lecture on the day that the lab is due Make sure and include your name student ID and which lab section you are signed up for You should save your file temporarily on the machine in the lab You should delete the file from the lab computer before your logout but don t forget to save a more permanent copy either by emailing it to yourself or storing it somewhere in the cloud You can print your lab using one of the lab printers or you can print it with your own printer The future labs will contain most of the applications of linear algebra to be found in Math 2 F These problems can take a little while to work out Be warned that the future labs will be longer than this lab Don t wait until the last minute to start The lab assignments will contain descriptions of commands and responses in MATLAB Typically the text that is input by the user is in red and the part that is printed by MATLAB is in black About MATLAB Linear algebra is used in every branch of mathematics and is thus a crucial part of it Linear algebra also has applications in practically every field of natural and social sciences Physics chemistry biology computer science economics and sociology have all benefited from the advent of linear algebra In the lab sections this quarter you will see a few applications of linear algebra to some of these areas Problems that arise in these fields involve raw data so professionals in these fields have come to depend on computers as an essential tool Computer programs such as MATLAB help in performing tedious calculations so that you can spend less time crunching numbers It turns out that MATLAB is especially well suited for working with matrices and performing various algorithmic routines that come up in linear algebra In this lab we will start to get acquainted with MATLAB and learn how it handles matrices Variables in Matlab People like to think of MATLAB as a very powerful calculator you can use on your computer For our purpose that is not far from the mark To define variables simply type in the variable you wish to define then an equal sign and finally the value you wish to assign to that variable So if we want to assign the value of 5 to the variable x we type x 5 x 5 Unless we later redefine x every time we type x MATLAB will replace it with 5 when doing a calculation For example we can define the following variables by their place in the alphabet l 12 i 9 n 14 e 5 a 1 r 18 g 7 b 2 We have just assigned specific values to the given letters Note the semicolons in this command suppress the output If they were not there once you hit return MATLAB would list the eight variables and their new values It is also possible to assign values to more than just single letters using MATLAB It is sometimes easier to define something with a specific name rather than a single letter For example we can define UCIrvine 92697 UCIrvine 92697 92697 is the zip code of UCI Notice that there are no spaces in variable names We cannot define a variable called UC Irvine Also when defining something MATLAB is case sensitive so if we accidentally type laytext and hit return we will get an error message as seen here ucrivine Undefined function or variable ucrivine Using the variables we just defined we can do some calculations and save them as specific names linearalgebra l i n e a r a l g e b r a linearalgebra 1 5 angle a n g l e angle 39 Exercise 1 1 Define the letters of your first and last name to be the number corresponding to their place in the alphabet Then set your name without any spaces equal to the sum of the letters Hints and Tips MATLAB has some useful features that are worth learning at this point If you ever get stuck or need more info an excellent way to get help in MATLAB is by entering helpbrowser This will allow you to view the syntax of various commands by reading their help files and to search for keywords Our final tip is to become very familiar with the use of the up arrow key Indeed at this point bring up the main MATLAB window and try pushing the up arrow key on the keyboard once Then push it a few more times Notice that this is bringing your previously entered commands back onto the command line You can also use the left and right arrow keys to position the cursor in a command in order to edit it This is a great way to correct a command that had an error in it Exerxise 1 2 Suppose you want to calculate Enter the command z 25 1 7exp 5 cos pi 3 You will get an error message Use the up arrow to bring this line back and then correct the error s Hint Good things to check are multiplication and parentheses Matrices in MATLAB The first thing to learn when dealing with matrices is how to construct a matrix or vector using MATLAB To define a matrix using MATLAB we use the square brackets tells MATLAB we are starting to create a matrix and tells MATLAB that we have finished with our construction The entries of the matrix should be entered in rows from left to right To separate entries we can either hit the space bar or insert a comma Once we finish with a given row and want to move to the next we can either press the return key or use a semicolon This is not the same as using the semicolon to suppress output So to construct the following matrix here are two possible ways to go about it A 2 1 4 3 A 2 1 Return key 4 3 Both will yield the desired matrix A 2 1 4 3 Exerxise 1 3 Input the following matrix into MATLAB MAtrix operations and manipulations Sometimes we need to get at certain parts of a matrix only maybe just a certain row or even a single entry This is done with regular parentheses and For example to see the 1 2 entry of the matrix A above i e the entry in the first row and second column we use the command A 1 2 We also can use the colon to mean all as in the command A 2 which will give us the entire second row of the matrix A The colon can also be used to represent a range of rows or columns the command Fibonacci 2 4 1 will give us the entries of Fibonacci from the second through fourth rows in the first column Exerxise 1 4 Using the commands introduced above construct a new matrix call it whatever you d like from Fibonacci that consists of the last two rows and the two middle columns of Fibonacci So it will be a 2x2 matrix Be sure to include the command you used and the result output in your Word document A note about matrix operations two matrices A and B can be added together or subtracted from one another ONLY if they are the same size If they are not the same size MATLAB will produce an error Random matrices From time to time we will be working with random matrices in this class However when you are asked to create a random matrix this does not mean you should just create a matrix using numbers that pop up in your head Instead we will let MATLAB do the thinking To create random matrices we use the rand command Notice the parentheses after the command When using a command that requires some type of input that input must be put in parentheses We cannot use square brackets here because when MATLAB sees square brackets it assumes we are talking about a matrix Typing rand n and hitting return tells MATLAB to create a random n x n matrix whose entries are decimal values between and 1 Now if we type RMatrix1 rand 2 we will see the following RMatrix1 95 1 6 68 2311 486 Exerxise 1 5 Create 2 random 4 x 4 matrices A and B and calculate the following values You should store each of them in a variable with some name of your choosing In theory do you expect the following matrices to be equal Are they A B B A MATLAB s built in help command While these labs are written to be as self contained as possible you may find that you ve forgotten what a MATLAB command does or wonder what else MATLAB can do Fortunately MATLAB has an extensive built in help system For instance suppose we want to know what applying the cumprod command to a vector does Type help cumprod to bring up the help description There are three parts of note for this decription The first part gives a brief description of the function and tells us how of the possible ways we can use the function Note that there are several different options depending on what is passed to the function The second part Examples gives us examples of how to use the function Often reading through the examples is the best way to determine how a function works Finally the third part gives related commands For instance here the first line of the description is For vectors CUMPROD X is a vector containing the cumulative product of the elements of X that is it multiplies the elements one at a time and stores the cumulative results For instance cumprod 2 3 4 ans 2 6 24 Looking at the help description you can see there are many possible uses for the cumproduct command In general MATLAB commands have a lot of flexability Exerxise 1 6 How do you find sin 1 1 using MATLAB Hint Start by looking at help sin Acknowledgement This lab is based upon a series of labs developed by faculty and graduate students at UCSD http www math ucsd edu math2 f Fall MatlabIndex html ", "_id": "http://www.ics.uci.edu/~irani/f13-6N/Labs/Lab1.html", "title": "ics 6n, fall 2013", "html": "<html>\n<head>\n<title>ICS 6N, Fall 2013</title>\n</head>\n<body bgcolor=\"D4E9D4\" text=\"000000\" >\n<h2 align=center>ICS 6N <br/>\nFall 2013<br> Lab 1 <br/>\nIntroductoin to MATLAB<br/>\nDue: Wednesday, Oct 16</h2>\n<br>\n\n<h3> What to hand in.</h3>\n\n<p>\nThis lab will introduce you to some of the basic features of MATLAB.\nYou should do the exercises below. As you do each one, copy the relavant input and output\nfrom MATLAB and paste it into a Word document. You need only include commands  that worked.\nYou will hand in a printed copy of the Word document in lecture on\nthe day that the lab is due.\nMake sure and include your name, student ID and which lab section you are signed up for.\n</p>\n<p>\nYou should save your file temporarily on the machine in the lab.\nYou should delete the file from the lab computer before your logout,\nbut don't forget to save a more permanent copy, either by emailing it to\nyourself or storing it somewhere in the cloud.\nYou can print your lab using one of the lab printers\nor you can print it with your own printer.\n</p>\n<p>\nThe future labs will contain most of the applications of linear algebra to be found\nin Math 20F. These problems can take a little while to work out. <b>Be\nwarned that the future labs will be longer than this lab!</b> Don't wait until the last minute to start.\n</p>\n\n<p>\nThe lab assignments will contain descriptions of commands and responses in\nMATLAB. Typically, the text that is input by the user is in red and\nthe part that is printed by MATLAB is in black.\n</p>\n\n<h3>About MATLAB</h3>\n\n<p>\n Linear algebra is used in every branch of mathematics and is thus a crucial part of it.\n Linear algebra also has applications in practically every field of natural\n and social sciences.  Physics, chemistry, biology, computer science, economics, and\n sociology have all benefited from the advent of linear algebra.  In the lab sections\n this quarter you will see a few applications of linear algebra to some of these areas.\n </p>\n <p>\n Problems that arise in these fields involve raw data, so professionals in these fields have\n come to depend on computers as an essential tool.\n Computer programs such as MATLAB help in performing tedious calculations so\n that you can spend less time crunching numbers.\n It turns out that MATLAB is especially well suited for working with\n matrices and performing various algorithmic routines that come up in linear algebra.\n In this lab we will start to get acquainted with MATLAB and learn how it handles matrices.\n </p>\n\n<h3>Variables in Matlab</h3>\n<p>\nPeople like to think of MATLAB as a very powerful calculator you can use on your computer.  For our purpose, that is not far from the mark.\n</p>\n<p>\nTo define variables, simply type in the variable you wish to define, then an equal sign,\nand finally the value you wish to assign to that variable.  So, if we want to assign the\nvalue of 5 to the variable x, we type\n</p>\n<p>>>&nbsp;&nbsp;  <font color=\"red\">x=5</font></p>\n<pre>\nx =\n    5\n</pre>\n<p>Unless we later redefine x, every time we type \"x\" MATLAB will replace it with 5 when doing a calculation.\nFor example, we can define the following variables by their place in the alphabet:\n</p>\n<p>>>&nbsp;&nbsp;  <font color=\"red\">l=12; i=9; n=14; e=5; a=1; r=18; g=7; b=2;</font></p>\n<p>\nWe have just assigned specific values to the given letters.  (Note: the semicolons in this command suppress the output.\nIf they were not there, once you hit return MATLAB would list the eight variables and their new values.)\nIt is also possible to assign values to more than just single letters using MATLAB.  It is sometimes\neasier to define something with a specific name rather than a single letter.  For example, we can define\n</p>\n<p>>>&nbsp;&nbsp;  <font color=\"red\">UCIrvine = 92697</font></p>\n<pre>\nUCIrvine =\n    92697\n</pre>\n<p>92697 is the zip code of UCI.\nNotice that there are no spaces in variable names.\n(We cannot define a variable called \"UC Irvine\".)  Also, when defining something, MATLAB\nis case-sensitive so if we accidentally type \"laytext\" and hit return, we will get an error message as seen here.</p>\n<p>>>&nbsp;&nbsp;  <font color=\"red\">ucrivine</font></p>\n<pre>\n??? Undefined function or variable 'ucrivine'.\n</pre>\n<p>\nUsing the variables we just defined, we can do some calculations and save them as specific names.\n</p>\n<p>>>&nbsp;&nbsp;  <font color=\"red\">linearalgebra = l+i+n+e+a+r+a+l+g+e+b+r+a\n</font></p>\n<pre>\nlinearalgebra =\n    105\n</pre>\n\n<p>>>&nbsp;&nbsp;  <font color=\"red\">angle = a+n+g+l+e\n</font></p>\n<pre>\nangle =\n    39\n</pre>\n<table frame=\"box\">\n<td>\n<b>Exercise 1.1</b>\nDefine the letters of your first and last name to be the number corresponding to their\nplace in the alphabet.  Then set your name, without any spaces, equal to the sum of the letters.\n</td>\n</table>\n<h3>Hints and Tips</h3>\n<p>\nMATLAB has some useful features that are worth learning at this point.\n</p>\n<p>\n If you ever get stuck or need more info, an excellent way to get help in MATLAB is by entering\n </p>\n <p>>>&nbsp;&nbsp;  <font color=\"red\">helpbrowser\n</font></p>\n\n\n\n<p>\nThis will allow you to view the syntax of various commands by reading their help files and to search for keywords.\n</p>\n<p>\nOur final tip is to become very familiar with the use of the up-arrow key.\nIndeed at this point bring up the main MATLAB window and try pushing the\nup-arrow key on the keyboard once.  Then push it a few more times.\nNotice that this is bringing your previously-entered commands back\nonto the command-line.  You can also use the left and right arrow keys\nto position the cursor in a command in order to edit it. This is a\ngreat way to correct a command that had an error in it.\n</p>\n\n<table frame=\"box\">\n\n<tr>\n<td>\n<b>Exerxise 1.2</b> Suppose you want to calculate:\n</td>\n</tr>\n\n<tr>\n<td>\n<img src=\"http://latex.codecogs.com/gif.latex?25-\\left( 100 - 7e^{(5+\\cos{\\left( \\frac{\\pi}{3}\\right)})}  \\right)\"\n />\n</td>\n</tr>\n\n<tr>\n<td>\nEnter the command:<br/><br/>\n>>&nbsp;&nbsp;  <font color=\"red\">z = 25-(100-7exp(5+cos(pi/3))\n</font>\n</td>\n</tr>\n\n<tr>\n<td>\nYou will get an error message.  Use the up-arrow to bring\nthis line back and then correct the error(s).\n(Hint: Good things to check are multiplication and parentheses.)\n</td>\n</tr>\n\n</table>\n\n<h3>Matrices in MATLAB</h3>\n\n\n\n<p>\n The first thing to learn when dealing with matrices is how to construct a matrix (or vector) using MATLAB.\n</p>\n<p>\nTo define a matrix using MATLAB, we use the square brackets \"[ ]\".\n\"[\" tells MATLAB we are starting to create a matrix and \"]\" tells MATLAB that we have\nfinished with our construction.  The entries of the matrix should be entered in rows\nfrom left to right.  To separate entries we can either hit the space bar or insert a comma \",\".\nOnce we finish with a given row and want to move to the next, we can either press\nthe return key or use a semicolon \";\".  (This is not the same as using the semicolon to suppress output.)\n</p>\n<p>\nSo, to construct the following matrix\n</p>\n<p>\n<img src=\"http://latex.codecogs.com/gif.latex?A = \\left[ \\begin{array}{cc}\n2 & 1\\\\\n4 & 3 \\end{array} \\right]\"\n</p>\n<p>\nhere are two possible ways to go about it:\n</p>\n<p>>>&nbsp;&nbsp;  <font color=\"red\">A=[2 1;4 3]\n</font></p>\n<p>>>&nbsp;&nbsp;  <font color=\"red\">A=[2,1\n</font> (Return key)</p>\n<p><font color=\"red\">4, 3]\n</font></p>\n<p>Both will yield the desired matrix:</p>\n<pre>\nA =\n\n    2    1\n    4    3\n</pre>\n<table frame=\"box\">\n\n<tr>\n<td>\n<b>Exerxise 1.3</b> Input the following matrix into MATLAB:\n</td>\n</tr>\n\n<tr>\n<td>\n<img src=\"http://latex.codecogs.com/gif.latex?Fibonacci = \\left[ \\begin{array}{cccc}\n1 & 1 & 2 & 3\\\\\n5 & 8 & 13 & 21\\\\\n34 & 55 & 89 & 144\\\\\n233 & 377 & 610 & 987 \\end{array} \\right]\"\n />\n</td>\n</tr>\n</table>\n\n<h3>MAtrix operations and manipulations</h3>\n<p>\nSometimes we need to get at certain parts of a matrix only,\nmaybe just a certain row or even a single entry.  This is done with regular parentheses,\n\"(\" and \")\".  For example, to see the (1,2) entry of the matrix <b>A</b> above\n(i.e. the entry in the first row and second column), we use the command\n</p>\n<p>>>&nbsp;&nbsp;  <font color=\"red\">A(1,2)\n</font></p>\n<p>\nWe also can use the colon \":\" to mean 'all', as in the command\n</p>\n<p>>>&nbsp;&nbsp;  <font color=\"red\">A(2,:)\n</font></p>\n<p>\nwhich will give us the entire second row of the\nmatrix <b>A</b>.  The colon can also be used to represent a range of rows or columns: the command\n</p>\n<p>>>&nbsp;&nbsp;  <font color=\"red\">Fibonacci(2:4,1)\n</font></p>\n<p>\nwill give us the entries of <b>Fibonacci</b> from the second through fourth rows in the first column.\n</p>\n\n\n<table frame=\"box\">\n\n<tr>\n<td>\n<b>Exerxise 1.4</b> Using the commands introduced above,\nconstruct a new matrix (call it whatever you'd like) from\n<b>Fibonacci</b> that consists of the last two rows and the two middle columns of <b>Fibonacci</b>.\n(So it will be a 2x2 matrix.)\nBe sure to include the command you used and the result output in your Word document.\n</td>\n</tr>\n</table>\n\n<p>\nA note about matrix operations: two matrices <b>A</b> and <b>B</b> can be added together or\nsubtracted from one another ONLY if they are the same size.\n(If they are not the same size, MATLAB will produce an error.)\n</p>\n\n<h3>\nRandom matrices</h3>\n\n<p>\nFrom time to time, we will be working with random matrices in this class.\nHowever, when you are asked to create a random matrix, this does not mean you\nshould just create a matrix using numbers that pop up in your head.\nInstead, we will let MATLAB do the \"thinking\".\n</p>\n<p>\nTo create random matrices, we use the <font color=\"red\">rand()</font> command.\n</p>\n<p>\n Notice the parentheses after the command.  When using a command that requires\n some type of input, that input must be put in parentheses.  We cannot use square\n brackets here because when MATLAB sees square brackets, it assumes we are talking\n about a matrix.\n </p>\n <p>\n Typing\n </p>\n <p>>>&nbsp;&nbsp;  <font color=\"red\">rand(n)\n</font></p>\n<p>\nand hitting return tells MATLAB to create a random n x n matrix whose entries are decimal values between 0 and 1.\n</p><p>\n    Now if we type\n</p>\n <p>>>&nbsp;&nbsp;  <font color=\"red\">RMatrix1=rand(2)\n</font></p>\n<p>\nwe will see the following:\n</p>\n<pre>\nRMatrix1=\n\n    0.9501    0.6068\n    0.2311    0.4860\n</pre>\n\n<table frame=\"box\">\n\n<tr>\n<td>\n<b>Exerxise 1.5</b> Create 2 random 4 x 4 matrices <b>A</b> and <b>B</b> and\ncalculate the following values.  (You should store each of them in a\nvariable with some name of your choosing.)  In theory, do you expect\nthe following matrices to be equal?  Are they?\n<p>A + B </p>\n<p>B + A </p>\n</td>\n</tr>\n</table>\n<h3>MATLAB's built-in help command</h3>\n<p>While these labs are written to be as self-contained as possible,\nyou may find that you've forgotten what a MATLAB command does or wonder what else\nMATLAB can do.  Fortunately, MATLAB has an extensive built in help system.\nFor instance, suppose we want to know what applying the cumprod command to a\nvector does.  Type\n</p>\n<p>>>&nbsp;&nbsp;  <font color=\"red\">help cumprod\n</font></p>\n<p>\nto bring up the help description.\n</p>\n<p>\nThere are three parts of note for this decription.\nThe first part gives a brief description of the function and\ntells us how of the possible ways we can use the function.\nNote that there are several different options, depending on\nwhat is passed to the function. The second part, 'Examples',\ngives us examples of how to use the function.  Often, reading\nthrough the examples is the best way to determine how a function works.\nFinally, the third part gives related commands.\n</p>\n<p>\nFor instance, here the first line of the description is\n\"For vectors, CUMPROD(X) is a vector containing the cumulative\nproduct of the elements of X\" - that is, it multiplies the elements one at a time\nand stores the cumulative results.  For instance,\n</p>\n<p>>>&nbsp;&nbsp;  <font color=\"red\">cumprod([2 3 4])\n</font></p>\n<pre>\nans =\n   2     6    24\n</pre>\n<p>\nLooking at the help description, you can see there are many possible\nuses for the cumproduct command.  In general, MATLAB commands have a lot of flexability.\n</p>\n<table frame=\"box\">\n\n<tr>\n<td>\n<b>Exerxise 1.6</b> How do you find sin<sup>-1</sup>(1) using MATLAB?  (Hint: Start by looking at\n<font color=\"red\">help sin</font>)\n</td>\n</tr>\n</table>\n\n<p><i>Acknowledgement: This lab is based upon a series of labs developed by faculty and graduate students at UCSD.\n(<a href=\"http://www.math.ucsd.edu/~math20f/Fall/MatlabIndex.html\">http://www.math.ucsd.edu/~math20f/Fall/MatlabIndex.html</a>).</i></p>\n\n</body>\n</html>\n", "id": 24816.0}