{"text": " Home Trees Indices Help Package CHEM Package ML Module Util Class FeatureDictWriter hide private frames no frames Class FeatureDictWriter object dict FeatureDictWriter Utility class to encode data feature vectors represented as string value feature dictionaries into a plain text file format These should then be re read using the matching FeatureDictReader class The basic strategy is to identify every feature encountered among the data items and assign each a unique index number This class which extends the dict class stores the feature index mappings and then prints out each data item with the corresponding index value pairs Example Usage Note this may have problems as a doctest since the feature index mapping order is arbitrary based on the random traversal of feature keys through the feature dictionaries from cStringIO import StringIO from CHEM ML features SpectrumExtractor import SpectrumExtractor dataList asdfsdfg asdfasdfASDF dfghDFGH outfile StringIO kernel SpectrumExtractor kernel k 1 featureEnum FeatureDictWriter outfile Determine and output all of the feature index mappings for item in dataList featureDict kernel item for feature in featureDict iterkeys success featureEnum add feature Output the feature dictionaries in index value text format for item in dataList featureDict kernel item featureEnum update featureDict item print outfile BLANKLINE Hack doctest doesn t like blank lines in expected output print outfile getvalue replace t Doesn t like tabs either a 1 s 2 d 3 g 4 f 5 A 6 F 7 S 8 D 9 h 1 G 11 H asdfsdfg UNKNOWN ID 1 1 2 2 2 3 1 4 2 asdfasdfASDF UNKNOWN ID 2 1 2 2 2 4 2 5 1 6 1 7 1 8 1 dfghDFGH UNKNOWN ID 2 1 3 1 4 1 6 1 8 1 9 1 1 1 11 1 BLANKLINE Instance Methods hide private init self outfile None Constructor getitem self feature Override dictionary access method dict key to automatically add items for newly encountered keys add self feature Makes the writer aware of a feature that will have to be written for subsequent feature dictionaries setitem self feature featureIndex Override dictionary set method dict key value to automatically address newly encountered features new key self feature featureIndex Output the given feature index mapping update self featureDict description nameID UNKNOWN ID Output a specific feature dictionary to text format Inherited from dict cmp contains delitem eq ge getattribute gt hash iter le len lt ne new repr clear copy fromkeys get has key items iteritems iterkeys itervalues keys pop popitem setdefault values Inherited from object delattr reduce reduce ex setattr str Static Methods hide private formatFeature feature Return a string representation of a feature suitable for storage in the file Properties hide private Inherited from object class Method Details hide private init self outfile None Constructor Constructor Just pass it the output file object not filename to write to Returns new empty dictionary Overrides dict init getitem self feature Indexing operator Override dictionary access method dict key to automatically add items for newly encountered keys Overrides dict getitem add self feature Makes the writer aware of a feature that will have to be written for subsequent feature dictionaries Should be called for every possible feature in the dataset before actually trying to write the data to the output file with the update method This way the object can first assign index numbers to every feature Return value indicates whether the feature is new to the writer or not setitem self feature featureIndex Index assignment operator Override dictionary set method dict key value to automatically address newly encountered features Overrides dict setitem formatFeature feature Static Method Return a string representation of a feature suitable for storage in the file Should be structured enough to be parseable back into object form by a respective FeatureDictReader parseFeature method By default will just use the str interface to format it For something more sophisticated you should create your own FeatureDictWriter sub class that overrides this method You can then write a respective extension to the FeatureDictReader to parse the string back into an object new key self feature featureIndex Output the given feature index mapping Automatically invoked by calls to the set and add methods for newly encountered features update self featureDict description nameID UNKNOWN ID Output a specific feature dictionary to text format It would be nice to call the add method on every possible feature before calling this method so that the feature index mappings will all be output at the beginning of the file instead of intermixed with the data However this method will automatically try doing so if it has not Either way guaranteed that each feature index mapping will appear before they are ever referenced by a data row The provided object s description will be printed first for each It is important that this description NOT be empty or contain any whitespace or equal the FEATURE PREFIX Otherwise the decoding steps later will be confused Preferably this description should be some kind of data identifying string but uniqueness is not enforced Returns None Overrides dict update Home Trees Indices Help Generated by Epydoc 3 beta1 on Thu Nov 8 17 49 32 2 7 http epydoc sourceforge net", "_id": "http://www.ics.uci.edu/~dock/CHEM_docs/CHEM.ML.Util.FeatureDictWriter-class.html", "title": "chem.ml.util.featuredictwriter", "html": "<?xml version=\"1.0\" encoding=\"ascii\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n          \"DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n  <title>CHEM.ML.Util.FeatureDictWriter</title>\n  <link rel=\"stylesheet\" href=\"epydoc.css\" type=\"text/css\" />\n  <script type=\"text/javascript\" src=\"epydoc.js\"></script>\n</head>\n\n<body bgcolor=\"white\" text=\"black\" link=\"blue\" vlink=\"#204080\"\n      alink=\"#204080\">\n<!-- ==================== NAVIGATION BAR ==================== -->\n<table class=\"navbar\" border=\"0\" width=\"100%\" cellpadding=\"0\"\n       bgcolor=\"#a0c0ff\" cellspacing=\"0\">\n  <tr valign=\"middle\">\n  <!-- Home link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"CHEM-module.html\">Home</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Tree link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"module-tree.html\">Trees</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Index link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"identifier-index.html\">Indices</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Help link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"help.html\">Help</a>&nbsp;&nbsp;&nbsp;</th>\n\n      <th class=\"navbar\" width=\"100%\"></th>\n  </tr>\n</table>\n<table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n  <tr valign=\"top\">\n    <td width=\"100%\">\n      <span class=\"breadcrumbs\">\n        <a href=\"CHEM-module.html\">Package&nbsp;CHEM</a> ::\n        <a href=\"CHEM.ML-module.html\">Package&nbsp;ML</a> ::\n        <a href=\"CHEM.ML.Util-module.html\">Module&nbsp;Util</a> ::\n        Class&nbsp;FeatureDictWriter\n      </span>\n    </td>\n    <td>\n      <table cellpadding=\"0\" cellspacing=\"0\">\n        <!-- hide/show private -->\n        <tr><td align=\"right\"><span class=\"options\">[<a href=\"javascript:void(0);\" class=\"privatelink\"\n    onclick=\"toggle_private();\">hide&nbsp;private</a>]</span></td></tr>\n        <tr><td align=\"right\"><span class=\"options\"\n            >[<a href=\"frames.html\" target=\"_top\">frames</a\n            >]&nbsp;|&nbsp;<a href=\"CHEM.ML.Util.FeatureDictWriter-class.html\"\n            target=\"_top\">no&nbsp;frames</a>]</span></td></tr>\n      </table>\n    </td>\n  </tr>\n</table>\n<!-- ==================== CLASS DESCRIPTION ==================== -->\n<h1 class=\"epydoc\">Class FeatureDictWriter</h1><br /><br />\n<pre class=\"base-tree\">\nobject --+    \n         |    \n      dict --+\n             |\n            <strong class=\"uidshort\">FeatureDictWriter</strong>\n</pre>\n\n<hr />\n<p>Utility class to encode data feature vectors (represented as \n  string:value feature dictionaries) into a plain text file format.</p>\n  <p>These should then be re-read using the matching \n  &quot;FeatureDictReader&quot; class. The basic strategy is to identify \n  every feature encountered among the data items and assign each a unique \n  index number.  This class (which extends the dict class) stores the \n  feature:index mappings and then prints out each data item with the \n  corresponding index:value pairs.</p>\n  Example Usage: (Note this may have problems as a doctest since the \n  feature:index mapping order is arbitrary based on the &quot;random&quot; \n  traversal of feature keys through the feature dictionaries.\n<pre class=\"py-doctest\">\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">from</span> cStringIO <span class=\"py-keyword\">import</span> StringIO\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">from</span> CHEM.ML.features.SpectrumExtractor <span class=\"py-keyword\">import</span> SpectrumExtractor\n<span class=\"py-prompt\">&gt;&gt;&gt; </span>dataList = [<span class=\"py-string\">&quot;asdfsdfg&quot;</span>,<span class=\"py-string\">&quot;asdfasdfASDF&quot;</span>,<span class=\"py-string\">&quot;dfghDFGH&quot;</span>]\n<span class=\"py-prompt\">&gt;&gt;&gt; </span>outfile = StringIO()\n<span class=\"py-prompt\">&gt;&gt;&gt; </span>kernel = SpectrumExtractor();\n<span class=\"py-prompt\">&gt;&gt;&gt; </span>kernel.k = 1;\n<span class=\"py-prompt\">&gt;&gt;&gt; </span>featureEnum = FeatureDictWriter(outfile)\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-comment\"># Determine and output all of the feature:index mappings</span>\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">for</span> item <span class=\"py-keyword\">in</span> dataList:\n<span class=\"py-more\">... </span>    featureDict = kernel(item)\n<span class=\"py-more\">... </span>    <span class=\"py-keyword\">for</span> feature <span class=\"py-keyword\">in</span> featureDict.iterkeys():\n<span class=\"py-more\">... </span>        success = featureEnum.add(feature)\n<span class=\"py-more\">...</span>\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-comment\"># Output the feature dictionaries in index:value text format</span>\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">for</span> item <span class=\"py-keyword\">in</span> dataList:\n<span class=\"py-more\">... </span>    featureDict = kernel(item)\n<span class=\"py-more\">... </span>    featureEnum.update( featureDict, item )\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">print</span> &gt;&gt; outfile, <span class=\"py-string\">&quot;&lt;BLANKLINE&gt;&quot;</span>,            <span class=\"py-comment\"># Hack.  doctest doesn't like blank lines in expected output</span>\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">print</span> outfile.getvalue().replace(<span class=\"py-string\">&quot;\\t&quot;</span>,<span class=\"py-string\">&quot; &quot;</span>); <span class=\"py-comment\"># Doesn't like tabs either</span>\n<span class=\"py-output\"># 0 a</span>\n<span class=\"py-output\"># 1 s</span>\n<span class=\"py-output\"># 2 d</span>\n<span class=\"py-output\"># 3 g</span>\n<span class=\"py-output\"># 4 f</span>\n<span class=\"py-output\"># 5 A</span>\n<span class=\"py-output\"># 6 F</span>\n<span class=\"py-output\"># 7 S</span>\n<span class=\"py-output\"># 8 D</span>\n<span class=\"py-output\"># 9 h</span>\n<span class=\"py-output\"># 10 G</span>\n<span class=\"py-output\"># 11 H</span>\n<span class=\"py-output\">asdfsdfg UNKNOWN_ID 0:1 1:2 2:2 3:1 4:2 </span>\n<span class=\"py-output\">asdfasdfASDF UNKNOWN_ID 0:2 1:2 2:2 4:2 5:1 6:1 7:1 8:1 </span>\n<span class=\"py-output\">dfghDFGH UNKNOWN_ID 2:1 3:1 4:1 6:1 8:1 9:1 10:1 11:1 </span>\n<span class=\"py-output\">&lt;BLANKLINE&gt;</span></pre><br /><br />\n\n<!-- ==================== INSTANCE METHODS ==================== -->\n<a name=\"section-InstanceMethods\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Instance Methods</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-InstanceMethods\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.ML.Util.FeatureDictWriter-class.html#__init__\" class=\"summary-sig-name\">__init__</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">outfile</span>=<span class=\"summary-sig-default\">None</span>)</span><br />\n      Constructor.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.ML.Util.FeatureDictWriter-class.html#__getitem__\" class=\"summary-sig-name\">__getitem__</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">feature</span>)</span><br />\n      Override dictionary access method &quot;dict[key]&quot; to \n      automatically add items for newly encountered keys.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.ML.Util.FeatureDictWriter-class.html#add\" class=\"summary-sig-name\">add</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">feature</span>)</span><br />\n      Makes the writer aware of a feature that will have to be written \n      for subsequent feature dictionaries.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.ML.Util.FeatureDictWriter-class.html#__setitem__\" class=\"summary-sig-name\">__setitem__</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">feature</span>,\n        <span class=\"summary-sig-arg\">featureIndex</span>)</span><br />\n      Override dictionary set method &quot;dict[key] = value&quot; to \n      automatically address newly encountered features.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.ML.Util.FeatureDictWriter-class.html#new_key\" class=\"summary-sig-name\">new_key</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">feature</span>,\n        <span class=\"summary-sig-arg\">featureIndex</span>)</span><br />\n      Output the given feature:index mapping.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.ML.Util.FeatureDictWriter-class.html#update\" class=\"summary-sig-name\">update</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">featureDict</span>,\n        <span class=\"summary-sig-arg\">description</span>,\n        <span class=\"summary-sig-arg\">nameID</span>=<span class=\"summary-sig-default\">&quot;UNKNOWN_ID&quot;</span>)</span><br />\n      Output a specific feature dictionary to text format.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n  <tr>\n    <td colspan=\"2\" class=\"summary\">\n    <p class=\"indent-wrapped-lines\"><b>Inherited from <code>dict</code></b>:\n      <code>__cmp__</code>,\n      <code>__contains__</code>,\n      <code>__delitem__</code>,\n      <code>__eq__</code>,\n      <code>__ge__</code>,\n      <code>__getattribute__</code>,\n      <code>__gt__</code>,\n      <code>__hash__</code>,\n      <code>__iter__</code>,\n      <code>__le__</code>,\n      <code>__len__</code>,\n      <code>__lt__</code>,\n      <code>__ne__</code>,\n      <code>__new__</code>,\n      <code>__repr__</code>,\n      <code>clear</code>,\n      <code>copy</code>,\n      <code>fromkeys</code>,\n      <code>get</code>,\n      <code>has_key</code>,\n      <code>items</code>,\n      <code>iteritems</code>,\n      <code>iterkeys</code>,\n      <code>itervalues</code>,\n      <code>keys</code>,\n      <code>pop</code>,\n      <code>popitem</code>,\n      <code>setdefault</code>,\n      <code>values</code>\n      </p>\n    <p class=\"indent-wrapped-lines\"><b>Inherited from <code>object</code></b>:\n      <code>__delattr__</code>,\n      <code>__reduce__</code>,\n      <code>__reduce_ex__</code>,\n      <code>__setattr__</code>,\n      <code>__str__</code>\n      </p>\n    </td>\n  </tr>\n</table>\n<!-- ==================== STATIC METHODS ==================== -->\n<a name=\"section-StaticMethods\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Static Methods</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-StaticMethods\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.ML.Util.FeatureDictWriter-class.html#formatFeature\" class=\"summary-sig-name\">formatFeature</a>(<span class=\"summary-sig-arg\">feature</span>)</span><br />\n      Return a string representation of a feature suitable for storage \n      in the file.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n</table>\n<!-- ==================== PROPERTIES ==================== -->\n<a name=\"section-Properties\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Properties</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-Properties\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n  <tr>\n    <td colspan=\"2\" class=\"summary\">\n    <p class=\"indent-wrapped-lines\"><b>Inherited from <code>object</code></b>:\n      <code>__class__</code>\n      </p>\n    </td>\n  </tr>\n</table>\n<!-- ==================== METHOD DETAILS ==================== -->\n<a name=\"section-MethodDetails\"></a>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Method Details</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-MethodDetails\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n</table>\n<a name=\"__init__\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">__init__</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">outfile</span>=<span class=\"sig-default\">None</span>)</span>\n    <br /><em class=\"fname\">(Constructor)</em>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Constructor.  Just pass it the output file (object, not filename) to \n  write to.\n  <dl class=\"fields\">\n    <dt>Returns:</dt>\n        <dd><pre class=\"literalblock\">\nnew empty dictionary\n\n</pre></dd>\n    <dt>Overrides:\n      dict.__init__\n    </dt>\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"__getitem__\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">__getitem__</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">feature</span>)</span>\n    <br /><em class=\"fname\">(Indexing operator)</em>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Override dictionary access method &quot;dict[key]&quot; to \n  automatically add items for newly encountered keys.\n  <dl class=\"fields\">\n    <dt>Overrides:\n      dict.__getitem__\n    </dt>\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"add\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">add</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">feature</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <p>Makes the writer aware of a feature that will have to be written for \n  subsequent feature dictionaries.</p>\n  <p>Should be called for every possible feature in the dataset before \n  actually trying to write the data to the output file with the \n  &quot;update&quot; method.  This way the object can first assign index \n  numbers to every feature.</p>\n  Return value indicates whether the feature is new to the writer or \n  not\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"__setitem__\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">__setitem__</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">feature</span>,\n        <span class=\"sig-arg\">featureIndex</span>)</span>\n    <br /><em class=\"fname\">(Index assignment operator)</em>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Override dictionary set method &quot;dict[key] = value&quot; to \n  automatically address newly encountered features.\n  <dl class=\"fields\">\n    <dt>Overrides:\n      dict.__setitem__\n    </dt>\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"formatFeature\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">formatFeature</span>(<span class=\"sig-arg\">feature</span>)</span>\n    <br /><em class=\"fname\">Static Method</em>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <p>Return a string representation of a feature suitable for storage in \n  the file.</p>\n  <p>Should be structured enough to be parseable back into object form by a\n  respective FeatureDictReader.parseFeature method. By default will just \n  use the &quot;__str__&quot; interface to format it.</p>\n  For something more sophisticated, you should create your own \n  FeatureDictWriter sub-class that overrides this method.  You can then \n  write a respective extension to the FeatureDictReader to parse the string\n  back into an object.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"new_key\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">new_key</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">feature</span>,\n        <span class=\"sig-arg\">featureIndex</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <p>Output the given feature:index mapping.</p>\n  Automatically invoked by calls to the set and &quot;add&quot; methods \n  for newly encountered features.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"update\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">update</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">featureDict</span>,\n        <span class=\"sig-arg\">description</span>,\n        <span class=\"sig-arg\">nameID</span>=<span class=\"sig-default\">&quot;UNKNOWN_ID&quot;</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <p>Output a specific feature dictionary to text format.</p>\n  <p>It would be nice to call the &quot;add&quot; method on every possible \n  feature before calling this method so that the feature:index mappings \n  will all be output at the beginning of the file, instead of intermixed \n  with the data. However, this method will automatically try doing so if it\n  has not. Either way, guaranteed that each feature:index mapping will \n  appear before they are ever referenced by a data row.</p>\n  The provided object's description will be printed first for each. It \n  is important that this description NOT:\n  <ul>\n    <li>\n      be empty or\n    </li>\n    <li>\n      contain any whitespace or\n    </li>\n    <li>\n      equal the FEATURE_PREFIX &quot;#&quot;\n    </li>\n  </ul>\n  <p>Otherwise the &quot;decoding&quot; steps later will be confused.</p>\n  Preferably this description should be some kind of data identifying \n  string, but uniqueness is not enforced.\n  <dl class=\"fields\">\n    <dt>Returns:</dt>\n        <dd><pre class=\"literalblock\">\nNone\n\n</pre></dd>\n    <dt>Overrides:\n      dict.update\n    </dt>\n  </dl>\n</td></tr></table>\n</div>\n<br />\n<!-- ==================== NAVIGATION BAR ==================== -->\n<table class=\"navbar\" border=\"0\" width=\"100%\" cellpadding=\"0\"\n       bgcolor=\"#a0c0ff\" cellspacing=\"0\">\n  <tr valign=\"middle\">\n  <!-- Home link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"CHEM-module.html\">Home</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Tree link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"module-tree.html\">Trees</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Index link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"identifier-index.html\">Indices</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Help link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"help.html\">Help</a>&nbsp;&nbsp;&nbsp;</th>\n\n      <th class=\"navbar\" width=\"100%\"></th>\n  </tr>\n</table>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%%\">\n  <tr>\n    <td align=\"left\" class=\"footer\">\n    Generated by Epydoc 3.0beta1 on Thu Nov  8 17:49:32 2007\n    </td>\n    <td align=\"right\" class=\"footer\">\n      <a href=\"http://epydoc.sourceforge.net\">http://epydoc.sourceforge.net</a>\n    </td>\n  </tr>\n</table>\n\n<script type=\"text/javascript\">\n  <!--\n  // Private objects are initially displayed (because if\n  // javascript is turned off then we want them to be\n  // visible); but by default, we want to hide them.  So hide\n  // them unless we have a cookie that says to show them.\n  checkCookie()\n  // -->\n</script>\n  \n</body>\n</html>\n", "id": 40261.0}