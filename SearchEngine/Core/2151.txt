{"text": "ICS 1F Homework 6 Solutions Suppose you have offices in five cities Anchorage Portland Seattle San Francisco and Los Angeles that you wish to connect up by a communications network The costs to connect each pair of cities are Anchorage Los Angeles 14 Anchorage Portland 12 Anchorage San Francisco 13 Anchorage Seattle 15 Los Angeles Portland 9 Los Angeles San Francisco 1 Los Angeles Seattle 7 Portland San Francisco 6 Portland Seattle 3 San Francisco Seattle 5 a What is the minimum cost of a communications network connecting all your offices I e what is the minimum spanning tree Draw this network Answer the minimum cost network uses links connecting Portland Seattle SF Seattle LA Seattle and Anchorage Portland Its cost is 3 5 7 12 27 b Some types of network require the offices to be connected into a single loop so the cheapest network is the same as the solution to the traveling salesman problem Does there exist an algorithm for solving this problem Draw the best such network you can find Answer yes there exists an algorithm for instance brute force search trying all possible loops but it is not efficient In this case there are 24 different loops the general formula is that n cities would have n 1 loops I believe the shortest loop is Anchorage Los Angeles Seattle Portland San Francisco Anchorage with total cost 43 One way to see that this is best involves splitting the loop into the part going into and out of Anchorage and the remaining four city path Los Angeles Seattle Portland San Francisco is the shortest four city path not involving Anchorage so any better loop would have to improve on the part of the tour going into and out of Anchorage But there are only two combinations of cities San Francisco and Portland or Los Angeles and Portland for which the cost into and out of Anchorage is better and neither combination gives a better overall loop For each of the following functions state whether or not a program having the function as its running time would be a polynomial time program a time n 4n3 3n 3 b time n 2n log n 3 n c time n n1 5 d time n 2n log n Answer Yes for a b and c no for d For each of the following functions of a single parameter n simplify it as much as possible using O notation For instance if the function is 4n3 3n 3 you should simplify it to O n3 a n n2 b 2n n2 2n 2 n c n 1 n 1 d 2n 3n 4n 5n e n2 1 n 1 Answer a O n2 b O 2n c O 1 d O 5n e O n2 ", "_id": "http://www.ics.uci.edu/~eppstein/1f/hw6-soln.html", "title": "ics 1f, homework 6 solutions", "html": "<HTML>\n<HEAD>\n<TITLE>ICS 1F, Homework 6 Solutions</TITLE>\n</HEAD>\n<BODY>\n<CENTER>\n<H1>ICS 1F, Homework 6 Solutions</H1>\n</CENTER>\n\n<OL>\n<P><LI>Suppose you have offices in five cities, Anchorage, Portland,\nSeattle, San Francisco, and Los Angeles, that you wish to connect up by\na communications network.  The costs to connect each pair of cities are\n\n<P><CENTER><TABLE BORDER=0>\n<TR><TD>Anchorage - Los Angeles</TD><TD>$1400</TD></TR>\n<TR><TD>Anchorage - Portland</TD><TD>$1200</TD></TR>\n<TR><TD>Anchorage - San Francisco</TD><TD>$1300</TD></TR>\n<TR><TD>Anchorage - Seattle</TD><TD>$1500</TD></TR>\n<TR><TD>Los Angeles - Portland</TD><TD>$900</TD></TR>\n<TR><TD>Los Angeles - San Francisco</TD><TD>$1000</TD></TR>\n<TR><TD>Los Angeles - Seattle</TD><TD>$700</TD></TR>\n<TR><TD>Portland - San Francisco</TD><TD>$600</TD></TR>\n<TR><TD>Portland - Seattle</TD><TD>$300</TD></TR>\n<TR><TD>San Francisco - Seattle</TD><TD>$500</TD></TR>\n</TABLE></CENTER>\n\n<P>(a) What is the minimum cost of a communications network connecting all\nyour offices?  (I.e., what is the minimum spanning tree.)\nDraw this network.\n\n<BLOCKQUOTE><FONT COLOR=\"RED\"><I>\nAnswer: the minimum-cost network uses links connecting\nPortland-Seattle, SF-Seattle, LA-Seattle, and Anchorage-Portland.\nIts cost is\n$300&nbsp;+&nbsp;$500&nbsp;+&nbsp;$700&nbsp;+&nbsp;$1200&nbsp;=&nbsp;$2700.\n</I></FONT></BLOCKQUOTE>\n\n\n<P>(b) Some types of network require the offices to be connected into a\nsingle loop (so the cheapest network is the same as the solution to the\ntraveling salesman problem).\nDoes there exist an algorithm for solving this problem?\nDraw the best such network you can find.\n\n<BLOCKQUOTE><FONT COLOR=\"RED\"><I>\nAnswer: yes, there exists an algorithm, for instance brute force search\n(trying all possible loops), but it is not efficient. \nIn this case there are 24 different loops\n(the general formula is that n cities would have (n-1)! loops).\n\n<P>I believe the shortest loop is Anchorage - Los Angeles - Seattle -\nPortland - San Francisco - Anchorage, with total cost $4300. \n\n<P>One way to see that this is best involves splitting the loop into\nthe part going into and out of Anchorage, and the remaining four-city path.\nLos Angeles - Seattle - Portland - San Francisco is the shortest\nfour-city path not involving Anchorage, so any better loop would have to\nimprove on the part of the tour going into and out of Anchorage.\nBut there are only two combinations of cities (San Francisco and\nPortland, or Los Angeles and Portland) for which the cost into and out\nof Anchorage is better, and neither combination gives a better overall loop.\n</I></FONT></BLOCKQUOTE>\n\n<P><LI>For each of the following functions,\nstate whether or not a program having the function as its running time\nwould be a polynomial-time program.\n\n<P>(a) time(n) = 4n<sup>3</sup> + 3n + 3\n<BR>(b) time(n) = 2n log n + 30n\n<BR>(c) time(n) = n<sup>1.5</sup>\n<BR>(d) time(n) = 2<sup>n</sup> log n\n\n<BLOCKQUOTE><FONT COLOR=\"RED\"><I>\nAnswer: Yes for a, b, and c; no for d.\n</I></FONT></BLOCKQUOTE>\n\n<P><LI>For each of the following functions of a single parameter n,\nsimplify it as much as possible using O-notation.\nFor instance, if the function\nis 4n<sup>3</sup> + 3n + 3,\nyou should simplify it to O(n<sup>3</sup>).\n\n<P>(a) n + n<sup>2</sup>\n<BR>(b) 2<sup>n</sup> + n<sup>2</sup> + 2n + 2/n\n<BR>(c) (n+1)/(n-1)\n<BR>(d) 2<sup>n</sup> + 3<sup>n</sup> + 4<sup>n</sup> + 5<sup>n</sup>\n<BR>(e) n<sup>2</sup> + 100n + 10000\n\n\n<BLOCKQUOTE><FONT COLOR=\"RED\"><I>\nAnswer:<BR>\n(a) O(n<sup>2</sup>)<BR>\n(b) O(2<sup>n</sup>)<BR>\n(c) O(1)<BR>\n(d) O(5<sup>n</sup>)<BR>\n(e) O(n<sup>2</sup>)\n</I></FONT></BLOCKQUOTE>\n\n</OL>\n</BODY>\n</HTML>\n", "id": 2151.0}