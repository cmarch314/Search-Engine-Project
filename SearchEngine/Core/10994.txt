{"text": "An Uninscribable 4 Regular Polyhedron A polyhedron is said to be inscribable if it can be drawn with all its vertices on the unit sphere and circumscribable if it can be drawn with all faces tangent to the unit sphere The geometric operation of polarity replaces one polyhedron by its planar dual so that any vertex on the unit sphere is replaced by a dual face tangent at that point therefore inscribability and circumscribability are planar dual concepts of each other How can we test inscribability or equivalently circumscribability Igor Rivin and Warren Smith gave a method of transforming the problem into a linear program To test circumscribability one places weights between and 1 2 on each edge of the polyhedron so that the weights on any face add to exactly one and the weights on any nonfacial cycle add to more than one If this can be done the polyhedron can be circumscribed The edge weights have the following interpretation multiplying each weight by 2pi gives the angle the edge would take up if viewed from the tangent points on either adjacent face Dually one can inscribe a polyhedron if and only if one can assign weights so that each vertex s weights add to one and each nontrivial cut set of edges that separates two subsets of vertices adds to more than one The meaning of these weights is harder to describe for inscription but it can be related to the dihedral angles in a related problem of finding ideal polyhedra in hyperbolic geometry The existence of such a weighting system can be tested by applying the ellipsoid method for linear programming However it remains an interesting question whether there exists a more direct combinatorial method to check inscribability or circumscribability We might have more of a chance of finding such a method if we restrict our attention to special classes of polyhedra One interesting special class of polyhedra are the 4 regular ones in which each vertex is adjacent to exactly four edges Since these graphs are Eulerian equivalently their duals are bipartite every cut has at least four edges There is a natural candidate for a Rivin Smith weighting on these graphs just give every edge weight 1 4 This might fail to work if there exists a four edge cut However one can then modify the weights by adding epsilon and epsilon alternately along the edges of an even length cycle in the graph this preserves the correct weights at the vertices but might improve the weight of a cut It turns out that any one cut can be made to have weight greater than one by such a procedure so we might hope that repeating this procedure gives a correct weighting showing that 4 regular polyhedra are always inscribable The only problem might be that making one cut have a better weight always is balanced by making another cut have a worse weight so that no correct weighting exists Can this happen Yes Mike Dillencourt and I formed the example above by replacing four of the vertices of a cube by gadgets derived from octahedra To prove that this is not inscribable we need to talk about a concept called 1 supertoughness This has a scary name but is actually a pretty simple concept an n vertex graph is 1 supertough if whenever you remove some set of k vertices the number of components you have left is at most k 1 The example above is not 1 supertough because if you remove the four remaining unmodified cube vertices you get four components What does this have to do with inscribability The weights on the removed vertices must be exactly one each so the total weight of the edges between them and the rest of the graph must be exactly four However this means one of the four components must have weight at most one on the edges connecting it to the removed vertices contradicting the assumption that a nontrivial cut has weight more than one Therefore no weighting can exist and this polyhedron is not inscribable The following question remains open is every 1 supertough 4 regular graph inscribable References M B Dillencourt Toughness and Delaunay triangulations Discrete Computational Geometry vol 5 no 6 199 pp 575 6 1 M B Dillencourt and W D Smith A linear time algorithm for testing the inscribability of trivalent polyhedra Proc 8th ACM Symp Computational Geometry 1992 pp 177 185 Int J Computational Geometry Applications vol 5 1995 pp 21 36 From the Geometry Junkyard computational and recreational geometry David Eppstein Theory Group ICS UC Irvine Last update ", "_id": "http://www.ics.uci.edu/~eppstein/junkyard/uninscribable/", "title": "uninscribable 4-regular polyhedron", "html": "<HTML><HEAD>\n<TITLE>Uninscribable 4-regular polyhedron</TITLE>\n<META name=\"Owner\" value=\"eppstein\">\n<META name=\"Reply-To\" value=\"eppstein@ics.uci.edu\">\n</HEAD><BODY BGCOLOR=\"#FFFFFF\" FGCOLOR=\"#000000\">\n<!--#config timefmt=\"%d %h %Y, %T %Z\" -->\n<H1>\n<A HREF=\"http://www.ics.uci.edu/~eppstein/junkyard/\"><IMG src=\"../junkyard.gif\" ALIGN=center WIDTH=\"545\" HEIGHT=\"45\" ALT=\"The Geometry Junkyard\" BORDER=0></A>\n</H1>\n<HR>\n\n<H1>An Uninscribable 4-Regular Polyhedron</H1>\n\nA polyhedron is said to be <I>inscribable</I> if it can be drawn with\nall its vertices on the unit sphere, and <I>circumscribable</I> if it\ncan be drawn with all faces tangent to the unit sphere.  The geometric\noperation of <I>polarity</I> replaces one polyhedron by its planar dual,\nso that any vertex on the unit sphere is replaced by a dual face tangent\nat that point; therefore inscribability and circumscribability are\nplanar dual concepts of each other.\n\n<P>How can we test inscribability (or equivalently circumscribability)?\nIgor Rivin and\n<A HREF=\"http://www.neci.nj.nec.com/homepages/wds/\">Warren Smith</A>\ngave a method of transforming the problem into a linear program.  To\ntest circumscribability, one places weights between 0 and 1/2 on each\nedge of the polyhedron, so that the weights on any face add to exactly\none and the weights on any nonfacial cycle add to more than one. If this\ncan be done, the polyhedron can be circumscribed. The edge weights have\nthe following interpretation: multiplying each weight by 2pi gives the\nangle the edge would take up if viewed from the tangent points on either\nadjacent face. Dually, one can inscribe a polyhedron if and only if one\ncan assign weights so that each vertex's weights add to one and each\nnontrivial <I>cut</I> (set of edges that separates two subsets of\nvertices) adds to more than one. (The meaning of these weights is harder\nto describe for inscription, but it can be related to the dihedral\nangles in a related problem of finding \"ideal polyhedra\" in hyperbolic\ngeometry.) The existence of such a weighting system can be tested by\napplying the ellipsoid method for linear programming. However, it\nremains an interesting question whether there exists a more direct\ncombinatorial method to check inscribability or circumscribability.\n\n<P>We might have more of a chance of finding such a method if we\nrestrict our attention to special classes of polyhedra. One interesting\nspecial class of polyhedra are the <I>4-regular</I> ones, in which each\nvertex is adjacent to exactly four edges. Since these graphs are\nEulerian (equivalently, their duals are bipartite), every cut has at\nleast four edges. There is a natural candidate for a Rivin-Smith\nweighting on these graphs: just give every edge weight 1/4. This might\nfail to work, if there exists a four-edge cut. However, one can then\nmodify the weights by adding +epsilon and -epsilon alternately along the\nedges of an even-length cycle in the graph; this preserves the correct\nweights at the vertices, but might improve the weight of a cut. It turns\nout that any one cut can be made to have weight greater than one by such\na procedure, so we might hope that repeating this procedure gives a\ncorrect weighting showing that 4-regular polyhedra are always\ninscribable. The only problem might be that making one cut have a better\nweight always is balanced by making another cut have a worse weight, so\nthat no correct weighting exists. Can this happen? Yes!\n\n<P><CENTER><IMG SRC=\"uninscribable.gif\" ALT=\"The uninscribable polyhedron\" WIDTH=304 HEIGHT=313>\n</CENTER>\n\n<P><A HREF=\"/~dillenco/\">Mike Dillencourt</A> and I formed the example\nabove by replacing four of\nthe vertices of a cube by gadgets derived from octahedra. To prove that\nthis is not inscribable, we need to talk about a concept called\n\"1-supertoughness\". This has a scary name, but is actually a pretty\nsimple concept: an\n<I>n</I>-vertex graph is 1-supertough if, whenever you remove some set\nof <I>k</I> vertices, the number of components you have left is at most\n<I>k</I>-1.  The example above is not 1-supertough because, if you\nremove the four remaining unmodified cube vertices, you get four\ncomponents.  What does this have to do with inscribability?  The weights\non the removed vertices must be exactly one each, so the total weight of\nthe edges between them and the rest of the graph must be exactly\nfour. However, this means one of the four components must have weight at\nmost one on the edges connecting it to the removed vertices,\ncontradicting the assumption that a nontrivial cut has weight more than\none. Therefore no weighting can exist and this polyhedron is not\ninscribable.\n\n<P>The following question remains open: is every 1-supertough 4-regular\ngraph inscribable?\n\n<H2>References:</H2>\n\n<P>M. B. Dillencourt. Toughness and Delaunay triangulations.\n<I>Discrete &amp; Computational Geometry</I>, vol.&nbsp;5, no.&nbsp;6,\n1990, pp.&nbsp;575-601.\n\n<P>M. B. Dillencourt and W. D. Smith. A linear-time algorithm for\ntesting the inscribability of trivalent polyhedra.\n<I>Proc. 8th ACM Symp. Computational Geometry</I>, 1992, pp.&nbsp;177-185.\n<I>Int. J. Computational Geometry &amp; Applications</I>,\nvol.&nbsp;5, 1995, pp.&nbsp;21-36.\n\n<P>\n\n<P><HR><P>\nFrom the <A HREF=\"/~eppstein/junkyard/\">Geometry Junkyard</A>,\ncomputational\nand recreational geometry.<BR>\n<A HREF=\"http://www.ics.uci.edu/~eppstein/\">David Eppstein</A>,\n<A HREF=\"http://www.ics.uci.edu/~theory/\">Theory Group</A>,\n<A HREF=\"http://www.ics.uci.edu/\">ICS</A>,\n<A HREF=\"http://www.uci.edu/\">UC Irvine</A>.<P>\n<SMALL>Last update: <!--#flastmod file=\"index.html\" -->.</SMALL>\n", "id": 10994.0}