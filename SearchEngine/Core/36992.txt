{"text": "Description DCOracle2 is a replacement for DCOracle written primarily in C DCOracle 1 uses OCI 7 bindings for most Oracle calls with OCI 8 mixed in for LOB support Oracle 8i disallows mixing of calls within a statement and so breaks LOB support DCO2 uses entirely OCI 8 calls and thus can use LOBs New in this Release Beta 3 Fixed IN OUT bind widths Added ORACLE8i define to NT build for SPs Added Z Oracle Stored Procedure objects to ZOracleDA Format conversion on IN OUT binds for SQLT NUM Other small changes see CHANGELOG Beta 2 Fix ZOracleDA attempting to fetch on non select Add explicit C Cursor close to break cycle allowing cursor to be deallocated Change fetchmany and fetchall to return None if no results remain rather than Several connection cursor and cursor procedure cycle deferring actions SPARC byteorder fixes for stored procedures Beta 1Stored procedure input works properly cycles in stored procedures removed Stored procedures now have meaningful docstrings describing their parameters Type coercion change from a tuple kludge to a TypeCoercion object Set ability and default to do static binding for BindingArrays working around dynamic fetch occasional NULL bug on Linux Batch executemany Add backward compatable dbiRaw and execute modes Alpha 6Nested Cursors e g SELECT ENAME CURSOR SELECT ENAME FROM EMP WHERE MGR 79 8 FROM EMP WHERE EMPNO 79 8 API 2 type objects Add trim to LobLocators Wrap LOB permissions for Zope in ZOracleDA Change result on execute w o results to None not Return statement type code after execute Alpha 5Stored procedure fixes and debugging enhancements Alpha 4Stored procedure IN OUT variables changes to executemany Alpha 3Changed ZOracleDA to not use method call to connect Partial stored procedure workAlpha 2Bug fixes largely packaging from Alpha 1 Added SQLT AFC handler SPARC alignment fixes Alpha 1First www zope org release Contents This release contains both DCOracle2 and a slightly modified ZOracleDA it will register as ZOracleDA would to silently upgrade Oracle connections and thus cannot be run concurrently with ZOracleDA DCOracle Installation To replace ZOracleDA untar into lib python Products and make move ZOracleDA out of lib python Products and rename lib python Products DCO2 to lib python Products ZOracleDA Usage This release is intended for testing with ZOracleDA feature compatibility including LOB support and is also intended for general use Platforms NT support has been tested Microsoft Visual Studio project files are included this has only received testing with Oracle 8 and Oracle 8 1 on Linux Solaris and Windows NT a wider variety of platform experience is welcomed Download The product is available at http www zope org Members matt dco2 Matt Kromer", "_id": "http://www.ics.uci.edu/~dock/manuals/DCOracle2/dco2annc.html", "title": "", "html": "<h3>Description</h3>\n<p>\nDCOracle2 is a replacement for DCOracle, written\nprimarily in C.  DCOracle 1 uses OCI 7 bindings\nfor most Oracle calls, with OCI 8 mixed in for LOB\nsupport.  Oracle 8i disallows mixing of calls\nwithin a statement, and so breaks LOB support.\nDCO2 uses entirely OCI 8 calls, and thus\ncan use LOBs.\n</p>\n\n<h3>New in this Release</h3>\n<dl compact>\n<dt>Beta 3</dt>\n<dd> Fixed IN OUT bind widths.  Added ORACLE8i define to NT build for SPs.  Added Z Oracle Stored Procedure objects to ZOracleDA.  Format conversion on IN/OUT binds for SQLT_NUM. Other small changes (see CHANGELOG)</dd>\n<dt>Beta 2</dt>\n<dd> Fix ZOracleDA attempting to fetch on non-select.  Add explicit C Cursor.close() to break cycle allowing cursor to be deallocated.  Change fetchmany() and fetchall() to return None if no results remain rather than [].  Several\nconnection/cursor and cursor/procedure cycle deferring actions.  SPARC byteorder\nfixes for stored procedures.  </dd>\n<dt>Beta 1</dt>\n<dd>Stored procedure input works properly, cycles in stored procedures removed.\nStored procedures now have meaningful docstrings (describing their parameters).\nType coercion change from a tuple kludge to a TypeCoercion object.  Set ability\n(and default) to do static binding for BindingArrays, working around dynamic\nfetch occasional NULL bug on Linux.  Batch executemany().  Add backward\ncompatable dbiRaw and execute modes.</dd>\n<dt>Alpha 6</dt>\n<dd>Nested Cursors, e.g. <tt>SELECT ENAME, CURSOR(SELECT ENAME FROM EMP WHERE\nMGR=7908) FROM EMP WHERE EMPNO=7908)</tt>.  API 2.0 type objects. Add\ntrim() to LobLocators.  Wrap LOB permissions for Zope in ZOracleDA. Change\nresult on execute w/o results to None, not []. Return statement type code after\nexecute().</dd>\n<dt>Alpha 5</dt>\n<dd>Stored procedure fixes, and debugging enhancements.</dd>\n<dt>Alpha 4</dt>\n<dd>Stored procedure IN/OUT variables, changes to executemany()</dd>\n<dt>Alpha 3</dt>\n<dd>Changed ZOracleDA to not use method call to connect().  Partial\nstored procedure work</dd>\n<dt>Alpha 2</dt>\n<dd>Bug fixes, largely packaging, from Alpha 1.  Added SQLT_AFC handler,\nSPARC alignment fixes.</dd>\n<dt>Alpha 1</dt>\n<dd>First www.zope.org release</dd>\n</dl>\n\n<h3>Contents</h3>\n<p>\nThis release contains both DCOracle2 and a slightly\nmodified ZOracleDA; it will register as ZOracleDA\nwould (to silently upgrade Oracle connections) and\nthus cannot be run concurrently with ZOracleDA/DCOracle.\n</p>\n\n<h3>Installation</h3>\n<p>\nTo replace ZOracleDA, untar into lib/python/Products\nand make, move ZOracleDA out of lib/python/Products,\nand rename lib/python/Products/DCO2 to lib/python/Products/ZOracleDA.\n</p>\n\n<h3>Usage</h3>\n<p>\nThis release is intended for testing with ZOracleDA\nfeature compatibility (including LOB support) and is also\nintended for general use.\n</p>\n\n<h3>Platforms</h3>\n<p>\nNT support has been tested, Microsoft Visual Studio \nproject files are included; this has only\nreceived testing with Oracle 8.0 and Oracle 8.1\non Linux, Solaris, and Windows NT; a wider variety of platform experience\nis welcomed.\n</p>\n\n<h3>Download</h3>\n<p>\nThe product is available at\n<a href=\"http://www.zope.org/Members/matt/dco2\">http://www.zope.org/Members/matt/dco2</a>.\n</p>\n\n<p><a href=\"mailto:matt@digicool.com\">Matt Kromer</a></p>\n", "id": 36992.0}