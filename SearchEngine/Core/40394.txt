{"text": " Home Trees Indices Help Package CHEM Package Common Module Util hide private frames no frames Module Util Miscellaneous utility functions used across the application Classes hide private virtual oemolistream Similar to using StringIO to simulate a virtual file object virtual oemolostream Similar to using StringIO to simulate a virtual file object ProgressDots Clone of OEChem OEDots class to add progress indicator to long processes without actually requiring OEChem as a dependency Codec Throwaway class to encrypt and decrypt strings since the rotor module got deprecated after Python 2 3 BoltzmannProbabilityWeight Functor which given an energy value should provide a proportional probability weight based on Boltzmann probability distributions Functions hide private isStdFile filename Given a filename determine if it is meant to represent sys stdin sys stdout or just a regular file based on the convention of the filename stdOpen filename mode r stdFile CHEM DB rdb search NameRxnPatternMatchingModel SearchSentence Wrapper around basic file open method molBySmiles smiles Convenience method for common construct of creating a new molecule by SMILES string molToSmiList molList Convert a list of molecule objects into a list of respective SMILES strings splitCompositeMolToSmilesList compositeMol retainCounterIons False Given a composite molecule return a list of SMILES strings with one element per component molecule of the composite splitCompositeSmilesToList compositeSmi retainCounterIons False retainCounterIons option will try to not separate out components if they have opposing and neutralizing formal charges splitCompositeMol compositeMol retainCounterIons False Given a composite molecule return a list of molecule objects with one element per component molecule of the composite isSmilesFormat formatCode Check if the supplied formatCode is one of the OpenEye SMILES formats generatePlaceholders count Returns a comma separated string of query placeholders e g generateFingerprint smiles fpMax 8 fpMin fpSize 1 24 Returns a standard fingerprint object for a given SMILES string standardizeSmiles smi Given a SMILES string generate a standardized isomeric SMILES version createStandardSmiString mol Strange recordAtomCount currentAtom currentCount atomCountDict Utility function used by standardMolecularFormula standardizeMolecularFormula molecularFormula Read in a string representing a molecular formula and extract out the atom contents main argv Main method callable from command line Variables hide private OEFormat SMI 1 log logging getLogger Const APPLICATION NAME handler logging StreamHandler sys stderr formatter logging Formatter Const LOGGER FORMAT CHARGE CHARS Function Details hide private stdOpen filename mode r stdFile CHEM DB rdb search NameRxnPatternMatchingModel SearchSentence Wrapper around basic file open method If specified filename is the recognized as representing stdin or stdout see isStdFile then return the designated stdFile object presumably sys stdin or sys stdout splitCompositeMol compositeMol retainCounterIons False Given a composite molecule return a list of molecule objects with one element per component molecule of the composite Based on isomeric SMILES string delimiters so no 3D or other annotation data is retained generatePlaceholders count Returns a comma separated string of query placeholders e g s perfect for use in an in clause generateFingerprint smiles fpMax 8 fpMin fpSize 1 24 Returns a standard fingerprint object for a given SMILES string Just defer to basic FINGER Finger constructor but check to see if want to use the web service instead Useful for Windows clients that cannot import the FINGER module createStandardSmiString mol Strange Should be perfectly redundant with OECreateIsoSmiString but in some cases the direct call messes up such as alkene stereochemistry giving C C C C instead of C C C C Functionally the same but distinct when doing unique SMILES checks standardizeMolecularFormula molecularFormula Read in a string representing a molecular formula and extract out the atom contents Feed these into a temporary molecule no meaningful connectivity information required and then generate the standard molecular formula representation Home Trees Indices Help Generated by Epydoc 3 beta1 on Thu Nov 8 17 49 22 2 7 http epydoc sourceforge net", "_id": "http://www.ics.uci.edu/~dock/CHEM_docs/CHEM.Common.Util-module.html", "title": "chem.common.util", "html": "<?xml version=\"1.0\" encoding=\"ascii\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n          \"DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n  <title>CHEM.Common.Util</title>\n  <link rel=\"stylesheet\" href=\"epydoc.css\" type=\"text/css\" />\n  <script type=\"text/javascript\" src=\"epydoc.js\"></script>\n</head>\n\n<body bgcolor=\"white\" text=\"black\" link=\"blue\" vlink=\"#204080\"\n      alink=\"#204080\">\n<!-- ==================== NAVIGATION BAR ==================== -->\n<table class=\"navbar\" border=\"0\" width=\"100%\" cellpadding=\"0\"\n       bgcolor=\"#a0c0ff\" cellspacing=\"0\">\n  <tr valign=\"middle\">\n  <!-- Home link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"CHEM-module.html\">Home</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Tree link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"module-tree.html\">Trees</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Index link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"identifier-index.html\">Indices</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Help link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"help.html\">Help</a>&nbsp;&nbsp;&nbsp;</th>\n\n      <th class=\"navbar\" width=\"100%\"></th>\n  </tr>\n</table>\n<table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n  <tr valign=\"top\">\n    <td width=\"100%\">\n      <span class=\"breadcrumbs\">\n        <a href=\"CHEM-module.html\">Package&nbsp;CHEM</a> ::\n        <a href=\"CHEM.Common-module.html\">Package&nbsp;Common</a> ::\n        Module&nbsp;Util\n      </span>\n    </td>\n    <td>\n      <table cellpadding=\"0\" cellspacing=\"0\">\n        <!-- hide/show private -->\n        <tr><td align=\"right\"><span class=\"options\">[<a href=\"javascript:void(0);\" class=\"privatelink\"\n    onclick=\"toggle_private();\">hide&nbsp;private</a>]</span></td></tr>\n        <tr><td align=\"right\"><span class=\"options\"\n            >[<a href=\"frames.html\" target=\"_top\">frames</a\n            >]&nbsp;|&nbsp;<a href=\"CHEM.Common.Util-module.html\"\n            target=\"_top\">no&nbsp;frames</a>]</span></td></tr>\n      </table>\n    </td>\n  </tr>\n</table>\n<!-- ==================== MODULE DESCRIPTION ==================== -->\n<h1 class=\"epydoc\">Module Util</h1><br /><br />\nMiscellaneous utility functions used across the application<br /><br />\n\n<!-- ==================== CLASSES ==================== -->\n<a name=\"section-Classes\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Classes</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-Classes\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a href=\"CHEM.Common.Util.virtual_oemolistream-class.html\" class=\"summary-name\">virtual_oemolistream</a><br />\n      Similar to using StringIO to simulate a virtual file object.\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a href=\"CHEM.Common.Util.virtual_oemolostream-class.html\" class=\"summary-name\">virtual_oemolostream</a><br />\n      Similar to using StringIO to simulate a virtual file object.\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a href=\"CHEM.Common.Util.ProgressDots-class.html\" class=\"summary-name\">ProgressDots</a><br />\n      Clone of OEChem OEDots class, to add progress indicator to long \n        processes, without actually requiring OEChem as a dependency.\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a href=\"CHEM.Common.Util.Codec-class.html\" class=\"summary-name\">Codec</a><br />\n      Throwaway class to &quot;encrypt&quot; and &quot;decrypt&quot; \n        strings since the rotor module got deprecated after Python 2.3.\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a href=\"CHEM.Common.Util.BoltzmannProbabilityWeight-class.html\" class=\"summary-name\">BoltzmannProbabilityWeight</a><br />\n      Functor which given an energy value, should provide a \n        proportional probability weight based on Boltzmann probability \n        distributions.\n    </td>\n  </tr>\n</table>\n<!-- ==================== FUNCTIONS ==================== -->\n<a name=\"section-Functions\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Functions</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-Functions\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"isStdFile\"></a><span class=\"summary-sig-name\">isStdFile</span>(<span class=\"summary-sig-arg\">filename</span>)</span><br />\n      Given a filename, determine if it is meant to represent sys.stdin \n      / sys.stdout or just a regular file based on the convention of the \n      filename &quot;-&quot;</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.Util-module.html#stdOpen\" class=\"summary-sig-name\">stdOpen</a>(<span class=\"summary-sig-arg\">filename</span>,\n        <span class=\"summary-sig-arg\">mode</span>=<span class=\"summary-sig-default\"><code class=\"variable-quote\">'</code><code class=\"variable-string\">r</code><code class=\"variable-quote\">'</code></span>,\n        <span class=\"summary-sig-arg\">stdFile</span>=<span class=\"summary-sig-default\">&lt;CHEM.DB.rdb.search.NameRxnPatternMatchingModel.SearchSentence<code class=\"variable-ellipsis\">...</code></span>)</span><br />\n      Wrapper around basic file &quot;open&quot; method.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"molBySmiles\"></a><span class=\"summary-sig-name\">molBySmiles</span>(<span class=\"summary-sig-arg\">smiles</span>)</span><br />\n      Convenience method for common construct of creating a new molecule\n      by SMILES string.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"molToSmiList\"></a><span class=\"summary-sig-name\">molToSmiList</span>(<span class=\"summary-sig-arg\">molList</span>)</span><br />\n      Convert a list of molecule objects into a list of respective \n      SMILES strings.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"splitCompositeMolToSmilesList\"></a><span class=\"summary-sig-name\">splitCompositeMolToSmilesList</span>(<span class=\"summary-sig-arg\">compositeMol</span>,\n        <span class=\"summary-sig-arg\">retainCounterIons</span>=<span class=\"summary-sig-default\">False</span>)</span><br />\n      Given a (composite) molecule, return a list of SMILES strings, \n      with one element per component molecule of the composite.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"splitCompositeSmilesToList\"></a><span class=\"summary-sig-name\">splitCompositeSmilesToList</span>(<span class=\"summary-sig-arg\">compositeSmi</span>,\n        <span class=\"summary-sig-arg\">retainCounterIons</span>=<span class=\"summary-sig-default\">False</span>)</span><br />\n      retainCounterIons option will try to not separate out components \n      if they have opposing (and neutralizing) formal charges.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.Util-module.html#splitCompositeMol\" class=\"summary-sig-name\">splitCompositeMol</a>(<span class=\"summary-sig-arg\">compositeMol</span>,\n        <span class=\"summary-sig-arg\">retainCounterIons</span>=<span class=\"summary-sig-default\">False</span>)</span><br />\n      Given a (composite) molecule, return a list of molecule objects, \n      with one element per component molecule of the composite.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"isSmilesFormat\"></a><span class=\"summary-sig-name\">isSmilesFormat</span>(<span class=\"summary-sig-arg\">formatCode</span>)</span><br />\n      Check if the supplied formatCode is one of the OpenEye SMILES \n      formats.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.Util-module.html#generatePlaceholders\" class=\"summary-sig-name\">generatePlaceholders</a>(<span class=\"summary-sig-arg\">count</span>)</span><br />\n      Returns a comma-separated string of query placeholders (e.g.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.Util-module.html#generateFingerprint\" class=\"summary-sig-name\">generateFingerprint</a>(<span class=\"summary-sig-arg\">smiles</span>,\n        <span class=\"summary-sig-arg\">fpMax</span>=<span class=\"summary-sig-default\">8</span>,\n        <span class=\"summary-sig-arg\">fpMin</span>=<span class=\"summary-sig-default\">0</span>,\n        <span class=\"summary-sig-arg\">fpSize</span>=<span class=\"summary-sig-default\">1024</span>)</span><br />\n      Returns a standard fingerprint object for a given (SMILES) \n      string.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"standardizeSmiles\"></a><span class=\"summary-sig-name\">standardizeSmiles</span>(<span class=\"summary-sig-arg\">smi</span>)</span><br />\n      Given a SMILES string, generate a standardized isomeric SMILES \n      version.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.Util-module.html#createStandardSmiString\" class=\"summary-sig-name\">createStandardSmiString</a>(<span class=\"summary-sig-arg\">mol</span>)</span><br />\n      Strange.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"recordAtomCount\"></a><span class=\"summary-sig-name\">recordAtomCount</span>(<span class=\"summary-sig-arg\">currentAtom</span>,\n        <span class=\"summary-sig-arg\">currentCount</span>,\n        <span class=\"summary-sig-arg\">atomCountDict</span>)</span><br />\n      Utility function used by standardMolecularFormula</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.Util-module.html#standardizeMolecularFormula\" class=\"summary-sig-name\">standardizeMolecularFormula</a>(<span class=\"summary-sig-arg\">molecularFormula</span>)</span><br />\n      Read in a string representing a molecular formula and extract out \n      the atom contents.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"main\"></a><span class=\"summary-sig-name\">main</span>(<span class=\"summary-sig-arg\">argv</span>)</span><br />\n      Main method, callable from command line</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n</table>\n<!-- ==================== VARIABLES ==================== -->\n<a name=\"section-Variables\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Variables</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-Variables\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a name=\"OEFormat_SMI\"></a><span class=\"summary-name\">OEFormat_SMI</span> = <code title=\"-1\">-1</code>\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a name=\"log\"></a><span class=\"summary-name\">log</span> = <code title=\"logging.getLogger(Const.APPLICATION_NAME)\">logging.getLogger(Const.APPLICATION_NAME)</code>\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a name=\"handler\"></a><span class=\"summary-name\">handler</span> = <code title=\"logging.StreamHandler(sys.stderr)\">logging.StreamHandler(sys.stderr)</code>\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a name=\"formatter\"></a><span class=\"summary-name\">formatter</span> = <code title=\"logging.Formatter(Const.LOGGER_FORMAT)\">logging.Formatter(Const.LOGGER_FORMAT)</code>\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a name=\"CHARGE_CHARS\"></a><span class=\"summary-name\">CHARGE_CHARS</span> = <code title=\"('-', '+')\"><code class=\"variable-group\">(</code><code class=\"variable-quote\">'</code><code class=\"variable-string\">-</code><code class=\"variable-quote\">'</code><code class=\"variable-op\">, </code><code class=\"variable-quote\">'</code><code class=\"variable-string\">+</code><code class=\"variable-quote\">'</code><code class=\"variable-group\">)</code></code>\n    </td>\n  </tr>\n</table>\n<!-- ==================== FUNCTION DETAILS ==================== -->\n<a name=\"section-FunctionDetails\"></a>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Function Details</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-FunctionDetails\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n</table>\n<a name=\"stdOpen\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">stdOpen</span>(<span class=\"sig-arg\">filename</span>,\n        <span class=\"sig-arg\">mode</span>=<span class=\"sig-default\"><code class=\"variable-quote\">'</code><code class=\"variable-string\">r</code><code class=\"variable-quote\">'</code></span>,\n        <span class=\"sig-arg\">stdFile</span>=<span class=\"sig-default\">&lt;CHEM.DB.rdb.search.NameRxnPatternMatchingModel.SearchSentence<code class=\"variable-ellipsis\">...</code></span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Wrapper around basic file &quot;open&quot; method.  If specified \n  filename is the recognized as representing stdin or stdout (see \n  &quot;isStdFile&quot;) then return the designated stdFile object \n  (presumably sys.stdin or sys.stdout).\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"splitCompositeMol\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">splitCompositeMol</span>(<span class=\"sig-arg\">compositeMol</span>,\n        <span class=\"sig-arg\">retainCounterIons</span>=<span class=\"sig-default\">False</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Given a (composite) molecule, return a list of molecule objects, with \n  one element per component molecule of the composite. Based on isomeric \n  SMILES string delimiters, so no 3D or other annotation data is \n  retained.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"generatePlaceholders\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">generatePlaceholders</span>(<span class=\"sig-arg\">count</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Returns a comma-separated string of query placeholders (e.g. %s), \n  perfect for use in an &quot;in&quot; clause.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"generateFingerprint\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">generateFingerprint</span>(<span class=\"sig-arg\">smiles</span>,\n        <span class=\"sig-arg\">fpMax</span>=<span class=\"sig-default\">8</span>,\n        <span class=\"sig-arg\">fpMin</span>=<span class=\"sig-default\">0</span>,\n        <span class=\"sig-arg\">fpSize</span>=<span class=\"sig-default\">1024</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Returns a standard fingerprint object for a given (SMILES) string. \n  Just defer to basic FINGER.Finger(...) constructor, but check to see if \n  want to use the web service instead.  Useful for Windows clients that \n  cannot import the FINGER module.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"createStandardSmiString\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">createStandardSmiString</span>(<span class=\"sig-arg\">mol</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Strange.  Should be perfectly redundant with OECreateIsoSmiString, but\n  in some cases, the direct call messes up, such as alkene stereochemistry \n  giving C\\C=C\\C instead of C/C=C/C. Functionally the same, but distinct \n  when doing unique SMILES checks.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"standardizeMolecularFormula\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">standardizeMolecularFormula</span>(<span class=\"sig-arg\">molecularFormula</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Read in a string representing a molecular formula and extract out the \n  atom contents.  Feed these into a temporary molecule (no meaningful \n  connectivity information required) and then generate the standard \n  molecular formula representation.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<br />\n<!-- ==================== NAVIGATION BAR ==================== -->\n<table class=\"navbar\" border=\"0\" width=\"100%\" cellpadding=\"0\"\n       bgcolor=\"#a0c0ff\" cellspacing=\"0\">\n  <tr valign=\"middle\">\n  <!-- Home link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"CHEM-module.html\">Home</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Tree link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"module-tree.html\">Trees</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Index link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"identifier-index.html\">Indices</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Help link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"help.html\">Help</a>&nbsp;&nbsp;&nbsp;</th>\n\n      <th class=\"navbar\" width=\"100%\"></th>\n  </tr>\n</table>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%%\">\n  <tr>\n    <td align=\"left\" class=\"footer\">\n    Generated by Epydoc 3.0beta1 on Thu Nov  8 17:49:22 2007\n    </td>\n    <td align=\"right\" class=\"footer\">\n      <a href=\"http://epydoc.sourceforge.net\">http://epydoc.sourceforge.net</a>\n    </td>\n  </tr>\n</table>\n\n<script type=\"text/javascript\">\n  <!--\n  // Private objects are initially displayed (because if\n  // javascript is turned off then we want them to be\n  // visible); but by default, we want to hide them.  So hide\n  // them unless we have a cookie that says to show them.\n  checkCookie()\n  // -->\n</script>\n  \n</body>\n</html>\n", "id": 40394.0}