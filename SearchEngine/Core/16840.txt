{"text": "Bypass Aware Instruction Scheduling for Register File Power Reduction Sanghyun Park Aviral Shrivastava Nikil Dutt Alex Nicolau Eugene Earlie and Yunheung Paek LCTES 2 6 Proceedings of the International Conference on Languages Compilers and Tools for Embedded Systems Abstract Since register files suffer from some of the highest power densities within processors designers have investigated several architectural strategies for register file power reduction including On Demand RF Read where the register file is read only if the operand value is not available from the bypasses However we show in this paper that significant additional reductions in the register file power consumption can be obtained by scheduling instructions so that they transfer the operands via bypasses rather than reading from the register file Such instruction scheduling requires the compiler to be cognizant of the bypasses in the processor pipeline In this paper we develop several bypass aware instruction scheduling heuristics varying in time complexity and study their effectiveness on the Intel XScale processor pipeline running MiBench benchmarks Our experimental results show additional power consumption reductions of up to 26 and on average 12 over and above the register file power reduction achieved through existing techniques Center For Embedded Computer Systems Department of Information and Computer Science University of California Irvine SOAR Group School of Electrical Engineering Seoul National University Seoul Korea Strategic CAD Labs Intel Corporation Hudson Massachussets ", "_id": "http://www.ics.uci.edu/~aviral/papers/rfPower.html", "title": "rfpower", "html": "<title>RFPower</title>\n<body bgcolor=#ffffff>\n<h2>Bypass Aware Instruction Scheduling for Register File Power Reduction</h2>\n  \n<a href=\"http://www.ics.uci.edu/~aviral/papers/rfPower.pdf\"><img\nsrc=\"pdf.png\" alt=\"pdf\" width=\"34\" height=\"34\" border=\"0\"></a>\n\n<a href=\"http://www.ics.uci.edu/~aviral/papers/rfPower.ppt\"><img\nsrc=\"ppt.png\" alt=\"ppt\" width=\"34\" height=\"34\" border=\"0\"></a>\n\n<p><i>\n<a href=\"http://compiler.snu.ac.kr/shparkid/\"> Sanghyun Park </a>,\n<a href=\"http://www.ics.uci.edu/~aviral\"> Aviral Shrivastava </a>,\n<a href=\"http://www.ics.uci.edu/~dutt\"> Nikil Dutt </a>,\n<a href=\"http://www.ics.uci.edu/~nicolau\"> Alex Nicolau </a>,\n<a href=\"http://search2.intel.com/corporate/default.aspx?culture=en-US&q=Eugene+Earlie\"> \nEugene Earlie </a>, and\n<a href=\"http://compiler.snu.ac.kr/ypaek/\"> Yunheung Paek </a>\n</i>\n\n<p><b>LCTES 2006: </b><i>Proceedings of the International Conference\n    on Languages Compilers and Tools for Embedded Systems</i>\n\n<p><b>Abstract: </b>\nSince register files suffer from some of the highest power\ndensities within processors, designers have investigated several\narchitectural strategies for register file power reduction,\nincluding \"On Demand RF Read\" where the register\nfile is read only if the operand value is not available from\nthe bypasses. However, we show in this paper that significant\nadditional reductions in the register file power consumption\ncan be obtained by scheduling instructions so that\nthey transfer the operands via bypasses, rather than reading\nfrom the register file. Such instruction scheduling requires\nthe compiler to be cognizant of the bypasses in the processor\npipeline. In this paper, we develop several bypass aware\ninstruction scheduling heuristics varying in time complexity,\nand study their effectiveness on the Intel XScale processor\npipeline running MiBench benchmarks. Our experimental\nresults show additional power consumption reductions of\nup to 26% and on average 12% over and above the register\nfile power reduction achieved through existing techniques.\n\n<hr>\n\n<table cellpadding=\"2\" cellspacing=\"2\" border=\"0\" width=\"100%\">\n  <tbody>\n    <tr>\n      <td>\n      Center For Embedded Computer Systems,<br> \n      Department of Information and Computer Science,<br>\n      University of California, Irvine.\n      </td>\n      <td>\n      SOAR Group,<br>\n      School of Electrical Engineering,<br>\n      Seoul National University, Seoul, Korea.\n      </td>\n      <td>\n      Strategic CAD Labs,<br>\n      Intel Corporation, <br>\n      Hudson, Massachussets.\n      </td>\n    </tr>\n </tbody>\n</table>\n", "id": 16840.0}