{"text": "UP HOME README Author Rares Vernica rares at ics uci edu Table of Contents 1 Copyright 2 Overview 3 Quick Start 3 1 Build 3 2 Self join 3 2 1 Upload raw data 3 2 2 Generate records 3 2 3 Balance records across nodes 3 2 4 Run set similarity self join 3 3 R S join 3 3 1 Upload raw data 3 3 2 Generate records 3 3 3 Balance records across nodes 3 3 4 Run set similarity join 4 Configuration 5 Directory Structure and Tasks 6 Dataset 7 Source Code Overview 1 Copyright Copyright 2 1 2 11 The Regents of the University of California Licensed under the Apache License Version 2 the License you may not use this file except in compliance with the License You may obtain a copy of the License at http www apache org licenses LICENSE 2 Unless required by applicable law or agreed to in writing software distributed under the License is distributed on an AS IS BASIS WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied See the License for the specific language governing permissions and limitations under the License 2 Overview This guide describes how to use the source code developed for the study in Efficient Parallel Set Similarity Joins Using MapReduce Rares Vernica Michael J Carey Chen Li SIGMOD 2 1 3 Quick Start The only requirement for running the code is a Hadoop cluster It does not have to be a full fledged cluster a single node pseudo distributed installation of Hadoop is enough For more details about starting a Hadoop cluster please see http hadoop apache org common docs current quickstart html The code works with Hadoop version 17 or higher 3 1 Build cd fuzzyjoin hadoop fuzzyjoin hadoop ant 3 2 Self join Here are the steps to perform a self join on a small sample of the DBLP dataset We use 1 DBLP entries title and authors as the join attributes Jaccard similarity and a 5 similarity threshold 3 2 1 Upload raw data fuzzyjoin hadoop hadoop fs put data dblp small raw dblp small raw The file dblp small raw txt contains one record per line On each line the fields are separated by and contain DBLP id publication title authors concatenated with and other information available about the publication concatenated with 3 2 2 Generate records fuzzyjoin hadoop hadoop jar target fuzzyjoin hadoop 2 jar recordbuild conf src main resources fuzzyjoin dblp quickstart xml This job assigns unique record IDs to each record The RIDs are integers and are appended in front of each record After this job each record contains five fields RID DBLP id title authors other information 3 2 3 Balance records across nodes fuzzyjoin hadoop hadoop jar target fuzzyjoin hadoop 2 jar recordbalance conf src main resources fuzzyjoin dblp quickstart xml To skip this step run fuzzyjoin hadoop hadoop fs mv dblp small recordsbulk dblp small records 3 2 4 Run set similarity self join fuzzyjoin hadoop hadoop jar target fuzzyjoin hadoop 2 jar fuzzyjoin conf src main resources fuzzyjoin dblp quickstart xml This will run the three stages required to do fuzzy joins token ordering Tokens kernel RIDPairs and record join RecordPairs It will use the basic alternative for each stage In total it will run five Hadoop jobs TokensBasic phase1 TokenBasic phase2 RIDPairsImproved RecordPairsBasic phase1 RecordPairsBasic phase2 Each stage can be run separately using different alternatives by replacing fuzzyjoin in the above command with the name of the stage and the alternative For example to run the one phase token ordering TokensImproved type fuzzyjoin hadoop hadoop jar target fuzzyjoin hadoop 2 jar tokensimproved conf src main resources fuzzyjoin dblp quickstart xml To get the list with all the available stages and alternatives type fuzzyjoin hadoop hadoop jar target fuzzyjoin hadoop 2 jar To see the results type fuzzyjoin hadoop hadoop fs cat dblp small recordpairs part Each line contains a pair of records that fuzzy join and their similarity The format of the line is record 1 threshold record2 where record1 and record2 have the same format as described in step 3 3 3 R S join Here are the steps to perform a join between a small sample of the DBLP dataset and a small sample of the CITESEERX dataset We use 1 DBLP entries and 1 CITESEERX entries title and authors as the join attributes Jaccard similarity and a 5 similarity threshold 3 3 1 Upload raw data fuzzyjoin hadoop hadoop fs put data pub small raw dblp pub small raw dblp fuzzyjoin hadoop hadoop fs put data pub small raw csx pub small raw csx The raw directory contains two files one for each dataset 3 3 2 Generate records fuzzyjoin hadoop hadoop jar target fuzzyjoin hadoop 2 jar recordbuild conf src main resources fuzzyjoin pub quickstart xml Dfuzzyjoin data suffix input dblp fuzzyjoin hadoop hadoop jar target fuzzyjoin hadoop 2 jar recordbuild conf src main resources fuzzyjoin pub quickstart xml Dfuzzyjoin data suffix input csx Each job generates records for one of the datasets 3 3 3 Balance records across nodes fuzzyjoin hadoop hadoop jar target fuzzyjoin hadoop 2 jar recordbalance conf src main resources fuzzyjoin pub quickstart xml Dfuzzyjoin data suffix input dblp fuzzyjoin hadoop hadoop jar target fuzzyjoin hadoop 2 jar recordbalance conf src main resources fuzzyjoin pub quickstart xml Dfuzzyjoin data suffix input csx To skip this step run fuzzyjoin hadoop hadoop fs mv pub small recordsbulk dblp pub small records dblp fuzzyjoin hadoop hadoop fs mv pub small recordsbulk csx pub small records csx 3 3 4 Run set similarity join fuzzyjoin hadoop hadoop jar target fuzzyjoin hadoop 2 jar fuzzyjoin conf src main resources fuzzyjoin pub quickstart xml To see the results type fuzzyjoin hadoop hadoop fs cat pub small recordpairs part Each line contains a pair of records that fuzzy join and their similarity The format of the line is record DBLP threshold record CITESEERX where record DBLP and record CITESEERX have the same format as described in the self join case 4 Configuration The XML files provided with the conf argument above contain various configuration parameters Using the configuration parameters a user can specify the location of the data the similarity function and threshold the join attributes and other settings Moreover the user can specify additional parameters in the command line using the D option The default parameters and more details about each parameter are in fuzzyjoin hadoop src main resources fuzzyjoin default xml All these parameters and other constants are defined in fuzzyjoin core src main java edu uci ics fuzzyjoin FuzzyJoinConfig java fuzzyjoin hadoop src main java edu uci ics fuzzyjoin hadoop FuzzyJoinDriver java 5 Directory Structure and Tasks The following directory structure is used for self joins raw recordsbulk recordsbulk 1 records records 1 tokens tokens phase1 ridpairs recordpairs recordpairs phase1 The raw directory contains the original files one record per line The recordsbulk directory contains the original data where each record starts with an integer RID The number after the directory name represents the copy number is the original data 1 is the first copy etc The records directory contains the same data as the recordsbulk directory except that multiple copies are aggregated and the data is balanced across nodes The number after the directory name represents how many copies are aggregated is of only one copy recordsbulk 1 is for two copies recordsbulk and recordsbulk 1 etc So records n represents an increased dataset where n denotes how many times the dataset was increased For the rest of the directories the number after the directory name has the same meaning The tokens directory contains the list of tokens The ridpairs directory contains the RID pairs that fuzzy join The recordpairs directory contains the record pairs that fuzzy join The phase1 prefix that appears for some directories represents the output of the first MapReduce job for the tasks with two MapReduce jobs i e tokensbasic and recordpairsbasic Bellow is a table with each task input and output directories TaskInputOutputrecordbuildrawrecordsbulkrecordbalancerecordsbulkrecordstokens basic improvedrecordstokensridpairs improved ppjoinrecords tokensridpairsrecordpairs basic improvedrecords ridpairsrecordpairsrecordgeneraterecordsbulk tokens recordsbulk For R S joins the first few directories also carry the name of the dataset name of the R dataset or of the S dataset in order to differentiate between them raw DATASET R raw DATASET S recordsbulk DATASET R recordsbulk DATASET R 1 recordsbulk DATASET S recordsbulk DATASET S 1 records DATASET R records DATASET R 1 records DATASET S records DATASET S 1 where DATASET R and DATASET S are the names of the two datasets In our R S join example we used dblp for DATASET R and csx for DATASET S 6 Dataset By default the dataset is assumed to have one record per line The fields of each record are delimited by The first filed of each record is an integer RID This settings can be changed in fuzzyjoin core src main java edu uci ics fuzzyjoin FuzzyJoinConfig java The dataset can be increased using the recordgenerate task fuzzyjoin hadoop hadoop jar target fuzzyjoin hadoop 2 jar recordgenerate conf src main resources fuzzyjoin dblp quickstart xml Dfuzzyjoin data copy 1 Dfuzzyjoin data norecords 1 This stats 9 MapReduce jobs each of them generating a new copy of the dataset The fuzzyjoin data copy parameter specifies the number of times the dataset should be increased while the fuzzyjoin data norecords parameter specifies the number of records in the original dataset it is used to generate unique and increasing RIDs All the following tasks also need to have the same value for the fuzzyjoin data copy parameter in order to use the increased dataset This task can only be ran after running recordbuild and tokensbasic or tokensimproved on the original dataset After this task the recordbuild task needs to be ran it cannot be skipped on the increased dataset fuzzyjoin hadoop hadoop jar target fuzzyjoin hadoop 2 jar recordbalance conf src main resources fuzzyjoin dblp quickstart xml Dfuzzyjoin data copy 1 fuzzyjoin hadoop hadoop jar target fuzzyjoin hadoop 2 jar fuzzyjoin conf src main resources fuzzyjoin dblp quickstart xml Dfuzzyjoin data copy 1 7 Source Code Overview The source code is divided into two modules fuzzyjoin core general fuzzy join code in fuzzyjoin core src main java edu uci ics fuzzyjoin main memory fuzzy join edu uci ics fuzzyjoin similarity similarity functions and filters edu uci ics fuzzyjoin invertedlist inverted lists index edu uci ics fuzzyjoin recordgroup alternatives for grouping records edu uci ics fuzzyjoin tokenizer tokenizes edu uci ics fuzzyjoin tokenorder alternatives for ordering tokens fuzzyjoin hadoop Hadoop specific fuzzy join code in fuzzyjoin hadoop src main java edu uci ics fuzzyjoin hadoop main program edu uci ics fuzzyjoin hadoop datagen classes for building records and increasing dataset size edu uci ics fuzzyjoin hadoop recordpairs Stage 3 edu uci ics fuzzyjoin hadoop ridpairs Stage 2 edu uci ics fuzzyjoin hadoop ridrecordpairs alternative to Stage 2 and 3 where records are not projected edu uci ics fuzzyjoin hadoop tokens Stage 1 Date 2 11 4 12 9 58 14 PDT HTML generated by org mode 7 4 in emacs 24", "_id": "http://asterixdb.ics.uci.edu/fuzzyjoin/README.html", "title": "readme", "html": "<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n               \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\"\nlang=\"en\" xml:lang=\"en\">\n<head>\n<title>README</title>\n<meta http-equiv=\"Content-Type\" content=\"text/html;charset=iso-8859-1\"/>\n<meta name=\"generator\" content=\"Org-mode\"/>\n<meta name=\"generated\" content=\"2011-04-12 09:58:14 PDT\"/>\n<meta name=\"author\" content=\"Rares Vernica\"/>\n<meta name=\"description\" content=\"\"/>\n<meta name=\"keywords\" content=\"\"/>\n<style type=\"text/css\">\n <!--/*--><![CDATA[/*><!--*/\n  html { font-family: Times, serif; font-size: 12pt; }\n  .title  { text-align: center; }\n  .todo   { color: red; }\n  .done   { color: green; }\n  .tag    { background-color: #add8e6; font-weight:normal }\n  .target { }\n  .timestamp { color: #bebebe; }\n  .timestamp-kwd { color: #5f9ea0; }\n  .right  {margin-left:auto; margin-right:0px;  text-align:right;}\n  .left   {margin-left:0px;  margin-right:auto; text-align:left;}\n  .center {margin-left:auto; margin-right:auto; text-align:center;}\n  p.verse { margin-left: 3% }\n  pre {\n\tborder: 1pt solid #AEBDCC;\n\tbackground-color: #F3F5F7;\n\tpadding: 5pt;\n\tfont-family: courier, monospace;\n        font-size: 90%;\n        overflow:auto;\n  }\n  table { border-collapse: collapse; }\n  td, th { vertical-align: top;  }\n  th.right  { text-align:center;  }\n  th.left   { text-align:center;   }\n  th.center { text-align:center; }\n  td.right  { text-align:right;  }\n  td.left   { text-align:left;   }\n  td.center { text-align:center; }\n  dt { font-weight: bold; }\n  div.figure { padding: 0.5em; }\n  div.figure p { text-align: center; }\n  textarea { overflow-x: auto; }\n  .linenr { font-size:smaller }\n  .code-highlighted {background-color:#ffff00;}\n  .org-info-js_info-navigation { border-style:none; }\n  #org-info-js_console-label { font-size:10px; font-weight:bold;\n                               white-space:nowrap; }\n  .org-info-js_search-highlight {background-color:#ffff00; color:#000000;\n                                 font-weight:bold; }\n  /*]]>*/-->\n</style>\n<style type=\"text/css\">code{font-size:smaller;}</style>\n<script type=\"text/javascript\">\n<!--/*--><![CDATA[/*><!--*/\n function CodeHighlightOn(elem, id)\n {\n   var target = document.getElementById(id);\n   if(null != target) {\n     elem.cacheClassElem = elem.className;\n     elem.cacheClassTarget = target.className;\n     target.className = \"code-highlighted\";\n     elem.className   = \"code-highlighted\";\n   }\n }\n function CodeHighlightOff(elem, id)\n {\n   var target = document.getElementById(id);\n   if(elem.cacheClassElem)\n     elem.className = elem.cacheClassElem;\n   if(elem.cacheClassTarget)\n     target.className = elem.cacheClassTarget;\n }\n/*]]>*///-->\n</script>\n\n</head>\n<body>\n<div id=\"content\">\n<div id=\"org-div-home-and-up\" style=\"text-align:right;font-size:70%;white-space:nowrap;\">\n <a accesskey=\"h\" href=\"http://asterix.ics.uci.edu/fuzzyjoin-mapreduce/\"> UP </a>\n |\n <a accesskey=\"H\" href=\"http://asterix.ics.uci.edu/fuzzyjoin-mapreduce/\"> HOME </a>\n</div>\n\n<h1 class=\"title\">README</h1>\n\n<p>Author: Rares Vernica &lt;rares (at) ics.uci.edu&gt;\n</p>\n\n<div id=\"table-of-contents\">\n<h2>Table of Contents</h2>\n<div id=\"text-table-of-contents\">\n<ul>\n<li><a href=\"#sec-1\">1 Copyright </a></li>\n<li><a href=\"#sec-2\">2 Overview </a></li>\n<li><a href=\"#sec-3\">3 Quick Start </a>\n<ul>\n<li><a href=\"#sec-3_1\">3.1 Build </a></li>\n<li><a href=\"#sec-3_2\">3.2 Self-join </a>\n<ul>\n<li><a href=\"#sec-3_2_1\">3.2.1 Upload raw data </a></li>\n<li><a href=\"#sec-3_2_2\">3.2.2 Generate records </a></li>\n<li><a href=\"#sec-3_2_3\">3.2.3 Balance records across nodes </a></li>\n<li><a href=\"#sec-3_2_4\">3.2.4 Run set-similarity self-join </a></li>\n</ul>\n</li>\n<li><a href=\"#sec-3_3\">3.3 R-S join </a>\n<ul>\n<li><a href=\"#sec-3_3_1\">3.3.1 Upload raw data </a></li>\n<li><a href=\"#sec-3_3_2\">3.3.2 Generate records </a></li>\n<li><a href=\"#sec-3_3_3\">3.3.3 Balance records across nodes </a></li>\n<li><a href=\"#sec-3_3_4\">3.3.4 Run set-similarity join </a></li>\n</ul></li>\n</ul>\n</li>\n<li><a href=\"#sec-4\">4 Configuration </a></li>\n<li><a href=\"#sec-5\">5 Directory Structure and Tasks </a></li>\n<li><a href=\"#sec-6\">6 Dataset </a></li>\n<li><a href=\"#sec-7\">7 Source Code Overview </a></li>\n</ul>\n</div>\n</div>\n\n<div id=\"outline-container-1\" class=\"outline-2\">\n<h2 id=\"sec-1\"><span class=\"section-number-2\">1</span> Copyright </h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n\n<p>Copyright 2010-2011 The Regents of the University of California\n</p>\n<p>\nLicensed under the Apache License, Version 2.0 (the \"License\"); you\nmay not use this file except in compliance with the License.  You\nmay obtain a copy of the License at\n</p>\n<p>\n<a href=\"http://www.apache.org/licenses/LICENSE-2.0\">http://www.apache.org/licenses/LICENSE-2.0</a>\n</p>\n<p>\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\"; BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied.  See the License for the specific language governing\npermissions and limitations under the License.\n</p></div>\n\n</div>\n\n<div id=\"outline-container-2\" class=\"outline-2\">\n<h2 id=\"sec-2\"><span class=\"section-number-2\">2</span> Overview </h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n\n<p>This guide describes how to use the source code developed for the study in:\n</p>\n\n\n\n<pre class=\"example\">Efficient Parallel Set-Similarity Joins Using MapReduce.\nRares Vernica, Michael J. Carey, Chen Li\nSIGMOD 2010 \n</pre>\n\n\n</div>\n\n</div>\n\n<div id=\"outline-container-3\" class=\"outline-2\">\n<h2 id=\"sec-3\"><span class=\"section-number-2\">3</span> Quick Start </h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n\n<p>The only requirement for running the code is a Hadoop cluster. It does\nnot have to be a full-fledged cluster, a single-node\npseudo-distributed installation of Hadoop is enough. For more details\nabout starting a Hadoop cluster please see\n<a href=\"http://hadoop.apache.org/common/docs/current/quickstart.html\">http://hadoop.apache.org/common/docs/current/quickstart.html</a> The code\nworks with Hadoop version 0.17 or higher.\n</p>\n</div>\n\n<div id=\"outline-container-3_1\" class=\"outline-3\">\n<h3 id=\"sec-3_1\"><span class=\"section-number-3\">3.1</span> Build </h3>\n<div class=\"outline-text-3\" id=\"text-3_1\">\n\n\n\n\n<pre class=\"example\">$ cd fuzzyjoin-hadoop\nfuzzyjoin-hadoop$ ant\n</pre>\n\n\n</div>\n\n</div>\n\n<div id=\"outline-container-3_2\" class=\"outline-3\">\n<h3 id=\"sec-3_2\"><span class=\"section-number-3\">3.2</span> Self-join </h3>\n<div class=\"outline-text-3\" id=\"text-3_2\">\n\n<p>Here are the steps to perform a self-join on a small sample of the\nDBLP dataset. We use 100 DBLP entries, title and authors as the join\nattributes, Jaccard similarity and a 0.5 similarity threshold.\n</p>\n</div>\n\n<div id=\"outline-container-3_2_1\" class=\"outline-4\">\n<h4 id=\"sec-3_2_1\"><span class=\"section-number-4\">3.2.1</span> Upload raw data </h4>\n<div class=\"outline-text-4\" id=\"text-3_2_1\">\n\n\n\n\n<pre class=\"example\">fuzzyjoin-hadoop$ hadoop fs -put \\\n  ../data/dblp-small/raw-000 dblp-small/raw-000\n</pre>\n\n\n\n<p>\nThe file <code>dblp-small.raw.txt</code> contains one record per line. On each\nline the fields are separated by \"<code>:</code>\" and contain DBLP id,\npublication title, authors (concatenated with \" \") and other\ninformation available about the publication (concatenated with \" \").\n</p></div>\n\n</div>\n\n<div id=\"outline-container-3_2_2\" class=\"outline-4\">\n<h4 id=\"sec-3_2_2\"><span class=\"section-number-4\">3.2.2</span> Generate records </h4>\n<div class=\"outline-text-4\" id=\"text-3_2_2\">\n\n\n\n\n<pre class=\"example\">fuzzyjoin-hadoop$ hadoop jar target/fuzzyjoin-hadoop-0.0.2.jar \\\n  recordbuild -conf src/main/resources/fuzzyjoin/dblp.quickstart.xml\n</pre>\n\n\n\n<p>\nThis job assigns unique record-IDs to each record. The RIDs are\nintegers and are appended in front of each record. After this job,\neach record contains five fields: RID, DBLP id, title, authors, other\ninformation.\n</p></div>\n\n</div>\n\n<div id=\"outline-container-3_2_3\" class=\"outline-4\">\n<h4 id=\"sec-3_2_3\"><span class=\"section-number-4\">3.2.3</span> Balance records across nodes </h4>\n<div class=\"outline-text-4\" id=\"text-3_2_3\">\n\n\n\n\n<pre class=\"example\">fuzzyjoin-hadoop$ hadoop jar target/fuzzyjoin-hadoop-0.0.2.jar \\\n  recordbalance -conf src/main/resources/fuzzyjoin/dblp.quickstart.xml\n</pre>\n\n\n\n<p>\nTo skip this step, run:\n</p>\n\n\n\n<pre class=\"example\">fuzzyjoin-hadoop$ hadoop fs -mv \\\n  dblp-small/recordsbulk-000 dblp-small/records-000\n</pre>\n\n\n</div>\n\n</div>\n\n<div id=\"outline-container-3_2_4\" class=\"outline-4\">\n<h4 id=\"sec-3_2_4\"><span class=\"section-number-4\">3.2.4</span> Run set-similarity self-join </h4>\n<div class=\"outline-text-4\" id=\"text-3_2_4\">\n\n\n\n\n<pre class=\"example\">fuzzyjoin-hadoop$ hadoop jar target/fuzzyjoin-hadoop-0.0.2.jar \\\n  fuzzyjoin -conf src/main/resources/fuzzyjoin/dblp.quickstart.xml\n</pre>\n\n\n\n<p>\nThis will run the three stages required to do fuzzy joins: token\nordering (Tokens), kernel (RIDPairs), and record join\n(RecordPairs). It will use the basic alternative for each stage. In\ntotal it will run five Hadoop jobs (TokensBasic.phase1,\nTokenBasic.phase2, RIDPairsImproved, RecordPairsBasic.phase1,\nRecordPairsBasic.phase2).\n</p>\n<p>\nEach stage can be run separately using different alternatives by\nreplacing <code>fuzzyjoin</code> in the above command with the name of the stage\nand the alternative. For example, to run the one-phase token ordering\n(TokensImproved), type:\n</p>\n\n\n\n<pre class=\"example\">fuzzyjoin-hadoop$ hadoop jar target/fuzzyjoin-hadoop-0.0.2.jar \\\n  tokensimproved -conf src/main/resources/fuzzyjoin/dblp.quickstart.xml\n</pre>\n\n\n\n<p>\nTo get the list with all the available stages and alternatives, type:\n</p>\n\n\n\n<pre class=\"example\">fuzzyjoin-hadoop$ hadoop jar target/fuzzyjoin-hadoop-0.0.2.jar\n</pre>\n\n\n\n<p>\nTo see the results, type:\n</p>\n\n\n\n<pre class=\"example\">fuzzyjoin-hadoop$ hadoop fs -cat \"dblp-small/recordpairs-000/part-*\"\n</pre>\n\n\n\n<p>\nEach line contains a pair of records that fuzzy join and their\nsimilarity. The format of the line is <code>record 1;threshold;record2</code>,\nwhere <code>record1</code> and <code>record2</code> have the same format as described in\nstep 3.\n</p></div>\n</div>\n\n</div>\n\n<div id=\"outline-container-3_3\" class=\"outline-3\">\n<h3 id=\"sec-3_3\"><span class=\"section-number-3\">3.3</span> R-S join </h3>\n<div class=\"outline-text-3\" id=\"text-3_3\">\n\n<p>Here are the steps to perform a join between a small sample of the\nDBLP dataset and a small sample of the CITESEERX dataset. We use 100\nDBLP entries and 100 CITESEERX entries, title and authors as the join\nattributes, Jaccard similarity and a 0.5 similarity threshold.\n</p>\n</div>\n\n<div id=\"outline-container-3_3_1\" class=\"outline-4\">\n<h4 id=\"sec-3_3_1\"><span class=\"section-number-4\">3.3.1</span> Upload raw data </h4>\n<div class=\"outline-text-4\" id=\"text-3_3_1\">\n\n\n\n\n<pre class=\"example\">fuzzyjoin-hadoop$ hadoop fs -put \\\n  ../data/pub-small/raw.dblp-000 pub-small/raw.dblp-000\nfuzzyjoin-hadoop$ hadoop fs -put \\\n  ../data/pub-small/raw.csx-000 pub-small/raw.csx-000\n</pre>\n\n\n\n<p>\nThe <code>raw</code> directory contains two files, one for each dataset.\n</p></div>\n\n</div>\n\n<div id=\"outline-container-3_3_2\" class=\"outline-4\">\n<h4 id=\"sec-3_3_2\"><span class=\"section-number-4\">3.3.2</span> Generate records </h4>\n<div class=\"outline-text-4\" id=\"text-3_3_2\">\n\n\n\n\n<pre class=\"example\">fuzzyjoin-hadoop$ hadoop jar target/fuzzyjoin-hadoop-0.0.2.jar \\\n  recordbuild -conf src/main/resources/fuzzyjoin/pub.quickstart.xml \\\n  -Dfuzzyjoin.data.suffix.input=dblp\nfuzzyjoin-hadoop$ hadoop jar target/fuzzyjoin-hadoop-0.0.2.jar \\\n  recordbuild -conf src/main/resources/fuzzyjoin/pub.quickstart.xml \\\n  -Dfuzzyjoin.data.suffix.input=csx\n</pre>\n\n\n\n<p>\nEach job generates records for one of the datasets.\n</p></div>\n\n</div>\n\n<div id=\"outline-container-3_3_3\" class=\"outline-4\">\n<h4 id=\"sec-3_3_3\"><span class=\"section-number-4\">3.3.3</span> Balance records across nodes </h4>\n<div class=\"outline-text-4\" id=\"text-3_3_3\">\n\n\n\n\n<pre class=\"example\">fuzzyjoin-hadoop$ hadoop jar target/fuzzyjoin-hadoop-0.0.2.jar \\\n  recordbalance -conf src/main/resources/fuzzyjoin/pub.quickstart.xml \\\n  -Dfuzzyjoin.data.suffix.input=dblp\nfuzzyjoin-hadoop$ hadoop jar target/fuzzyjoin-hadoop-0.0.2.jar \\\n  recordbalance -conf src/main/resources/fuzzyjoin/pub.quickstart.xml \\\n  -Dfuzzyjoin.data.suffix.input=csx\n</pre>\n\n\n\n<p>\nTo skip this step, run:\n</p>\n\n\n\n<pre class=\"example\">fuzzyjoin-hadoop$ hadoop fs -mv \\\n  pub-small/recordsbulk.dblp-000 pub-small/records.dblp-000\nfuzzyjoin-hadoop$ hadoop fs -mv \\\n  pub-small/recordsbulk.csx-000 pub-small/records.csx-000\n</pre>\n\n\n</div>\n\n</div>\n\n<div id=\"outline-container-3_3_4\" class=\"outline-4\">\n<h4 id=\"sec-3_3_4\"><span class=\"section-number-4\">3.3.4</span> Run set-similarity join </h4>\n<div class=\"outline-text-4\" id=\"text-3_3_4\">\n\n\n\n\n<pre class=\"example\">fuzzyjoin-hadoop$ hadoop jar target/fuzzyjoin-hadoop-0.0.2.jar \\\n  fuzzyjoin -conf src/main/resources/fuzzyjoin/pub.quickstart.xml\n</pre>\n\n\n\n<p>\nTo see the results, type:\n</p>\n\n\n\n<pre class=\"example\">fuzzyjoin-hadoop$ hadoop fs -cat \"pub-small/recordpairs-000/part-*\"\n</pre>\n\n\n\n<p>\nEach line contains a pair of records that fuzzy join and their\nsimilarity. The format of the line is\n<code>record-DBLP;threshold;record-CITESEERX</code>, where <code>record-DBLP</code> and\n<code>record-CITESEERX</code> have the same format as described in the self-join\ncase.\n</p></div>\n</div>\n</div>\n\n</div>\n\n<div id=\"outline-container-4\" class=\"outline-2\">\n<h2 id=\"sec-4\"><span class=\"section-number-2\">4</span> Configuration </h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n\n<p>The XML files provided with the <code>-conf</code> argument above contain various\nconfiguration parameters. Using the configuration parameters, a user\ncan specify the location of the data, the similarity function and\nthreshold, the join attributes and other settings. Moreover the user\ncan specify additional parameters in the command line using the <code>-D</code>\noption.\n</p>\n<p>\nThe default parameters and more details about each parameter are in:\n</p>\n\n\n\n<pre class=\"example\">fuzzyjoin-hadoop/src/main/resources/fuzzyjoin/default.xml \n</pre>\n\n\n\n<p>\nAll these parameters and other constants are defined in:\n</p>\n\n\n\n<pre class=\"example\">fuzzyjoin-core/src/main/java/edu/uci/ics/fuzzyjoin/FuzzyJoinConfig.java\nfuzzyjoin-hadoop/src/main/java/edu/uci/ics/fuzzyjoin/hadoop/FuzzyJoinDriver.java\n</pre>\n\n\n</div>\n\n</div>\n\n<div id=\"outline-container-5\" class=\"outline-2\">\n<h2 id=\"sec-5\"><span class=\"section-number-2\">5</span> Directory Structure and Tasks </h2>\n<div class=\"outline-text-2\" id=\"text-5\">\n\n<p>The following directory structure is used for self-joins:\n</p>\n\n\n\n<pre class=\"example\">|\n|- raw-000\n|- recordsbulk-000\n|- recordsbulk-001\n|- ...\n|- records-000\n|- records-001\n|- ...\n|- tokens-000\n|- ...\n|- tokens.phase1-000\n|- ...\n|- ridpairs-000\n|- ...\n|- recordpairs-000\n|- ...\n|- recordpairs.phase1-000\n|- ...\n</pre>\n\n\n\n<p>\nThe <code>raw-000</code> directory contains the original files, one record per\nline. The <code>recordsbulk</code> directory contains the original data where\neach record starts with an integer RID. The number after the directory\nname represents the copy number (<code>000</code> is the original data, <code>001</code> is\nthe first copy, etc.). The <code>records</code> directory contains the same data\nas the <code>recordsbulk</code> directory except that multiple copies are\naggregated and the data is balanced across nodes. The number after the\ndirectory name represents how many copies are aggregated (<code>000</code> is of\nonly one copy: <code>recordsbulk-000</code>, <code>001</code> is for two copies:\n<code>recordsbulk-000</code> and <code>recordsbulk-001</code>, etc.). So <code>records-n</code>\nrepresents an increased dataset, where <code>n</code> denotes how many times the\ndataset was increased. For the rest of the directories the number\nafter the directory name has the same meaning. The <code>tokens</code> directory\ncontains the list of tokens. The <code>ridpairs</code> directory contains the RID\npairs that fuzzy-join. The <code>recordpairs</code> directory contains the record\npairs that fuzzy-join. The <code>phase1</code> prefix that appears for some\ndirectories represents the output of the first MapReduce job for the\ntasks with two MapReduce jobs (i.e., <code>tokensbasic</code> and\n<code>recordpairsbasic</code>).\n</p>\n<p>\nBellow is a table with each task input and output directories:\n</p>\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n<caption></caption>\n<colgroup><col class=\"left\" /><col class=\"left\" /><col class=\"left\" />\n</colgroup>\n<thead>\n<tr><th scope=\"col\" class=\"left\">Task</th><th scope=\"col\" class=\"left\">Input</th><th scope=\"col\" class=\"left\">Output</th></tr>\n</thead>\n<tbody>\n<tr><td class=\"left\">recordbuild</td><td class=\"left\">raw</td><td class=\"left\">recordsbulk</td></tr>\n<tr><td class=\"left\">recordbalance</td><td class=\"left\">recordsbulk</td><td class=\"left\">records</td></tr>\n<tr><td class=\"left\">tokens basic/improved</td><td class=\"left\">records</td><td class=\"left\">tokens</td></tr>\n<tr><td class=\"left\">ridpairs improved/ppjoin</td><td class=\"left\">records, tokens</td><td class=\"left\">ridpairs</td></tr>\n<tr><td class=\"left\">recordpairs basic/improved</td><td class=\"left\">records, ridpairs</td><td class=\"left\">recordpairs</td></tr>\n<tr><td class=\"left\">recordgenerate</td><td class=\"left\">recordsbulk-000, tokens-000</td><td class=\"left\">recordsbulk</td></tr>\n</tbody>\n</table>\n\n\n<p>\nFor R-S joins, the first few directories also carry the name of the\ndataset (name of the R dataset or of the S dataset) in order to\ndifferentiate between them:\n</p>\n\n\n\n<pre class=\"example\">|\n|- raw.DATASET_R-000\n|- raw.DATASET_S-000\n|- recordsbulk.DATASET_R-000\n|- recordsbulk.DATASET_R-001\n|- ...\n|- recordsbulk.DATASET_S-000\n|- recordsbulk.DATASET_S-001\n|- ...\n|- records.DATASET_R-000\n|- records.DATASET_R-001\n|- ...\n|- records.DATASET_S-000\n|- records.DATASET_S-001\n|- ...\n</pre>\n\n\n\n<p>\nwhere <code>DATASET_R</code> and <code>DATASET_S</code> are the names of the two\ndatasets. In our R-S join example we used <code>dblp</code> for <code>DATASET_R</code> and\n<code>csx</code> for <code>DATASET_S</code>.\n</p>\n</div>\n\n</div>\n\n<div id=\"outline-container-6\" class=\"outline-2\">\n<h2 id=\"sec-6\"><span class=\"section-number-2\">6</span> Dataset </h2>\n<div class=\"outline-text-2\" id=\"text-6\">\n\n<p>By default the dataset is assumed to have one record per line. The\nfields of each record are delimited by \"<code>:</code>\". The first filed of each\nrecord is an integer RID. This settings can be changed in:\n</p>\n\n\n\n<pre class=\"example\">fuzzyjoin-core/src/main/java/edu/uci/ics/fuzzyjoin/FuzzyJoinConfig.java\n</pre>\n\n\n\n<p>\nThe dataset can be increased using the <code>recordgenerate</code> task:\n</p>\n\n\n\n<pre class=\"example\">fuzzyjoin-hadoop$ hadoop jar target/fuzzyjoin-hadoop-0.0.2.jar \\\n  recordgenerate -conf src/main/resources/fuzzyjoin/dblp.quickstart.xml \\\n  -Dfuzzyjoin.data.copy=10 \\\n  -Dfuzzyjoin.data.norecords=100\n</pre>\n\n\n\n<p>\nThis stats <code>9</code> MapReduce jobs, each of them generating a new copy of\nthe dataset. The <code>fuzzyjoin.data.copy</code> parameter specifies the number\nof times the dataset should be increased, while the\n<code>fuzzyjoin.data.norecords</code> parameter specifies the number of records\nin the <b>original</b> dataset (it is used to generate unique and\nincreasing RIDs). All the following tasks also need to have the same\nvalue for the <code>fuzzyjoin.data.copy</code> parameter in order to use the\nincreased dataset. This task can only be ran after running\n<code>recordbuild</code> and <code>tokensbasic</code> or <code>tokensimproved</code> on the original\ndataset. After this task, the <code>recordbuild</code> task needs to be ran (it\ncannot be skipped on the increased dataset):\n</p>\n\n\n\n<pre class=\"example\">fuzzyjoin-hadoop$ hadoop jar target/fuzzyjoin-hadoop-0.0.2.jar \\\n  recordbalance -conf src/main/resources/fuzzyjoin/dblp.quickstart.xml \\\n  -Dfuzzyjoin.data.copy=10\nfuzzyjoin-hadoop$ hadoop jar target/fuzzyjoin-hadoop-0.0.2.jar \\\n  fuzzyjoin -conf src/main/resources/fuzzyjoin/dblp.quickstart.xml \\\n  -Dfuzzyjoin.data.copy=10\n</pre>\n\n\n</div>\n\n</div>\n\n<div id=\"outline-container-7\" class=\"outline-2\">\n<h2 id=\"sec-7\"><span class=\"section-number-2\">7</span> Source Code Overview </h2>\n<div class=\"outline-text-2\" id=\"text-7\">\n\n<p>The source code is divided into two modules:\n</p><ul>\n<li>\n<code>fuzzyjoin-core</code>: general fuzzy-join code in\n<code>fuzzyjoin-core/src/main/java</code>\n<ul>\n<li>\n<code>edu.uci.ics.fuzzyjoin</code>: main memory fuzzy-join\n</li>\n<li>\n<code>edu.uci.ics.fuzzyjoin.similarity</code>: similarity functions and\nfilters\n</li>\n<li>\n<code>edu.uci.ics.fuzzyjoin.invertedlist</code>: inverted lists index\n</li>\n<li>\n<code>edu.uci.ics.fuzzyjoin.recordgroup</code>: alternatives for grouping records\n</li>\n<li>\n<code>edu.uci.ics.fuzzyjoin.tokenizer</code>: tokenizes\n</li>\n<li>\n<code>edu.uci.ics.fuzzyjoin.tokenorder</code>: alternatives for ordering tokens\n</li>\n</ul>\n</li>\n<li>\n<code>fuzzyjoin-hadoop</code>: Hadoop specific fuzzy-join code in\n<code>fuzzyjoin-hadoop/src/main/java</code>\n<ul>\n<li>\n<code>edu.uci.ics.fuzzyjoin.hadoop</code>: main program\n</li>\n<li>\n<code>edu.uci.ics.fuzzyjoin.hadoop.datagen</code>: classes for building\nrecords and increasing dataset size\n</li>\n<li>\n<code>edu.uci.ics.fuzzyjoin.hadoop.recordpairs</code>: Stage 3\n</li>\n<li>\n<code>edu.uci.ics.fuzzyjoin.hadoop.ridpairs</code>: Stage 2\n</li>\n<li>\n<code>edu.uci.ics.fuzzyjoin.hadoop.ridrecordpairs</code>: alternative to\nStage 2 and 3 where records are not projected\n</li>\n<li>\n<code>edu.uci.ics.fuzzyjoin.hadoop.tokens</code>: Stage 1\n</li>\n</ul>\n</li>\n</ul>\n\n</div>\n</div>\n<div id=\"postamble\">\n<p class=\"date\"> Date: 2011-04-12 09:58:14 PDT</p>\n<p class=\"creator\">HTML generated by org-mode 7.4 in emacs 24</p>\n</div>\n</div>\n</body>\n</html>\n", "id": 1339.0}