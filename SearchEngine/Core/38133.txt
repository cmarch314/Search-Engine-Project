{"text": "Navigation Up Table of Contents Bibliography Index Title Page Chapter 1Introduction 1 1 Overview CGAL the Computational Geometry Algorithms Library was founded and initially developed by a consortium consisting of ETH Z rich Switzerland Freie Universit t Berlin Germany INRIA Sophia Antipolis France Martin Luther Universit t Halle Wittenberg Germany Max Planck Institut f r Informatik Saarbr cken Germany RISC Linz Austria Tel Aviv University Israel and Utrecht University The Netherlands CGAL has become an Open Source Project with the release 3 in November 2 3 New developers and sites are welcome to join the project and have done so already You can find more information about the project on the CGAL home page The CGAL Editorial Board consists of Andreas Fabri GEOMETRY FACTORY Efi Fogel Tel Aviv University Bernd G rtner ETH Z rich Michael Hoffmann ETH Z rich Menelaos Karavelas University of Notre Dame Lutz Kettner Max Planck Institut f r Informatik Sylvain Pion INRIA Sophia Antipolis Monique Teillaud INRIA Sophia Antipolis Remco Veltkamp Utrecht University Mariette Yvinec INRIA Sophia Antipolis CGAL is written in C and consists of three major parts The first part is the kernel which consists of constant size non modifiable geometric primitive objects and operations on these objects The objects are represented both as stand alone classes that are parameterized by a representation class which specifies the underlying number types used for calculations and as members of the kernel classes which allows for more flexibility and adaptability of the kernel The second part is a collection of basic geometric data structures and algorithms which are parameterized by traits classes that define the interface between the data structure or algorithm and the primitives they use In many cases the kernel classes provided in CGAL can be used as traits classes for these data structures and algorithms The collection of basic geometric algorithms and data structures currently includes polygons half edge data structures polyhedral surfaces topological maps planar maps arrangements of curves triangulations convex hulls alpha shapes optimisation algorithms dynamic point sets for geometric queries and multidimensional search trees The third part of the library consists of non geometric support facilities such as support for number types STL extensions for CGAL handles circulators protected access to internal representations geometric object generators timers I O stream operators and other stream support including PostScript colors windows and visualization tools GeoWin Geomview and a Qt widget for 2D CGAL objects Additional documents accompanying the CGAL distribution are the Installation Guide and The Use of STL and STL Extensions in CGAL which gives a manual style introduction to STL constructs such as iterators and containers as well an extension called circulator used in many places in CGAL We also recommend the standard text book by Austern Aus98 for the STL and its notion of concepts and models Other resources for CGAL are the tutorials at http www cgal org Tutorials and the user support page at www cgal org advanced Some functionality is considered more advanced Such functionality is described in sections such as this one that are bounded by horizontal brackets advanced 1 2 Namespace CGAL All names introduced by CGAL especially those documented in these manuals are in a namespace called CGAL which is in global scope A user can either qualify names from CGAL by adding CGAL e g CGAL Point 2 CGAL Homogeneous int make a single name from CGAL visible in a scope via a using statement e g using CGAL Cartesian and then use this name unqualified in this scope or even make all names from namespace CGAL visible in a scope with using namespace CGAL The latter however is likely to give raise to name conflicts and is therefore not recommended 1 3 Inclusion Order of Header files Not all compilers fully support standard header names CGAL provides workarounds for these problems in CGAL basic h Consequently as a golden rule you should always inlcude CGAL basic h first in your programs or CGAL Cartesian h or CGAL Homogeneous h since they include CGAL basic h first 1 4 Acknowledgement This work was partially supported by the ESPRIT IV Long Term Research Projects No 21957 CGAL and No 28155 GALIA and by the IST Programme of the EU as a Shared cost RTD FET Open Project No IST 2 26473 ECG Effective Computational Geometry for Curves and Surfaces Next chapter Checks Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Introduction/Chapter_main.html", "title": "introduction", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Introduction/main.tex' -->\n<html> <head>  \n<title>Introduction</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_main.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n<a name=\"Chapter_1\"></a>\n  \n<h1>Chapter 1<BR>Introduction</h1>\n<P>\n\n<a name=\"Section_1\"></a>\n        \n<h2>1.1&nbsp;&nbsp;&nbsp;Overview</h2>\n<P>\n\nC<SMALL>GAL</SMALL>, the <I>Computational Geometry Algorithms Library</I>, \nwas founded and initially developed by a consortium consisting of\n<A HREF=\"http://www.inf.ethz.ch/\" TARGET=\"_top\">ETH Z&uuml;rich</A> (Switzerland), \n<A HREF=\"http://www.inf.fu-berlin.de/\" TARGET=\"_top\">Freie Universit&auml;t Berlin</A> (Germany), \n<A HREF=\"http://www.inria.fr/recherche/equipes/geometrica.en.html\" TARGET=\"_top\">I<SMALL>NRIA</SMALL> \nSophia-Antipolis</A> (France),\n<A HREF=\"http://www.informatik.uni-halle.de/\" TARGET=\"_top\">Martin-Luther-Universit&auml;t \nHalle-Wittenberg</A> (Germany),\n<A HREF=\"http://www.mpi-sb.mpg.de/\" TARGET=\"_top\">Max-Planck Institut f&uuml;r Informatik</A>,\nSaarbr&uuml;cken (Germany),\n<A HREF=\"http://info.risc.uni-linz.ac.at/\" TARGET=\"_top\">R<SMALL>ISC</SMALL></A> Linz (Austria)\n<A HREF=\"http://www.cs.tau.ac.il/\" TARGET=\"_top\">Tel-Aviv University</A> (Israel), and\n<A HREF=\"http://www.cs.uu.nl/\" TARGET=\"_top\">Utrecht University</A> (The Netherlands). \nC<SMALL>GAL</SMALL> has become an Open Source Project with the release 3.0 in\nNovember 2003. New developers and sites are welcome to join the\nproject and have done so already. \nYou can find more information about the project on the \n<A HREF=\"http://www.cgal.org\" TARGET=\"_top\">C<SMALL>GAL</SMALL> home page</A>\n.\n<P>\n\nThe C<SMALL>GAL</SMALL> Editorial Board consists of:\n<P>\n\nAndreas Fabri (G<SMALL>EOMETRY</SMALL> F<SMALL>ACTORY</SMALL>)<BR>\n\nEfi Fogel (Tel-Aviv University)<BR>\n\nBernd G&auml;rtner (ETH Z&uuml;rich)<BR>\n\nMichael Hoffmann (ETH Z&uuml;rich)<BR>\n\nMenelaos Karavelas (University of Notre Dame)<BR>\n\nLutz Kettner (\n<!-- REMOVE_LINKS_BEGIN -->\nMax-Planck Institut f&uuml;r Informatik\n<!-- REMOVE_LINKS_END -->\n)<BR>\n\nSylvain Pion (I<SMALL>NRIA</SMALL> Sophia-Antipolis)<BR>\n\nMonique Teillaud (I<SMALL>NRIA</SMALL> Sophia-Antipolis)<BR>\n\nRemco Veltkamp (Utrecht University)<BR>\n\nMariette Yvinec (I<SMALL>NRIA</SMALL> Sophia-Antipolis)\n<P>\n\nC<SMALL>GAL</SMALL> is written in C++ and consists of three major parts.\n<P>\n\nThe first part is the kernel, which consists of constant-size non-modifiable \ngeometric primitive objects and operations on these objects. \nThe objects are represented both as stand-alone classes that are\nparameterized by a representation class, which specifies\nthe underlying number types used for calculations and as members of the\nkernel classes, which allows for more flexibility and adaptability of the \nkernel.\n<P>\n\nThe second part is a collection of basic geometric data structures and\nalgorithms, which are parameterized by traits classes that define the \ninterface between the data structure or algorithm and the primitives they use.\nIn many cases, the kernel classes provided in C<SMALL>GAL</SMALL> can be used as traits\nclasses for these data structures and algorithms.\nThe collection of basic geometric algorithms and data structures\ncurrently includes polygons, half-edge data structures, polyhedral surfaces, \ntopological maps, planar maps, arrangements of curves, triangulations, \nconvex hulls, alpha shapes, optimisation algorithms, dynamic\npoint sets for geometric queries, and multidimensional search trees.\n<P>\n\nThe third part of the library consists of non-geometric support\nfacilities, such as support for number types, STL extensions for\nC<SMALL>GAL</SMALL>, handles, circulators, protected access to internal\nrepresentations, geometric object generators, timers, I/O stream\noperators and other stream support including PostScript, colors,\nwindows, and visualization tools GeoWin, Geomview and a Qt widget for\n2D C<SMALL>GAL</SMALL> objects.\n<P>\n\nAdditional documents accompanying the C<SMALL>GAL</SMALL> distribution are the\n`Installation Guide' and `The Use of STL and STL Extensions in\nC<SMALL>GAL</SMALL>', which gives a manual style introduction to STL constructs\nsuch as iterators and containers, as well an extension, called\ncirculator, used in many places in C<SMALL>GAL</SMALL>. We also recommend the\nstandard text book by Austern&nbsp;[<A HREF=\"../biblio.html#Biblio_cgal:a-gps-98\">Aus98</A>] for the STL and\nits notion of <I>concepts</I> and <I>models</I>.\n<P>\n\nOther resources for C<SMALL>GAL</SMALL> are the tutorials at\n<A HREF=\"http://www.cgal.org/Tutorials/\"><TT>http://www.cgal.org/Tutorials/</TT></A> and the user support page at\n<A HREF=\"www.cgal.org\"><TT>www.cgal.org</TT></A>.\n<P>\n\n<BR>\n\n<div class=\"AdvancedBlock\">\n  <table><tr><td valign=\"top\">\n  <img border=\"0\" src=\"cc_advanced_begin1.gif\" alt=\"begin of advanced section\">\n  </td><td valign=\"top\">\n  <em class=\"AdvancedBlockLabel\">&nbsp;advanced&nbsp;</em>\n  </td><td valign=\"top\">\n  <img border=\"0\" src=\"cc_advanced_begin2.gif\" alt=\"begin of advanced section\">\n  </td></tr></table>\n\nSome functionality is considered more advanced.\nSuch functionality is described in sections such as this one that are bounded \nby horizontal brackets.\n\n<table><tr><td valign=\"bottom\">\n  <img border=\"0\" src=\"cc_advanced_end1.gif\" alt=\"end of advanced section\">\n  </td><td valign=\"bottom\">\n  <em class=\"AdvancedBlockLabel\">&nbsp;advanced&nbsp;</em>\n  </td><td valign=\"bottom\">\n  <img border=\"0\" src=\"cc_advanced_end2.gif\" alt=\"end of advanced section\">\n  </td></tr></table></div>\n<P>\n\n<a name=\"Section_2\"></a>\n        \n<h2>1.2&nbsp;&nbsp;&nbsp;Namespace <TT>CGAL::</TT></h2>\n<P>\n\nAll names introduced by C<SMALL>GAL</SMALL>, especially those documented in these\nmanuals, are in a namespace called <I>CGAL</I>, which is in global\nscope. A user can either qualify names from C<SMALL>GAL</SMALL> by adding\n<I>CGAL::</I>, e.g., <I><A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_51\">CGAL::Point_2</A>&lt; <A HREF=\"../Kernel_23_ref/Class_Homogeneous.html#Cross_link_anchor_17\">CGAL::Homogeneous</A>&lt; int&gt; &gt;</I>,\nmake a single name from C<SMALL>GAL</SMALL> visible in a scope via a <I>using</I>\nstatement, e.g., <I>using <A HREF=\"../Kernel_23_ref/Class_Cartesian.html#Cross_link_anchor_5\">CGAL::Cartesian</A>;</I>, and then use this name\nunqualified in this scope, or even make all names from namespace\n<I>CGAL</I> visible in a scope with <I>using namespace CGAL;</I>. The\nlatter, however, is likely to give raise to name conflicts and is\ntherefore not recommended.\n<P>\n\n<a name=\"Section_3\"></a>\n        \n<h2>1.3&nbsp;&nbsp;&nbsp;Inclusion Order of Header files</h2>\n\nNot all compilers fully support standard header names. C<SMALL>GAL</SMALL> provides \nworkarounds for these problems in <I>CGAL/basic.h</I>. Consequently, as a \ngolden rule, you should always inlcude <I>CGAL/basic.h</I> first in your \nprograms (or <I>CGAL/<A HREF=\"../Kernel_23_ref/Class_Cartesian.html#Cross_link_anchor_6\">Cartesian</A>.h</I>, or <I>CGAL/<A HREF=\"../Kernel_23_ref/Class_Homogeneous.html#Cross_link_anchor_18\">Homogeneous</A>.h</I>, since they \ninclude <I>CGAL/basic.h</I> first).\n<P>\n\n<a name=\"Section_4\"></a>\n        \n<h2>1.4&nbsp;&nbsp;&nbsp;Acknowledgement</h2>\n<P>\n\nThis work was partially supported by the ESPRIT IV Long Term Research\nProjects No.&nbsp;21957 (CGAL) and No.&nbsp;28155 (GALIA), and by the IST\nProgramme of the EU as a Shared-cost RTD (FET Open) Project No\nIST-2000-26473 (ECG - Effective Computational Geometry for Curves and\nSurfaces).\n<P>\n\n<div class=\"NavNext\"><hr> Next chapter: <a href=\"Chapter_checks.html\">Checks</a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_1!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 38133.0}