{"text": "View Javadoc 1 2 Created on Apr 9 2 5 3 4 5 package edu uci isr impromptu security 6 7 import java io ByteArrayInputStream 8 import java security Principal 9 1 import javax xml parsers DocumentBuilder 11 import javax xml parsers DocumentBuilderFactory 12 13 import org mortbay http HashUserRealm 14 import org mortbay http HttpRequest 15 import org mortbay http UserRealm 16 import org mortbay util Password 17 import org w3c dom Document 18 import org w3c dom Element 19 import org w3c dom NodeList 2 21 import edu uci isr impromptu common Utils 22 23 24 Builds a jetty user realm based on the configuration stored in the slide 25 Domain xml file 26 27 author Jie Ren 28 29 public class SlideUserRealm implements UserRealm 3 31 32 a role that no user can be in to deni access of certain methods 33 if an empty role list is given in web xml it essentially denies EVERYTHING 34 35 public final static String ROLE NOBODY Role Nobody 36 37 38 The attribute name of the Jetty user realm for Slide 39 4 public static final String ATTRIBUTE NAME edu uci isr impromptu security SlideUserRealm 41 42 43 The realm name of the Jetty authentication realm 44 45 public static final String REALM NAME Impromptu Repository 46 47 48 the proxied realm backing this one 49 5 private HashUserRealm proxyRealm 51 52 53 Build a new Realm from the slide config 54 55 param name the name of the realm 56 param config where the config is 57 58 public SlideUserRealm final String name final String config 59 6 try 61 62 proxyRealm new HashUserRealm name 63 loadFromSlideXML config 64 65 catch Exception e 66 67 Utils handleException e 68 69 7 71 72 Load up a jetty user realm based on the config from slide s Domain xml 73 74 param config the configuration file to look at 75 76 public void loadFromSlideXML final String config 77 78 try 79 8 String sObjectNode objectnode 81 String sClassname classname 82 String sUri uri 83 String sSubjectNode org apache slide structure SubjectNode 84 String sProperty property 85 String usersPrefix users 86 String rolesPrefix roles 87 88 DocumentBuilderFactory factory DocumentBuilderFactory newInstance 89 DocumentBuilder builder factory newDocumentBuilder 9 Document document builder parse config 91 NodeList nList document getElementsByTagName sObjectNode 92 93 DocumentBuilderFactory smallFactory DocumentBuilderFactory 94 newInstance 95 96 smallFactory setValidating false 97 smallFactory setNamespaceAware false 98 99 DocumentBuilder smallBuilder smallFactory newDocumentBuilder 1 1 1 for int i i nList getLength i 1 2 1 3 Element n Element nList item i 1 4 1 5 if n hasAttribute sClassname n hasAttribute sUri 1 6 1 7 String cn n getAttribute sClassname 1 8 String urin n getAttribute sUri 1 9 11 if cn equals sSubjectNode 111 112 if urin startsWith usersPrefix 113 114 String username urin substring usersPrefix length 115 String password n getElementsByTagName sProperty 116 item getLastChild 117 getNodeValue 118 119 inject username and password into HashUserRealm 12 proxyRealm put username password 121 122 123 if urin startsWith rolesPrefix 124 125 String rolename urin substring rolesPrefix length 126 String ss n getElementsByTagName sProperty item 127 getLastChild getNodeValue 128 129 ss dummy ss dummy 13 131 make a valid XML doc 132 Document small smallBuilder parse 133 new ByteArrayInputStream ss getBytes 134 NodeList members small getElementsByTagName D href 135 136 for int j j members getLength j 137 138 String member members item j getLastChild 139 getNodeValue 14 141 member member substring usersPrefix length 142 143 inject username and role into HashUserRealm 144 proxyRealm addUserToRole member rolename 145 146 147 148 149 15 151 catch Exception e 152 153 Utils handleException e 154 155 156 157 158 Add a new user 159 16 param userName the name of the new user 161 param password the password of the new user 162 param roleName the role of the new user 163 164 public void addUser String userName String password String roleName 165 proxyRealm put userName Password obfuscate password 166 proxyRealm addUserToRole userName roleName 167 168 169 17 Authenticate a user 171 172 param username the name of the user 173 param credentials the credentials of the user 174 param request the request providing user and credentials 175 176 return see interface 177 178 public Principal authenticate final String username 179 final Object credentials 18 final HttpRequest request 181 182 Normal authentication 183 Principal p proxyRealm authenticate username credentials request 184 return p 185 186 187 188 Get the name of the realm 189 19 return The realm name 191 192 public String getName 193 194 return proxyRealm getName 195 196 197 198 Reauthenticate an authenticated principal 199 param p the principal to reauthenticate 2 2 1 return true for successful reauthentication false otherwise 2 2 2 3 public boolean reauthenticate Principal p 2 4 2 5 return proxyRealm reauthenticate p 2 6 2 7 2 8 2 9 Assign a role to a user 21 211 param user the user 212 param role the user s new role Cannot be ROLE NOBODY 213 214 public void addUserToRole final String user final String role 215 216 if role equals ROLE NOBODY 217 proxyRealm addUserToRole user role 218 219 22 221 Check if a user is in a role 222 223 param user The user which must be from this realm 224 param roleName the rolename to check 225 return True if the user can act in the role If the role is ROLE NOBODY 226 the method always returns false 227 228 public synchronized boolean isUserInRole Principal user String roleName 229 23 if roleName equals ROLE NOBODY 231 return false 232 return proxyRealm isUserInRole user roleName 233 234 235 236 see interface 237 238 param user see interface 239 24 return see interface 241 242 public Principal popRole final Principal user 243 244 return proxyRealm popRole user 245 246 247 248 see interface 249 25 param user see interface 251 param role see interface 252 253 return see interface 254 255 public Principal pushRole final Principal user final String role 256 257 Principal p null 258 if role equals ROLE NOBODY 259 p proxyRealm pushRole user role 26 261 return p 262 263 264 265 Get a principal associated with a name 266 param username the name of a user 267 268 return the associated principal 269 27 public Principal getPrincipal String username 271 272 return proxyRealm getPrincipal username 273 274 275 276 disassociate an authenticated principal 277 278 param user the principal to disassociate 279 28 public void disassociate final Principal user 281 282 proxyRealm disassociate user 283 284 285 286 Logout a principal 287 288 param user the user to logout 289 29 public void logout final Principal user 291 292 proxyRealm logout user 293 294 295 296 Associate a key with a value 297 298 param key the key 299 param val the value 3 3 1 return the old value assoicated with the key 3 2 3 3 public Object put final Object key final Object val 3 4 3 5 return proxyRealm put key val 3 6 3 7 3 8 3 9 Convert to a string 31 311 return the string representation 312 313 public String toString 314 315 return proxyRealm toString 316 317 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.30/xref/edu/uci/isr/impromptu/security/SlideUserRealm.html", "title": "slideuserrealm xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>SlideUserRealm xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../../../../stylesheet.css\" />\n</head>\n<body>\n<div id=\"overview\"><a href=\"../../../../../../apidocs/edu/uci/isr/impromptu/security/SlideUserRealm.html\">View Javadoc</a></div><pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <em class=\"comment\">/*</em>\n<a name=\"2\" href=\"#2\">2</a>   <em class=\"comment\"> * Created on Apr 9, 2005</em>\n<a name=\"3\" href=\"#3\">3</a>   <em class=\"comment\"> *</em>\n<a name=\"4\" href=\"#4\">4</a>   <em class=\"comment\"> */</em>\n<a name=\"5\" href=\"#5\">5</a>   <strong>package</strong> <a href=\"../../../../../edu/uci/isr/impromptu/security/package-summary.html\">edu.uci.isr.impromptu.security</a>;\n<a name=\"6\" href=\"#6\">6</a>   \n<a name=\"7\" href=\"#7\">7</a>   <strong>import</strong> java.io.ByteArrayInputStream;\n<a name=\"8\" href=\"#8\">8</a>   <strong>import</strong> java.security.Principal;\n<a name=\"9\" href=\"#9\">9</a>   \n<a name=\"10\" href=\"#10\">10</a>  <strong>import</strong> javax.xml.parsers.DocumentBuilder;\n<a name=\"11\" href=\"#11\">11</a>  <strong>import</strong> javax.xml.parsers.DocumentBuilderFactory;\n<a name=\"12\" href=\"#12\">12</a>  \n<a name=\"13\" href=\"#13\">13</a>  <strong>import</strong> org.mortbay.http.HashUserRealm;\n<a name=\"14\" href=\"#14\">14</a>  <strong>import</strong> org.mortbay.http.HttpRequest;\n<a name=\"15\" href=\"#15\">15</a>  <strong>import</strong> org.mortbay.http.UserRealm;\n<a name=\"16\" href=\"#16\">16</a>  <strong>import</strong> org.mortbay.util.Password;\n<a name=\"17\" href=\"#17\">17</a>  <strong>import</strong> org.w3c.dom.Document;\n<a name=\"18\" href=\"#18\">18</a>  <strong>import</strong> org.w3c.dom.Element;\n<a name=\"19\" href=\"#19\">19</a>  <strong>import</strong> org.w3c.dom.NodeList;\n<a name=\"20\" href=\"#20\">20</a>  \n<a name=\"21\" href=\"#21\">21</a>  <strong>import</strong> edu.uci.isr.impromptu.common.Utils;\n<a name=\"22\" href=\"#22\">22</a>  \n<a name=\"23\" href=\"#23\">23</a>  <em>/**<em>*</em></em>\n<a name=\"24\" href=\"#24\">24</a>  <em> * Builds a jetty user realm based on the configuration stored in the slide</em>\n<a name=\"25\" href=\"#25\">25</a>  <em> * Domain.xml file</em>\n<a name=\"26\" href=\"#26\">26</a>  <em> *</em>\n<a name=\"27\" href=\"#27\">27</a>  <em> * @author Jie Ren</em>\n<a name=\"28\" href=\"#28\">28</a>  <em> */</em>\n<a name=\"29\" href=\"#29\">29</a>  <strong>public</strong> <strong>class</strong> <a href=\"../../../../../edu/uci/isr/impromptu/security/SlideUserRealm.html\">SlideUserRealm</a> implements UserRealm\n<a name=\"30\" href=\"#30\">30</a>  {\n<a name=\"31\" href=\"#31\">31</a>      <em>/**<em>* </em></em>\n<a name=\"32\" href=\"#32\">32</a>  <em>     * a role that no user can be in, to deni access of certain methods.</em>\n<a name=\"33\" href=\"#33\">33</a>  <em>     * \t\tif an empty role list is given in web.xml, it essentially denies EVERYTHING</em>\n<a name=\"34\" href=\"#34\">34</a>  <em>     */</em>\n<a name=\"35\" href=\"#35\">35</a>      <strong>public</strong> <strong>final</strong> <strong>static</strong> String\tROLE_NOBODY = <span class=\"string\">\"Role_Nobody\"</span>;\n<a name=\"36\" href=\"#36\">36</a>  \n<a name=\"37\" href=\"#37\">37</a>      <em>/**<em>*</em></em>\n<a name=\"38\" href=\"#38\">38</a>  <em>     * The attribute name of the Jetty user realm for Slide</em>\n<a name=\"39\" href=\"#39\">39</a>  <em>     */</em>\n<a name=\"40\" href=\"#40\">40</a>      <strong>public</strong> <strong>static</strong> <strong>final</strong> String ATTRIBUTE_NAME = <span class=\"string\">\"edu.uci.isr.impromptu.security.SlideUserRealm\"</span>;\n<a name=\"41\" href=\"#41\">41</a>  \n<a name=\"42\" href=\"#42\">42</a>      <em>/**<em>*</em></em>\n<a name=\"43\" href=\"#43\">43</a>  <em>     * The realm name of the Jetty authentication realm</em>\n<a name=\"44\" href=\"#44\">44</a>  <em>     */</em>\n<a name=\"45\" href=\"#45\">45</a>      <strong>public</strong> <strong>static</strong> <strong>final</strong> String REALM_NAME = <span class=\"string\">\"Impromptu Repository\"</span>;    \n<a name=\"46\" href=\"#46\">46</a>  \n<a name=\"47\" href=\"#47\">47</a>      <em>/**<em>* </em></em>\n<a name=\"48\" href=\"#48\">48</a>  <em>     * the proxied realm backing this one </em>\n<a name=\"49\" href=\"#49\">49</a>  <em>     */</em>\n<a name=\"50\" href=\"#50\">50</a>      <strong>private</strong> HashUserRealm proxyRealm;\n<a name=\"51\" href=\"#51\">51</a>  \n<a name=\"52\" href=\"#52\">52</a>      <em>/**<em>*</em></em>\n<a name=\"53\" href=\"#53\">53</a>  <em>     * Build a new Realm from the slide config</em>\n<a name=\"54\" href=\"#54\">54</a>  <em>     *</em>\n<a name=\"55\" href=\"#55\">55</a>  <em>     * @param name the name of the realm</em>\n<a name=\"56\" href=\"#56\">56</a>  <em>     * @param config where the config is</em>\n<a name=\"57\" href=\"#57\">57</a>  <em>     */</em>\n<a name=\"58\" href=\"#58\">58</a>      <strong>public</strong> <a href=\"../../../../../edu/uci/isr/impromptu/security/SlideUserRealm.html\">SlideUserRealm</a>(<strong>final</strong> String name, <strong>final</strong> String config)\n<a name=\"59\" href=\"#59\">59</a>      {\n<a name=\"60\" href=\"#60\">60</a>          <strong>try</strong>\n<a name=\"61\" href=\"#61\">61</a>          {\n<a name=\"62\" href=\"#62\">62</a>              proxyRealm = <strong>new</strong> HashUserRealm(name);\n<a name=\"63\" href=\"#63\">63</a>              loadFromSlideXML(config);\n<a name=\"64\" href=\"#64\">64</a>          }\n<a name=\"65\" href=\"#65\">65</a>          <strong>catch</strong>(Exception e)\n<a name=\"66\" href=\"#66\">66</a>          {\n<a name=\"67\" href=\"#67\">67</a>              Utils.handleException(e);\n<a name=\"68\" href=\"#68\">68</a>          }\n<a name=\"69\" href=\"#69\">69</a>      }\n<a name=\"70\" href=\"#70\">70</a>  \n<a name=\"71\" href=\"#71\">71</a>      <em>/**<em>*</em></em>\n<a name=\"72\" href=\"#72\">72</a>  <em>     * Load up a jetty user realm based on the config from slide's Domain.xml</em>\n<a name=\"73\" href=\"#73\">73</a>  <em>     *</em>\n<a name=\"74\" href=\"#74\">74</a>  <em>     * @param config the configuration file to look at</em>\n<a name=\"75\" href=\"#75\">75</a>  <em>     */</em>\n<a name=\"76\" href=\"#76\">76</a>      <strong>public</strong> <strong>void</strong> loadFromSlideXML(<strong>final</strong> String config)\n<a name=\"77\" href=\"#77\">77</a>      {\n<a name=\"78\" href=\"#78\">78</a>          <strong>try</strong>\n<a name=\"79\" href=\"#79\">79</a>          {\n<a name=\"80\" href=\"#80\">80</a>              String sObjectNode = <span class=\"string\">\"objectnode\"</span>;\n<a name=\"81\" href=\"#81\">81</a>              String sClassname = <span class=\"string\">\"classname\"</span>;\n<a name=\"82\" href=\"#82\">82</a>              String sUri = <span class=\"string\">\"uri\"</span>;\n<a name=\"83\" href=\"#83\">83</a>              String sSubjectNode = <span class=\"string\">\"org.apache.slide.structure.SubjectNode\"</span>;\n<a name=\"84\" href=\"#84\">84</a>              String sProperty = <span class=\"string\">\"property\"</span>;\n<a name=\"85\" href=\"#85\">85</a>              String usersPrefix = <span class=\"string\">\"/users/\"</span>;\n<a name=\"86\" href=\"#86\">86</a>              String rolesPrefix = <span class=\"string\">\"/roles/\"</span>;\n<a name=\"87\" href=\"#87\">87</a>  \n<a name=\"88\" href=\"#88\">88</a>              DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n<a name=\"89\" href=\"#89\">89</a>              DocumentBuilder builder = factory.newDocumentBuilder();\n<a name=\"90\" href=\"#90\">90</a>              Document document = builder.parse(config);\n<a name=\"91\" href=\"#91\">91</a>              NodeList nList = document.getElementsByTagName(sObjectNode);\n<a name=\"92\" href=\"#92\">92</a>  \n<a name=\"93\" href=\"#93\">93</a>              DocumentBuilderFactory smallFactory = DocumentBuilderFactory\n<a name=\"94\" href=\"#94\">94</a>                                                    .newInstance();\n<a name=\"95\" href=\"#95\">95</a>  \n<a name=\"96\" href=\"#96\">96</a>              smallFactory.setValidating(false);\n<a name=\"97\" href=\"#97\">97</a>              smallFactory.setNamespaceAware(false);\n<a name=\"98\" href=\"#98\">98</a>  \n<a name=\"99\" href=\"#99\">99</a>              DocumentBuilder smallBuilder = smallFactory.newDocumentBuilder();\n<a name=\"100\" href=\"#100\">100</a> \n<a name=\"101\" href=\"#101\">101</a>             <strong>for</strong>(<strong>int</strong> i = 0; i &lt; nList.getLength(); i++)\n<a name=\"102\" href=\"#102\">102</a>             {\n<a name=\"103\" href=\"#103\">103</a>                 Element n = (Element)nList.item(i);\n<a name=\"104\" href=\"#104\">104</a> \n<a name=\"105\" href=\"#105\">105</a>                 <strong>if</strong>(n.hasAttribute(sClassname) &amp;&amp; n.hasAttribute(sUri))\n<a name=\"106\" href=\"#106\">106</a>                 {\n<a name=\"107\" href=\"#107\">107</a>                     String cn = n.getAttribute(sClassname);\n<a name=\"108\" href=\"#108\">108</a>                     String urin = n.getAttribute(sUri);\n<a name=\"109\" href=\"#109\">109</a> \n<a name=\"110\" href=\"#110\">110</a>                     <strong>if</strong>(cn.equals(sSubjectNode))\n<a name=\"111\" href=\"#111\">111</a>                     {\n<a name=\"112\" href=\"#112\">112</a>                         <strong>if</strong>(urin.startsWith(usersPrefix))\n<a name=\"113\" href=\"#113\">113</a>                         {\n<a name=\"114\" href=\"#114\">114</a>                             String username = urin.substring(usersPrefix.length());\n<a name=\"115\" href=\"#115\">115</a>                             String password = n.getElementsByTagName(sProperty)\n<a name=\"116\" href=\"#116\">116</a>                                                .item(0).getLastChild()\n<a name=\"117\" href=\"#117\">117</a>                                                .getNodeValue();\n<a name=\"118\" href=\"#118\">118</a> \n<a name=\"119\" href=\"#119\">119</a>                             <em class=\"comment\">// inject username and password into HashUserRealm</em>\n<a name=\"120\" href=\"#120\">120</a>                             proxyRealm.put(username, password);\n<a name=\"121\" href=\"#121\">121</a>                         }\n<a name=\"122\" href=\"#122\">122</a> \n<a name=\"123\" href=\"#123\">123</a>                         <strong>if</strong>(urin.startsWith(rolesPrefix))\n<a name=\"124\" href=\"#124\">124</a>                         {\n<a name=\"125\" href=\"#125\">125</a>                             String rolename = urin.substring(rolesPrefix.length());\n<a name=\"126\" href=\"#126\">126</a>                             String ss = n.getElementsByTagName(sProperty).item(0)\n<a name=\"127\" href=\"#127\">127</a>                                          .getLastChild().getNodeValue();\n<a name=\"128\" href=\"#128\">128</a> \n<a name=\"129\" href=\"#129\">129</a>                             ss = <span class=\"string\">\"&lt;dummy>\"</span> + ss + <span class=\"string\">\"&lt;/dummy>\"</span>;\n<a name=\"130\" href=\"#130\">130</a> \n<a name=\"131\" href=\"#131\">131</a>                             <em class=\"comment\">// make a valid XML doc</em>\n<a name=\"132\" href=\"#132\">132</a>                             Document small = smallBuilder.parse(\n<a name=\"133\" href=\"#133\">133</a>                                     <strong>new</strong> ByteArrayInputStream(ss.getBytes()));\n<a name=\"134\" href=\"#134\">134</a>                             NodeList members = small.getElementsByTagName(<span class=\"string\">\"D:href\"</span>);\n<a name=\"135\" href=\"#135\">135</a> \n<a name=\"136\" href=\"#136\">136</a>                             <strong>for</strong>(<strong>int</strong> j = 0; j &lt; members.getLength(); j++)\n<a name=\"137\" href=\"#137\">137</a>                             {\n<a name=\"138\" href=\"#138\">138</a>                                 String member = members.item(j).getLastChild()\n<a name=\"139\" href=\"#139\">139</a>                                                        .getNodeValue();\n<a name=\"140\" href=\"#140\">140</a> \n<a name=\"141\" href=\"#141\">141</a>                                 member = member.substring(usersPrefix.length());\n<a name=\"142\" href=\"#142\">142</a> \n<a name=\"143\" href=\"#143\">143</a>                                 <em class=\"comment\">// inject username and role into HashUserRealm</em>\n<a name=\"144\" href=\"#144\">144</a>                                 proxyRealm.addUserToRole(member, rolename);\n<a name=\"145\" href=\"#145\">145</a>                             }\n<a name=\"146\" href=\"#146\">146</a>                         }\n<a name=\"147\" href=\"#147\">147</a>                     }\n<a name=\"148\" href=\"#148\">148</a>                 }\n<a name=\"149\" href=\"#149\">149</a>             }\n<a name=\"150\" href=\"#150\">150</a>         }\n<a name=\"151\" href=\"#151\">151</a>         <strong>catch</strong>(Exception e)\n<a name=\"152\" href=\"#152\">152</a>         {\n<a name=\"153\" href=\"#153\">153</a>             Utils.handleException(e);\n<a name=\"154\" href=\"#154\">154</a>         }\n<a name=\"155\" href=\"#155\">155</a>     }\n<a name=\"156\" href=\"#156\">156</a> \n<a name=\"157\" href=\"#157\">157</a>     <em>/**<em>*</em></em>\n<a name=\"158\" href=\"#158\">158</a> <em>     * Add a new user</em>\n<a name=\"159\" href=\"#159\">159</a> <em>     * </em>\n<a name=\"160\" href=\"#160\">160</a> <em>     * @param userName\tthe name of the new user</em>\n<a name=\"161\" href=\"#161\">161</a> <em>     * @param password\tthe password of the new user</em>\n<a name=\"162\" href=\"#162\">162</a> <em>     * @param roleName\tthe role of the new user</em>\n<a name=\"163\" href=\"#163\">163</a> <em>     */</em>\n<a name=\"164\" href=\"#164\">164</a>     <strong>public</strong> <strong>void</strong> addUser(String userName, String password, String roleName) {\n<a name=\"165\" href=\"#165\">165</a>         proxyRealm.put(userName, Password.obfuscate(password));\n<a name=\"166\" href=\"#166\">166</a>         proxyRealm.addUserToRole(userName, roleName);\n<a name=\"167\" href=\"#167\">167</a>     }\n<a name=\"168\" href=\"#168\">168</a>     \n<a name=\"169\" href=\"#169\">169</a>     <em>/**<em>*</em></em>\n<a name=\"170\" href=\"#170\">170</a> <em>     * Authenticate a user</em>\n<a name=\"171\" href=\"#171\">171</a> <em>     *</em>\n<a name=\"172\" href=\"#172\">172</a> <em>     * @param username the name of the user</em>\n<a name=\"173\" href=\"#173\">173</a> <em>     * @param credentials the credentials of the user</em>\n<a name=\"174\" href=\"#174\">174</a> <em>     * @param request the request providing user and credentials</em>\n<a name=\"175\" href=\"#175\">175</a> <em>     *</em>\n<a name=\"176\" href=\"#176\">176</a> <em>     * @return see interface</em>\n<a name=\"177\" href=\"#177\">177</a> <em>     */</em>\n<a name=\"178\" href=\"#178\">178</a>     <strong>public</strong> Principal authenticate(<strong>final</strong> String username,\n<a name=\"179\" href=\"#179\">179</a>                                   <strong>final</strong> Object credentials,\n<a name=\"180\" href=\"#180\">180</a>                                   <strong>final</strong> HttpRequest request)\n<a name=\"181\" href=\"#181\">181</a>     {\n<a name=\"182\" href=\"#182\">182</a>         <em class=\"comment\">// Normal authentication</em>\n<a name=\"183\" href=\"#183\">183</a>         Principal p = proxyRealm.authenticate(username, credentials, request);\n<a name=\"184\" href=\"#184\">184</a>         <strong>return</strong> p;\n<a name=\"185\" href=\"#185\">185</a>     }\n<a name=\"186\" href=\"#186\">186</a>     \n<a name=\"187\" href=\"#187\">187</a>     <em>/**<em>*</em></em>\n<a name=\"188\" href=\"#188\">188</a> <em>     * Get the name of the realm</em>\n<a name=\"189\" href=\"#189\">189</a> <em>     *</em>\n<a name=\"190\" href=\"#190\">190</a> <em>     * @return The realm name.</em>\n<a name=\"191\" href=\"#191\">191</a> <em>     */</em>\n<a name=\"192\" href=\"#192\">192</a>     <strong>public</strong> String getName()\n<a name=\"193\" href=\"#193\">193</a>     {\n<a name=\"194\" href=\"#194\">194</a>         <strong>return</strong> proxyRealm.getName();\n<a name=\"195\" href=\"#195\">195</a>     }\n<a name=\"196\" href=\"#196\">196</a> \n<a name=\"197\" href=\"#197\">197</a>     <em>/**<em>*</em></em>\n<a name=\"198\" href=\"#198\">198</a> <em>     * Reauthenticate an authenticated principal</em>\n<a name=\"199\" href=\"#199\">199</a> <em>     * @param p the principal to reauthenticate</em>\n<a name=\"200\" href=\"#200\">200</a> <em>     * </em>\n<a name=\"201\" href=\"#201\">201</a> <em>     * @return true for successful reauthentication, false otherwise</em>\n<a name=\"202\" href=\"#202\">202</a> <em>     */</em>\n<a name=\"203\" href=\"#203\">203</a>     <strong>public</strong> <strong>boolean</strong> reauthenticate(Principal p)\n<a name=\"204\" href=\"#204\">204</a>     {\n<a name=\"205\" href=\"#205\">205</a> \t\t<strong>return</strong> proxyRealm.reauthenticate(p);\n<a name=\"206\" href=\"#206\">206</a> \t}\n<a name=\"207\" href=\"#207\">207</a> \n<a name=\"208\" href=\"#208\">208</a>     <em>/**<em>*</em></em>\n<a name=\"209\" href=\"#209\">209</a> <em>     * Assign a role to a user</em>\n<a name=\"210\" href=\"#210\">210</a> <em>     *</em>\n<a name=\"211\" href=\"#211\">211</a> <em>     * @param user the user</em>\n<a name=\"212\" href=\"#212\">212</a> <em>     * @param role the user's new role. Cannot be ROLE_NOBODY</em>\n<a name=\"213\" href=\"#213\">213</a> <em>     */</em>\n<a name=\"214\" href=\"#214\">214</a>     <strong>public</strong> <strong>void</strong> addUserToRole(<strong>final</strong> String user, <strong>final</strong> String role)\n<a name=\"215\" href=\"#215\">215</a>     {\n<a name=\"216\" href=\"#216\">216</a>         <strong>if</strong> (!role.equals(ROLE_NOBODY)) {\n<a name=\"217\" href=\"#217\">217</a>             proxyRealm.addUserToRole(user, role);\n<a name=\"218\" href=\"#218\">218</a>         }\n<a name=\"219\" href=\"#219\">219</a>     }\n<a name=\"220\" href=\"#220\">220</a> \n<a name=\"221\" href=\"#221\">221</a>     <em>/**<em>* Check if a user is in a role.</em></em>\n<a name=\"222\" href=\"#222\">222</a> <em>     * </em>\n<a name=\"223\" href=\"#223\">223</a> <em>     * @param user The user, which must be from this realm</em>\n<a name=\"224\" href=\"#224\">224</a> <em>     * @param roleName the rolename to check</em>\n<a name=\"225\" href=\"#225\">225</a> <em>     * @return True if the user can act in the role. If the role is ROLE_NOBODY,</em>\n<a name=\"226\" href=\"#226\">226</a> <em>     * \t\t\tthe method always returns false. </em>\n<a name=\"227\" href=\"#227\">227</a> <em>     */</em>\n<a name=\"228\" href=\"#228\">228</a>     <strong>public</strong> <strong>synchronized</strong> <strong>boolean</strong> isUserInRole(Principal user, String roleName)\n<a name=\"229\" href=\"#229\">229</a>     {\n<a name=\"230\" href=\"#230\">230</a>         <strong>if</strong> (roleName.equals(ROLE_NOBODY))\n<a name=\"231\" href=\"#231\">231</a>             <strong>return</strong> false;\n<a name=\"232\" href=\"#232\">232</a>         <strong>return</strong> proxyRealm.isUserInRole(user, roleName);\n<a name=\"233\" href=\"#233\">233</a>     }\n<a name=\"234\" href=\"#234\">234</a> \n<a name=\"235\" href=\"#235\">235</a>     <em>/**<em>*</em></em>\n<a name=\"236\" href=\"#236\">236</a> <em>     * see interface</em>\n<a name=\"237\" href=\"#237\">237</a> <em>     *</em>\n<a name=\"238\" href=\"#238\">238</a> <em>     * @param user see interface</em>\n<a name=\"239\" href=\"#239\">239</a> <em>     *</em>\n<a name=\"240\" href=\"#240\">240</a> <em>     * @return see interface</em>\n<a name=\"241\" href=\"#241\">241</a> <em>     */</em>\n<a name=\"242\" href=\"#242\">242</a>     <strong>public</strong> Principal popRole(<strong>final</strong> Principal user)\n<a name=\"243\" href=\"#243\">243</a>     {\n<a name=\"244\" href=\"#244\">244</a>         <strong>return</strong> proxyRealm.popRole(user);\n<a name=\"245\" href=\"#245\">245</a>     }\n<a name=\"246\" href=\"#246\">246</a> \n<a name=\"247\" href=\"#247\">247</a>     <em>/**<em>*</em></em>\n<a name=\"248\" href=\"#248\">248</a> <em>     * see interface</em>\n<a name=\"249\" href=\"#249\">249</a> <em>     *</em>\n<a name=\"250\" href=\"#250\">250</a> <em>     * @param user see interface</em>\n<a name=\"251\" href=\"#251\">251</a> <em>     * @param role see interface</em>\n<a name=\"252\" href=\"#252\">252</a> <em>     *</em>\n<a name=\"253\" href=\"#253\">253</a> <em>     * @return see interface</em>\n<a name=\"254\" href=\"#254\">254</a> <em>     */</em>\n<a name=\"255\" href=\"#255\">255</a>     <strong>public</strong> Principal pushRole(<strong>final</strong> Principal user, <strong>final</strong> String role)\n<a name=\"256\" href=\"#256\">256</a>     {\n<a name=\"257\" href=\"#257\">257</a>         Principal p = <strong>null</strong>;\n<a name=\"258\" href=\"#258\">258</a>         <strong>if</strong> (!role.equals(ROLE_NOBODY)) {\n<a name=\"259\" href=\"#259\">259</a>             p = proxyRealm.pushRole(user, role);\n<a name=\"260\" href=\"#260\">260</a>         }\n<a name=\"261\" href=\"#261\">261</a>         <strong>return</strong> p;\n<a name=\"262\" href=\"#262\">262</a>     }\n<a name=\"263\" href=\"#263\">263</a> \n<a name=\"264\" href=\"#264\">264</a>     <em>/**<em>*</em></em>\n<a name=\"265\" href=\"#265\">265</a> <em>     * Get a principal associated with a name</em>\n<a name=\"266\" href=\"#266\">266</a> <em>     * @param username the name of a user</em>\n<a name=\"267\" href=\"#267\">267</a> <em>     * </em>\n<a name=\"268\" href=\"#268\">268</a> <em>     * @return the associated principal</em>\n<a name=\"269\" href=\"#269\">269</a> <em>     */</em>\n<a name=\"270\" href=\"#270\">270</a> \t<strong>public</strong> Principal getPrincipal(String username)\n<a name=\"271\" href=\"#271\">271</a> \t{\n<a name=\"272\" href=\"#272\">272</a> \t\t<strong>return</strong> proxyRealm.getPrincipal(username);\n<a name=\"273\" href=\"#273\">273</a> \t}\n<a name=\"274\" href=\"#274\">274</a> \n<a name=\"275\" href=\"#275\">275</a>     <em>/**<em>*</em></em>\n<a name=\"276\" href=\"#276\">276</a> <em>     * disassociate an authenticated principal</em>\n<a name=\"277\" href=\"#277\">277</a> <em>     *</em>\n<a name=\"278\" href=\"#278\">278</a> <em>     * @param user the principal to disassociate</em>\n<a name=\"279\" href=\"#279\">279</a> <em>     */</em>\n<a name=\"280\" href=\"#280\">280</a>     <strong>public</strong> <strong>void</strong> disassociate(<strong>final</strong> Principal user)\n<a name=\"281\" href=\"#281\">281</a>     {\n<a name=\"282\" href=\"#282\">282</a>         proxyRealm.disassociate(user);\n<a name=\"283\" href=\"#283\">283</a>     }\n<a name=\"284\" href=\"#284\">284</a> \n<a name=\"285\" href=\"#285\">285</a>     <em>/**<em>*</em></em>\n<a name=\"286\" href=\"#286\">286</a> <em>     * Logout a principal</em>\n<a name=\"287\" href=\"#287\">287</a> <em>     *</em>\n<a name=\"288\" href=\"#288\">288</a> <em>     * @param user the user to logout</em>\n<a name=\"289\" href=\"#289\">289</a> <em>     */</em>\n<a name=\"290\" href=\"#290\">290</a>     <strong>public</strong> <strong>void</strong> logout(<strong>final</strong> Principal user)\n<a name=\"291\" href=\"#291\">291</a>     {\n<a name=\"292\" href=\"#292\">292</a>         proxyRealm.logout(user);\n<a name=\"293\" href=\"#293\">293</a>     }\n<a name=\"294\" href=\"#294\">294</a> \n<a name=\"295\" href=\"#295\">295</a>     <em>/**<em>*</em></em>\n<a name=\"296\" href=\"#296\">296</a> <em>     * Associate a key with a value</em>\n<a name=\"297\" href=\"#297\">297</a> <em>     *</em>\n<a name=\"298\" href=\"#298\">298</a> <em>     * @param key the key</em>\n<a name=\"299\" href=\"#299\">299</a> <em>     * @param val the value</em>\n<a name=\"300\" href=\"#300\">300</a> <em>     *</em>\n<a name=\"301\" href=\"#301\">301</a> <em>     * @return the old value assoicated with the key</em>\n<a name=\"302\" href=\"#302\">302</a> <em>     */</em>\n<a name=\"303\" href=\"#303\">303</a>     <strong>public</strong> Object put(<strong>final</strong> Object key, <strong>final</strong> Object val)\n<a name=\"304\" href=\"#304\">304</a>     {\n<a name=\"305\" href=\"#305\">305</a>         <strong>return</strong> proxyRealm.put(key, val);\n<a name=\"306\" href=\"#306\">306</a>     }\n<a name=\"307\" href=\"#307\">307</a> \n<a name=\"308\" href=\"#308\">308</a>     <em>/**<em>*</em></em>\n<a name=\"309\" href=\"#309\">309</a> <em>     * Convert to a string</em>\n<a name=\"310\" href=\"#310\">310</a> <em>     *</em>\n<a name=\"311\" href=\"#311\">311</a> <em>     * @return the string representation</em>\n<a name=\"312\" href=\"#312\">312</a> <em>     */</em>\n<a name=\"313\" href=\"#313\">313</a>     <strong>public</strong> String toString()\n<a name=\"314\" href=\"#314\">314</a>     {\n<a name=\"315\" href=\"#315\">315</a>         <strong>return</strong> proxyRealm.toString();\n<a name=\"316\" href=\"#316\">316</a>     }\n<a name=\"317\" href=\"#317\">317</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 34053.0}