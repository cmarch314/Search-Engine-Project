{"text": "OEChem C Theory Manual Version 1 3 1 Previous 31 OEBinary Version 2 Up 31 OEBinary Version 2 Next 32 OpenEye Command Line 31 1 OEBinary Format Specification A single OEBinary version 2 record consists of a data tag followed by the data length and finally by the data itself Simplifed a single record looks like TAG LENGTH DATA Embedding is accomplished by placing OEBinary records inside the data field of higher level OEBinary records The first byte of a tag field is used to determine the tag type If the first byte has the value x then the tag is a user defined type Non zero values indicate that the tag is reserved for use by OpenEye Scientific Software The list of OpenEye private use tags may be requested from OpenEye Scientific Software by contacting support eyesopen com Extending the OEBinary format to include new types should be done using user defined tags Again a user defined tag begins with a x byte to designate it as a user defined tag The tag length in number of bytes is then specified using a variable number of bytes Valid OEBinary user defined tags must be a minimum of one non zero byte long and less than or equal to 1 24 bytes including the null terminator The lowest seven bits of each byte are used to represent the length of the data tag The final byte in the length specification is recognized when the high bit x8 is set Tag lengths of up to 127 bytes can then be represented in a single byte with lengths of 128 to 1 23 characters stored in two bytes The tag itself should be a sequence of non zero bytes of the length specified in the length field A zero value byte will be interpreted as a C string terminator and will effectively shorten the length of the intended data tag if string matching on the tag is performed The length field of an OEBinary record designates the length in bytes of the following data record The field as with the length of data tags is itself specified in a variable number of bytes The lowest seven bits of each byte are used to represent data The terminating byte is designated by setting it s high bit x8 Valid lengths may be in the range from up to and including 18446744 737 9551615 which is the maximum value for the C type long long unsigned int In practice dealing with data sizes at the high end of the possible range would certainly exhaust the limits of physical memory on most machines Representing the maximum data size using the variable width technique requires 1 bytes to store the value even though the data size to store the value in memory is 8 bytes Unused high bit terminators therefore are a minimal cost in terms of space and do help keep the file size to a minimum Most data lengths in OEBinary files will be represented in only one or two bytes The data field of an OEBinary record can be any sequence of bytes of the length specified by the length field OEChem C Theory Manual Version 1 3 1 Previous 31 OEBinary Version 2 Up 31 OEBinary Version 2 Next 32 OpenEye Command Line Documentation released on July 3 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/oechem/cplusprog/node251.html", "title": "31.1 oebinary format specification", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<html>\n<head>\n<title>31.1 OEBinary Format Specification</title>\n<META NAME=\"description\" CONTENT=\"31.1 OEBinary Format Specification\">\n<META NAME=\"keywords\" CONTENT=\"cplusprog\">\n<META NAME=\"resource-type\" CONTENT=\"document\">\n<META NAME=\"distribution\" CONTENT=\"global\">\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n<link rel=\"STYLESHEET\" href=\"cplusprog.css\">\n<link rel=\"first\" href=\"cplusprog.html\">\n<link rel=\"contents\" href=\"contents.html\" title=\"Contents\">\n\n<LINK REL=\"previous\" HREF=\"node250.html\">\n<LINK REL=\"up\" HREF=\"node250.html\">\n<LINK REL=\"next\" HREF=\"node252.html\">\n</head>\n<body>\n<DIV CLASS=\"navigation\">\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node250.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node250.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node252.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - C++ Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><img src=\"../icons/blank_4.gif\"\n  border=\"0\" alt=\"\"></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node250.html\">31. OEBinary Version 2</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node250.html\">31. OEBinary Version 2</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node252.html\">32. OpenEye Command Line</A>\n<br><hr>\n</DIV>\n<!--End of Navigation Panel-->\n\n<H1><A NAME=\"SECTION0034100000000000000000\">\n31.1 OEBinary Format Specification</A>\n</H1>\n\n<P>\nA single OEBinary version 2 record consists of a data tag, followed by\nthe data length, and finally by the data itself.  Simplifed, a single\nrecord looks like TAG|LENGTH|DATA.\nEmbedding is accomplished by placing OEBinary records inside the data\nfield of higher level OEBinary records.\n\n<P>\nThe first byte of a tag field is used to determine the tag type.  If\nthe first byte has the value 0x0 then the tag is a user-defined type.\nNon-zero values indicate that the tag is reserved for use by OpenEye\nScientific Software.  The list of OpenEye private use tags may be\nrequested from OpenEye Scientific Software by contacting\nsupport@eyesopen.com.  Extending the OEBinary format to include new\ntypes should be done using user-defined tags.  Again, a user-defined\ntag begins with a 0x0 byte to designate it as a user-defined tag.  The\ntag length in number of bytes is then specified using a variable\nnumber of bytes.  Valid OEBinary user defined tags must be a minimum\nof one non-zero byte long and less than or equal to 1024 bytes\nincluding the null terminator.  The lowest seven bits of each byte are\nused to represent the length of the data tag.  The final byte in the\nlength specification is recognized when the high bit (0x80) is set.\nTag lengths of up to 127 bytes can then be represented in a single\nbyte, with lengths of 128 to 1023 characters stored in two bytes.  The\ntag itself should be a sequence of non-zero bytes of the length\nspecified in the length field.  A zero value byte will be interpreted\nas a C string terminator and will effectively shorten the length of\nthe intended data tag if string matching on the tag is performed.\n\n<P>\nThe length field of an OEBinary record designates the length (in\nbytes) of the following data record. The field, as with the length of\ndata tags, is itself specified in a variable number of bytes.  The\nlowest seven bits of each byte are used to represent data.  The\nterminating byte is designated by setting it's high bit (0x80).  Valid\nlengths may be in the range from 0 up to and including\n18446744073709551615 which is the maximum value for the C type long\nlong unsigned int.  In practice, dealing with data sizes at the high\nend of the possible range would certainly exhaust the limits of\nphysical memory on most machines. Representing the maximum data size\nusing the variable width technique requires 10 bytes to store the\nvalue even though the data size to store the value in memory is 8\nbytes.  Unused high bit terminators, therefore, are a minimal cost in\nterms of space and do help keep the file size to a minimum. Most\ndata lengths in OEBinary files will be represented in only one or two bytes.\n\n<P>\nThe data field of an OEBinary record can be any sequence of bytes of\nthe length specified by the length field.\n\n<DIV CLASS=\"navigation\">\n<p><hr>\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node250.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node250.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node252.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - C++ Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><img src=\"../icons/blank_4.gif\"\n  border=\"0\" alt=\"\"></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node250.html\">31. OEBinary Version 2</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node250.html\">31. OEBinary Version 2</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node252.html\">32. OpenEye Command Line</A>\n<hr>\n<span class=\"release-info\">Documentation released on July 30, 2004.</span>\n</DIV>\n<!--End of Navigation Panel-->\n\n</BODY>\n</HTML>\n", "id": 38631.0}