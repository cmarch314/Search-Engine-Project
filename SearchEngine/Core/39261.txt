{"text": "Navigation Up Table of Contents Bibliography Index Title Page Kernel CompareYAtX 2 A model for this must provide Comparison result fo operator Kernel Point 2 p Kernel Line 2 h compares the y coordinates of p and the vertical projection of p on h see d in the figure below Precondition h is not vertical Comparison result fo operator Kernel Point 2 p Kernel Line 2 h1 Kernel Line 2 h2 This function compares the y coordinates of the vertical projection of p on h1 and on h2 see e in the figure below Precondition h1 and h2 are not vertical Comparison result fo operator Kernel Line 2 l1 Kernel Line 2 l2 Kernel Line 2 h Let p be the intersection of lines l1 and l2 This function compares the y coordinates of p and the vertical projection of p on h see f in the figure below Precondition l1 l2 intersect and h is not vertical Comparison result fo operator Kernel Line 2 l1 Kernel Line 2 l2 Kernel Line 2 h1 Kernel Line 2 h2 Let p be the intersection of lines l1 and l2 This function compares the y coordinates of the vertical projection of p on h1 and on h2 see g in the figure below Precondition l1 and l2 intersect h1 and h2 are not vertical Comparison result fo operator Kernel Point 2 p Kernel Segment 2 s compares the y coordinates of p and the vertical projection of p on s If s is vertical then return EQUAL when p lies on s SMALLER when p lies under s and LARGER otherwise Precondition p is within the x range of s Comparison result fo operator Kernel Point 2 p Kernel Segment 2 s1 Kernel Segment 2 s2 This function compares the y coordinates of the vertical projection of p on s1 and on s2 If s1 or s2 is vertical then return EQUAL if they intersect otherwise return SMALLER if s1 lies below s2 and return LARGER otherwise Precondition p is within the x range of s1 and s2 RefinesAdaptableFunctor with three arguments See AlsoCGAL compare y at x Next Kernel CompareY 2 Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Kernel_23_ref/FunctionObjectConcept_Kernel--CompareYAtX_2.html", "title": "kernel::compareyatx_2", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Kernel_23_ref/Kernel_CompareYAtX_2.tex' -->\n<html> <head>  \n<title>Kernel::CompareYAtX_2</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_main.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_306\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_185\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_FunctionObjectConcept.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_Kernel::CompareYAtX_2\"></A>\n<h2><I>Kernel::CompareYAtX_2</I></h2>\n\n\nA model for this must provide:\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Enum_Comparison_result.html#Cross_link_anchor_104\">Comparison_result</A><A NAME=\"Function_Comparison_result_operator696const_Kernel::Point_2__p+_const_Kernel::Line_2__h9;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    fo.operator() (  <A HREF=\"Concept_Kernel--Point_2.html#Cross_link_anchor_459\">Kernel::Point_2</A> p,  <A HREF=\"Concept_Kernel--Line_2.html#Cross_link_anchor_450\">Kernel::Line_2</A> h)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    compares the <MATH><I>y</I></MATH>-coordinates of <MATH><I>p</I></MATH> and the vertical projection\n         of <I>p</I> on <I>h</I>, see (d) in the figure \n         below.<BR>\n\n<EM>Precondition: </EM><I>h</I> is not vertical.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Enum_Comparison_result.html#Cross_link_anchor_104\">Comparison_result</A><A NAME=\"Function_Comparison_result_operator696const_Kernel::Point_2__p+_const_Kernel::Line_2__h1+_const_Kernel::Line_2__h29;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    fo.operator() ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n     <A HREF=\"Concept_Kernel--Point_2.html#Cross_link_anchor_459\">Kernel::Point_2</A> p,<BR>\n\n<A HREF=\"Concept_Kernel--Line_2.html#Cross_link_anchor_450\">Kernel::Line_2</A> h1,<BR>\n\n<A HREF=\"Concept_Kernel--Line_2.html#Cross_link_anchor_450\">Kernel::Line_2</A> h2)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    This function compares the <MATH><I>y</I></MATH>-coordinates of the vertical projection \n of <I>p</I> on <I>h1</I> and on <I>h2</I>, see (e) in the figure \n below.<BR>\n\n<EM>Precondition: </EM><I>h1</I> and <I>h2</I> are not vertical.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Enum_Comparison_result.html#Cross_link_anchor_104\">Comparison_result</A><A NAME=\"Function_Comparison_result_operator696const_Kernel::Line_2__l1+_const_Kernel::Line_2__l2+_const_Kernel::Line_2__h9;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    fo.operator() ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n     <A HREF=\"Concept_Kernel--Line_2.html#Cross_link_anchor_450\">Kernel::Line_2</A> l1,<BR>\n\n<A HREF=\"Concept_Kernel--Line_2.html#Cross_link_anchor_450\">Kernel::Line_2</A> l2,<BR>\n\n<A HREF=\"Concept_Kernel--Line_2.html#Cross_link_anchor_450\">Kernel::Line_2</A> h)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Let <MATH><I>p</I></MATH> be the \n<!-- REMOVE_LINKS_BEGIN -->\nintersection\n<!-- REMOVE_LINKS_END -->\n of lines <MATH><I>l1</I></MATH> and <MATH><I>l2</I></MATH>.\n       This function compares the <MATH><I>y</I></MATH>-coordinates of <MATH><I>p</I></MATH> and \n       the vertical projection of <I>p</I> on <I>h</I>, see (f) in the figure \n       below.<BR>\n\n<EM>Precondition: </EM><I>l1</I>, <I>l2</I> intersect and <I>h</I> is not\n       vertical.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Enum_Comparison_result.html#Cross_link_anchor_104\">Comparison_result</A><A NAME=\"Function_Comparison_result_operator696const_Kernel::Line_2__l1+_const_Kernel::Line_2__l2+_const_Kernel::Line_2__h1+_const_Kernel::Line_2__h29;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    fo.operator() ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n     <A HREF=\"Concept_Kernel--Line_2.html#Cross_link_anchor_450\">Kernel::Line_2</A> l1,<BR>\n\n<A HREF=\"Concept_Kernel--Line_2.html#Cross_link_anchor_450\">Kernel::Line_2</A> l2,<BR>\n\n<A HREF=\"Concept_Kernel--Line_2.html#Cross_link_anchor_450\">Kernel::Line_2</A> h1,<BR>\n\n<A HREF=\"Concept_Kernel--Line_2.html#Cross_link_anchor_450\">Kernel::Line_2</A> h2)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Let <MATH><I>p</I></MATH> be the \n<!-- REMOVE_LINKS_BEGIN -->\nintersection\n<!-- REMOVE_LINKS_END -->\n of lines <MATH><I>l1</I></MATH> and <MATH><I>l2</I></MATH>. This function \n compares the <MATH><I>y</I></MATH>-coordinates of the vertical projection of <I>p</I> on \n <I>h1</I> and on <I>h2</I>, see (g) in the figure \n below.<BR>\n\n<EM>Precondition: </EM><I>l1</I> and <I>l2</I> intersect; <I>h1</I> and\n <I>h2</I> are not vertical.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Enum_Comparison_result.html#Cross_link_anchor_104\">Comparison_result</A><A NAME=\"Function_Comparison_result_operator696const_Kernel::Point_2__p+_const_Kernel::Segment_2__s9;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    fo.operator() ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n     <A HREF=\"Concept_Kernel--Point_2.html#Cross_link_anchor_459\">Kernel::Point_2</A> p,<BR>\n\n<A HREF=\"Concept_Kernel--Segment_2.html#Cross_link_anchor_463\">Kernel::Segment_2</A> s)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    compares the <MATH><I>y</I></MATH>-coordinates of <MATH><I>p</I></MATH> and the vertical projection\n of <I>p</I> on <I>s</I>.  If <I>s</I> is vertical, then return\n <I><A HREF=\"Enum_Comparison_result#Enum_Comparison_result\">EQUAL</A></I> when <I>p</I> lies on <I>s</I>, <I><A HREF=\"Enum_Comparison_result#Enum_Comparison_result\">SMALLER</A></I> when <I>p</I> lies\n under s, and <I><A HREF=\"Enum_Comparison_result#Enum_Comparison_result\">LARGER</A></I> otherwise.<BR>\n\n<EM>Precondition: </EM><I>p</I> is within the x range of <I>s</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Enum_Comparison_result.html#Cross_link_anchor_104\">Comparison_result</A><A NAME=\"Function_Comparison_result_operator696const_Kernel::Point_2__p+_const_Kernel::Segment_2__s1+_const_Kernel::Segment_2__s29;\"></A>\n\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    fo.operator() ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n     <A HREF=\"Concept_Kernel--Point_2.html#Cross_link_anchor_459\">Kernel::Point_2</A> p,<BR>\n\n<A HREF=\"Concept_Kernel--Segment_2.html#Cross_link_anchor_463\">Kernel::Segment_2</A> s1,<BR>\n\n<A HREF=\"Concept_Kernel--Segment_2.html#Cross_link_anchor_463\">Kernel::Segment_2</A> s2)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    This function compares the <MATH><I>y</I></MATH>-coordinates of the vertical projection \n of <I>p</I> on <I>s1</I> and on <I>s2</I>.  If <I>s1</I> or <I>s2</I>\n is vertical, then return <I><A HREF=\"Enum_Comparison_result#Enum_Comparison_result\">EQUAL</A></I> if they intersect, otherwise return\n <I><A HREF=\"Enum_Comparison_result#Enum_Comparison_result\">SMALLER</A></I> if <I>s1</I> lies below <I>s2</I>, and return <I><A HREF=\"Enum_Comparison_result#Enum_Comparison_result\">LARGER</A></I>\n otherwise.<BR>\n\n<EM>Precondition: </EM><I>p</I> is within the x range of <I>s1</I> and <I>s2</I>.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<img border=0 src=\"fig/compare2.gif\" align=center alt=\"Comparison of y at x\">\n<P>\n\n<H3>Refines</H3><A HREF=\"../STL_Extension_ref/FunctionObjectConcept_AdaptableFunctor.html#Cross_link_anchor_1509\">AdaptableFunctor</A> (with three arguments)\n<P>\n\n<H3>See Also</H3><I><A HREF=\"Function_compare_y_at_x.html#Cross_link_anchor_190\">CGAL::compare_y_at_x</A></I><BR>\n\n\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"FunctionObjectConcept_Kernel--CompareY_2.html\"><I>Kernel::CompareY_2</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_7!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 39261.0}