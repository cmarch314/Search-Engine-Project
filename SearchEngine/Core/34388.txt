{"text": "1 package swirl workspace 2 3 import java util Iterator 4 import java util List 5 6 import org apache commons httpclient HttpMethod 7 import org apache commons logging Log 8 import org apache commons logging LogFactory 9 import org apache webdav lib methods XMLResponseMethodBase 1 import org dom4j Attribute 11 import org dom4j CDATA 12 import org dom4j Comment 13 import org dom4j Document 14 import org dom4j DocumentType 15 import org dom4j Element 16 import org dom4j Entity 17 import org dom4j Namespace 18 import org dom4j Node 19 import org dom4j ProcessingInstruction 2 import org dom4j Text 21 import org dom4j Visitor 22 import org dom4j io DOMReader 23 24 import swirl workspace common DocumentLogger 25 26 27 DOCUMENT ME 28 29 author bpillet 3 31 public abstract class CompareCommandTest extends CommandTest implements Visitor 32 33 TODO 34 Document body 35 36 TODO 37 Document comparedDocument 38 39 TODO 4 Document slideBody 41 42 TODO 43 Document swirlBody 44 45 TODO 46 private Log log LogFactory getLog this getClass 47 48 49 Creates a new CompareCommandTest object 5 51 param name TODO 52 53 public CompareCommandTest String name 54 55 super name 56 57 58 59 TODO 6 61 param node TODO 62 63 public void visit Document node 64 65 visitNode node 66 67 68 69 TODO 7 71 param node TODO 72 73 public void visit DocumentType node 74 75 visitNode node 76 77 78 79 TODO 8 81 param node TODO 82 83 public void visit Element node 84 85 visitNode node 86 87 88 89 TODO 9 91 param node TODO 92 93 public void visit Attribute node 94 95 visitNode node 96 97 98 99 TODO 1 1 1 param node TODO 1 2 1 3 public void visit CDATA node 1 4 1 5 visitNode node 1 6 1 7 1 8 1 9 TODO 11 111 param node TODO 112 113 public void visit Comment node 114 115 visitNode node 116 117 118 119 TODO 12 121 param node TODO 122 123 public void visit Entity node 124 125 visitNode node 126 127 128 129 TODO 13 131 param node TODO 132 133 public void visit Namespace node 134 135 visitNode node 136 137 138 139 TODO 14 141 param node TODO 142 143 public void visit ProcessingInstruction node 144 145 visitNode node 146 147 148 149 TODO 15 151 param node TODO 152 153 public void visit Text node 154 155 visitNode node 156 157 158 159 TODO 16 161 param uri TODO 162 163 return TODO 164 165 throws UnsupportedOperationException TODO 166 167 protected HttpMethod createMethod String uri 168 169 throw new UnsupportedOperationException Please override this in a subclass 17 171 172 173 TODO 174 175 param uri TODO 176 param expectedVal TODO 177 178 throws Exception TODO 179 18 protected void go String uri int expectedVal throws Exception 181 182 super go uri expectedVal 183 assertEquals Content Type should be text xml charset UTF 8 184 getMethod getResponseHeader Content Type getValue 185 text xml charset UTF 8 186 187 DOMReader reader new DOMReader 188 XMLResponseMethodBase method XMLResponseMethodBase getMethod 189 19 body reader read method getResponseDocument 191 192 193 194 TODO 195 196 param swirlPath TODO 197 param slidePath TODO 198 param expectedVal TODO 199 2 throws Exception TODO 2 1 2 2 protected void go String swirlPath String slidePath int expectedVal 2 3 throws Exception 2 4 2 5 go SlideTestSetup LOCALHOST swirlPath expectedVal 2 6 swirlBody body 2 7 go SlideTestSetup LOCALHOST slidePath expectedVal 2 8 slideBody body 2 9 21 DocumentLogger logDocument log swirlBody swirlBody 211 DocumentLogger logDocument log slideBody slideBody 212 213 if log isDebugEnabled 214 215 log debug swirlCount swirlBody selectObject count 216 217 218 if log isDebugEnabled 219 22 log debug slideCount slideBody selectObject count 221 222 223 comparedDocument swirlBody 224 slideBody accept this 225 226 check for duplicate hrefs in swirlBody 227 List swirlHrefs swirlBody selectNodes D multistatus D response D href 228 229 if log isDebugEnabled 23 231 log debug swirlHrefs swirlHrefs 232 233 234 for Iterator it swirlHrefs iterator it hasNext 235 236 Node href Node it next 237 String text href getText 238 239 if log isDebugEnabled 24 241 log debug href href ntext text 242 243 244 Object count swirlBody selectObject count D href text 245 text 246 247 if log isDebugEnabled 248 249 log debug count count 25 251 252 assertEquals There should be only one href 1 253 Number count intValue 254 255 256 257 258 TODO 259 26 param node TODO 261 262 private void visitNode Node node 263 264 String xpath node getUniquePath 265 266 if log isDebugEnabled 267 268 log debug node nxpath xpath 269 27 271 Node comparedNode comparedDocument selectSingleNode xpath 272 273 if log isDebugEnabled 274 275 log debug comparedNode comparedNode 276 277 278 assertNotNull Compared document does not have node node 279 at xpath xpath comparedNode 28 281 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.20/xref-test/swirl/workspace/CompareCommandTest.html", "title": "comparecommandtest xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>CompareCommandTest xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../stylesheet.css\" />\n</head>\n<body>\n<pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <strong>package</strong> <a href=\"../../swirl/workspace/package-summary.html\">swirl.workspace</a>;\n<a name=\"2\" href=\"#2\">2</a>   \n<a name=\"3\" href=\"#3\">3</a>   <strong>import</strong> java.util.Iterator;\n<a name=\"4\" href=\"#4\">4</a>   <strong>import</strong> java.util.List;\n<a name=\"5\" href=\"#5\">5</a>   \n<a name=\"6\" href=\"#6\">6</a>   <strong>import</strong> org.apache.commons.httpclient.HttpMethod;\n<a name=\"7\" href=\"#7\">7</a>   <strong>import</strong> org.apache.commons.logging.Log;\n<a name=\"8\" href=\"#8\">8</a>   <strong>import</strong> org.apache.commons.logging.LogFactory;\n<a name=\"9\" href=\"#9\">9</a>   <strong>import</strong> org.apache.webdav.lib.methods.XMLResponseMethodBase;\n<a name=\"10\" href=\"#10\">10</a>  <strong>import</strong> org.dom4j.Attribute;\n<a name=\"11\" href=\"#11\">11</a>  <strong>import</strong> org.dom4j.CDATA;\n<a name=\"12\" href=\"#12\">12</a>  <strong>import</strong> org.dom4j.Comment;\n<a name=\"13\" href=\"#13\">13</a>  <strong>import</strong> org.dom4j.Document;\n<a name=\"14\" href=\"#14\">14</a>  <strong>import</strong> org.dom4j.DocumentType;\n<a name=\"15\" href=\"#15\">15</a>  <strong>import</strong> org.dom4j.Element;\n<a name=\"16\" href=\"#16\">16</a>  <strong>import</strong> org.dom4j.Entity;\n<a name=\"17\" href=\"#17\">17</a>  <strong>import</strong> org.dom4j.Namespace;\n<a name=\"18\" href=\"#18\">18</a>  <strong>import</strong> org.dom4j.Node;\n<a name=\"19\" href=\"#19\">19</a>  <strong>import</strong> org.dom4j.ProcessingInstruction;\n<a name=\"20\" href=\"#20\">20</a>  <strong>import</strong> org.dom4j.Text;\n<a name=\"21\" href=\"#21\">21</a>  <strong>import</strong> org.dom4j.Visitor;\n<a name=\"22\" href=\"#22\">22</a>  <strong>import</strong> org.dom4j.io.DOMReader;\n<a name=\"23\" href=\"#23\">23</a>  \n<a name=\"24\" href=\"#24\">24</a>  <strong>import</strong> swirl.workspace.common.DocumentLogger;\n<a name=\"25\" href=\"#25\">25</a>  \n<a name=\"26\" href=\"#26\">26</a>  <em>/**<em>*</em></em>\n<a name=\"27\" href=\"#27\">27</a>  <em> * DOCUMENT ME!</em>\n<a name=\"28\" href=\"#28\">28</a>  <em> *</em>\n<a name=\"29\" href=\"#29\">29</a>  <em> * @author bpillet</em>\n<a name=\"30\" href=\"#30\">30</a>  <em> */</em>\n<a name=\"31\" href=\"#31\">31</a>  <strong>public</strong> <strong>abstract</strong> <strong>class</strong> <a href=\"../../swirl/workspace/CompareCommandTest.html\">CompareCommandTest</a> <strong>extends</strong> <a href=\"../../swirl/workspace/CommandTest.html\">CommandTest</a> implements Visitor\n<a name=\"32\" href=\"#32\">32</a>  {\n<a name=\"33\" href=\"#33\">33</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"34\" href=\"#34\">34</a>      Document body;\n<a name=\"35\" href=\"#35\">35</a>  \n<a name=\"36\" href=\"#36\">36</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"37\" href=\"#37\">37</a>      Document comparedDocument;\n<a name=\"38\" href=\"#38\">38</a>  \n<a name=\"39\" href=\"#39\">39</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"40\" href=\"#40\">40</a>      Document slideBody;\n<a name=\"41\" href=\"#41\">41</a>  \n<a name=\"42\" href=\"#42\">42</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"43\" href=\"#43\">43</a>      Document swirlBody;\n<a name=\"44\" href=\"#44\">44</a>  \n<a name=\"45\" href=\"#45\">45</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"46\" href=\"#46\">46</a>      <strong>private</strong> Log log = LogFactory.getLog(<strong>this</strong>.getClass());\n<a name=\"47\" href=\"#47\">47</a>  \n<a name=\"48\" href=\"#48\">48</a>      <em>/**<em>*</em></em>\n<a name=\"49\" href=\"#49\">49</a>  <em>     * Creates a new CompareCommandTest object.</em>\n<a name=\"50\" href=\"#50\">50</a>  <em>     *</em>\n<a name=\"51\" href=\"#51\">51</a>  <em>     * @param name TODO</em>\n<a name=\"52\" href=\"#52\">52</a>  <em>     */</em>\n<a name=\"53\" href=\"#53\">53</a>      <strong>public</strong> <a href=\"../../swirl/workspace/CompareCommandTest.html\">CompareCommandTest</a>(String name)\n<a name=\"54\" href=\"#54\">54</a>      {\n<a name=\"55\" href=\"#55\">55</a>          <strong>super</strong>(name);\n<a name=\"56\" href=\"#56\">56</a>      }\n<a name=\"57\" href=\"#57\">57</a>  \n<a name=\"58\" href=\"#58\">58</a>      <em>/**<em>*</em></em>\n<a name=\"59\" href=\"#59\">59</a>  <em>     * TODO</em>\n<a name=\"60\" href=\"#60\">60</a>  <em>     *</em>\n<a name=\"61\" href=\"#61\">61</a>  <em>     * @param node TODO</em>\n<a name=\"62\" href=\"#62\">62</a>  <em>     */</em>\n<a name=\"63\" href=\"#63\">63</a>      <strong>public</strong> <strong>void</strong> visit(Document node)\n<a name=\"64\" href=\"#64\">64</a>      {\n<a name=\"65\" href=\"#65\">65</a>          visitNode(node);\n<a name=\"66\" href=\"#66\">66</a>      }\n<a name=\"67\" href=\"#67\">67</a>  \n<a name=\"68\" href=\"#68\">68</a>      <em>/**<em>*</em></em>\n<a name=\"69\" href=\"#69\">69</a>  <em>     * TODO</em>\n<a name=\"70\" href=\"#70\">70</a>  <em>     *</em>\n<a name=\"71\" href=\"#71\">71</a>  <em>     * @param node TODO</em>\n<a name=\"72\" href=\"#72\">72</a>  <em>     */</em>\n<a name=\"73\" href=\"#73\">73</a>      <strong>public</strong> <strong>void</strong> visit(DocumentType node)\n<a name=\"74\" href=\"#74\">74</a>      {\n<a name=\"75\" href=\"#75\">75</a>          visitNode(node);\n<a name=\"76\" href=\"#76\">76</a>      }\n<a name=\"77\" href=\"#77\">77</a>  \n<a name=\"78\" href=\"#78\">78</a>      <em>/**<em>*</em></em>\n<a name=\"79\" href=\"#79\">79</a>  <em>     * TODO</em>\n<a name=\"80\" href=\"#80\">80</a>  <em>     *</em>\n<a name=\"81\" href=\"#81\">81</a>  <em>     * @param node TODO</em>\n<a name=\"82\" href=\"#82\">82</a>  <em>     */</em>\n<a name=\"83\" href=\"#83\">83</a>      <strong>public</strong> <strong>void</strong> visit(Element node)\n<a name=\"84\" href=\"#84\">84</a>      {\n<a name=\"85\" href=\"#85\">85</a>          visitNode(node);\n<a name=\"86\" href=\"#86\">86</a>      }\n<a name=\"87\" href=\"#87\">87</a>  \n<a name=\"88\" href=\"#88\">88</a>      <em>/**<em>*</em></em>\n<a name=\"89\" href=\"#89\">89</a>  <em>     * TODO</em>\n<a name=\"90\" href=\"#90\">90</a>  <em>     *</em>\n<a name=\"91\" href=\"#91\">91</a>  <em>     * @param node TODO</em>\n<a name=\"92\" href=\"#92\">92</a>  <em>     */</em>\n<a name=\"93\" href=\"#93\">93</a>      <strong>public</strong> <strong>void</strong> visit(Attribute node)\n<a name=\"94\" href=\"#94\">94</a>      {\n<a name=\"95\" href=\"#95\">95</a>          visitNode(node);\n<a name=\"96\" href=\"#96\">96</a>      }\n<a name=\"97\" href=\"#97\">97</a>  \n<a name=\"98\" href=\"#98\">98</a>      <em>/**<em>*</em></em>\n<a name=\"99\" href=\"#99\">99</a>  <em>     * TODO</em>\n<a name=\"100\" href=\"#100\">100</a> <em>     *</em>\n<a name=\"101\" href=\"#101\">101</a> <em>     * @param node TODO</em>\n<a name=\"102\" href=\"#102\">102</a> <em>     */</em>\n<a name=\"103\" href=\"#103\">103</a>     <strong>public</strong> <strong>void</strong> visit(CDATA node)\n<a name=\"104\" href=\"#104\">104</a>     {\n<a name=\"105\" href=\"#105\">105</a>         visitNode(node);\n<a name=\"106\" href=\"#106\">106</a>     }\n<a name=\"107\" href=\"#107\">107</a> \n<a name=\"108\" href=\"#108\">108</a>     <em>/**<em>*</em></em>\n<a name=\"109\" href=\"#109\">109</a> <em>     * TODO</em>\n<a name=\"110\" href=\"#110\">110</a> <em>     *</em>\n<a name=\"111\" href=\"#111\">111</a> <em>     * @param node TODO</em>\n<a name=\"112\" href=\"#112\">112</a> <em>     */</em>\n<a name=\"113\" href=\"#113\">113</a>     <strong>public</strong> <strong>void</strong> visit(Comment node)\n<a name=\"114\" href=\"#114\">114</a>     {\n<a name=\"115\" href=\"#115\">115</a>         visitNode(node);\n<a name=\"116\" href=\"#116\">116</a>     }\n<a name=\"117\" href=\"#117\">117</a> \n<a name=\"118\" href=\"#118\">118</a>     <em>/**<em>*</em></em>\n<a name=\"119\" href=\"#119\">119</a> <em>     * TODO</em>\n<a name=\"120\" href=\"#120\">120</a> <em>     *</em>\n<a name=\"121\" href=\"#121\">121</a> <em>     * @param node TODO</em>\n<a name=\"122\" href=\"#122\">122</a> <em>     */</em>\n<a name=\"123\" href=\"#123\">123</a>     <strong>public</strong> <strong>void</strong> visit(Entity node)\n<a name=\"124\" href=\"#124\">124</a>     {\n<a name=\"125\" href=\"#125\">125</a>         visitNode(node);\n<a name=\"126\" href=\"#126\">126</a>     }\n<a name=\"127\" href=\"#127\">127</a> \n<a name=\"128\" href=\"#128\">128</a>     <em>/**<em>*</em></em>\n<a name=\"129\" href=\"#129\">129</a> <em>     * TODO</em>\n<a name=\"130\" href=\"#130\">130</a> <em>     *</em>\n<a name=\"131\" href=\"#131\">131</a> <em>     * @param node TODO</em>\n<a name=\"132\" href=\"#132\">132</a> <em>     */</em>\n<a name=\"133\" href=\"#133\">133</a>     <strong>public</strong> <strong>void</strong> visit(Namespace node)\n<a name=\"134\" href=\"#134\">134</a>     {\n<a name=\"135\" href=\"#135\">135</a>         visitNode(node);\n<a name=\"136\" href=\"#136\">136</a>     }\n<a name=\"137\" href=\"#137\">137</a> \n<a name=\"138\" href=\"#138\">138</a>     <em>/**<em>*</em></em>\n<a name=\"139\" href=\"#139\">139</a> <em>     * TODO</em>\n<a name=\"140\" href=\"#140\">140</a> <em>     *</em>\n<a name=\"141\" href=\"#141\">141</a> <em>     * @param node TODO</em>\n<a name=\"142\" href=\"#142\">142</a> <em>     */</em>\n<a name=\"143\" href=\"#143\">143</a>     <strong>public</strong> <strong>void</strong> visit(ProcessingInstruction node)\n<a name=\"144\" href=\"#144\">144</a>     {\n<a name=\"145\" href=\"#145\">145</a>         visitNode(node);\n<a name=\"146\" href=\"#146\">146</a>     }\n<a name=\"147\" href=\"#147\">147</a> \n<a name=\"148\" href=\"#148\">148</a>     <em>/**<em>*</em></em>\n<a name=\"149\" href=\"#149\">149</a> <em>     * TODO</em>\n<a name=\"150\" href=\"#150\">150</a> <em>     *</em>\n<a name=\"151\" href=\"#151\">151</a> <em>     * @param node TODO</em>\n<a name=\"152\" href=\"#152\">152</a> <em>     */</em>\n<a name=\"153\" href=\"#153\">153</a>     <strong>public</strong> <strong>void</strong> visit(Text node)\n<a name=\"154\" href=\"#154\">154</a>     {\n<a name=\"155\" href=\"#155\">155</a>         <em class=\"comment\">//visitNode(node);</em>\n<a name=\"156\" href=\"#156\">156</a>     }\n<a name=\"157\" href=\"#157\">157</a> \n<a name=\"158\" href=\"#158\">158</a>     <em>/**<em>*</em></em>\n<a name=\"159\" href=\"#159\">159</a> <em>     * TODO</em>\n<a name=\"160\" href=\"#160\">160</a> <em>     *</em>\n<a name=\"161\" href=\"#161\">161</a> <em>     * @param uri TODO</em>\n<a name=\"162\" href=\"#162\">162</a> <em>     *</em>\n<a name=\"163\" href=\"#163\">163</a> <em>     * @return TODO</em>\n<a name=\"164\" href=\"#164\">164</a> <em>     *</em>\n<a name=\"165\" href=\"#165\">165</a> <em>     * @throws UnsupportedOperationException TODO</em>\n<a name=\"166\" href=\"#166\">166</a> <em>     */</em>\n<a name=\"167\" href=\"#167\">167</a>     <strong>protected</strong> HttpMethod createMethod(String uri)\n<a name=\"168\" href=\"#168\">168</a>     {\n<a name=\"169\" href=\"#169\">169</a>         <strong>throw</strong> <strong>new</strong> UnsupportedOperationException(<span class=\"string\">\"Please override this in a subclass\"</span>);\n<a name=\"170\" href=\"#170\">170</a>     }\n<a name=\"171\" href=\"#171\">171</a> \n<a name=\"172\" href=\"#172\">172</a>     <em>/**<em>*</em></em>\n<a name=\"173\" href=\"#173\">173</a> <em>     * TODO</em>\n<a name=\"174\" href=\"#174\">174</a> <em>     *</em>\n<a name=\"175\" href=\"#175\">175</a> <em>     * @param uri TODO</em>\n<a name=\"176\" href=\"#176\">176</a> <em>     * @param expectedVal TODO</em>\n<a name=\"177\" href=\"#177\">177</a> <em>     *</em>\n<a name=\"178\" href=\"#178\">178</a> <em>     * @throws Exception TODO</em>\n<a name=\"179\" href=\"#179\">179</a> <em>     */</em>\n<a name=\"180\" href=\"#180\">180</a>     <strong>protected</strong> <strong>void</strong> go(String uri, <strong>int</strong> expectedVal) throws Exception\n<a name=\"181\" href=\"#181\">181</a>     {\n<a name=\"182\" href=\"#182\">182</a>         <strong>super</strong>.go(uri, expectedVal);\n<a name=\"183\" href=\"#183\">183</a>         assertEquals(<span class=\"string\">\"Content-Type should be text/xml; charset=\\&quot;UTF-8\\&quot;\"</span>,\n<a name=\"184\" href=\"#184\">184</a>                      getMethod().getResponseHeader(<span class=\"string\">\"Content-Type\"</span>).getValue(),\n<a name=\"185\" href=\"#185\">185</a>                      <span class=\"string\">\"text/xml; charset=\\&quot;UTF-8\\&quot;\"</span>);\n<a name=\"186\" href=\"#186\">186</a> \n<a name=\"187\" href=\"#187\">187</a>         DOMReader reader = <strong>new</strong> DOMReader();\n<a name=\"188\" href=\"#188\">188</a>         XMLResponseMethodBase method = (XMLResponseMethodBase)getMethod();\n<a name=\"189\" href=\"#189\">189</a> \n<a name=\"190\" href=\"#190\">190</a>         body = reader.read(method.getResponseDocument());\n<a name=\"191\" href=\"#191\">191</a>     }\n<a name=\"192\" href=\"#192\">192</a> \n<a name=\"193\" href=\"#193\">193</a>     <em>/**<em>*</em></em>\n<a name=\"194\" href=\"#194\">194</a> <em>     * TODO</em>\n<a name=\"195\" href=\"#195\">195</a> <em>     *</em>\n<a name=\"196\" href=\"#196\">196</a> <em>     * @param swirlPath TODO</em>\n<a name=\"197\" href=\"#197\">197</a> <em>     * @param slidePath TODO</em>\n<a name=\"198\" href=\"#198\">198</a> <em>     * @param expectedVal TODO</em>\n<a name=\"199\" href=\"#199\">199</a> <em>     *</em>\n<a name=\"200\" href=\"#200\">200</a> <em>     * @throws Exception TODO</em>\n<a name=\"201\" href=\"#201\">201</a> <em>     */</em>\n<a name=\"202\" href=\"#202\">202</a>     <strong>protected</strong> <strong>void</strong> go(String swirlPath, String slidePath, <strong>int</strong> expectedVal)\n<a name=\"203\" href=\"#203\">203</a>                throws Exception\n<a name=\"204\" href=\"#204\">204</a>     {\n<a name=\"205\" href=\"#205\">205</a>         go(SlideTestSetup.LOCALHOST + swirlPath, expectedVal);\n<a name=\"206\" href=\"#206\">206</a>         swirlBody = body;\n<a name=\"207\" href=\"#207\">207</a>         go(SlideTestSetup.LOCALHOST + slidePath, expectedVal);\n<a name=\"208\" href=\"#208\">208</a>         slideBody = body;\n<a name=\"209\" href=\"#209\">209</a> \n<a name=\"210\" href=\"#210\">210</a>         DocumentLogger.logDocument(log, <span class=\"string\">\"swirlBody\"</span>, swirlBody);\n<a name=\"211\" href=\"#211\">211</a>         DocumentLogger.logDocument(log, <span class=\"string\">\"slideBody\"</span>, slideBody);\n<a name=\"212\" href=\"#212\">212</a> \n<a name=\"213\" href=\"#213\">213</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"214\" href=\"#214\">214</a>         {\n<a name=\"215\" href=\"#215\">215</a>             log.debug(<span class=\"string\">\"swirlCount: \"</span> + swirlBody.selectObject(<span class=\"string\">\"count(//*)\"</span>));\n<a name=\"216\" href=\"#216\">216</a>         }\n<a name=\"217\" href=\"#217\">217</a> \n<a name=\"218\" href=\"#218\">218</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"219\" href=\"#219\">219</a>         {\n<a name=\"220\" href=\"#220\">220</a>             log.debug(<span class=\"string\">\"slideCount: \"</span> + slideBody.selectObject(<span class=\"string\">\"count(//*)\"</span>));\n<a name=\"221\" href=\"#221\">221</a>         }\n<a name=\"222\" href=\"#222\">222</a> \n<a name=\"223\" href=\"#223\">223</a>         comparedDocument = swirlBody;\n<a name=\"224\" href=\"#224\">224</a>         slideBody.accept(<strong>this</strong>);\n<a name=\"225\" href=\"#225\">225</a> \n<a name=\"226\" href=\"#226\">226</a>         <em class=\"comment\">//check for duplicate hrefs in swirlBody</em>\n<a name=\"227\" href=\"#227\">227</a>         List swirlHrefs = swirlBody.selectNodes(<span class=\"string\">\"/D:multistatus/D:response/D:href\"</span>);\n<a name=\"228\" href=\"#228\">228</a> \n<a name=\"229\" href=\"#229\">229</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"230\" href=\"#230\">230</a>         {\n<a name=\"231\" href=\"#231\">231</a>             log.debug(<span class=\"string\">\"swirlHrefs: \"</span> + swirlHrefs);\n<a name=\"232\" href=\"#232\">232</a>         }\n<a name=\"233\" href=\"#233\">233</a> \n<a name=\"234\" href=\"#234\">234</a>         <strong>for</strong>(Iterator it = swirlHrefs.iterator(); it.hasNext();)\n<a name=\"235\" href=\"#235\">235</a>         {\n<a name=\"236\" href=\"#236\">236</a>             Node href = (Node)it.next();\n<a name=\"237\" href=\"#237\">237</a>             String text = href.getText();\n<a name=\"238\" href=\"#238\">238</a> \n<a name=\"239\" href=\"#239\">239</a>             <strong>if</strong>(log.isDebugEnabled())\n<a name=\"240\" href=\"#240\">240</a>             {\n<a name=\"241\" href=\"#241\">241</a>                 log.debug(<span class=\"string\">\"href: \"</span> + href + <span class=\"string\">\"\\ntext: \"</span> + text);\n<a name=\"242\" href=\"#242\">242</a>             }\n<a name=\"243\" href=\"#243\">243</a> \n<a name=\"244\" href=\"#244\">244</a>             Object count = swirlBody.selectObject(<span class=\"string\">\"count(//D:href[text()='\"</span>\n<a name=\"245\" href=\"#245\">245</a>                                                   + text + <span class=\"string\">\"'])\"</span>);\n<a name=\"246\" href=\"#246\">246</a> \n<a name=\"247\" href=\"#247\">247</a>             <strong>if</strong>(log.isDebugEnabled())\n<a name=\"248\" href=\"#248\">248</a>             {\n<a name=\"249\" href=\"#249\">249</a>                 log.debug(<span class=\"string\">\"count: \"</span> + count);\n<a name=\"250\" href=\"#250\">250</a>             }\n<a name=\"251\" href=\"#251\">251</a> \n<a name=\"252\" href=\"#252\">252</a>             assertEquals(<span class=\"string\">\"There should be only one href\"</span>, 1,\n<a name=\"253\" href=\"#253\">253</a>                          ((Number)count).intValue());\n<a name=\"254\" href=\"#254\">254</a>         }\n<a name=\"255\" href=\"#255\">255</a>     }\n<a name=\"256\" href=\"#256\">256</a> \n<a name=\"257\" href=\"#257\">257</a>     <em>/**<em>*</em></em>\n<a name=\"258\" href=\"#258\">258</a> <em>     * TODO</em>\n<a name=\"259\" href=\"#259\">259</a> <em>     *</em>\n<a name=\"260\" href=\"#260\">260</a> <em>     * @param node TODO</em>\n<a name=\"261\" href=\"#261\">261</a> <em>     */</em>\n<a name=\"262\" href=\"#262\">262</a>     <strong>private</strong> <strong>void</strong> visitNode(Node node)\n<a name=\"263\" href=\"#263\">263</a>     {\n<a name=\"264\" href=\"#264\">264</a>         String xpath = node.getUniquePath();\n<a name=\"265\" href=\"#265\">265</a> \n<a name=\"266\" href=\"#266\">266</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"267\" href=\"#267\">267</a>         {\n<a name=\"268\" href=\"#268\">268</a>             log.debug(node + <span class=\"string\">\"\\nxpath: \"</span> + xpath);\n<a name=\"269\" href=\"#269\">269</a>         }\n<a name=\"270\" href=\"#270\">270</a> \n<a name=\"271\" href=\"#271\">271</a>         Node comparedNode = comparedDocument.selectSingleNode(xpath);\n<a name=\"272\" href=\"#272\">272</a> \n<a name=\"273\" href=\"#273\">273</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"274\" href=\"#274\">274</a>         {\n<a name=\"275\" href=\"#275\">275</a>             log.debug(<span class=\"string\">\"comparedNode: \"</span> + comparedNode);\n<a name=\"276\" href=\"#276\">276</a>         }\n<a name=\"277\" href=\"#277\">277</a> \n<a name=\"278\" href=\"#278\">278</a>         assertNotNull(<span class=\"string\">\"Compared document does not have node \"</span> + node\n<a name=\"279\" href=\"#279\">279</a>                       + <span class=\"string\">\" at xpath: \"</span> + xpath, comparedNode);\n<a name=\"280\" href=\"#280\">280</a>     }\n<a name=\"281\" href=\"#281\">281</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 34388.0}