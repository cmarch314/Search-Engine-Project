{"text": "OEChem Python Theory Manual Version 1 3 1 Previous 3 1 1 Python versions Up 3 1 Platform Notes Next 3 1 3 Linux Redhat 7 2 3 1 2 General Installation Instructions Python OEChem is now provided in tar gz format which when un tarred creates a directory tree just like all other OpenEye applications If you already have an OpenEye tree un tar the Python distribution into the same directory If not un tarring will create an entire directory structure starting with openeye All the Python related code will be found under openeye python Next you need to set an environment variable to allow Python to find the Python OEChem extensions Inside the openeye python directory there will be an examples directory and one or more directories named for the platform compiler and Python version Here is an example from a RedHat 9 installation The distribution was un tarred into usr local creating usr local openeye as the top of the installation tree user crush local ls openeye python examples redhat 9 g 3 2 i586 python2 3 user crush local We need to set the PYTHONPATH environment variable for Python to locate Python OEChem In your shell startup script bashrc for example add the following 2 lines The syntax may vary if you use a shell other than bash PYTHONPATH usr local openeye redhat 9 g 3 2 i586 python2 3 export PYTHONPATH Obviously if you un tarred in a different parent directory you would use that actual location In order to lay the groundwork for end user C OEChem modules as well as Python wrappers around other OpenEye toolkits that interoperate with Python OEChem as of version 1 3 Python OEChem on most platforms now uses dynamic instead of static versions of the underlying OEChem C libraries While this provides for great flexibility for future extension it does create the added complexity of requiring the user to provide information to the run time linker to find these shared libraries For most platforms in order for shared libraries to work we need to set an additional environment variable For most platforms this variable is LD LIBRARY PATH Presuming the same directory tree as shown above for Linux Irix 6 5 and Tru64 LD LIBRARY PATH usr local openeye redhat 9 g 3 2 i586 python2 3 LD LIBRARY PATH export LD LIBRARY PATH For OS X the variable is slightly different DYLD LIBRARY PATH usr local openeye redhat 9 g 3 2 i586 python2 3 DYLD LIBRARY PATH export DYLD LIBRARY PATH OEChem Python Theory Manual Version 1 3 1 Previous 3 1 1 Python versions Up 3 1 Platform Notes Next 3 1 3 Linux Redhat 7 2 Documentation released on July 3 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/oechem/pyprog/node258.html", "title": "30.1.2 general installation instructions", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<html>\n<head>\n<title>30.1.2 General Installation Instructions</title>\n<META NAME=\"description\" CONTENT=\"30.1.2 General Installation Instructions\">\n<META NAME=\"keywords\" CONTENT=\"pyprog\">\n<META NAME=\"resource-type\" CONTENT=\"document\">\n<META NAME=\"distribution\" CONTENT=\"global\">\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n<link rel=\"STYLESHEET\" href=\"pyprog.css\">\n<link rel=\"first\" href=\"pyprog.html\">\n<link rel=\"contents\" href=\"contents.html\" title=\"Contents\">\n\n<LINK REL=\"next\" HREF=\"node259.html\">\n<LINK REL=\"previous\" HREF=\"node257.html\">\n<LINK REL=\"up\" HREF=\"node256.html\">\n<LINK REL=\"next\" HREF=\"node259.html\">\n</head>\n<body>\n<DIV CLASS=\"navigation\">\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node257.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node256.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node259.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - Python Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"genindex.html\"><img src=\"../icons/index.gif\"\n  border=\"0\" alt=\"Index\"></A></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node257.html\">30.1.1 Python versions</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node256.html\">30.1 Platform Notes</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node259.html\">30.1.3 Linux, Redhat 7.2</A>\n<br><hr>\n</DIV>\n<!--End of Navigation Panel-->\n\n<H2><A NAME=\"SECTION0032120000000000000000\">\n30.1.2 General Installation Instructions</A>\n</H2>\n\n<P>\nPython-OEChem is now provided in tar.gz format, which when un-tarred\ncreates a directory tree just like all other OpenEye applications. If\nyou already have an OpenEye tree, un-tar the Python distribution into\nthe same directory. If not, un-tarring will create an entire directory\nstructure starting with <code>openeye</code>.\n\n<P>\nAll the Python related code will be found under <code>openeye/python</code>.\n\n<P>\nNext, you need to set an environment variable to allow Python to find\nthe Python-OEChem extensions. Inside the <code>openeye/python</code>\ndirectory, there will be an examples directory and one or more directories\nnamed for the platform, compiler and Python version. Here is an example\nfrom a RedHat 9 installation. The distribution was un-tarred into\n<code>/usr/local</code> creating <code>/usr/local/openeye</code> as the top\nof the installation tree.\n\n<P>\n<dl><dd><pre class=\"verbatim\">[user@crush local]$ ls openeye/python/\nexamples  redhat-9.0-g++3.2-i586-python2.3\n[user@crush local]$\n</pre></dl>\n\n<P>\nWe need to set the PYTHONPATH environment variable, for Python to locate\nPython-OEChem. In your shell startup script (.bashrc for example) add the\nfollowing 2 lines. (The syntax may vary if you use a shell other than\n<code>bash</code>\n\n<P>\n<dl><dd><pre class=\"verbatim\">PYTHONPATH=/usr/local/openeye/redhat-9.0-g++3.2-i586-python2.3\nexport PYTHONPATH\n</pre></dl>\n\n<P>\nObviously, if you un-tarred in a different parent directory, you would\nuse that actual location.\n\n<P>\nIn order to lay the groundwork for end-user C++ OEChem modules, as well\nas Python wrappers around other OpenEye toolkits, that interoperate with\nPython-OEChem, as of version 1.3, Python-OEChem on most platforms now\nuses dynamic instead of static versions of the underlying OEChem C++\nlibraries. While this provides for great flexibility for future extension,\nit does create the added complexity of requiring the user to provide\ninformation to the run-time linker to find these shared libraries.\n\n<P>\nFor most platforms, in order for shared libraries to work, we need to\nset an additional environment variable. For most platforms, this\nvariable is <code>LD_LIBRARY_PATH</code>.  Presuming the same\ndirectory tree as shown above, for Linux, Irix 6.5 and Tru64:\n\n<P>\n<dl><dd><pre class=\"verbatim\">LD_LIBRARY_PATH=/usr/local/openeye/redhat-9.0-g++3.2-i586-python2.3:$LD_LIBRARY_PATH\nexport LD_LIBRARY_PATH\n</pre></dl>\n\n<P>\nFor OS X, the variable is slightly different:\n\n<P>\n<dl><dd><pre class=\"verbatim\">DYLD_LIBRARY_PATH=/usr/local/openeye/redhat-9.0-g++3.2-i586-python2.3:$DYLD_LIBRARY_PATH\nexport DYLD_LIBRARY_PATH\n</pre></dl>\n\n<P>\n\n<DIV CLASS=\"navigation\">\n<p><hr>\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node257.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node256.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node259.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - Python Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"genindex.html\"><img src=\"../icons/index.gif\"\n  border=\"0\" alt=\"Index\"></A></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node257.html\">30.1.1 Python versions</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node256.html\">30.1 Platform Notes</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node259.html\">30.1.3 Linux, Redhat 7.2</A>\n<hr>\n<span class=\"release-info\">Documentation released on July 30, 2004.</span>\n</DIV>\n<!--End of Navigation Panel-->\n\n</BODY>\n</HTML>\n", "id": 38043.0}