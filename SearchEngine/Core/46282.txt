{"text": "Search LoginPreferencesHelp GuideAbout Trac WikiTimelineRoadmapBrowse SourceView TicketsSearch Context Navigation Previous ChangeNext Change Changeset 123 for trunk Nomatic Gaim current client gtk plugins nomatic nomatic c View differences inlineside by side Show lines around each change Show the changes in full context Ignore Blank lines Case changes White space changes Timestamp Nov 21 2 6 9 24 27 AM 8 years ago Author djp3Message After getting the stupid completion fields to work 8 of the way they should File 1 edited trunk Nomatic Gaim current client gtk plugins nomatic nomatic c modified 2 diffs Legend UnmodifiedAddedRemoved trunk Nomatic Gaim current client gtk plugins nomatic nomatic c r119 r123 17 17 171171 172 void setCurrentStatus gchar phrase 172void setCurrentStatus const gchar phrase 173173 174174GaimSavedStatus status NULL 371371 372372 373void static transferCompletionFieldToEntry GtkEntry entry 374 375GtkEntryCompletion completion 376int selection 377 378 completion gtk entry get completion entry 379 selection completion priv current selected 38 381 if selection 1 382 GtkListStore store 383 store GTK LIST STORE gtk entry completion get model completion 384 385 Modify a particular row 386 GtkTreeIter iter 387 GtkTreePath path 388 path gtk tree path new from indices selection 1 389 if gtk tree model get iter GTK TREE MODEL store iter path 39 gaim debug fatal NULL Nomatic Got a bad path n 391 392 gtk tree path free path 393 394 char str data 395 gtk tree model get GTK TREE MODEL store iter str data 1 396 gaim debug misc NULL Nomatic Completion Selected s n str data 397 gtk entry set text GTK ENTRY entry str data 398 g free str data 399 4 4 1 4 2static void updateStatusFromFreeForm gchar phrase 4 3 4 4 setFreeFormStatus phrase 4 5 setCurrentStatus getFreeFormStatus 4 6 4 7 4 8static gboolean matchSelectedFreeFormCB GtkEntryCompletion widget GtkTreeModel model GtkTreeIter iter GtkEntry entry 4 9 41 GValue v1 411gchar value NULL 412 413 Get the string value stored at this node 414 v1 GValue g malloc sizeof GValue 415 gtk tree model get value model iter v1 416 value gchar g value peek pointer v1 417 g free v1 418 419 updateStatusFromFreeForm value 42 return FALSE 421 422 373423 This function is triggered when the Nomatic Free Form Status is updated 374 static gboolean 375 setClassificationFreeForm GtkEntry entry GdkEventKey event gpointer data 424static gboolean setClassificationFreeForm GtkEntry entry GdkEventKey event gpointer data 376425 377426gboolean handleIt FALSE 387436 completionSelected FALSE 388437 438 If the user hits Return and the textbox finds out about it then we don t want to get the phrase 439 from the completion Entry 38944 if isReturnKey event data 39 441 completionSelected FALSE 393444 394445 if handleIt 446 if completionSelected 447 transferCompletionFieldToEntry entry 448 449 45 Manage the widget box 395451 GtkEntryCompletion completion 396 if completionSelected 397 completion gtk entry get completion entry 398 int selection completion priv current selected 399 4 if selection 1 4 1 GtkListStore store 4 2 store GTK LIST STORE gtk entry completion get model completion 4 3 4 4 Modify a particular row 4 5 GtkTreeIter iter 4 6 GtkTreePath path 4 7 path gtk tree path new from indices selection 1 4 8 if gtk tree model get iter GTK TREE MODEL store iter path 4 9 gaim debug fatal NULL Nomatic Got a bad path n 41 411 gtk tree path free path 412 413 char str data 414 gtk tree model get GTK TREE MODEL store iter str data 1 415 gaim debug misc NULL Nomatic Completion Selected s n str data 416 gtk entry set text GTK ENTRY entry str data 417 g free str data 418 419 42 421 Manage the widget box 422 GtkEntryCompletion completion 423452 completion gtk entry get completion GTK ENTRY entry 424453 phrase gchar gtk entry get text GTK ENTRY entry 426455 427456 Change the displayed status 428 if setFreeFormStatus phrase 429 setCurrentStatus phrase 43 457 updateStatusFromFreeForm phrase 458 459 TODO In all of the setClassification s figure out when to train 43146 Add this instance to the training data 432461 classification c newClassificationFreeForm phrase 433462 featureCollectionAddTrainingData c 434463 freeClassification c 435 436464 437465 return FALSE 438466 439467 44 static void updateStatusFromLocation GtkEntry entry 441 442 gchar phrase 443 444 phrase gchar gtk entry get text GTK ENTRY entry 468static void updateStatusFromLocation gchar phrase 469 44547 setParseLocation phrase 446471 char newStatus makeStatusFromStoredParse 451476static gboolean matchSelectedLocationCB GtkEntryCompletion widget GtkTreeModel model GtkTreeIter iter GtkEntry entry 452477 453 updateStatusFromLocation entry 478GValue v1 479gchar value NULL 48 481 Get the string value stored at this node 482 v1 GValue g malloc sizeof GValue 483 gtk tree model get value model iter v1 484 value gchar g value peek pointer v1 485 g free v1 486 487 updateStatusFromLocation value 454488 return FALSE 455489 45649 457491 This function is triggered when the Nomatic Location Status is updated 458 static gboolean 459 setClassificationLocation GtkEntry entry GdkEventKey event gpointer data 492static gboolean setClassificationLocation GtkEntry entry GdkEventKey event gpointer data 46 493 461494gboolean handleIt FALSE 4675 handleIt handleIt isFocusOutEvent event data 4685 1 469 gaim debug misc NULL Nomatic last key d current key d event is s n lastKey event keyval data 5 2 gaim debug misc NULL Nomatic Callback n 5 3 gaim debug misc NULL Nomatic last key d current key d event is s n lastKey event keyval data 47 5 4 This is a wierd corner case when the completion list is empty the user enters some text and then hits tab 4715 5 if lastKey GDK Tab event keyval isFocusOutEvent event data 48 514 481515 if handleIt 516 if completionSelected 517 transferCompletionFieldToEntry entry 518 519 52 Manage the widget box 482521 GtkEntryCompletion completion 483 if completionSelected 484 completion gtk entry get completion entry 485 int selection completion priv current selected 486 487 if selection 1 488 GtkListStore store 489 store GTK LIST STORE gtk entry completion get model completion 49 491 Modify a particular row 492 GtkTreeIter iter 493 GtkTreePath path 494 path gtk tree path new from indices selection 1 495 if gtk tree model get iter GTK TREE MODEL store iter path 496 gaim debug fatal NULL Nomatic Got a bad path n 497 498 gtk tree path free path 499 5 char str data 5 1 gtk tree model get GTK TREE MODEL store iter str data 1 5 2 gaim debug misc NULL Nomatic Completion Selected s n str data 5 3 gtk entry set text GTK ENTRY entry str data 5 4 g free str data 5 5 5 6 5 7 5 8 Manage the widget box 5 9 GtkEntryCompletion completion 51 522 completion gtk entry get completion GTK ENTRY entry 511523 phrase gchar gtk entry get text GTK ENTRY entry 513525 514526 Change the displayed status 515 updateStatusFromLocation entry 527 updateStatusFromLocation phrase 516528 517529 Add this instance to the training data 523535 524536 537 538 539static void updateStatusFromActivity gchar phrase 54 541 setParseActivity phrase 542 char newStatus makeStatusFromStoredParse 543 setCurrentStatus newStatus 544 free newStatus 545 546 547static gboolean matchSelectedActivityCB GtkEntryCompletion widget GtkTreeModel model GtkTreeIter iter GtkEntry entry 548 549GValue v1 55 gchar value NULL 551 552 Get the string value stored at this node 553 v1 GValue g malloc sizeof GValue 554 gtk tree model get value model iter v1 555 value gchar g value peek pointer v1 556 g free v1 557 558 updateStatusFromActivity value 559 return FALSE 56 561 525562 This function is triggered when the Nomatic Activity Status is updated 526 static gboolean 527 setClassificationActivity GtkEntry entry GdkEventKey event gpointer data 563static gboolean setClassificationActivity GtkEntry entry GdkEventKey event gpointer data 528564 529565gboolean handleIt FALSE 539575 completionSelected FALSE 54 576 577 If the user hits Return and the textbox finds out about it then we don t want to get the phrase 578 from the completion Entry 541579 if isReturnKey event data 54258 completionSelected FALSE 545583 546584 if handleIt 585 if completionSelected 586 transferCompletionFieldToEntry entry 587 588 589 Manage the widget box 54759 GtkEntryCompletion completion 548 if completionSelected 549 completion gtk entry get completion entry 55 int selection completion priv current selected 551 552 if selection 1 553 GtkListStore store 554 store GTK LIST STORE gtk entry completion get model completion 555 556 Modify a particular row 557 GtkTreeIter iter 558 GtkTreePath path 559 path gtk tree path new from indices selection 1 56 if gtk tree model get iter GTK TREE MODEL store iter path 561 gaim debug fatal NULL Nomatic Got a bad path n 562 563 gtk tree path free path 564 565 char str data 566 gtk tree model get GTK TREE MODEL store iter str data 1 567 gaim debug misc NULL Nomatic Completion Selected s n str data 568 gtk entry set text GTK ENTRY entry str data 569 g free str data 57 571 572 573 Manage the widget box 574 GtkEntryCompletion completion 575591 completion gtk entry get completion GTK ENTRY entry 576592 phrase gchar gtk entry get text GTK ENTRY entry 578594 579595 Change the displayed status 58 if setParseActivity phrase 581 char newStatus makeStatusFromStoredParse 582 setCurrentStatus newStatus 583 free newStatus 584 596 updateStatusFromActivity phrase 597 598 TODO Decide about below 585599 Add this instance to the training data 5866 classification c newClassificationParsed getParseLocation getParseActivity getParseSocialStatus 5876 1 featureCollectionAddTrainingData c 5886 2 freeClassification c 589 59 6 3 6 4 return FALSE 6 5 6 6 6 7static void updateStatusFromSocialStatus gchar phrase 6 8 6 9 setParseSocialStatus phrase 61 char newStatus makeStatusFromStoredParse 611 setCurrentStatus newStatus 612 free newStatus 613 614 615static gboolean matchSelectedSocialStatusCB GtkEntryCompletion widget GtkTreeModel model GtkTreeIter iter GtkEntry entry 616 617GValue v1 618gchar value NULL 619 62 Get the string value stored at this node 621 v1 GValue g malloc sizeof GValue 622 gtk tree model get value model iter v1 623 value gchar g value peek pointer v1 624 g free v1 625 626 updateStatusFromSocialStatus value 591627 return FALSE 592628 6 8644 completionSelected FALSE 6 9645 646 If the user hits Return and the textbox finds out about it then we don t want to get the phrase 647 from the completion Entry 61 648 if isReturnKey event data 611649 completionSelected FALSE 614652 615653 if handleIt 654 if completionSelected 655 transferCompletionFieldToEntry entry 656 657 658 Manage the widget box 616659 GtkEntryCompletion completion 617 if completionSelected 618 completion gtk entry get completion entry 619 int selection completion priv current selected 62 621 if selection 1 622 GtkListStore store 623 store GTK LIST STORE gtk entry completion get model completion 624 625 Modify a particular row 626 GtkTreeIter iter 627 GtkTreePath path 628 path gtk tree path new from indices selection 1 629 if gtk tree model get iter GTK TREE MODEL store iter path 63 gaim debug fatal NULL Nomatic Got a bad path n 631 632 gtk tree path free path 633 634 char str data 635 gtk tree model get GTK TREE MODEL store iter str data 1 636 gaim debug misc NULL Nomatic Completion Selected s n str data 637 gtk entry set text GTK ENTRY entry str data 638 g free str data 639 64 641 642 Manage the widget box 643 GtkEntryCompletion completion 64466 completion gtk entry get completion GTK ENTRY entry 645661 phrase gchar gtk entry get text GTK ENTRY entry 647663 648664 Change the displayed status 649 if setParseSocialStatus phrase 65 char newStatus makeStatusFromStoredParse 651 setCurrentStatus newStatus 652 free newStatus 653 665 updateStatusFromSocialStatus phrase 666 667 TODO Decide about below 654668 Add this instance to the training data 655669 classification c newClassificationParsed getParseLocation getParseActivity getParseSocialStatus 65667 featureCollectionAddTrainingData c 657671 freeClassification c 658 659672 66 673 return FALSE 7888 1 7898 2 completion initializeTextBoxWithCompletionField locationTextbox 79 g signal connect G OBJECT completion match selected G CALLBACK matchSelectedLocationCB textbox 8 3 g signal connect G OBJECT completion match selected G CALLBACK matchSelectedLocationCB locationTextbox 7918 4 7928 5 g signal connect G OBJECT locationTextbox key press event 799812 8 813 Textbox Activity 8 1 activityTextbox gtk entry new 814 activityTextbox gtk entry new 8 2815 gtk entry set text GTK ENTRY activityTextbox using Nomatic Gaim 8 3816 setParseActivity gtk entry get text GTK ENTRY activityTextbox 8 4817 gtk widget set size request activityTextbox 3 2 8 5818 gtk box pack start GTK BOX hbox text activityTextbox TRUE TRUE 8 6 initializeTextBoxWithCompletionField activityTextbox 8 7 819 82 completion initializeTextBoxWithCompletionField activityTextbox 821 g signal connect G OBJECT completion match selected G CALLBACK matchSelectedActivityCB activityTextbox 822 823 g signal connect G OBJECT activityTextbox key press event 824 G CALLBACK setClassificationActivity key press event 825 826 g signal connect G OBJECT activityTextbox focus out event 827 G CALLBACK setClassificationActivity focus out event 828 8 8829 Textbox Social Status 8 9 socialStatusTextbox gtk entry new 83 socialStatusTextbox gtk entry new 81 831 gtk entry set text GTK ENTRY socialStatusTextbox by myself 811832 setParseSocialStatus gtk entry get text GTK ENTRY socialStatusTextbox 812833 gtk widget set size request socialStatusTextbox 3 2 813834 gtk box pack start GTK BOX hbox text socialStatusTextbox TRUE TRUE 814 initializeTextBoxWithCompletionField socialStatusTextbox 835 836 completion initializeTextBoxWithCompletionField socialStatusTextbox 837 838 g signal connect G OBJECT completion match selected G CALLBACK matchSelectedSocialStatusCB socialStatusTextbox 839 84 g signal connect G OBJECT socialStatusTextbox key press event 841 G CALLBACK setClassificationSocialStatus key press event 842 843 g signal connect G OBJECT socialStatusTextbox focus out event 844 G CALLBACK setClassificationSocialStatus focus out event 815845 816846 Elements of hbox cusLab Label of Custom Message 817 label gtk label new Free Form Status Message 818 gtk box pack start GTK BOX hbox cusLab label TRUE TRUE 847 label gtk label new Free Form Status Message 848 gtk box pack start GTK BOX hbox cusLab label TRUE TRUE 819849 82 85 Elements of hbox cus Textfield of Custom Message 821 freeFormTextbox gtk entry new 851 freeFormTextbox gtk entry new 822852 823853 This loads the custom status box with the current status when the plug in kicks off 824 854 825855 const char message gaim savedstatus get message gaim savedstatus get current 826856 if message NULL 831861 setFreeFormStatus gtk entry get text GTK ENTRY freeFormTextbox 832862 gtk box pack start GTK BOX hbox cus freeFormTextbox TRUE TRUE 833 initializeTextBoxWithCompletionField freeFormTextbox 834 863 completion initializeTextBoxWithCompletionField freeFormTextbox 864 865 TODO Bring this back into the code 835866 featureCollectionTransferToCompletionField locationTextbox 836867 activityTextbox 838869 freeFormTextbox 83987 84 g signal connect G OBJECT activityTextbox key press event 841 G CALLBACK setClassificationActivity key press event 842 g signal connect G OBJECT socialStatusTextbox key press event 843 G CALLBACK setClassificationSocialStatus key press event 871 g signal connect G OBJECT completion match selected G CALLBACK matchSelectedFreeFormCB freeFormTextbox 872 844873 g signal connect G OBJECT freeFormTextbox key press event 845 G CALLBACK setClassificationFreeForm key press event 874 G CALLBACK setClassificationFreeForm key press event 846875 847 g signal connect G OBJECT activityTextbox focus out event 848 G CALLBACK setClassificationActivity focus out event 849 g signal connect G OBJECT socialStatusTextbox focus out event 85 G CALLBACK setClassificationSocialStatus focus out event 851876 g signal connect G OBJECT freeFormTextbox focus out event 852 G CALLBACK setClassificationFreeForm focus out event 877 G CALLBACK setClassificationFreeForm focus out event 853878 854879 Note See TracChangeset for help on using the changeset viewer Download in other formats Unified Diff Zip Archive Powered by Trac 1 1 By Edgewall Software All content copyright 2 7 2 8 by LUCI http luci ics uci edu ", "_id": "http://djp3-pc2.ics.uci.edu/LUCICodeRepository/nomaticIM/changeset/123/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c", "title": "\n      changeset 123 for trunk/nomatic*gaim/current/client/gtk/plugins/nomatic/nomatic.c \u2013 nomatic*im\n    ", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n  \n\n\n  <head>\n\t\t<title>\n      Changeset 123 for trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c \u2013 Nomatic*IM\n    </title><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><link rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search\" /><link rel=\"help\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\" /><link rel=\"alternate\" href=\"?format=diff&amp;new=123\" type=\"text/plain\" class=\"diff\" title=\"Unified Diff\" /><link rel=\"alternate\" href=\"?format=zip&amp;new=123\" type=\"application/zip\" class=\"zip\" title=\"Zip Archive\" /><link rel=\"next\" href=\"/LUCICodeRepository/nomaticIM/changeset/124/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c\" title=\"Changeset 124 for trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c\" /><link rel=\"start\" href=\"/LUCICodeRepository/nomaticIM/wiki\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/changeset.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/diff.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/code.css\" type=\"text/css\" /><link rel=\"prev\" href=\"/LUCICodeRepository/nomaticIM/changeset/120/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c\" title=\"Changeset 120 for trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c\" /><link rel=\"shortcut icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link rel=\"icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link type=\"application/opensearchdescription+xml\" rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search/opensearch\" title=\"Search Nomatic*IM\" /><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/jquery.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/babel.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/messages/en_US.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/trac.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/search.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/diff.js\"></script><script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\".trac-toggledeleted\").show().click(function() {\n                  $(this).siblings().find(\".trac-deleted\").toggle();\n                  return false;\n        }).click();\n        $(\"#content\").find(\"li.entry h2 a\").parent().addAnchor(_(\"Link to this diff\"));\n      });\n    </script>\n\t</head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://luci.ics.uci.edu/#code\"><img src=\"http://luci.ics.uci.edu/blog/archives/LUCIhorzTight.jpg\" alt=\"LUCI Code Repository\" /></a>\n      </div>\n      <form id=\"search\" action=\"/LUCICodeRepository/nomaticIM/search\" method=\"get\">\n        <div>\n          <label for=\"proj-search\">Search:</label>\n          <input type=\"text\" id=\"proj-search\" name=\"q\" size=\"18\" value=\"\" />\n          <input type=\"submit\" value=\"Search\" />\n        </div>\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/login\">Login</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/prefs\">Preferences</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\">Help/Guide</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/wiki\">Wiki</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/timeline\">Timeline</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/roadmap\">Roadmap</a></li><li class=\"active\"><a href=\"/LUCICodeRepository/nomaticIM/browser\">Browse Source</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/report\">View Tickets</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/search\">Search</a></li>\n    </ul>\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><span>&larr; <a class=\"prev\" href=\"/LUCICodeRepository/nomaticIM/changeset/120/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c\" title=\"Changeset 120 for trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c\">Previous Change</a></span></li><li class=\"last\"><span><a class=\"next\" href=\"/LUCICodeRepository/nomaticIM/changeset/124/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c\" title=\"Changeset 124 for trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c\">Next Change</a> &rarr;</span></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"changeset\">\n      <div id=\"title\">\n            <h1>Changeset <a title=\"Show full changeset\" href=\"/LUCICodeRepository/nomaticIM/changeset/123\">123</a>\n              for <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=123\">trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c</a></h1>\n      </div>\n      <form id=\"prefs\" action=\"\">\n        <div>\n          \n  <label for=\"style\">View differences</label>\n  <select id=\"style\" name=\"style\">\n    <option selected=\"selected\" value=\"inline\">inline</option>\n    <option value=\"sidebyside\">side by side</option>\n  </select>\n  <div class=\"field\">\n    <label><input type=\"radio\" name=\"contextall\" value=\"0\" checked=\"checked\" />\n             Show</label>\n      <label><input type=\"text\" name=\"contextlines\" id=\"contextlines\" size=\"2\" maxlength=\"3\" value=\"2\" />\n             lines around each change</label><br />\n    <label><input type=\"radio\" name=\"contextall\" value=\"1\" />\n           Show the changes in full context</label>\n  </div>\n  <fieldset id=\"ignore\">\n    <legend>Ignore:</legend>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignoreblanklines\" name=\"ignoreblanklines\" />\n      <label for=\"ignoreblanklines\">Blank lines</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorecase\" name=\"ignorecase\" />\n      <label for=\"ignorecase\">Case changes</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorewhitespace\" name=\"ignorewhitespace\" />\n      <label for=\"ignorewhitespace\">White space changes</label>\n    </div>\n  </fieldset>\n  <div class=\"buttons\">\n    <input type=\"submit\" name=\"update\" value=\"Update\" />\n  </div>\n\n        </div>\n      </form>\n      <dl id=\"overview\">\n          <dt class=\"property time\">Timestamp:</dt>\n          <dd class=\"time\">\n             Nov 21, 2006, 9:24:27 AM\n             (<a class=\"timeline\" href=\"/LUCICodeRepository/nomaticIM/timeline?from=2006-11-21T09%3A24%3A27-08%3A00&amp;precision=second\" title=\"See timeline at Nov 21, 2006, 9:24:27 AM\">8 years</a> ago)\n          </dd>\n          <dt class=\"property author\">Author:</dt>\n          <dd class=\"author\">djp3</dd>\n          <dt class=\"property message\">Message:</dt>\n          <dd class=\"message searchable\">\n            \n            \n              <p>\nAfter getting the stupid completion fields to work 80% of the way they should<br />\n</p>\n\n            \n            \n          </dd>\n        <dt class=\"property files\">\n          File:\n        </dt>\n        <dd class=\"files\">\n          <div class=\"legend\" id=\"file-legend\">\n            <dl>\n              <dt class=\"mod\"></dt><dd>1 edited</dd>\n            </dl>\n          </div>\n          <br />\n          <ul>\n            <li>\n          <div class=\"mod\"> </div>\n            <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=123\">\n              trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c\n            </a>\n          <span class=\"comment\">(modified)</span>\n              (<a title=\"Show differences\" href=\"#file0\">20 diffs</a>)\n            </li>\n          </ul>\n        </dd>\n      </dl>\n      <div class=\"diff\">\n        <div class=\"legend\" id=\"diff-legend\">\n          <h3>Legend:</h3>\n          <dl>\n            <dt class=\"unmod\"></dt><dd>Unmodified</dd>\n            <dt class=\"add\"></dt><dd>Added</dd>\n            <dt class=\"rem\"></dt><dd>Removed</dd>\n          </dl>\n        </div>\n        <div class=\"diff\">\n  <ul class=\"entries\">\n      <li class=\"entry\">\n        <h2 id=\"file0\">\n          <a href=\"/LUCICodeRepository/nomaticIM/changeset/123/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c\" title=\"Show the changeset 123 restricted to trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c\">trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c</a>\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"Revision 119\">\n                    <a title=\"Show revision 119 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/client/gtk/plugins/nomatic/nomatic.c?rev=119#L170\">\n                      r119</a>\n                  </th>\n                  <th title=\"Revision 123\">\n                    <a title=\"Show revision 123 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=123#L170\">\n                      r123</a>\n                  </th>\n                  <td>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>170</th><th>170</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>171</th><th>171</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>172</th><th>\u00a0</th><td class=\"l\"><span>void setCurrentStatus(<del></del>gchar *phrase)</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>172</th><td class=\"r\"><span>void setCurrentStatus(<ins>const </ins>gchar *phrase)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>173</th><th>173</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>174</th><th>174</th><td class=\"l\"><span>GaimSavedStatus *status = NULL;</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/client/gtk/plugins/nomatic/nomatic.c?rev=119#L371\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=123#L371\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>371</th><th>371</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>372</th><th>372</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>373</th><td class=\"r\"><ins>void static transferCompletionFieldToEntry(GtkEntry *entry)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>374</th><td class=\"r\"><ins>{</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>375</th><td class=\"r\"><ins>GtkEntryCompletion *completion;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>376</th><td class=\"r\"><ins>int selection;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>377</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>378</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; completion = gtk_entry_get_completion(entry);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>379</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; selection = completion-&gt;priv-&gt;current_selected;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>380</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>381</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(selection != -1){</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>382</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkListStore *store;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>383</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; store = GTK_LIST_STORE(gtk_entry_completion_get_model(completion));</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>384</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>385</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Modify a particular row */</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>386</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkTreeIter iter;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>387</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkTreePath *path;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>388</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; path = gtk_tree_path_new_from_indices (selection,-1);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>389</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!gtk_tree_model_get_iter (GTK_TREE_MODEL (store),&amp;iter, path)){</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>390</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_fatal(NULL,\"Nomatic: Got a bad path\\n\");</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>391</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>392</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_tree_path_free (path);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>393</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>394</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char *str_data;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>395</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_tree_model_get(GTK_TREE_MODEL(store),&amp;iter,0,&amp;str_data,-1);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>396</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_misc(NULL,\"Nomatic: Completion Selected %s\\n\",str_data);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>397</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text(GTK_ENTRY(entry),str_data);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>398</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; g_free(str_data);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>399</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>400</th><td class=\"r\"><ins>}</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>401</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>402</th><td class=\"r\"><ins>static void updateStatusFromFreeForm(gchar *phrase)</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>403</th><td class=\"r\"><ins>{</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>404</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; setFreeFormStatus(phrase);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>405</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; setCurrentStatus(getFreeFormStatus());</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>406</th><td class=\"r\"><ins>}</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>407</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>408</th><td class=\"r\"><ins>static gboolean matchSelectedFreeFormCB(GtkEntryCompletion *widget,GtkTreeModel *model,GtkTreeIter *iter,GtkEntry *entry)&nbsp; &nbsp;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>409</th><td class=\"r\"><ins>{</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>410</th><td class=\"r\"><ins>GValue *v1;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>411</th><td class=\"r\"><ins>gchar *value = NULL;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>412</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>413</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; /* Get the string value stored at this node */</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>414</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; v1 = (GValue *) g_malloc0 (sizeof(GValue));</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>415</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; gtk_tree_model_get_value(model,iter,0,v1);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>416</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; value = (gchar*) g_value_peek_pointer(v1);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>417</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; g_free(v1);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>418</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>419</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; updateStatusFromFreeForm(value);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>420</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>421</th><td class=\"r\"><ins>}</ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>422</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>373</th><th>423</th><td class=\"l\"><span>// This function is triggered when the Nomatic Free Form Status is updated</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>374</th><th>\u00a0</th><td class=\"l\"><span>static gboolean</span>\u00a0</td>\n                      </tr><tr>\n                        <th>375</th><th>\u00a0</th><td class=\"l\"><span>setClassificationFreeForm (GtkEntry *entry, GdkEventKey *event, gpointer data)</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>424</th><td class=\"r\"><span>static gboolean setClassificationFreeForm (GtkEntry *entry, GdkEventKey *event, gpointer data)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>376</th><th>425</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>377</th><th>426</th><td class=\"l\"><span>gboolean handleIt = FALSE;</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/client/gtk/plugins/nomatic/nomatic.c?rev=119#L387\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=123#L436\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>387</th><th>436</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completionSelected = FALSE;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>388</th><th>437</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>438</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; /* If the user hits Return and the textbox finds out about it then we don't want to get the phrase </ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>439</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* from the completion Entry*/</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>389</th><th>440</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(isReturnKey(event,data)){</span>\u00a0</td>\n                  </tr><tr>\n                          <th>390</th><th>441</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completionSelected = FALSE;</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/client/gtk/plugins/nomatic/nomatic.c?rev=119#L393\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=123#L444\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>393</th><th>444</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>394</th><th>445</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(handleIt){</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>446</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(completionSelected){</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>447</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; transferCompletionFieldToEntry(entry);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>448</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>449</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>450</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Manage the widget box */</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>395</th><th>451</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkEntryCompletion *completion;</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"first\">\n                          <th>396</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(completionSelected){</del>\u00a0</td>\n                  </tr><tr>\n                          <th>397</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completion = gtk_entry_get_completion(entry);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>398</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int selection = completion-&gt;priv-&gt;current_selected;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>399</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </del>\u00a0</td>\n                  </tr><tr>\n                          <th>400</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(selection != -1){</del>\u00a0</td>\n                  </tr><tr>\n                          <th>401</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkListStore *store;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>402</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; store = GTK_LIST_STORE(gtk_entry_completion_get_model(completion));</del>\u00a0</td>\n                  </tr><tr>\n                          <th>403</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </del>\u00a0</td>\n                  </tr><tr>\n                          <th>404</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Modify a particular row */</del>\u00a0</td>\n                  </tr><tr>\n                          <th>405</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkTreeIter iter;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>406</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkTreePath *path;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>407</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; path = gtk_tree_path_new_from_indices (selection,-1);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>408</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!gtk_tree_model_get_iter (GTK_TREE_MODEL (store),&amp;iter, path)){</del>\u00a0</td>\n                  </tr><tr>\n                          <th>409</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_fatal(NULL,\"Nomatic: Got a bad path\\n\");</del>\u00a0</td>\n                  </tr><tr>\n                          <th>410</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</del>\u00a0</td>\n                  </tr><tr>\n                          <th>411</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_tree_path_free (path);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>412</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>413</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char *str_data;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>414</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_tree_model_get(GTK_TREE_MODEL(store),&amp;iter,0,&amp;str_data,-1);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>415</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_misc(NULL,\"Nomatic: Completion Selected %s\\n\",str_data);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>416</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text(GTK_ENTRY(entry),str_data);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>417</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; g_free(str_data);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>418</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</del>\u00a0</td>\n                  </tr><tr>\n                          <th>419</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</del>\u00a0</td>\n                  </tr><tr>\n                          <th>420</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </del>\u00a0</td>\n                  </tr><tr>\n                          <th>421</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Manage the widget box */</del>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>422</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //GtkEntryCompletion *completion;</del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>423</th><th>452</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completion = gtk_entry_get_completion(GTK_ENTRY(entry));</span>\u00a0</td>\n                  </tr><tr>\n                          <th>424</th><th>453</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; phrase = (gchar *)gtk_entry_get_text(GTK_ENTRY(entry));</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/client/gtk/plugins/nomatic/nomatic.c?rev=119#L426\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=123#L455\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>426</th><th>455</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>427</th><th>456</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Change the displayed status */</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>428</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <del>if(setFreeFormStatus(phrase)){</del></span>\u00a0</td>\n                      </tr><tr>\n                        <th>429</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <del>&nbsp; &nbsp; &nbsp; &nbsp; setCurrentStatus(phrase);</del></span>\u00a0</td>\n                      </tr><tr>\n                        <th>430</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <del></del></span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>457</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <ins>updateStatusFromFreeForm(phrase);</ins></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>458</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <ins></ins></span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>459</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <ins>//TODO: In all of the setClassification's figure out when to train</ins></span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>431</th><th>460</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Add this instance to the training data */</span>\u00a0</td>\n                  </tr><tr>\n                          <th>432</th><th>461</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /*classification *c = newClassificationFreeForm(phrase);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>433</th><th>462</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureCollectionAddTrainingData(c);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>434</th><th>463</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; freeClassification(c);*/</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"last first\">\n                          <th>435</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>436</th><th>464</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>437</th><th>465</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>438</th><th>466</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>439</th><th>467</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>440</th><th>\u00a0</th><td class=\"l\"><span>static void updateStatusFromLocation(GtkEntry *entry)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>441</th><th>\u00a0</th><td class=\"l\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>442</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gchar *phrase;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>443</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>444</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; phrase = (gchar *)gtk_entry_get_text(GTK_ENTRY(entry));</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>468</th><td class=\"r\"><span>static void updateStatusFromLocation(gchar *phrase)</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>469</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>445</th><th>470</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setParseLocation(phrase);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>446</th><th>471</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; char *newStatus = makeStatusFromStoredParse();</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/client/gtk/plugins/nomatic/nomatic.c?rev=119#L451\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=123#L476\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>451</th><th>476</th><td class=\"l\"><span>static gboolean matchSelectedLocationCB(GtkEntryCompletion *widget,GtkTreeModel *model,GtkTreeIter *iter,GtkEntry *entry)&nbsp; &nbsp;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>452</th><th>477</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>453</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; updateStatusFromLocation(entry);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>478</th><td class=\"r\"><span>GValue *v1;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>479</th><td class=\"r\"><span>gchar *value = NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>480</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>481</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* Get the string value stored at this node */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>482</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; v1 = (GValue *) g_malloc0 (sizeof(GValue));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>483</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_tree_model_get_value(model,iter,0,v1);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>484</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; value = (gchar*) g_value_peek_pointer(v1);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>485</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; g_free(v1);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>486</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>487</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; updateStatusFromLocation(value);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>454</th><th>488</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>455</th><th>489</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>456</th><th>490</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>457</th><th>491</th><td class=\"l\"><span>// This function is triggered when the Nomatic Location Status is updated</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>458</th><th>\u00a0</th><td class=\"l\"><span>static gboolean</span>\u00a0</td>\n                      </tr><tr>\n                        <th>459</th><th>\u00a0</th><td class=\"l\"><span>setClassificationLocation (GtkEntry *entry, GdkEventKey *event, gpointer data)</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>492</th><td class=\"r\"><span>static gboolean setClassificationLocation (GtkEntry *entry, GdkEventKey *event, gpointer data)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>460</th><th>493</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>461</th><th>494</th><td class=\"l\"><span>gboolean handleIt = FALSE;</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/client/gtk/plugins/nomatic/nomatic.c?rev=119#L467\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=123#L500\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>467</th><th>500</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; handleIt = handleIt || isFocusOutEvent(event,data);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>468</th><th>501</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>469</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_misc(NULL,\"Nomatic: last key = %d, current key = %d, event is %s\\n\",lastKey, event-&gt;keyval, data);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>502</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; //gaim_debug_misc(NULL,\"Nomatic: Callback\\n\");</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>503</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; //gaim_debug_misc(NULL,\"Nomatic: last key = %d, current key = %d, event is %s\\n\",lastKey, event-&gt;keyval, data);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>470</th><th>504</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /*This is a wierd corner case when the completion list is empty, the user enters some text and then hits tab */</span>\u00a0</td>\n                  </tr><tr>\n                          <th>471</th><th>505</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if((lastKey == GDK_Tab) &amp;&amp; (event-&gt;keyval == 0) &amp;&amp; isFocusOutEvent(event,data)){</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/client/gtk/plugins/nomatic/nomatic.c?rev=119#L480\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=123#L514\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>480</th><th>514</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>481</th><th>515</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(handleIt){</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>516</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(completionSelected){</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>517</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; transferCompletionFieldToEntry(entry);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>518</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>519</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>520</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Manage the widget box */</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>482</th><th>521</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkEntryCompletion *completion;</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"first\">\n                          <th>483</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(completionSelected){</del>\u00a0</td>\n                  </tr><tr>\n                          <th>484</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completion = gtk_entry_get_completion(entry);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>485</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int selection = completion-&gt;priv-&gt;current_selected;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>486</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </del>\u00a0</td>\n                  </tr><tr>\n                          <th>487</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(selection != -1){</del>\u00a0</td>\n                  </tr><tr>\n                          <th>488</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkListStore *store;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>489</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; store = GTK_LIST_STORE(gtk_entry_completion_get_model(completion));</del>\u00a0</td>\n                  </tr><tr>\n                          <th>490</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </del>\u00a0</td>\n                  </tr><tr>\n                          <th>491</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Modify a particular row */</del>\u00a0</td>\n                  </tr><tr>\n                          <th>492</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkTreeIter iter;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>493</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkTreePath *path;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>494</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; path = gtk_tree_path_new_from_indices (selection,-1);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>495</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!gtk_tree_model_get_iter (GTK_TREE_MODEL (store),&amp;iter, path)){</del>\u00a0</td>\n                  </tr><tr>\n                          <th>496</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_fatal(NULL,\"Nomatic: Got a bad path\\n\");</del>\u00a0</td>\n                  </tr><tr>\n                          <th>497</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</del>\u00a0</td>\n                  </tr><tr>\n                          <th>498</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_tree_path_free (path);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>499</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>500</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char *str_data;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>501</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_tree_model_get(GTK_TREE_MODEL(store),&amp;iter,0,&amp;str_data,-1);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>502</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_misc(NULL,\"Nomatic: Completion Selected %s\\n\",str_data);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>503</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text(GTK_ENTRY(entry),str_data);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>504</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; g_free(str_data);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>505</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</del>\u00a0</td>\n                  </tr><tr>\n                          <th>506</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</del>\u00a0</td>\n                  </tr><tr>\n                          <th>507</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </del>\u00a0</td>\n                  </tr><tr>\n                          <th>508</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Manage the widget box */</del>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>509</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //GtkEntryCompletion *completion;</del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>510</th><th>522</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completion = gtk_entry_get_completion(GTK_ENTRY(entry));</span>\u00a0</td>\n                  </tr><tr>\n                          <th>511</th><th>523</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; phrase = (gchar *)gtk_entry_get_text(GTK_ENTRY(entry));</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/client/gtk/plugins/nomatic/nomatic.c?rev=119#L513\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=123#L525\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>513</th><th>525</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>514</th><th>526</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Change the displayed status */</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>515</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; updateStatusFromLocation(<del>entry</del>);</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>527</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; updateStatusFromLocation(<ins>phrase</ins>);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>516</th><th>528</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>517</th><th>529</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Add this instance to the training data */</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/client/gtk/plugins/nomatic/nomatic.c?rev=119#L523\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=123#L535\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>523</th><th>535</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>524</th><th>536</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>537</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>538</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>539</th><td class=\"r\"><ins>static void updateStatusFromActivity(gchar *phrase)</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>540</th><td class=\"r\"><ins>{</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>541</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; setParseActivity(phrase);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>542</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; char *newStatus = makeStatusFromStoredParse();</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>543</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; setCurrentStatus(newStatus);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>544</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; free(newStatus);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>545</th><td class=\"r\"><ins>}</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>546</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>547</th><td class=\"r\"><ins>static gboolean matchSelectedActivityCB(GtkEntryCompletion *widget,GtkTreeModel *model,GtkTreeIter *iter,GtkEntry *entry)&nbsp; &nbsp;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>548</th><td class=\"r\"><ins>{</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>549</th><td class=\"r\"><ins>GValue *v1;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>550</th><td class=\"r\"><ins>gchar *value = NULL;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>551</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>552</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; /* Get the string value stored at this node */</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>553</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; v1 = (GValue *) g_malloc0 (sizeof(GValue));</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>554</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; gtk_tree_model_get_value(model,iter,0,v1);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>555</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; value = (gchar*) g_value_peek_pointer(v1);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>556</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; g_free(v1);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>557</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>558</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; updateStatusFromActivity(value);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>559</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>560</th><td class=\"r\"><ins>}</ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>561</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>525</th><th>562</th><td class=\"l\"><span>// This function is triggered when the Nomatic Activity Status is updated</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>526</th><th>\u00a0</th><td class=\"l\"><span>static gboolean</span>\u00a0</td>\n                      </tr><tr>\n                        <th>527</th><th>\u00a0</th><td class=\"l\"><span>setClassificationActivity (GtkEntry *entry, GdkEventKey *event, gpointer data)</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>563</th><td class=\"r\"><span>static gboolean setClassificationActivity (GtkEntry *entry, GdkEventKey *event, gpointer data)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>528</th><th>564</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr><tr>\n                          <th>529</th><th>565</th><td class=\"l\"><span>gboolean handleIt = FALSE;</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/client/gtk/plugins/nomatic/nomatic.c?rev=119#L539\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=123#L575\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>539</th><th>575</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completionSelected = FALSE;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>540</th><th>576</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>577</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; /* If the user hits Return and the textbox finds out about it then we don't want to get the phrase </ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>578</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* from the completion Entry*/</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>541</th><th>579</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(isReturnKey(event,data)){</span>\u00a0</td>\n                  </tr><tr>\n                          <th>542</th><th>580</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completionSelected = FALSE;</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/client/gtk/plugins/nomatic/nomatic.c?rev=119#L545\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=123#L583\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>545</th><th>583</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>546</th><th>584</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(handleIt){</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>585</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(completionSelected){</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>586</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; transferCompletionFieldToEntry(entry);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>587</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>588</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>589</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Manage the widget box */</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>547</th><th>590</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkEntryCompletion *completion;</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"first\">\n                          <th>548</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(completionSelected){</del>\u00a0</td>\n                  </tr><tr>\n                          <th>549</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completion = gtk_entry_get_completion(entry);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>550</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int selection = completion-&gt;priv-&gt;current_selected;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>551</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </del>\u00a0</td>\n                  </tr><tr>\n                          <th>552</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(selection != -1){</del>\u00a0</td>\n                  </tr><tr>\n                          <th>553</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkListStore *store;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>554</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; store = GTK_LIST_STORE(gtk_entry_completion_get_model(completion));</del>\u00a0</td>\n                  </tr><tr>\n                          <th>555</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </del>\u00a0</td>\n                  </tr><tr>\n                          <th>556</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Modify a particular row */</del>\u00a0</td>\n                  </tr><tr>\n                          <th>557</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkTreeIter iter;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>558</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkTreePath *path;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>559</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; path = gtk_tree_path_new_from_indices (selection,-1);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>560</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!gtk_tree_model_get_iter (GTK_TREE_MODEL (store),&amp;iter, path)){</del>\u00a0</td>\n                  </tr><tr>\n                          <th>561</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_fatal(NULL,\"Nomatic: Got a bad path\\n\");</del>\u00a0</td>\n                  </tr><tr>\n                          <th>562</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</del>\u00a0</td>\n                  </tr><tr>\n                          <th>563</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_tree_path_free (path);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>564</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>565</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char *str_data;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>566</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_tree_model_get(GTK_TREE_MODEL(store),&amp;iter,0,&amp;str_data,-1);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>567</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_misc(NULL,\"Nomatic: Completion Selected %s\\n\",str_data);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>568</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text(GTK_ENTRY(entry),str_data);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>569</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; g_free(str_data);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>570</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</del>\u00a0</td>\n                  </tr><tr>\n                          <th>571</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</del>\u00a0</td>\n                  </tr><tr>\n                          <th>572</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </del>\u00a0</td>\n                  </tr><tr>\n                          <th>573</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Manage the widget box */</del>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>574</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //GtkEntryCompletion *completion;</del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>575</th><th>591</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completion = gtk_entry_get_completion(GTK_ENTRY(entry));</span>\u00a0</td>\n                  </tr><tr>\n                          <th>576</th><th>592</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; phrase = (gchar *)gtk_entry_get_text(GTK_ENTRY(entry));</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/client/gtk/plugins/nomatic/nomatic.c?rev=119#L578\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=123#L594\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>578</th><th>594</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>579</th><th>595</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Change the displayed status */</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>580</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(setParseActivity(phrase)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>581</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char *newStatus = makeStatusFromStoredParse();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>582</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setCurrentStatus(newStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>583</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //free(newStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>584</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>596</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; updateStatusFromActivity(phrase);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>597</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>598</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //TODO: Decide about below</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>585</th><th>599</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Add this instance to the training data */</span>\u00a0</td>\n                  </tr><tr>\n                          <th>586</th><th>600</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /*classification *c = newClassificationParsed(getParseLocation(),getParseActivity(),getParseSocialStatus());</span>\u00a0</td>\n                  </tr><tr>\n                          <th>587</th><th>601</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureCollectionAddTrainingData(c);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>588</th><th>602</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; freeClassification(c);*/</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>589</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>590</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>603</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>604</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>605</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>606</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>607</th><td class=\"r\"><span>static void updateStatusFromSocialStatus(gchar *phrase)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>608</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>609</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setParseSocialStatus(phrase);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>610</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; char *newStatus = makeStatusFromStoredParse();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>611</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setCurrentStatus(newStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>612</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; free(newStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>613</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>614</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>615</th><td class=\"r\"><span>static gboolean matchSelectedSocialStatusCB(GtkEntryCompletion *widget,GtkTreeModel *model,GtkTreeIter *iter,GtkEntry *entry)&nbsp; &nbsp;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>616</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>617</th><td class=\"r\"><span>GValue *v1;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>618</th><td class=\"r\"><span>gchar *value = NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>619</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>620</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* Get the string value stored at this node */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>621</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; v1 = (GValue *) g_malloc0 (sizeof(GValue));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>622</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_tree_model_get_value(model,iter,0,v1);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>623</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; value = (gchar*) g_value_peek_pointer(v1);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>624</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; g_free(v1);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>625</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>626</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; updateStatusFromSocialStatus(value);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>591</th><th>627</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>592</th><th>628</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/client/gtk/plugins/nomatic/nomatic.c?rev=119#L608\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=123#L644\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>608</th><th>644</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completionSelected = FALSE;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>609</th><th>645</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>646</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; /* If the user hits Return and the textbox finds out about it then we don't want to get the phrase </ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>647</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* from the completion Entry*/</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>610</th><th>648</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(isReturnKey(event,data)){</span>\u00a0</td>\n                  </tr><tr>\n                          <th>611</th><th>649</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completionSelected = FALSE;</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/client/gtk/plugins/nomatic/nomatic.c?rev=119#L614\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=123#L652\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>614</th><th>652</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>615</th><th>653</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(handleIt){</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>654</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(completionSelected){</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>655</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; transferCompletionFieldToEntry(entry);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>656</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>657</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>658</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Manage the widget box */</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>616</th><th>659</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkEntryCompletion *completion;</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"first\">\n                          <th>617</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(completionSelected){</del>\u00a0</td>\n                  </tr><tr>\n                          <th>618</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completion = gtk_entry_get_completion(entry);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>619</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int selection = completion-&gt;priv-&gt;current_selected;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>620</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </del>\u00a0</td>\n                  </tr><tr>\n                          <th>621</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(selection != -1){</del>\u00a0</td>\n                  </tr><tr>\n                          <th>622</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkListStore *store;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>623</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; store = GTK_LIST_STORE(gtk_entry_completion_get_model(completion));</del>\u00a0</td>\n                  </tr><tr>\n                          <th>624</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </del>\u00a0</td>\n                  </tr><tr>\n                          <th>625</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Modify a particular row */</del>\u00a0</td>\n                  </tr><tr>\n                          <th>626</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkTreeIter iter;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>627</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GtkTreePath *path;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>628</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; path = gtk_tree_path_new_from_indices (selection,-1);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>629</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!gtk_tree_model_get_iter (GTK_TREE_MODEL (store),&amp;iter, path)){</del>\u00a0</td>\n                  </tr><tr>\n                          <th>630</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_fatal(NULL,\"Nomatic: Got a bad path\\n\");</del>\u00a0</td>\n                  </tr><tr>\n                          <th>631</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</del>\u00a0</td>\n                  </tr><tr>\n                          <th>632</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_tree_path_free (path);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>633</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>634</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char *str_data;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>635</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_tree_model_get(GTK_TREE_MODEL(store),&amp;iter,0,&amp;str_data,-1);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</del>\u00a0</td>\n                  </tr><tr>\n                          <th>636</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_misc(NULL,\"Nomatic: Completion Selected %s\\n\",str_data);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>637</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text(GTK_ENTRY(entry),str_data);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>638</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; g_free(str_data);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>639</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</del>\u00a0</td>\n                  </tr><tr>\n                          <th>640</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</del>\u00a0</td>\n                  </tr><tr>\n                          <th>641</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </del>\u00a0</td>\n                  </tr><tr>\n                          <th>642</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Manage the widget box */</del>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>643</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //GtkEntryCompletion *completion;</del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>644</th><th>660</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; completion = gtk_entry_get_completion(GTK_ENTRY(entry));</span>\u00a0</td>\n                  </tr><tr>\n                          <th>645</th><th>661</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; phrase = (gchar *)gtk_entry_get_text(GTK_ENTRY(entry));</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/client/gtk/plugins/nomatic/nomatic.c?rev=119#L647\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=123#L663\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>647</th><th>663</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>648</th><th>664</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Change the displayed status */</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>649</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(setParseSocialStatus(phrase)){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>650</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; char *newStatus = makeStatusFromStoredParse();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>651</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setCurrentStatus(newStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>652</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //free(newStatus);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>653</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>665</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; updateStatusFromSocialStatus(phrase);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>666</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>667</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //TODO: Decide about below&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>654</th><th>668</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Add this instance to the training data */</span>\u00a0</td>\n                  </tr><tr>\n                          <th>655</th><th>669</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /*classification *c = newClassificationParsed(getParseLocation(),getParseActivity(),getParseSocialStatus());</span>\u00a0</td>\n                  </tr><tr>\n                          <th>656</th><th>670</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; featureCollectionAddTrainingData(c);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>657</th><th>671</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; freeClassification(c);*/</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"last first\">\n                          <th>658</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>659</th><th>672</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>660</th><th>673</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return(FALSE);</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/client/gtk/plugins/nomatic/nomatic.c?rev=119#L788\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=123#L801\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>788</th><th>801</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>789</th><th>802</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; completion=initializeTextBoxWithCompletionField(locationTextbox);</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>790</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; g_signal_connect (G_OBJECT (completion), \"match-selected\", G_CALLBACK (matchSelectedLocationCB), <del>t</del>extbox);</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>803</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; g_signal_connect (G_OBJECT (completion), \"match-selected\", G_CALLBACK (matchSelectedLocationCB), <ins>locationT</ins>extbox);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>791</th><th>804</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>792</th><th>805</th><td class=\"l\"><span>&nbsp; &nbsp; g_signal_connect (G_OBJECT (locationTextbox), \"key_press_event\",</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/client/gtk/plugins/nomatic/nomatic.c?rev=119#L799\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=123#L812\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>799</th><th>812</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>800</th><th>813</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Textbox - Activity</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>801</th><th>\u00a0</th><td class=\"l\"><span><del>/*</del>&nbsp; &nbsp; &nbsp; activityTextbox = gtk_entry_new();</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>814</th><td class=\"r\"><span><ins></ins>&nbsp; &nbsp; &nbsp; &nbsp; activityTextbox = gtk_entry_new();</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>802</th><th>815</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text (GTK_ENTRY (activityTextbox), \"using Nomatic*Gaim\");</span>\u00a0</td>\n                  </tr><tr>\n                          <th>803</th><th>816</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setParseActivity(gtk_entry_get_text(GTK_ENTRY (activityTextbox)));</span>\u00a0</td>\n                  </tr><tr>\n                          <th>804</th><th>817</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_widget_set_size_request (activityTextbox, 30, 20);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>805</th><th>818</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_box_pack_start(GTK_BOX(hbox_text), activityTextbox, TRUE, TRUE, 0);</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>806</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; initializeTextBoxWithCompletionField(activityTextbox);*/</span>\u00a0</td>\n                      </tr><tr>\n                        <th>807</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>819</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>820</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; completion=initializeTextBoxWithCompletionField(activityTextbox);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>821</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; g_signal_connect (G_OBJECT (completion), \"match-selected\", G_CALLBACK (matchSelectedActivityCB), activityTextbox);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>822</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>823</th><td class=\"r\"><span>&nbsp; &nbsp; g_signal_connect (G_OBJECT (activityTextbox), \"key_press_event\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>824</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (setClassificationActivity), \"key_press_event\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>825</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>826</th><td class=\"r\"><span>&nbsp; &nbsp; g_signal_connect (G_OBJECT (activityTextbox), \"focus_out_event\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>827</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (setClassificationActivity), \"focus_out_event\");</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>828</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>808</th><th>829</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Textbox - Social Status</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>809</th><th>\u00a0</th><td class=\"l\"><span><del>/*</del>&nbsp; &nbsp; &nbsp; socialStatusTextbox = gtk_entry_new();</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>830</th><td class=\"r\"><span><ins></ins>&nbsp; &nbsp; &nbsp; &nbsp; socialStatusTextbox = gtk_entry_new();</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>810</th><th>831</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_entry_set_text (GTK_ENTRY (socialStatusTextbox), \"by myself\");</span>\u00a0</td>\n                  </tr><tr>\n                          <th>811</th><th>832</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setParseSocialStatus(gtk_entry_get_text(GTK_ENTRY (socialStatusTextbox)));</span>\u00a0</td>\n                  </tr><tr>\n                          <th>812</th><th>833</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_widget_set_size_request (socialStatusTextbox, 30, 20);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>813</th><th>834</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_box_pack_start(GTK_BOX(hbox_text), socialStatusTextbox, TRUE, TRUE, 0);</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>814</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; initializeTextBoxWithCompletionField(socialStatusTextbox);*/</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>835</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>836</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; completion=initializeTextBoxWithCompletionField(socialStatusTextbox);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>837</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>838</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; g_signal_connect (G_OBJECT (completion), \"match-selected\", G_CALLBACK (matchSelectedSocialStatusCB), socialStatusTextbox);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>839</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>840</th><td class=\"r\"><span>&nbsp; &nbsp; g_signal_connect (G_OBJECT (socialStatusTextbox), \"key_press_event\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>841</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (setClassificationSocialStatus), \"key_press_event\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>842</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>843</th><td class=\"r\"><span>&nbsp; &nbsp; g_signal_connect (G_OBJECT (socialStatusTextbox), \"focus_out_event\",</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>844</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (setClassificationSocialStatus), \"focus_out_event\");</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>815</th><th>845</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>816</th><th>846</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; // Elements of hbox_cusLab - Label of Custom Message</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>817</th><th>\u00a0</th><td class=\"l\"><span><del>/*</del>&nbsp; &nbsp; &nbsp; label = gtk_label_new (\"Free Form Status Message\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>818</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_box_pack_start(GTK_BOX(hbox_cusLab), label, TRUE, TRUE, 0);<del>*/</del></span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>847</th><td class=\"r\"><span><ins></ins>&nbsp; &nbsp; &nbsp; &nbsp; label = gtk_label_new (\"Free Form Status Message\");</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>848</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_box_pack_start(GTK_BOX(hbox_cusLab), label, TRUE, TRUE, 0);<ins></ins></span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>819</th><th>849</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>820</th><th>850</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; // Elements of hbox_cus - Textfield of Custom Message</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>821</th><th>\u00a0</th><td class=\"l\"><span>/*&nbsp; &nbsp; &nbsp; freeFormTextbox = gtk_entry_new();*/</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>851</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; freeFormTextbox = gtk_entry_new();</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>822</th><th>852</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>823</th><th>853</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; //This loads the custom status box with the current status when the plug in kicks off</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>824</th><th>\u00a0</th><td class=\"l\"><span><del>/*</del>&nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>854</th><td class=\"r\"><span><ins></ins>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>825</th><th>855</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const char *message = gaim_savedstatus_get_message(gaim_savedstatus_get_current());</span>\u00a0</td>\n                  </tr><tr>\n                          <th>826</th><th>856</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(message != NULL)</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/client/gtk/plugins/nomatic/nomatic.c?rev=119#L831\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=123#L861\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>831</th><th>861</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; setFreeFormStatus(gtk_entry_get_text(GTK_ENTRY (freeFormTextbox)));</span>\u00a0</td>\n                  </tr><tr>\n                          <th>832</th><th>862</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gtk_box_pack_start(GTK_BOX(hbox_cus), freeFormTextbox, TRUE, TRUE, 0);</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>833</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; initializeTextBoxWithCompletionField(freeFormTextbox);*/</span>\u00a0</td>\n                      </tr><tr>\n                        <th>834</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>863</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; completion = initializeTextBoxWithCompletionField(freeFormTextbox);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>864</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>865</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; //TODO: Bring this back into the code</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>835</th><th>866</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /*featureCollectionTransferToCompletionField( locationTextbox,</span>\u00a0</td>\n                  </tr><tr>\n                          <th>836</th><th>867</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; activityTextbox,</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/client/gtk/plugins/nomatic/nomatic.c?rev=119#L838\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*Gaim/current/client/gtk/plugins/nomatic/nomatic.c?rev=123#L869\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>838</th><th>869</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; freeFormTextbox);*/</span>\u00a0</td>\n                  </tr><tr>\n                          <th>839</th><th>870</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>840</th><th>\u00a0</th><td class=\"l\"><span>/*&nbsp; &nbsp; g_signal_connect (G_OBJECT (activityTextbox), \"key_press_event\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>841</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (setClassificationActivity), \"key_press_event\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>842</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; g_signal_connect (G_OBJECT (socialStatusTextbox), \"key_press_event\",</span>\u00a0</td>\n                      </tr><tr>\n                        <th>843</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (setClassificationSocialStatus), \"key_press_event\");</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>871</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; g_signal_connect (G_OBJECT (completion), \"match-selected\", G_CALLBACK (matchSelectedFreeFormCB), freeFormTextbox);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>872</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>844</th><th>873</th><td class=\"l\"><span>&nbsp; &nbsp; g_signal_connect (G_OBJECT (freeFormTextbox), \"key_press_event\",</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>845</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (setClassificationFreeForm), \"key_press_event\");<del>*/</del></span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>874</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (setClassificationFreeForm), \"key_press_event\");<ins></ins></span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>846</th><th>875</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"first\">\n                          <th>847</th><th>\u00a0</th><td class=\"l\"><del>/*&nbsp; &nbsp; g_signal_connect (G_OBJECT (activityTextbox), \"focus_out_event\",</del>\u00a0</td>\n                  </tr><tr>\n                          <th>848</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (setClassificationActivity), \"focus_out_event\");</del>\u00a0</td>\n                  </tr><tr>\n                          <th>849</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; g_signal_connect (G_OBJECT (socialStatusTextbox), \"focus_out_event\",</del>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>850</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (setClassificationSocialStatus), \"focus_out_event\");</del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>851</th><th>876</th><td class=\"l\"><span>&nbsp; &nbsp; g_signal_connect (G_OBJECT (freeFormTextbox), \"focus_out_event\",</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>852</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (setClassificationFreeForm), \"focus_out_event\");<del>*/</del></span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>877</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; G_CALLBACK (setClassificationFreeForm), \"focus_out_event\");<ins></ins></span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>853</th><th>878</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>854</th><th>879</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n  </ul>\n</div>\n        <div id=\"help\"><strong>Note:</strong> See <a href=\"/LUCICodeRepository/nomaticIM/wiki/TracChangeset\">TracChangeset</a>\n          for help on using the changeset viewer.</div>\n      </div>\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"first\">\n          <a rel=\"nofollow\" href=\"?format=diff&amp;new=123\" class=\"diff\">Unified Diff</a>\n        </li><li class=\"last\">\n          <a rel=\"nofollow\" href=\"?format=zip&amp;new=123\" class=\"zip\">Zip Archive</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/LUCICodeRepository/nomaticIM/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/LUCICodeRepository/nomaticIM/about\"><strong>Trac 1.0.1</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">All content copyright 2007-2008 by LUCI <br /><a href=\"http://luci.ics.uci.edu/\">http://luci.ics.uci.edu/</a></p>\n    </div>\n\t\t<div id=\"sitefooter\">\n\t\t\t<script src=\"http://www.google-analytics.com/urchin.js\" type=\"text/javascript\">\n\t\t\t</script>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t\t_uacct = \"UA-338915-2\";\n\t\t\t\turchinTracker();\n\t\t\t</script>\n\t\t</div>\n\t</body>\n</html>", "id": 46282.0}