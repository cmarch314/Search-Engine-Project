{"text": "Program Analyses for Bloat Detection and Optimization About Despite the employment of faster CPUs and larger memory systems the levels of inefficiencies in real world programs grow surprisingly fast and there is an ever increasing demand for performance optimization in modern software Performance and scalability issues are becoming increasingly critical partly due to the pervasive use of object oriented programming languages The inefficiencies inherent in the implementation of an object oriented language as well as the commonly adopted design and implementation principles in the object oriented community often combine to hurt performance The community wide recognition of the importance of abstraction and reuse results in increased emphasis on modular design declaration of general interfaces and use of models and patterns Programmers are taught to focus first and foremost on them taking it for granted that compilers and run time systems can remove all the inefficiencies In a large program that is typically built on top of many layers of frameworks and libraries a small set of inefficiencies can multiply and quickly get magnified to slow down the system When the call stack grows to be deep the usefulness of the dataflow analyses in a dynamic compiler becomes limited and the optimizer can no longer remove these inefficiencies As a result many applications suffer from chronic run time performance problems that significantly affect scalability and performance This is a serious problem for real world software systems used every day by thousands of businesses The pressing need for new optimization techniques can be especially seen as object orientation goes everywhere into systems of any size The extensive use of object oriented languages in the development of memory constrained applications such as smartphone apps e g Java used in Android and C used in Windows phones and data intensive systems e g Hadoop Giraph and Hyracks introduces numerous research challenges these systems have small memory space but large amounts of data to process and inefficiencies in these systems can be significantly exacerbated The burden of reducing unnecessary work should not be only on the shoulder of hardware designers especially in the modern era when Moore s dividend becomes less obvious It strongly calls for higher level performance optimization techniques that can detect and remove inefficiencies for all categories of object oriented applications Our group has an established record on performance optimization for large scale systems Our recent efforts focus on the following projects 1 Providing efficient infrastructures for detecting bloat A recent piece of work focuses on the development of a tunable object lifetime profiling technique called Resurrector OOPSLA13 Many existing optimization techniques such as object pooling and pretenuring require precise identification of object lifetimes However it is particularly challenging to obtain object lifetimes both precisely and efficiently precise profiling techniques such as Merlin introduce several hundred times slowdown even for small programs while efficient approximation techniques often sacrifice precision and produce less useful lifetime information Resurrector solves the problem by exploring the middle ground between high precision and high efficiency to find the precision scalability sweetspot for various optimization techniques Resurrector s design is motivated by an important observation that the scalability bottleneck of a traditional OLP algorithm such as Merlin lies in the need to compute transitive closures on the dead objects e g Merlin s backward pass Resurrector improves efficiency by completely eliminating this need Similarly to Merlin Resurrector first identifies the root dead objects whose reference counts are zero Instead of computing transitive closures from them Resurrector exploits object caching and reusing to find dead objects transitively reachable from the roots that have non zero reference counts Another infrastructure we have built is a runtime framework that performs abstract dynamic slicing PLDI1 a TOSEM14 to identify performance problems that manifest themselves in dataflow activities Abstract dynamic slicing a technique that applies dynamic slicing over an abstract domain whose size is limited by bounds independent of the runtime execution This technique is embedded in the general framework parameterized by the abstract domain The output of this framework is an abstract dependence graph that contains abstractions of instructions rather than their actual runtime instances This new approach is motivated by the observation that a client of dynamic slicing often needs to access only a small portion of the complete execution trace collected by a regular slicing algorithm and thus tremendous effort is wasted on collecting information not used by the client The runtime space and time overhead can be significantly reduced if the slicing algorithm is client aware that is it understands what information would be needed by its client and records only such information during the execution Abstract dynamic slicing makes this possible by asking the analysis developer to provide an abstraction that specifies this knowledge 2 Improved performance debugging and testing Performance problems in a large scale application are extremely difficult to find Traditional performance test oracles such as time memory checks are coarse grained and subjective as a result performance bugs often escape to production runs hurting software reliability and user experience We are in the process of developing a general technique called PerfBlower that can amplify the effects of a class of performance problems whose symptoms can be described by logical statements over a history of heap updates as well as provide precise diagnostic information Amplification serves as an automated test oracle because it increases memory consumption significantly for tests that trigger performance problems while having a very small impact on bug free runs As a result developers can easily divide tests into successful and failing runs and focus their effort on failing testsMore information about PerfBlower will be reported later Caching resuing opportunities can often be found in large scale applications A big source of run time performance problems in large scale object oriented applications is the frequent creation of data structures whose lifetimes are disjoint and whose shapes and data content are always the same Constructing these data structures and computing the same data values many times is expensive significant performance improvements can be achieved by reusing their instances shapes and or data values rather than reconstructing them We first classify cachine resuing opportunities into three categories instance reusability shape reusability and data reusability OOPSLA12 We next develop scalable runtime techniques that can quickly detect these opportunities by exploiting cooperative compiler and runtime system support For example work from OOPSLA12 is a technique that piggybacks on GC to find reuse opportunities while Cachetor FSE13 relies on heavyweight dependence profiling to understand if data values are cacheable 3 Adaptive selection of algorithms and data structures An important source of runtime bloat is the inefficient use of container implementations Standard libraries of object oriented languages such as Java and C contain collection frameworks that provide with users for each abstract data type such as List many different implementations such as ArrayList and LinkedList each of which features a different design choice suitable for a specific execution scenario However in real world development choosing the most appropriate container implementation is challenging As a result developers tend to keep using the implementations that are most general or well known e g HashSet for Set regardless of whether or not they fit the usage context We develop a novel container optimization technique called CoCo that is able to 1 determine at run time for each container instance e g a LinkedList object used in the program whether or not there exists another container implementation e g ArrayList that is more suitable for the execution and 2 automatically and safely switch to this new container implementation e g replace the old LinkedList object with a new ArrayList object online for increased efficiency While there exists work such as Chameleon and Brainy that could identify Java collection inefficiencies and report them to users for offline inspection none of these techniques can change implementations online Details about CoCo can found in the ECOOP13 paper In collaboration with the information system group we are currently developing techniques that can automatically select table joining algorithms for message based Big Data systems such as graph processing systems Details of this project will be reported later 4 Static and dynamic detection of Java memory leaks In managed languages such as Java and C developers do not need to worry about memory correctness issues such as dangling pointers and double free errors However it remains challenging to avoid leaks A memory leak in a managed language is caused by keeping unnecessary references to objects that are no longer used These objects cannot be reclaimed by the garbage collector GC often leading to severe performance degradation and even program crashes We have developed both static and dynamic techniques for memory leak detection In particular we propose LeakChaser PLDI11 a specification based leak detector that exploits user insight expressed in the form of liveness assertions to narrow down causes of memory leaks Another attractive direction is to perform static leak detection because it does not rely on any leak triggering inputs allowing compile time tools to find leaks before software is released A long standing issue that prevents practical static memory leak detection for Java is that it can be very expensive to statically determine object liveness in large applications We present a practical static leak detection technique called LeakChecker CGO14 that bypasses this problem by considering a common leak pattern In many cases severe leaks occur in loops where in each iteration some objects created by the iteration are unnecessarily referenced by objects external to the loop These unnecessary references are never used in later loop iterations Based on this insight we shift our focus from computing liveness which is very difficult to achieve precisely and efficiently for large programs to the easier goal of identifying objects that flow out of a loop but never flow back in Papers o LeakChecker Practical Static Memory Leak Detection for Managed Languages Dacong Yan Guoqing Harry Xu Shengqian Yang and Atanas Rountev CGO 14 International Conference on Code Generation and Optimization Slides o Scalable Runtime Bloat Detection Using Abstract Dynamic Slicing Guoqing Harry Xu Nick Mitchell Matthew Arnold Atanas Rountev Edith Schonberg and Gary Sevitsky TOSEM 14 ACM Transactions on Software Engineering and Methodology o Resurrector A Tunable Object Lifetime Profiling Technique for Optimizing Real World Programs Guoqing Harry Xu OOPSLA 13 ACM SIGPLAN Conference on Object Oriented Programming Systems Language and Applications Slides o Cachetor Detecting Cacheable Data to Remove Bloat Khanh Nguyen and Guoqing Harry Xu FSE 13 ACM SIGSOFT Symposium on the Foundations of Software Engineering Slides o CoCo Sound and Adaptive Replacement of Java Collections Guoqing Harry Xu ECOOP 13 European Conference on Object Oriented Programming Slides o Finding Reusable Data Structures Guoqing Harry Xu OOPSLA 12 ACM SIGPLAN Conference on Object Oriented Programming Systems Language and Applications Slides People o Lu Fang o Khanh Nguyen o Harry Xu Software o LeakChaser a specification based memory leak detector for Java o Resurrector a tunable object lifetime profiling tool based on Jikes RVM Support This research is funded in part by NSF under grants CNS 1321179 and CCF 14 982 and by ONR under grant N 14 14 1 549 main page", "_id": "http://www.ics.uci.edu/~guoqingx/research/projects/bloat.html", "title": "program analyses for bloat detection and optimization", "html": "<html xmlns:v=\"urn:schemas-microsoft-com:vml\"\r\nxmlns:o=\"urn:schemas-microsoft-com:office:office\"\r\nxmlns:w=\"urn:schemas-microsoft-com:office:word\"\r\nxmlns:m=\"http://schemas.microsoft.com/office/2004/12/omml\"\r\nxmlns=\"http://www.w3.org/TR/REC-html40\">\r\n\r\n<head>\r\n<meta http-equiv=Content-Type content=\"text/html; charset=windows-1252\">\r\n<meta name=ProgId content=Word.Document>\r\n<meta name=Generator content=\"Microsoft Word 14\">\r\n<meta name=Originator content=\"Microsoft Word 14\">\r\n<link rel=File-List href=\"bloat_files/filelist.xml\">\r\n<link rel=Edit-Time-Data href=\"bloat_files/editdata.mso\">\r\n<!--[if !mso]>\r\n<style>\r\nv\\:* {behavior:url(#default#VML);}\r\no\\:* {behavior:url(#default#VML);}\r\nw\\:* {behavior:url(#default#VML);}\r\n.shape {behavior:url(#default#VML);}\r\n</style>\r\n<![endif]-->\r\n<title>Program Analyses for Bloat Detection and Optimization</title>\r\n<!--[if gte mso 9]><xml>\r\n <o:DocumentProperties>\r\n  <o:Author>harrygxu</o:Author>\r\n  <o:LastAuthor>harrygxu</o:LastAuthor>\r\n  <o:Revision>23</o:Revision>\r\n  <o:TotalTime>267</o:TotalTime>\r\n  <o:Created>2014-07-25T18:45:00Z</o:Created>\r\n  <o:LastSaved>2014-07-25T21:51:00Z</o:LastSaved>\r\n  <o:Pages>2</o:Pages>\r\n  <o:Words>2088</o:Words>\r\n  <o:Characters>11902</o:Characters>\r\n  <o:Lines>99</o:Lines>\r\n  <o:Paragraphs>27</o:Paragraphs>\r\n  <o:CharactersWithSpaces>13963</o:CharactersWithSpaces>\r\n  <o:Version>14.00</o:Version>\r\n </o:DocumentProperties>\r\n <o:OfficeDocumentSettings>\r\n  <o:AllowPNG/>\r\n </o:OfficeDocumentSettings>\r\n</xml><![endif]-->\r\n<link rel=themeData href=\"bloat_files/themedata.thmx\">\r\n<link rel=colorSchemeMapping href=\"bloat_files/colorschememapping.xml\">\r\n<!--[if gte mso 9]><xml>\r\n <w:WordDocument>\r\n  <w:Zoom>91</w:Zoom>\r\n  <w:SpellingState>Clean</w:SpellingState>\r\n  <w:GrammarState>Clean</w:GrammarState>\r\n  <w:TrackMoves>false</w:TrackMoves>\r\n  <w:TrackFormatting/>\r\n  <w:ValidateAgainstSchemas/>\r\n  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>\r\n  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>\r\n  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>\r\n  <w:DoNotPromoteQF/>\r\n  <w:LidThemeOther>EN-US</w:LidThemeOther>\r\n  <w:LidThemeAsian>X-NONE</w:LidThemeAsian>\r\n  <w:LidThemeComplexScript>X-NONE</w:LidThemeComplexScript>\r\n  <w:Compatibility>\r\n   <w:BreakWrappedTables/>\r\n   <w:SplitPgBreakAndParaMark/>\r\n   <w:UseFELayout/>\r\n  </w:Compatibility>\r\n  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>\r\n  <m:mathPr>\r\n   <m:mathFont m:val=\"Cambria Math\"/>\r\n   <m:brkBin m:val=\"before\"/>\r\n   <m:brkBinSub m:val=\"&#45;-\"/>\r\n   <m:smallFrac m:val=\"off\"/>\r\n   <m:dispDef/>\r\n   <m:lMargin m:val=\"0\"/>\r\n   <m:rMargin m:val=\"0\"/>\r\n   <m:defJc m:val=\"centerGroup\"/>\r\n   <m:wrapIndent m:val=\"1440\"/>\r\n   <m:intLim m:val=\"subSup\"/>\r\n   <m:naryLim m:val=\"undOvr\"/>\r\n  </m:mathPr></w:WordDocument>\r\n</xml><![endif]--><!--[if gte mso 9]><xml>\r\n <w:LatentStyles DefLockedState=\"false\" DefUnhideWhenUsed=\"true\"\r\n  DefSemiHidden=\"true\" DefQFormat=\"false\" DefPriority=\"99\"\r\n  LatentStyleCount=\"267\">\r\n  <w:LsdException Locked=\"false\" Priority=\"0\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" QFormat=\"true\" Name=\"Normal\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" QFormat=\"true\" Name=\"heading 1\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"9\" QFormat=\"true\" Name=\"heading 2\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"9\" QFormat=\"true\" Name=\"heading 3\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"9\" QFormat=\"true\" Name=\"heading 4\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"9\" QFormat=\"true\" Name=\"heading 5\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"9\" QFormat=\"true\" Name=\"heading 6\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"9\" QFormat=\"true\" Name=\"heading 7\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"9\" QFormat=\"true\" Name=\"heading 8\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"9\" QFormat=\"true\" Name=\"heading 9\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"39\" Name=\"toc 1\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"39\" Name=\"toc 2\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"39\" Name=\"toc 3\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"39\" Name=\"toc 4\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"39\" Name=\"toc 5\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"39\" Name=\"toc 6\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"39\" Name=\"toc 7\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"39\" Name=\"toc 8\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"39\" Name=\"toc 9\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"35\" QFormat=\"true\" Name=\"caption\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"10\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" QFormat=\"true\" Name=\"Title\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"1\" Name=\"Default Paragraph Font\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"11\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" QFormat=\"true\" Name=\"Subtitle\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"22\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" QFormat=\"true\" Name=\"Strong\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"20\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" QFormat=\"true\" Name=\"Emphasis\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"59\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Table Grid\"/>\r\n  <w:LsdException Locked=\"false\" UnhideWhenUsed=\"false\" Name=\"Placeholder Text\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"1\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" QFormat=\"true\" Name=\"No Spacing\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"60\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Light Shading\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"61\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Light List\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"62\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Light Grid\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"63\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Shading 1\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"64\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Shading 2\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"65\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium List 1\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"66\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium List 2\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"67\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Grid 1\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"68\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Grid 2\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"69\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Grid 3\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"70\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Dark List\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"71\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Colorful Shading\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"72\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Colorful List\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"73\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Colorful Grid\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"60\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Light Shading Accent 1\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"61\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Light List Accent 1\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"62\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Light Grid Accent 1\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"63\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Shading 1 Accent 1\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"64\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Shading 2 Accent 1\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"65\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium List 1 Accent 1\"/>\r\n  <w:LsdException Locked=\"false\" UnhideWhenUsed=\"false\" Name=\"Revision\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"34\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" QFormat=\"true\" Name=\"List Paragraph\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"29\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" QFormat=\"true\" Name=\"Quote\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"30\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" QFormat=\"true\" Name=\"Intense Quote\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"66\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium List 2 Accent 1\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"67\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Grid 1 Accent 1\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"68\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Grid 2 Accent 1\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"69\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Grid 3 Accent 1\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"70\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Dark List Accent 1\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"71\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Colorful Shading Accent 1\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"72\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Colorful List Accent 1\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"73\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Colorful Grid Accent 1\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"60\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Light Shading Accent 2\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"61\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Light List Accent 2\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"62\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Light Grid Accent 2\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"63\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Shading 1 Accent 2\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"64\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Shading 2 Accent 2\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"65\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium List 1 Accent 2\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"66\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium List 2 Accent 2\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"67\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Grid 1 Accent 2\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"68\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Grid 2 Accent 2\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"69\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Grid 3 Accent 2\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"70\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Dark List Accent 2\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"71\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Colorful Shading Accent 2\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"72\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Colorful List Accent 2\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"73\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Colorful Grid Accent 2\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"60\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Light Shading Accent 3\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"61\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Light List Accent 3\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"62\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Light Grid Accent 3\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"63\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Shading 1 Accent 3\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"64\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Shading 2 Accent 3\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"65\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium List 1 Accent 3\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"66\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium List 2 Accent 3\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"67\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Grid 1 Accent 3\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"68\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Grid 2 Accent 3\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"69\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Grid 3 Accent 3\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"70\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Dark List Accent 3\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"71\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Colorful Shading Accent 3\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"72\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Colorful List Accent 3\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"73\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Colorful Grid Accent 3\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"60\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Light Shading Accent 4\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"61\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Light List Accent 4\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"62\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Light Grid Accent 4\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"63\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Shading 1 Accent 4\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"64\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Shading 2 Accent 4\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"65\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium List 1 Accent 4\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"66\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium List 2 Accent 4\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"67\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Grid 1 Accent 4\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"68\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Grid 2 Accent 4\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"69\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Grid 3 Accent 4\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"70\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Dark List Accent 4\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"71\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Colorful Shading Accent 4\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"72\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Colorful List Accent 4\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"73\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Colorful Grid Accent 4\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"60\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Light Shading Accent 5\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"61\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Light List Accent 5\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"62\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Light Grid Accent 5\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"63\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Shading 1 Accent 5\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"64\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Shading 2 Accent 5\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"65\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium List 1 Accent 5\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"66\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium List 2 Accent 5\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"67\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Grid 1 Accent 5\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"68\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Grid 2 Accent 5\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"69\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Grid 3 Accent 5\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"70\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Dark List Accent 5\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"71\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Colorful Shading Accent 5\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"72\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Colorful List Accent 5\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"73\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Colorful Grid Accent 5\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"60\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Light Shading Accent 6\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"61\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Light List Accent 6\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"62\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Light Grid Accent 6\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"63\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Shading 1 Accent 6\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"64\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Shading 2 Accent 6\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"65\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium List 1 Accent 6\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"66\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium List 2 Accent 6\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"67\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Grid 1 Accent 6\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"68\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Grid 2 Accent 6\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"69\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Medium Grid 3 Accent 6\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"70\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Dark List Accent 6\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"71\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Colorful Shading Accent 6\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"72\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Colorful List Accent 6\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"73\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" Name=\"Colorful Grid Accent 6\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"19\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" QFormat=\"true\" Name=\"Subtle Emphasis\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"21\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" QFormat=\"true\" Name=\"Intense Emphasis\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"31\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" QFormat=\"true\" Name=\"Subtle Reference\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"32\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" QFormat=\"true\" Name=\"Intense Reference\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"33\" SemiHidden=\"false\"\r\n   UnhideWhenUsed=\"false\" QFormat=\"true\" Name=\"Book Title\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"37\" Name=\"Bibliography\"/>\r\n  <w:LsdException Locked=\"false\" Priority=\"39\" QFormat=\"true\" Name=\"TOC Heading\"/>\r\n </w:LatentStyles>\r\n</xml><![endif]-->\r\n<style>\r\n<!--\r\n /* Font Definitions */\r\n @font-face\r\n\t{font-family:Courier;\r\n\tpanose-1:2 7 4 9 2 2 5 2 4 4;\r\n\tmso-font-alt:\"Courier New\";\r\n\tmso-font-charset:0;\r\n\tmso-generic-font-family:modern;\r\n\tmso-font-format:other;\r\n\tmso-font-pitch:fixed;\r\n\tmso-font-signature:3 0 0 0 1 0;}\r\n@font-face\r\n\t{font-family:Wingdings;\r\n\tpanose-1:5 0 0 0 0 0 0 0 0 0;\r\n\tmso-font-charset:2;\r\n\tmso-generic-font-family:auto;\r\n\tmso-font-pitch:variable;\r\n\tmso-font-signature:0 268435456 0 0 -2147483648 0;}\r\n@font-face\r\n\t{font-family:SimSun;\r\n\tpanose-1:2 1 6 0 3 1 1 1 1 1;\r\n\tmso-font-alt:\\5B8B\\4F53;\r\n\tmso-font-charset:134;\r\n\tmso-generic-font-family:auto;\r\n\tmso-font-pitch:variable;\r\n\tmso-font-signature:3 680460288 22 0 262145 0;}\r\n@font-face\r\n\t{font-family:\"Cambria Math\";\r\n\tpanose-1:2 4 5 3 5 4 6 3 2 4;\r\n\tmso-font-charset:0;\r\n\tmso-generic-font-family:roman;\r\n\tmso-font-pitch:variable;\r\n\tmso-font-signature:-536870145 1107305727 0 0 415 0;}\r\n@font-face\r\n\t{font-family:Tahoma;\r\n\tpanose-1:2 11 6 4 3 5 4 4 2 4;\r\n\tmso-font-charset:0;\r\n\tmso-generic-font-family:swiss;\r\n\tmso-font-pitch:variable;\r\n\tmso-font-signature:-520081665 -1073717157 41 0 66047 0;}\r\n@font-face\r\n\t{font-family:NimbusRomNo9L-Regu;\r\n\tpanose-1:0 0 0 0 0 0 0 0 0 0;\r\n\tmso-font-charset:0;\r\n\tmso-generic-font-family:roman;\r\n\tmso-font-format:other;\r\n\tmso-font-pitch:auto;\r\n\tmso-font-signature:3 0 0 0 1 0;}\r\n@font-face\r\n\t{font-family:\"Times New Roman \\; color\\:black\";\r\n\tpanose-1:0 0 0 0 0 0 0 0 0 0;\r\n\tmso-font-charset:0;\r\n\tmso-generic-font-family:roman;\r\n\tmso-font-format:other;\r\n\tmso-font-pitch:auto;\r\n\tmso-font-signature:0 0 0 0 0 0;}\r\n@font-face\r\n\t{font-family:\"\\@SimSun\";\r\n\tpanose-1:2 1 6 0 3 1 1 1 1 1;\r\n\tmso-font-charset:134;\r\n\tmso-generic-font-family:auto;\r\n\tmso-font-pitch:variable;\r\n\tmso-font-signature:3 680460288 22 0 262145 0;}\r\n@font-face\r\n\t{font-family:Times-Roman;\r\n\tpanose-1:0 0 0 0 0 0 0 0 0 0;\r\n\tmso-font-charset:0;\r\n\tmso-generic-font-family:roman;\r\n\tmso-font-format:other;\r\n\tmso-font-pitch:auto;\r\n\tmso-font-signature:3 0 0 0 1 0;}\r\n@font-face\r\n\t{font-family:Times-Italic;\r\n\tpanose-1:0 0 0 0 0 0 0 0 0 0;\r\n\tmso-font-charset:0;\r\n\tmso-generic-font-family:roman;\r\n\tmso-font-format:other;\r\n\tmso-font-pitch:auto;\r\n\tmso-font-signature:3 0 0 0 1 0;}\r\n /* Style Definitions */\r\n p.MsoNormal, li.MsoNormal, div.MsoNormal\r\n\t{mso-style-unhide:no;\r\n\tmso-style-qformat:yes;\r\n\tmso-style-parent:\"\";\r\n\tmargin:0in;\r\n\tmargin-bottom:.0001pt;\r\n\tmso-pagination:widow-orphan;\r\n\tfont-size:12.0pt;\r\n\tfont-family:\"Times New Roman\",\"serif\";\r\n\tmso-fareast-font-family:\"Times New Roman\";\r\n\tmso-fareast-theme-font:minor-fareast;}\r\nh1\r\n\t{mso-style-priority:9;\r\n\tmso-style-unhide:no;\r\n\tmso-style-qformat:yes;\r\n\tmso-style-link:\"Heading 1 Char\";\r\n\tmso-margin-top-alt:auto;\r\n\tmargin-right:0in;\r\n\tmso-margin-bottom-alt:auto;\r\n\tmargin-left:0in;\r\n\tmso-pagination:widow-orphan;\r\n\tmso-outline-level:1;\r\n\tfont-size:24.0pt;\r\n\tfont-family:\"Times New Roman\",\"serif\";\r\n\tmso-fareast-font-family:\"Times New Roman\";\r\n\tmso-fareast-theme-font:minor-fareast;}\r\na:link, span.MsoHyperlink\r\n\t{mso-style-priority:99;\r\n\tcolor:blue;\r\n\ttext-decoration:underline;\r\n\ttext-underline:single;}\r\na:visited, span.MsoHyperlinkFollowed\r\n\t{mso-style-noshow:yes;\r\n\tmso-style-priority:99;\r\n\tcolor:purple;\r\n\ttext-decoration:underline;\r\n\ttext-underline:single;}\r\np.MsoAcetate, li.MsoAcetate, div.MsoAcetate\r\n\t{mso-style-noshow:yes;\r\n\tmso-style-priority:99;\r\n\tmso-style-link:\"Balloon Text Char\";\r\n\tmargin:0in;\r\n\tmargin-bottom:.0001pt;\r\n\tmso-pagination:widow-orphan;\r\n\tfont-size:8.0pt;\r\n\tfont-family:\"Tahoma\",\"sans-serif\";\r\n\tmso-fareast-font-family:\"Times New Roman\";\r\n\tmso-fareast-theme-font:minor-fareast;}\r\np.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph\r\n\t{mso-style-priority:34;\r\n\tmso-style-unhide:no;\r\n\tmso-style-qformat:yes;\r\n\tmargin-top:0in;\r\n\tmargin-right:0in;\r\n\tmargin-bottom:0in;\r\n\tmargin-left:.5in;\r\n\tmargin-bottom:.0001pt;\r\n\tmso-add-space:auto;\r\n\tmso-pagination:widow-orphan;\r\n\tfont-size:12.0pt;\r\n\tfont-family:\"Times New Roman\",\"serif\";\r\n\tmso-fareast-font-family:\"Times New Roman\";\r\n\tmso-fareast-theme-font:minor-fareast;}\r\np.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst\r\n\t{mso-style-priority:34;\r\n\tmso-style-unhide:no;\r\n\tmso-style-qformat:yes;\r\n\tmso-style-type:export-only;\r\n\tmargin-top:0in;\r\n\tmargin-right:0in;\r\n\tmargin-bottom:0in;\r\n\tmargin-left:.5in;\r\n\tmargin-bottom:.0001pt;\r\n\tmso-add-space:auto;\r\n\tmso-pagination:widow-orphan;\r\n\tfont-size:12.0pt;\r\n\tfont-family:\"Times New Roman\",\"serif\";\r\n\tmso-fareast-font-family:\"Times New Roman\";\r\n\tmso-fareast-theme-font:minor-fareast;}\r\np.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle\r\n\t{mso-style-priority:34;\r\n\tmso-style-unhide:no;\r\n\tmso-style-qformat:yes;\r\n\tmso-style-type:export-only;\r\n\tmargin-top:0in;\r\n\tmargin-right:0in;\r\n\tmargin-bottom:0in;\r\n\tmargin-left:.5in;\r\n\tmargin-bottom:.0001pt;\r\n\tmso-add-space:auto;\r\n\tmso-pagination:widow-orphan;\r\n\tfont-size:12.0pt;\r\n\tfont-family:\"Times New Roman\",\"serif\";\r\n\tmso-fareast-font-family:\"Times New Roman\";\r\n\tmso-fareast-theme-font:minor-fareast;}\r\np.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast\r\n\t{mso-style-priority:34;\r\n\tmso-style-unhide:no;\r\n\tmso-style-qformat:yes;\r\n\tmso-style-type:export-only;\r\n\tmargin-top:0in;\r\n\tmargin-right:0in;\r\n\tmargin-bottom:0in;\r\n\tmargin-left:.5in;\r\n\tmargin-bottom:.0001pt;\r\n\tmso-add-space:auto;\r\n\tmso-pagination:widow-orphan;\r\n\tfont-size:12.0pt;\r\n\tfont-family:\"Times New Roman\",\"serif\";\r\n\tmso-fareast-font-family:\"Times New Roman\";\r\n\tmso-fareast-theme-font:minor-fareast;}\r\nspan.Heading1Char\r\n\t{mso-style-name:\"Heading 1 Char\";\r\n\tmso-style-priority:9;\r\n\tmso-style-unhide:no;\r\n\tmso-style-locked:yes;\r\n\tmso-style-link:\"Heading 1\";\r\n\tmso-ansi-font-size:14.0pt;\r\n\tmso-bidi-font-size:14.0pt;\r\n\tfont-family:\"Cambria\",\"serif\";\r\n\tmso-ascii-font-family:Cambria;\r\n\tmso-ascii-theme-font:major-latin;\r\n\tmso-fareast-font-family:\"Times New Roman\";\r\n\tmso-fareast-theme-font:major-fareast;\r\n\tmso-hansi-font-family:Cambria;\r\n\tmso-hansi-theme-font:major-latin;\r\n\tmso-bidi-font-family:\"Times New Roman\";\r\n\tmso-bidi-theme-font:major-bidi;\r\n\tcolor:#365F91;\r\n\tmso-themecolor:accent1;\r\n\tmso-themeshade:191;\r\n\tfont-weight:bold;}\r\nspan.BalloonTextChar\r\n\t{mso-style-name:\"Balloon Text Char\";\r\n\tmso-style-noshow:yes;\r\n\tmso-style-priority:99;\r\n\tmso-style-unhide:no;\r\n\tmso-style-locked:yes;\r\n\tmso-style-link:\"Balloon Text\";\r\n\tmso-ansi-font-size:8.0pt;\r\n\tmso-bidi-font-size:8.0pt;\r\n\tfont-family:\"Tahoma\",\"sans-serif\";\r\n\tmso-ascii-font-family:Tahoma;\r\n\tmso-fareast-font-family:\"Times New Roman\";\r\n\tmso-fareast-theme-font:minor-fareast;\r\n\tmso-hansi-font-family:Tahoma;\r\n\tmso-bidi-font-family:Tahoma;}\r\nspan.spelle\r\n\t{mso-style-name:spelle;\r\n\tmso-style-unhide:no;}\r\nspan.SpellE\r\n\t{mso-style-name:\"\";\r\n\tmso-spl-e:yes;}\r\nspan.GramE\r\n\t{mso-style-name:\"\";\r\n\tmso-gram-e:yes;}\r\n.MsoChpDefault\r\n\t{mso-style-type:export-only;\r\n\tmso-default-props:yes;\r\n\tfont-size:10.0pt;\r\n\tmso-ansi-font-size:10.0pt;\r\n\tmso-bidi-font-size:10.0pt;\r\n\tmso-fareast-font-family:SimSun;}\r\n@page WordSection1\r\n\t{size:8.5in 11.0in;\r\n\tmargin:1.0in 1.0in 1.0in 1.0in;\r\n\tmso-header-margin:.5in;\r\n\tmso-footer-margin:.5in;\r\n\tmso-paper-source:0;}\r\ndiv.WordSection1\r\n\t{page:WordSection1;}\r\n /* List Definitions */\r\n @list l0\r\n\t{mso-list-id:1530991976;\r\n\tmso-list-type:hybrid;\r\n\tmso-list-template-ids:1773672824 67698691 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}\r\n@list l0:level1\r\n\t{mso-level-number-format:bullet;\r\n\tmso-level-text:o;\r\n\tmso-level-tab-stop:none;\r\n\tmso-level-number-position:left;\r\n\ttext-indent:-.25in;\r\n\tfont-family:\"Courier New\";}\r\n@list l0:level2\r\n\t{mso-level-number-format:bullet;\r\n\tmso-level-text:o;\r\n\tmso-level-tab-stop:none;\r\n\tmso-level-number-position:left;\r\n\ttext-indent:-.25in;\r\n\tfont-family:\"Courier New\";}\r\n@list l0:level3\r\n\t{mso-level-number-format:bullet;\r\n\tmso-level-text:\\F0A7;\r\n\tmso-level-tab-stop:none;\r\n\tmso-level-number-position:left;\r\n\ttext-indent:-.25in;\r\n\tfont-family:Wingdings;}\r\n@list l0:level4\r\n\t{mso-level-number-format:bullet;\r\n\tmso-level-text:\\F0B7;\r\n\tmso-level-tab-stop:none;\r\n\tmso-level-number-position:left;\r\n\ttext-indent:-.25in;\r\n\tfont-family:Symbol;}\r\n@list l0:level5\r\n\t{mso-level-number-format:bullet;\r\n\tmso-level-text:o;\r\n\tmso-level-tab-stop:none;\r\n\tmso-level-number-position:left;\r\n\ttext-indent:-.25in;\r\n\tfont-family:\"Courier New\";}\r\n@list l0:level6\r\n\t{mso-level-number-format:bullet;\r\n\tmso-level-text:\\F0A7;\r\n\tmso-level-tab-stop:none;\r\n\tmso-level-number-position:left;\r\n\ttext-indent:-.25in;\r\n\tfont-family:Wingdings;}\r\n@list l0:level7\r\n\t{mso-level-number-format:bullet;\r\n\tmso-level-text:\\F0B7;\r\n\tmso-level-tab-stop:none;\r\n\tmso-level-number-position:left;\r\n\ttext-indent:-.25in;\r\n\tfont-family:Symbol;}\r\n@list l0:level8\r\n\t{mso-level-number-format:bullet;\r\n\tmso-level-text:o;\r\n\tmso-level-tab-stop:none;\r\n\tmso-level-number-position:left;\r\n\ttext-indent:-.25in;\r\n\tfont-family:\"Courier New\";}\r\n@list l0:level9\r\n\t{mso-level-number-format:bullet;\r\n\tmso-level-text:\\F0A7;\r\n\tmso-level-tab-stop:none;\r\n\tmso-level-number-position:left;\r\n\ttext-indent:-.25in;\r\n\tfont-family:Wingdings;}\r\nol\r\n\t{margin-bottom:0in;}\r\nul\r\n\t{margin-bottom:0in;}\r\n-->\r\n</style>\r\n<!--[if gte mso 10]>\r\n<style>\r\n /* Style Definitions */\r\n table.MsoNormalTable\r\n\t{mso-style-name:\"Table Normal\";\r\n\tmso-tstyle-rowband-size:0;\r\n\tmso-tstyle-colband-size:0;\r\n\tmso-style-noshow:yes;\r\n\tmso-style-priority:99;\r\n\tmso-style-parent:\"\";\r\n\tmso-padding-alt:0in 5.4pt 0in 5.4pt;\r\n\tmso-para-margin:0in;\r\n\tmso-para-margin-bottom:.0001pt;\r\n\tmso-pagination:widow-orphan;\r\n\tfont-size:10.0pt;\r\n\tfont-family:\"Times New Roman\",\"serif\";}\r\n</style>\r\n<![endif]--><!--[if gte mso 9]><xml>\r\n <o:shapedefaults v:ext=\"edit\" spidmax=\"1026\"/>\r\n</xml><![endif]--><!--[if gte mso 9]><xml>\r\n <o:shapelayout v:ext=\"edit\">\r\n  <o:idmap v:ext=\"edit\" data=\"1\"/>\r\n </o:shapelayout></xml><![endif]-->\r\n</head>\r\n\r\n<body bgcolor=white lang=EN-US link=blue vlink=purple style='tab-interval:.5in'>\r\n\r\n<div class=WordSection1>\r\n\r\n<h1><span style='mso-fareast-font-family:\"Times New Roman\";mso-no-proof:yes'><!--[if gte vml 1]><v:shapetype\r\n id=\"_x0000_t75\" coordsize=\"21600,21600\" o:spt=\"75\" o:preferrelative=\"t\"\r\n path=\"m@4@5l@4@11@9@11@9@5xe\" filled=\"f\" stroked=\"f\">\r\n <v:stroke joinstyle=\"miter\"/>\r\n <v:formulas>\r\n  <v:f eqn=\"if lineDrawn pixelLineWidth 0\"/>\r\n  <v:f eqn=\"sum @0 1 0\"/>\r\n  <v:f eqn=\"sum 0 0 @1\"/>\r\n  <v:f eqn=\"prod @2 1 2\"/>\r\n  <v:f eqn=\"prod @3 21600 pixelWidth\"/>\r\n  <v:f eqn=\"prod @3 21600 pixelHeight\"/>\r\n  <v:f eqn=\"sum @0 0 1\"/>\r\n  <v:f eqn=\"prod @6 1 2\"/>\r\n  <v:f eqn=\"prod @7 21600 pixelWidth\"/>\r\n  <v:f eqn=\"sum @8 21600 0\"/>\r\n  <v:f eqn=\"prod @7 21600 pixelHeight\"/>\r\n  <v:f eqn=\"sum @10 21600 0\"/>\r\n </v:formulas>\r\n <v:path o:extrusionok=\"f\" gradientshapeok=\"t\" o:connecttype=\"rect\"/>\r\n <o:lock v:ext=\"edit\" aspectratio=\"t\"/>\r\n</v:shapetype><v:shape id=\"Picture_x0020_1\" o:spid=\"_x0000_i1031\" type=\"#_x0000_t75\"\r\n style='width:149.25pt;height:128.25pt;visibility:visible;mso-wrap-style:square'>\r\n <v:imagedata src=\"bloat_files/image002.png\" o:title=\"\"/>\r\n</v:shape><![endif]--><![if !vml]><img width=199 height=171\r\nsrc=\"pic/bloat.png\" v:shapes=\"Picture_x0020_1\"><![endif]></span><span\r\nstyle='mso-fareast-font-family:\"Times New Roman\";color:black'>Program Analyses\r\nfor Bloat Detection and Optimization</span><span style='mso-fareast-font-family:\r\n\"Times New Roman\"'><o:p></o:p></span></h1>\r\n\r\n<div class=MsoNormal align=center style='text-align:center;mso-layout-grid-align:\r\nnone;text-autospace:none'><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black'>\r\n\r\n<hr size=2 width=\"100%\" align=center>\r\n\r\n</span></div>\r\n\r\n<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><b><span\r\nstyle='font-size:24.0pt;mso-fareast-font-family:\"Times New Roman\";color:black;\r\nmso-font-kerning:18.0pt'>About<o:p></o:p></span></b></p>\r\n\r\n<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span\r\nstyle='mso-fareast-font-family:\"Times New Roman\";color:black'><o:p>&nbsp;</o:p></span></p>\r\n\r\n<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span\r\nstyle='mso-ascii-font-family:\"Times New Roman\";mso-ascii-theme-font:major-fareast;\r\nmso-fareast-font-family:\"Times New Roman\";mso-hansi-font-family:\"Times New Roman\";\r\nmso-hansi-theme-font:major-fareast;mso-bidi-font-family:\"Times New Roman\";\r\nmso-bidi-theme-font:major-fareast'>Despite the employment of faster CPUs and\r\nlarger memory systems, the levels of inefficiencies in real-world programs grow\r\nsurprisingly fast and there is an ever-increasing demand for performance\r\noptimization in modern software. Performance and scalability issues are becoming\r\nincreasingly critical partly due to the pervasive use of object-oriented\r\nprogramming languages. The inefficiencies inherent in the implementation of an\r\nobject-oriented language as well as the commonly adopted design and\r\nimplementation principles in the object-oriented community often combine to\r\nhurt performance. The community-wide recognition of the importance of <i>abstraction\r\n</i>and <i>reuse </i>results in increased emphasis on modular design,\r\ndeclaration of general interfaces, and use of models and patterns. Programmers are\r\ntaught to focus first and foremost on them, taking it for granted that\r\ncompilers and run-time systems can remove all the inefficiencies. In a large\r\nprogram that is typically built on top of many layers of frameworks and\r\nlibraries, a small set of inefficiencies can multiply and quickly get magnified\r\nto slow down the system. When the call stack grows to be deep, the usefulness\r\nof the dataflow analyses in a dynamic compiler becomes limited and the\r\noptimizer can no longer remove these inefficiencies. As a result, many\r\napplications suffer from chronic run-time performance problems that\r\nsignificantly affect scalability and performance. This is a serious problem for\r\nreal-world software systems used every day by thousands of businesses. The\r\npressing need for new optimization techniques can be especially seen as\r\nobject-orientation goes everywhere into systems of any size. The extensive use\r\nof object-oriented languages in the development of memory-constrained applications\r\nsuch as smartphone apps (e.g., Java used in Android and C# used in Windows\r\nphones) and data-intensive systems (e.g., Hadoop, <span class=SpellE>Giraph</span>,\r\nand <span class=SpellE>Hyracks</span>) introduces numerous research challenges--\r\nthese systems have small memory space but large amounts of data to process and\r\ninefficiencies in these systems can be significantly exacerbated. The burden of\r\nreducing unnecessary work should not be only on the shoulder of hardware\r\ndesigners, especially in the modern era when Moore's dividend becomes less obvious.\r\nIt strongly calls for higher-level performance optimization techniques that can\r\ndetect and remove inefficiencies for all categories of object-oriented applications.\r\nOur group has an established record on performance optimization for large-scale\r\nsystems. Our recent efforts focus on the following projects:<span\r\nstyle='color:black'><o:p></o:p></span></span></p>\r\n\r\n<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span\r\nstyle='mso-fareast-font-family:\"Times New Roman\";color:black'><o:p>&nbsp;</o:p></span></p>\r\n\r\n<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><b\r\nstyle='mso-bidi-font-weight:normal'><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black'>(1) Providing efficient infrastructures for detecting bloat<o:p></o:p></span></b></p>\r\n\r\n<p class=MsoNormal style='margin-left:.5in;mso-layout-grid-align:none;\r\ntext-autospace:none'><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black'>A recent piece of work focuses on the development of a tunable\r\nobject lifetime profiling technique, called <i style='mso-bidi-font-style:normal'>Resurrector</i>\r\n[<a href=\"../../papers/xu-oopsla13.pdf\">OOPSLA13</a>]. Many existing\r\noptimization techniques (such as object pooling and <span class=SpellE>pretenuring</span>)\r\nrequire precise identification of object lifetimes. However, it is particularly\r\nchallenging to obtain object lifetimes both precisely and efficiently: precise\r\nprofiling techniques such as Merlin introduce several hundred times slowdown\r\neven for small programs while efficient approximation techniques often\r\nsacrifice precision and produce less useful lifetime information. Resurrector\r\nsolves the problem by exploring the middle ground between high precision and\r\nhigh efficiency to find the precision-scalability <span class=SpellE>sweetspot</span>\r\nfor various optimization techniques. <span class=SpellE>Resurrector's</span>\r\ndesign is motivated by an important observation that the scalability bottleneck\r\nof a traditional OLP algorithm (such as Merlin) lies in the need to compute\r\ntransitive closures on the dead objects (e.g., Merlin's backward pass).\r\nResurrector improves efficiency by completely eliminating this need. Similarly\r\nto Merlin, Resurrector first identifies the root dead objects whose reference counts\r\nare zero. Instead of computing transitive closures from them, Resurrector\r\nexploits object caching and reusing to find dead objects (transitively\r\nreachable from the roots) that have non-zero reference counts. <o:p></o:p></span></p>\r\n\r\n<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span\r\nstyle='mso-fareast-font-family:\"Times New Roman\";color:black'><o:p>&nbsp;</o:p></span></p>\r\n\r\n<p class=MsoNormal style='margin-left:.5in;mso-layout-grid-align:none;\r\ntext-autospace:none'><span style='mso-ascii-font-family:\"Times New Roman\";\r\nmso-ascii-theme-font:major-fareast;mso-fareast-font-family:\"Times New Roman\";\r\nmso-hansi-font-family:\"Times New Roman\";mso-hansi-theme-font:major-fareast;\r\nmso-bidi-font-family:\"Times New Roman\";mso-bidi-theme-font:major-fareast;\r\ncolor:black'>Another infrastructure we have built is a runtime framework that\r\nperforms <i style='mso-bidi-font-style:normal'>abstract dynamic slicing </i>[<a\r\nhref=\"../../papers/xu-pldi10a.pdf\">PLDI10-a</a>, <a\r\nhref=\"../../papers/xu-tosem15.pdf\">TOSEM14</a>] to identify performance\r\nproblems that manifest themselves in dataflow activities. <span class=GramE>A<span\r\nstyle='color:windowtext'>bstract dynamic slicing, a technique that applies\r\ndynamic slicing over an abstract domain whose size is limited by bounds\r\nindependent of the runtime execution.</span></span></span><span\r\nstyle='mso-ascii-font-family:\"Times New Roman\";mso-ascii-theme-font:major-fareast;\r\nmso-fareast-font-family:\"Times New Roman\";mso-hansi-font-family:\"Times New Roman\";\r\nmso-hansi-theme-font:major-fareast;mso-bidi-font-family:\"Times New Roman\";\r\nmso-bidi-theme-font:major-fareast'> This technique is embedded in the general\r\nframework parameterized by the abstract domain. The output of this framework is\r\nan abstract dependence graph that contains abstractions of instructions, rather\r\nthan their actual runtime instances. This new approach is motivated by the\r\nobservation that a client of dynamic slicing often needs to access only a small\r\nportion of the complete execution trace collected by a regular slicing algorithm\r\nand thus tremendous effort is wasted on collecting information not used by the\r\nclient. The runtime (space and time) overhead can be significantly reduced if\r\nthe slicing algorithm is client aware, that is, it understands what information\r\nwould be needed by its client and records only such information during the\r\nexecution. Abstract dynamic slicing makes this possible by asking the analysis\r\ndeveloper to provide an abstraction that specifies this knowledge.<span\r\nstyle='color:black'><o:p></o:p></span></span></p>\r\n\r\n<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span\r\nstyle='mso-fareast-font-family:\"Times New Roman\";color:black'><o:p>&nbsp;</o:p></span></p>\r\n\r\n<p class=MsoNormal><b><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black'>(2) Improved performance debugging and testing </span></b><span\r\nstyle='mso-fareast-font-family:\"Times New Roman\";color:black'><o:p></o:p></span></p>\r\n\r\n<p class=MsoNormal style='margin-left:.5in;mso-layout-grid-align:none;\r\ntext-autospace:none'><span style='mso-ascii-font-family:\"Times New Roman\";\r\nmso-ascii-theme-font:major-fareast;mso-fareast-font-family:\"Times New Roman\";\r\nmso-hansi-font-family:\"Times New Roman\";mso-hansi-theme-font:major-fareast;\r\nmso-bidi-font-family:\"Times New Roman\";mso-bidi-theme-font:major-fareast'>Performance\r\nproblems in a large-scale application are extremely difficult to find.\r\nTraditional performance test oracles such as time/memory checks are\r\ncoarse-grained and subjective; as a result, performance bugs often escape to\r\nproduction runs, hurting software reliability and user experience. We are\r\nin the process of developing a general technique, called <span class=SpellE><span\r\nclass=GramE><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:\r\nnormal'>PerfBlower</i></b></span></span><span class=GramE>, that</span> can <i>amplify\r\n</i>the effects of a class of performance problems whose symptoms can be\r\ndescribed by logical statements over a history of heap updates as well as\r\nprovide precise diagnostic information. Amplification serves as an <i>automated\r\ntest oracle </i>because it increases memory consumption significantly for tests\r\nthat trigger performance problems while having a very small impact on bug-free\r\nruns. As a result, developers can easily divide tests into successful and\r\nfailing runs, and focus their effort on failing tests</span><span style='mso-ascii-font-family:\r\n\"Times New Roman\";mso-ascii-theme-font:major-fareast;mso-fareast-font-family:\r\n\"Times New Roman\";mso-hansi-font-family:\"Times New Roman\";mso-hansi-theme-font:\r\nmajor-fareast;mso-bidi-font-family:\"Times New Roman\";mso-bidi-theme-font:major-fareast'>More\r\ninformation about <span class=SpellE><i style='mso-bidi-font-style:normal'>PerfBlower</i></span>\r\nwill be reported later. <o:p></o:p></span></p>\r\n\r\n<p class=MsoNormal style='margin-left:.5in;mso-layout-grid-align:none;\r\ntext-autospace:none'><span style='mso-ascii-font-family:\"Times New Roman\";\r\nmso-ascii-theme-font:major-fareast;mso-fareast-font-family:\"Times New Roman\";\r\nmso-hansi-font-family:\"Times New Roman\";mso-hansi-theme-font:major-fareast;\r\nmso-bidi-font-family:\"Times New Roman\";mso-bidi-theme-font:major-fareast'><o:p>&nbsp;</o:p></span></p>\r\n\r\n<p class=MsoNormal style='margin-left:.5in;mso-layout-grid-align:none;\r\ntext-autospace:none'><span style='mso-ascii-font-family:\"Times New Roman\";\r\nmso-ascii-theme-font:major-fareast;mso-fareast-font-family:\"Times New Roman\";\r\nmso-hansi-font-family:\"Times New Roman\";mso-hansi-theme-font:major-fareast;\r\nmso-bidi-font-family:\"Times New Roman\";mso-bidi-theme-font:major-fareast'>Caching/<span\r\nclass=SpellE>resuing</span> opportunities can often be found in large-scale\r\napplications. A big source of run-time performance problems in large-scale, object-oriented\r\napplications is the frequent creation of data structures whose lifetimes are\r\ndisjoint, and whose shapes and data content are always the same. Constructing\r\nthese data structures and computing the same data values many times is\r\nexpensive; significant performance improvements can be achieved by reusing\r\ntheir instances, shapes, and/or data values rather than reconstructing them. We\r\nfirst classify <span class=SpellE>cachine</span>/<span class=SpellE>resuing</span>\r\nopportunities into three categories: instance reusability, shape reusability,\r\nand data reusability [<a href=\"../../papers/xu-oopsla12.pdf\">OOPSLA12</a>]. We\r\nnext develop scalable runtime techniques that can quickly detect these\r\nopportunities by exploiting cooperative compiler and runtime system support.\r\nFor example, work from [<a href=\"../../papers/xu-oopsla12.pdf\">OOPSLA12</a>] is\r\na technique that piggybacks on GC to find reuse opportunities while <span\r\nclass=SpellE>Cachetor</span> [<a href=\"../../papers/nguyen-fse13.pdf\">FSE13</a>]\r\nrelies on heavyweight dependence profiling to understand if data values are\r\ncacheable. <o:p></o:p></span></p>\r\n\r\n<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span\r\nstyle='mso-ascii-font-family:\"Times New Roman\";mso-ascii-theme-font:major-fareast;\r\nmso-fareast-font-family:\"Times New Roman\";mso-hansi-font-family:\"Times New Roman\";\r\nmso-hansi-theme-font:major-fareast;mso-bidi-font-family:\"Times New Roman\";\r\nmso-bidi-theme-font:major-fareast'><o:p>&nbsp;</o:p></span></p>\r\n\r\n<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><b\r\nstyle='mso-bidi-font-weight:normal'><span style='mso-ascii-font-family:\"Times New Roman\";\r\nmso-ascii-theme-font:major-fareast;mso-fareast-font-family:\"Times New Roman\";\r\nmso-hansi-font-family:\"Times New Roman\";mso-hansi-theme-font:major-fareast;\r\nmso-bidi-font-family:\"Times New Roman\";mso-bidi-theme-font:major-fareast'>(3) Adaptive\r\nselection of algorithms and data structures<o:p></o:p></span></b></p>\r\n\r\n<p class=MsoNormal style='margin-left:.5in;mso-layout-grid-align:none;\r\ntext-autospace:none'><span style='mso-ascii-font-family:\"Times New Roman\";\r\nmso-ascii-theme-font:major-fareast;mso-fareast-font-family:\"Times New Roman\";\r\nmso-hansi-font-family:\"Times New Roman\";mso-hansi-theme-font:major-fareast;\r\nmso-bidi-font-family:\"Times New Roman\";mso-bidi-theme-font:major-fareast'>A</span><span\r\nstyle='font-family:\"Times-Roman\",\"serif\";mso-fareast-font-family:\"Times New Roman\";\r\nmso-bidi-font-family:Times-Roman'>n important source of runtime bloat is the\r\ninefficient use of container implementations. Standard libraries of\r\nobject-oriented languages such as Java and C# contain collection frameworks\r\nthat provide with users, for each abstract data type (such as </span><span\r\nstyle='font-family:Courier;mso-fareast-font-family:\"Times New Roman\";\r\nmso-bidi-font-family:Courier'>List</span><span style='font-family:\"Times-Roman\",\"serif\";\r\nmso-fareast-font-family:\"Times New Roman\";mso-bidi-font-family:Times-Roman'>),\r\nmany different implementations (such as </span><span class=SpellE><span\r\nstyle='font-family:Courier;mso-fareast-font-family:\"Times New Roman\";\r\nmso-bidi-font-family:Courier'>ArrayList</span></span><span style='font-family:\r\nCourier;mso-fareast-font-family:\"Times New Roman\";mso-bidi-font-family:Courier'>\r\n</span><span style='font-family:\"Times-Roman\",\"serif\";mso-fareast-font-family:\r\n\"Times New Roman\";mso-bidi-font-family:Times-Roman'>and <span class=SpellE>L<span\r\nstyle='font-family:Courier;mso-bidi-font-family:Courier'>inkedList</span></span>),\r\neach of which features a different design choice suitable for a specific\r\nexecution scenario. However, in real-world development, choosing the most\r\nappropriate container implementation is challenging. As a result, developers\r\ntend to keep using the implementations that are most general or well-known\r\n(e.g., </span><span class=SpellE><span style='font-family:Courier;mso-fareast-font-family:\r\n\"Times New Roman\";mso-bidi-font-family:Courier'>HashSet</span></span><span\r\nstyle='font-family:Courier;mso-fareast-font-family:\"Times New Roman\";\r\nmso-bidi-font-family:Courier'> </span><span style='font-family:\"Times-Roman\",\"serif\";\r\nmso-fareast-font-family:\"Times New Roman\";mso-bidi-font-family:Times-Roman'>for\r\n</span><span style='font-family:Courier;mso-fareast-font-family:\"Times New Roman\";\r\nmso-bidi-font-family:Courier'>Set</span><span style='font-family:\"Times-Roman\",\"serif\";\r\nmso-fareast-font-family:\"Times New Roman\";mso-bidi-font-family:Times-Roman'>),\r\nregardless of whether or not they fit the usage context. We develop a novel container\r\noptimization technique, called <span class=SpellE>CoCo</span>, that is able to\r\n(1) determine at run time, for each container instance (e.g., a </span><span\r\nclass=SpellE><span style='font-family:Courier;mso-fareast-font-family:\"Times New Roman\";\r\nmso-bidi-font-family:Courier'>LinkedList</span></span><span style='font-family:\r\nCourier;mso-fareast-font-family:\"Times New Roman\";mso-bidi-font-family:Courier'>\r\n</span><span style='font-family:\"Times-Roman\",\"serif\";mso-fareast-font-family:\r\n\"Times New Roman\";mso-bidi-font-family:Times-Roman'>object) used in the\r\nprogram, whether or not there exists another container implementation (e.g., </span><span\r\nclass=SpellE><span style='font-family:Courier;mso-fareast-font-family:\"Times New Roman\";\r\nmso-bidi-font-family:Courier'>ArrayList</span></span><span style='font-family:\r\n\"Times-Roman\",\"serif\";mso-fareast-font-family:\"Times New Roman\";mso-bidi-font-family:\r\nTimes-Roman'>) that is more suitable for the execution; and (2) automatically\r\nand safely switch to this new container implementation (e.g., replace the old </span><span\r\nclass=SpellE><span style='font-family:Courier;mso-fareast-font-family:\"Times New Roman\";\r\nmso-bidi-font-family:Courier'>LinkedList</span></span><span style='font-family:\r\nCourier;mso-fareast-font-family:\"Times New Roman\";mso-bidi-font-family:Courier'>\r\n</span><span style='font-family:\"Times-Roman\",\"serif\";mso-fareast-font-family:\r\n\"Times New Roman\";mso-bidi-font-family:Times-Roman'>object with a new </span><span\r\nclass=SpellE><span style='font-family:Courier;mso-fareast-font-family:\"Times New Roman\";\r\nmso-bidi-font-family:Courier'>ArrayList</span></span><span style='font-family:\r\nCourier;mso-fareast-font-family:\"Times New Roman\";mso-bidi-font-family:Courier'>\r\n</span><span style='font-family:\"Times-Roman\",\"serif\";mso-fareast-font-family:\r\n\"Times New Roman\";mso-bidi-font-family:Times-Roman'>object </span><i><span\r\nstyle='font-family:\"Times-Italic\",\"serif\";mso-fareast-font-family:\"Times New Roman\";\r\nmso-bidi-font-family:Times-Italic'>online</span></i><span style='font-family:\r\n\"Times-Roman\",\"serif\";mso-fareast-font-family:\"Times New Roman\";mso-bidi-font-family:\r\nTimes-Roman'>) for increased <span class=SpellE>efficiency.While</span> there\r\nexists work (such as Chameleon and Brainy) that could identify Java collection\r\ninefficiencies and report them to users for </span><i><span style='font-family:\r\n\"Times-Italic\",\"serif\";mso-fareast-font-family:\"Times New Roman\";mso-bidi-font-family:\r\nTimes-Italic'>offline </span></i><span style='font-family:\"Times-Roman\",\"serif\";\r\nmso-fareast-font-family:\"Times New Roman\";mso-bidi-font-family:Times-Roman'>inspection,\r\nnone of these techniques can change implementations </span><i><span\r\nstyle='font-family:\"Times-Italic\",\"serif\";mso-fareast-font-family:\"Times New Roman\";\r\nmso-bidi-font-family:Times-Italic'>online</span></i><span style='font-family:\r\n\"Times-Roman\",\"serif\";mso-fareast-font-family:\"Times New Roman\";mso-bidi-font-family:\r\nTimes-Roman'>. Details about <span class=SpellE>CoCo</span> can found in the <a\r\nhref=\"../../papers/xu-ecoop13.pdf\">ECOOP13</a> paper. In collaboration with the information system\r\ngroup, we are currently developing techniques that can automatically select\r\ntable joining algorithms for message-based Big Data systems (such as graph\r\nprocessing systems). Details of this\r\nproject will be reported later. <o:p></o:p></span></p>\r\n\r\n<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span\r\nstyle='font-family:\"Times-Roman\",\"serif\";mso-fareast-font-family:\"Times New Roman\";\r\nmso-bidi-font-family:Times-Roman'><o:p>&nbsp;</o:p></span></p>\r\n\r\n<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><b\r\nstyle='mso-bidi-font-weight:normal'><span style='font-family:\"Times-Roman\",\"serif\";\r\nmso-fareast-font-family:\"Times New Roman\";mso-bidi-font-family:Times-Roman'>(4)\r\nStatic and dynamic detection of Java memory leaks</span></b><b\r\nstyle='mso-bidi-font-weight:normal'><span style='mso-ascii-font-family:\"Times New Roman\";\r\nmso-ascii-theme-font:major-fareast;mso-fareast-font-family:\"Times New Roman\";\r\nmso-hansi-font-family:\"Times New Roman\";mso-hansi-theme-font:major-fareast;\r\nmso-bidi-font-family:\"Times New Roman\";mso-bidi-theme-font:major-fareast'><o:p></o:p></span></b></p>\r\n\r\n<p class=MsoNormal style='margin-left:.5in;mso-layout-grid-align:none;\r\ntext-autospace:none'><span style='mso-ascii-font-family:\"Times New Roman\";\r\nmso-ascii-theme-font:major-fareast;mso-fareast-font-family:\"Times New Roman\";\r\nmso-hansi-font-family:\"Times New Roman\";mso-hansi-theme-font:major-fareast;\r\nmso-bidi-font-family:\"Times New Roman\";mso-bidi-theme-font:major-fareast'>In\r\nmanaged languages such as Java and C#, developers do not need to worry about\r\nmemory correctness issues such as dangling pointers and double free errors.\r\nHowever, it remains challenging to avoid leaks. A memory leak in a managed language\r\nis caused by keeping unnecessary references to objects that are no longer used.\r\nThese objects cannot be reclaimed by the garbage collector (GC), often leading\r\nto severe performance degradation and even program crashes. We have developed\r\nboth static and dynamic techniques for memory leak detection. In particular, we propose LeakChaser [<a\r\nhref=\"../../papers/xu-pldi11.pdf\">PLDI11</a>], a specification-based leak detector,\r\nthat exploits user insight (expressed in the form of liveness\r\nassertions) to narrow down causes of memory leaks. Another attractive\r\ndirection is to perform static\r\nleak detection because it does not rely on any leak-triggering inputs, allowing\r\ncompile-time tools to find leaks before software is released. A long-standing\r\nissue that prevents practical static memory leak detection for Java is that it\r\ncan be very expensive to statically determine object <span class=SpellE>liveness</span>\r\nin large applications. We present a practical static leak detection technique,\r\ncalled <span class=SpellE>LeakChecker</span> [<a\r\nhref=\"../../papers/yan-cgo14.pdf\">CGO14</a>] that bypasses this problem by\r\nconsidering a common leak pattern. In many cases severe leaks occur in loops\r\nwhere, <span class=GramE>in each iteration</span>, some objects created by the\r\niteration are unnecessarily referenced by objects external to the loop. These\r\nunnecessary references are never used in later loop iterations. Based on this\r\ninsight, we shift our focus from computing <span class=SpellE>liveness</span>, which\r\nis very difficult to achieve precisely and efficiently for large programs, to\r\nthe easier goal of identifying objects that flow out of a loop but never flow\r\nback in.<span style='color:black;mso-bidi-font-weight:bold'><o:p></o:p></span></span></p>\r\n\r\n<div class=MsoNormal align=center style='text-align:center'><span\r\nstyle='mso-fareast-font-family:\"Times New Roman\";color:black'>\r\n\r\n<hr size=2 width=\"100%\" align=center>\r\n\r\n</span></div>\r\n\r\n<p class=MsoNormal><b><span style='font-size:24.0pt;mso-fareast-font-family:\r\n\"Times New Roman\";color:black;mso-font-kerning:18.0pt'>Papers<o:p></o:p></span></b></p>\r\n\r\n<p class=MsoNormal><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black'><o:p>&nbsp;</o:p></span></p>\r\n\r\n<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in;mso-list:l0 level1 lfo2'><![if !supportLists]><span\r\nstyle='font-family:\"Courier New\";mso-fareast-font-family:\"Courier New\"'><span\r\nstyle='mso-list:Ignore'>o<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;\r\n</span></span></span><![endif]><span style='mso-fareast-font-family:\"Times New Roman \\; color\\:black\"'><a\r\nhref=\"../../papers/yan-cgo14.pdf\"><span class=SpellE>LeakChecker</span>:\r\nPractical Static Memory Leak Detection for Managed Languages</a>,<o:p></o:p></span></p>\r\n\r\n<p class=MsoListParagraphCxSpMiddle><span class=GramE><span style='mso-fareast-font-family:\r\n\"Times New Roman\";color:black'>Dacong Yan, Guoqing (Harry) Xu, Shengqian Yang,\r\nand Atanas Rountev.</span></span><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black'><o:p></o:p></span></p>\r\n\r\n<p class=MsoListParagraphCxSpMiddle><i style='mso-bidi-font-style:normal'><span\r\nstyle='mso-fareast-font-family:\"Times New Roman\";color:black'>CGO'14: International\r\nConference on Code Generation and Optimization</span></i><span\r\nstyle='mso-fareast-font-family:\"Times New Roman\";color:black'>.<o:p></o:p></span></p>\r\n\r\n<p class=MsoListParagraphCxSpMiddle><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black'>[<a\r\nhref=\"https://docs.google.com/presentation/d/1LXi07DA2OKmi7VNkjkKzBO89U1VWpFhT48Iu7gQzcjw/edit#slide=id.p\">Slides</a>]<o:p></o:p></span></p>\r\n\r\n<p class=MsoListParagraphCxSpMiddle><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black'><o:p>&nbsp;</o:p></span></p>\r\n\r\n<p class=MsoListParagraphCxSpLast style='text-indent:-.25in;mso-list:l0 level1 lfo2'><![if !supportLists]><span\r\nstyle='font-family:\"Courier New\";mso-fareast-font-family:\"Courier New\";\r\ncolor:black'><span style='mso-list:Ignore'>o<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;\r\n</span></span></span><![endif]><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black'><a href=\"../../papers/xu-tosem15.pdf\">Scalable Runtime Bloat\r\nDetection Using Abstract Dynamic Slicing</a>,<o:p></o:p></span></p>\r\n\r\n<p class=MsoNormal style='margin-left:.5in'><span class=GramE><span\r\nstyle='mso-fareast-font-family:\"Times New Roman\";color:black'>Guoqing (Harry)\r\nXu, </span><strong><span style='font-weight:normal;mso-bidi-font-weight:bold'>Nick\r\nMitchell, Matthew Arnold, Atanas Rountev, Edith Schonberg, and Gary <span\r\nclass=SpellE>Sevitsky</span>.</span></strong></span><span style='mso-fareast-font-family:\r\n\"Times New Roman\";color:black'><o:p></o:p></span></p>\r\n\r\n<p class=MsoNormal style='margin-left:.5in'><span class=GramE><i\r\nstyle='mso-bidi-font-style:normal'><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black'>TOSEM'14, </span>ACM Transactions on Software Engineering and\r\nMethodology</i><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black'>.</span></span><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black'><o:p></o:p></span></p>\r\n\r\n<p class=MsoNormal style='margin-left:.5in'><span style='mso-fareast-font-family:\r\n\"Times New Roman\";color:black'><o:p>&nbsp;</o:p></span></p>\r\n\r\n<p class=MsoListParagraph style='text-indent:-.25in;mso-list:l0 level1 lfo2'><![if !supportLists]><span\r\nstyle='font-family:\"Courier New\";mso-fareast-font-family:\"Courier New\";\r\ncolor:black'><span style='mso-list:Ignore'>o<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;\r\n</span></span></span><![endif]><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black'><a href=\"../../papers/xu-oopsla13.pdf\">Resurrector: A Tunable\r\nObject Lifetime Profiling Technique for Optimizing Real-World Programs</a>,<o:p></o:p></span></p>\r\n\r\n<p class=MsoNormal style='margin-left:.5in'><span class=GramE><span\r\nstyle='mso-fareast-font-family:\"Times New Roman\";color:black'>Guoqing (Harry)\r\nXu.</span></span><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black'><o:p></o:p></span></p>\r\n\r\n<p class=MsoNormal style='margin-left:.5in'><i style='mso-bidi-font-style:normal'><span\r\nstyle='mso-fareast-font-family:\"Times New Roman\";color:black'>OOPSLA'13, </span>ACM\r\nSIGPLAN Conference on Object-Oriented Programming Systems, Language, and\r\nApplications.</i><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black'><o:p></o:p></span></p>\r\n\r\n<p class=MsoNormal style='margin-left:.5in'><span style='mso-fareast-font-family:\r\n\"Times New Roman\";color:black'>[<a\r\nhref=\"http://www.ics.uci.edu/~guoqingx/slides/oopsla13.pptx\">Slides</a>]<o:p></o:p></span></p>\r\n\r\n<p class=MsoNormal><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black'><o:p>&nbsp;</o:p></span></p>\r\n\r\n<p class=MsoListParagraph style='text-indent:-.25in;mso-list:l0 level1 lfo2'><![if !supportLists]><span\r\nstyle='font-family:\"Courier New\";mso-fareast-font-family:\"Courier New\";\r\ncolor:black'><span style='mso-list:Ignore'>o<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;\r\n</span></span></span><![endif]><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black'><a href=\"http://www.ics.uci.edu/~guoqingx/papers/nguyen-fse13.pdf\"><span\r\nclass=SpellE>Cachetor</span>: Detecting Cacheable Data to Remove Bloat</a>,<o:p></o:p></span></p>\r\n\r\n<p class=MsoNormal style='text-indent:.5in'><span class=GramE><span\r\nstyle='mso-fareast-font-family:\"Times New Roman\";color:black'>Khanh Nguyen and\r\nGuoqing (Harry) Xu.</span></span><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black'><o:p></o:p></span></p>\r\n\r\n<p class=MsoNormal style='margin-left:.5in'><i style='mso-bidi-font-style:normal'><span\r\nstyle='mso-fareast-font-family:\"Times New Roman\";color:black'>FSE'13, </span>ACM\r\nSIGSOFT Symposium on the Foundations of Software Engineering.</i><span\r\nstyle='mso-fareast-font-family:\"Times New Roman\";color:black'><o:p></o:p></span></p>\r\n\r\n<p class=MsoNormal style='margin-left:.5in'><span style='mso-fareast-font-family:\r\n\"Times New Roman\";color:black'>[<a\r\nhref=\"http://www.ics.uci.edu/~guoqingx/slides/fse13.pptx\">Slides</a>]<o:p></o:p></span></p>\r\n\r\n<p class=MsoNormal><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black'><o:p>&nbsp;</o:p></span></p>\r\n\r\n<p class=MsoListParagraph style='text-indent:-.25in;mso-list:l0 level1 lfo2'><![if !supportLists]><span\r\nstyle='font-family:\"Courier New\";mso-fareast-font-family:\"Courier New\";\r\ncolor:black'><span style='mso-list:Ignore'>o<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;\r\n</span></span></span><![endif]><span class=spelle><b><a\r\nhref=\"http://www.ics.uci.edu/~guoqingx/papers/xu-ecoop13.pdf\"><span\r\nclass=SpellE>CoCo</span>: <span style='mso-bidi-font-weight:normal'>Sound and\r\nAdaptive Replacement of Java Collections</span></a></b></span><span\r\nstyle='mso-fareast-font-family:\"Times New Roman\";color:black'>,<o:p></o:p></span></p>\r\n\r\n<p class=MsoNormal style='text-indent:.5in'><span class=GramE><span\r\nstyle='mso-fareast-font-family:\"Times New Roman\";color:black'>Guoqing (Harry) Xu.</span></span><span\r\nstyle='mso-fareast-font-family:\"Times New Roman\";color:black'><o:p></o:p></span></p>\r\n\r\n<p class=MsoNormal style='margin-left:.5in'><i style='mso-bidi-font-style:normal'><span\r\nstyle='mso-fareast-font-family:\"Times New Roman\";color:black'>ECOOP'13, </span>European\r\nConference on Object-Oriented Programming.</i><span style='mso-fareast-font-family:\r\n\"Times New Roman\";color:black'><o:p></o:p></span></p>\r\n\r\n<p class=MsoNormal style='margin-left:.5in'><span style='mso-fareast-font-family:\r\n\"Times New Roman\";color:black'>[<a\r\nhref=\"http://www.ics.uci.edu/~guoqingx/slides/ecoop13.pptx\">Slides</a>]<o:p></o:p></span></p>\r\n\r\n<p class=MsoNormal style='margin-left:.5in'><span style='mso-fareast-font-family:\r\n\"Times New Roman\";color:black'><o:p>&nbsp;</o:p></span></p>\r\n\r\n<p class=MsoListParagraph style='text-indent:-.25in;mso-list:l0 level1 lfo2'><![if !supportLists]><span\r\nstyle='font-family:\"Courier New\";mso-fareast-font-family:\"Courier New\";\r\ncolor:black'><span style='mso-list:Ignore'>o<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;\r\n</span></span></span><![endif]><b><a\r\nhref=\"http://www.ics.uci.edu/~guoqingx/papers/xu-oopsla12.pdf\">Finding Reusable\r\nData Structures</a></b><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black'>,<o:p></o:p></span></p>\r\n\r\n<p class=MsoNormal style='text-indent:.5in'><span class=GramE><span\r\nstyle='mso-fareast-font-family:\"Times New Roman\";color:black'>Guoqing (Harry) Xu.</span></span><span\r\nstyle='mso-fareast-font-family:\"Times New Roman\";color:black'><o:p></o:p></span></p>\r\n\r\n<p class=MsoNormal style='margin-left:.5in'><i style='mso-bidi-font-style:normal'><span\r\nstyle='mso-fareast-font-family:\"Times New Roman\";color:black'>OOPSLA'12, </span>ACM\r\nSIGPLAN Conference on Object-Oriented Programming Systems, Language, and\r\nApplications.</i><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black'> <o:p></o:p></span></p>\r\n\r\n<p class=MsoNormal style='margin-left:.5in'><span style='mso-fareast-font-family:\r\n\"Times New Roman\";color:black'>[<a\r\nhref=\"http://www.ics.uci.edu/~guoqingx/slides/oopsla12.pptx\">Slides</a>]<o:p></o:p></span></p>\r\n\r\n<div class=MsoNormal align=center style='text-align:center'><span\r\nstyle='mso-fareast-font-family:\"Times New Roman\";color:black'>\r\n\r\n<hr size=2 width=\"100%\" align=center>\r\n\r\n</span></div>\r\n\r\n<p class=MsoNormal><b><span style='font-size:24.0pt;mso-fareast-font-family:\r\n\"Times New Roman\";color:black;mso-font-kerning:18.0pt'>People<o:p></o:p></span></b></p>\r\n\r\n<p class=MsoNormal><b><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black;mso-font-kerning:18.0pt'><o:p>&nbsp;</o:p></span></b></p>\r\n\r\n<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in;mso-list:l0 level1 lfo2'><![if !supportLists]><span\r\nstyle='font-family:\"Courier New\";mso-fareast-font-family:\"Courier New\";\r\ncolor:black'><span style='mso-list:Ignore'>o<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;\r\n</span></span></span><![endif]><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black'><a href=\"http://www.ics.uci.edu/~lfang3/\">Lu Fang</a><o:p></o:p></span></p>\r\n\r\n<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in;mso-list:l0 level1 lfo2'><![if !supportLists]><span\r\nstyle='font-family:\"Courier New\";mso-fareast-font-family:\"Courier New\";\r\ncolor:black'><span style='mso-list:Ignore'>o<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;\r\n</span></span></span><![endif]><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black'><a href=\"http://www.ics.uci.edu/~khanhtn1/\">Khanh Nguyen</a><o:p></o:p></span></p>\r\n\r\n<p class=MsoListParagraphCxSpLast style='text-indent:-.25in;mso-list:l0 level1 lfo2'><![if !supportLists]><span\r\nstyle='font-family:\"Courier New\";mso-fareast-font-family:\"Courier New\";\r\ncolor:black'><span style='mso-list:Ignore'>o<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;\r\n</span></span></span><![endif]><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black'><a href=\"http://www.ics.uci.edu/~guoqingx\">Harry Xu</a><o:p></o:p></span></p>\r\n\r\n<div class=MsoNormal align=center style='text-align:center'><span\r\nstyle='mso-fareast-font-family:\"Times New Roman\";color:black'>\r\n\r\n<hr size=2 width=\"100%\" align=center>\r\n\r\n</span></div>\r\n\r\n<p class=MsoNormal><b><span style='font-size:24.0pt;mso-fareast-font-family:\r\n\"Times New Roman\";color:black;mso-font-kerning:18.0pt'>Software<o:p></o:p></span></b></p>\r\n\r\n<p class=MsoNormal><b><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black;mso-font-kerning:18.0pt'><o:p>&nbsp;</o:p></span></b></p>\r\n\r\n<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in;mso-list:l0 level1 lfo2'><![if !supportLists]><span\r\nstyle='font-family:\"Courier New\";mso-fareast-font-family:\"Courier New\";\r\ncolor:black'><span style='mso-list:Ignore'>o<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;\r\n</span></span></span><![endif]><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black'><a href=\"http://sourceforge.net/p/jikesrvm/research-archive/37/\">LeakChaser</a>,\r\na specification-based memory leak detector for Java<o:p></o:p></span></p>\r\n\r\n<p class=MsoListParagraphCxSpLast style='text-indent:-.25in;mso-list:l0 level1 lfo2'><![if !supportLists]><span\r\nstyle='font-family:\"Courier New\";mso-fareast-font-family:\"Courier New\";\r\ncolor:black'><span style='mso-list:Ignore'>o<span style='font:7.0pt \"Times New Roman\"'>&nbsp;&nbsp;\r\n</span></span></span><![endif]><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black'><a href=\"https://sourceforge.net/p/jikesrvm/research-archive/42/\">Resurrector</a>:\r\na tunable object lifetime profiling tool based on Jikes RVM<o:p></o:p></span></p>\r\n\r\n<p class=MsoNormal><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black'><o:p>&nbsp;</o:p></span></p>\r\n\r\n<div class=MsoNormal align=center style='text-align:center'><span\r\nstyle='mso-fareast-font-family:\"Times New Roman\";color:black'>\r\n\r\n<hr size=2 width=\"100%\" align=center>\r\n\r\n</span></div>\r\n\r\n<p class=MsoNormal><b><span style='font-size:24.0pt;mso-fareast-font-family:\r\n\"Times New Roman\";color:black;mso-font-kerning:18.0pt'>Support</span></b><span\r\nstyle='mso-fareast-font-family:\"Times New Roman\";color:black'><o:p></o:p></span></p>\r\n\r\n<p class=MsoNormal><b><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black;mso-font-kerning:18.0pt'><o:p>&nbsp;</o:p></span></b></p>\r\n\r\n<p class=MsoNormal><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black'>This research is funded in part by NSF under grants CNS-1321179\r\nand CCF-140982, and by ONR under grant </span>N00014-14-1-0549.<span\r\nstyle='mso-fareast-font-family:\"Times New Roman\";color:black'><o:p></o:p></span></p>\r\n\r\n<div class=MsoNormal align=center style='text-align:center'><span\r\nstyle='mso-fareast-font-family:\"Times New Roman\";color:black'>\r\n\r\n<hr size=2 width=\"100%\" align=center>\r\n\r\n</span></div>\r\n\r\n<p class=MsoNormal><b><span style='mso-fareast-font-family:\"Times New Roman\";\r\ncolor:black'><a href=\"../../index.html\"><span class=GramE>main</span> page<span\r\nstyle='font-weight:normal'> </span></a></span></b><span style='mso-fareast-font-family:\r\n\"Times New Roman\"'><o:p></o:p></span></p>\r\n\r\n</div>\r\n\r\n</body>\r\n\r\n</html>\r\n", "id": 4451.0}