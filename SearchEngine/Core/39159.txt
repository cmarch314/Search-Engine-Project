{"text": "Navigation Up Table of Contents Bibliography Index Title Page TriangulationDataStructure 3 Cell Definition The concept TriangulationDataStructure 3 Cell stores four Vertex handles to its four vertices and four Cell handles to its four neighbors The vertices are indexed 1 2 and 3 in consistent order The neighbor indexed i lies opposite to vertex i In degenerate dimensions cells are used to store faces of maximal dimension in dimension 2 each cell represents only one facet of index 3 and 3 edges 1 1 2 and 2 in dimension 1 each cell represents one edge 1 See also Section Types The class TriangulationDataStructure 3 Cell defines the following types typedef TriangulationDataStructure 3 Triangulation data structure typedef TriangulationDataStructure 3 Vertex handle Vertex handle typedef TriangulationDataStructure 3 Cell handle Cell handle Creation In order to obtain new cells or destruct unused cells the user must call the create cell and delete cell methods of the triangulation data structure Operations Access Functions Vertex handle c vertex int i Returns the vertex i of c Precondition i 1 2 3 int c index Vertex handle v Returns the index of vertex v in c Precondition v is a vertex of c bool c has vertex Vertex handle v Returns true if v is a vertex of c bool c has vertex Vertex handle v int i Returns true if v is a vertex of c and computes its index i in c Cell handle c neighbor int i Returns the neighbor i of c Precondition i 1 2 3 int c index Cell handle n Returns the index corresponding to neighboring cell n Precondition n is a neighbor of c bool c has neighbor Cell handle n Returns true if n is a neighbor of c bool c has neighbor Cell handle n int i Returns true if n is a neighbor of c and computes its index i in c Vertex handle c mirror vertex int i Returns the vertex of the neighbor of c that is opposite to c Precondition i 1 2 3 int c mirror index int i Returns the index of c in its ith neighbor Precondition i 1 2 3 Setting void c set vertex int i Vertex handle v Sets vertex i to v Precondition i 1 2 3 void c set vertices Vertex handle v Vertex handle v1 Vertex handle v2 Vertex handle v3 Sets the vertex pointers void c set neighbor int i Cell handle n Sets neighbor i to n Precondition i 1 2 3 void c set neighbors Cell handle n Cell handle n1 Cell handle n2 Cell handle n3 Sets the neighbors pointers Checking bool c is valid int dim 3 bool verbose false dim is the dimension of the triangulation with default value 3 In dimension 3 resp 2 1 this function must check that the cell shares three resp two one vertices with its neighbors and these neighbors have a correct reciprocal neighboring link Moreover the consistency of the orientations of common faces must be checked The validity of all the vertices of the cell must be checked The validity of the base cell is also checked When verbose is set to true messages are printed to give a precise indication of the kind of invalidity encountered See Also TriangulationDataStructure 3 Vertex Next TriangulationDataStructure 3 Vertex Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/TriangulationDS_3_ref/Concept_TriangulationDataStructure_3--Cell.html", "title": "triangulationdatastructure_3::cell", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './TriangulationDS_3_ref/Tds_cell_3.tex' -->\n<html> <head>  \n<title>TriangulationDataStructure_3::Cell</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_1003\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_936\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Concept.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_TriangulationDataStructure_3::Cell\"></A>\n<h2><I>TriangulationDataStructure_3::Cell</I></h2>\n<P>\n\n<H3>Definition</H3>\n<P>\n\nThe concept <I><A HREF=\"Concept_TriangulationDataStructure_3--Cell.html#Cross_link_anchor_1003\">TriangulationDataStructure_3::Cell</A></I> stores\nfour <I>Vertex_handle</I>s to its four vertices and four <I>Cell_handle</I>s\nto its four neighbors. The vertices are indexed 0, 1, 2, and 3 in consistent\norder.  The neighbor indexed <MATH><I>i</I></MATH> lies <A HREF=\"../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243\">opposite</A> to vertex <I>i</I>.\n<P>\n\nIn degenerate dimensions, cells are used to store faces of maximal\ndimension: in dimension&nbsp;2, each cell represents only one\nfacet of index 3, and 3 edges <MATH><I>(0,1)</I></MATH>, <MATH><I>(1,2)</I></MATH> and <MATH><I>(2,0)</I></MATH>; in\ndimension&nbsp;1, each cell represents one edge <MATH><I>(0,1)</I></MATH>. (See also\nSection&nbsp;<A HREF=\"../TriangulationDS_3/Chapter_main.html#TDS3-sec-intro\"><IMG SRC=\"cc_ref_up_arrow.gif\" ALT=\"reference\" WIDTH=\"10\" HEIGHT=\"10\"></A>.)\n<P>\n\n<H3>Types</H3>\nThe class <I><A HREF=\"Concept_TriangulationDataStructure_3--Cell.html#Cross_link_anchor_1003\">TriangulationDataStructure_3::Cell</A></I> defines the following types.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Triangulation_data_structure\"></A>\n<A NAME=\"Typedef_Triangulation_data_structure\"></A>\ntypedef <A HREF=\"Concept_TriangulationDataStructure_3.html#Cross_link_anchor_1002\">TriangulationDataStructure_3</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    Triangulation_data_structure;\n        </I></NOBR>\n        \n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Vertex_handle\"></A>\n<A NAME=\"Typedef_Vertex_handle\"></A>\ntypedef <A HREF=\"Concept_TriangulationDataStructure_3.html#Cross_link_anchor_1002\">TriangulationDataStructure_3</A>::Vertex_handle\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    Vertex_handle;\n        </I></NOBR>\n        </TD>\n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Cell_handle\"></A>\n<A NAME=\"Typedef_Cell_handle\"></A>\ntypedef <A HREF=\"Concept_TriangulationDataStructure_3.html#Cross_link_anchor_1002\">TriangulationDataStructure_3</A>::Cell_handle\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    Cell_handle;\n        </I></NOBR>\n        </TD>\n    \n        </TR>\n        </TABLE>\n<P>\n\n<H3>Creation</H3>\n<P>\n\nIn order to obtain new cells or destruct unused cells, the user must call the\n<I>create_cell()</I> and <I>delete_cell()</I> methods of the triangulation data\nstructure.\n<P>\n\n<H3>Operations</H3>\n<P>\n\n<H3>Access Functions</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Vertex_handle_vertex6int_i9_const;\"></A>\nVertex_handle\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    c.vertex ( int i)\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns the vertex <I>i</I> of <I>c</I>.<BR>\n\n<EM>Precondition: </EM><MATH><I>i  <IMG BORDER=0 WIDTH=9 HEIGHT=21 ALIGN=MIDDLE SRC=\"cc_in.gif\"> {0, 1, 2, 3}</I></MATH>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_int_index6Vertex_handle_v9_const;\"></A>\nint\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.index ( Vertex_handle v)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns the index of vertex <I>v</I> in <I>c</I>.<BR>\n\n<EM>Precondition: </EM><I>v</I> is a vertex of <I>c</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_has_vertex6Vertex_handle_v9_const;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.has_vertex ( Vertex_handle v)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns <I>true</I> if  <I>v</I> is a vertex of <I>c</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_has_vertex6Vertex_handle_v+_int___i9_const;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.has_vertex ( Vertex_handle v,  int &amp; i)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns <I>true</I> if <I>v</I> is a vertex of <I>c</I>, and\ncomputes its index <I>i</I> in <I>c</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Cell_handle_neighbor6int_i9_const;\"></A>\nCell_handle\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.neighbor ( int i)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns  the neighbor <I>i</I> of <I>c</I>.<BR>\n\n<EM>Precondition: </EM><MATH><I>i  <IMG BORDER=0 WIDTH=9 HEIGHT=21 ALIGN=MIDDLE SRC=\"cc_in.gif\"> {0, 1, 2, 3}</I></MATH>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_int_index6Cell_handle_n9_const;\"></A>\nint\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.index ( Cell_handle n)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns the index corresponding to neighboring cell <I>n</I>.<BR>\n\n<EM>Precondition: </EM><I>n</I> is a neighbor of <I>c</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_has_neighbor6Cell_handle_n9_const;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.has_neighbor ( Cell_handle n)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns <I>true</I> if <I>n</I> is a neighbor of <I>c</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_has_neighbor6Cell_handle_n+_int___i9_const;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.has_neighbor ( Cell_handle n,  int &amp; i)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns <I>true</I> if <I>n</I> is a neighbor of <I>c</I>,  and\ncomputes its index <I>i</I> in <I>c</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Vertex_handle_mirror_vertex6int_i9_const;\"></A>\nVertex_handle\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.mirror_vertex ( int i)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns the vertex of the neighbor of <I>c</I> that is <A HREF=\"../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243\">opposite</A> to <I>c</I>.<BR>\n\n<EM>Precondition: </EM><MATH><I>i  <IMG BORDER=0 WIDTH=9 HEIGHT=21 ALIGN=MIDDLE SRC=\"cc_in.gif\"> {0, 1, 2, 3}</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_int_mirror_index6int_i9_const;\"></A>\nint\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.mirror_index ( int i)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns the index of <I>c</I> in its <MATH><I>i<SUP>th</SUP></I></MATH> neighbor.<BR>\n\n<EM>Precondition: </EM><MATH><I>i  <IMG BORDER=0 WIDTH=9 HEIGHT=21 ALIGN=MIDDLE SRC=\"cc_in.gif\"> {0, 1, 2, 3}</I></MATH>.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Setting</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_set_vertex6int_i+_Vertex_handle_v9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.set_vertex ( int i,  Vertex_handle v)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Sets vertex <I>i</I> to <I>v</I>.<BR>\n\n<EM>Precondition: </EM><MATH><I>i  <IMG BORDER=0 WIDTH=9 HEIGHT=21 ALIGN=MIDDLE SRC=\"cc_in.gif\"> {0, 1, 2, 3}</I></MATH>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_set_vertices6Vertex_handle_v0+_Vertex_handle_v1+_Vertex_handle_v2+_Vertex_handle_v39;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    c.set_vertices ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    Vertex_handle v0,<BR>\n\nVertex_handle v1,<BR>\n\nVertex_handle v2,<BR>\n\nVertex_handle v3)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Sets the vertex pointers.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_set_neighbor6int_i+_Cell_handle_n9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.set_neighbor ( int i,  Cell_handle n)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Sets neighbor <I>i</I> to <I>n</I>.<BR>\n\n<EM>Precondition: </EM><MATH><I>i  <IMG BORDER=0 WIDTH=9 HEIGHT=21 ALIGN=MIDDLE SRC=\"cc_in.gif\"> {0, 1, 2, 3}</I></MATH>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_set_neighbors6Cell_handle_n0+_Cell_handle_n1+_Cell_handle_n2+_Cell_handle_n39;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    c.set_neighbors ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    Cell_handle n0,<BR>\n\nCell_handle n1,<BR>\n\nCell_handle n2,<BR>\n\nCell_handle n3)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Sets the neighbors pointers.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Checking</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_is_valid6int_dim=3+_bool_verbose_=_false9_const;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    c.is_valid ( int dim=3,  bool verbose = false)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    <I>dim</I> is the dimension of the triangulation, with default\nvalue&nbsp;3.<BR>\n\nIn dimension 3 (resp. 2, 1) this function must check that the cell\nshares three (resp. two, one) vertices with its neighbors, and these\nneighbors have a correct reciprocal neighboring link. Moreover, the\nconsistency of the orientations of common faces must be checked.<BR>\n\nThe validity of all the vertices of the cell must be checked.<BR>\n\nThe validity of the base cell is also checked.<BR>\n\nWhen <I>verbose</I> is set to <I>true</I>, messages are printed to give\na precise indication of the kind of invalidity encountered.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>See Also</H3>\n<P>\n\n<I><A HREF=\"Concept_TriangulationDataStructure_3--Vertex.html#Cross_link_anchor_1004\">TriangulationDataStructure_3::Vertex</A></I>.\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Concept_TriangulationDataStructure_3--Vertex.html\"><I>TriangulationDataStructure_3::Vertex</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_38!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 39159.0}