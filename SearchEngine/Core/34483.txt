{"text": "View Javadoc 1 2 Created on Mar 23 2 5 3 4 5 package edu uci isr impromptu common 6 7 import java io File 8 import java rmi Naming 9 import java rmi RemoteException 1 import java rmi registry LocateRegistry 11 import java rmi registry Registry 12 import java util ArrayList 13 import java util Collections 14 import java util HashMap 15 import java util Iterator 16 import java util List 17 import java util Map 18 import java util Set 19 2 import edu uci isr yancees EventInterface 21 import edu uci isr yancees GenericMessage 22 import edu uci isr yancees SubscriberInterface 23 import edu uci isr yancees YanceesEvent 24 import edu uci isr yancees YanceesException 25 import edu uci isr yancees client rmi YanceesRMIClient 26 import edu uci isr yancees server rmi RemoteYanceesImplementation 27 import edu uci isr yancees server service ServiceManager 28 29 3 Yancees connector to send and receive events This is the Yancess interface 31 between the peer owners repository or pie and the Yancees middleware 32 33 The peer manager discovers present peers and uses this class to interact 34 with Yancees This class forwards the available peers to the service 35 36 TODO architecture make this ArchStudio compatible and delivery independent 37 38 author Jie Ren 39 4 public class YanceesConnector implements SubscriberInterface 41 The Yancees server 42 private RemoteYanceesImplementation server 43 The Yancees client 44 private YanceesRMIClient client 45 The Yancees JmDNS service 46 private YanceesJmDNSService service 47 The handlers on the client side 48 private List processors Collections synchronizedList new ArrayList 49 5 51 Create a Yancees peer 52 53 public YanceesConnector String connectorName String configurationFileName 54 String hostname localhost 55 we use the peer manager algorithm to get the right interface address 56 in case there are two active interfaces at a time 57 hostname Utils getLocalAddress getHostAddress 58 the name under which this remote interface will be registered with the rmiregistry 59 String instanceName RemoteYanceesImplementation RMI LOOKUP NAME 6 if connectorName length 61 instanceName connectorName 62 String name hostname instanceName 63 try 64 Create the rmi registry 65 try 66 LocateRegistry createRegistry Registry REGISTRY PORT 67 68 catch RemoteException ri 69 If there is already one just use it 7 System out println YanceesConnector RMI Registry already loaded using existing instance 71 72 73 Thread sleep 5 74 75 server 76 server new RemoteYanceesImplementation new File configurationFileName 77 Naming rebind name server 78 79 client 8 client new YanceesRMIClient localhost connectorName 81 GenericMessage msg new GenericMessage subscription filter EQ name yancees version name 82 value type yanceesString 1 value EQ filter subscription 83 client subscribe msg this 84 85 service YanceesJmDNSService ServiceManager getInstance 86 getServiceByName YanceesJmDNSService SERVICE NAME 87 88 catch Exception e 89 Utils handleException e 9 91 92 93 94 Shutdown the peer 95 96 public void shutdown 97 try 98 server shutdownYancees 99 GenericMessage msg new GenericMessage subscription filter EQ name yancees version name 1 value type yanceesString 1 value EQ filter subscription 1 1 client unsubscribe this msg 1 2 1 3 catch RemoteException e 1 4 Utils handleException e 1 5 1 6 catch YanceesException e 1 7 Utils handleException e 1 8 1 9 11 111 112 Add a message processor 113 114 param mp the message processor to add 115 116 public void addMessageProcessor MessageProcessor mp 117 processors add mp 118 119 12 121 Remove a message processor 122 123 param mp the message processor to remove 124 125 public void removeMessageProcessor MessageProcessor mp 126 processors remove mp 127 128 129 13 Send a message 131 132 param msg the attribute and values of the message 133 134 public void send Map msg 135 136 create a new event to be published 137 YanceesEvent event new YanceesEvent 138 Set entries msg entrySet 139 for Iterator it entries iterator it hasNext 14 Map Entry entry Map Entry it next 141 event put String entry getKey String entry getValue 142 143 144 try 145 client publish event 146 147 catch YanceesException e 148 Utils handleException e 149 15 151 152 153 Notify receiving of an array of events 154 155 param myEvents the received events 156 157 public void notify EventInterface myEvents 158 159 for int i i myEvents length i 16 notify myEvents i 161 162 163 164 165 Notify receiving of an event 166 167 param myEvent the received event 168 169 public void notify EventInterface myEvent 17 171 if myEvent instanceof YanceesEvent 172 YanceesEvent ye YanceesEvent myEvent 173 try 174 Map msg new HashMap 175 for Iterator it ye getAttributeNamesIterator it hasNext 176 177 String name String it next 178 Object value ye get name 179 msg put name value 18 181 receiveMessage msg 182 183 catch Exception e 184 Utils handleException e 185 186 187 188 189 19 Handle receiving of a message 191 192 param msg the map of message attributes and values 193 194 public void receiveMessage Map msg 195 196 synchronized processors 197 for Iterator i processors iterator i hasNext 198 MessageProcessor mp MessageProcessor i next 199 mp processMessage msg 2 2 1 2 2 2 3 2 4 2 5 Tell the service that a new peer has joined 2 6 Yancees maintains a different set of peers than the proxyFilter or 2 7 the pie for a separate configuration Yancees needs to deliver to 2 8 every one but the repository signifies the presense of a peer Still 2 9 this is somewhat artificial 21 211 param peerName the name of the newly joined peer 212 param peerAddress the address of the newly joined peer 213 214 public void peerJoin String peerName String peerAddress 215 service addPeer peerName peerAddress 216 217 218 219 Tell the service that a peer has left 22 221 param peerName the name of the newly left peer 222 223 public void peerLeave String peerName 224 service removePeer peerName 225 226 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.30/xref/edu/uci/isr/impromptu/common/YanceesConnector.html", "title": "yanceesconnector xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>YanceesConnector xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../../../../stylesheet.css\" />\n</head>\n<body>\n<div id=\"overview\"><a href=\"../../../../../../apidocs/edu/uci/isr/impromptu/common/YanceesConnector.html\">View Javadoc</a></div><pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <em class=\"comment\">/*</em>\n<a name=\"2\" href=\"#2\">2</a>   <em class=\"comment\"> * Created on Mar 23, 2005</em>\n<a name=\"3\" href=\"#3\">3</a>   <em class=\"comment\"> *</em>\n<a name=\"4\" href=\"#4\">4</a>   <em class=\"comment\"> */</em>\n<a name=\"5\" href=\"#5\">5</a>   <strong>package</strong> <a href=\"../../../../../edu/uci/isr/impromptu/common/package-summary.html\">edu.uci.isr.impromptu.common</a>;\n<a name=\"6\" href=\"#6\">6</a>   \n<a name=\"7\" href=\"#7\">7</a>   <strong>import</strong> java.io.File;\n<a name=\"8\" href=\"#8\">8</a>   <strong>import</strong> java.rmi.Naming;\n<a name=\"9\" href=\"#9\">9</a>   <strong>import</strong> java.rmi.RemoteException;\n<a name=\"10\" href=\"#10\">10</a>  <strong>import</strong> java.rmi.registry.LocateRegistry;\n<a name=\"11\" href=\"#11\">11</a>  <strong>import</strong> java.rmi.registry.Registry;\n<a name=\"12\" href=\"#12\">12</a>  <strong>import</strong> java.util.ArrayList;\n<a name=\"13\" href=\"#13\">13</a>  <strong>import</strong> java.util.Collections;\n<a name=\"14\" href=\"#14\">14</a>  <strong>import</strong> java.util.HashMap;\n<a name=\"15\" href=\"#15\">15</a>  <strong>import</strong> java.util.Iterator;\n<a name=\"16\" href=\"#16\">16</a>  <strong>import</strong> java.util.List;\n<a name=\"17\" href=\"#17\">17</a>  <strong>import</strong> java.util.Map;\n<a name=\"18\" href=\"#18\">18</a>  <strong>import</strong> java.util.Set;\n<a name=\"19\" href=\"#19\">19</a>  \n<a name=\"20\" href=\"#20\">20</a>  <strong>import</strong> edu.uci.isr.yancees.EventInterface;\n<a name=\"21\" href=\"#21\">21</a>  <strong>import</strong> edu.uci.isr.yancees.GenericMessage;\n<a name=\"22\" href=\"#22\">22</a>  <strong>import</strong> edu.uci.isr.yancees.SubscriberInterface;\n<a name=\"23\" href=\"#23\">23</a>  <strong>import</strong> edu.uci.isr.yancees.YanceesEvent;\n<a name=\"24\" href=\"#24\">24</a>  <strong>import</strong> edu.uci.isr.yancees.YanceesException;\n<a name=\"25\" href=\"#25\">25</a>  <strong>import</strong> edu.uci.isr.yancees.client.rmi.YanceesRMIClient;\n<a name=\"26\" href=\"#26\">26</a>  <strong>import</strong> edu.uci.isr.yancees.server.rmi.RemoteYanceesImplementation;\n<a name=\"27\" href=\"#27\">27</a>  <strong>import</strong> edu.uci.isr.yancees.server.service.ServiceManager;\n<a name=\"28\" href=\"#28\">28</a>  \n<a name=\"29\" href=\"#29\">29</a>  <em>/**<em>*</em></em>\n<a name=\"30\" href=\"#30\">30</a>  <em> * Yancees connector to send and receive events. This is the Yancess interface </em>\n<a name=\"31\" href=\"#31\">31</a>  <em> * between the peer owners (repository or pie) and the Yancees middleware.</em>\n<a name=\"32\" href=\"#32\">32</a>  <em> * </em>\n<a name=\"33\" href=\"#33\">33</a>  <em> * The peer manager discovers present peers, and uses this class to interact </em>\n<a name=\"34\" href=\"#34\">34</a>  <em> * with Yancees. This class forwards the available peers to the service. </em>\n<a name=\"35\" href=\"#35\">35</a>  <em> *   </em>\n<a name=\"36\" href=\"#36\">36</a>  <em> * TODO: architecture: make this ArchStudio compatible and delivery independent</em>\n<a name=\"37\" href=\"#37\">37</a>  <em> * </em>\n<a name=\"38\" href=\"#38\">38</a>  <em> * @author Jie Ren</em>\n<a name=\"39\" href=\"#39\">39</a>  <em> */</em>\n<a name=\"40\" href=\"#40\">40</a>  <strong>public</strong> <strong>class</strong> <a href=\"../../../../../edu/uci/isr/impromptu/common/YanceesConnector.html\">YanceesConnector</a> implements SubscriberInterface {\n<a name=\"41\" href=\"#41\">41</a>      <em class=\"comment\">// The Yancees server</em>\n<a name=\"42\" href=\"#42\">42</a>      <strong>private</strong> \tRemoteYanceesImplementation server;\n<a name=\"43\" href=\"#43\">43</a>      <em class=\"comment\">// The Yancees client</em>\n<a name=\"44\" href=\"#44\">44</a>      <strong>private</strong> \tYanceesRMIClient \t\t\tclient;\n<a name=\"45\" href=\"#45\">45</a>      <em class=\"comment\">// The Yancees JmDNS service</em>\n<a name=\"46\" href=\"#46\">46</a>      <strong>private</strong> \tYanceesJmDNSService\t\t\tservice;\n<a name=\"47\" href=\"#47\">47</a>      <em class=\"comment\">// The handlers on the client side</em>\n<a name=\"48\" href=\"#48\">48</a>      <strong>private</strong> \tList\t\t\t \t\t\tprocessors = Collections.synchronizedList(<strong>new</strong> ArrayList());\n<a name=\"49\" href=\"#49\">49</a>  \n<a name=\"50\" href=\"#50\">50</a>      <em>/**<em>*</em></em>\n<a name=\"51\" href=\"#51\">51</a>  <em>     * Create a Yancees peer</em>\n<a name=\"52\" href=\"#52\">52</a>  <em>     */</em>\n<a name=\"53\" href=\"#53\">53</a>      <strong>public</strong> <a href=\"../../../../../edu/uci/isr/impromptu/common/YanceesConnector.html\">YanceesConnector</a>(String connectorName, String configurationFileName) {\n<a name=\"54\" href=\"#54\">54</a>          String hostname = <span class=\"string\">\"localhost\"</span>;\n<a name=\"55\" href=\"#55\">55</a>          <em class=\"comment\">// we use the peer manager algorithm to get the right interface address</em>\n<a name=\"56\" href=\"#56\">56</a>          <em class=\"comment\">// in case there are two active interfaces at a time.</em>\n<a name=\"57\" href=\"#57\">57</a>          hostname = Utils.getLocalAddress().getHostAddress();\n<a name=\"58\" href=\"#58\">58</a>          <em class=\"comment\">// the name under which this remote interface will be registered with the rmiregistry</em>\n<a name=\"59\" href=\"#59\">59</a>          String instanceName = RemoteYanceesImplementation.RMI_LOOKUP_NAME;\n<a name=\"60\" href=\"#60\">60</a>          <strong>if</strong> (connectorName.length() != 0)\n<a name=\"61\" href=\"#61\">61</a>              instanceName = connectorName;\n<a name=\"62\" href=\"#62\">62</a>          String name = <span class=\"string\">\"//\"</span> + hostname + <span class=\"string\">\"/\"</span> + instanceName;\n<a name=\"63\" href=\"#63\">63</a>          <strong>try</strong> {\n<a name=\"64\" href=\"#64\">64</a>              <em class=\"comment\">// Create the rmi registry</em>\n<a name=\"65\" href=\"#65\">65</a>              <strong>try</strong> {\n<a name=\"66\" href=\"#66\">66</a>  \t    \t\tLocateRegistry.createRegistry(Registry.REGISTRY_PORT);\n<a name=\"67\" href=\"#67\">67</a>              }\n<a name=\"68\" href=\"#68\">68</a>              <strong>catch</strong> (RemoteException ri) {\n<a name=\"69\" href=\"#69\">69</a>  \t            <em class=\"comment\">// If there is already one, just use it</em>\n<a name=\"70\" href=\"#70\">70</a>              \tSystem.out.println(<span class=\"string\">\"YanceesConnector: RMI Registry already loaded, using existing instance...\"</span>);\n<a name=\"71\" href=\"#71\">71</a>              }\n<a name=\"72\" href=\"#72\">72</a>              \n<a name=\"73\" href=\"#73\">73</a>              Thread.sleep(500);\n<a name=\"74\" href=\"#74\">74</a>  \n<a name=\"75\" href=\"#75\">75</a>      \t\t<em class=\"comment\">// server</em>\n<a name=\"76\" href=\"#76\">76</a>  \t        server = <strong>new</strong> RemoteYanceesImplementation(<strong>new</strong> File(configurationFileName));\n<a name=\"77\" href=\"#77\">77</a>  \t        Naming.rebind(name, server);\n<a name=\"78\" href=\"#78\">78</a>  \n<a name=\"79\" href=\"#79\">79</a>  \t        <em class=\"comment\">// client</em>\n<a name=\"80\" href=\"#80\">80</a>  \t\t\tclient = <strong>new</strong> YanceesRMIClient(<span class=\"string\">\"localhost\"</span>, connectorName);\n<a name=\"81\" href=\"#81\">81</a>              GenericMessage msg = <strong>new</strong> GenericMessage(<span class=\"string\">\"&lt;subscription>&lt;filter>&lt;EQ>&lt;name>yancees.version&lt;/name>\"</span>\n<a name=\"82\" href=\"#82\">82</a>                      + <span class=\"string\">\"&lt;value type=\\&quot;yanceesString\\&quot;>1.0&lt;/value>&lt;/EQ>&lt;/filter>&lt;/subscription>\"</span>);\n<a name=\"83\" href=\"#83\">83</a>              client.subscribe(msg, <strong>this</strong>);\n<a name=\"84\" href=\"#84\">84</a>              \n<a name=\"85\" href=\"#85\">85</a>              service = (YanceesJmDNSService)ServiceManager.getInstance().\n<a name=\"86\" href=\"#86\">86</a>              \t\t\tgetServiceByName(YanceesJmDNSService.SERVICE_NAME);\n<a name=\"87\" href=\"#87\">87</a>          }\n<a name=\"88\" href=\"#88\">88</a>          <strong>catch</strong> (Exception e) {\n<a name=\"89\" href=\"#89\">89</a>              Utils.handleException(e);\n<a name=\"90\" href=\"#90\">90</a>          }\n<a name=\"91\" href=\"#91\">91</a>      }\n<a name=\"92\" href=\"#92\">92</a>  \n<a name=\"93\" href=\"#93\">93</a>      <em>/**<em>*</em></em>\n<a name=\"94\" href=\"#94\">94</a>  <em>     * Shutdown the peer</em>\n<a name=\"95\" href=\"#95\">95</a>  <em>     */</em>\n<a name=\"96\" href=\"#96\">96</a>      <strong>public</strong> <strong>void</strong> shutdown() {\n<a name=\"97\" href=\"#97\">97</a>          <strong>try</strong> {\n<a name=\"98\" href=\"#98\">98</a>              server.shutdownYancees();\n<a name=\"99\" href=\"#99\">99</a>              GenericMessage msg = <strong>new</strong> GenericMessage(<span class=\"string\">\"&lt;subscription>&lt;filter>&lt;EQ>&lt;name>yancees.version&lt;/name>\"</span>\n<a name=\"100\" href=\"#100\">100</a>                     + <span class=\"string\">\"&lt;value type=\\&quot;yanceesString\\&quot;>1.0&lt;/value>&lt;/EQ>&lt;/filter>&lt;/subscription>\"</span>);\n<a name=\"101\" href=\"#101\">101</a>             client.unsubscribe(<strong>this</strong>, msg);\n<a name=\"102\" href=\"#102\">102</a>         } \n<a name=\"103\" href=\"#103\">103</a>         <strong>catch</strong> (RemoteException e) {\n<a name=\"104\" href=\"#104\">104</a>             Utils.handleException(e);\n<a name=\"105\" href=\"#105\">105</a>         } \n<a name=\"106\" href=\"#106\">106</a>         <strong>catch</strong> (YanceesException e) {\n<a name=\"107\" href=\"#107\">107</a>             Utils.handleException(e);\n<a name=\"108\" href=\"#108\">108</a>         }        \n<a name=\"109\" href=\"#109\">109</a>     }\n<a name=\"110\" href=\"#110\">110</a>     \n<a name=\"111\" href=\"#111\">111</a>     <em>/**<em>*</em></em>\n<a name=\"112\" href=\"#112\">112</a> <em>     * Add a message processor</em>\n<a name=\"113\" href=\"#113\">113</a> <em>     * </em>\n<a name=\"114\" href=\"#114\">114</a> <em>     * @param mp the message processor to add</em>\n<a name=\"115\" href=\"#115\">115</a> <em>     */</em>\n<a name=\"116\" href=\"#116\">116</a>     <strong>public</strong> <strong>void</strong> addMessageProcessor(<a href=\"../../../../../edu/uci/isr/impromptu/common/MessageProcessor.html\">MessageProcessor</a> mp) {\n<a name=\"117\" href=\"#117\">117</a>         processors.add(mp);\n<a name=\"118\" href=\"#118\">118</a>     }\n<a name=\"119\" href=\"#119\">119</a>     \n<a name=\"120\" href=\"#120\">120</a>     <em>/**<em>*</em></em>\n<a name=\"121\" href=\"#121\">121</a> <em>     * Remove a message processor</em>\n<a name=\"122\" href=\"#122\">122</a> <em>     * </em>\n<a name=\"123\" href=\"#123\">123</a> <em>     * @param mp the message processor to remove</em>\n<a name=\"124\" href=\"#124\">124</a> <em>     */</em>\n<a name=\"125\" href=\"#125\">125</a>     <strong>public</strong> <strong>void</strong> removeMessageProcessor(<a href=\"../../../../../edu/uci/isr/impromptu/common/MessageProcessor.html\">MessageProcessor</a> mp) {\n<a name=\"126\" href=\"#126\">126</a>         processors.remove(mp);\n<a name=\"127\" href=\"#127\">127</a>     }\n<a name=\"128\" href=\"#128\">128</a> \n<a name=\"129\" href=\"#129\">129</a>     <em>/**<em>*</em></em>\n<a name=\"130\" href=\"#130\">130</a> <em>     * Send a message</em>\n<a name=\"131\" href=\"#131\">131</a> <em>     * </em>\n<a name=\"132\" href=\"#132\">132</a> <em>     * @param msg\tthe attribute and values of the message</em>\n<a name=\"133\" href=\"#133\">133</a> <em>     */</em>\n<a name=\"134\" href=\"#134\">134</a>     <strong>public</strong> <strong>void</strong> send(Map msg)\n<a name=\"135\" href=\"#135\">135</a>     {\n<a name=\"136\" href=\"#136\">136</a>         <em class=\"comment\">//\t\tcreate a new event to be published</em>\n<a name=\"137\" href=\"#137\">137</a>         YanceesEvent event = <strong>new</strong> YanceesEvent();\n<a name=\"138\" href=\"#138\">138</a>         Set entries = msg.entrySet();\n<a name=\"139\" href=\"#139\">139</a>         <strong>for</strong>(Iterator it = entries.iterator(); it.hasNext();) {\n<a name=\"140\" href=\"#140\">140</a>             Map.Entry entry = (Map.Entry)it.next();\n<a name=\"141\" href=\"#141\">141</a>             event.put((String)entry.getKey(), (String)entry.getValue());\n<a name=\"142\" href=\"#142\">142</a>         }\n<a name=\"143\" href=\"#143\">143</a> \n<a name=\"144\" href=\"#144\">144</a>         <strong>try</strong> {\n<a name=\"145\" href=\"#145\">145</a>             client.publish(event);\n<a name=\"146\" href=\"#146\">146</a>         }\n<a name=\"147\" href=\"#147\">147</a>         <strong>catch</strong>(YanceesException e) {\n<a name=\"148\" href=\"#148\">148</a>             Utils.handleException(e);\n<a name=\"149\" href=\"#149\">149</a>         }\n<a name=\"150\" href=\"#150\">150</a>     }\n<a name=\"151\" href=\"#151\">151</a> \n<a name=\"152\" href=\"#152\">152</a>     <em>/**<em>*</em></em>\n<a name=\"153\" href=\"#153\">153</a> <em>     * Notify receiving of an array of events</em>\n<a name=\"154\" href=\"#154\">154</a> <em>     * </em>\n<a name=\"155\" href=\"#155\">155</a> <em>     * @param myEvents\tthe received events</em>\n<a name=\"156\" href=\"#156\">156</a> <em>     */</em>\n<a name=\"157\" href=\"#157\">157</a>     <strong>public</strong> <strong>void</strong> notify(EventInterface[] myEvents)\n<a name=\"158\" href=\"#158\">158</a>     {\n<a name=\"159\" href=\"#159\">159</a>         <strong>for</strong>(<strong>int</strong> i = 0; i &lt; myEvents.length; i++) {\n<a name=\"160\" href=\"#160\">160</a>             notify(myEvents[i]);\n<a name=\"161\" href=\"#161\">161</a>         }\n<a name=\"162\" href=\"#162\">162</a>     }\n<a name=\"163\" href=\"#163\">163</a> \n<a name=\"164\" href=\"#164\">164</a>     <em>/**<em>*</em></em>\n<a name=\"165\" href=\"#165\">165</a> <em>     * Notify receiving of an event</em>\n<a name=\"166\" href=\"#166\">166</a> <em>     * </em>\n<a name=\"167\" href=\"#167\">167</a> <em>     * @param myEvent the received event</em>\n<a name=\"168\" href=\"#168\">168</a> <em>     */</em>\n<a name=\"169\" href=\"#169\">169</a>     <strong>public</strong> <strong>void</strong> notify(EventInterface myEvent)\n<a name=\"170\" href=\"#170\">170</a>     {\n<a name=\"171\" href=\"#171\">171</a>         <strong>if</strong>(myEvent instanceof YanceesEvent) {\n<a name=\"172\" href=\"#172\">172</a>             YanceesEvent ye = (YanceesEvent)myEvent;\n<a name=\"173\" href=\"#173\">173</a>             <strong>try</strong> {\n<a name=\"174\" href=\"#174\">174</a>                 Map msg = <strong>new</strong> HashMap();\n<a name=\"175\" href=\"#175\">175</a>                 <strong>for</strong>(Iterator it = ye.getAttributeNamesIterator(); it.hasNext();)\n<a name=\"176\" href=\"#176\">176</a>                 {\n<a name=\"177\" href=\"#177\">177</a>                     String name = (String)it.next();\n<a name=\"178\" href=\"#178\">178</a>                     Object value = ye.get(name);\n<a name=\"179\" href=\"#179\">179</a>                     msg.put(name, value);\n<a name=\"180\" href=\"#180\">180</a>                 }\n<a name=\"181\" href=\"#181\">181</a>                 receiveMessage(msg);\n<a name=\"182\" href=\"#182\">182</a>             }\n<a name=\"183\" href=\"#183\">183</a>             <strong>catch</strong>(Exception e) {\n<a name=\"184\" href=\"#184\">184</a>                 Utils.handleException(e);\n<a name=\"185\" href=\"#185\">185</a>             }\n<a name=\"186\" href=\"#186\">186</a>         }\n<a name=\"187\" href=\"#187\">187</a>     }\n<a name=\"188\" href=\"#188\">188</a> \n<a name=\"189\" href=\"#189\">189</a>     <em>/**<em>*</em></em>\n<a name=\"190\" href=\"#190\">190</a> <em>     * Handle receiving of a message</em>\n<a name=\"191\" href=\"#191\">191</a> <em>     *</em>\n<a name=\"192\" href=\"#192\">192</a> <em>     * @param msg the map of message attributes and values</em>\n<a name=\"193\" href=\"#193\">193</a> <em>     */</em>\n<a name=\"194\" href=\"#194\">194</a>     <strong>public</strong> <strong>void</strong> receiveMessage(Map msg)\n<a name=\"195\" href=\"#195\">195</a>     {\n<a name=\"196\" href=\"#196\">196</a>         <strong>synchronized</strong>(processors) {\n<a name=\"197\" href=\"#197\">197</a> \t        <strong>for</strong>(Iterator i = processors.iterator(); i.hasNext(); ) {\n<a name=\"198\" href=\"#198\">198</a> \t            MessageProcessor\tmp = (MessageProcessor)i.next();\n<a name=\"199\" href=\"#199\">199</a> \t            mp.processMessage(msg);\n<a name=\"200\" href=\"#200\">200</a> \t        }\n<a name=\"201\" href=\"#201\">201</a>         }\n<a name=\"202\" href=\"#202\">202</a>     }\n<a name=\"203\" href=\"#203\">203</a>     \n<a name=\"204\" href=\"#204\">204</a>     <em>/**<em>*</em></em>\n<a name=\"205\" href=\"#205\">205</a> <em>     * Tell the service that a new peer has joined.</em>\n<a name=\"206\" href=\"#206\">206</a> <em>     * Yancees maintains a different set of peers than the proxyFilter or </em>\n<a name=\"207\" href=\"#207\">207</a> <em>     * the pie for a separate configuration. Yancees needs to deliver to</em>\n<a name=\"208\" href=\"#208\">208</a> <em>     * every one, but the repository signifies the presense of a peer. Still,</em>\n<a name=\"209\" href=\"#209\">209</a> <em>     * this is somewhat artificial. </em>\n<a name=\"210\" href=\"#210\">210</a> <em>     * </em>\n<a name=\"211\" href=\"#211\">211</a> <em>     * @param\tpeerName \tthe name of the newly joined peer</em>\n<a name=\"212\" href=\"#212\">212</a> <em>     * @param\tpeerAddress the address of the newly joined peer</em>\n<a name=\"213\" href=\"#213\">213</a> <em>     */</em>\n<a name=\"214\" href=\"#214\">214</a>     <strong>public</strong> <strong>void</strong> peerJoin(String peerName, String peerAddress) {\n<a name=\"215\" href=\"#215\">215</a>         service.addPeer(peerName, peerAddress);\n<a name=\"216\" href=\"#216\">216</a>     }\n<a name=\"217\" href=\"#217\">217</a>     \n<a name=\"218\" href=\"#218\">218</a>     <em>/**<em>*</em></em>\n<a name=\"219\" href=\"#219\">219</a> <em>     * Tell the service that a peer has left</em>\n<a name=\"220\" href=\"#220\">220</a> <em>     * </em>\n<a name=\"221\" href=\"#221\">221</a> <em>     * @param\tpeerName \tthe name of the newly left peer</em>\n<a name=\"222\" href=\"#222\">222</a> <em>     */</em>\n<a name=\"223\" href=\"#223\">223</a>     <strong>public</strong> <strong>void</strong> peerLeave(String peerName) {\n<a name=\"224\" href=\"#224\">224</a>         service.removePeer(peerName);\n<a name=\"225\" href=\"#225\">225</a>     }\n<a name=\"226\" href=\"#226\">226</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 34483.0}