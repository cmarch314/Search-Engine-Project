{"text": "Main Page Modules Data Structures File List Data Fields Globals Related Pages vpmg h File ReferenceContains declarations for class Vpmg More include maloc maloc h include apbs vhal h include apbs vpmgp h include apbs vacc h include apbs vcap h include apbs vpbe h include apbs vgrid h include apbs mgparm h include apbs pbeparm h Include dependency graph for vpmg h This graph shows which files directly or indirectly include this file Go to the source code of this file Data Structuresstruct sVpmg Contains public data members for Vpmg class module More Defines define VPMGMAXPART 2 Typedefs typedef sVpmg Vpmg Declaration of the Vpmg class as the Vpmg structure Functionsunsigned long int Vpmg memChk Vpmg thee Return the memory used by this structure and its contents in bytes Vpmg Vpmg ctor Vpmgp parms Vpbe pbe int focusFlag Vpmg pmgOLD MGparm mgparm PBEparm calcEnergy energyFlag Constructor for the Vpmg class allocates new memory int Vpmg ctor2 Vpmg thee Vpmgp parms Vpbe pbe int focusFlag Vpmg pmgOLD MGparm mgparm PBEparm calcEnergy energyFlag FORTRAN stub constructor for the Vpmg class uses previously allocated memory void Vpmg dtor Vpmg thee Object destructor void Vpmg dtor2 Vpmg thee FORTRAN stub object destructor int Vpmg fillco Vpmg thee Vsurf Meth surfMeth double splineWin Vchrg Meth chargeMeth int useDielXMap Vgrid dielXMap int useDielYMap Vgrid dielYMap int useDielZMap Vgrid dielZMap int useKappaMap Vgrid kappaMap int useChargeMap Vgrid chargeMap Fill the coefficient arrays prior to solving the equation int Vpmg solve Vpmg thee Solve the PBE using PMG int Vpmg solveLaplace Vpmg thee Solve Poisson s equation with a homogeneous Laplacian operator using the solvent dielectric constant This solution is performed by a sine wave decomposition double Vpmg energy Vpmg thee int extFlag Get the total electrostatic energy double Vpmg qfEnergy Vpmg thee int extFlag Get the fixed charge contribution to the electrostatic energy double Vpmg qfAtomEnergy Vpmg thee Vatom atom Get the per atom fixed charge contribution to the electrostatic energy double Vpmg qmEnergy Vpmg thee int extFlag Get the mobile charge contribution to the electrostatic energy double Vpmg dielEnergy Vpmg thee int extFlag Get the polarization contribution to the electrostatic energy double Vpmg npEnergy Vpmg thee int extFlag Get the apolar energy double Vpmg dielGradNorm Vpmg thee Get the integral of the gradient of the dielectric function int Vpmg force Vpmg thee double force int atomID Vsurf Meth srfm Vchrg Meth chgm Calculate the total force on the specified atom in units of k B T AA int Vpmg qfForce Vpmg thee double force int atomID Vchrg Meth chgm Calculate the charge field force on the specified atom in units of k B T AA int Vpmg dbnpForce Vpmg thee double dbForce double npForce int atomID Vsurf Meth srfm Calculate the dielectric boundary and apolar forces on the specified atom in units of k B T AA int Vpmg ibForce Vpmg thee double force int atomID Vsurf Meth srfm Calculate the osmotic pressure on the specified atom in units of k B T AA void Vpmg setPart Vpmg thee double lowerCorner 3 double upperCorner 3 int bflags 6 Set partition information which restricts the calculation of observables to a rectangular subset of the problem domain void Vpmg unsetPart Vpmg thee Remove partition restrictions int Vpmg fillArray Vpmg thee double vec Vdata Type type double parm Vhal PBEType pbetype Fill the specified array with accessibility values void Vpmg printColComp Vpmg thee char path 72 char title 72 char mxtype 3 int flag Print out a column compressed sparse matrix in Harwell Boeing format Detailed Description Contains declarations for class Vpmg Version Idvpmg h v 2 59 2 5 7 15 2 48 29 apbs Exp Author Nathan A Baker Attention APBS Adaptive Poisson Boltzmann Solver Nathan A Baker baker biochem wustl edu Dept of Biochemistry and Molecular Biophysics Center for Computational Biology Washington University in St Louis Additional contributing authors listed in the code documentation Copyright c 2 2 2 5 Washington University in St Louis All Rights Reserved Portions Copyright c 1999 2 2 The Regents of the University of California Portions Copyright c 1995 Michael Holst This file is part of APBS APBS is free software you can redistribute it and or modify it under the terms of the GNU General Public License as published by the Free Software Foundation either version 2 of the License or at your option any later version APBS is distributed in the hope that it will be useful but WITHOUT ANY WARRANTY without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE See the GNU General Public License for more details You should have received a copy of the GNU General Public License along with APBS if not write to the Free Software Foundation Inc 59 Temple Place Suite 33 Boston MA 2111 13 7 USA Generated on Tue Dec 6 1 5 5 2 5 for APBS by 1 3 5", "_id": "http://www.ics.uci.edu/~dock/manuals/apbs/html/programmer/vpmg_8h.html", "title": "apbs: vpmg.h file reference", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=iso-8859-1\">\n<title>APBS: vpmg.h File Reference</title>\n<link href=\"apbs.css\" rel=\"stylesheet\" type=\"text/css\">\n</head><body>\n<!-- Generated by Doxygen 1.3.5 -->\n<div class=\"qindex\"><a class=\"qindex\" href=\"index.html\">Main&nbsp;Page</a> | <a class=\"qindex\" href=\"modules.html\">Modules</a> | <a class=\"qindex\" href=\"annotated.html\">Data&nbsp;Structures</a> | <a class=\"qindex\" href=\"files.html\">File&nbsp;List</a> | <a class=\"qindex\" href=\"functions.html\">Data&nbsp;Fields</a> | <a class=\"qindex\" href=\"globals.html\">Globals</a> | <a class=\"qindex\" href=\"pages.html\">Related&nbsp;Pages</a></div>\n<h1>vpmg.h File Reference</h1>Contains declarations for class Vpmg.  \n<a href=\"#_details\">More...</a>\n<p>\n<code>#include \"maloc/maloc.h\"</code><br>\n<code>#include \"<a class=\"el\" href=\"vhal_8h-source.html\">apbs/vhal.h</a>\"</code><br>\n<code>#include \"<a class=\"el\" href=\"vpmgp_8h-source.html\">apbs/vpmgp.h</a>\"</code><br>\n<code>#include \"<a class=\"el\" href=\"vacc_8h-source.html\">apbs/vacc.h</a>\"</code><br>\n<code>#include \"<a class=\"el\" href=\"vcap_8h-source.html\">apbs/vcap.h</a>\"</code><br>\n<code>#include \"<a class=\"el\" href=\"vpbe_8h-source.html\">apbs/vpbe.h</a>\"</code><br>\n<code>#include \"<a class=\"el\" href=\"vgrid_8h-source.html\">apbs/vgrid.h</a>\"</code><br>\n<code>#include \"<a class=\"el\" href=\"mgparm_8h-source.html\">apbs/mgparm.h</a>\"</code><br>\n<code>#include \"<a class=\"el\" href=\"pbeparm_8h-source.html\">apbs/pbeparm.h</a>\"</code><br>\n\n<p>\nInclude dependency graph for vpmg.h:<p><center><img src=\"vpmg_8h__incl.png\" border=\"0\" usemap=\"#vpmg.h_map\" alt=\"Include dependency graph\"></center>\n<map name=\"vpmg.h_map\">\n<area href=\"vpmgp_8h.html\" shape=\"rect\" coords=\"556,83,663,107\" alt=\"\">\n<area href=\"vacc_8h.html\" shape=\"rect\" coords=\"439,83,532,107\" alt=\"\">\n<area href=\"vcap_8h.html\" shape=\"rect\" coords=\"72,157,165,181\" alt=\"\">\n<area href=\"vpbe_8h.html\" shape=\"rect\" coords=\"355,157,448,181\" alt=\"\">\n<area href=\"vgrid_8h.html\" shape=\"rect\" coords=\"687,83,780,107\" alt=\"\">\n<area href=\"mgparm_8h.html\" shape=\"rect\" coords=\"108,83,223,107\" alt=\"\">\n<area href=\"pbeparm_8h.html\" shape=\"rect\" coords=\"247,83,364,107\" alt=\"\">\n<area href=\"vhal_8h.html\" shape=\"rect\" coords=\"564,8,655,32\" alt=\"\">\n</map>\n\n<p>\nThis graph shows which files directly or indirectly include this file:<p><center><img src=\"vpmg_8h__dep__incl.png\" border=\"0\" usemap=\"#vpmg.hdep_map\" alt=\"Included by dependency graph\"></center>\n<map name=\"vpmg.hdep_map\">\n<area href=\"apbs_8h.html\" shape=\"rect\" coords=\"16,83,77,107\" alt=\"\">\n<area href=\"routines_8h.html\" shape=\"rect\" coords=\"7,8,87,32\" alt=\"\">\n</map>\n\n<p>\n<a href=\"vpmg_8h-source.html\">Go to the source code of this file.</a><table border=0 cellpadding=0 cellspacing=0>\n<tr><td></td></tr>\n<tr><td colspan=2><br><h2>Data Structures</h2></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>struct &nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"structsVpmg.html\">sVpmg</a></td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Contains public data members for Vpmg class/module. </em> <a href=\"structsVpmg.html#_details\">More...</a><em><br><br></td></tr>\n<tr><td colspan=2><br><h2>Defines</h2></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>#define&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga24\">VPMGMAXPART</a>&nbsp;&nbsp;&nbsp;2000</td></tr>\n\n<tr><td colspan=2><br><h2>Typedefs</h2></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top><a class=\"anchor\" name=\"ga0\" doxytag=\"vpmg.h::Vpmg\" ></a>\ntypedef <a class=\"el\" href=\"structsVpmg.html\">sVpmg</a>&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga0\">Vpmg</a></td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Declaration of the Vpmg class as the Vpmg structure. <br><br></td></tr>\n<tr><td colspan=2><br><h2>Functions</h2></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>unsigned long int&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga1\">Vpmg_memChk</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Return the memory used by this structure (and its contents) in bytes.  <a href=\"group__Vpmg.html#ga1\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top><a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga2\">Vpmg_ctor</a> (<a class=\"el\" href=\"structsVpmgp.html\">Vpmgp</a> *parms, <a class=\"el\" href=\"structsVpbe.html\">Vpbe</a> *pbe, int focusFlag, <a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *pmgOLD, <a class=\"el\" href=\"structsMGparm.html\">MGparm</a> *mgparm, <a class=\"el\" href=\"group__PBEparm.html#ga0\">PBEparm_calcEnergy</a> energyFlag)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Constructor for the Vpmg class (allocates new memory).  <a href=\"group__Vpmg.html#ga2\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>int&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga3\">Vpmg_ctor2</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, <a class=\"el\" href=\"structsVpmgp.html\">Vpmgp</a> *parms, <a class=\"el\" href=\"structsVpbe.html\">Vpbe</a> *pbe, int focusFlag, <a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *pmgOLD, <a class=\"el\" href=\"structsMGparm.html\">MGparm</a> *mgparm, <a class=\"el\" href=\"group__PBEparm.html#ga0\">PBEparm_calcEnergy</a> energyFlag)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">FORTRAN stub constructor for the Vpmg class (uses previously-allocated memory).  <a href=\"group__Vpmg.html#ga3\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>void&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga4\">Vpmg_dtor</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> **thee)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Object destructor.  <a href=\"group__Vpmg.html#ga4\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>void&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga5\">Vpmg_dtor2</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">FORTRAN stub object destructor.  <a href=\"group__Vpmg.html#ga5\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>int&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga6\">Vpmg_fillco</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, <a class=\"el\" href=\"group__Vhal.html#ga32\">Vsurf_Meth</a> surfMeth, double splineWin, <a class=\"el\" href=\"group__Vhal.html#ga33\">Vchrg_Meth</a> chargeMeth, int useDielXMap, <a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *dielXMap, int useDielYMap, <a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *dielYMap, int useDielZMap, <a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *dielZMap, int useKappaMap, <a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *kappaMap, int useChargeMap, <a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *chargeMap)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Fill the coefficient arrays prior to solving the equation.  <a href=\"group__Vpmg.html#ga6\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>int&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga7\">Vpmg_solve</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Solve the PBE using PMG.  <a href=\"group__Vpmg.html#ga7\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>int&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga8\">Vpmg_solveLaplace</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Solve Poisson's equation with a homogeneous Laplacian operator using the solvent dielectric constant. This solution is performed by a sine wave decomposition.  <a href=\"group__Vpmg.html#ga8\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga9\">Vpmg_energy</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, int extFlag)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Get the total electrostatic energy.  <a href=\"group__Vpmg.html#ga9\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga10\">Vpmg_qfEnergy</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, int extFlag)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Get the \"fixed charge\" contribution to the electrostatic energy.  <a href=\"group__Vpmg.html#ga10\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga11\">Vpmg_qfAtomEnergy</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, <a class=\"el\" href=\"structsVatom.html\">Vatom</a> *atom)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Get the per-atom \"fixed charge\" contribution to the electrostatic energy.  <a href=\"group__Vpmg.html#ga11\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga12\">Vpmg_qmEnergy</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, int extFlag)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Get the \"mobile charge\" contribution to the electrostatic energy.  <a href=\"group__Vpmg.html#ga12\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga13\">Vpmg_dielEnergy</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, int extFlag)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Get the \"polarization\" contribution to the electrostatic energy.  <a href=\"group__Vpmg.html#ga13\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga14\">Vpmg_npEnergy</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, int extFlag)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Get the \"apolar\" energy.  <a href=\"group__Vpmg.html#ga14\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga15\">Vpmg_dielGradNorm</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Get the integral of the gradient of the dielectric function.  <a href=\"group__Vpmg.html#ga15\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>int&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga16\">Vpmg_force</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, double *force, int atomID, <a class=\"el\" href=\"group__Vhal.html#ga32\">Vsurf_Meth</a> srfm, <a class=\"el\" href=\"group__Vhal.html#ga33\">Vchrg_Meth</a> chgm)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Calculate the total force on the specified atom in units of k_B T/AA.  <a href=\"group__Vpmg.html#ga16\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>int&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga17\">Vpmg_qfForce</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, double *force, int atomID, <a class=\"el\" href=\"group__Vhal.html#ga33\">Vchrg_Meth</a> chgm)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Calculate the \"charge-field\" force on the specified atom in units of k_B T/AA.  <a href=\"group__Vpmg.html#ga17\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>int&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga18\">Vpmg_dbnpForce</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, double *dbForce, double *npForce, int atomID, <a class=\"el\" href=\"group__Vhal.html#ga32\">Vsurf_Meth</a> srfm)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Calculate the dielectric boundary and apolar forces on the specified atom in units of k_B T/AA.  <a href=\"group__Vpmg.html#ga18\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>int&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga19\">Vpmg_ibForce</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, double *force, int atomID, <a class=\"el\" href=\"group__Vhal.html#ga32\">Vsurf_Meth</a> srfm)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Calculate the osmotic pressure on the specified atom in units of k_B T/AA.  <a href=\"group__Vpmg.html#ga19\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>void&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga20\">Vpmg_setPart</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, double lowerCorner[3], double upperCorner[3], int bflags[6])</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Set partition information which restricts the calculation of observables to a (rectangular) subset of the problem domain.  <a href=\"group__Vpmg.html#ga20\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>void&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga21\">Vpmg_unsetPart</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Remove partition restrictions.  <a href=\"group__Vpmg.html#ga21\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>int&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga22\">Vpmg_fillArray</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, double *vec, <a class=\"el\" href=\"group__Vhal.html#ga34\">Vdata_Type</a> type, double parm, <a class=\"el\" href=\"group__Vhal.html#ga0\">Vhal_PBEType</a> pbetype)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Fill the specified array with accessibility values.  <a href=\"group__Vpmg.html#ga22\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>void&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vpmg.html#ga23\">Vpmg_printColComp</a> (<a class=\"el\" href=\"structsVpmg.html\">Vpmg</a> *thee, char path[72], char title[72], char mxtype[3], int flag)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Print out a column-compressed sparse matrix in Harwell-Boeing format.  <a href=\"group__Vpmg.html#ga23\"></a><br><br></td></tr>\n</table>\n<hr><a name=\"_details\"></a><h2>Detailed Description</h2>\nContains declarations for class Vpmg. \n<p>\n<dl compact><dt><b>Version:</b></dt><dd><dl compact><dt><b>Id</b></dt><dd><a class=\"el\" href=\"vpmg_8h.html\">vpmg.h</a>,v 2.59 2005/07/15 20:48:29 apbs Exp </dd></dl>\n</dd></dl>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan A. Baker</dd></dl>\n<dl compact><dt><b>Attention:</b></dt><dd><div class=\"fragment\"><pre>\n *\n * APBS -- Adaptive Poisson-Boltzmann Solver\n *\n * Nathan A. Baker (baker@biochem.wustl.edu)\n * Dept. of Biochemistry and Molecular Biophysics\n * Center for Computational Biology\n * Washington University in St. Louis\n *\n * Additional contributing authors listed in the code documentation.\n *\n * Copyright (c) 2002-2005.  Washington University in St. Louis.\n * All Rights Reserved.\n * Portions Copyright (c) 1999-2002.  The Regents of the University of\n * California.  \n * Portions Copyright (c) 1995.  Michael Holst.\n *\n * This file is part of APBS.\n *\n * APBS is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * APBS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with APBS; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA\n *\n * </pre></div></dd></dl>\n<hr size=\"1\"><address style=\"align: right;\"><small>Generated on Tue Dec 6 10:05:50 2005 for APBS by\n<a href=\"http://www.doxygen.org/index.html\">\n<img src=\"doxygen.png\" alt=\"doxygen\" align=\"middle\" border=0 > \n</a>1.3.5 </small></address>\n</body>\n</html>\n", "id": 40066.0}