{"text": "Introduction to Data Visualization in R We saw the curve R function when looking at the normal distribution while exploring probability distributions in R In general the curve function can plot any mathematical function in R written in terms of a variable x For example curve x 2 5 plots the function f x x2 from x to x 5 Look at the help file for more information about its arguments curve R offers a wide array of graphics and data visualization options but we will only explore a few univariate plot types for now Name of Plot R Function Histogram hist Density Plot density Boxplot boxplot Histograms Histograms are defined in our textbook at the end of Section 3 7 p 164 166 The generic function for a histogram is hist To work with some of these plots let s read in a built in R data set on Old Faithful eruptions Old Faithful is a geyser in Yellowstone National Park data faithful You can look and see what this data set looks like by typing its name faithful and you can read a description of the data set by looking at its help file faithful Other R functions useful for data sets are dim faithful head faithful tail faithful names faithful To look at only one variable in a data set R uses the as follows faithful eruptions Eruption times in mins faithful waiting Waiting time to next eruption in mins Now let s create a histogram of the eruption times hist faithful eruptions The hist function has many arguments that we can change to customize our function hist faithful eruptions xlab Eruption Time min ylab Frequency main Old Faithful Eruption Times breaks 2 col tomato freq F When you use the freq F argument in hist you are asking for the density histogram which has total area 1 What did the option breaks 2 tell R to do Try it with breaks 5 Now try breaks 1 Which plot looks best Example Normal Approximation to the Binomial A binomial random variable X with parameters n and p has mean np and variance np 1 p we will derive these in lecture As the number of trials n gets larger with p staying constant the binomial distribution becomes closer to a normal random variable with mean np and variance np 1 p Try running the following code read the code carefully and try to figure out what each line is telling R add norm function m s r lty 3 lwd 2 adds normal density to a histogram or other plot m is mean s is sd r is range optional if missing r length r 2 r c m 3 s m 3 s x seq r 1 r 2 length 2 y dnorm x m s lines x y lty lty lwd lwd par mfrow c 2 3 hist rbinom 1 5 6 breaks seq 5 5 5 by 1 freq F main n 5 p 6 add norm 5 6 sqrt 5 6 1 6 hist rbinom 1 1 6 breaks seq 5 1 5 by 1 freq F main n 1 p 6 add norm 1 6 sqrt 1 6 1 6 hist rbinom 1 2 6 breaks seq 5 2 5 by 1 freq F main n 2 p 6 add norm 2 6 sqrt 2 6 1 6 hist rbinom 1 4 6 breaks seq 5 4 5 by 1 freq F main n 4 p 6 add norm 4 6 sqrt 4 6 1 6 hist rbinom 1 8 6 breaks seq 5 8 5 by 1 freq F main n 8 p 6 add norm 8 6 sqrt 8 6 1 6 hist rbinom 1 16 6 breaks seq 5 16 5 by 1 freq F main n 16 p 6 add norm 16 6 sqrt 16 6 1 6 This result is due to the Central Limit Theorem which we will see in the lab assignment and later in the quarter Density Plots R has several functions for generating smoothed histograms or density plots We will focus on the density function Basic usage is straightforward plot density faithful eruptions The density function produces a data structure with several components the first x is the set of points on the x axis where the density was evaluated the second y is the height of the density curve at those points d density faithful eruptions names d head d x head d y The main issue with density estimates is how much smoothing to do There is a bandwidth parameter bw in the density function that determines this If the bandwidth parameter is too small you get a punk hair style plot density faithful eruptions bw 1 If the width parameter is too large you get a nice smooth curve that looks the same no matter what your data were plot density faithful eruptions bw 5 Try a few different values It is often useful to combine a density plot and some other plot such as a histogram or dotplot The lines function adds a lineplot to an existing plot hist faithful eruptions freq F xlim c 1 6 breaks 15 lines density faithful eruptions lty 2 lty line type Boxplots A boxplot is a graphical display of a 5 number summary minimum lower quartile median upper quartile and maximum The edgest of the box are the lower quartile and the upper quartile with the median drawn as a line in the box The whiskers extend to the minimum and maximum values unless outliers are present in which case they get their own points and the whiskers extend to the largest smallest value not considered an outlier Try this boxplot faithful eruptions Or horizontally boxplot faithful eruptions horizontal TRUE Again we can add axes labels a main title and color using the same arguments as we saw with the hist function boxplot faithful eruptions ylab Eruption Time min main Old Faithful Eruptions Times col seagreen To see all the color options R has to offer type colors Useful R Commands when Creating Plots If you have a plot window open R by default will write over that plot when you ask it for another plot R Studio however will open a new plot window for each plot If you d like to open another plot window type the following command Mac quartz PC x11 You can put more than one plot in a single window For example if you wanted a plot window with 2 rows and 3 columns 6 plots total you could use the command par mfrow c 2 3 The command par is short for graphical parameters and mfrow stands for multiple figures rows There is also an argument called mfcol Look up the help file for par to explore more graphical options Stats 12 A Index", "_id": "http://www.ics.uci.edu/~staceyah/120A/Graphics.html", "title": "introduction to data visualization in r", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html>\n  <head>\n    <meta content=\"text/html; charset=windows-1252\"\n      http-equiv=\"Content-Type\">\n    <title>Introduction to Data Visualization in R</title>\n    <meta content=\"Stacey Hancock\" name=\"author\">\n  </head>\n  <body>\n    <table style=\"width: 100%; background-color: rgb(102, 204, 204);\n      margin-left: auto; margin-right: auto; height: 58px; text-align:\n      left;\" border=\"1\" cellpadding=\"2\" cellspacing=\"2\">\n      <tbody>\n        <tr>\n          <td>\n            <div style=\"text-align: center;\"> </div>\n            <h1 style=\"text-align: center;\">Introduction to Data\n              Visualization in R<br>\n            </h1>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <br>\n    We saw the \"curve\" R function when looking at the normal\n    distribution while exploring <a href=\"Prob_Distns.html\">probability\n      distributions in R</a>. In general, the curve function can plot\n    any mathematical function in R (written in terms of a variable \"x\").\n    For example:<br>\n    <pre>curve(x^2,0,5)<br></pre>\n    plots the function <i>f</i>(<i>x</i>) = <i>x</i><sup>2</sup> from\n    <i>x</i> = 0 to <i>x</i> = 5. Look at the help file for more\n    information about its arguments:<br>\n    <pre>?curve<br></pre>\n    R offers a wide array of graphics and data visualization options,\n    but we will only explore a few univariate plot types for now:<br>\n    <br>\n    <table style=\"text-align: left; width: 100%; background-color:\n      rgb(255, 204, 51);\" border=\"1\" cellpadding=\"2\" cellspacing=\"2\">\n      <tbody>\n        <tr>\n          <td style=\"vertical-align: top; font-weight: bold;\"\n            width=\"400\">Name of Plot<br>\n          </td>\n          <td style=\"vertical-align: top; font-weight: bold;\"\n            width=\"200\">R Function<br>\n            <br>\n          </td>\n        </tr>\n        <tr>\n          <td style=\"vertical-align: top;\" width=\"400\"><a\n              href=\"#Histograms\">Histogram</a><br>\n          </td>\n          <td style=\"vertical-align: top;\" width=\"200\">\n            <pre>hist<br></pre>\n          </td>\n        </tr>\n        <tr>\n          <td style=\"vertical-align: top;\" width=\"400\"><a\n              href=\"#Density_Plots\">Density Plot</a><br>\n          </td>\n          <td style=\"vertical-align: top;\" width=\"200\">\n            <pre>density<br></pre>\n          </td>\n        </tr>\n        <tr>\n          <td style=\"vertical-align: top;\" width=\"400\"><a\n              href=\"#Boxplots\">Boxplot</a><br>\n          </td>\n          <td style=\"vertical-align: top;\" width=\"200\">\n            <pre>boxplot<br></pre>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <br>\n    <h2> </h2>\n    <h2><a name=\"Histograms\"></a>Histograms</h2>\n    <p>Histograms are defined in our textbook at the end of Section 3.7,\n      p. 164-166. The generic function for a histogram is \"hist.\" To\n      work with some of these plots, let's read in a built-in R data set\n      on Old Faithful eruptions. (Old Faithful is a geyser in\n      Yellowstone National Park.)<br>\n    </p>\n    <blockquote>\n      <pre>data(faithful)<br></pre>\n    </blockquote>\n    You can look and see what this data set looks like by typing its\n    name:<br>\n    <blockquote>\n      <pre>faithful<br></pre>\n    </blockquote>\n    and you can read a description of the data set by looking at its\n    help file:<br>\n    <blockquote>\n      <pre>?faithful<br></pre>\n    </blockquote>\n    Other R functions useful for data sets are:<br>\n    <blockquote>\n      <pre>dim(faithful)<br>head(faithful)<br>tail(faithful)<br>names(faithful)<br></pre>\n    </blockquote>\n    To look at only one variable in a data set, R uses the \"$\" as\n    follows:<br>\n    <blockquote>\n      <pre>faithful$eruptions   # Eruption times (in mins)<br>faithful$waiting     # Waiting time to next eruption (in mins)<br></pre>\n    </blockquote>\n    Now, let's create a histogram of the eruption times:<br>\n    <blockquote>\n      <pre>hist(faithful$eruptions)<br></pre>\n    </blockquote>\n    The \"hist\" function has many arguments that we can change to\n    customize our function:<br>\n    <blockquote>\n      <pre>hist(faithful$eruptions, xlab=\"Eruption Time (min)\", ylab=\"Frequency\",<br>\tmain=\"Old Faithful Eruption Times\", breaks=20, col=\"tomato\", freq=F)<br></pre>\n    </blockquote>\n    <meta http-equiv=\"content-type\" content=\"text/html;\n      charset=windows-1252\">\n    When you use the <span style=\"font-family: monospace;\">freq=F</span>\n    argument in <span style=\"font-family: monospace;\">hist()</span>,\n    you are asking for the density histogram, which has total area 1.\n    <meta http-equiv=\"content-type\" content=\"text/html;\n      charset=windows-1252\">\n    What did the option&nbsp; <span style=\"font-family: monospace;\">breaks=20</span>\n    tell R to do? Try it with <span style=\"font-family: monospace;\">breaks=5</span>.\n    Now try <span style=\"font-family: monospace;\">breaks=100</span>.\n    Which plot looks best?<br>\n    <br>\n    <h3>Example: Normal Approximation to the Binomial</h3>\n    A binomial random variable X with parameters <span\n      style=\"font-style: italic;\">n</span> and <span style=\"font-style:\n      italic;\">p</span> has mean <span style=\"font-style: italic;\">np</span>\n    and variance <span style=\"font-style: italic;\">np</span>(1-<span\n      style=\"font-style: italic;\">p</span>) (we will derive these in\n    lecture). As the number of trials, <span style=\"font-style:\n      italic;\">n</span>, gets larger, (with <span style=\"font-style:\n      italic;\">p</span> staying constant) the binomial distribution\n    becomes closer to a normal random variable with mean <span\n      style=\"font-style: italic;\">np</span> and variance <span\n      style=\"font-style: italic;\">np</span>(1-<span style=\"font-style:\n      italic;\">p</span>). Try running the following code - read the code\n    carefully and try to figure out what each line is telling R:<br>\n    <pre>add.norm=<br>function(m, s, r, lty=3,lwd=2)<br>{<br>#<br># adds normal density to a histogram or other plot<br># m is mean, s is sd, r is range (optional)<br>#<br>        if(missing(r) || length(r) != 2) r &lt;- c(m - 3 * s, m + 3 * s)<br>        x &lt;- seq(r[1], r[2], length = 200)<br>        y &lt;- dnorm(x, m, s)<br>        lines(x, y, lty=lty,lwd=lwd)<br>}<br><br><br>par(mfrow=c(2,3))<br>hist(rbinom(10000,5,.6),breaks=seq(-.5,5.5,by=1),freq=F,main=\"n = 5, p = .6\")<br>add.norm(5*.6,sqrt(5*.6*(1-.6)))<br>hist(rbinom(10000,10,.6),breaks=seq(-.5,10.5,by=1),freq=F,main=\"n = 10, p = .6\")<br>add.norm(10*.6,sqrt(10*.6*(1-.6)))<br>hist(rbinom(10000,20,.6),breaks=seq(-.5,20.5,by=1),freq=F,main=\"n = 20, p = .6\")<br>add.norm(20*.6,sqrt(20*.6*(1-.6)))<br>hist(rbinom(10000,40,.6),breaks=seq(-.5,40.5,by=1),freq=F,main=\"n = 40, p = .6\")<br>add.norm(40*.6,sqrt(40*.6*(1-.6)))<br>hist(rbinom(10000,80,.6),breaks=seq(-.5,80.5,by=1),freq=F,main=\"n = 80, p = .6\")<br>add.norm(80*.6,sqrt(80*.6*(1-.6)))<br>hist(rbinom(10000,160,.6),breaks=seq(-.5,160.5,by=1),freq=F,main=\"n = 160, p = .6\")<br>add.norm(160*.6,sqrt(160*.6*(1-.6)))<br><br></pre>\n    This result is due to the <span style=\"font-weight: bold;\">Central\n      Limit Theorem</span>, which we will see in the lab assignment and\n    later in the quarter.<br>\n    <br>\n    <h2><a name=\"Density_Plots\"></a>Density Plots</h2>\n    R has several functions for generating smoothed histograms, or\n    density plots. We will focus on the \"density\" function.<br>\n    <br>\n    <meta http-equiv=\"content-type\" content=\"text/html;\n      charset=windows-1252\">\n    Basic usage is straightforward:<br>\n    <pre style=\"margin-left: 40px;\">plot(density(faithful$eruptions))</pre>\n    The density function produces a data structure with several\n    components - the first ($x) is the set of points on the x-axis where\n    the density was evaluated; the second ($y) is the height of the\n    density curve at those points.<br>\n    <pre style=\"margin-left: 40px;\">d &lt;- density(faithful$eruptions)<br>names(d)<br>head(d$x)<br>head(d$y)<br></pre>\n    The main issue with density estimates is how much smoothing to do.\n    There is a \"bandwidth\" parameter (bw) in the density function that\n    determines this.<br>\n    <br>\n    If the bandwidth parameter is too small, you get a punk hair style:<br>\n    <pre style=\"margin-left: 40px;\">plot(density(faithful$eruptions,bw=.01))</pre>\n    If the width parameter is too large, you get a nice smooth curve\n    that looks the same no matter what your data were!\n    <pre style=\"margin-left: 40px;\">plot(density(faithful$eruptions,bw=5))</pre>\n    Try a few different values.<br>\n    <br>\n    It is often useful to combine a density plot and some other plot\n    such as a histogram or dotplot. The \"lines\" function adds a lineplot\n    to an existing plot:<br>\n    <pre style=\"margin-left: 40px;\">hist(faithful$eruptions,freq=F,xlim=c(1,6),breaks=15)<br>lines(density(faithful$eruptions),lty=2)\t# lty = \"line type\"<br></pre>\n    <br>\n    <h2><a name=\"Boxplots\"></a>Boxplots</h2>\n    A boxplot is a graphical display of a \"5-number summary\" = minimum,\n    lower quartile, median, upper quartile, and maximum. The edgest of\n    the box are the lower quartile and the upper quartile, with the\n    median drawn as a line in the box. The \"whiskers\" extend to the\n    minimum and maximum values, unless outliers are present, in which\n    case they get their own points and the whiskers extend to the\n    largest/smallest value not considered an outlier. Try this:<br>\n    <blockquote>\n      <pre>boxplot(faithful$eruptions)<br></pre>\n    </blockquote>\n    Or horizontally,<br>\n    <blockquote>\n      <pre>boxplot(faithful$eruptions, horizontal=TRUE)<br></pre>\n    </blockquote>\n    Again, we can add axes labels, a main title, and color using the\n    same arguments as we saw with the \"hist\" function:<br>\n    <blockquote>\n      <pre>boxplot(faithful$eruptions,ylab=\"Eruption Time (min)\",<br>\tmain=\"Old Faithful Eruptions Times\", col=\"seagreen\")<br></pre>\n    </blockquote>\n    To see all the color options R has to offer, type:<br>\n    <blockquote>\n      <pre>colors()<br></pre>\n    </blockquote>\n    <br>\n    <meta http-equiv=\"content-type\" content=\"text/html;\n      charset=windows-1252\">\n    <hr style=\"width: 100%; height: 2px;\">\n    <table style=\"text-align: left; width: 100%;\" border=\"1\"\n      cellpadding=\"2\" cellspacing=\"2\">\n      <tbody>\n        <tr>\n          <td style=\"vertical-align: top; background-color: rgb(204,\n            204, 255);\">\n            <h2><span style=\"font-weight: bold;\">Useful R Commands when\n                Creating Plots</span></h2>\n            If you have a plot window open, R by default will write over\n            that plot when you ask it for another plot. (R Studio,\n            however, will open a new plot window for each plot.) If\n            you'd like to open another plot window, type the following\n            command:<span style=\"font-weight: bold;\"><br>\n              <br>\n              Mac: <br>\n            </span><span style=\"font-weight: bold;\"></span>\n            <pre>quartz()<br></pre>\n            <span style=\"font-weight: bold;\"><br>\n              PC: <br>\n            </span><span style=\"font-weight: bold;\"></span>\n            <pre>x11()<br></pre>\n            <br>\n            You can put more than one plot in a single window. For\n            example, if you wanted a plot window with 2 rows and 3\n            columns (6 plots total), you could use the command:<br>\n            <pre>par(mfrow=c(2,3))<br></pre>\n            The command \"par\" is short for (graphical) <span\n              style=\"text-decoration: underline;\">par</span>ameters, and\n            \"mfrow\" stands for <span style=\"text-decoration:\n              underline;\">m</span>ultiple <span style=\"text-decoration:\n              underline;\">f</span>igures (rows). (There is also an\n            argument called <span style=\"font-family: monospace;\">mfcol</span>).\n\n\n\n\n\n            Look up the help file for <span style=\"font-family:\n              monospace;\">par</span> to explore more graphical options.<br>\n            <br>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <br>\n    <hr style=\"width: 100%; height: 2px;\"><big></big><br>\n    <div align=\"center\"> <big> <a href=\"index.html\">Stats 120A Index</a></big><br>\n      <br>\n    </div>\n    <hr style=\"width: 100%; height: 2px;\"><br>\n  </body>\n</html>\n", "id": 457.0}