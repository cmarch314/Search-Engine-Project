{"text": "1 package swirl workspace 2 3 import junit framework Test 4 import junit framework TestSuite 5 6 import org apache commons httpclient HttpClient 7 import org apache commons httpclient HttpMethod 8 import org apache commons httpclient methods DeleteMethod 9 import org apache commons logging Log 1 import org apache commons logging LogFactory 11 import org apache webdav lib methods LockMethod 12 import org w3c dom Document 13 14 import swirl workspace common DocumentLogger 15 16 17 TODO 18 19 author author 2 version Revision 1 11 21 22 public class LockCommandTest extends CommandTest 23 24 TODO 25 public static final String FILE lock file 26 27 TODO 28 private Log log 29 3 TODO 31 private String fileLockToken 32 33 TODO 34 private String owner LockTest 35 36 TODO 37 private int depth LockMethod DEPTH INFINITY 38 39 TODO 4 private int scope LockMethod SCOPE EXCLUSIVE 41 42 TODO 43 private int timeout LockMethod TIMEOUT INFINITY 44 45 46 Creates a new LockCommandTest object 47 48 param name TODO 49 5 public LockCommandTest String name 51 52 super name 53 log LogFactory getLog this getClass 54 55 56 creates xml for dummy lockinfo 57 public static String getLockInfo int lockScope String owner 58 59 String scope 6 61 if lockScope LockMethod SCOPE EXCLUSIVE 62 63 scope exclusive 64 65 else 66 67 scope shared 68 69 7 return xml version 1 encoding utf 8 n 71 D lockinfo xmlns D DAV n t D lockscope D scope 72 D lockscope n 73 t D locktype D write D locktype n t D owner 74 owner D owner n D lockinfo 75 76 77 78 TODO 79 8 return TODO 81 82 public static Test suite 83 84 TestSuite suite new TestSuite 85 86 suite addTestSuite LockCommandTest class 87 suite addTest new LockCommandTest testGoodExclusiveLock 88 suite addTest new LockCommandTest testGoodSharedLock 89 suite addTest new LockCommandTest testGoodLockCollection 9 suite addTest new LockCommandTest testLockNonexistentFile 91 92 return wrapSuite suite 93 94 95 96 TODO 97 98 public void tearDown 99 1 timeout LockMethod TIMEOUT INFINITY 1 1 depth LockMethod DEPTH INFINITY 1 2 scope LockMethod SCOPE EXCLUSIVE 1 3 owner LockTest 1 4 1 5 HttpClient client new HttpClient 1 6 1 7 try 1 8 1 9 DeleteMethod method new DeleteMethod SlideTestSetup LOCALHOST 11 SlideTestSetup SLIDE 111 FILE 112 113 method addRequestHeader If fileLockToken 114 115 int retVal client executeMethod method 116 117 if log isDebugEnabled 118 119 log debug method retVal method getStatusText 12 121 122 catch Exception ex 123 124 log error attempting to tearDown LockCommand test fixture ex 125 126 127 128 good tests 129 public void testGoodExclusiveLock throws Exception 13 131 create a file 132 PutCommandTest put new PutCommandTest testPut 133 134 put go SlideTestSetup LOCALHOST SlideTestSetup SWIRL FILE 2 1 135 136 lock the file 137 depth LockMethod DEPTH INFINITY 138 timeout LockMethod TIMEOUT INFINITY 139 scope LockMethod SCOPE EXCLUSIVE 14 go SlideTestSetup LOCALHOST SlideTestSetup SWIRL FILE 2 141 142 LockMethod method LockMethod getMethod 143 144 fileLockToken method getLockToken 145 146 if log isDebugEnabled 147 148 log debug Lock Token is fileLockToken 149 15 151 assertNotNull fileLockToken 152 153 154 155 TODO 156 157 throws Exception TODO 158 159 public void testGoodSharedLock throws Exception 16 161 create a file 162 PutCommandTest put new PutCommandTest testPut 163 164 put go SlideTestSetup LOCALHOST SlideTestSetup SWIRL FILE 2 1 165 166 lock the file 167 depth LockMethod DEPTH INFINITY 168 timeout LockMethod TIMEOUT INFINITY 169 scope LockMethod SCOPE SHARED 17 go SlideTestSetup LOCALHOST SlideTestSetup SWIRL FILE 2 171 172 LockMethod method LockMethod getMethod 173 174 fileLockToken method getLockToken 175 176 if log isDebugEnabled 177 178 log debug Lock Token is fileLockToken 179 18 181 assertNotNull fileLockToken 182 183 184 185 TODO 186 187 throws Exception TODO 188 189 public void testLockNonexistentFile throws Exception 19 191 lock the file 192 depth LockMethod DEPTH INFINITY 193 timeout LockMethod TIMEOUT INFINITY 194 scope LockMethod SCOPE SHARED 195 go SlideTestSetup LOCALHOST SlideTestSetup SWIRL 196 SlideTestSetup BAD FILE 2 197 198 LockMethod method LockMethod getMethod 199 String bodyString method getResponseBodyAsString 2 2 1 if log isDebugEnabled 2 2 2 3 log debug bodyString bodyString 2 4 2 5 2 6 Document bodyDoc method getResponseDocument 2 7 2 8 DocumentLogger logDocument log bodyDoc bodyDoc 2 9 21 211 212 TODO 213 214 param uri TODO 215 216 return TODO 217 218 protected HttpMethod createMethod String uri 219 22 LockMethod lockMethod new LockMethod uri 221 222 String lockinfo getLockInfo scope owner 223 224 lockMethod setDepth depth 225 lockMethod setTimeout timeout 226 lockMethod setRequestBody lockinfo 227 228 return lockMethod 229 23 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.20/xref-test/swirl/workspace/LockCommandTest.html", "title": "lockcommandtest xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>LockCommandTest xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../stylesheet.css\" />\n</head>\n<body>\n<pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <strong>package</strong> <a href=\"../../swirl/workspace/package-summary.html\">swirl.workspace</a>;\n<a name=\"2\" href=\"#2\">2</a>   \n<a name=\"3\" href=\"#3\">3</a>   <strong>import</strong> junit.framework.Test;\n<a name=\"4\" href=\"#4\">4</a>   <strong>import</strong> junit.framework.TestSuite;\n<a name=\"5\" href=\"#5\">5</a>   \n<a name=\"6\" href=\"#6\">6</a>   <strong>import</strong> org.apache.commons.httpclient.HttpClient;\n<a name=\"7\" href=\"#7\">7</a>   <strong>import</strong> org.apache.commons.httpclient.HttpMethod;\n<a name=\"8\" href=\"#8\">8</a>   <strong>import</strong> org.apache.commons.httpclient.methods.DeleteMethod;\n<a name=\"9\" href=\"#9\">9</a>   <strong>import</strong> org.apache.commons.logging.Log;\n<a name=\"10\" href=\"#10\">10</a>  <strong>import</strong> org.apache.commons.logging.LogFactory;\n<a name=\"11\" href=\"#11\">11</a>  <strong>import</strong> org.apache.webdav.lib.methods.LockMethod;\n<a name=\"12\" href=\"#12\">12</a>  <strong>import</strong> org.w3c.dom.Document;\n<a name=\"13\" href=\"#13\">13</a>  \n<a name=\"14\" href=\"#14\">14</a>  <strong>import</strong> swirl.workspace.common.DocumentLogger;\n<a name=\"15\" href=\"#15\">15</a>  \n<a name=\"16\" href=\"#16\">16</a>  <em>/**<em>*</em></em>\n<a name=\"17\" href=\"#17\">17</a>  <em> * TODO</em>\n<a name=\"18\" href=\"#18\">18</a>  <em> *</em>\n<a name=\"19\" href=\"#19\">19</a>  <em> * @author $author$</em>\n<a name=\"20\" href=\"#20\">20</a>  <em> * @version $Revision: 1.11 $</em>\n<a name=\"21\" href=\"#21\">21</a>  <em> */</em>\n<a name=\"22\" href=\"#22\">22</a>  <strong>public</strong> <strong>class</strong> <a href=\"../../swirl/workspace/LockCommandTest.html\">LockCommandTest</a> <strong>extends</strong> <a href=\"../../swirl/workspace/CommandTest.html\">CommandTest</a>\n<a name=\"23\" href=\"#23\">23</a>  {\n<a name=\"24\" href=\"#24\">24</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"25\" href=\"#25\">25</a>      <strong>public</strong> <strong>static</strong> <strong>final</strong> String FILE = <span class=\"string\">\"lock-file\"</span>;\n<a name=\"26\" href=\"#26\">26</a>  \n<a name=\"27\" href=\"#27\">27</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"28\" href=\"#28\">28</a>      <strong>private</strong> Log log;\n<a name=\"29\" href=\"#29\">29</a>  \n<a name=\"30\" href=\"#30\">30</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"31\" href=\"#31\">31</a>      <strong>private</strong> String fileLockToken;\n<a name=\"32\" href=\"#32\">32</a>  \n<a name=\"33\" href=\"#33\">33</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"34\" href=\"#34\">34</a>      <strong>private</strong> String owner = <span class=\"string\">\"LockTest\"</span>;\n<a name=\"35\" href=\"#35\">35</a>  \n<a name=\"36\" href=\"#36\">36</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"37\" href=\"#37\">37</a>      <strong>private</strong> <strong>int</strong> depth = LockMethod.DEPTH_INFINITY;\n<a name=\"38\" href=\"#38\">38</a>  \n<a name=\"39\" href=\"#39\">39</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"40\" href=\"#40\">40</a>      <strong>private</strong> <strong>int</strong> scope = LockMethod.SCOPE_EXCLUSIVE;\n<a name=\"41\" href=\"#41\">41</a>  \n<a name=\"42\" href=\"#42\">42</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"43\" href=\"#43\">43</a>      <strong>private</strong> <strong>int</strong> timeout = LockMethod.TIMEOUT_INFINITY;\n<a name=\"44\" href=\"#44\">44</a>  \n<a name=\"45\" href=\"#45\">45</a>      <em>/**<em>*</em></em>\n<a name=\"46\" href=\"#46\">46</a>  <em>     * Creates a new LockCommandTest object.</em>\n<a name=\"47\" href=\"#47\">47</a>  <em>     *</em>\n<a name=\"48\" href=\"#48\">48</a>  <em>     * @param name TODO</em>\n<a name=\"49\" href=\"#49\">49</a>  <em>     */</em>\n<a name=\"50\" href=\"#50\">50</a>      <strong>public</strong> <a href=\"../../swirl/workspace/LockCommandTest.html\">LockCommandTest</a>(String name)\n<a name=\"51\" href=\"#51\">51</a>      {\n<a name=\"52\" href=\"#52\">52</a>          <strong>super</strong>(name);\n<a name=\"53\" href=\"#53\">53</a>          log = LogFactory.getLog(<strong>this</strong>.getClass());\n<a name=\"54\" href=\"#54\">54</a>      }\n<a name=\"55\" href=\"#55\">55</a>  \n<a name=\"56\" href=\"#56\">56</a>      <em class=\"comment\">// creates xml for dummy lockinfo</em>\n<a name=\"57\" href=\"#57\">57</a>      <strong>public</strong> <strong>static</strong> String getLockInfo(<strong>int</strong> lockScope, String owner)\n<a name=\"58\" href=\"#58\">58</a>      {\n<a name=\"59\" href=\"#59\">59</a>          String scope;\n<a name=\"60\" href=\"#60\">60</a>  \n<a name=\"61\" href=\"#61\">61</a>          <strong>if</strong>(lockScope == LockMethod.SCOPE_EXCLUSIVE)\n<a name=\"62\" href=\"#62\">62</a>          {\n<a name=\"63\" href=\"#63\">63</a>              scope = <span class=\"string\">\"exclusive\"</span>;\n<a name=\"64\" href=\"#64\">64</a>          }\n<a name=\"65\" href=\"#65\">65</a>          <strong>else</strong>\n<a name=\"66\" href=\"#66\">66</a>          {\n<a name=\"67\" href=\"#67\">67</a>              scope = <span class=\"string\">\"shared\"</span>;\n<a name=\"68\" href=\"#68\">68</a>          }\n<a name=\"69\" href=\"#69\">69</a>  \n<a name=\"70\" href=\"#70\">70</a>          <strong>return</strong> <span class=\"string\">\"&lt;?xml version='1.0' encoding='utf-8'?>\\n\"</span>\n<a name=\"71\" href=\"#71\">71</a>                 + <span class=\"string\">\"&lt;D:lockinfo xmlns:D='DAV:'>\\n\"</span> + <span class=\"string\">\"\\t&lt;D:lockscope>&lt;D:\"</span> + scope\n<a name=\"72\" href=\"#72\">72</a>                 + <span class=\"string\">\"/>&lt;/D:lockscope>\\n\"</span>\n<a name=\"73\" href=\"#73\">73</a>                 + <span class=\"string\">\"\\t&lt;D:locktype>&lt;D:write/>&lt;/D:locktype>\\n\"</span> + <span class=\"string\">\"\\t&lt;D:owner>\\&quot;\"</span>\n<a name=\"74\" href=\"#74\">74</a>                 + owner + <span class=\"string\">\"\\&quot;&lt;/D:owner>\\n\"</span> + <span class=\"string\">\"&lt;/D:lockinfo>\"</span>;\n<a name=\"75\" href=\"#75\">75</a>      }\n<a name=\"76\" href=\"#76\">76</a>  \n<a name=\"77\" href=\"#77\">77</a>      <em>/**<em>*</em></em>\n<a name=\"78\" href=\"#78\">78</a>  <em>     * TODO</em>\n<a name=\"79\" href=\"#79\">79</a>  <em>     *</em>\n<a name=\"80\" href=\"#80\">80</a>  <em>     * @return TODO</em>\n<a name=\"81\" href=\"#81\">81</a>  <em>     */</em>\n<a name=\"82\" href=\"#82\">82</a>      <strong>public</strong> <strong>static</strong> Test suite()\n<a name=\"83\" href=\"#83\">83</a>      {\n<a name=\"84\" href=\"#84\">84</a>          TestSuite suite = <strong>new</strong> TestSuite();\n<a name=\"85\" href=\"#85\">85</a>  \n<a name=\"86\" href=\"#86\">86</a>          <em class=\"comment\">//suite.addTestSuite(LockCommandTest.class);</em>\n<a name=\"87\" href=\"#87\">87</a>          <em class=\"comment\">//suite.addTest(new LockCommandTest(\"testGoodExclusiveLock\"));</em>\n<a name=\"88\" href=\"#88\">88</a>          <em class=\"comment\">//suite.addTest(new LockCommandTest(\"testGoodSharedLock\"));</em>\n<a name=\"89\" href=\"#89\">89</a>          <em class=\"comment\">//suite.addTest(new LockCommandTest(\"testGoodLockCollection\"));</em>\n<a name=\"90\" href=\"#90\">90</a>          suite.addTest(<strong>new</strong> <a href=\"../../swirl/workspace/LockCommandTest.html\">LockCommandTest</a>(<span class=\"string\">\"testLockNonexistentFile\"</span>));\n<a name=\"91\" href=\"#91\">91</a>  \n<a name=\"92\" href=\"#92\">92</a>          <strong>return</strong> wrapSuite(suite);\n<a name=\"93\" href=\"#93\">93</a>      }\n<a name=\"94\" href=\"#94\">94</a>  \n<a name=\"95\" href=\"#95\">95</a>      <em>/**<em>*</em></em>\n<a name=\"96\" href=\"#96\">96</a>  <em>     * TODO</em>\n<a name=\"97\" href=\"#97\">97</a>  <em>     */</em>\n<a name=\"98\" href=\"#98\">98</a>      <strong>public</strong> <strong>void</strong> tearDown()\n<a name=\"99\" href=\"#99\">99</a>      {\n<a name=\"100\" href=\"#100\">100</a>         timeout = LockMethod.TIMEOUT_INFINITY;\n<a name=\"101\" href=\"#101\">101</a>         depth = LockMethod.DEPTH_INFINITY;\n<a name=\"102\" href=\"#102\">102</a>         scope = LockMethod.SCOPE_EXCLUSIVE;\n<a name=\"103\" href=\"#103\">103</a>         owner = <span class=\"string\">\"LockTest\"</span>;\n<a name=\"104\" href=\"#104\">104</a> \n<a name=\"105\" href=\"#105\">105</a>         HttpClient client = <strong>new</strong> HttpClient();\n<a name=\"106\" href=\"#106\">106</a> \n<a name=\"107\" href=\"#107\">107</a>         <strong>try</strong>\n<a name=\"108\" href=\"#108\">108</a>         {\n<a name=\"109\" href=\"#109\">109</a>             DeleteMethod method = <strong>new</strong> DeleteMethod(SlideTestSetup.LOCALHOST\n<a name=\"110\" href=\"#110\">110</a>                                                    + SlideTestSetup.SLIDE\n<a name=\"111\" href=\"#111\">111</a>                                                    + FILE);\n<a name=\"112\" href=\"#112\">112</a> \n<a name=\"113\" href=\"#113\">113</a>             method.addRequestHeader(<span class=\"string\">\"If\"</span>, <span class=\"string\">\"(&lt;\"</span> + fileLockToken + <span class=\"string\">\">)\"</span>);\n<a name=\"114\" href=\"#114\">114</a> \n<a name=\"115\" href=\"#115\">115</a>             <strong>int</strong> retVal = client.executeMethod(method);\n<a name=\"116\" href=\"#116\">116</a> \n<a name=\"117\" href=\"#117\">117</a>             <strong>if</strong>(log.isDebugEnabled())\n<a name=\"118\" href=\"#118\">118</a>             {\n<a name=\"119\" href=\"#119\">119</a>                 log.debug(<span class=\"string\">\"method: \"</span> + retVal + method.getStatusText());\n<a name=\"120\" href=\"#120\">120</a>             }\n<a name=\"121\" href=\"#121\">121</a>         }\n<a name=\"122\" href=\"#122\">122</a>         <strong>catch</strong>(Exception ex)\n<a name=\"123\" href=\"#123\">123</a>         {\n<a name=\"124\" href=\"#124\">124</a>             log.error(<span class=\"string\">\"attempting to tearDown LockCommand test fixture\"</span>, ex);\n<a name=\"125\" href=\"#125\">125</a>         }\n<a name=\"126\" href=\"#126\">126</a>     }\n<a name=\"127\" href=\"#127\">127</a> \n<a name=\"128\" href=\"#128\">128</a>     <em class=\"comment\">// good tests</em>\n<a name=\"129\" href=\"#129\">129</a>     <strong>public</strong> <strong>void</strong> testGoodExclusiveLock() throws Exception\n<a name=\"130\" href=\"#130\">130</a>     {\n<a name=\"131\" href=\"#131\">131</a>         <em class=\"comment\">// create a file</em>\n<a name=\"132\" href=\"#132\">132</a>         <a href=\"../../swirl/workspace/PutCommandTest.html\">PutCommandTest</a> put = <strong>new</strong> <a href=\"../../swirl/workspace/PutCommandTest.html\">PutCommandTest</a>(<span class=\"string\">\"testPut\"</span>);\n<a name=\"133\" href=\"#133\">133</a> \n<a name=\"134\" href=\"#134\">134</a>         put.go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL + FILE, 201);\n<a name=\"135\" href=\"#135\">135</a> \n<a name=\"136\" href=\"#136\">136</a>         <em class=\"comment\">// lock the file</em>\n<a name=\"137\" href=\"#137\">137</a>         depth = LockMethod.DEPTH_INFINITY;\n<a name=\"138\" href=\"#138\">138</a>         timeout = LockMethod.TIMEOUT_INFINITY;\n<a name=\"139\" href=\"#139\">139</a>         scope = LockMethod.SCOPE_EXCLUSIVE;\n<a name=\"140\" href=\"#140\">140</a>         go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL + FILE, 200);\n<a name=\"141\" href=\"#141\">141</a> \n<a name=\"142\" href=\"#142\">142</a>         LockMethod method = (LockMethod)getMethod();\n<a name=\"143\" href=\"#143\">143</a> \n<a name=\"144\" href=\"#144\">144</a>         fileLockToken = method.getLockToken();\n<a name=\"145\" href=\"#145\">145</a> \n<a name=\"146\" href=\"#146\">146</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"147\" href=\"#147\">147</a>         {\n<a name=\"148\" href=\"#148\">148</a>             log.debug(<span class=\"string\">\"Lock Token is: \"</span> + fileLockToken);\n<a name=\"149\" href=\"#149\">149</a>         }\n<a name=\"150\" href=\"#150\">150</a> \n<a name=\"151\" href=\"#151\">151</a>         assertNotNull(fileLockToken);\n<a name=\"152\" href=\"#152\">152</a>     }\n<a name=\"153\" href=\"#153\">153</a> \n<a name=\"154\" href=\"#154\">154</a>     <em>/**<em>*</em></em>\n<a name=\"155\" href=\"#155\">155</a> <em>     * TODO</em>\n<a name=\"156\" href=\"#156\">156</a> <em>     *</em>\n<a name=\"157\" href=\"#157\">157</a> <em>     * @throws Exception TODO</em>\n<a name=\"158\" href=\"#158\">158</a> <em>     */</em>\n<a name=\"159\" href=\"#159\">159</a>     <strong>public</strong> <strong>void</strong> testGoodSharedLock() throws Exception\n<a name=\"160\" href=\"#160\">160</a>     {\n<a name=\"161\" href=\"#161\">161</a>         <em class=\"comment\">// create a file</em>\n<a name=\"162\" href=\"#162\">162</a>         <a href=\"../../swirl/workspace/PutCommandTest.html\">PutCommandTest</a> put = <strong>new</strong> <a href=\"../../swirl/workspace/PutCommandTest.html\">PutCommandTest</a>(<span class=\"string\">\"testPut\"</span>);\n<a name=\"163\" href=\"#163\">163</a> \n<a name=\"164\" href=\"#164\">164</a>         put.go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL + FILE, 201);\n<a name=\"165\" href=\"#165\">165</a> \n<a name=\"166\" href=\"#166\">166</a>         <em class=\"comment\">// lock the file</em>\n<a name=\"167\" href=\"#167\">167</a>         depth = LockMethod.DEPTH_INFINITY;\n<a name=\"168\" href=\"#168\">168</a>         timeout = LockMethod.TIMEOUT_INFINITY;\n<a name=\"169\" href=\"#169\">169</a>         scope = LockMethod.SCOPE_SHARED;\n<a name=\"170\" href=\"#170\">170</a>         go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL + FILE, 200);\n<a name=\"171\" href=\"#171\">171</a> \n<a name=\"172\" href=\"#172\">172</a>         LockMethod method = (LockMethod)getMethod();\n<a name=\"173\" href=\"#173\">173</a> \n<a name=\"174\" href=\"#174\">174</a>         fileLockToken = method.getLockToken();\n<a name=\"175\" href=\"#175\">175</a> \n<a name=\"176\" href=\"#176\">176</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"177\" href=\"#177\">177</a>         {\n<a name=\"178\" href=\"#178\">178</a>             log.debug(<span class=\"string\">\"Lock Token is: \"</span> + fileLockToken);\n<a name=\"179\" href=\"#179\">179</a>         }\n<a name=\"180\" href=\"#180\">180</a> \n<a name=\"181\" href=\"#181\">181</a>         assertNotNull(fileLockToken);\n<a name=\"182\" href=\"#182\">182</a>     }\n<a name=\"183\" href=\"#183\">183</a> \n<a name=\"184\" href=\"#184\">184</a>     <em>/**<em>*</em></em>\n<a name=\"185\" href=\"#185\">185</a> <em>     * TODO</em>\n<a name=\"186\" href=\"#186\">186</a> <em>     *</em>\n<a name=\"187\" href=\"#187\">187</a> <em>     * @throws Exception TODO</em>\n<a name=\"188\" href=\"#188\">188</a> <em>     */</em>\n<a name=\"189\" href=\"#189\">189</a>     <strong>public</strong> <strong>void</strong> testLockNonexistentFile() throws Exception\n<a name=\"190\" href=\"#190\">190</a>     {\n<a name=\"191\" href=\"#191\">191</a>         <em class=\"comment\">//\t\tlock the file</em>\n<a name=\"192\" href=\"#192\">192</a>         depth = LockMethod.DEPTH_INFINITY;\n<a name=\"193\" href=\"#193\">193</a>         timeout = LockMethod.TIMEOUT_INFINITY;\n<a name=\"194\" href=\"#194\">194</a>         scope = LockMethod.SCOPE_SHARED;\n<a name=\"195\" href=\"#195\">195</a>         go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL\n<a name=\"196\" href=\"#196\">196</a>            + SlideTestSetup.BAD_FILE, 200);\n<a name=\"197\" href=\"#197\">197</a> \n<a name=\"198\" href=\"#198\">198</a>         LockMethod method = (LockMethod)getMethod();\n<a name=\"199\" href=\"#199\">199</a>         String bodyString = method.getResponseBodyAsString();\n<a name=\"200\" href=\"#200\">200</a> \n<a name=\"201\" href=\"#201\">201</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"202\" href=\"#202\">202</a>         {\n<a name=\"203\" href=\"#203\">203</a>             log.debug(<span class=\"string\">\"bodyString: \"</span> + bodyString);\n<a name=\"204\" href=\"#204\">204</a>         }\n<a name=\"205\" href=\"#205\">205</a> \n<a name=\"206\" href=\"#206\">206</a>         Document bodyDoc = method.getResponseDocument();\n<a name=\"207\" href=\"#207\">207</a> \n<a name=\"208\" href=\"#208\">208</a>         DocumentLogger.logDocument(log, <span class=\"string\">\"bodyDoc: \"</span>, bodyDoc);\n<a name=\"209\" href=\"#209\">209</a>     }\n<a name=\"210\" href=\"#210\">210</a> \n<a name=\"211\" href=\"#211\">211</a>     <em>/**<em>*</em></em>\n<a name=\"212\" href=\"#212\">212</a> <em>     * TODO</em>\n<a name=\"213\" href=\"#213\">213</a> <em>     *</em>\n<a name=\"214\" href=\"#214\">214</a> <em>     * @param uri TODO</em>\n<a name=\"215\" href=\"#215\">215</a> <em>     *</em>\n<a name=\"216\" href=\"#216\">216</a> <em>     * @return TODO</em>\n<a name=\"217\" href=\"#217\">217</a> <em>     */</em>\n<a name=\"218\" href=\"#218\">218</a>     <strong>protected</strong> HttpMethod createMethod(String uri)\n<a name=\"219\" href=\"#219\">219</a>     {\n<a name=\"220\" href=\"#220\">220</a>         LockMethod lockMethod = <strong>new</strong> LockMethod(uri);\n<a name=\"221\" href=\"#221\">221</a> \n<a name=\"222\" href=\"#222\">222</a>         String lockinfo = getLockInfo(scope, owner);\n<a name=\"223\" href=\"#223\">223</a> \n<a name=\"224\" href=\"#224\">224</a>         lockMethod.setDepth(depth);\n<a name=\"225\" href=\"#225\">225</a>         lockMethod.setTimeout(timeout);\n<a name=\"226\" href=\"#226\">226</a>         lockMethod.setRequestBody(lockinfo);\n<a name=\"227\" href=\"#227\">227</a> \n<a name=\"228\" href=\"#228\">228</a>         <strong>return</strong> lockMethod;\n<a name=\"229\" href=\"#229\">229</a>     }\n<a name=\"230\" href=\"#230\">230</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 34423.0}