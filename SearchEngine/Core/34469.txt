{"text": "View Javadoc 1 2 Created on Mar 12 2 5 3 4 5 package edu uci isr impromptu pie 6 7 import java awt Rectangle 8 import java awt Shape 9 import java awt geom AffineTransform 1 import java awt geom Rectangle2D 11 import java io OutputStream 12 import java util List 13 14 import javax xml transform Transformer 15 import javax xml transform TransformerConfigurationException 16 import javax xml transform TransformerException 17 import javax xml transform TransformerFactory 18 import javax xml transform dom DOMSource 19 import javax xml transform stream StreamResult 2 21 import org apache batik bridge BridgeContext 22 import org apache batik bridge DocumentLoader 23 import org apache batik bridge DynamicGVTBuilder 24 import org apache batik bridge UpdateManager 25 import org apache batik css engine CSSEngine 26 import org apache batik css engine CSSEngineEvent 27 import org apache batik css engine CSSEngineListener 28 import org apache batik dom svg SVGOMDocument 29 import org apache batik gvt UpdateTracker 3 import org eclipse swt events PaintEvent 31 import org eclipse swt widgets Composite 32 import org holongate j2d IPaintableManager 33 import org holongate j2d J2DUtilities 34 import org holongate svg SimpleSVGCanvas 35 import org holongate svg SimpleSWTUserAgent 36 import org w3c dom events Event 37 import org w3c dom events EventListener 38 import org w3c dom events EventTarget 39 import org w3c dom svg SVGDocument 4 41 This canvas provides interactive manipulation for a SWT SVG canvas 42 43 author Jie Ren 44 45 public class InteractiveSVGCanvas extends SimpleSVGCanvas 46 47 48 param parent the parent widget 49 param uri the URL of the SVG to load 5 51 public InteractiveSVGCanvas Composite parent String uri 52 super parent uri 53 54 55 56 param parent the parent widget 57 param style display style 58 param manager the manager 59 param uri the URL of the SVG to load 6 61 public InteractiveSVGCanvas 62 Composite parent 63 int style 64 IPaintableManager manager 65 String uri 66 super parent style manager uri 67 68 69 7 param parent the parent widget 71 param style display style 72 param uri the URL of the SVG to load 73 74 public InteractiveSVGCanvas Composite parent int style String uri 75 super parent style uri 76 77 78 79 Get the SVG document 8 return the SVG document 81 82 public SVGDocument getDocument 83 Element e svgDocument getRootElement 84 return svgDocument 85 86 87 88 Get the associated update manager 89 return the update manager 9 91 public UpdateManager getUpdateManager 92 return updateMgr 93 94 95 96 Export the content of the SVG to an output stream 97 param outputStream the stream to export to 98 99 public void writeTo OutputStream outputStream 1 DOMSource xmlSource new DOMSource svgDocument 1 1 StreamResult servletResult new StreamResult outputStream 1 2 TransformerFactory tf TransformerFactory newInstance 1 3 try 1 4 Transformer serializer tf newTransformer 1 5 serializer transform xmlSource servletResult 1 6 1 7 catch TransformerConfigurationException e 1 8 e printStackTrace 1 9 11 catch TransformerException e 111 e printStackTrace 112 113 114 115 copied from DynamicSVGCanvas 116 117 private UpdateManager updateMgr 118 private EventListener domListener 119 private CSSEngineListener cssListener 12 private boolean initialized false 121 122 non Javadoc 123 see org holongate svg SimpleSVGCanvas loadDocument 124 125 protected void loadDocument 126 builder new DynamicGVTBuilder 127 userAgent new SimpleSWTUserAgent this 128 loader new DocumentLoader userAgent 129 CHANGE invisible method 13 SimpleSWTUserAgent XercesWorkaround 131 try 132 svgDocument SVGDocument loader loadDocument uri 133 bridgeContext new BridgeContext userAgent loader 134 bridgeContext setDynamicState BridgeContext DYNAMIC 135 gvtRoot builder build bridgeContext svgDocument 136 getSVGPaintable setTree gvtRoot 137 updateMgr new UpdateManager bridgeContext gvtRoot svgDocument 138 Catch all the dom events 139 EventTarget evtTarget EventTarget svgDocument 14 domListener new EventListener 141 public void handleEvent Event arg 142 if arg null 143 updateDirtyAreas 144 145 146 evtTarget addEventListener DOMAttrModified domListener false 147 evtTarget addEventListener DOMNodeInserted domListener false 148 evtTarget addEventListener DOMNodeRemoved domListener false 149 evtTarget addEventListener 15 DOMCharacterDataModified 151 domListener 152 false 153 154 And all the CSS property changes 155 CSSEngine cssEngine SVGOMDocument svgDocument getCSSEngine 156 cssListener new CSSEngineListener 157 public void propertiesChanged CSSEngineEvent evt 158 if evt null 159 updateDirtyAreas 16 161 162 cssEngine addCSSEngineListener cssListener 163 catch Exception e 164 e printStackTrace 165 userAgent displayError e 166 167 168 169 non Javadoc 17 see org holongate svg SimpleSVGCanvas cleanup 171 172 public void cleanup 173 updateMgr interrupt 174 EventTarget evtTarget EventTarget svgDocument 175 evtTarget removeEventListener DOMAttrModified domListener false 176 evtTarget removeEventListener DOMNodeInserted domListener false 177 evtTarget removeEventListener DOMNodeRemoved domListener false 178 evtTarget removeEventListener 179 DOMCharacterDataModified 18 domListener 181 false 182 CSSEngine cssEngine SVGOMDocument svgDocument getCSSEngine 183 if cssEngine null 184 cssEngine removeCSSEngineListener cssListener 185 domListener null 186 cssListener null 187 updateMgr null 188 super cleanup 189 19 191 private void updateDirtyAreas 192 if isDisposed 193 return 194 195 UpdateTracker ut updateMgr getUpdateTracker 196 CHANGE ut made null by us 197 if ut null 198 return 199 List l ut getDirtyAreas 2 if l null 2 1 return 2 2 2 3 ut clear 2 4 final Rectangle dirty new Rectangle 2 5 AffineTransform t getPaintableManager getCanvasTransform 2 6 for int i i l size i 2 7 Rectangle2D ts 2 8 t 2 9 createTransformedShape Shape l get i getBounds2D 21 getBounds2D 211 dirty add ts 212 if isDisposed 213 return 214 215 paint J2DUtilities toRectangle ts 216 217 if isDisposed 218 return 219 22 getDisplay asyncExec new Runnable 221 public void run 222 if InteractiveSVGCanvas this isDisposed 223 paint 224 dirty x 225 dirty y 226 dirty width 227 dirty height 228 true 229 PAINT DAMAGED 23 231 232 233 234 non Javadoc 235 see org holongate j2d IPaintableCanvas applyPaintEvent org eclipse swt events PaintEvent int 236 237 public void applyPaintEvent PaintEvent event int mode 238 if initialized 239 updateMgr manageUpdates getSVGPaintable 24 try 241 updateMgr dispatchSVGLoadEvent 242 initialized true 243 catch InterruptedException e 244 245 246 super applyPaintEvent event mode 247 248 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.30/xref/edu/uci/isr/impromptu/pie/InteractiveSVGCanvas.html", "title": "interactivesvgcanvas xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>InteractiveSVGCanvas xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../../../../stylesheet.css\" />\n</head>\n<body>\n<div id=\"overview\"><a href=\"../../../../../../apidocs/edu/uci/isr/impromptu/pie/InteractiveSVGCanvas.html\">View Javadoc</a></div><pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <em class=\"comment\">/*</em>\n<a name=\"2\" href=\"#2\">2</a>   <em class=\"comment\"> * Created on Mar 12, 2005</em>\n<a name=\"3\" href=\"#3\">3</a>   <em class=\"comment\"> *</em>\n<a name=\"4\" href=\"#4\">4</a>   <em class=\"comment\"> */</em>\n<a name=\"5\" href=\"#5\">5</a>   <strong>package</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pie/package-summary.html\">edu.uci.isr.impromptu.pie</a>;\n<a name=\"6\" href=\"#6\">6</a>   \n<a name=\"7\" href=\"#7\">7</a>   <strong>import</strong> java.awt.Rectangle;\n<a name=\"8\" href=\"#8\">8</a>   <strong>import</strong> java.awt.Shape;\n<a name=\"9\" href=\"#9\">9</a>   <strong>import</strong> java.awt.geom.AffineTransform;\n<a name=\"10\" href=\"#10\">10</a>  <strong>import</strong> java.awt.geom.Rectangle2D;\n<a name=\"11\" href=\"#11\">11</a>  <strong>import</strong> java.io.OutputStream;\n<a name=\"12\" href=\"#12\">12</a>  <strong>import</strong> java.util.List;\n<a name=\"13\" href=\"#13\">13</a>  \n<a name=\"14\" href=\"#14\">14</a>  <strong>import</strong> javax.xml.transform.Transformer;\n<a name=\"15\" href=\"#15\">15</a>  <strong>import</strong> javax.xml.transform.TransformerConfigurationException;\n<a name=\"16\" href=\"#16\">16</a>  <strong>import</strong> javax.xml.transform.TransformerException;\n<a name=\"17\" href=\"#17\">17</a>  <strong>import</strong> javax.xml.transform.TransformerFactory;\n<a name=\"18\" href=\"#18\">18</a>  <strong>import</strong> javax.xml.transform.dom.DOMSource;\n<a name=\"19\" href=\"#19\">19</a>  <strong>import</strong> javax.xml.transform.stream.StreamResult;\n<a name=\"20\" href=\"#20\">20</a>  \n<a name=\"21\" href=\"#21\">21</a>  <strong>import</strong> org.apache.batik.bridge.BridgeContext;\n<a name=\"22\" href=\"#22\">22</a>  <strong>import</strong> org.apache.batik.bridge.DocumentLoader;\n<a name=\"23\" href=\"#23\">23</a>  <strong>import</strong> org.apache.batik.bridge.DynamicGVTBuilder;\n<a name=\"24\" href=\"#24\">24</a>  <strong>import</strong> org.apache.batik.bridge.UpdateManager;\n<a name=\"25\" href=\"#25\">25</a>  <strong>import</strong> org.apache.batik.css.engine.CSSEngine;\n<a name=\"26\" href=\"#26\">26</a>  <strong>import</strong> org.apache.batik.css.engine.CSSEngineEvent;\n<a name=\"27\" href=\"#27\">27</a>  <strong>import</strong> org.apache.batik.css.engine.CSSEngineListener;\n<a name=\"28\" href=\"#28\">28</a>  <strong>import</strong> org.apache.batik.dom.svg.SVGOMDocument;\n<a name=\"29\" href=\"#29\">29</a>  <strong>import</strong> org.apache.batik.gvt.UpdateTracker;\n<a name=\"30\" href=\"#30\">30</a>  <strong>import</strong> org.eclipse.swt.events.PaintEvent;\n<a name=\"31\" href=\"#31\">31</a>  <strong>import</strong> org.eclipse.swt.widgets.Composite;\n<a name=\"32\" href=\"#32\">32</a>  <strong>import</strong> org.holongate.j2d.IPaintableManager;\n<a name=\"33\" href=\"#33\">33</a>  <strong>import</strong> org.holongate.j2d.J2DUtilities;\n<a name=\"34\" href=\"#34\">34</a>  <strong>import</strong> org.holongate.svg.SimpleSVGCanvas;\n<a name=\"35\" href=\"#35\">35</a>  <strong>import</strong> org.holongate.svg.SimpleSWTUserAgent;\n<a name=\"36\" href=\"#36\">36</a>  <strong>import</strong> org.w3c.dom.events.Event;\n<a name=\"37\" href=\"#37\">37</a>  <strong>import</strong> org.w3c.dom.events.EventListener;\n<a name=\"38\" href=\"#38\">38</a>  <strong>import</strong> org.w3c.dom.events.EventTarget;\n<a name=\"39\" href=\"#39\">39</a>  <strong>import</strong> org.w3c.dom.svg.SVGDocument;\n<a name=\"40\" href=\"#40\">40</a>  <em>/**<em>*</em></em>\n<a name=\"41\" href=\"#41\">41</a>  <em> * This canvas provides interactive manipulation for a SWT SVG canvas </em>\n<a name=\"42\" href=\"#42\">42</a>  <em> * </em>\n<a name=\"43\" href=\"#43\">43</a>  <em> * @author Jie Ren</em>\n<a name=\"44\" href=\"#44\">44</a>  <em> */</em>\n<a name=\"45\" href=\"#45\">45</a>  <strong>public</strong> <strong>class</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pie/InteractiveSVGCanvas.html\">InteractiveSVGCanvas</a> <strong>extends</strong> SimpleSVGCanvas {\n<a name=\"46\" href=\"#46\">46</a>  \n<a name=\"47\" href=\"#47\">47</a>  \t<em>/**<em>*</em></em>\n<a name=\"48\" href=\"#48\">48</a>  <em>\t * @param parent\tthe parent widget</em>\n<a name=\"49\" href=\"#49\">49</a>  <em>\t * @param uri\t\tthe URL of the SVG to load</em>\n<a name=\"50\" href=\"#50\">50</a>  <em>\t */</em>\n<a name=\"51\" href=\"#51\">51</a>  \t<strong>public</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pie/InteractiveSVGCanvas.html\">InteractiveSVGCanvas</a>(Composite parent, String uri) {\n<a name=\"52\" href=\"#52\">52</a>  \t\t<strong>super</strong>(parent, uri);\n<a name=\"53\" href=\"#53\">53</a>  \t}\n<a name=\"54\" href=\"#54\">54</a>  \t\n<a name=\"55\" href=\"#55\">55</a>  \t<em>/**<em>*</em></em>\n<a name=\"56\" href=\"#56\">56</a>  <em>\t * @param parent\tthe parent widget</em>\n<a name=\"57\" href=\"#57\">57</a>  <em>\t * @param style\t\tdisplay style</em>\n<a name=\"58\" href=\"#58\">58</a>  <em>\t * @param manager\tthe manager</em>\n<a name=\"59\" href=\"#59\">59</a>  <em>\t * @param uri\t\tthe URL of the SVG to load</em>\n<a name=\"60\" href=\"#60\">60</a>  <em>\t */</em>\n<a name=\"61\" href=\"#61\">61</a>  \t<strong>public</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pie/InteractiveSVGCanvas.html\">InteractiveSVGCanvas</a>(\n<a name=\"62\" href=\"#62\">62</a>  \t\tComposite parent,\n<a name=\"63\" href=\"#63\">63</a>  \t\t<strong>int</strong> style,\n<a name=\"64\" href=\"#64\">64</a>  \t\tIPaintableManager manager,\n<a name=\"65\" href=\"#65\">65</a>  \t\tString uri) {\n<a name=\"66\" href=\"#66\">66</a>  \t\t<strong>super</strong>(parent, style, manager, uri);\n<a name=\"67\" href=\"#67\">67</a>  \t}\n<a name=\"68\" href=\"#68\">68</a>  \n<a name=\"69\" href=\"#69\">69</a>  \t<em>/**<em>*</em></em>\n<a name=\"70\" href=\"#70\">70</a>  <em>\t * @param parent\tthe parent widget</em>\n<a name=\"71\" href=\"#71\">71</a>  <em>\t * @param style\t\tdisplay style</em>\n<a name=\"72\" href=\"#72\">72</a>  <em>\t * @param uri\t\tthe URL of the SVG to load</em>\n<a name=\"73\" href=\"#73\">73</a>  <em>\t */</em>\n<a name=\"74\" href=\"#74\">74</a>  \t<strong>public</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pie/InteractiveSVGCanvas.html\">InteractiveSVGCanvas</a>(Composite parent, <strong>int</strong> style, String uri) {\n<a name=\"75\" href=\"#75\">75</a>  \t\t<strong>super</strong>(parent, style, uri);\n<a name=\"76\" href=\"#76\">76</a>  \t}\n<a name=\"77\" href=\"#77\">77</a>  \n<a name=\"78\" href=\"#78\">78</a>  \t<em>/**<em>*</em></em>\n<a name=\"79\" href=\"#79\">79</a>  <em>\t * Get the SVG document</em>\n<a name=\"80\" href=\"#80\">80</a>  <em>\t * @return the SVG document</em>\n<a name=\"81\" href=\"#81\">81</a>  <em>\t */</em>\n<a name=\"82\" href=\"#82\">82</a>  \t<strong>public</strong> SVGDocument getDocument() {\n<a name=\"83\" href=\"#83\">83</a>  \t    <em class=\"comment\">// Element e = svgDocument.getRootElement();</em>\n<a name=\"84\" href=\"#84\">84</a>  \t    <strong>return</strong> svgDocument;\n<a name=\"85\" href=\"#85\">85</a>  \t}\n<a name=\"86\" href=\"#86\">86</a>  \n<a name=\"87\" href=\"#87\">87</a>  \t<em>/**<em>*</em></em>\n<a name=\"88\" href=\"#88\">88</a>  <em>\t * Get the associated update manager</em>\n<a name=\"89\" href=\"#89\">89</a>  <em>\t * @return the update manager</em>\n<a name=\"90\" href=\"#90\">90</a>  <em>\t */</em>\n<a name=\"91\" href=\"#91\">91</a>  \t<strong>public</strong> UpdateManager getUpdateManager() {\n<a name=\"92\" href=\"#92\">92</a>  \t    <strong>return</strong> updateMgr;\n<a name=\"93\" href=\"#93\">93</a>  \t}\n<a name=\"94\" href=\"#94\">94</a>  \t\n<a name=\"95\" href=\"#95\">95</a>  \t<em>/**<em>*</em></em>\n<a name=\"96\" href=\"#96\">96</a>  <em>\t * Export the content of the SVG to an output stream</em>\n<a name=\"97\" href=\"#97\">97</a>  <em>\t * @param outputStream the stream to export to</em>\n<a name=\"98\" href=\"#98\">98</a>  <em>\t */</em>\n<a name=\"99\" href=\"#99\">99</a>      <strong>public</strong> <strong>void</strong> writeTo(OutputStream outputStream) {\n<a name=\"100\" href=\"#100\">100</a>         DOMSource xmlSource = <strong>new</strong> DOMSource(svgDocument);\n<a name=\"101\" href=\"#101\">101</a>         StreamResult servletResult = <strong>new</strong> StreamResult(outputStream);\n<a name=\"102\" href=\"#102\">102</a>         TransformerFactory tf = TransformerFactory.newInstance();\n<a name=\"103\" href=\"#103\">103</a>         <strong>try</strong> {\n<a name=\"104\" href=\"#104\">104</a>             Transformer serializer = tf.newTransformer();\n<a name=\"105\" href=\"#105\">105</a>             serializer.transform(xmlSource, servletResult);\n<a name=\"106\" href=\"#106\">106</a>         } \n<a name=\"107\" href=\"#107\">107</a>         <strong>catch</strong> (TransformerConfigurationException e) {\n<a name=\"108\" href=\"#108\">108</a>             e.printStackTrace();\n<a name=\"109\" href=\"#109\">109</a>         } \n<a name=\"110\" href=\"#110\">110</a>         <strong>catch</strong> (TransformerException e) {\n<a name=\"111\" href=\"#111\">111</a>             e.printStackTrace();\n<a name=\"112\" href=\"#112\">112</a>         }\n<a name=\"113\" href=\"#113\">113</a>     }\n<a name=\"114\" href=\"#114\">114</a> \n<a name=\"115\" href=\"#115\">115</a>     <em class=\"comment\">// copied from DynamicSVGCanvas</em>\n<a name=\"116\" href=\"#116\">116</a>     \n<a name=\"117\" href=\"#117\">117</a> \t<strong>private</strong> UpdateManager updateMgr;\n<a name=\"118\" href=\"#118\">118</a> \t<strong>private</strong> EventListener domListener;\n<a name=\"119\" href=\"#119\">119</a> \t<strong>private</strong> CSSEngineListener cssListener;\n<a name=\"120\" href=\"#120\">120</a> \t<strong>private</strong> <strong>boolean</strong> initialized = false;\n<a name=\"121\" href=\"#121\">121</a> \n<a name=\"122\" href=\"#122\">122</a> \t<em class=\"comment\">/*<em class=\"comment\"> (non-Javadoc)</em></em>\n<a name=\"123\" href=\"#123\">123</a> <em class=\"comment\">\t * @see org.holongate.svg.SimpleSVGCanvas#loadDocument()</em>\n<a name=\"124\" href=\"#124\">124</a> <em class=\"comment\">\t */</em>\n<a name=\"125\" href=\"#125\">125</a> \t<strong>protected</strong> <strong>void</strong> loadDocument() {\n<a name=\"126\" href=\"#126\">126</a> \t\tbuilder = <strong>new</strong> DynamicGVTBuilder();\n<a name=\"127\" href=\"#127\">127</a> \t\tuserAgent = <strong>new</strong> SimpleSWTUserAgent(<strong>this</strong>);\n<a name=\"128\" href=\"#128\">128</a> \t\tloader = <strong>new</strong> DocumentLoader(userAgent);\n<a name=\"129\" href=\"#129\">129</a> \t\t<em class=\"comment\">// CHANGE: invisible method</em>\n<a name=\"130\" href=\"#130\">130</a> \t\t<em class=\"comment\">// SimpleSWTUserAgent.XercesWorkaround(); </em>\n<a name=\"131\" href=\"#131\">131</a> \t\t<strong>try</strong> {\n<a name=\"132\" href=\"#132\">132</a> \t\t\tsvgDocument = (SVGDocument) loader.loadDocument(uri);\n<a name=\"133\" href=\"#133\">133</a> \t\t\tbridgeContext = <strong>new</strong> BridgeContext(userAgent, loader);\n<a name=\"134\" href=\"#134\">134</a> \t\t\tbridgeContext.setDynamicState(BridgeContext.DYNAMIC);\n<a name=\"135\" href=\"#135\">135</a> \t\t\tgvtRoot = builder.build(bridgeContext, svgDocument);\n<a name=\"136\" href=\"#136\">136</a> \t\t\tgetSVGPaintable().setTree(gvtRoot);\n<a name=\"137\" href=\"#137\">137</a> \t\t\tupdateMgr = <strong>new</strong> UpdateManager(bridgeContext, gvtRoot, svgDocument);\n<a name=\"138\" href=\"#138\">138</a> \t\t\t<em class=\"comment\">// Catch all the dom events</em>\n<a name=\"139\" href=\"#139\">139</a> \t\t\tEventTarget evtTarget = (EventTarget) svgDocument;\n<a name=\"140\" href=\"#140\">140</a> \t\t\tdomListener = <strong>new</strong> EventListener() {\n<a name=\"141\" href=\"#141\">141</a> \t\t\t\t<strong>public</strong> <strong>void</strong> handleEvent(Event arg0) {\n<a name=\"142\" href=\"#142\">142</a> \t\t\t\t    <strong>if</strong>(arg0!=<strong>null</strong>);\n<a name=\"143\" href=\"#143\">143</a> \t\t\t\t\tupdateDirtyAreas();\n<a name=\"144\" href=\"#144\">144</a> \t\t\t\t}\n<a name=\"145\" href=\"#145\">145</a> \t\t\t};\n<a name=\"146\" href=\"#146\">146</a> \t\t\tevtTarget.addEventListener(<span class=\"string\">\"DOMAttrModified\"</span>, domListener, false);\n<a name=\"147\" href=\"#147\">147</a> \t\t\tevtTarget.addEventListener(<span class=\"string\">\"DOMNodeInserted\"</span>, domListener, false);\n<a name=\"148\" href=\"#148\">148</a> \t\t\tevtTarget.addEventListener(<span class=\"string\">\"DOMNodeRemoved\"</span>, domListener, false);\n<a name=\"149\" href=\"#149\">149</a> \t\t\tevtTarget.addEventListener(\n<a name=\"150\" href=\"#150\">150</a> \t\t\t\t<span class=\"string\">\"DOMCharacterDataModified\"</span>,\n<a name=\"151\" href=\"#151\">151</a> \t\t\t\tdomListener,\n<a name=\"152\" href=\"#152\">152</a> \t\t\t\tfalse);\n<a name=\"153\" href=\"#153\">153</a> \n<a name=\"154\" href=\"#154\">154</a> \t\t\t<em class=\"comment\">// And all the CSS property changes</em>\n<a name=\"155\" href=\"#155\">155</a> \t\t\tCSSEngine cssEngine = ((SVGOMDocument) svgDocument).getCSSEngine();\n<a name=\"156\" href=\"#156\">156</a> \t\t\tcssListener = <strong>new</strong> CSSEngineListener() {\n<a name=\"157\" href=\"#157\">157</a> \t\t\t\t<strong>public</strong> <strong>void</strong> propertiesChanged(CSSEngineEvent evt) {\n<a name=\"158\" href=\"#158\">158</a> \t\t\t\t    <strong>if</strong>(evt!=<strong>null</strong>);\n<a name=\"159\" href=\"#159\">159</a> \t\t\t\t\tupdateDirtyAreas();\n<a name=\"160\" href=\"#160\">160</a> \t\t\t\t}\n<a name=\"161\" href=\"#161\">161</a> \t\t\t};\n<a name=\"162\" href=\"#162\">162</a> \t\t\tcssEngine.addCSSEngineListener(cssListener);\n<a name=\"163\" href=\"#163\">163</a> \t\t} <strong>catch</strong> (Exception e) {\n<a name=\"164\" href=\"#164\">164</a> \t\t\te.printStackTrace();\n<a name=\"165\" href=\"#165\">165</a> \t\t\tuserAgent.displayError(e);\n<a name=\"166\" href=\"#166\">166</a> \t\t}\n<a name=\"167\" href=\"#167\">167</a> \t}\n<a name=\"168\" href=\"#168\">168</a> \n<a name=\"169\" href=\"#169\">169</a> \t<em class=\"comment\">/*<em class=\"comment\"> (non-Javadoc)</em></em>\n<a name=\"170\" href=\"#170\">170</a> <em class=\"comment\">\t * @see org.holongate.svg.SimpleSVGCanvas#cleanup()</em>\n<a name=\"171\" href=\"#171\">171</a> <em class=\"comment\">\t */</em>\n<a name=\"172\" href=\"#172\">172</a> \t<strong>public</strong> <strong>void</strong> cleanup() {\n<a name=\"173\" href=\"#173\">173</a> \t\tupdateMgr.interrupt();\n<a name=\"174\" href=\"#174\">174</a> \t\tEventTarget evtTarget = (EventTarget) svgDocument;\n<a name=\"175\" href=\"#175\">175</a> \t\tevtTarget.removeEventListener(<span class=\"string\">\"DOMAttrModified\"</span>, domListener, false);\n<a name=\"176\" href=\"#176\">176</a> \t\tevtTarget.removeEventListener(<span class=\"string\">\"DOMNodeInserted\"</span>, domListener, false);\n<a name=\"177\" href=\"#177\">177</a> \t\tevtTarget.removeEventListener(<span class=\"string\">\"DOMNodeRemoved\"</span>, domListener, false);\n<a name=\"178\" href=\"#178\">178</a> \t\tevtTarget.removeEventListener(\n<a name=\"179\" href=\"#179\">179</a> \t\t\t<span class=\"string\">\"DOMCharacterDataModified\"</span>,\n<a name=\"180\" href=\"#180\">180</a> \t\t\tdomListener,\n<a name=\"181\" href=\"#181\">181</a> \t\t\tfalse);\n<a name=\"182\" href=\"#182\">182</a> \t\tCSSEngine cssEngine = ((SVGOMDocument) svgDocument).getCSSEngine();\n<a name=\"183\" href=\"#183\">183</a> \t\t<strong>if</strong> (cssEngine != <strong>null</strong>)\n<a name=\"184\" href=\"#184\">184</a> \t\t    cssEngine.removeCSSEngineListener(cssListener);\n<a name=\"185\" href=\"#185\">185</a> \t\tdomListener = <strong>null</strong>;\n<a name=\"186\" href=\"#186\">186</a> \t\tcssListener = <strong>null</strong>;\n<a name=\"187\" href=\"#187\">187</a> \t\tupdateMgr = <strong>null</strong>;\n<a name=\"188\" href=\"#188\">188</a> \t\t<strong>super</strong>.cleanup();\n<a name=\"189\" href=\"#189\">189</a> \t}\n<a name=\"190\" href=\"#190\">190</a> \n<a name=\"191\" href=\"#191\">191</a> \t<strong>private</strong> <strong>void</strong> updateDirtyAreas() {\n<a name=\"192\" href=\"#192\">192</a> \t\t<strong>if</strong> (isDisposed()) {\n<a name=\"193\" href=\"#193\">193</a> \t\t\t<strong>return</strong>;\n<a name=\"194\" href=\"#194\">194</a> \t\t}\n<a name=\"195\" href=\"#195\">195</a> \t\tUpdateTracker ut = updateMgr.getUpdateTracker();\n<a name=\"196\" href=\"#196\">196</a> \t\t<em class=\"comment\">// CHANGE: ut made null by us</em>\n<a name=\"197\" href=\"#197\">197</a> \t\t<strong>if</strong> (ut == <strong>null</strong>)\n<a name=\"198\" href=\"#198\">198</a> \t\t    <strong>return</strong>;\n<a name=\"199\" href=\"#199\">199</a> \t\tList l = ut.getDirtyAreas();\n<a name=\"200\" href=\"#200\">200</a> \t\t<strong>if</strong> (l == <strong>null</strong>) {\n<a name=\"201\" href=\"#201\">201</a> \t\t\t<strong>return</strong>;\n<a name=\"202\" href=\"#202\">202</a> \t\t}\n<a name=\"203\" href=\"#203\">203</a> \t\tut.clear();\n<a name=\"204\" href=\"#204\">204</a> \t\t<strong>final</strong> Rectangle dirty = <strong>new</strong> Rectangle();\n<a name=\"205\" href=\"#205\">205</a> \t\tAffineTransform t = getPaintableManager().getCanvasTransform();\n<a name=\"206\" href=\"#206\">206</a> \t\t<strong>for</strong> (<strong>int</strong> i = 0; i &lt; l.size(); i++) {\n<a name=\"207\" href=\"#207\">207</a> \t\t\tRectangle2D ts =\n<a name=\"208\" href=\"#208\">208</a> \t\t\t\tt\n<a name=\"209\" href=\"#209\">209</a> \t\t\t\t\t.createTransformedShape(((Shape) l.get(i)).getBounds2D())\n<a name=\"210\" href=\"#210\">210</a> \t\t\t\t\t.getBounds2D();\n<a name=\"211\" href=\"#211\">211</a> \t\t\tdirty.add(ts);\n<a name=\"212\" href=\"#212\">212</a> \t\t\t<strong>if</strong> (isDisposed()) {\n<a name=\"213\" href=\"#213\">213</a> \t\t\t\t<strong>return</strong>;\n<a name=\"214\" href=\"#214\">214</a> \t\t\t}\n<a name=\"215\" href=\"#215\">215</a> \t\t\tpaint(J2DUtilities.toRectangle(ts));\n<a name=\"216\" href=\"#216\">216</a> \t\t}\n<a name=\"217\" href=\"#217\">217</a> \t\t<strong>if</strong> (isDisposed()) {\n<a name=\"218\" href=\"#218\">218</a> \t\t\t<strong>return</strong>;\n<a name=\"219\" href=\"#219\">219</a> \t\t}\n<a name=\"220\" href=\"#220\">220</a> \t\tgetDisplay().asyncExec(<strong>new</strong> Runnable() {\n<a name=\"221\" href=\"#221\">221</a> \t\t\t<strong>public</strong> <strong>void</strong> run() {\n<a name=\"222\" href=\"#222\">222</a> \t\t\t\t<strong>if</strong> (!InteractiveSVGCanvas.<strong>this</strong>.isDisposed()) {\n<a name=\"223\" href=\"#223\">223</a> \t\t\t\t\tpaint(\n<a name=\"224\" href=\"#224\">224</a> \t\t\t\t\t\tdirty.x,\n<a name=\"225\" href=\"#225\">225</a> \t\t\t\t\t\tdirty.y,\n<a name=\"226\" href=\"#226\">226</a> \t\t\t\t\t\tdirty.width,\n<a name=\"227\" href=\"#227\">227</a> \t\t\t\t\t\tdirty.height,\n<a name=\"228\" href=\"#228\">228</a> \t\t\t\t\t\t<strong>true</strong>,\n<a name=\"229\" href=\"#229\">229</a> \t\t\t\t\t\tPAINT_DAMAGED);\n<a name=\"230\" href=\"#230\">230</a> \t\t\t\t}\n<a name=\"231\" href=\"#231\">231</a> \t\t\t}\n<a name=\"232\" href=\"#232\">232</a> \t\t});\n<a name=\"233\" href=\"#233\">233</a> \t}\n<a name=\"234\" href=\"#234\">234</a> \t<em class=\"comment\">/*<em class=\"comment\"> (non-Javadoc)</em></em>\n<a name=\"235\" href=\"#235\">235</a> <em class=\"comment\">\t * @see org.holongate.j2d.IPaintableCanvas#applyPaintEvent(org.eclipse.swt.events.PaintEvent, int)</em>\n<a name=\"236\" href=\"#236\">236</a> <em class=\"comment\">\t */</em>\n<a name=\"237\" href=\"#237\">237</a> \t<strong>public</strong> <strong>void</strong> applyPa<strong>int</strong>Event(Pa<strong>int</strong>Event event, <strong>int</strong> mode) {\n<a name=\"238\" href=\"#238\">238</a> \t\t<strong>if</strong> (!initialized) {\n<a name=\"239\" href=\"#239\">239</a> \t\t\tupdateMgr.manageUpdates(getSVGPaintable());\n<a name=\"240\" href=\"#240\">240</a> \t\t\t<strong>try</strong> {\n<a name=\"241\" href=\"#241\">241</a> \t\t\t\tupdateMgr.dispatchSVGLoadEvent();\n<a name=\"242\" href=\"#242\">242</a> \t\t\t\tinitialized = <strong>true</strong>;\n<a name=\"243\" href=\"#243\">243</a> \t\t\t} <strong>catch</strong> (InterruptedException e) {\n<a name=\"244\" href=\"#244\">244</a> \t\t\t}\n<a name=\"245\" href=\"#245\">245</a> \t\t}\n<a name=\"246\" href=\"#246\">246</a> \t\t<strong>super</strong>.applyPaintEvent(event, mode);\n<a name=\"247\" href=\"#247\">247</a> \t}\n<a name=\"248\" href=\"#248\">248</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 34469.0}