{"text": "View Javadoc 1 package edu uci isr impromptu pocketpc 2 3 import java io File 4 import java net MalformedURLException 5 import java rmi Naming 6 import java rmi RemoteException 7 import java rmi registry LocateRegistry 8 import java rmi registry Registry 9 1 import edu uci isr yancees server rmi RemoteYanceesImplementation 11 12 13 This is the main applicatio class It basically reads command line inputs 14 starts local Yancees server instance if necessaary and initializes the 15 applicatio GUI 16 17 author rsilvafi 18 class created at Aug 15 2 5 19 2 21 public class TinyImpromptu 22 23 public final static String DEFAULT IMPROMPTU NAME PocketPC 24 25 public static String yanceesHostname localhost 26 public static String yanceesConfigFileName yanceesConf xml 27 public static String instanceName getImpromptuName 28 29 static String yanceesInstanceFullAddress null 3 static boolean startedLocalYanceesServer false 31 32 static boolean print true 33 34 static Thread serverThread null 35 static RemoteYanceesImplementation server 36 37 public static void main String args 38 39 if a Yancees configuration file is passed as parameter a local server is created 4 create a local yancees server 41 42 if args length 1 43 String parameter args 44 45 if parameter startsWith 46 String tail parameter substring 2 47 48 yanceesHostname tail substring tail indexOf 49 instanceName tail substring tail indexOf 1 5 51 System out println TinyImpromptu hostname yanceesHostname 52 System out println TinyImpromptu instanceName instanceName 53 54 else if parameter endsWith xml 55 yanceesConfigFileName parameter 56 createRegistry 57 createLocalYanceesServer yanceesConfigFileName 58 startedLocalYanceesServer true 59 else 6 printUsage 61 62 63 64 if print 65 System out println TinyImpromptu creating GUI component 66 TinyImpromptuGUI app new TinyImpromptuGUI 67 System exit 68 69 7 71 Get the name used to designate the impromptu instance 72 return the name It is the property user name unless 73 the property impromptu name is set 74 75 private static String getImpromptuName 76 77 String impromptuName System getProperty impromptu name 78 79 user name is always present 8 if impromptuName null impromptuName equals null 81 impromptuName System getProperty user name 82 83 84 if impromptuName unknown 85 86 87 88 append a name to the end to make it different from the regular Yancees 89 instance in case a local yancees copy is running for this tiny 9 impromptu instance 91 if startedLocalYanceesServer 92 impromptuName impromptuName DEFAULT IMPROMPTU NAME 93 94 95 return impromptuName 96 97 98 private static void printUsage 99 System out println Usage 1 System out println java edu uci isr impromptu pocketpc TinyImpromptu 1 1 System out println java edu uci isr impromptu pocketpc TinyImpromptu yanceesConfigFile xml 1 2 System out println java edu uci isr impromptu pocketpc TinyImpromptu hostname instancename 1 3 System out println 1 4 1 5 1 6 1 7 Creates the rmi registry if it is not already started 1 8 1 9 public static void createRegistry 11 111 try 112 LocateRegistry createRegistry Registry REGISTRY PORT 113 catch RemoteException ri 114 If there is already one just use it 115 System out println TinyImpromptu using an existing RMI Registry instance 116 117 118 119 12 public static void createLocalYanceesServer final String file 121 String address yanceesHostname instanceName 122 createLocalYanceesServer file address 123 124 125 126 Creates a local YANCEES server that automatically connects to the P2P 127 network of notification servers As a consequence it listens to all 128 the relevant events from the network 129 13 public static void createLocalYanceesServer final String file final String address 131 132 serverThread new Thread 133 public void run 134 135 String fileName file 136 if fileName null 137 fileName yanceesConfigFileName 138 139 14 creates a yancees server instance locally 141 try 142 server new RemoteYanceesImplementation new File 143 fileName 144 145 if print 146 System out println TinyImpromptu Registering Yancees server as address 147 Naming rebind address server 148 149 catch RemoteException e 15 e printStackTrace 151 catch MalformedURLException e 152 e printStackTrace 153 154 155 156 157 serverThread start 158 159 Wait for the server to startup 16 try 161 Thread sleep 3 162 catch InterruptedException e 163 TODO Auto generated catch block 164 e printStackTrace 165 166 167 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.30/xref/edu/uci/isr/impromptu/pocketpc/TinyImpromptu.html", "title": "tinyimpromptu xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>TinyImpromptu xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../../../../stylesheet.css\" />\n</head>\n<body>\n<div id=\"overview\"><a href=\"../../../../../../apidocs/edu/uci/isr/impromptu/pocketpc/TinyImpromptu.html\">View Javadoc</a></div><pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <strong>package</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pocketpc/package-summary.html\">edu.uci.isr.impromptu.pocketpc</a>;\n<a name=\"2\" href=\"#2\">2</a>   \n<a name=\"3\" href=\"#3\">3</a>   <strong>import</strong> java.io.File;\n<a name=\"4\" href=\"#4\">4</a>   <strong>import</strong> java.net.MalformedURLException;\n<a name=\"5\" href=\"#5\">5</a>   <strong>import</strong> java.rmi.Naming;\n<a name=\"6\" href=\"#6\">6</a>   <strong>import</strong> java.rmi.RemoteException;\n<a name=\"7\" href=\"#7\">7</a>   <strong>import</strong> java.rmi.registry.LocateRegistry;\n<a name=\"8\" href=\"#8\">8</a>   <strong>import</strong> java.rmi.registry.Registry;\n<a name=\"9\" href=\"#9\">9</a>   \n<a name=\"10\" href=\"#10\">10</a>  <strong>import</strong> edu.uci.isr.yancees.server.rmi.RemoteYanceesImplementation;\n<a name=\"11\" href=\"#11\">11</a>  \n<a name=\"12\" href=\"#12\">12</a>  <em>/**<em>*</em></em>\n<a name=\"13\" href=\"#13\">13</a>  <em> * This is the main applicatio class. It basically reads command line inputs, </em>\n<a name=\"14\" href=\"#14\">14</a>  <em> * starts local Yancees server instance, if necessaary, and initializes the </em>\n<a name=\"15\" href=\"#15\">15</a>  <em> * applicatio GUI.</em>\n<a name=\"16\" href=\"#16\">16</a>  <em> * </em>\n<a name=\"17\" href=\"#17\">17</a>  <em> * @author rsilvafi</em>\n<a name=\"18\" href=\"#18\">18</a>  <em> * class created at Aug 15, 2005</em>\n<a name=\"19\" href=\"#19\">19</a>  <em> *</em>\n<a name=\"20\" href=\"#20\">20</a>  <em> */</em>\n<a name=\"21\" href=\"#21\">21</a>  <strong>public</strong> <strong>class</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pocketpc/TinyImpromptu.html\">TinyImpromptu</a> {\n<a name=\"22\" href=\"#22\">22</a>  \n<a name=\"23\" href=\"#23\">23</a>  \t<strong>public</strong> <strong>final</strong> <strong>static</strong> String DEFAULT_IMPROMPTU_NAME = <span class=\"string\">\"PocketPC\"</span>;\n<a name=\"24\" href=\"#24\">24</a>  \n<a name=\"25\" href=\"#25\">25</a>  \t<strong>public</strong> <strong>static</strong> String yanceesHostname = <span class=\"string\">\"localhost\"</span>;\n<a name=\"26\" href=\"#26\">26</a>  \t<strong>public</strong> <strong>static</strong>  String yanceesConfigFileName = <span class=\"string\">\"yanceesConf.xml\"</span>; \n<a name=\"27\" href=\"#27\">27</a>  \t<strong>public</strong> <strong>static</strong> String instanceName= getImpromptuName();\n<a name=\"28\" href=\"#28\">28</a>  \t\n<a name=\"29\" href=\"#29\">29</a>  \t<em class=\"comment\">//static String yanceesInstanceFullAddress = null;\t</em>\n<a name=\"30\" href=\"#30\">30</a>  \t<strong>static</strong> <strong>boolean</strong> startedLocalYanceesServer = false;\n<a name=\"31\" href=\"#31\">31</a>  \t\n<a name=\"32\" href=\"#32\">32</a>  \t<strong>static</strong> <strong>boolean</strong> print = <strong>true</strong>;\n<a name=\"33\" href=\"#33\">33</a>  \t\n<a name=\"34\" href=\"#34\">34</a>  \t<strong>static</strong> Thread serverThread = <strong>null</strong>;\n<a name=\"35\" href=\"#35\">35</a>  \t<strong>static</strong> RemoteYanceesImplementation server;\n<a name=\"36\" href=\"#36\">36</a>  \t\t\n<a name=\"37\" href=\"#37\">37</a>  \t<strong>public</strong> <strong>static</strong> <strong>void</strong> main(String[] args) {\n<a name=\"38\" href=\"#38\">38</a>  \t\t\n<a name=\"39\" href=\"#39\">39</a>  \t\t<em class=\"comment\">// if a Yancees configuration file is passed as parameter, a local server is created</em>\n<a name=\"40\" href=\"#40\">40</a>  \t\t<em class=\"comment\">// create a local yancees server..</em>\n<a name=\"41\" href=\"#41\">41</a>  \t\t\n<a name=\"42\" href=\"#42\">42</a>  \t\t<strong>if</strong> (args.length == 1) {\n<a name=\"43\" href=\"#43\">43</a>  \t\t\tString parameter = args[0];\n<a name=\"44\" href=\"#44\">44</a>  \t\t\t\n<a name=\"45\" href=\"#45\">45</a>  \t\t\t<strong>if</strong> (parameter.startsWith(<span class=\"string\">\"//\"</span>)) {\n<a name=\"46\" href=\"#46\">46</a>  \t\t\t\tString tail = parameter.substring(2);\n<a name=\"47\" href=\"#47\">47</a>  \t\t\t\t\n<a name=\"48\" href=\"#48\">48</a>  \t\t\t\tyanceesHostname = tail.substring(0, tail.indexOf(<span class=\"string\">\"/\"</span>));\n<a name=\"49\" href=\"#49\">49</a>  \t\t\t\tinstanceName = tail.substring(tail.indexOf(<span class=\"string\">\"/\"</span>)+1);\n<a name=\"50\" href=\"#50\">50</a>  \t\t\t\t\n<a name=\"51\" href=\"#51\">51</a>  \t\t\t\tSystem.out.println(<span class=\"string\">\"TinyImpromptu: hostname = \"</span>+yanceesHostname);\n<a name=\"52\" href=\"#52\">52</a>  \t\t\t\tSystem.out.println(<span class=\"string\">\"TinyImpromptu: instanceName = \"</span>+instanceName);\n<a name=\"53\" href=\"#53\">53</a>  \t\t\t\t\n<a name=\"54\" href=\"#54\">54</a>  \t\t\t} <strong>else</strong> <strong>if</strong> ( parameter.endsWith(<span class=\"string\">\".xml\"</span>) ) {\n<a name=\"55\" href=\"#55\">55</a>  \t\t\t\tyanceesConfigFileName = parameter;\n<a name=\"56\" href=\"#56\">56</a>  \t\t\t\tcreateRegistry();\n<a name=\"57\" href=\"#57\">57</a>  \t\t\t\tcreateLocalYanceesServer(yanceesConfigFileName);\n<a name=\"58\" href=\"#58\">58</a>  \t\t\t\tstartedLocalYanceesServer = <strong>true</strong>;\n<a name=\"59\" href=\"#59\">59</a>  \t\t\t} <strong>else</strong> {\n<a name=\"60\" href=\"#60\">60</a>  \t\t\t\tprintUsage();\n<a name=\"61\" href=\"#61\">61</a>  \t\t\t}\n<a name=\"62\" href=\"#62\">62</a>  \t\t}\n<a name=\"63\" href=\"#63\">63</a>  \t\t\t\t\n<a name=\"64\" href=\"#64\">64</a>  \t\t<strong>if</strong> (print)\n<a name=\"65\" href=\"#65\">65</a>  \t\t\tSystem.out.println(<span class=\"string\">\"TinyImpromptu: creating GUI component...\"</span>);\n<a name=\"66\" href=\"#66\">66</a>  \t\tTinyImpromptuGUI app = <strong>new</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pocketpc/TinyImpromptuGUI.html\">TinyImpromptuGUI</a>();\n<a name=\"67\" href=\"#67\">67</a>  \t\tSystem.exit(0);\n<a name=\"68\" href=\"#68\">68</a>  \t}\n<a name=\"69\" href=\"#69\">69</a>  \t\n<a name=\"70\" href=\"#70\">70</a>  \t<em>/**<em>*</em></em>\n<a name=\"71\" href=\"#71\">71</a>  <em>     * Get the name used to designate the impromptu instance</em>\n<a name=\"72\" href=\"#72\">72</a>  <em>     * @return the name. It is the property user.name, unless</em>\n<a name=\"73\" href=\"#73\">73</a>  <em>     * the property impromptu.name is set.</em>\n<a name=\"74\" href=\"#74\">74</a>  <em>     */</em>\n<a name=\"75\" href=\"#75\">75</a>      <strong>private</strong> <strong>static</strong> String getImpromptuName() {\n<a name=\"76\" href=\"#76\">76</a>      \n<a name=\"77\" href=\"#77\">77</a>      \tString impromptuName = System.getProperty(<span class=\"string\">\"impromptu.name\"</span>); \t\n<a name=\"78\" href=\"#78\">78</a>      \t\n<a name=\"79\" href=\"#79\">79</a>      \t<em class=\"comment\">// \"user.name\" is always present</em>\n<a name=\"80\" href=\"#80\">80</a>      \t<strong>if</strong> (impromptuName==<strong>null</strong> || impromptuName.equals(<span class=\"string\">\"null\"</span>)) {\n<a name=\"81\" href=\"#81\">81</a>              impromptuName = System.getProperty(<span class=\"string\">\"user.name\"</span>);\n<a name=\"82\" href=\"#82\">82</a>  \t\t}\n<a name=\"83\" href=\"#83\">83</a>      \t\n<a name=\"84\" href=\"#84\">84</a>      \t<strong>if</strong> (impromptuName == <span class=\"string\">\"unknown\"</span>) {\n<a name=\"85\" href=\"#85\">85</a>      \t\t\n<a name=\"86\" href=\"#86\">86</a>      \t}\n<a name=\"87\" href=\"#87\">87</a>      \t\n<a name=\"88\" href=\"#88\">88</a>      \t<em class=\"comment\">// append a name to the end to make it different from the regular Yancees</em>\n<a name=\"89\" href=\"#89\">89</a>      \t<em class=\"comment\">// instance in case a local yancees copy is running for this tiny</em>\n<a name=\"90\" href=\"#90\">90</a>      \t<em class=\"comment\">// impromptu instance</em>\n<a name=\"91\" href=\"#91\">91</a>      \t<strong>if</strong> (startedLocalYanceesServer) {\n<a name=\"92\" href=\"#92\">92</a>      \t\timpromptuName = impromptuName+<span class=\"string\">\"_\"</span>+DEFAULT_IMPROMPTU_NAME;\n<a name=\"93\" href=\"#93\">93</a>      \t}\n<a name=\"94\" href=\"#94\">94</a>      \t\n<a name=\"95\" href=\"#95\">95</a>          <strong>return</strong> impromptuName;\n<a name=\"96\" href=\"#96\">96</a>      }\n<a name=\"97\" href=\"#97\">97</a>  \t\n<a name=\"98\" href=\"#98\">98</a>  \t<strong>private</strong> <strong>static</strong> <strong>void</strong> printUsage() {\n<a name=\"99\" href=\"#99\">99</a>  \t\tSystem.out.println(<span class=\"string\">\"Usage:\"</span>);\n<a name=\"100\" href=\"#100\">100</a> \t\tSystem.out.println(<span class=\"string\">\"java edu.uci.isr.impromptu.pocketpc.TinyImpromptu\"</span>);\n<a name=\"101\" href=\"#101\">101</a> \t\tSystem.out.println(<span class=\"string\">\"java edu.uci.isr.impromptu.pocketpc.TinyImpromptu yanceesConfigFile.xml \"</span>);\n<a name=\"102\" href=\"#102\">102</a> \t\tSystem.out.println(<span class=\"string\">\"java edu.uci.isr.impromptu.pocketpc.TinyImpromptu //hostname/instancename\"</span>);\n<a name=\"103\" href=\"#103\">103</a> \t\tSystem.out.println();\n<a name=\"104\" href=\"#104\">104</a> \t}\n<a name=\"105\" href=\"#105\">105</a> \t\n<a name=\"106\" href=\"#106\">106</a> \t<em>/**<em>*</em></em>\n<a name=\"107\" href=\"#107\">107</a> <em>\t * Creates the rmi registry if it is not already started</em>\n<a name=\"108\" href=\"#108\">108</a> <em>\t */</em> \n<a name=\"109\" href=\"#109\">109</a> \t<strong>public</strong> <strong>static</strong> <strong>void</strong> createRegistry() {\n<a name=\"110\" href=\"#110\">110</a> \t\n<a name=\"111\" href=\"#111\">111</a> \t\t<strong>try</strong> {\n<a name=\"112\" href=\"#112\">112</a> \t\t\tLocateRegistry.createRegistry(Registry.REGISTRY_PORT);\n<a name=\"113\" href=\"#113\">113</a> \t\t} <strong>catch</strong> (RemoteException ri) {\n<a name=\"114\" href=\"#114\">114</a> \t\t\t<em class=\"comment\">// If there is already one, just use it</em>\n<a name=\"115\" href=\"#115\">115</a> \t\t\tSystem.out.println(<span class=\"string\">\"TinyImpromptu: using an existing RMI Registry instance.\"</span>);\n<a name=\"116\" href=\"#116\">116</a> \t\t}\n<a name=\"117\" href=\"#117\">117</a> \n<a name=\"118\" href=\"#118\">118</a> \t}\n<a name=\"119\" href=\"#119\">119</a> \t\n<a name=\"120\" href=\"#120\">120</a> \t<strong>public</strong> <strong>static</strong> <strong>void</strong> createLocalYanceesServer(<strong>final</strong> String file) {\n<a name=\"121\" href=\"#121\">121</a> \t\tString address = <span class=\"string\">\"//\"</span> + yanceesHostname + <span class=\"string\">\"/\"</span> + instanceName;\n<a name=\"122\" href=\"#122\">122</a> \t\tcreateLocalYanceesServer(file, address);\n<a name=\"123\" href=\"#123\">123</a> \t}\n<a name=\"124\" href=\"#124\">124</a> \t\n<a name=\"125\" href=\"#125\">125</a> \t<em class=\"comment\">/*</em>\n<a name=\"126\" href=\"#126\">126</a> <em class=\"comment\">\t * Creates a local YANCEES server that automatically connects to the P2P</em>\n<a name=\"127\" href=\"#127\">127</a> <em class=\"comment\">\t * network of notification servers. As a consequence, it listens to all</em>\n<a name=\"128\" href=\"#128\">128</a> <em class=\"comment\">\t * the relevant events from the network.</em>\n<a name=\"129\" href=\"#129\">129</a> <em class=\"comment\">\t */</em>\n<a name=\"130\" href=\"#130\">130</a> \t<strong>public</strong> <strong>static</strong> <strong>void</strong> createLocalYanceesServer(<strong>final</strong> String file, <strong>final</strong> String address) {\t\t\n<a name=\"131\" href=\"#131\">131</a> \t\t\n<a name=\"132\" href=\"#132\">132</a> \t\tserverThread = <strong>new</strong> Thread() { \n<a name=\"133\" href=\"#133\">133</a> \t\t\t<strong>public</strong> <strong>void</strong> run() {\n<a name=\"134\" href=\"#134\">134</a> \t\t\n<a name=\"135\" href=\"#135\">135</a> \t\t\t\tString fileName = file;\n<a name=\"136\" href=\"#136\">136</a> \t\t\t\t<strong>if</strong> (fileName == <strong>null</strong>) {\n<a name=\"137\" href=\"#137\">137</a> \t\t\t\t\tfileName = yanceesConfigFileName;\n<a name=\"138\" href=\"#138\">138</a> \t\t\t\t}\n<a name=\"139\" href=\"#139\">139</a> \t\t\t\t\n<a name=\"140\" href=\"#140\">140</a> \t\t\t\t<em class=\"comment\">// creates a yancees server instance locally</em>\n<a name=\"141\" href=\"#141\">141</a> \t\t\t\t<strong>try</strong> {\n<a name=\"142\" href=\"#142\">142</a> \t\t\t\t\tserver = <strong>new</strong> RemoteYanceesImplementation(<strong>new</strong> File(\n<a name=\"143\" href=\"#143\">143</a> \t\t\t\t\t\t\tfileName));\n<a name=\"144\" href=\"#144\">144</a> \t\t\t\t\t\n<a name=\"145\" href=\"#145\">145</a> \t\t\t\t\t<strong>if</strong> (print)\n<a name=\"146\" href=\"#146\">146</a> \t\t\t\t\t\tSystem.out.println(<span class=\"string\">\"TinyImpromptu: Registering Yancees server as : \"</span>+address);\n<a name=\"147\" href=\"#147\">147</a> \t\t\t\t\tNaming.rebind(address, server);\n<a name=\"148\" href=\"#148\">148</a> \t\t\t\t\t\n<a name=\"149\" href=\"#149\">149</a> \t\t\t\t} <strong>catch</strong> (RemoteException e) {\n<a name=\"150\" href=\"#150\">150</a> \t\t\t\t\te.printStackTrace();\n<a name=\"151\" href=\"#151\">151</a> \t\t\t\t} <strong>catch</strong> (MalformedURLException e) {\n<a name=\"152\" href=\"#152\">152</a> \t\t\t\t\te.printStackTrace();\n<a name=\"153\" href=\"#153\">153</a> \t\t\t\t}\n<a name=\"154\" href=\"#154\">154</a> \t\t\t}\n<a name=\"155\" href=\"#155\">155</a> \n<a name=\"156\" href=\"#156\">156</a> \t\t};\n<a name=\"157\" href=\"#157\">157</a> \t\tserverThread.start();\n<a name=\"158\" href=\"#158\">158</a> \t\t\n<a name=\"159\" href=\"#159\">159</a> \t\t<em class=\"comment\">// Wait for the server to startup...</em>\n<a name=\"160\" href=\"#160\">160</a> \t\t<strong>try</strong> {\n<a name=\"161\" href=\"#161\">161</a> \t\t\tThread.sleep(3000);\n<a name=\"162\" href=\"#162\">162</a> \t\t} <strong>catch</strong> (InterruptedException e) {\n<a name=\"163\" href=\"#163\">163</a> \t\t\t<em class=\"comment\">// TODO Auto-generated catch block</em>\n<a name=\"164\" href=\"#164\">164</a> \t\t\te.printStackTrace();\n<a name=\"165\" href=\"#165\">165</a> \t\t}\n<a name=\"166\" href=\"#166\">166</a> \t}\n<a name=\"167\" href=\"#167\">167</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 34030.0}