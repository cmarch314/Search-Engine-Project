{"text": "Search LoginPreferencesHelp GuideAbout Trac WikiTimelineRoadmapBrowse SourceView TicketsSearch Context Navigation Previous ChangeNext Change Changeset 116 for trunk Nomatic GAIM current gtk plugins nomatic networkHelper c View differences inlineside by side Show lines around each change Show the changes in full context Ignore Blank lines Case changes White space changes Timestamp Nov 17 2 6 5 4 PM 8 years ago Author djp3Message Getting ready to split client and server File 1 edited trunk Nomatic GAIM current gtk plugins nomatic networkHelper c modified 3 diffs Legend UnmodifiedAddedRemoved trunk Nomatic GAIM current gtk plugins nomatic networkHelper c r114 r116 88 include myUtilities h 99 1 static char ip 16 11 static char hostname 255 unknown unknown unknown unknown 121 1311 include stdio h 1816 include unistd h 1917 2 void failbackNetworkQuery 18 19 2 21 The theory of this function is that in order to get your IP address you can 22 set up a connection to a website using UDP Since UDP doesn t get any response 23 setting up the connection forces the computer to establish a source IP address 24 without sending any packets Once the route is set up it can be examined to see 25 your local IP address In principle this could vary from destination to destination 26 based on the routing tables but picking a well known IP address should get the local 27 ip address adequately 28const char network get local system ip 2129 3 static char ip 16 31 2232 unsigned int i 23 int s socket AF INET SOCK DGRAM 33 int s 2434 struct sockaddr in dst src 2535 char buf 1 2636 37 Create a UDP socket 38 s socket AF INET SOCK DGRAM 39 4 Set the destination address parameters 2741 dst sin family AF INET 2842 dst sin port ntohs 8 29 3 43 inet pton AF INET 66 1 2 7 99 dst sin addr 3144 45 Connect the socket to the destination 3246 UDP socket so no data should go out 3347 connect s struct sockaddr dst sizeof dst 3549 i sizeof src 365 51 Retrieve the routing information 3752 getsockname s struct sockaddr src i 3853 54 Save it to ip 3955 strncpy ip inet ntop AF INET src sin addr buf sizeof buf sizeof ip 4 56 4157 close s 58 59 return ip 426 61 Old way of getting ip 4362 44 45 46 static void network query 47 48 struct hostent h 49 char name 255 5 51 if gethostname name sizeof name 1 52 gaim debug fatal NULL Nomatic Get hostname failed n 53 strncpy hostname unknown unknown unknown unknown sizeof hostname 54 failbackNetworkQuery 55 56 failbackNetworkQuery 57 return 58 else 59 gaim debug misc NULL Nomatic Host name s n char name 6 strncpy hostname name sizeof hostname 61 62 if h gethostbyname name NULL 63 gaim debug fatal NULL Nomatic Hostname failed n 64 failbackNetworkQuery 65 66 gaim debug misc NULL Nomatic SenseIP Address s n inet ntoa struct in addr h h addr 67 68 strncpy ip inet ntoa struct in addr h h addr sizeof ip 69 7 63 strncpy hostname network get local system hostname sizeof hostname 64 if h gethostbyname name NULL 65 gaim debug fatal NULL Nomatic Hostname failed n 66 67 strncpy ip inet ntoa struct in addr h h addr sizeof ip 7168 7269 73 char network get local system ip 7 const char network get local system hostname 7471 75 network query 76 return ip 77 78 79 8 char network get local system hostname 81 82 network query 72static char hostname 255 unknown unknown unknown unknown 73 74 if gethostname hostname sizeof hostname 1 75 gaim debug misc NULL Nomatic Unable to get a hostname n 76 strncpy hostname unknown unknown unknown unknown sizeof hostname 77 8378 return hostname 8479 Note See TracChangeset for help on using the changeset viewer Download in other formats Unified Diff Zip Archive Powered by Trac 1 1 By Edgewall Software All content copyright 2 7 2 8 by LUCI http luci ics uci edu ", "_id": "http://djp3-pc2.ics.uci.edu/LUCICodeRepository/nomaticIM/changeset/116/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/networkHelper.c", "title": "\n      changeset 116 for trunk/nomatic*gaim/current/gtk/plugins/nomatic/networkhelper.c \u2013 nomatic*im\n    ", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n  \n\n\n  <head>\n\t\t<title>\n      Changeset 116 for trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/networkHelper.c \u2013 Nomatic*IM\n    </title><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><link rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search\" /><link rel=\"help\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\" /><link rel=\"alternate\" href=\"?format=diff&amp;new=116\" type=\"text/plain\" class=\"diff\" title=\"Unified Diff\" /><link rel=\"alternate\" href=\"?format=zip&amp;new=116\" type=\"application/zip\" class=\"zip\" title=\"Zip Archive\" /><link rel=\"start\" href=\"/LUCICodeRepository/nomaticIM/wiki\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/changeset.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/diff.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/code.css\" type=\"text/css\" /><link rel=\"prev\" href=\"/LUCICodeRepository/nomaticIM/changeset/114/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/networkHelper.c\" title=\"Changeset 114 for trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/networkHelper.c\" /><link rel=\"shortcut icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link rel=\"icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link type=\"application/opensearchdescription+xml\" rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search/opensearch\" title=\"Search Nomatic*IM\" /><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/jquery.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/babel.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/messages/en_US.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/trac.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/search.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/diff.js\"></script><script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\".trac-toggledeleted\").show().click(function() {\n                  $(this).siblings().find(\".trac-deleted\").toggle();\n                  return false;\n        }).click();\n        $(\"#content\").find(\"li.entry h2 a\").parent().addAnchor(_(\"Link to this diff\"));\n      });\n    </script>\n\t</head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://luci.ics.uci.edu/#code\"><img src=\"http://luci.ics.uci.edu/blog/archives/LUCIhorzTight.jpg\" alt=\"LUCI Code Repository\" /></a>\n      </div>\n      <form id=\"search\" action=\"/LUCICodeRepository/nomaticIM/search\" method=\"get\">\n        <div>\n          <label for=\"proj-search\">Search:</label>\n          <input type=\"text\" id=\"proj-search\" name=\"q\" size=\"18\" value=\"\" />\n          <input type=\"submit\" value=\"Search\" />\n        </div>\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/login\">Login</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/prefs\">Preferences</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\">Help/Guide</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/wiki\">Wiki</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/timeline\">Timeline</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/roadmap\">Roadmap</a></li><li class=\"active\"><a href=\"/LUCICodeRepository/nomaticIM/browser\">Browse Source</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/report\">View Tickets</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/search\">Search</a></li>\n    </ul>\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><span>&larr; <a class=\"prev\" href=\"/LUCICodeRepository/nomaticIM/changeset/114/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/networkHelper.c\" title=\"Changeset 114 for trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/networkHelper.c\">Previous Change</a></span></li><li class=\"last\"><span class=\"missing\">Next Change &rarr;</span></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"changeset\">\n      <div id=\"title\">\n            <h1>Changeset <a title=\"Show full changeset\" href=\"/LUCICodeRepository/nomaticIM/changeset/116\">116</a>\n              for <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/networkHelper.c?rev=116\">trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/networkHelper.c</a></h1>\n      </div>\n      <form id=\"prefs\" action=\"\">\n        <div>\n          \n  <label for=\"style\">View differences</label>\n  <select id=\"style\" name=\"style\">\n    <option selected=\"selected\" value=\"inline\">inline</option>\n    <option value=\"sidebyside\">side by side</option>\n  </select>\n  <div class=\"field\">\n    <label><input type=\"radio\" name=\"contextall\" value=\"0\" checked=\"checked\" />\n             Show</label>\n      <label><input type=\"text\" name=\"contextlines\" id=\"contextlines\" size=\"2\" maxlength=\"3\" value=\"2\" />\n             lines around each change</label><br />\n    <label><input type=\"radio\" name=\"contextall\" value=\"1\" />\n           Show the changes in full context</label>\n  </div>\n  <fieldset id=\"ignore\">\n    <legend>Ignore:</legend>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignoreblanklines\" name=\"ignoreblanklines\" />\n      <label for=\"ignoreblanklines\">Blank lines</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorecase\" name=\"ignorecase\" />\n      <label for=\"ignorecase\">Case changes</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorewhitespace\" name=\"ignorewhitespace\" />\n      <label for=\"ignorewhitespace\">White space changes</label>\n    </div>\n  </fieldset>\n  <div class=\"buttons\">\n    <input type=\"submit\" name=\"update\" value=\"Update\" />\n  </div>\n\n        </div>\n      </form>\n      <dl id=\"overview\">\n          <dt class=\"property time\">Timestamp:</dt>\n          <dd class=\"time\">\n             Nov 17, 2006, 5:00:40 PM\n             (<a class=\"timeline\" href=\"/LUCICodeRepository/nomaticIM/timeline?from=2006-11-17T17%3A00%3A40-08%3A00&amp;precision=second\" title=\"See timeline at Nov 17, 2006, 5:00:40 PM\">8 years</a> ago)\n          </dd>\n          <dt class=\"property author\">Author:</dt>\n          <dd class=\"author\">djp3</dd>\n          <dt class=\"property message\">Message:</dt>\n          <dd class=\"message searchable\">\n            \n            \n              <p>\nGetting ready to split client and server<br />\n</p>\n\n            \n            \n          </dd>\n        <dt class=\"property files\">\n          File:\n        </dt>\n        <dd class=\"files\">\n          <div class=\"legend\" id=\"file-legend\">\n            <dl>\n              <dt class=\"mod\"></dt><dd>1 edited</dd>\n            </dl>\n          </div>\n          <br />\n          <ul>\n            <li>\n          <div class=\"mod\"> </div>\n            <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/networkHelper.c?rev=116\">\n              trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/networkHelper.c\n            </a>\n          <span class=\"comment\">(modified)</span>\n              (<a title=\"Show differences\" href=\"#file0\">3 diffs</a>)\n            </li>\n          </ul>\n        </dd>\n      </dl>\n      <div class=\"diff\">\n        <div class=\"legend\" id=\"diff-legend\">\n          <h3>Legend:</h3>\n          <dl>\n            <dt class=\"unmod\"></dt><dd>Unmodified</dd>\n            <dt class=\"add\"></dt><dd>Added</dd>\n            <dt class=\"rem\"></dt><dd>Removed</dd>\n          </dl>\n        </div>\n        <div class=\"diff\">\n  <ul class=\"entries\">\n      <li class=\"entry\">\n        <h2 id=\"file0\">\n          <a href=\"/LUCICodeRepository/nomaticIM/changeset/116/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/networkHelper.c\" title=\"Show the changeset 116 restricted to trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/networkHelper.c\">trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/networkHelper.c</a>\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"Revision 114\">\n                    <a title=\"Show revision 114 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/networkHelper.c?rev=114#L8\">\n                      r114</a>\n                  </th>\n                  <th title=\"Revision 116\">\n                    <a title=\"Show revision 116 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/networkHelper.c?rev=116#L8\">\n                      r116</a>\n                  </th>\n                  <td>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>8</th><th>8</th><td class=\"l\"><span>#include \"myUtilities.h\"</span>\u00a0</td>\n                  </tr><tr>\n                          <th>9</th><th>9</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"first\">\n                          <th>10</th><th>\u00a0</th><td class=\"l\"><del>static char ip[16]=\"000.000.000.000\";</del>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>11</th><th>\u00a0</th><td class=\"l\"><del>static char hostname[255]=\"unknown.unknown.unknown.unknown\";</del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>12</th><th>10</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>13</th><th>11</th><td class=\"l\"><span>#include &lt;stdio.h&gt;</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/networkHelper.c?rev=114#L18\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/networkHelper.c?rev=116#L16\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>18</th><th>16</th><td class=\"l\"><span>#include &lt;unistd.h&gt;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>19</th><th>17</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>20</th><th>\u00a0</th><td class=\"l\"><span>void failbackNetworkQuery()</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>18</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>19</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>20</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>21</th><td class=\"r\"><span>/* The theory of this function is that in order to get your IP address you can </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>22</th><td class=\"r\"><span>&nbsp;* set up a connection to a website using UDP.&nbsp; Since UDP doesn't get any response</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>23</th><td class=\"r\"><span>&nbsp;* setting up the connection forces the computer to establish a source IP address</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>24</th><td class=\"r\"><span>&nbsp;* without sending any packets.&nbsp; Once the route is set up, it can be examined to see</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>25</th><td class=\"r\"><span>&nbsp;* your local IP address.&nbsp; In principle, this could vary from destination to destination</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>26</th><td class=\"r\"><span>&nbsp;* based on the routing tables, but picking a well-known IP address should get the local</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>27</th><td class=\"r\"><span>&nbsp;* ip address adequately */</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>28</th><td class=\"r\"><span>const char *network_get_local_system_ip()</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>21</th><th>29</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>30</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; static char ip[16]=\"000.000.000.000\";</ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>31</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>22</th><th>32</th><td class=\"l\"><span>&nbsp; &nbsp; unsigned int i;</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>23</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; int s<del>=socket(AF_INET, SOCK_DGRAM, 0)</del>;</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>33</th><td class=\"r\"><span>&nbsp; &nbsp; int s<ins></ins>;</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>24</th><th>34</th><td class=\"l\"><span>&nbsp; &nbsp; struct sockaddr_in dst, src;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>25</th><th>35</th><td class=\"l\"><span>&nbsp; &nbsp; char buf[1000];</span>\u00a0</td>\n                  </tr><tr>\n                          <th>26</th><th>36</th><td class=\"l\"><span>&nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>37</th><td class=\"r\"><ins>&nbsp; &nbsp; //Create a UDP socket</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>38</th><td class=\"r\"><ins>&nbsp; &nbsp; s=socket(AF_INET, SOCK_DGRAM, 0);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>39</th><td class=\"r\"><ins>&nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>40</th><td class=\"r\"><ins>&nbsp; &nbsp; //Set the destination address parameters</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>27</th><th>41</th><td class=\"l\"><span>&nbsp; &nbsp; dst.sin_family=AF_INET;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>28</th><th>42</th><td class=\"l\"><span>&nbsp; &nbsp; dst.sin_port=ntohs(80);</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"last first\">\n                          <th>29</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; </del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>30</th><th>43</th><td class=\"l\"><span>&nbsp; &nbsp; inet_pton(AF_INET, \"66.102.7.99\", &amp;dst.sin_addr);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>31</th><th>44</th><td class=\"l\"><span>&nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"last first\">\n                          <th>\u00a0</th><th>45</th><td class=\"r\"><ins>&nbsp; &nbsp; //Connect the socket to the destination</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>32</th><th>46</th><td class=\"l\"><span>&nbsp; &nbsp; //UDP socket so no data should go out</span>\u00a0</td>\n                  </tr><tr>\n                          <th>33</th><th>47</th><td class=\"l\"><span>&nbsp; &nbsp; connect(s, (struct sockaddr *)&amp;dst, sizeof(dst));</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/networkHelper.c?rev=114#L35\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/trunk/Nomatic*GAIM/current/gtk/plugins/nomatic/networkHelper.c?rev=116#L49\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>35</th><th>49</th><td class=\"l\"><span>&nbsp; &nbsp; i=sizeof(src);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>36</th><th>50</th><td class=\"l\"><span>&nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"last first\">\n                          <th>\u00a0</th><th>51</th><td class=\"r\"><ins>&nbsp; &nbsp; //Retrieve the routing information</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>37</th><th>52</th><td class=\"l\"><span>&nbsp; &nbsp; getsockname(s, (struct sockaddr *)&amp;src, &amp;i);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>38</th><th>53</th><td class=\"l\"><span>&nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"last first\">\n                          <th>\u00a0</th><th>54</th><td class=\"r\"><ins>&nbsp; &nbsp; //Save it to ip</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>39</th><th>55</th><td class=\"l\"><span>&nbsp; &nbsp; strncpy(ip,inet_ntop(AF_INET, &amp;src.sin_addr, buf, sizeof(buf)),sizeof(ip));</span>\u00a0</td>\n                  </tr><tr>\n                          <th>40</th><th>56</th><td class=\"l\"><span>&nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>41</th><th>57</th><td class=\"l\"><span>&nbsp; &nbsp; close(s);</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>58</th><td class=\"r\"><ins>&nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>59</th><td class=\"r\"><ins>&nbsp; &nbsp; return(ip);</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>42</th><th>60</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"last first\">\n                          <th>\u00a0</th><th>61</th><td class=\"r\"><ins>// Old way of getting ip</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>43</th><th>62</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>44</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>45</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>46</th><th>\u00a0</th><td class=\"l\"><span>static void network_query()</span>\u00a0</td>\n                      </tr><tr>\n                        <th>47</th><th>\u00a0</th><td class=\"l\"><span>{&nbsp; &nbsp; &nbsp; &nbsp;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>48</th><th>\u00a0</th><td class=\"l\"><span>struct hostent *h;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>49</th><th>\u00a0</th><td class=\"l\"><span>char name[255];</span>\u00a0</td>\n                      </tr><tr>\n                        <th>50</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>51</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; if(gethostname(name,sizeof(name)) == -1){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>52</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_fatal(NULL,\"Nomatic: Get hostname failed\\n\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>53</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; strncpy(hostname,\"unknown.unknown.unknown.unknown\",sizeof(hostname));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>54</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; failbackNetworkQuery();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>55</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>56</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; failbackNetworkQuery();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>57</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; return;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>58</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; //else{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>59</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //gaim_debug_misc(NULL,\"Nomatic: Host name&nbsp; : %s\\n\", (char *)name);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>60</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; strncpy(hostname,name,sizeof(hostname));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>61</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>62</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if ((h=gethostbyname(name)) == NULL) {&nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>63</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_fatal(NULL,\"Nomatic: Hostname failed\\n\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>64</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; failbackNetworkQuery();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>65</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>66</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //gaim_debug_misc(NULL,\"Nomatic: SenseIP Address : %s\\n\", inet_ntoa(*((struct in_addr *)h-&gt;h_addr)));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>67</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>68</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; strncpy(ip,inet_ntoa(*((struct in_addr *)h-&gt;h_addr)),sizeof(ip));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>69</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; //}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>70</th><th>\u00a0</th><td class=\"l\"><span>}</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>63</th><td class=\"r\"><span>//&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; strncpy(hostname,network_get_local_system_hostname(),sizeof(hostname));</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>64</th><td class=\"r\"><span>//&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if ((h=gethostbyname(name)) == NULL) {&nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>65</th><td class=\"r\"><span>//&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_fatal(NULL,\"Nomatic: Hostname failed\\n\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>66</th><td class=\"r\"><span>//&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>67</th><td class=\"r\"><span>//&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; strncpy(ip,inet_ntoa(*((struct in_addr *)h-&gt;h_addr)),sizeof(ip));</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>71</th><th>68</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>72</th><th>69</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>73</th><th>\u00a0</th><td class=\"l\"><span>c<del>har *network_get_local_system_ip</del>()</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>70</th><td class=\"r\"><span>c<ins>onst char *network_get_local_system_hostname</ins>()</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>74</th><th>71</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>75</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; network_query();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>76</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; return(ip);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>77</th><th>\u00a0</th><td class=\"l\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>78</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>79</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>80</th><th>\u00a0</th><td class=\"l\"><span>char *network_get_local_system_hostname()</span>\u00a0</td>\n                      </tr><tr>\n                        <th>81</th><th>\u00a0</th><td class=\"l\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>82</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; network_query();</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>72</th><td class=\"r\"><span>static char hostname[255]=\"unknown.unknown.unknown.unknown\";</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>73</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>74</th><td class=\"r\"><span>&nbsp; &nbsp; if(gethostname(hostname,sizeof(hostname)) == -1){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>75</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_misc(NULL,\"Nomatic: Unable to get a hostname\\n\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>76</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; strncpy(hostname,\"unknown.unknown.unknown.unknown\",sizeof(hostname));</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>77</th><td class=\"r\"><span>&nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>83</th><th>78</th><td class=\"l\"><span>&nbsp; &nbsp; return(hostname);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>84</th><th>79</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n  </ul>\n</div>\n        <div id=\"help\"><strong>Note:</strong> See <a href=\"/LUCICodeRepository/nomaticIM/wiki/TracChangeset\">TracChangeset</a>\n          for help on using the changeset viewer.</div>\n      </div>\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"first\">\n          <a rel=\"nofollow\" href=\"?format=diff&amp;new=116\" class=\"diff\">Unified Diff</a>\n        </li><li class=\"last\">\n          <a rel=\"nofollow\" href=\"?format=zip&amp;new=116\" class=\"zip\">Zip Archive</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/LUCICodeRepository/nomaticIM/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/LUCICodeRepository/nomaticIM/about\"><strong>Trac 1.0.1</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">All content copyright 2007-2008 by LUCI <br /><a href=\"http://luci.ics.uci.edu/\">http://luci.ics.uci.edu/</a></p>\n    </div>\n\t\t<div id=\"sitefooter\">\n\t\t\t<script src=\"http://www.google-analytics.com/urchin.js\" type=\"text/javascript\">\n\t\t\t</script>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t\t_uacct = \"UA-338915-2\";\n\t\t\t\turchinTracker();\n\t\t\t</script>\n\t\t</div>\n\t</body>\n</html>", "id": 46190.0}