{"text": "Last Published 2 14 7 14Version 8 6 Documentation Home Documentation Installing and Managing AsterixDB using Managix AsterixDB 1 1 An ADM and AQL Primer AsterixDB Javascript SDK Asterix Data Model ADM Asterix Query Language AQL AQL Functions AQL Allen s Relations Functions AQL Support of Similarity Queries Accessing External Data REST API to AsterixDB REST API to AsterixDB Table of Contents DDL APIUpdate APIQuery APIAsynchronous Result APIQuery Status APIError Codes DDL API Back to TOC End point for the data definition statements Endpoint ddl Parameters ParameterDescriptionRequired ddlString containing DDL statements to modify MetadataYes This call does not return any result If the operations were successful HTTP OK status code is returned Example DDL Statements drop dataverse company if exists create dataverse company use dataverse company create type Emp as open id int32 name string create dataset Employee Emp primary key id API call for the above DDL statements in the URL encoded form http localhost 19 2 ddl ddl drop 2 dataverse 2 company 2 if 2 exists create 2 dataverse 2 company use 2 dataverse 2 company create 2 type 2 Emp 2 as 2 open 2 id 2 2 int32 name 2 2 string create 2 dataset 2 Employee Emp 2 primary 2 key 2 id http localhost 19 2 ddl ddl drop 2 dataverse 2 company 2 if 2 exists create 2 dataverse 2 company use 2 dataverse 2 company create 2 type 2 Emp 2 as 2 open 2 id 2 2 int32 name 2 2 string create 2 dataset 2 Employee Emp 2 primary 2 key 2 id Response HTTP OK 2 NO PAYLOAD Update API Back to TOC End point for update statements INSERT DELETE and LOAD Endpoint update Parameters ParameterDescriptionRequired statementsString containing update insert delete statements to executeYes This call does not return any result If the operations were successful HTTP OK status code is returned Example Update Statements use dataverse company insert into dataset Employee id 123 name John Doe API call for the above update statement in the URL encoded form http localhost 19 2 update statements use 2 dataverse 2 company insert 2 into 2 dataset 2 Employee 2 22id 22 123 22name 22 22John 2 Doe 22 http localhost 19 2 update statements use 2 dataverse 2 company insert 2 into 2 dataset 2 Employee 2 22id 22 123 22name 22 22John 2 Doe 22 Response HTTP OK 2 NO PAYLOAD Query API Back to TOC End point for query statements Endpoint query Parameters ParameterDescriptionRequired queryQuery string to pass to ASTERIX for executionYesmodeIndicate if call should be synchronous or asynchronous mode synchronous blocks the call until results are available mode asynchronous returns immediately with a handle that can be used later to check the query s status and to fetch results when availableNo default mode synchronous Result The result is returned as a JSON object as follows results result as a string if mode synchronous error code code message if an error occurs handle opaque result handle if mode asynchronous Example Select query with synchronous result delivery use dataverse company for l in dataset Employee return l API call for the above query statement in the URL encoded form http localhost 19 2 query query use 2 dataverse 2 company for 2 l 2 in 2 dataset Employee 2 return 2 l http localhost 19 2 query query use 2 dataverse 2 company for 2 l 2 in 2 dataset Employee 2 return 2 l Response HTTP OK 2 Payload results id 123 name John Doe Same select query with asynchronous result delivery API call for the above query statement in the URL encoded form with mode asynchronous http localhost 19 2 query query use 2 dataverse 2 company for 2 l 2 in 2 dataset Employee 2 return 2 l mode asynchronous http localhost 19 2 query query use 2 dataverse 2 company for 2 l 2 in 2 dataset Employee 2 return 2 l mode asynchronous Response HTTP OK 2 Payload handle 45 Asynchronous Result API Back to TOC End point to fetch the results of an asynchronous query Endpoint query result Parameters ParameterDescriptionRequired handleResult handle that was returned by a previous call to a query call with mode asynchronousYes Result The result is returned as a JSON object as follows results result as a string if mode synchronous or mode asynchronous and results are available error code code message if an error occurs If mode asynchronous and results are not available the returned JSON object is empty Example Fetching results for asynchronous query We use the handle returned by the asynchronous query to get the results for the query The handle returned was handle 45 API call for reading results from the previous asynchronous query in the URL encoded form http localhost 19 2 query result handle 7B 22handle 22 3A 5B45 2C 5D 7D Response HTTP OK 2 Payload results id 123 name John Doe Query Status API Back to TOC End point to check the status of the query asynchronous Endpoint query status Parameters ParameterDescriptionRequired handleResult handle that was returned by a previous call to a query call with mode asynchronousYes Result The result is returned as a JSON object as follows status RUNNING SUCCESS ERROR Error Codes Back to TOC Table of error codes and their types CodeType1Invalid statement2Parse failures99Uncategorized error Copyright 2 14 All Rights Reserved ", "_id": "http://asterixdb.ics.uci.edu/documentation/api.html", "title": "asterixdb - ", "html": "<!DOCTYPE html>\n<!--\n | Generated by Apache Maven Doxia at 2014-07-14\n | Rendered using Apache Maven Fluido Skin 1.3.0\n-->\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <meta name=\"Date-Revision-yyyymmdd\" content=\"20140714\" />\n    <meta http-equiv=\"Content-Language\" content=\"en\" />\n    <title>AsterixDB - </title>\n    <link rel=\"stylesheet\" href=\"./css/apache-maven-fluido-1.3.0.min.css\" />\n    <link rel=\"stylesheet\" href=\"./css/site.css\" />\n    <link rel=\"stylesheet\" href=\"./css/print.css\" media=\"print\" />\n\n      \n    <script type=\"text/javascript\" src=\"./js/apache-maven-fluido-1.3.0.min.js\"></script>\n\n                          \n        \n<script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\n        ga('create', 'UA-41536543-1', 'uci.edu');\n        ga('send', 'pageview');</script>\n          \n            </head>\n        <body class=\"topBarDisabled\">\n          \n                \n                    \n    \n        <div class=\"container-fluid\">\n          <div id=\"banner\">\n        <div class=\"pull-left\">\n                                    <a href=\"http://asterixdb.ics.uci.edu/\" id=\"bannerLeft\">\n                                                                                                <img src=\"images/asterixlogo.png\"  alt=\"AsterixDB\"/>\n                </a>\n                      </div>\n        <div class=\"pull-right\">  </div>\n        <div class=\"clear\"><hr/></div>\n      </div>\n\n      <div id=\"breadcrumbs\">\n        <ul class=\"breadcrumb\">\n                \n                    \n                  <li id=\"publishDate\">Last Published: 2014-07-14</li>\n                      \n                \n                    \n                 <li id=\"projectVersion\" class=\"pull-right\">Version: 0.8.6</li>\n      \n                                            <li class=\"divider pull-right\">|</li>\n                        \n    <li class=\"pull-right\">              <a href=\"index.html\" title=\"Documentation Home\">\n        Documentation Home</a>\n  </li>\n\n                        </ul>\n      </div>\n\n            \n      <div class=\"row-fluid\">\n        <div id=\"leftColumn\" class=\"span3\">\n          <div class=\"well sidebar-nav\">\n                \n                    \n                <ul class=\"nav nav-list\">\n                    <li class=\"nav-header\">Documentation</li>\n                                \n      <li>\n    \n                          <a href=\"install.html\" title=\"Installing and Managing AsterixDB using Managix\">\n          <i class=\"none\"></i>\n        Installing and Managing AsterixDB using Managix</a>\n            </li>\n                  \n      <li>\n    \n                          <a href=\"aql/primer.html\" title=\"AsterixDB 101: An ADM and AQL Primer\">\n          <i class=\"none\"></i>\n        AsterixDB 101: An ADM and AQL Primer</a>\n            </li>\n                  \n      <li>\n    \n                          <a href=\"aql/js-sdk.html\" title=\"AsterixDB Javascript SDK\">\n          <i class=\"none\"></i>\n        AsterixDB Javascript SDK</a>\n            </li>\n                  \n      <li>\n    \n                          <a href=\"aql/datamodel.html\" title=\"Asterix Data Model (ADM)\">\n          <i class=\"none\"></i>\n        Asterix Data Model (ADM)</a>\n            </li>\n                  \n      <li>\n    \n                          <a href=\"aql/manual.html\" title=\"Asterix Query Language (AQL)\">\n          <i class=\"none\"></i>\n        Asterix Query Language (AQL)</a>\n            </li>\n                  \n      <li>\n    \n                          <a href=\"aql/functions.html\" title=\"AQL Functions\">\n          <i class=\"none\"></i>\n        AQL Functions</a>\n            </li>\n                  \n      <li>\n    \n                          <a href=\"aql/allens.html\" title=\"AQL Allen's Relations Functions\">\n          <i class=\"none\"></i>\n        AQL Allen's Relations Functions</a>\n            </li>\n                  \n      <li>\n    \n                          <a href=\"aql/similarity.html\" title=\"AQL Support of Similarity Queries\">\n          <i class=\"none\"></i>\n        AQL Support of Similarity Queries</a>\n            </li>\n                  \n      <li>\n    \n                          <a href=\"aql/externaldata.html\" title=\"Accessing External Data\">\n          <i class=\"none\"></i>\n        Accessing External Data</a>\n            </li>\n                  \n      <li class=\"active\">\n    \n            <a href=\"#\"><i class=\"none\"></i>REST API to AsterixDB</a>\n          </li>\n            </ul>\n                \n                    \n                \n          <hr class=\"divider\" />\n\n           <div id=\"poweredBy\">\n                            <div class=\"clear\"></div>\n                            <div class=\"clear\"></div>\n                            <div class=\"clear\"></div>\n                                                                                                                         <a href=\"https://code.google.com/p/hyracks/\" title=\"Hyracks\" class=\"builtBy\">\n        <img class=\"builtBy\"  alt=\"Hyracks\" src=\"images/hyrax_ts.png\"    />\n      </a>\n                      </div>\n          </div>\n        </div>\n        \n                \n        <div id=\"bodyColumn\"  class=\"span9\" >\n                                  \n            <h1>REST API to AsterixDB</h1>\n<div class=\"section\">\n<h2><a name=\"toc\" id=\"toc\">Table of Contents</a><a name=\"Table_of_Contents\"></a></h2>\n\n<ul>\n  \n<li><a href=\"#DdlApi\">DDL API</a></li>\n  \n<li><a href=\"#UpdateApi\">Update API</a></li>\n  \n<li><a href=\"#QueryApi\">Query API</a></li>\n  \n<li><a href=\"#AsynchronousResultApi\">Asynchronous Result API</a></li>\n  \n<li><a href=\"#QueryStatusApi\">Query Status API</a></li>\n  \n<li><a href=\"#ErrorCodes\">Error Codes</a></li>\n</ul></div>\n<div class=\"section\">\n<h2><a name=\"DdlApi\" id=\"DdlApi\">DDL API</a> <font size=\"4\"><a href=\"#toc\">[Back to TOC]</a></font><a name=\"DDL_API_Back_to_TOC\"></a></h2>\n<p><i>End point for the data definition statements</i></p>\n<p>Endpoint: <i>/ddl</i></p>\n<p>Parameters:</p>\n\n<table border=\"0\" class=\"table table-striped\">\n\n<tr class=\"a\">\n  \n<td>Parameter</td>\n  \n<td>Description</td>\n  \n<td>Required?</td>\n</tr>\n\n<tr class=\"b\">\n  \n<td>ddl</td>\n  \n<td>String containing DDL statements to modify Metadata</td>\n  \n<td>Yes</td>\n</tr>\n</table>\n<p>This call does not return any result. If the operations were successful, HTTP OK status code is returned.</p>\n<div class=\"section\">\n<h3>Example<a name=\"Example\"></a></h3>\n<div class=\"section\">\n<h4>DDL Statements<a name=\"DDL_Statements\"></a></h4>\n\n<div class=\"source\">\n<pre>    drop dataverse company if exists;\n    create dataverse company;\n    use dataverse company;\n\n    create type Emp as open {\n      id : int32,\n      name : string\n    };\n\n    create dataset Employee(Emp) primary key id;\n</pre></div>\n<p>API call for the above DDL statements in the URL-encoded form.</p>\n<p>[http://localhost:19002/ddl?ddl=drop%20dataverse%20company%20if%20exists;create%20dataverse%20company;use%20dataverse%20company;create%20type%20Emp%20as%20open%20{id%20:%20int32,name%20:%20string};create%20dataset%20Employee(Emp)%20primary%20key%20id;](<a class=\"externalLink\" href=\"http://localhost:19002/ddl?ddl=drop%20dataverse%20company%20if%20exists;create%20dataverse%20company;use%20dataverse%20company;create%20type%20Emp%20as%20open%20{id%20:%20int32,name%20:%20string};create%20dataset%20Employee(Emp)%20primary%20key%20id;\">http://localhost:19002/ddl?ddl=drop%20dataverse%20company%20if%20exists;create%20dataverse%20company;use%20dataverse%20company;create%20type%20Emp%20as%20open%20{id%20:%20int32,name%20:%20string};create%20dataset%20Employee(Emp)%20primary%20key%20id;</a>)</p></div>\n<div class=\"section\">\n<h4>Response<a name=\"Response\"></a></h4>\n<p><i>HTTP OK 200</i><br /><tt>&lt;NO PAYLOAD&gt;</tt></p></div></div></div>\n<div class=\"section\">\n<h2><a name=\"UpdateApi\" id=\"UpdateApi\">Update API</a> <font size=\"4\"><a href=\"#toc\">[Back to TOC]</a></font><a name=\"Update_API_Back_to_TOC\"></a></h2>\n<p><i>End point for update statements (INSERT, DELETE and LOAD)</i></p>\n<p>Endpoint: <i>/update</i></p>\n<p>Parameters:</p>\n\n<table border=\"0\" class=\"table table-striped\">\n\n<tr class=\"a\">\n  \n<td>Parameter</td>\n  \n<td>Description</td>\n  \n<td>Required?</td>\n</tr>\n\n<tr class=\"b\">\n  \n<td>statements</td>\n  \n<td>String containing update (insert/delete) statements to execute</td>\n  \n<td>Yes</td>\n</tr>\n</table>\n<p>This call does not return any result. If the operations were successful, HTTP OK status code is returned.</p>\n<div class=\"section\">\n<h3>Example<a name=\"Example\"></a></h3>\n<div class=\"section\">\n<h4>Update Statements<a name=\"Update_Statements\"></a></h4>\n\n<div class=\"source\">\n<pre>    use dataverse company;\n\n    insert into dataset Employee({ &quot;id&quot;:123,&quot;name&quot;:&quot;John Doe&quot;});\n</pre></div>\n<p>API call for the above update statement in the URL-encoded form.</p>\n<p>[http://localhost:19002/update?statements=use%20dataverse%20company;insert%20into%20dataset%20Employee({%20%22id%22:123,%22name%22:%22John%20Doe%22});](<a class=\"externalLink\" href=\"http://localhost:19002/update?statements=use%20dataverse%20company;insert%20into%20dataset%20Employee({%20%22id%22:123,%22name%22:%22John%20Doe%22});\">http://localhost:19002/update?statements=use%20dataverse%20company;insert%20into%20dataset%20Employee({%20%22id%22:123,%22name%22:%22John%20Doe%22});</a>)</p></div>\n<div class=\"section\">\n<h4>Response<a name=\"Response\"></a></h4>\n<p><i>HTTP OK 200</i><br /><tt>&lt;NO PAYLOAD&gt;</tt></p></div></div></div>\n<div class=\"section\">\n<h2><a name=\"QueryApi\" id=\"QueryApi\">Query API</a> <font size=\"4\"><a href=\"#toc\">[Back to TOC]</a></font><a name=\"Query_API_Back_to_TOC\"></a></h2>\n<p><i>End point for query statements</i></p>\n<p>Endpoint: <i>/query</i></p>\n<p>Parameters:</p>\n\n<table border=\"0\" class=\"table table-striped\">\n\n<tr class=\"a\">\n  \n<td>Parameter</td>\n  \n<td>Description</td>\n  \n<td>Required?</td>\n</tr>\n\n<tr class=\"b\">\n  \n<td>query</td>\n  \n<td>Query string to pass to ASTERIX for execution</td>\n  \n<td>Yes</td>\n</tr>\n\n<tr class=\"a\">\n  \n<td>mode</td>\n  \n<td>Indicate if call should be synchronous or asynchronous. mode = synchronous blocks the call until results are available; mode = asynchronous returns immediately with a handle that can be used later to check the query&#x2019;s status and to fetch results when available</td>\n  \n<td>No. default mode = synchronous</td>\n</tr>\n</table>\n<p>Result: The result is returned as a JSON object as follows</p>\n\n<div class=\"source\">\n<pre>    {\n       results: &lt;result as a string, if mode = synchronous&gt;\n       error-code: [&lt;code&gt;, &lt;message&gt;] (if an error occurs)\n       handle: &lt;opaque result handle, if mode = asynchronous&gt;\n    }\n</pre></div>\n<div class=\"section\">\n<h3>Example<a name=\"Example\"></a></h3>\n<div class=\"section\">\n<h4>Select query with synchronous result delivery<a name=\"Select_query_with_synchronous_result_delivery\"></a></h4>\n\n<div class=\"source\">\n<pre>    use dataverse company;\n\n    for $l in dataset('Employee') return $l;\n</pre></div>\n<p>API call for the above query statement in the URL-encoded form.</p>\n<p>[http://localhost:19002/query?query=use%20dataverse%20company;for%20$l%20in%20dataset(&#x2018;Employee&#x2019;)%20return%20$l;](<a class=\"externalLink\" href=\"http://localhost:19002/query?query=use%20dataverse%20company;for%20$l%20in%20dataset(&apos;Employee&apos;)%20return%20$l;\">http://localhost:19002/query?query=use%20dataverse%20company;for%20$l%20in%20dataset('Employee')%20return%20$l;</a>)</p></div>\n<div class=\"section\">\n<h4>Response<a name=\"Response\"></a></h4>\n<p><i>HTTP OK 200</i><br />Payload</p>\n\n<div class=\"source\">\n<pre>    {\n      &quot;results&quot;: [\n          [\n              &quot;{ &quot;id&quot;: 123, &quot;name&quot;: &quot;John Doe&quot; }&quot;\n          ]\n      ]\n    }\n</pre></div></div>\n<div class=\"section\">\n<h4>Same select query with asynchronous result delivery<a name=\"Same_select_query_with_asynchronous_result_delivery\"></a></h4>\n<p>API call for the above query statement in the URL-encoded form with mode=asynchronous</p>\n<p>[http://localhost:19002/query?query=use%20dataverse%20company;for%20$l%20in%20dataset(&#x2018;Employee&#x2019;)%20return%20$l;&amp;mode=asynchronous](<a class=\"externalLink\" href=\"http://localhost:19002/query?query=use%20dataverse%20company;for%20$l%20in%20dataset(&apos;Employee&apos;)%20return%20$l;&amp;mode=asynchronous\">http://localhost:19002/query?query=use%20dataverse%20company;for%20$l%20in%20dataset('Employee')%20return%20$l;&amp;mode=asynchronous</a>)</p></div>\n<div class=\"section\">\n<h4>Response<a name=\"Response\"></a></h4>\n<p><i>HTTP OK 200</i><br />Payload</p>\n\n<div class=\"source\">\n<pre>    {\n        &quot;handle&quot;: [45,0]\n    }\n</pre></div></div></div></div>\n<div class=\"section\">\n<h2><a name=\"AsynchronousResultApi\" id=\"AsynchronousResultApi\">Asynchronous Result API</a> <font size=\"4\"><a href=\"#toc\">[Back to TOC]</a></font><a name=\"Asynchronous_Result_API_Back_to_TOC\"></a></h2>\n<p><i>End point to fetch the results of an asynchronous query</i></p>\n<p>Endpoint: <i>/query/result</i></p>\n<p>Parameters:</p>\n\n<table border=\"0\" class=\"table table-striped\">\n\n<tr class=\"a\">\n  \n<td>Parameter</td>\n  \n<td>Description</td>\n  \n<td>Required?</td>\n</tr>\n\n<tr class=\"b\">\n  \n<td>handle</td>\n  \n<td>Result handle that was returned by a previous call to a /query call with mode = asynchronous</td>\n  \n<td>Yes</td>\n</tr>\n</table>\n<p>Result: The result is returned as a JSON object as follows:</p>\n\n<div class=\"source\">\n<pre>    {\n       results: &lt;result as a string, if mode = synchronous, or mode = asynchronous and results are available&gt;\n       error-code: [&lt;code&gt;, &lt;message&gt;] (if an error occurs)\n    }\n</pre></div>\n<p>If mode = asynchronous and results are not available, the returned JSON object is empty: { }</p>\n<div class=\"section\">\n<h3>Example<a name=\"Example\"></a></h3>\n<div class=\"section\">\n<h4>Fetching results for asynchronous query<a name=\"Fetching_results_for_asynchronous_query\"></a></h4>\n<p>We use the handle returned by the asynchronous query to get the results for the query. The handle returned was:</p>\n\n<div class=\"source\">\n<pre>    {\n        &quot;handle&quot;: [45,0]\n    }\n</pre></div>\n<p>API call for reading results from the previous asynchronous query in the URL-encoded form.</p>\n<p><a class=\"externalLink\" href=\"http://localhost:19002/query/result?handle=%7B%22handle%22%3A+%5B45%2C+0%5D%7D\">http://localhost:19002/query/result?handle=%7B%22handle%22%3A+%5B45%2C+0%5D%7D</a></p></div>\n<div class=\"section\">\n<h4>Response<a name=\"Response\"></a></h4>\n<p><i>HTTP OK 200</i><br />Payload</p>\n\n<div class=\"source\">\n<pre>    {\n      &quot;results&quot;: [\n          [\n              &quot;{ &quot;id&quot;: 123, &quot;name&quot;: &quot;John Doe&quot; }&quot;\n          ]\n      ]\n    }\n</pre></div></div></div></div>\n<div class=\"section\">\n<h2><a name=\"QueryStatusApi\" id=\"QueryStatusApi\">Query Status API</a> <font size=\"4\"><a href=\"#toc\">[Back to TOC]</a></font><a name=\"Query_Status_API_Back_to_TOC\"></a></h2>\n<p><i>End point to check the status of the query asynchronous</i></p>\n<p>Endpoint: <i>/query/status</i></p>\n<p>Parameters:</p>\n\n<table border=\"0\" class=\"table table-striped\">\n\n<tr class=\"a\">\n  \n<td>Parameter</td>\n  \n<td>Description</td>\n  \n<td>Required?</td>\n</tr>\n\n<tr class=\"b\">\n  \n<td>handle</td>\n  \n<td>Result handle that was returned by a previous call to a /query call with mode = asynchronous</td>\n  \n<td>Yes</td>\n</tr>\n</table>\n<p>Result: The result is returned as a JSON object as follows:</p>\n\n<div class=\"source\">\n<pre>    {\n       status: (&quot;RUNNING&quot; | &quot;SUCCESS&quot; | &quot;ERROR&quot;)\n    }\n</pre></div></div>\n<div class=\"section\">\n<h2><a name=\"ErrorCodes\" id=\"ErrorCodes\">Error Codes</a> <font size=\"4\"><a href=\"#toc\">[Back to TOC]</a></font><a name=\"Error_Codes_Back_to_TOC\"></a></h2>\n<p>Table of error codes and their types:</p>\n\n<table border=\"0\" class=\"table table-striped\">\n\n<tr class=\"a\">\n  \n<td>Code</td>\n  \n<td>Type</td>\n</tr>\n\n<tr class=\"b\">\n  \n<td>1</td>\n  \n<td>Invalid statement</td>\n</tr>\n\n<tr class=\"a\">\n  \n<td>2</td>\n  \n<td>Parse failures</td>\n</tr>\n\n<tr class=\"b\">\n  \n<td>99</td>\n  \n<td>Uncategorized error</td>\n</tr>\n</table></div>\n                  </div>\n            </div>\n          </div>\n\n    <hr/>\n\n    <footer>\n            <div class=\"container-fluid\">\n              <div class=\"row span12\">Copyright &copy;                   2014.\n          All Rights Reserved.      \n                    \n      </div>\n\n                          \n        \n                </div>\n    </footer>\n  </body>\n</html>\n", "id": 2536.0}