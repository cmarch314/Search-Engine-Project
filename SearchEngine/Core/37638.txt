{"text": "OEChem Python Theory Manual Version 1 3 1 Previous 21 3 Writing your own Up 21 Predicate Functions Next 22 Molecular File Formats 21 4 Composition Functors in OEChem Occasionally one may want to use a logical operator to join two or more functors While it is certainly possible to write a quick functor which wraps two or more functors but this is not necessary The functors OEAndAtom OEOrAtom and OENotAtom are already defined The each have constructors which take the appropriate number of predicates as arguments and generate a single unary predicate Similar logical predicates are defined for bonds residues etc The following example demonstrates use of the OEAndAtom and OENotAtom composition predicates with two of the predefined atom predicates usr bin env python ch21 3 py from openeye oechem import def Count fcn mol count for atom in mol GetAtoms if fcn atom 1 count 1 return count mol OEGraphMol OEParseSmiles mol c1c O c O c Cl cc1CCCBr print Number of Aromatic Oxygens print Count OEAndAtom IsOxygen IsAromaticAtom mol print Number of Non Carbons print Count OENotAtom HasAtomicNum 6 mol Download as text OEChem Python Theory Manual Version 1 3 1 Previous 21 3 Writing your own Up 21 Predicate Functions Next 22 Molecular File Formats Documentation released on July 3 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/oechem/pyprog/node190.html", "title": "21.4 composition functors in oechem", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<html>\n<head>\n<title>21.4 Composition Functors in OEChem</title>\n<META NAME=\"description\" CONTENT=\"21.4 Composition Functors in OEChem\">\n<META NAME=\"keywords\" CONTENT=\"pyprog\">\n<META NAME=\"resource-type\" CONTENT=\"document\">\n<META NAME=\"distribution\" CONTENT=\"global\">\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n<link rel=\"STYLESHEET\" href=\"pyprog.css\">\n<link rel=\"first\" href=\"pyprog.html\">\n<link rel=\"contents\" href=\"contents.html\" title=\"Contents\">\n\n<LINK REL=\"previous\" HREF=\"node189.html\">\n<LINK REL=\"up\" HREF=\"node186.html\">\n<LINK REL=\"next\" HREF=\"node191.html\">\n</head>\n<body>\n<DIV CLASS=\"navigation\">\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node189.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node186.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node191.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - Python Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"genindex.html\"><img src=\"../icons/index.gif\"\n  border=\"0\" alt=\"Index\"></A></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node189.html\">21.3 Writing your own</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node186.html\">21. Predicate Functions</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node191.html\">22. Molecular File Formats</A>\n<br><hr>\n</DIV>\n<!--End of Navigation Panel-->\n\n<H1><A NAME=\"SECTION0023400000000000000000\">\n21.4 Composition Functors in OEChem</A>\n</H1>\n\n<P>\nOccasionally, one may want to use a logical operator to join two or\nmore functors.  While it is certainly possible to write a quick\nfunctor which wraps two or more functors, but this is not necessary.\nThe functors <code>OEAndAtom</code>, <code>OEOrAtom</code> and <code>OENotAtom</code>\nare already defined.  The each have constructors which take the\nappropriate number of predicates as arguments and generate a single\nunary predicate.  Similar logical predicates are defined for bonds,\nresidues, etc.\n\n<P>\nThe following example demonstrates use of the <code>OEAndAtom</code> and\n<code>OENotAtom</code> composition predicates with two of the predefined\natom predicates\n\n<P>\n<dl><dd><pre class=\"verbatim\">#!/usr/bin/env python\n# ch21-3.py\n\nfrom openeye.oechem import *\n\ndef Count(fcn, mol):\n    count=0\n    for atom in mol.GetAtoms():\n        if fcn(atom)==1:\n            count += 1\n    return count\n\nmol = OEGraphMol()\nOEParseSmiles(mol, \"c1c(O)c(O)c(Cl)cc1CCCBr\")\n\nprint \"Number of Aromatic Oxygens = \",\nprint Count(OEAndAtom(IsOxygen(),IsAromaticAtom()),mol)\n\nprint \"Number of Non-Carbons = \",\nprint Count(OENotAtom(HasAtomicNum(6)),mol)\n\n</pre>\n<div class=\"verbatiminput-footer\">\n<a href=\"ch21-3.txt\" type=\"text/plain\">Download as text.</a>\n</div>\n</dd></dl>\n\n<P>\n\n<DIV CLASS=\"navigation\">\n<p><hr>\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node189.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node186.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node191.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - Python Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"genindex.html\"><img src=\"../icons/index.gif\"\n  border=\"0\" alt=\"Index\"></A></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node189.html\">21.3 Writing your own</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node186.html\">21. Predicate Functions</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node191.html\">22. Molecular File Formats</A>\n<hr>\n<span class=\"release-info\">Documentation released on July 30, 2004.</span>\n</DIV>\n<!--End of Navigation Panel-->\n\n</BODY>\n</HTML>\n", "id": 37638.0}