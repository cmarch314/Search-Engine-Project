{"text": "David Eppstein Publications Parallel algorithms Reset sequences for monotonic automata D Eppstein 15th Int Coll Automata Languages and Programming Tampere Finland 1988 Lecture Notes in Comp Sci 317 1988 pp 23 238 SIAM J Computing 19 3 5 51 199 Automata theory A reset sequence for a DFA is an input such that no matter which state the DFA starts in it ends up after the input in a known state These have been used by Natarajan and Goldberg for certain robot motion planning problems in fact the conference version of this paper used the title Reset sequences for finite automata with application to design of parts orienters and also in coding theory where they arise in the design of self synchronizing codes This paper considers DFAs in which the transition functions respect a given cyclic ordering of the states and shows that their shortest reset sequences can be found quickly It also considers parallel algorithms for the problem There remains open a gap between n2 and n3 in the maximum length of reset sequences for general automata BibTeX Citations CiteSeer ACM DL ICALP ACM DL SJC On reset sequence length D Eppstein Tech Rep CUCS 44 89 Computer Science Dept Columbia University 1989 BibTeX Parallel algorithmic techniques for combinatorial computation D Eppstein and Z Galil Ann Rev Comput Sci 3 233 283 1988 Invited talk by Z Galil 16th Int Coll Automata Languages and Programming Stresa Italy 1989 Lecture Notes in Comp Sci 372 1989 pp 3 4 318 Springer Verlag This survey on parallel algorithms emphasized the use of basic subroutines such as prefix sums Euler tours ear decomposition and matrix multiplication for solving more complicated graph problems BibTeX Citations CiteSeer ACM DL ARCS ACM DL ICALP Planar orientations with low out degree and compaction of adjacency matrices M Chrobak and D Eppstein Theor Comp Sci 86 2 243 266 1991 Describes efficient sequential and parallel algorithms for orienting the edges of an undirected planar graph so that each vertex has few outgoing edges From such an orientation one can test in constant time whether a given edge exists More recently this paper has been cited for its applications to scheduling update operations in parallel finite element methods BibTeX Citations CiteSeer ACM DL Fast optimal parallel algorithms for maximal matching in sparse graphs H Asuri M Dillencourt D Eppstein G Lueker and M Molodowitch Tech Rep 92 1 ICS UCI 1992 We later discovered that the same results were published in a SPAA paper by Greg Shannon BibTeX Parallel recognition of series parallel graphs D Eppstein Information Computation 98 41 55 1992 Characterizes two terminal series graphs in terms of a tree like structure in their ear decompositions Uses this characterization to construct parallel algorithms that recognize these graphs and construct their series parallel decompositions BibTeX Citations MIT hypertext bibliography CiteSeer ACM DL Efficient sequential and parallel algorithms for computing recovery points in trees and paths M Chrobak D Eppstein G F Italiano and M Yung 2nd ACM SIAM Symp Discrete Algorithms San Francisco 1991 pp 158 167 ALCOM Report 91 74 University of Rome 1991 Described slightly superlinear algorithms for partitioning a tree into a given number of subtrees making them all as short as possible Frederickson at the same conference further improved the sequential time to linear There may still be something worth publishing in the parallel algorithms BibTeX Citations Parallel construction of quadtrees and quality triangulations M Bern D Eppstein and S H Teng 3rd Worksh Algorithms and Data Structures Montreal 1993 Lecture Notes in Comp Sci 7 9 1993 pp 188 199 Springer Verlag Tech Rep 614 MIT Lab for Comp Sci 1994 Int J Comp Geom Appl 9 6 517 532 1999 A parallelization of the quadtree constructions in Provably good mesh generation in an integer model of computation based on a technique of sorting the input points using values formed by shuffling the binary representations of the coordinates A side effect is an efficient construction for the fair split tree hierarchical clustering method used by Callahan and Kosaraju for various nearest neighbor problems BibTeX CiteSeer Citations ACM DL Publications David Eppstein Theory Group Inf Comp Sci UC Irvine Semi automatically filtered from a common source file ", "_id": "http://www.ics.uci.edu/~eppstein/pubs/par.html", "title": "david eppstein - publications", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<html><head>\n<title>David Eppstein - Publications</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body bgcolor=\"#ffffff\" text=\"#000000\">\n<h1>David Eppstein - Publications</h1>\n<hr><p>\n<h2>\nParallel algorithms\n</h2>\n<ul>\n<li><b>Reset sequences for monotonic automata</b>.<br>\nD. Eppstein.<br>\n<i>15th Int. Coll. Automata, Languages and Programming,</i>\nTampere, Finland, 1988.<br>\n<i>Lecture Notes in Comp. Sci.</i> 317, 1988, pp. 230-238.<br>\n<a href=\"Epp-SJC-90.pdf\"><i>SIAM J. Computing</i> 19(3):500-510, 1990</a>.\n<p>\nAutomata theory.\nA reset sequence for a DFA is an input such that, no matter which\nstate the DFA starts in, it ends up after the input in a known state.\nThese have been used by Natarajan and Goldberg for certain robot motion\nplanning problems (in fact the conference version of this paper used\nthe title \"Reset sequences for finite automata\nwith application to design of parts orienters\"), and also in coding\ntheory where they arise in the design of\nself-synchronizing codes.  This paper considers DFAs in which the\ntransition functions respect a given cyclic ordering of the states, and\nshows that their shortest reset sequences can be found quickly.\nIt also considers parallel algorithms for the problem.\nThere remains open a gap between <i>n<sup>2</sup></i> and <i>n<sup>3</sup></i>\nin the maximum length of reset sequences for general automata.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Reset sequences for monotonic automata\">BibTeX</a> --\n<a href=\"http://fano.ics.uci.edu/cites/Document/Reset-sequences-for-monotonic-automata.html\">Citations</a> --\n<a href=\"http://citeseer.ist.psu.edu/eppstein90reset.html\">CiteSeer</a> --\n<a href=\"http://portal.acm.org/citation.cfm?id=681434\">ACM DL (ICALP)</a> --\n<a href=\"http://portal.acm.org/citation.cfm?id=80025\">ACM DL (SJC)</a>)\n<p>\n<li><b>On reset sequence length</b>.<br>\nD. Eppstein.<br>\nTech. Rep. CUCS-440-89, Computer Science Dept., Columbia University, 1989.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#On reset sequence length\">BibTeX</a>)\n<p>\n<li><b>Parallel algorithmic techniques for combinatorial computation</b>.<br>\nD. Eppstein and\n<a href=\"http://www.cs.columbia.edu/~galil/\">Z. Galil</a>.<br>\n<i>Ann. Rev. Comput. Sci.</i> 3:233-283, 1988.<br>\nInvited talk by Z. Galil,\n<a href=\"EppGal-ICALP-89.pdf\"><i>16th Int. Coll. Automata, Languages and Programming,</i> Stresa, Italy, 1989</a>.<br>\n<a href=\"http://www.springer.de/comp/lncs/\"><i>Lecture Notes in\nComp. Sci.</i></a> 372, 1989, pp. 304-318, &copy; Springer-Verlag.\n<p>\nThis survey on parallel algorithms emphasized the use of basic\nsubroutines such as prefix sums, Euler tours, ear decomposition, and matrix\nmultiplication for solving more complicated graph problems.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Parallel algorithmic techniques for combinatorial computation\">BibTeX</a> --\n<a href=\"http://fano.ics.uci.edu/cites/Document/Parallel-algorithmic-techniques-for-combinatorial-computation.html\">Citations</a> --\n<a href=\"http://citeseer.ist.psu.edu/eppstein88parallel.html\">CiteSeer</a> --\n<a href=\"http://portal.acm.org/citation.cfm?id=53603\">ACM DL (ARCS)</a> --\n<a href=\"http://portal.acm.org/citation.cfm?id=681611\">ACM DL (ICALP)</a>)\n<p>\n<li><b>Planar orientations with low out-degree and compaction of adjacency matrices</b>.<br>\n<a href=\"http://www.cs.ucr.edu/~marek/\">\nM. Chrobak</a> and D. Eppstein.<br>\n<a href=\"ChrEpp-TCS-91.pdf\"><i>Theor. Comp. Sci.</i> 86(2):243-266, 1991</a>.\n<p>\nDescribes efficient sequential and parallel algorithms for orienting the edges of\nan undirected planar graph so that each vertex has few outgoing edges.\nFrom such an orientation one can test in constant time whether a given edge exists.\nMore recently this paper has been cited for its applications to\nscheduling update operations in parallel finite element methods.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Planar orientations with low out-degree and compaction of adjacency matrices\">BibTeX</a> --\n<a href=\"http://fano.ics.uci.edu/cites/Document/Planar-orientations-with-low-out-degree-and-compaction-of-adjacency-matrices.html\">Citations</a> --\n<a href=\"http://citeseer.ist.psu.edu/chrobak91planar.html\">CiteSeer</a> --\n<a href=\"http://portal.acm.org/citation.cfm?id=117122\">ACM DL</a>)\n<p>\n<li><b>Fast optimal parallel algorithms for maximal matching in sparse graphs</b>.<br>\nH. Asuri, <a href=\"/~dillenco/\">M. Dillencourt</a>, D. Eppstein, \n<a href=\"http://www.ics.uci.edu/~lueker/\">\nG. Lueker</a>, and M. Molodowitch.<br>\nTech. Rep. 92-01, ICS, UCI, 1992.\n<p>\nWe later discovered that the same results were published\nin a SPAA paper by Greg Shannon.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Fast optimal parallel algorithms for maximal matching in sparse graphs\">BibTeX</a>)\n<p>\n<li><b>Parallel recognition of series parallel graphs</b>.<br>\nD. Eppstein.<br>\n<a href=\"Epp-IC-92.pdf\"><i>Information &amp; Computation</i> 98:41-55, 1992</a>.\n<p>\nCharacterizes two-terminal series graphs in terms of a\ntree-like structure in their ear decompositions.\nUses this characterization to construct\nparallel algorithms that recognize these graphs and\nconstruct their series-parallel decompositions.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Parallel recognition of series parallel graphs\">BibTeX</a> --\n<a href=\"http://fano.ics.uci.edu/cites/Document/Parallel-recognition-of-series-parallel-graphs.html\">Citations</a> --\n<a href=\"http://theory.lcs.mit.edu/~iandc/References/eppstein1992:41.html\">MIT hypertext bibliography</a> --\n<a href=\"http://citeseer.ist.psu.edu/eppstein92parallel.html\">CiteSeer</a> --\n<a href=\"http://portal.acm.org/citation.cfm?id=162582\">ACM DL</a>)\n<p>\n<li><b>Efficient sequential and parallel algorithms for\ncomputing recovery points in trees and paths</b>.<br>\n<a href=\"http://www.cs.ucr.edu/~marek/\">\nM. Chrobak</a>, D. Eppstein, \n<a href=\"http://www.info.uniroma2.it/~italiano/\">\nG.F. Italiano</a>, and M. Yung.<br>\n<a href=\"http://portal.acm.org/citation.cfm?id=127821\">\n<i>2nd ACM-SIAM Symp. Discrete Algorithms,</i> San Francisco, 1991, pp. 158-167</a>.<br>\nALCOM Report 91-74, University of Rome, 1991.\n<p>\nDescribed slightly superlinear algorithms for partitioning a tree into a\ngiven number of subtrees, making them all as short as possible.\nFrederickson at the same conference\nfurther improved the sequential time to linear.  There may still be\nsomething worth publishing in the parallel algorithms.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Efficient sequential and parallel algorithms for computing recovery points in trees and paths\">BibTeX</a> --\n<a href=\"http://fano.ics.uci.edu/cites/Document/Efficient-sequential-and-parallel-algorithms-for-computing-recovery-points-in-trees-and-paths.html\">Citations</a>)\n<p>\n<li><b>Parallel construction of quadtrees and quality triangulations</b>.<br>\n<a href=\"http://www.parc.xerox.com/csl/members/bern/\">M. Bern</a>,\nD. Eppstein, and \n<a href=\"http://www-sal.cs.uiuc.edu/~steng/\">S.-H. Teng</a>.<br>\n<a href=\"BerEppTen-WADS-93.pdf\"><i>3rd Worksh. Algorithms and Data\nStructures,</i> Montreal, 1993</a>.<br>\n<a href=\"http://www.springer.de/cgi-bin/bag_generate.pl?ISBN=3-540-57155-8\"><i>Lecture Notes in\nComp. Sci.</i> 709</a>, 1993, pp. 188-199, &copy; Springer-Verlag.<br>\nTech. Rep. 614, MIT Lab. for Comp. Sci., 1994.<br>\n<a href=\"BerEppTen-IJCGA-99.pdf\"><i>Int. J. Comp. Geom. &amp; Appl.</i>\n9(6):517-532, 1999.</a>\n<p>\nA parallelization of the quadtree constructions in\n\"<a href=\"p-pgood.html\">Provably good mesh generation</a>\",\nin an integer model of computation, based on a technique of\nsorting the input points using values formed by shuffling the binary\nrepresentations of the coordinates.\nA side-effect is an efficient construction for the \"fair split tree\"\nhierarchical clustering method used by Callahan and Kosaraju for various\nnearest neighbor problems.\n<p>(<a href=\"/~eppstein/bibs/eppstein.html#Parallel construction of quadtrees and quality triangulations\">BibTeX</a> --\n<a href=\"http://www.CiteSeer.com/eppstein93parallel.html\">CiteSeer</a> --\n<a href=\"http://fano.ics.uci.edu/cites/Document/Parallel-construction-of-quadtrees-and-quality-triangulations.html\">Citations</a> --\n<a href=\"http://portal.acm.org/citation.cfm?id=672684\">ACM DL</a>)\n<p>\n</ul>\n\n<hr><p>\n<a href=\"/~eppstein/pubs/\">Publications</a> --\n<a href=\"/~eppstein/\">David Eppstein</a> --\n<a href=\"/~theory/\">Theory Group</a> --\n<a href=\"/\">Inf. &amp; Comp. Sci.</a> --\n<a href=\"http://www.uci.edu/\">UC Irvine</a>\n<p>\n<small>Semi-automatically <a href=\"filter.html\">filtered</a>\nfrom a common source file.</small>\n</body></html>\n", "id": 13258.0}