{"text": "Main Page Modules Data Structures File List Data Fields Globals Related Pages vparam hGo to the documentation of this file 1 49 ifndef VPARAM H 5 define VPARAM H 51 52 Generic headers 53 include maloc maloc h 54 include apbs vhal h 55 include apbs vunit h 56 include apbs vstring h 57 74 struct sVparam AtomData 75 char atomName VMAX ARGLEN 76 char resName VMAX ARGLEN 77 double charge 78 double radius 79 double epsilon 81 82 88 typedef struct sVparam AtomData Vparam AtomData 89 96 struct Vparam ResData 97 Vmem vmem 98 char name VMAX ARGLEN 99 int nAtomData 1 1 Vparam AtomData atomData 1 2 1 3 1 9 typedef struct Vparam ResData Vparam ResData 11 117 struct Vparam 118 119 Vmem vmem 12 int nResData 122 Vparam ResData resData 123 124 129 typedef struct Vparam Vparam 13 131 132 Class Vparam Inlineable methods vparam c 134 135 if defined VINLINE VPARAM 136 143 unsigned long int Vparam memChk Vparam thee 144 145 else if defined VINLINE VPARAM 146 147 define Vparam memChk thee Vmem bytes thee vmem 148 149 endif if defined VINLINE VPARAM 15 151 152 Class Vparam Non Inlineable methods vparam c 154 159 Vparam AtomData Vparam AtomData ctor 16 166 int Vparam AtomData ctor2 Vparam AtomData thee 167 172 void Vparam AtomData dtor Vparam AtomData thee 173 178 void Vparam AtomData dtor2 Vparam AtomData thee 179 187 void Vparam AtomData copyTo Vparam AtomData thee 188 Vparam AtomData dest 189 197 void Vparam AtomData copyFrom Vparam AtomData thee 198 Vparam AtomData src 199 2 5 Vparam ResData Vparam ResData ctor Vmem mem 2 6 213 int Vparam ResData ctor2 Vparam ResData thee Vmem mem 214 219 void Vparam ResData dtor Vparam ResData thee 22 225 void Vparam ResData dtor2 Vparam ResData thee 226 231 Vparam Vparam ctor 232 238 int Vparam ctor2 Vparam thee 239 244 void Vparam dtor Vparam thee 245 25 void Vparam dtor2 Vparam thee 251 262 Vparam ResData Vparam getResData Vparam thee 263 char resName VMAX ARGLEN 264 276 Vparam AtomData Vparam getAtomData Vparam thee 277 char resName VMAX ARGLEN char atomName VMAX ARGLEN 278 3 7 int Vparam readFlatFile Vparam thee const char iodev 3 8 const char iofmt const char thost const char fname 3 9 31 endif ifndef VPARAM H 311 Generated on Tue Dec 6 1 5 31 2 5 for APBS by 1 3 5", "_id": "http://www.ics.uci.edu/~dock/manuals/apbs/html/programmer/vparam_8h-source.html", "title": "apbs: vparam.h source file", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=iso-8859-1\">\n<title>APBS: vparam.h Source File</title>\n<link href=\"apbs.css\" rel=\"stylesheet\" type=\"text/css\">\n</head><body>\n<!-- Generated by Doxygen 1.3.5 -->\n<div class=\"qindex\"><a class=\"qindex\" href=\"index.html\">Main&nbsp;Page</a> | <a class=\"qindex\" href=\"modules.html\">Modules</a> | <a class=\"qindex\" href=\"annotated.html\">Data&nbsp;Structures</a> | <a class=\"qindex\" href=\"files.html\">File&nbsp;List</a> | <a class=\"qindex\" href=\"functions.html\">Data&nbsp;Fields</a> | <a class=\"qindex\" href=\"globals.html\">Globals</a> | <a class=\"qindex\" href=\"pages.html\">Related&nbsp;Pages</a></div>\n<h1>vparam.h</h1><a href=\"vparam_8h.html\">Go to the documentation of this file.</a><div class=\"fragment\"><pre>00001 \n00049 <span class=\"preprocessor\">#ifndef _VPARAM_H_</span>\n00050 <span class=\"preprocessor\"></span><span class=\"preprocessor\">#define _VPARAM_H_</span>\n00051 <span class=\"preprocessor\"></span>\n00052 <span class=\"comment\">/* Generic headers */</span>\n00053 <span class=\"preprocessor\">#include \"maloc/maloc.h\"</span>\n00054 <span class=\"preprocessor\">#include \"<a class=\"code\" href=\"vhal_8h.html\">apbs/vhal.h</a>\"</span>\n00055 <span class=\"preprocessor\">#include \"<a class=\"code\" href=\"vunit_8h.html\">apbs/vunit.h</a>\"</span>\n00056 <span class=\"preprocessor\">#include \"<a class=\"code\" href=\"vstring_8h.html\">apbs/vstring.h</a>\"</span>\n00057 \n<a name=\"l00074\"></a><a class=\"code\" href=\"structsVparam__AtomData.html\">00074</a> <span class=\"keyword\">struct </span><a class=\"code\" href=\"structsVparam__AtomData.html\">sVparam_AtomData</a> {\n<a name=\"l00075\"></a><a class=\"code\" href=\"structsVparam__AtomData.html#o0\">00075</a>     <span class=\"keywordtype\">char</span> <a class=\"code\" href=\"structsVparam__AtomData.html#o0\">atomName</a>[VMAX_ARGLEN];  \n<a name=\"l00076\"></a><a class=\"code\" href=\"structsVparam__AtomData.html#o1\">00076</a>     <span class=\"keywordtype\">char</span> <a class=\"code\" href=\"structsVparam__AtomData.html#o1\">resName</a>[VMAX_ARGLEN];  \n<a name=\"l00077\"></a><a class=\"code\" href=\"structsVparam__AtomData.html#o2\">00077</a>     <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsVparam__AtomData.html#o2\">charge</a>;  \n<a name=\"l00078\"></a><a class=\"code\" href=\"structsVparam__AtomData.html#o3\">00078</a>     <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsVparam__AtomData.html#o3\">radius</a>;  \n<a name=\"l00079\"></a><a class=\"code\" href=\"structsVparam__AtomData.html#o4\">00079</a>     <span class=\"keywordtype\">double</span> <a class=\"code\" href=\"structsVparam__AtomData.html#o4\">epsilon</a>;  \n00081 };\n00082 \n<a name=\"l00088\"></a><a class=\"code\" href=\"group__Vparam.html#ga0\">00088</a> <span class=\"keyword\">typedef</span> <span class=\"keyword\">struct </span><a class=\"code\" href=\"structsVparam__AtomData.html\">sVparam_AtomData</a> <a class=\"code\" href=\"group__Vparam.html#ga0\">Vparam_AtomData</a>;\n00089 \n<a name=\"l00096\"></a><a class=\"code\" href=\"structVparam__ResData.html\">00096</a> <span class=\"keyword\">struct </span><a class=\"code\" href=\"structVparam__ResData.html\">Vparam_ResData</a> {\n<a name=\"l00097\"></a><a class=\"code\" href=\"structVparam__ResData.html#o0\">00097</a>     Vmem *<a class=\"code\" href=\"structVparam__ResData.html#o0\">vmem</a>;  \n<a name=\"l00098\"></a><a class=\"code\" href=\"structVparam__ResData.html#o1\">00098</a>     <span class=\"keywordtype\">char</span> <a class=\"code\" href=\"structVparam__ResData.html#o1\">name</a>[VMAX_ARGLEN]; \n<a name=\"l00099\"></a><a class=\"code\" href=\"structVparam__ResData.html#o2\">00099</a>     <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"structVparam__ResData.html#o2\">nAtomData</a>;  \n<a name=\"l00101\"></a><a class=\"code\" href=\"structVparam__ResData.html#o3\">00101</a>     <a class=\"code\" href=\"group__Vparam.html#ga0\">Vparam_AtomData</a> *<a class=\"code\" href=\"structVparam__ResData.html#o3\">atomData</a>;  \n00102 };\n00103 \n<a name=\"l00109\"></a><a class=\"code\" href=\"group__Vparam.html#ga19\">00109</a> <span class=\"keyword\">typedef</span> <span class=\"keyword\">struct </span><a class=\"code\" href=\"structVparam__ResData.html\">Vparam_ResData</a> <a class=\"code\" href=\"group__Vparam.html#ga19\">Vparam_ResData</a>;\n00110 \n<a name=\"l00117\"></a><a class=\"code\" href=\"structVparam.html\">00117</a> <span class=\"keyword\">struct </span><a class=\"code\" href=\"structVparam.html\">Vparam</a> {\n00118 \n<a name=\"l00119\"></a><a class=\"code\" href=\"structVparam.html#o0\">00119</a>   Vmem *<a class=\"code\" href=\"structVparam.html#o0\">vmem</a>;  \n<a name=\"l00120\"></a><a class=\"code\" href=\"structVparam.html#o1\">00120</a>   <span class=\"keywordtype\">int</span> <a class=\"code\" href=\"structVparam.html#o1\">nResData</a>;  \n<a name=\"l00122\"></a><a class=\"code\" href=\"structVparam.html#o2\">00122</a>   <a class=\"code\" href=\"group__Vparam.html#ga19\">Vparam_ResData</a> *<a class=\"code\" href=\"structVparam.html#o2\">resData</a>;  \n00123 };\n00124 \n<a name=\"l00129\"></a><a class=\"code\" href=\"group__Vparam.html#ga20\">00129</a> <span class=\"keyword\">typedef</span> <span class=\"keyword\">struct </span><a class=\"code\" href=\"structVparam.html\">Vparam</a> <a class=\"code\" href=\"group__Vparam.html#ga20\">Vparam</a>;\n00130 \n00131 <span class=\"comment\">/* ///////////////////////////////////////////////////////////////////////////</span>\n00132 <span class=\"comment\">// Class Vparam: Inlineable methods (vparam.c)</span>\n00134 <span class=\"comment\"></span>\n00135 <span class=\"comment\">#if !defined(VINLINE_VPARAM)</span>\n00136 <span class=\"comment\"></span>\n00143 <span class=\"comment\">    unsigned long int Vparam_memChk(Vparam *thee);</span>\n00144 <span class=\"comment\"></span>\n00145 <span class=\"comment\">#else /* if defined(VINLINE_VPARAM) */</span>\n00146 \n00147 <span class=\"preprocessor\">#   define Vparam_memChk(thee) (Vmem_bytes((thee)-&gt;vmem))</span>\n00148 <span class=\"preprocessor\"></span>\n00149 <span class=\"preprocessor\">#endif </span><span class=\"comment\">/* if !defined(VINLINE_VPARAM) */</span>\n00150 \n00151 <span class=\"comment\">/* ///////////////////////////////////////////////////////////////////////////</span>\n00152 <span class=\"comment\">// Class Vparam: Non-Inlineable methods (vparam.c)</span>\n00154 <span class=\"comment\"></span>\n00159 <span class=\"comment\">Vparam_AtomData* Vparam_AtomData_ctor();</span>\n00160 <span class=\"comment\"></span>\n00166 <span class=\"comment\">int Vparam_AtomData_ctor2(Vparam_AtomData *thee);</span>\n00167 <span class=\"comment\"></span>\n00172 <span class=\"comment\">void Vparam_AtomData_dtor(Vparam_AtomData **thee);</span>\n00173 <span class=\"comment\"></span>\n00178 <span class=\"comment\">void Vparam_AtomData_dtor2(Vparam_AtomData *thee);</span>\n00179 <span class=\"comment\"></span>\n00187 <span class=\"comment\">void Vparam_AtomData_copyTo(Vparam_AtomData *thee, </span>\n00188 <span class=\"comment\">  Vparam_AtomData *dest); </span>\n00189 <span class=\"comment\"></span>\n00197 <span class=\"comment\">void Vparam_AtomData_copyFrom(Vparam_AtomData *thee, </span>\n00198 <span class=\"comment\">  Vparam_AtomData *src); </span>\n00199 <span class=\"comment\"></span>\n00205 <span class=\"comment\">Vparam_ResData* Vparam_ResData_ctor(Vmem *mem);</span>\n00206 <span class=\"comment\"></span>\n00213 <span class=\"comment\">int Vparam_ResData_ctor2(Vparam_ResData *thee, Vmem *mem);</span>\n00214 <span class=\"comment\"></span>\n00219 <span class=\"comment\">void Vparam_ResData_dtor(Vparam_ResData **thee);</span>\n00220 <span class=\"comment\"></span>\n00225 <span class=\"comment\">void Vparam_ResData_dtor2(Vparam_ResData *thee);</span>\n00226 <span class=\"comment\"></span>\n00231 <span class=\"comment\">Vparam* Vparam_ctor();</span>\n00232 <span class=\"comment\"></span>\n00238 <span class=\"comment\">int Vparam_ctor2(Vparam *thee);</span>\n00239 <span class=\"comment\"></span>\n00244 <span class=\"comment\">void Vparam_dtor(Vparam **thee);</span>\n00245 <span class=\"comment\"></span>\n00250 <span class=\"comment\">void Vparam_dtor2(Vparam *thee);</span>\n00251 <span class=\"comment\"></span>\n00262 <span class=\"comment\">Vparam_ResData* Vparam_getResData(Vparam *thee, </span>\n00263 <span class=\"comment\">  char resName[VMAX_ARGLEN]);</span>\n00264 <span class=\"comment\"></span>\n00276 <span class=\"comment\">Vparam_AtomData* Vparam_getAtomData(Vparam *thee, </span>\n00277 <span class=\"comment\">  char resName[VMAX_ARGLEN], char atomName[VMAX_ARGLEN]);</span>\n00278 <span class=\"comment\"></span>\n00307 <span class=\"comment\">int Vparam_readFlatFile(Vparam *thee, const char *iodev, </span>\n00308 <span class=\"comment\">  const char *iofmt, const char *thost, const char *fname);</span>\n00309 <span class=\"comment\"></span>\n00310 <span class=\"comment\">#endif    /* ifndef _VPARAM_H_ */</span>\n00311 \n</pre></div><hr size=\"1\"><address style=\"align: right;\"><small>Generated on Tue Dec 6 10:05:31 2005 for APBS by\n<a href=\"http://www.doxygen.org/index.html\">\n<img src=\"doxygen.png\" alt=\"doxygen\" align=\"middle\" border=0 > \n</a>1.3.5 </small></address>\n</body>\n</html>\n", "id": 40156.0}