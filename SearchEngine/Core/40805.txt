{"text": " Home Trees Indices Help Package CHEM Package DB Package rdb Module BeautifulSoup Class BeautifulStoneSoup hide private frames no frames Class BeautifulStoneSoup PageElement Tag markupbase ParserBase sgmllib SGMLParser BeautifulStoneSoup Known Subclasses BeautifulSOAP BeautifulSoup RobustXMLParser This class contains the basic parser and search code It defines a parser that knows nothing about tag behavior except for the following You can t close a tag without closing all the tags it encloses That is foo bar foo actually means foo bar bar foo Another possible explanation is foo bar foo but since this class defines no SELF CLOSING TAGS it will never use that explanation This class is useful for parsing XML or made up markup languages or when BeautifulSoup makes an assumption counter to what you were expecting Instance Methods hide private init self markup parseOnlyThese CHEM DB rdb search NameRxnPatternMatchingModel SearchSentence fromEncoding CHEM DB rdb search NameRxnPatternMatchingModel SearchSentence markupMassage True smartQuotesTo xml convertEntities CHEM DB rdb search NameRxnPatternMatchingModel SearchSentence selfClosingTags CHEM DB rdb search NameRxnPatternMatchingModel SearchSentence The Soup object is initialized as the root tag and the provided markup which can be a string or a file like object is fed into the underlying parser feed self inDocumentEncoding CHEM DB rdb search NameRxnPatternMatchingModel SearchSentence getattr self methodName This method routes method call requests to either the SGMLParser superclass or the Tag superclass depending on the method name isSelfClosingTag self name Returns true iff the given string is the name of a self closing tag according to this parser reset self Reset this instance popTag self pushTag self tag endData self containerClass class CHEM DB rdb BeautifulSoup NavigableString popToTag self name inclusivePop True Pops the tag stack up to and including the most recent instance of the given tag smartPop self name We need to pop up to the previous tag of this type unless one of this tag s nesting reset triggers comes between this tag and the previous tag of this type OR unless this tag is a generic nesting trigger and another generic nesting trigger comes between this tag and the previous tag of this type unknown starttag self name attrs selfClosing unknown endtag self name handle data self data toStringSubclass self text subclass Adds a certain piece of text to the tree as a NavigableString subclass handle pi self text Handle a processing instruction as a ProcessingInstruction object possibly one with a SOUP ENCODING slot into which an encoding will be plugged later handle comment self text Handle comments as Comment objects handle charref self ref Handle character references as data handle entityref self ref Handle entity references as data possibly converting known HTML entity references to the corresponding Unicode characters handle decl self data Handle DOCTYPEs and the like as Declaration objects parse declaration self i Treat a bogus SGML declaration as raw data Inherited from Tag call contains delitem eq getitem iter len ne nonzero repr setitem str unicode append childGenerator fetch fetchText find findAll findChild findChildren first firstText get has key prettify recursiveChildGenerator renderContents Inherited from Tag private getAttrMap Inherited from PageElement extract fetchNextSiblings fetchParents fetchPrevious fetchPreviousSiblings findAllNext findAllPrevious findNext findNextSibling findNextSiblings findParent findParents findPrevious findPreviousSibling findPreviousSiblings insert nextGenerator nextSiblingGenerator parentGenerator previousGenerator previousSiblingGenerator replaceWith setup substituteEncoding toEncoding Inherited from PageElement private findAll findOne lastRecursiveChild Inherited from sgmllib SGMLParser close convert charref convert codepoint convert entityref error feed finish endtag finish shorttag finish starttag get starttag text goahead handle endtag handle starttag parse endtag parse pi parse starttag report unbalanced setliteral setnomoretags unknown charref unknown entityref Inherited from sgmllib SGMLParser private convert ref Inherited from markupbase ParserBase getpos parse comment parse marked section unknown decl updatepos Inherited from markupbase ParserBase private parse doctype attlist parse doctype element parse doctype entity parse doctype notation parse doctype subset scan name Class Variables hide private XML ENTITY LIST amp True gt True lt True quote SELF CLOSING TAGS NESTABLE TAGS RESET NESTING TAGS QUOTE TAGS MARKUP MASSAGE re compile r function lamb ROOT TAG NAME u document HTML ENTITIES html XML ENTITIES xml i amp Inherited from Tag XML SPECIAL CHARS TO ENTITIES Inherited from sgmllib SGMLParser entity or charref entitydefs Inherited from sgmllib SGMLParser private decl otherchars Method Details hide private init self markup parseOnlyThese CHEM DB rdb search NameRxnPatternMatchingModel SearchSentence fromEncoding CHEM DB rdb search NameRxnPatternMatchingModel SearchSentence markupMassage True smartQuotesTo xml convertEntities CHEM DB rdb search NameRxnPatternMatchingModel SearchSentence selfClosingTags CHEM DB rdb search NameRxnPatternMatchingModel SearchSentence Constructor The Soup object is initialized as the root tag and the provided markup which can be a string or a file like object is fed into the underlying parser sgmllib will process most bad HTML and the BeautifulSoup class has some tricks for dealing with some HTML that kills sgmllib but Beautiful Soup can nonetheless choke or lose data if your data uses self closing tags or declarations incorrectly By default Beautiful Soup uses regexes to sanitize input avoiding the vast majority of these problems If the problems don t apply to you pass in False for markupMassage and you ll get better performance The default parser massage techniques fix the two most common instances of invalid HTML that choke sgmllib br No space between name of closing tag and tag close Comment Extraneous whitespace in declaration You can pass in a custom list of RE object replace method tuples to get Beautiful Soup to scrub your input the way you want Overrides Tag init getattr self methodName Qualification operator This method routes method call requests to either the SGMLParser superclass or the Tag superclass depending on the method name Overrides Tag getattr reset self Reset this instance Loses all unprocessed data Overrides sgmllib SGMLParser reset inherited documentation popToTag self name inclusivePop True Pops the tag stack up to and including the most recent instance of the given tag If inclusivePop is false pops the tag stack up to but not including the most recent instqance of the given tag smartPop self name We need to pop up to the previous tag of this type unless one of this tag s nesting reset triggers comes between this tag and the previous tag of this type OR unless this tag is a generic nesting trigger and another generic nesting trigger comes between this tag and the previous tag of this type Examples p Foo b Bar p should pop to p not b p Foo table Bar p should pop to table not p p Foo table tr Bar p should pop to tr not p p Foo b Bar p should pop to p not b li ul li li should pop to ul not the first li tr table tr tr should pop to table not the first tr td tr td td should pop to tr not the first td unknown starttag self name attrs selfClosing Overrides sgmllib SGMLParser unknown starttag unknown endtag self name Overrides sgmllib SGMLParser unknown endtag handle data self data Overrides sgmllib SGMLParser handle data handle pi self text Handle a processing instruction as a ProcessingInstruction object possibly one with a SOUP ENCODING slot into which an encoding will be plugged later Overrides sgmllib SGMLParser handle pi handle comment self text Handle comments as Comment objects Overrides sgmllib SGMLParser handle comment handle charref self ref Handle character references as data Overrides sgmllib SGMLParser handle charref handle entityref self ref Handle entity references as data possibly converting known HTML entity references to the corresponding Unicode characters Overrides sgmllib SGMLParser handle entityref handle decl self data Handle DOCTYPEs and the like as Declaration objects Overrides sgmllib SGMLParser handle decl parse declaration self i Treat a bogus SGML declaration as raw data Treat a CDATA declaration as a CData object Overrides markupbase ParserBase parse declaration Class Variable Details hide private XML ENTITY LIST Value amp True gt True lt True quote True squot True MARKUP MASSAGE Value re compile lambda x x group 1 re compile s lambda x x group 1 Home Trees Indices Help Generated by Epydoc 3 beta1 on Thu Nov 8 17 49 29 2 7 http epydoc sourceforge net", "_id": "http://www.ics.uci.edu/~dock/CHEM_docs/CHEM.DB.rdb.BeautifulSoup.BeautifulStoneSoup-class.html", "title": "chem.db.rdb.beautifulsoup.beautifulstonesoup", "html": "<?xml version=\"1.0\" encoding=\"ascii\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n          \"DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n  <title>CHEM.DB.rdb.BeautifulSoup.BeautifulStoneSoup</title>\n  <link rel=\"stylesheet\" href=\"epydoc.css\" type=\"text/css\" />\n  <script type=\"text/javascript\" src=\"epydoc.js\"></script>\n</head>\n\n<body bgcolor=\"white\" text=\"black\" link=\"blue\" vlink=\"#204080\"\n      alink=\"#204080\">\n<!-- ==================== NAVIGATION BAR ==================== -->\n<table class=\"navbar\" border=\"0\" width=\"100%\" cellpadding=\"0\"\n       bgcolor=\"#a0c0ff\" cellspacing=\"0\">\n  <tr valign=\"middle\">\n  <!-- Home link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"CHEM-module.html\">Home</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Tree link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"module-tree.html\">Trees</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Index link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"identifier-index.html\">Indices</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Help link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"help.html\">Help</a>&nbsp;&nbsp;&nbsp;</th>\n\n      <th class=\"navbar\" width=\"100%\"></th>\n  </tr>\n</table>\n<table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n  <tr valign=\"top\">\n    <td width=\"100%\">\n      <span class=\"breadcrumbs\">\n        <a href=\"CHEM-module.html\">Package&nbsp;CHEM</a> ::\n        <a href=\"CHEM.DB-module.html\">Package&nbsp;DB</a> ::\n        <a href=\"CHEM.DB.rdb-module.html\">Package&nbsp;rdb</a> ::\n        <a href=\"CHEM.DB.rdb.BeautifulSoup-module.html\">Module&nbsp;BeautifulSoup</a> ::\n        Class&nbsp;BeautifulStoneSoup\n      </span>\n    </td>\n    <td>\n      <table cellpadding=\"0\" cellspacing=\"0\">\n        <!-- hide/show private -->\n        <tr><td align=\"right\"><span class=\"options\">[<a href=\"javascript:void(0);\" class=\"privatelink\"\n    onclick=\"toggle_private();\">hide&nbsp;private</a>]</span></td></tr>\n        <tr><td align=\"right\"><span class=\"options\"\n            >[<a href=\"frames.html\" target=\"_top\">frames</a\n            >]&nbsp;|&nbsp;<a href=\"CHEM.DB.rdb.BeautifulSoup.BeautifulStoneSoup-class.html\"\n            target=\"_top\">no&nbsp;frames</a>]</span></td></tr>\n      </table>\n    </td>\n  </tr>\n</table>\n<!-- ==================== CLASS DESCRIPTION ==================== -->\n<h1 class=\"epydoc\">Class BeautifulStoneSoup</h1><br /><br />\n<pre class=\"base-tree\">\n          <a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html\">PageElement</a> --+    \n                        |    \n                      <a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html\">Tag</a> --+\n                            |\nmarkupbase.ParserBase --+   |\n                        |   |\n       sgmllib.SGMLParser --+\n                            |\n                           <strong class=\"uidshort\">BeautifulStoneSoup</strong>\n</pre>\n\n<dl><dt>Known Subclasses:</dt>\n<dd>\n    <a href=\"CHEM.DB.rdb.BeautifulSoup.BeautifulSOAP-class.html\">BeautifulSOAP</a>,\n    <a href=\"CHEM.DB.rdb.BeautifulSoup.BeautifulSoup-class.html\">BeautifulSoup</a>,\n    <a href=\"CHEM.DB.rdb.BeautifulSoup.RobustXMLParser-class.html\">RobustXMLParser</a>\n</dd></dl>\n\n<hr />\n<pre class=\"literalblock\">\nThis class contains the basic parser and search code. It defines\na parser that knows nothing about tag behavior except for the\nfollowing:\n\n  You can't close a tag without closing all the tags it encloses.\n  That is, &quot;&lt;foo&gt;&lt;bar&gt;&lt;/foo&gt;&quot; actually means\n  &quot;&lt;foo&gt;&lt;bar&gt;&lt;/bar&gt;&lt;/foo&gt;&quot;.\n\n[Another possible explanation is &quot;&lt;foo&gt;&lt;bar /&gt;&lt;/foo&gt;&quot;, but since\nthis class defines no SELF_CLOSING_TAGS, it will never use that\nexplanation.]\n\nThis class is useful for parsing XML or made-up markup languages,\nor when BeautifulSoup makes an assumption counter to what you were\nexpecting.\n\n</pre><br /><br />\n\n<!-- ==================== INSTANCE METHODS ==================== -->\n<a name=\"section-InstanceMethods\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Instance Methods</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-InstanceMethods\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.DB.rdb.BeautifulSoup.BeautifulStoneSoup-class.html#__init__\" class=\"summary-sig-name\">__init__</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">markup</span>=<span class=\"summary-sig-default\"><code class=\"variable-quote\">'</code><code class=\"variable-string\"></code><code class=\"variable-quote\">'</code></span>,\n        <span class=\"summary-sig-arg\">parseOnlyThese</span>=<span class=\"summary-sig-default\">&lt;CHEM.DB.rdb.search.NameRxnPatternMatchingModel.SearchSentence<code class=\"variable-ellipsis\">...</code></span>,\n        <span class=\"summary-sig-arg\">fromEncoding</span>=<span class=\"summary-sig-default\">&lt;CHEM.DB.rdb.search.NameRxnPatternMatchingModel.SearchSentence<code class=\"variable-ellipsis\">...</code></span>,\n        <span class=\"summary-sig-arg\">markupMassage</span>=<span class=\"summary-sig-default\">True</span>,\n        <span class=\"summary-sig-arg\">smartQuotesTo</span>=<span class=\"summary-sig-default\"><code class=\"variable-quote\">'</code><code class=\"variable-string\">xml</code><code class=\"variable-quote\">'</code></span>,\n        <span class=\"summary-sig-arg\">convertEntities</span>=<span class=\"summary-sig-default\">&lt;CHEM.DB.rdb.search.NameRxnPatternMatchingModel.SearchSentence<code class=\"variable-ellipsis\">...</code></span>,\n        <span class=\"summary-sig-arg\">selfClosingTags</span>=<span class=\"summary-sig-default\">&lt;CHEM.DB.rdb.search.NameRxnPatternMatchingModel.SearchSentence<code class=\"variable-ellipsis\">...</code></span>)</span><br />\n      The Soup object is initialized as the 'root tag', and the\nprovided markup (which can be a string or a file-like object)\nis fed into the underlying parser.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr class=\"private\">\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"_feed\"></a><span class=\"summary-sig-name\">_feed</span>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">inDocumentEncoding</span>=<span class=\"summary-sig-default\">&lt;CHEM.DB.rdb.search.NameRxnPatternMatchingModel.SearchSentence<code class=\"variable-ellipsis\">...</code></span>)</span></td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.DB.rdb.BeautifulSoup.BeautifulStoneSoup-class.html#__getattr__\" class=\"summary-sig-name\">__getattr__</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">methodName</span>)</span><br />\n      This method routes method call requests to either the SGMLParser \n      superclass or the Tag superclass, depending on the method name.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"isSelfClosingTag\"></a><span class=\"summary-sig-name\">isSelfClosingTag</span>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">name</span>)</span><br />\n      Returns true iff the given string is the name of a self-closing \n      tag according to this parser.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.DB.rdb.BeautifulSoup.BeautifulStoneSoup-class.html#reset\" class=\"summary-sig-name\">reset</a>(<span class=\"summary-sig-arg\">self</span>)</span><br />\n      Reset this instance.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"popTag\"></a><span class=\"summary-sig-name\">popTag</span>(<span class=\"summary-sig-arg\">self</span>)</span></td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"pushTag\"></a><span class=\"summary-sig-name\">pushTag</span>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">tag</span>)</span></td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"endData\"></a><span class=\"summary-sig-name\">endData</span>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">containerClass</span>=<span class=\"summary-sig-default\">&lt;class 'CHEM.DB.rdb.BeautifulSoup.NavigableString'&gt;</span>)</span></td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr class=\"private\">\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.DB.rdb.BeautifulSoup.BeautifulStoneSoup-class.html#_popToTag\" class=\"summary-sig-name\">_popToTag</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">name</span>,\n        <span class=\"summary-sig-arg\">inclusivePop</span>=<span class=\"summary-sig-default\">True</span>)</span><br />\n      Pops the tag stack up to and including the most recent instance of\n      the given tag.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr class=\"private\">\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.DB.rdb.BeautifulSoup.BeautifulStoneSoup-class.html#_smartPop\" class=\"summary-sig-name\">_smartPop</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">name</span>)</span><br />\n      We need to pop up to the previous tag of this type, unless\none of this tag's nesting reset triggers comes between this\ntag and the previous tag of this type, OR unless this tag is a\ngeneric nesting trigger and another generic nesting trigger\ncomes between this tag and the previous tag of this type.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.DB.rdb.BeautifulSoup.BeautifulStoneSoup-class.html#unknown_starttag\" class=\"summary-sig-name\">unknown_starttag</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">name</span>,\n        <span class=\"summary-sig-arg\">attrs</span>,\n        <span class=\"summary-sig-arg\">selfClosing</span>=<span class=\"summary-sig-default\">0</span>)</span></td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.DB.rdb.BeautifulSoup.BeautifulStoneSoup-class.html#unknown_endtag\" class=\"summary-sig-name\">unknown_endtag</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">name</span>)</span></td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.DB.rdb.BeautifulSoup.BeautifulStoneSoup-class.html#handle_data\" class=\"summary-sig-name\">handle_data</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">data</span>)</span></td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr class=\"private\">\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"_toStringSubclass\"></a><span class=\"summary-sig-name\">_toStringSubclass</span>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">text</span>,\n        <span class=\"summary-sig-arg\">subclass</span>)</span><br />\n      Adds a certain piece of text to the tree as a NavigableString \n      subclass.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.DB.rdb.BeautifulSoup.BeautifulStoneSoup-class.html#handle_pi\" class=\"summary-sig-name\">handle_pi</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">text</span>)</span><br />\n      Handle a processing instruction as a ProcessingInstruction object,\n      possibly one with a %SOUP-ENCODING% slot into which an encoding will \n      be plugged later.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.DB.rdb.BeautifulSoup.BeautifulStoneSoup-class.html#handle_comment\" class=\"summary-sig-name\">handle_comment</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">text</span>)</span><br />\n      Handle comments as Comment objects.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.DB.rdb.BeautifulSoup.BeautifulStoneSoup-class.html#handle_charref\" class=\"summary-sig-name\">handle_charref</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">ref</span>)</span><br />\n      Handle character references as data.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.DB.rdb.BeautifulSoup.BeautifulStoneSoup-class.html#handle_entityref\" class=\"summary-sig-name\">handle_entityref</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">ref</span>)</span><br />\n      Handle entity references as data, possibly converting known HTML \n      entity references to the corresponding Unicode characters.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.DB.rdb.BeautifulSoup.BeautifulStoneSoup-class.html#handle_decl\" class=\"summary-sig-name\">handle_decl</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">data</span>)</span><br />\n      Handle DOCTYPEs and the like as Declaration objects.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.DB.rdb.BeautifulSoup.BeautifulStoneSoup-class.html#parse_declaration\" class=\"summary-sig-name\">parse_declaration</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">i</span>)</span><br />\n      Treat a bogus SGML declaration as raw data.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n  <tr>\n    <td colspan=\"2\" class=\"summary\">\n    <p class=\"indent-wrapped-lines\"><b>Inherited from <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html\">Tag</a></code></b>:\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#__call__\">__call__</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#__contains__\">__contains__</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#__delitem__\">__delitem__</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#__eq__\">__eq__</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#__getitem__\">__getitem__</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#__iter__\">__iter__</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#__len__\">__len__</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#__ne__\">__ne__</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#__nonzero__\">__nonzero__</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#__repr__\">__repr__</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#__setitem__\">__setitem__</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#__str__\">__str__</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#__unicode__\">__unicode__</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#append\">append</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#childGenerator\">childGenerator</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#fetch\">fetch</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#fetchText\">fetchText</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#find\">find</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#findAll\">findAll</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#findChild\">findChild</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#findChildren\">findChildren</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#first\">first</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#firstText\">firstText</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#get\">get</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#has_key\">has_key</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#prettify\">prettify</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#recursiveChildGenerator\">recursiveChildGenerator</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#renderContents\">renderContents</a></code>\n      </p>\n    <div class=\"private\">    <p class=\"indent-wrapped-lines\"><b>Inherited from <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html\">Tag</a></code></b> (private):\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#_getAttrMap\">_getAttrMap</a></code>\n      </p></div>\n    <p class=\"indent-wrapped-lines\"><b>Inherited from <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html\">PageElement</a></code></b>:\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html#extract\">extract</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html#fetchNextSiblings\">fetchNextSiblings</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html#fetchParents\">fetchParents</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html#fetchPrevious\">fetchPrevious</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html#fetchPreviousSiblings\">fetchPreviousSiblings</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html#findAllNext\">findAllNext</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html#findAllPrevious\">findAllPrevious</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html#findNext\">findNext</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html#findNextSibling\">findNextSibling</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html#findNextSiblings\">findNextSiblings</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html#findParent\">findParent</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html#findParents\">findParents</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html#findPrevious\">findPrevious</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html#findPreviousSibling\">findPreviousSibling</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html#findPreviousSiblings\">findPreviousSiblings</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html#insert\">insert</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html#nextGenerator\">nextGenerator</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html#nextSiblingGenerator\">nextSiblingGenerator</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html#parentGenerator\">parentGenerator</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html#previousGenerator\">previousGenerator</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html#previousSiblingGenerator\">previousSiblingGenerator</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html#replaceWith\">replaceWith</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html#setup\">setup</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html#substituteEncoding\">substituteEncoding</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html#toEncoding\">toEncoding</a></code>\n      </p>\n    <div class=\"private\">    <p class=\"indent-wrapped-lines\"><b>Inherited from <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html\">PageElement</a></code></b> (private):\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html#_findAll\">_findAll</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html#_findOne\">_findOne</a></code>,\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.PageElement-class.html#_lastRecursiveChild\">_lastRecursiveChild</a></code>\n      </p></div>\n    <p class=\"indent-wrapped-lines\"><b>Inherited from <code>sgmllib.SGMLParser</code></b>:\n      <code>close</code>,\n      <code>convert_charref</code>,\n      <code>convert_codepoint</code>,\n      <code>convert_entityref</code>,\n      <code>error</code>,\n      <code>feed</code>,\n      <code>finish_endtag</code>,\n      <code>finish_shorttag</code>,\n      <code>finish_starttag</code>,\n      <code>get_starttag_text</code>,\n      <code>goahead</code>,\n      <code>handle_endtag</code>,\n      <code>handle_starttag</code>,\n      <code>parse_endtag</code>,\n      <code>parse_pi</code>,\n      <code>parse_starttag</code>,\n      <code>report_unbalanced</code>,\n      <code>setliteral</code>,\n      <code>setnomoretags</code>,\n      <code>unknown_charref</code>,\n      <code>unknown_entityref</code>\n      </p>\n    <div class=\"private\">    <p class=\"indent-wrapped-lines\"><b>Inherited from <code>sgmllib.SGMLParser</code></b> (private):\n      <code>_convert_ref</code>\n      </p></div>\n    <p class=\"indent-wrapped-lines\"><b>Inherited from <code>markupbase.ParserBase</code></b>:\n      <code>getpos</code>,\n      <code>parse_comment</code>,\n      <code>parse_marked_section</code>,\n      <code>unknown_decl</code>,\n      <code>updatepos</code>\n      </p>\n    <div class=\"private\">    <p class=\"indent-wrapped-lines\"><b>Inherited from <code>markupbase.ParserBase</code></b> (private):\n      <code>_parse_doctype_attlist</code>,\n      <code>_parse_doctype_element</code>,\n      <code>_parse_doctype_entity</code>,\n      <code>_parse_doctype_notation</code>,\n      <code>_parse_doctype_subset</code>,\n      <code>_scan_name</code>\n      </p></div>\n    </td>\n  </tr>\n</table>\n<!-- ==================== CLASS VARIABLES ==================== -->\n<a name=\"section-ClassVariables\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Class Variables</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-ClassVariables\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a href=\"CHEM.DB.rdb.BeautifulSoup.BeautifulStoneSoup-class.html#XML_ENTITY_LIST\" class=\"summary-name\">XML_ENTITY_LIST</a> = <code title=\"{'amp': True, 'gt': True, 'lt': True, 'quote': True, 'squot': True}\"><code class=\"variable-group\">{</code><code class=\"variable-quote\">'</code><code class=\"variable-string\">amp</code><code class=\"variable-quote\">'</code><code class=\"variable-op\">: </code>True<code class=\"variable-op\">, </code><code class=\"variable-quote\">'</code><code class=\"variable-string\">gt</code><code class=\"variable-quote\">'</code><code class=\"variable-op\">: </code>True<code class=\"variable-op\">, </code><code class=\"variable-quote\">'</code><code class=\"variable-string\">lt</code><code class=\"variable-quote\">'</code><code class=\"variable-op\">: </code>True<code class=\"variable-op\">, </code><code class=\"variable-quote\">'</code><code class=\"variable-string\">quote</code><code class=\"variable-ellipsis\">...</code></code>\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a name=\"SELF_CLOSING_TAGS\"></a><span class=\"summary-name\">SELF_CLOSING_TAGS</span> = <code title=\"{}\"><code class=\"variable-group\">{</code><code class=\"variable-group\">}</code></code>\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a name=\"NESTABLE_TAGS\"></a><span class=\"summary-name\">NESTABLE_TAGS</span> = <code title=\"{}\"><code class=\"variable-group\">{</code><code class=\"variable-group\">}</code></code>\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a name=\"RESET_NESTING_TAGS\"></a><span class=\"summary-name\">RESET_NESTING_TAGS</span> = <code title=\"{}\"><code class=\"variable-group\">{</code><code class=\"variable-group\">}</code></code>\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a name=\"QUOTE_TAGS\"></a><span class=\"summary-name\">QUOTE_TAGS</span> = <code title=\"{}\"><code class=\"variable-group\">{</code><code class=\"variable-group\">}</code></code>\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a href=\"CHEM.DB.rdb.BeautifulSoup.BeautifulStoneSoup-class.html#MARKUP_MASSAGE\" class=\"summary-name\">MARKUP_MASSAGE</a> = <code title=\"[(re.compile('(&lt;[^&lt;&gt;]*)/&gt;'), lambda x: x.group(1)+ ' /&gt;'), (re.compile\\\n('&lt;!\\s+([^&lt;&gt;]*)&gt;'), lambda x: '&lt;!'+ x.group(1)+ '&gt;')]\"><code class=\"variable-group\">[</code><code class=\"variable-group\">(</code>re.compile(r'<code class=\"re-group\">(</code>&lt;<code class=\"re-group\">[</code><code class=\"re-op\">^</code>&lt;&gt;<code class=\"re-group\">]</code><code class=\"re-op\">*</code><code class=\"re-group\">)</code>/&gt;')<code class=\"variable-op\">, </code>&lt;function &lt;lamb<code class=\"variable-ellipsis\">...</code></code>\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a name=\"ROOT_TAG_NAME\"></a><span class=\"summary-name\">ROOT_TAG_NAME</span> = <code title=\"u'[document]'\"><code class=\"variable-quote\">u'</code><code class=\"variable-string\">[document]</code><code class=\"variable-quote\">'</code></code>\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a name=\"HTML_ENTITIES\"></a><span class=\"summary-name\">HTML_ENTITIES</span> = <code title=\"'html'\"><code class=\"variable-quote\">'</code><code class=\"variable-string\">html</code><code class=\"variable-quote\">'</code></code>\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a name=\"XML_ENTITIES\"></a><span class=\"summary-name\">XML_ENTITIES</span> = <code title=\"'xml'\"><code class=\"variable-quote\">'</code><code class=\"variable-string\">xml</code><code class=\"variable-quote\">'</code></code>\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a name=\"i\"></a><span class=\"summary-name\">i</span> = <code title=\"'amp'\"><code class=\"variable-quote\">'</code><code class=\"variable-string\">amp</code><code class=\"variable-quote\">'</code></code>\n    </td>\n  </tr>\n  <tr>\n    <td colspan=\"2\" class=\"summary\">\n    <p class=\"indent-wrapped-lines\"><b>Inherited from <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html\">Tag</a></code></b>:\n      <code><a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#XML_SPECIAL_CHARS_TO_ENTITIES\">XML_SPECIAL_CHARS_TO_ENTITIES</a></code>\n      </p>\n    <p class=\"indent-wrapped-lines\"><b>Inherited from <code>sgmllib.SGMLParser</code></b>:\n      <code>entity_or_charref</code>,\n      <code>entitydefs</code>\n      </p>\n    <div class=\"private\">    <p class=\"indent-wrapped-lines\"><b>Inherited from <code>sgmllib.SGMLParser</code></b> (private):\n      <code>_decl_otherchars</code>\n      </p></div>\n    </td>\n  </tr>\n</table>\n<!-- ==================== METHOD DETAILS ==================== -->\n<a name=\"section-MethodDetails\"></a>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Method Details</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-MethodDetails\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n</table>\n<a name=\"__init__\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">__init__</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">markup</span>=<span class=\"sig-default\"><code class=\"variable-quote\">'</code><code class=\"variable-string\"></code><code class=\"variable-quote\">'</code></span>,\n        <span class=\"sig-arg\">parseOnlyThese</span>=<span class=\"sig-default\">&lt;CHEM.DB.rdb.search.NameRxnPatternMatchingModel.SearchSentence<code class=\"variable-ellipsis\">...</code></span>,\n        <span class=\"sig-arg\">fromEncoding</span>=<span class=\"sig-default\">&lt;CHEM.DB.rdb.search.NameRxnPatternMatchingModel.SearchSentence<code class=\"variable-ellipsis\">...</code></span>,\n        <span class=\"sig-arg\">markupMassage</span>=<span class=\"sig-default\">True</span>,\n        <span class=\"sig-arg\">smartQuotesTo</span>=<span class=\"sig-default\"><code class=\"variable-quote\">'</code><code class=\"variable-string\">xml</code><code class=\"variable-quote\">'</code></span>,\n        <span class=\"sig-arg\">convertEntities</span>=<span class=\"sig-default\">&lt;CHEM.DB.rdb.search.NameRxnPatternMatchingModel.SearchSentence<code class=\"variable-ellipsis\">...</code></span>,\n        <span class=\"sig-arg\">selfClosingTags</span>=<span class=\"sig-default\">&lt;CHEM.DB.rdb.search.NameRxnPatternMatchingModel.SearchSentence<code class=\"variable-ellipsis\">...</code></span>)</span>\n    <br /><em class=\"fname\">(Constructor)</em>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <pre class=\"literalblock\">\nThe Soup object is initialized as the 'root tag', and the\nprovided markup (which can be a string or a file-like object)\nis fed into the underlying parser. \n\nsgmllib will process most bad HTML, and the BeautifulSoup\nclass has some tricks for dealing with some HTML that kills\nsgmllib, but Beautiful Soup can nonetheless choke or lose data\nif your data uses self-closing tags or declarations\nincorrectly.\n\nBy default, Beautiful Soup uses regexes to sanitize input,\navoiding the vast majority of these problems. If the problems\ndon't apply to you, pass in False for markupMassage, and\nyou'll get better performance.\n\nThe default parser massage techniques fix the two most common\ninstances of invalid HTML that choke sgmllib:\n\n &lt;br/&gt; (No space between name of closing tag and tag close)\n &lt;! --Comment--&gt; (Extraneous whitespace in declaration)\n\nYou can pass in a custom list of (RE object, replace method)\ntuples to get Beautiful Soup to scrub your input the way you\nwant.\n\n</pre>\n  <dl class=\"fields\">\n    <dt>Overrides:\n      <a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#__init__\">Tag.__init__</a>\n    </dt>\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"__getattr__\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">__getattr__</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">methodName</span>)</span>\n    <br /><em class=\"fname\">(Qualification operator)</em>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  This method routes method call requests to either the SGMLParser \n  superclass or the Tag superclass, depending on the method name.\n  <dl class=\"fields\">\n    <dt>Overrides:\n      <a href=\"CHEM.DB.rdb.BeautifulSoup.Tag-class.html#__getattr__\">Tag.__getattr__</a>\n    </dt>\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"reset\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">reset</span>(<span class=\"sig-arg\">self</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Reset this instance. Loses all unprocessed data.\n  <dl class=\"fields\">\n    <dt>Overrides:\n      sgmllib.SGMLParser.reset\n        <dd><em class=\"note\">(inherited documentation)</em></dd>\n    </dt>\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"_popToTag\"></a>\n<div class=\"private\">\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">_popToTag</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">name</span>,\n        <span class=\"sig-arg\">inclusivePop</span>=<span class=\"sig-default\">True</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Pops the tag stack up to and including the most recent instance of the\n  given tag. If inclusivePop is false, pops the tag stack up to but *not* \n  including the most recent instqance of the given tag.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"_smartPop\"></a>\n<div class=\"private\">\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">_smartPop</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">name</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <pre class=\"literalblock\">\nWe need to pop up to the previous tag of this type, unless\none of this tag's nesting reset triggers comes between this\ntag and the previous tag of this type, OR unless this tag is a\ngeneric nesting trigger and another generic nesting trigger\ncomes between this tag and the previous tag of this type.\n\nExamples:\n &lt;p&gt;Foo&lt;b&gt;Bar&lt;p&gt; should pop to 'p', not 'b'.\n &lt;p&gt;Foo&lt;table&gt;Bar&lt;p&gt; should pop to 'table', not 'p'.\n &lt;p&gt;Foo&lt;table&gt;&lt;tr&gt;Bar&lt;p&gt; should pop to 'tr', not 'p'.\n &lt;p&gt;Foo&lt;b&gt;Bar&lt;p&gt; should pop to 'p', not 'b'.\n\n &lt;li&gt;&lt;ul&gt;&lt;li&gt; *&lt;li&gt;* should pop to 'ul', not the first 'li'.\n &lt;tr&gt;&lt;table&gt;&lt;tr&gt; *&lt;tr&gt;* should pop to 'table', not the first 'tr'\n &lt;td&gt;&lt;tr&gt;&lt;td&gt; *&lt;td&gt;* should pop to 'tr', not the first 'td'\n\n</pre>\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"unknown_starttag\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">unknown_starttag</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">name</span>,\n        <span class=\"sig-arg\">attrs</span>,\n        <span class=\"sig-arg\">selfClosing</span>=<span class=\"sig-default\">0</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  \n  <dl class=\"fields\">\n    <dt>Overrides:\n      sgmllib.SGMLParser.unknown_starttag\n    </dt>\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"unknown_endtag\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">unknown_endtag</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">name</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  \n  <dl class=\"fields\">\n    <dt>Overrides:\n      sgmllib.SGMLParser.unknown_endtag\n    </dt>\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"handle_data\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">handle_data</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">data</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  \n  <dl class=\"fields\">\n    <dt>Overrides:\n      sgmllib.SGMLParser.handle_data\n    </dt>\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"handle_pi\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">handle_pi</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">text</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Handle a processing instruction as a ProcessingInstruction object, \n  possibly one with a %SOUP-ENCODING% slot into which an encoding will be \n  plugged later.\n  <dl class=\"fields\">\n    <dt>Overrides:\n      sgmllib.SGMLParser.handle_pi\n    </dt>\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"handle_comment\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">handle_comment</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">text</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Handle comments as Comment objects.\n  <dl class=\"fields\">\n    <dt>Overrides:\n      sgmllib.SGMLParser.handle_comment\n    </dt>\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"handle_charref\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">handle_charref</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">ref</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Handle character references as data.\n  <dl class=\"fields\">\n    <dt>Overrides:\n      sgmllib.SGMLParser.handle_charref\n    </dt>\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"handle_entityref\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">handle_entityref</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">ref</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Handle entity references as data, possibly converting known HTML \n  entity references to the corresponding Unicode characters.\n  <dl class=\"fields\">\n    <dt>Overrides:\n      sgmllib.SGMLParser.handle_entityref\n    </dt>\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"handle_decl\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">handle_decl</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">data</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Handle DOCTYPEs and the like as Declaration objects.\n  <dl class=\"fields\">\n    <dt>Overrides:\n      sgmllib.SGMLParser.handle_decl\n    </dt>\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"parse_declaration\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">parse_declaration</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">i</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Treat a bogus SGML declaration as raw data. Treat a CDATA declaration \n  as a CData object.\n  <dl class=\"fields\">\n    <dt>Overrides:\n      markupbase.ParserBase.parse_declaration\n    </dt>\n  </dl>\n</td></tr></table>\n</div>\n<br />\n<!-- ==================== CLASS VARIABLE DETAILS ==================== -->\n<a name=\"section-ClassVariableDetails\"></a>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Class Variable Details</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-ClassVariableDetails\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n</table>\n<a name=\"XML_ENTITY_LIST\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <h3 class=\"epydoc\">XML_ENTITY_LIST</h3>\n  \n  <dl class=\"fields\">\n  </dl>\n  <dl class=\"fields\">\n    <dt>Value:</dt>\n      <dd><table><tr><td><pre class=\"variable\">\n<code class=\"variable-group\">{</code><code class=\"variable-quote\">'</code><code class=\"variable-string\">amp</code><code class=\"variable-quote\">'</code><code class=\"variable-op\">: </code>True<code class=\"variable-op\">, </code><code class=\"variable-quote\">'</code><code class=\"variable-string\">gt</code><code class=\"variable-quote\">'</code><code class=\"variable-op\">: </code>True<code class=\"variable-op\">, </code><code class=\"variable-quote\">'</code><code class=\"variable-string\">lt</code><code class=\"variable-quote\">'</code><code class=\"variable-op\">: </code>True<code class=\"variable-op\">, </code><code class=\"variable-quote\">'</code><code class=\"variable-string\">quote</code><code class=\"variable-quote\">'</code><code class=\"variable-op\">: </code>True<code class=\"variable-op\">, </code><code class=\"variable-quote\">'</code><code class=\"variable-string\">squot</code><code class=\"variable-quote\">'</code><code class=\"variable-op\">: </code>True<code class=\"variable-group\">}</code>\n</pre></td></tr></table>\n</dd>\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"MARKUP_MASSAGE\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <h3 class=\"epydoc\">MARKUP_MASSAGE</h3>\n  \n  <dl class=\"fields\">\n  </dl>\n  <dl class=\"fields\">\n    <dt>Value:</dt>\n      <dd><table><tr><td><pre class=\"variable\">\n[(re.compile('(&lt;[^&lt;&gt;]*)/&gt;'), lambda x: x.group(1)+ ' /&gt;'), (re.compile<span class=\"variable-linewrap\"><img src=\"crarr.png\" alt=\"\\\" /></span>\n('&lt;!\\s+([^&lt;&gt;]*)&gt;'), lambda x: '&lt;!'+ x.group(1)+ '&gt;')]\n</pre></td></tr></table>\n</dd>\n  </dl>\n</td></tr></table>\n</div>\n<br />\n<!-- ==================== NAVIGATION BAR ==================== -->\n<table class=\"navbar\" border=\"0\" width=\"100%\" cellpadding=\"0\"\n       bgcolor=\"#a0c0ff\" cellspacing=\"0\">\n  <tr valign=\"middle\">\n  <!-- Home link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"CHEM-module.html\">Home</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Tree link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"module-tree.html\">Trees</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Index link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"identifier-index.html\">Indices</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Help link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"help.html\">Help</a>&nbsp;&nbsp;&nbsp;</th>\n\n      <th class=\"navbar\" width=\"100%\"></th>\n  </tr>\n</table>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%%\">\n  <tr>\n    <td align=\"left\" class=\"footer\">\n    Generated by Epydoc 3.0beta1 on Thu Nov  8 17:49:29 2007\n    </td>\n    <td align=\"right\" class=\"footer\">\n      <a href=\"http://epydoc.sourceforge.net\">http://epydoc.sourceforge.net</a>\n    </td>\n  </tr>\n</table>\n\n<script type=\"text/javascript\">\n  <!--\n  // Private objects are initially displayed (because if\n  // javascript is turned off then we want them to be\n  // visible); but by default, we want to hide them.  So hide\n  // them unless we have a cookie that says to show them.\n  checkCookie()\n  // -->\n</script>\n  \n</body>\n</html>\n", "id": 40805.0}