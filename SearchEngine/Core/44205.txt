{"text": "Search LoginPreferencesHelp GuideAbout Trac WikiTimelineRoadmapBrowse SourceView TicketsSearch Context Navigation BlameRevision Log source nomatic tags NomaticIM 5 buddy bots src twisted protocols loopback py View diff against View revision Visit trunk Last change on this file was 712 checked in by cbaker 7 years ago First draft of nomatic buddy bots oscar bot is functional if you give it good authentication credentials jabber bot is just an example from the web File size 1 3 KB Line 1 test case name twisted test test loopback 2 Copyright c 2 1 2 4 Twisted Matrix Laboratories 3 See LICENSE for details 456 7Testing support for protocols loopback between client and server 8 91 system imports11import tempfile12from zope interface import implements1314 Twisted Imports15from twisted protocols import policies16from twisted internet import interfaces protocol main defer17from twisted python import failure18from twisted internet interfaces import IAddress192 21class LoopbackQueue object 22 23 Trivial wrapper around a list to give it an interface like a queue which24 the addition of also sending notifications by way of a Deferred whenever25 the list has something added to it 26 2728 notificationDeferred None29 disconnect False3 31 def init self 32 self queue 333435 def put self v 36 self queue append v 37 if self notificationDeferred is not None 38 d self notificationDeferred self notificationDeferred None39 d callback None 4 4142 def nonzero self 43 return bool self queue 444546 def get self 47 return self queue pop 48495 51class LoopbackAddress object 52 implements IAddress 535455class LoopbackTransport object 56 implements interfaces ITransport interfaces IConsumer 5758 disconnecting False59 producer None6 61 ITransport62 def init self q 63 self q q6465 def write self bytes 66 self q put bytes 6768 def writeSequence self iovec 69 self q put join iovec 7 71 def loseConnection self 72 self q disconnect True73 self q put 7475 def getPeer self 76 return LoopbackAddress 7778 def getHost self 79 return LoopbackAddress 8 81 IConsumer82 def registerProducer self producer streaming 83 assert self producer is None84 self producer producer85 self streamingProducer streaming86 self pollProducer 8788 def unregisterProducer self 89 assert self producer is not None9 self producer None9192 def pollProducer self 93 if self producer is not None and not self streamingProducer 94 self producer resumeProducing 95969798def loopbackAsync server client 99 1 Establish a connection between C server and C client then transfer data1 1 between them until the connection is closed This is often useful for1 2 testing a protocol 1 31 4 param server The protocol instance representing the server side of this1 5 connection 1 6 1 7 param client The protocol instance representing the client side of this1 8 connection 1 911 return A L Deferred which fires when the connection has been closed and111 both sides have received notification of this 112 113 serverToClient LoopbackQueue 114 clientToServer LoopbackQueue 115116 server makeConnection LoopbackTransport serverToClient 117 client makeConnection LoopbackTransport clientToServer 118119 return loopbackAsyncBody server serverToClient client clientToServer 12 121122123def loopbackAsyncBody server serverToClient client clientToServer 124 125 Transfer bytes from the output queue of each protocol to the input of the other 126127 param server The protocol instance representing the server side of this128 connection 12913 param serverToClient The L LoopbackQueue holding the server s output 131132 param client The protocol instance representing the client side of this133 connection 134135 param clientToServer The L LoopbackQueue holding the client s output 136137 return A L Deferred which fires when the connection has been closed and138 both sides have received notification of this 139 14 def pump source q target 141 sent False142 while q 143 sent True144 bytes q get 145 if bytes 146 target dataReceived bytes 147148 A write buffer has now been emptied Give any producer on that side149 an opportunity to produce more data 15 source transport pollProducer 151152 return sent153154 while 1 155 disconnect clientSent serverSent False156157 Deliver the data which has been written 158 serverSent pump server serverToClient client 159 clientSent pump client clientToServer server 16 161 if not clientSent and not serverSent 162 Neither side wrote any data Wait for some new data to be added163 before trying to do anything further 164 d clientToServer notificationDeferred serverToClient notificationDeferred defer Deferred 165 d addCallback loopbackAsyncContinue server serverToClient client clientToServer 166 return d167 if serverToClient disconnect 168 The server wants to drop the connection Flush any remaining169 data it has 17 disconnect True171 pump server serverToClient client 172 elif clientToServer disconnect 173 The client wants to drop the connection Flush any remaining174 data it has 175 disconnect True176 pump client clientToServer server 177 if disconnect 178 Someone wanted to disconnect so okay the connection is gone 179 server connectionLost failure Failure main CONNECTION DONE 18 client connectionLost failure Failure main CONNECTION DONE 181 return defer succeed None 182183184185def loopbackAsyncContinue ignored server serverToClient client clientToServer 186 Clear the Deferred from each message queue since it has already fired187 and cannot be used again 188 clientToServer notificationDeferred serverToClient notificationDeferred None18919 Push some more bytes around 191 return loopbackAsyncBody server serverToClient client clientToServer 192193194195class LoopbackRelay 196197 implements interfaces ITransport interfaces IConsumer 198199 buffer 2 shouldLose 2 1 disconnecting 2 2 producer None2 32 4 def init self target logFile None 2 5 self target target2 6 self logFile logFile2 72 8 def write self data 2 9 self buffer self buffer data21 if self logFile 211 self logFile write loopback writing s n repr data 212213 def writeSequence self iovec 214 self write join iovec 215216 def clearBuffer self 217 if self shouldLose 1 218 return219 22 if self producer 221 self producer resumeProducing 222 if self buffer 223 if self logFile 224 self logFile write loopback receiving s n repr self buffer 225 buffer self buffer226 self buffer 227 self target dataReceived buffer 228 if self shouldLose 1 229 self shouldLose 123 self target connectionLost failure Failure main CONNECTION DONE 231232 def loseConnection self 233 if self shouldLose 1 234 self shouldLose 1235236 def getHost self 237 return loopback 238239 def getPeer self 24 return loopback 241242 def registerProducer self producer streaming 243 self producer producer244245 def unregisterProducer self 246 self producer None247248 def logPrefix self 249 return Loopback r self target class name 25 251def loopback server client logFile None 252 Run session between server and client 253 DEPRECATED in Twisted 2 5 Use loopbackAsync instead 254 255 import warnings256 warnings warn loopback is deprecated since Twisted 2 5 257 Use loopbackAsync instead 258 stacklevel 2 category DeprecationWarning 259 from twisted internet import reactor26 serverToClient LoopbackRelay client logFile 261 clientToServer LoopbackRelay server logFile 262 server makeConnection serverToClient 263 client makeConnection clientToServer 264 while 1 265 reactor iterate 1 this is to clear any deferreds266 serverToClient clearBuffer 267 clientToServer clearBuffer 268 if serverToClient shouldLose 269 serverToClient clearBuffer 27 server connectionLost failure Failure main CONNECTION DONE 271 break272 elif clientToServer shouldLose 273 client connectionLost failure Failure main CONNECTION DONE 274 break275 reactor iterate last gasp before I go away276277278class LoopbackClientFactory protocol ClientFactory 27928 def init self protocol 281 self disconnected 282 self deferred defer Deferred 283 self protocol protocol284285 def buildProtocol self addr 286 return self protocol287288 def clientConnectionLost self connector reason 289 self disconnected 129 self deferred callback None 291292293class FireOnClose policies ProtocolWrapper 294 def init self protocol factory 295 policies ProtocolWrapper init self protocol factory 296 self deferred defer Deferred 297298 def connectionLost self reason 299 policies ProtocolWrapper connectionLost self reason 3 self deferred callback None 3 13 23 3def loopbackTCP server client port noisy True 3 4 Run session between server and client protocol instances over TCP 3 5 from twisted internet import reactor3 6 f policies WrappingFactory protocol Factory 3 7 serverWrapper FireOnClose f server 3 8 f noisy noisy3 9 f buildProtocol lambda addr serverWrapper31 serverPort reactor listenTCP port f interface 127 1 311 clientF LoopbackClientFactory client 312 clientF noisy noisy313 reactor connectTCP 127 1 serverPort getHost port clientF 314 d clientF deferred315 d addCallback lambda x serverWrapper deferred 316 d addCallback lambda x serverPort stopListening 317 return d31831932 def loopbackUNIX server client noisy True 321 Run session between server and client protocol instances over UNIX socket 322 path tempfile mktemp 323 from twisted internet import reactor324 f policies WrappingFactory protocol Factory 325 serverWrapper FireOnClose f server 326 f noisy noisy327 f buildProtocol lambda addr serverWrapper328 serverPort reactor listenUNIX path f 329 clientF LoopbackClientFactory client 33 clientF noisy noisy331 reactor connectUNIX path clientF 332 d clientF deferred333 d addCallback lambda x serverWrapper deferred 334 d addCallback lambda x serverPort stopListening 335 return d Note See TracBrowser for help on using the repository browser Download in other formats Plain Text Original Format Powered by Trac 1 1 By Edgewall Software All content copyright 2 7 2 8 by LUCI http luci ics uci edu ", "_id": "http://djp3-pc2.ics.uci.edu/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/loopback.py", "title": "\n      loopback.py in nomatic/tags/nomaticim-0.0.5/buddy_bots/src/twisted/protocols\n     \u2013 nomatic*im\n    ", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n  \n\n\n  <head>\n\t\t<title>\n      loopback.py in nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols\n     \u2013 Nomatic*IM\n    </title><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><link rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search\" /><link rel=\"help\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/loopback.py?format=txt\" type=\"text/plain\" title=\"Plain Text\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/loopback.py\" type=\"application/x-python; charset=iso-8859-15\" title=\"Original Format\" /><link rel=\"start\" href=\"/LUCICodeRepository/nomaticIM/wiki\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/code.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/pygments/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/browser.css\" type=\"text/css\" /><link rel=\"shortcut icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link rel=\"icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link type=\"application/opensearchdescription+xml\" rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search/opensearch\" title=\"Search Nomatic*IM\" /><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/jquery.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/babel.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/messages/en_US.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/trac.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/search.js\"></script><script type=\"text/javascript\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/folding.js\"></script><script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\".trac-toggledeleted\").show().click(function() {\n                  $(this).siblings().find(\".trac-deleted\").toggle();\n                  return false;\n        }).click();\n        $(\"#jumploc input\").hide();\n        $(\"#jumploc select\").change(function () {\n          this.parentNode.parentNode.submit();\n        });\n          $('#preview table.code').enableCollapsibleColumns($('#preview table.code thead th.content'));\n      });\n    </script>\n\t</head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://luci.ics.uci.edu/#code\"><img src=\"http://luci.ics.uci.edu/blog/archives/LUCIhorzTight.jpg\" alt=\"LUCI Code Repository\" /></a>\n      </div>\n      <form id=\"search\" action=\"/LUCICodeRepository/nomaticIM/search\" method=\"get\">\n        <div>\n          <label for=\"proj-search\">Search:</label>\n          <input type=\"text\" id=\"proj-search\" name=\"q\" size=\"18\" value=\"\" />\n          <input type=\"submit\" value=\"Search\" />\n        </div>\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/login\">Login</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/prefs\">Preferences</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\">Help/Guide</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/wiki\">Wiki</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/timeline\">Timeline</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/roadmap\">Roadmap</a></li><li class=\"active\"><a href=\"/LUCICodeRepository/nomaticIM/browser\">Browse Source</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/report\">View Tickets</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/search\">Search</a></li>\n    </ul>\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/buddy_bots/twisted/protocols/loopback.py?annotate=blame\" title=\"Annotate each line with the last changed revision (this can be time consuming...)\">Blame</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/log/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/loopback.py\">Revision Log</a></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"browser\">\n        <h1>\n          \n<a class=\"pathentry first\" href=\"/LUCICodeRepository/nomaticIM/browser?order=name\" title=\"Go to repository root\">source:</a>\n<a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic?order=name\" title=\"View nomatic\">nomatic</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags?order=name\" title=\"View tags\">tags</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5?order=name\" title=\"View NomaticIM-0.0.5\">NomaticIM-0.0.5</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots?order=name\" title=\"View buddy_bots\">buddy_bots</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src?order=name\" title=\"View src\">src</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted?order=name\" title=\"View twisted\">twisted</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols?order=name\" title=\"View protocols\">protocols</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/loopback.py?order=name\" title=\"View loopback.py\">loopback.py</a>\n<br style=\"clear: both\" />\n\n        </h1>\n        <div id=\"diffrev\">\n          <form action=\"/LUCICodeRepository/nomaticIM/changeset\" method=\"get\">\n            <div>\n              <label title=\"Show the diff against a specific revision\">\n                View diff against: <input type=\"text\" name=\"old\" size=\"6\" />\n                <input type=\"hidden\" name=\"old_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/loopback.py\" />\n                <input type=\"hidden\" name=\"new\" />\n                <input type=\"hidden\" name=\"new_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/loopback.py\" />\n              </label>\n            </div>\n          </form>\n        </div>\n        <div id=\"jumprev\">\n          <form action=\"\" method=\"get\">\n            <div>\n              <label for=\"rev\">\n                View revision:</label>\n              <input type=\"text\" id=\"rev\" name=\"rev\" size=\"6\" />\n            </div>\n          </form>\n        </div>\n        <div id=\"jumploc\">\n          <form action=\"\" method=\"get\">\n            <div class=\"buttons\">\n              <label for=\"preselected\">Visit:</label>\n              <select id=\"preselected\" name=\"preselected\">\n                <option selected=\"selected\"></option>\n                <optgroup label=\"branches\">\n                  <option value=\"/LUCICodeRepository/nomaticIM/browser/trunk\">trunk</option>\n                </optgroup>\n              </select>\n              <input type=\"submit\" value=\"Go!\" title=\"Jump to the chosen preselected path\" />\n            </div>\n          </form>\n        </div>\n        <div class=\"trac-tags\">\n        </div>\n      <table id=\"info\" summary=\"Revision info\">\n        <tr>\n          <th>\n                <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/nomatic/trunk/buddy_bots/twisted/protocols/loopback.py\" title=\"View differences\">Last change</a>\n                  on this file was\n                  <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/\" title=\"View changeset 712\">712</a>,\n                  checked in by cbaker, <a class=\"timeline\" href=\"/LUCICodeRepository/nomaticIM/timeline?from=2008-02-16T08%3A16%3A53-08%3A00&amp;precision=second\" title=\"See timeline at Feb 16, 2008, 8:16:53 AM\">7 years ago</a>\n          </th>\n        </tr>\n        <tr>\n          <td class=\"message searchable\">\n              <p>\nFirst draft of nomatic buddy bots. oscar_bot is functional if you give it good authentication credentials, jabber_bot is just an example from the web <br />\n</p>\n          </td>\n        </tr>\n        <tr><td colspan=\"2\">\n            <strong>File size:</strong>\n            <span title=\"10520 bytes\">10.3 KB</span>\n          </td></tr>\n      </table>\n      <div id=\"preview\" class=\"searchable\">\n        \n  <table class=\"code\"><thead><tr><th class=\"lineno\" title=\"Line numbers\">Line</th><th class=\"content\">\u00a0</th></tr></thead><tbody><tr><th id=\"L1\"><a href=\"#L1\">1</a></th><td><span class=\"c\"># -*- test-case-name: twisted.test.test_loopback -*-</span></td></tr><tr><th id=\"L2\"><a href=\"#L2\">2</a></th><td><span class=\"c\"># Copyright (c) 2001-2004 Twisted Matrix Laboratories.</span></td></tr><tr><th id=\"L3\"><a href=\"#L3\">3</a></th><td><span class=\"c\"># See LICENSE for details.</span></td></tr><tr><th id=\"L4\"><a href=\"#L4\">4</a></th><td></td></tr><tr><th id=\"L5\"><a href=\"#L5\">5</a></th><td></td></tr><tr><th id=\"L6\"><a href=\"#L6\">6</a></th><td><span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L7\"><a href=\"#L7\">7</a></th><td><span class=\"sd\">Testing support for protocols -- loopback between client and server.</span></td></tr><tr><th id=\"L8\"><a href=\"#L8\">8</a></th><td><span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L9\"><a href=\"#L9\">9</a></th><td></td></tr><tr><th id=\"L10\"><a href=\"#L10\">10</a></th><td><span class=\"c\"># system imports</span></td></tr><tr><th id=\"L11\"><a href=\"#L11\">11</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">tempfile</span></td></tr><tr><th id=\"L12\"><a href=\"#L12\">12</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">zope.interface</span>\u00a0<span class=\"kn\">import</span>\u00a0implements</td></tr><tr><th id=\"L13\"><a href=\"#L13\">13</a></th><td></td></tr><tr><th id=\"L14\"><a href=\"#L14\">14</a></th><td><span class=\"c\"># Twisted Imports</span></td></tr><tr><th id=\"L15\"><a href=\"#L15\">15</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.protocols</span>\u00a0<span class=\"kn\">import</span>\u00a0policies</td></tr><tr><th id=\"L16\"><a href=\"#L16\">16</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet</span>\u00a0<span class=\"kn\">import</span>\u00a0interfaces<span class=\"p\">,</span>\u00a0protocol<span class=\"p\">,</span>\u00a0main<span class=\"p\">,</span>\u00a0defer</td></tr><tr><th id=\"L17\"><a href=\"#L17\">17</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.python</span>\u00a0<span class=\"kn\">import</span>\u00a0failure</td></tr><tr><th id=\"L18\"><a href=\"#L18\">18</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet.interfaces</span>\u00a0<span class=\"kn\">import</span>\u00a0IAddress</td></tr><tr><th id=\"L19\"><a href=\"#L19\">19</a></th><td></td></tr><tr><th id=\"L20\"><a href=\"#L20\">20</a></th><td></td></tr><tr><th id=\"L21\"><a href=\"#L21\">21</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">_LoopbackQueue</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span></td></tr><tr><th id=\"L22\"><a href=\"#L22\">22</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L23\"><a href=\"#L23\">23</a></th><td><span class=\"sd\">\u00a0 \u00a0 Trivial wrapper around a list to give it an interface like a queue, which</span></td></tr><tr><th id=\"L24\"><a href=\"#L24\">24</a></th><td><span class=\"sd\">\u00a0 \u00a0 the addition of also sending notifications by way of a Deferred whenever</span></td></tr><tr><th id=\"L25\"><a href=\"#L25\">25</a></th><td><span class=\"sd\">\u00a0 \u00a0 the list has something added to it.</span></td></tr><tr><th id=\"L26\"><a href=\"#L26\">26</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L27\"><a href=\"#L27\">27</a></th><td></td></tr><tr><th id=\"L28\"><a href=\"#L28\">28</a></th><td>\u00a0 \u00a0 _notificationDeferred <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L29\"><a href=\"#L29\">29</a></th><td>\u00a0 \u00a0 disconnect <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L30\"><a href=\"#L30\">30</a></th><td></td></tr><tr><th id=\"L31\"><a href=\"#L31\">31</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L32\"><a href=\"#L32\">32</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_queue <span class=\"o\">=</span>\u00a0<span class=\"p\">[]</span></td></tr><tr><th id=\"L33\"><a href=\"#L33\">33</a></th><td></td></tr><tr><th id=\"L34\"><a href=\"#L34\">34</a></th><td></td></tr><tr><th id=\"L35\"><a href=\"#L35\">35</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">put</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0v<span class=\"p\">):</span></td></tr><tr><th id=\"L36\"><a href=\"#L36\">36</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_queue<span class=\"o\">.</span>append<span class=\"p\">(</span>v<span class=\"p\">)</span></td></tr><tr><th id=\"L37\"><a href=\"#L37\">37</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_notificationDeferred <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L38\"><a href=\"#L38\">38</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 d<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_notificationDeferred <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_notificationDeferred<span class=\"p\">,</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L39\"><a href=\"#L39\">39</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 d<span class=\"o\">.</span>callback<span class=\"p\">(</span><span class=\"bp\">None</span><span class=\"p\">)</span></td></tr><tr><th id=\"L40\"><a href=\"#L40\">40</a></th><td></td></tr><tr><th id=\"L41\"><a href=\"#L41\">41</a></th><td></td></tr><tr><th id=\"L42\"><a href=\"#L42\">42</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__nonzero__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L43\"><a href=\"#L43\">43</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"nb\">bool</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>_queue<span class=\"p\">)</span></td></tr><tr><th id=\"L44\"><a href=\"#L44\">44</a></th><td></td></tr><tr><th id=\"L45\"><a href=\"#L45\">45</a></th><td></td></tr><tr><th id=\"L46\"><a href=\"#L46\">46</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L47\"><a href=\"#L47\">47</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_queue<span class=\"o\">.</span>pop<span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span></td></tr><tr><th id=\"L48\"><a href=\"#L48\">48</a></th><td></td></tr><tr><th id=\"L49\"><a href=\"#L49\">49</a></th><td></td></tr><tr><th id=\"L50\"><a href=\"#L50\">50</a></th><td></td></tr><tr><th id=\"L51\"><a href=\"#L51\">51</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">_LoopbackAddress</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span></td></tr><tr><th id=\"L52\"><a href=\"#L52\">52</a></th><td>\u00a0 \u00a0 implements<span class=\"p\">(</span>IAddress<span class=\"p\">)</span></td></tr><tr><th id=\"L53\"><a href=\"#L53\">53</a></th><td></td></tr><tr><th id=\"L54\"><a href=\"#L54\">54</a></th><td></td></tr><tr><th id=\"L55\"><a href=\"#L55\">55</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">_LoopbackTransport</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span></td></tr><tr><th id=\"L56\"><a href=\"#L56\">56</a></th><td>\u00a0 \u00a0 implements<span class=\"p\">(</span>interfaces<span class=\"o\">.</span>ITransport<span class=\"p\">,</span>\u00a0interfaces<span class=\"o\">.</span>IConsumer<span class=\"p\">)</span></td></tr><tr><th id=\"L57\"><a href=\"#L57\">57</a></th><td></td></tr><tr><th id=\"L58\"><a href=\"#L58\">58</a></th><td>\u00a0 \u00a0 disconnecting <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L59\"><a href=\"#L59\">59</a></th><td>\u00a0 \u00a0 producer <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L60\"><a href=\"#L60\">60</a></th><td></td></tr><tr><th id=\"L61\"><a href=\"#L61\">61</a></th><td>\u00a0 \u00a0 <span class=\"c\"># ITransport</span></td></tr><tr><th id=\"L62\"><a href=\"#L62\">62</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0q<span class=\"p\">):</span></td></tr><tr><th id=\"L63\"><a href=\"#L63\">63</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>q <span class=\"o\">=</span>\u00a0q</td></tr><tr><th id=\"L64\"><a href=\"#L64\">64</a></th><td></td></tr><tr><th id=\"L65\"><a href=\"#L65\">65</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">write</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"nb\">bytes</span><span class=\"p\">):</span></td></tr><tr><th id=\"L66\"><a href=\"#L66\">66</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>q<span class=\"o\">.</span>put<span class=\"p\">(</span><span class=\"nb\">bytes</span><span class=\"p\">)</span></td></tr><tr><th id=\"L67\"><a href=\"#L67\">67</a></th><td></td></tr><tr><th id=\"L68\"><a href=\"#L68\">68</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">writeSequence</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0iovec<span class=\"p\">):</span></td></tr><tr><th id=\"L69\"><a href=\"#L69\">69</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>q<span class=\"o\">.</span>put<span class=\"p\">(</span><span class=\"s\">''</span><span class=\"o\">.</span>join<span class=\"p\">(</span>iovec<span class=\"p\">))</span></td></tr><tr><th id=\"L70\"><a href=\"#L70\">70</a></th><td></td></tr><tr><th id=\"L71\"><a href=\"#L71\">71</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">loseConnection</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L72\"><a href=\"#L72\">72</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>q<span class=\"o\">.</span>disconnect <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L73\"><a href=\"#L73\">73</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>q<span class=\"o\">.</span>put<span class=\"p\">(</span><span class=\"s\">''</span><span class=\"p\">)</span></td></tr><tr><th id=\"L74\"><a href=\"#L74\">74</a></th><td></td></tr><tr><th id=\"L75\"><a href=\"#L75\">75</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getPeer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L76\"><a href=\"#L76\">76</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0_LoopbackAddress<span class=\"p\">()</span></td></tr><tr><th id=\"L77\"><a href=\"#L77\">77</a></th><td></td></tr><tr><th id=\"L78\"><a href=\"#L78\">78</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getHost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L79\"><a href=\"#L79\">79</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0_LoopbackAddress<span class=\"p\">()</span></td></tr><tr><th id=\"L80\"><a href=\"#L80\">80</a></th><td></td></tr><tr><th id=\"L81\"><a href=\"#L81\">81</a></th><td>\u00a0 \u00a0 <span class=\"c\"># IConsumer</span></td></tr><tr><th id=\"L82\"><a href=\"#L82\">82</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">registerProducer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0producer<span class=\"p\">,</span>\u00a0streaming<span class=\"p\">):</span></td></tr><tr><th id=\"L83\"><a href=\"#L83\">83</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">assert</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>producer <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L84\"><a href=\"#L84\">84</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>producer <span class=\"o\">=</span>\u00a0producer</td></tr><tr><th id=\"L85\"><a href=\"#L85\">85</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>streamingProducer <span class=\"o\">=</span>\u00a0streaming</td></tr><tr><th id=\"L86\"><a href=\"#L86\">86</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_pollProducer<span class=\"p\">()</span></td></tr><tr><th id=\"L87\"><a href=\"#L87\">87</a></th><td></td></tr><tr><th id=\"L88\"><a href=\"#L88\">88</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">unregisterProducer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L89\"><a href=\"#L89\">89</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">assert</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>producer <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L90\"><a href=\"#L90\">90</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>producer <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L91\"><a href=\"#L91\">91</a></th><td></td></tr><tr><th id=\"L92\"><a href=\"#L92\">92</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_pollProducer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L93\"><a href=\"#L93\">93</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>producer <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span>\u00a0<span class=\"ow\">and</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>streamingProducer<span class=\"p\">:</span></td></tr><tr><th id=\"L94\"><a href=\"#L94\">94</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>producer<span class=\"o\">.</span>resumeProducing<span class=\"p\">()</span></td></tr><tr><th id=\"L95\"><a href=\"#L95\">95</a></th><td></td></tr><tr><th id=\"L96\"><a href=\"#L96\">96</a></th><td></td></tr><tr><th id=\"L97\"><a href=\"#L97\">97</a></th><td></td></tr><tr><th id=\"L98\"><a href=\"#L98\">98</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">loopbackAsync</span><span class=\"p\">(</span>server<span class=\"p\">,</span>\u00a0client<span class=\"p\">):</span></td></tr><tr><th id=\"L99\"><a href=\"#L99\">99</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L100\"><a href=\"#L100\">100</a></th><td><span class=\"sd\">\u00a0 \u00a0 Establish a connection between C{server} and C{client} then transfer data</span></td></tr><tr><th id=\"L101\"><a href=\"#L101\">101</a></th><td><span class=\"sd\">\u00a0 \u00a0 between them until the connection is closed. This is often useful for</span></td></tr><tr><th id=\"L102\"><a href=\"#L102\">102</a></th><td><span class=\"sd\">\u00a0 \u00a0 testing a protocol.</span></td></tr><tr><th id=\"L103\"><a href=\"#L103\">103</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L104\"><a href=\"#L104\">104</a></th><td><span class=\"sd\">\u00a0 \u00a0 @param server: The protocol instance representing the server-side of this</span></td></tr><tr><th id=\"L105\"><a href=\"#L105\">105</a></th><td><span class=\"sd\">\u00a0 \u00a0 connection.</span></td></tr><tr><th id=\"L106\"><a href=\"#L106\">106</a></th><td><span class=\"sd\">\u00a0 \u00a0 </span></td></tr><tr><th id=\"L107\"><a href=\"#L107\">107</a></th><td><span class=\"sd\">\u00a0 \u00a0 @param client: The protocol instance representing the client-side of this</span></td></tr><tr><th id=\"L108\"><a href=\"#L108\">108</a></th><td><span class=\"sd\">\u00a0 \u00a0 connection.</span></td></tr><tr><th id=\"L109\"><a href=\"#L109\">109</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L110\"><a href=\"#L110\">110</a></th><td><span class=\"sd\">\u00a0 \u00a0 @return: A L{Deferred} which fires when the connection has been closed and</span></td></tr><tr><th id=\"L111\"><a href=\"#L111\">111</a></th><td><span class=\"sd\">\u00a0 \u00a0 both sides have received notification of this.</span></td></tr><tr><th id=\"L112\"><a href=\"#L112\">112</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L113\"><a href=\"#L113\">113</a></th><td>\u00a0 \u00a0 serverToClient <span class=\"o\">=</span>\u00a0_LoopbackQueue<span class=\"p\">()</span></td></tr><tr><th id=\"L114\"><a href=\"#L114\">114</a></th><td>\u00a0 \u00a0 clientToServer <span class=\"o\">=</span>\u00a0_LoopbackQueue<span class=\"p\">()</span></td></tr><tr><th id=\"L115\"><a href=\"#L115\">115</a></th><td></td></tr><tr><th id=\"L116\"><a href=\"#L116\">116</a></th><td>\u00a0 \u00a0 server<span class=\"o\">.</span>makeConnection<span class=\"p\">(</span>_LoopbackTransport<span class=\"p\">(</span>serverToClient<span class=\"p\">))</span></td></tr><tr><th id=\"L117\"><a href=\"#L117\">117</a></th><td>\u00a0 \u00a0 client<span class=\"o\">.</span>makeConnection<span class=\"p\">(</span>_LoopbackTransport<span class=\"p\">(</span>clientToServer<span class=\"p\">))</span></td></tr><tr><th id=\"L118\"><a href=\"#L118\">118</a></th><td></td></tr><tr><th id=\"L119\"><a href=\"#L119\">119</a></th><td>\u00a0 \u00a0 <span class=\"k\">return</span>\u00a0_loopbackAsyncBody<span class=\"p\">(</span>server<span class=\"p\">,</span>\u00a0serverToClient<span class=\"p\">,</span>\u00a0client<span class=\"p\">,</span>\u00a0clientToServer<span class=\"p\">)</span></td></tr><tr><th id=\"L120\"><a href=\"#L120\">120</a></th><td></td></tr><tr><th id=\"L121\"><a href=\"#L121\">121</a></th><td></td></tr><tr><th id=\"L122\"><a href=\"#L122\">122</a></th><td></td></tr><tr><th id=\"L123\"><a href=\"#L123\">123</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">_loopbackAsyncBody</span><span class=\"p\">(</span>server<span class=\"p\">,</span>\u00a0serverToClient<span class=\"p\">,</span>\u00a0client<span class=\"p\">,</span>\u00a0clientToServer<span class=\"p\">):</span></td></tr><tr><th id=\"L124\"><a href=\"#L124\">124</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L125\"><a href=\"#L125\">125</a></th><td><span class=\"sd\">\u00a0 \u00a0 Transfer bytes from the output queue of each protocol to the input of the other.</span></td></tr><tr><th id=\"L126\"><a href=\"#L126\">126</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L127\"><a href=\"#L127\">127</a></th><td><span class=\"sd\">\u00a0 \u00a0 @param server: The protocol instance representing the server-side of this</span></td></tr><tr><th id=\"L128\"><a href=\"#L128\">128</a></th><td><span class=\"sd\">\u00a0 \u00a0 connection.</span></td></tr><tr><th id=\"L129\"><a href=\"#L129\">129</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L130\"><a href=\"#L130\">130</a></th><td><span class=\"sd\">\u00a0 \u00a0 @param serverToClient: The L{_LoopbackQueue} holding the server's output.</span></td></tr><tr><th id=\"L131\"><a href=\"#L131\">131</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L132\"><a href=\"#L132\">132</a></th><td><span class=\"sd\">\u00a0 \u00a0 @param client: The protocol instance representing the client-side of this</span></td></tr><tr><th id=\"L133\"><a href=\"#L133\">133</a></th><td><span class=\"sd\">\u00a0 \u00a0 connection.</span></td></tr><tr><th id=\"L134\"><a href=\"#L134\">134</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L135\"><a href=\"#L135\">135</a></th><td><span class=\"sd\">\u00a0 \u00a0 @param clientToServer: The L{_LoopbackQueue} holding the client's output.</span></td></tr><tr><th id=\"L136\"><a href=\"#L136\">136</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L137\"><a href=\"#L137\">137</a></th><td><span class=\"sd\">\u00a0 \u00a0 @return: A L{Deferred} which fires when the connection has been closed and</span></td></tr><tr><th id=\"L138\"><a href=\"#L138\">138</a></th><td><span class=\"sd\">\u00a0 \u00a0 both sides have received notification of this.</span></td></tr><tr><th id=\"L139\"><a href=\"#L139\">139</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L140\"><a href=\"#L140\">140</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">pump</span><span class=\"p\">(</span>source<span class=\"p\">,</span>\u00a0q<span class=\"p\">,</span>\u00a0target<span class=\"p\">):</span></td></tr><tr><th id=\"L141\"><a href=\"#L141\">141</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 sent <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L142\"><a href=\"#L142\">142</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">while</span>\u00a0q<span class=\"p\">:</span></td></tr><tr><th id=\"L143\"><a href=\"#L143\">143</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 sent <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L144\"><a href=\"#L144\">144</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">bytes</span>\u00a0<span class=\"o\">=</span>\u00a0q<span class=\"o\">.</span>get<span class=\"p\">()</span></td></tr><tr><th id=\"L145\"><a href=\"#L145\">145</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">bytes</span><span class=\"p\">:</span></td></tr><tr><th id=\"L146\"><a href=\"#L146\">146</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 target<span class=\"o\">.</span>dataReceived<span class=\"p\">(</span><span class=\"nb\">bytes</span><span class=\"p\">)</span></td></tr><tr><th id=\"L147\"><a href=\"#L147\">147</a></th><td></td></tr><tr><th id=\"L148\"><a href=\"#L148\">148</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># A write buffer has now been emptied.\u00a0 Give any producer on that side</span></td></tr><tr><th id=\"L149\"><a href=\"#L149\">149</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># an opportunity to produce more data.</span></td></tr><tr><th id=\"L150\"><a href=\"#L150\">150</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 source<span class=\"o\">.</span>transport<span class=\"o\">.</span>_pollProducer<span class=\"p\">()</span></td></tr><tr><th id=\"L151\"><a href=\"#L151\">151</a></th><td></td></tr><tr><th id=\"L152\"><a href=\"#L152\">152</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0sent</td></tr><tr><th id=\"L153\"><a href=\"#L153\">153</a></th><td></td></tr><tr><th id=\"L154\"><a href=\"#L154\">154</a></th><td>\u00a0 \u00a0 <span class=\"k\">while</span>\u00a0<span class=\"mi\">1</span><span class=\"p\">:</span></td></tr><tr><th id=\"L155\"><a href=\"#L155\">155</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 disconnect <span class=\"o\">=</span>\u00a0clientSent <span class=\"o\">=</span>\u00a0serverSent <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L156\"><a href=\"#L156\">156</a></th><td></td></tr><tr><th id=\"L157\"><a href=\"#L157\">157</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Deliver the data which has been written.</span></td></tr><tr><th id=\"L158\"><a href=\"#L158\">158</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 serverSent <span class=\"o\">=</span>\u00a0pump<span class=\"p\">(</span>server<span class=\"p\">,</span>\u00a0serverToClient<span class=\"p\">,</span>\u00a0client<span class=\"p\">)</span></td></tr><tr><th id=\"L159\"><a href=\"#L159\">159</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 clientSent <span class=\"o\">=</span>\u00a0pump<span class=\"p\">(</span>client<span class=\"p\">,</span>\u00a0clientToServer<span class=\"p\">,</span>\u00a0server<span class=\"p\">)</span></td></tr><tr><th id=\"L160\"><a href=\"#L160\">160</a></th><td></td></tr><tr><th id=\"L161\"><a href=\"#L161\">161</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0clientSent <span class=\"ow\">and</span>\u00a0<span class=\"ow\">not</span>\u00a0serverSent<span class=\"p\">:</span></td></tr><tr><th id=\"L162\"><a href=\"#L162\">162</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Neither side wrote any data.\u00a0 Wait for some new data to be added</span></td></tr><tr><th id=\"L163\"><a href=\"#L163\">163</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># before trying to do anything further.</span></td></tr><tr><th id=\"L164\"><a href=\"#L164\">164</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 d <span class=\"o\">=</span>\u00a0clientToServer<span class=\"o\">.</span>_notificationDeferred <span class=\"o\">=</span>\u00a0serverToClient<span class=\"o\">.</span>_notificationDeferred <span class=\"o\">=</span>\u00a0defer<span class=\"o\">.</span>Deferred<span class=\"p\">()</span></td></tr><tr><th id=\"L165\"><a href=\"#L165\">165</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 d<span class=\"o\">.</span>addCallback<span class=\"p\">(</span>_loopbackAsyncContinue<span class=\"p\">,</span>\u00a0server<span class=\"p\">,</span>\u00a0serverToClient<span class=\"p\">,</span>\u00a0client<span class=\"p\">,</span>\u00a0clientToServer<span class=\"p\">)</span></td></tr><tr><th id=\"L166\"><a href=\"#L166\">166</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0d</td></tr><tr><th id=\"L167\"><a href=\"#L167\">167</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0serverToClient<span class=\"o\">.</span>disconnect<span class=\"p\">:</span></td></tr><tr><th id=\"L168\"><a href=\"#L168\">168</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># The server wants to drop the connection.\u00a0 Flush any remaining</span></td></tr><tr><th id=\"L169\"><a href=\"#L169\">169</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># data it has.</span></td></tr><tr><th id=\"L170\"><a href=\"#L170\">170</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 disconnect <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L171\"><a href=\"#L171\">171</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 pump<span class=\"p\">(</span>server<span class=\"p\">,</span>\u00a0serverToClient<span class=\"p\">,</span>\u00a0client<span class=\"p\">)</span></td></tr><tr><th id=\"L172\"><a href=\"#L172\">172</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0clientToServer<span class=\"o\">.</span>disconnect<span class=\"p\">:</span></td></tr><tr><th id=\"L173\"><a href=\"#L173\">173</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># The client wants to drop the connection.\u00a0 Flush any remaining</span></td></tr><tr><th id=\"L174\"><a href=\"#L174\">174</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># data it has.</span></td></tr><tr><th id=\"L175\"><a href=\"#L175\">175</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 disconnect <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L176\"><a href=\"#L176\">176</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 pump<span class=\"p\">(</span>client<span class=\"p\">,</span>\u00a0clientToServer<span class=\"p\">,</span>\u00a0server<span class=\"p\">)</span></td></tr><tr><th id=\"L177\"><a href=\"#L177\">177</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0disconnect<span class=\"p\">:</span></td></tr><tr><th id=\"L178\"><a href=\"#L178\">178</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Someone wanted to disconnect, so okay, the connection is gone.</span></td></tr><tr><th id=\"L179\"><a href=\"#L179\">179</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 server<span class=\"o\">.</span>connectionLost<span class=\"p\">(</span>failure<span class=\"o\">.</span>Failure<span class=\"p\">(</span>main<span class=\"o\">.</span>CONNECTION_DONE<span class=\"p\">))</span></td></tr><tr><th id=\"L180\"><a href=\"#L180\">180</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 client<span class=\"o\">.</span>connectionLost<span class=\"p\">(</span>failure<span class=\"o\">.</span>Failure<span class=\"p\">(</span>main<span class=\"o\">.</span>CONNECTION_DONE<span class=\"p\">))</span></td></tr><tr><th id=\"L181\"><a href=\"#L181\">181</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0defer<span class=\"o\">.</span>succeed<span class=\"p\">(</span><span class=\"bp\">None</span><span class=\"p\">)</span></td></tr><tr><th id=\"L182\"><a href=\"#L182\">182</a></th><td></td></tr><tr><th id=\"L183\"><a href=\"#L183\">183</a></th><td></td></tr><tr><th id=\"L184\"><a href=\"#L184\">184</a></th><td></td></tr><tr><th id=\"L185\"><a href=\"#L185\">185</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">_loopbackAsyncContinue</span><span class=\"p\">(</span>ignored<span class=\"p\">,</span>\u00a0server<span class=\"p\">,</span>\u00a0serverToClient<span class=\"p\">,</span>\u00a0client<span class=\"p\">,</span>\u00a0clientToServer<span class=\"p\">):</span></td></tr><tr><th id=\"L186\"><a href=\"#L186\">186</a></th><td>\u00a0 \u00a0 <span class=\"c\"># Clear the Deferred from each message queue, since it has already fired</span></td></tr><tr><th id=\"L187\"><a href=\"#L187\">187</a></th><td>\u00a0 \u00a0 <span class=\"c\"># and cannot be used again.</span></td></tr><tr><th id=\"L188\"><a href=\"#L188\">188</a></th><td>\u00a0 \u00a0 clientToServer<span class=\"o\">.</span>_notificationDeferred <span class=\"o\">=</span>\u00a0serverToClient<span class=\"o\">.</span>_notificationDeferred <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L189\"><a href=\"#L189\">189</a></th><td></td></tr><tr><th id=\"L190\"><a href=\"#L190\">190</a></th><td>\u00a0 \u00a0 <span class=\"c\"># Push some more bytes around.</span></td></tr><tr><th id=\"L191\"><a href=\"#L191\">191</a></th><td>\u00a0 \u00a0 <span class=\"k\">return</span>\u00a0_loopbackAsyncBody<span class=\"p\">(</span>server<span class=\"p\">,</span>\u00a0serverToClient<span class=\"p\">,</span>\u00a0client<span class=\"p\">,</span>\u00a0clientToServer<span class=\"p\">)</span></td></tr><tr><th id=\"L192\"><a href=\"#L192\">192</a></th><td></td></tr><tr><th id=\"L193\"><a href=\"#L193\">193</a></th><td></td></tr><tr><th id=\"L194\"><a href=\"#L194\">194</a></th><td></td></tr><tr><th id=\"L195\"><a href=\"#L195\">195</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">LoopbackRelay</span><span class=\"p\">:</span></td></tr><tr><th id=\"L196\"><a href=\"#L196\">196</a></th><td></td></tr><tr><th id=\"L197\"><a href=\"#L197\">197</a></th><td>\u00a0 \u00a0 implements<span class=\"p\">(</span>interfaces<span class=\"o\">.</span>ITransport<span class=\"p\">,</span>\u00a0interfaces<span class=\"o\">.</span>IConsumer<span class=\"p\">)</span></td></tr><tr><th id=\"L198\"><a href=\"#L198\">198</a></th><td></td></tr><tr><th id=\"L199\"><a href=\"#L199\">199</a></th><td>\u00a0 \u00a0 <span class=\"nb\">buffer</span>\u00a0<span class=\"o\">=</span>\u00a0<span class=\"s\">''</span></td></tr><tr><th id=\"L200\"><a href=\"#L200\">200</a></th><td>\u00a0 \u00a0 shouldLose <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L201\"><a href=\"#L201\">201</a></th><td>\u00a0 \u00a0 disconnecting <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L202\"><a href=\"#L202\">202</a></th><td>\u00a0 \u00a0 producer <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L203\"><a href=\"#L203\">203</a></th><td></td></tr><tr><th id=\"L204\"><a href=\"#L204\">204</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0target<span class=\"p\">,</span>\u00a0logFile<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L205\"><a href=\"#L205\">205</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>target <span class=\"o\">=</span>\u00a0target</td></tr><tr><th id=\"L206\"><a href=\"#L206\">206</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>logFile <span class=\"o\">=</span>\u00a0logFile</td></tr><tr><th id=\"L207\"><a href=\"#L207\">207</a></th><td></td></tr><tr><th id=\"L208\"><a href=\"#L208\">208</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">write</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0data<span class=\"p\">):</span></td></tr><tr><th id=\"L209\"><a href=\"#L209\">209</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>buffer <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>buffer <span class=\"o\">+</span>\u00a0data</td></tr><tr><th id=\"L210\"><a href=\"#L210\">210</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>logFile<span class=\"p\">:</span></td></tr><tr><th id=\"L211\"><a href=\"#L211\">211</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>logFile<span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"s\">\"loopback writing </span><span class=\"si\">%s</span><span class=\"se\">\\n</span><span class=\"s\">\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"nb\">repr</span><span class=\"p\">(</span>data<span class=\"p\">))</span></td></tr><tr><th id=\"L212\"><a href=\"#L212\">212</a></th><td></td></tr><tr><th id=\"L213\"><a href=\"#L213\">213</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">writeSequence</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0iovec<span class=\"p\">):</span></td></tr><tr><th id=\"L214\"><a href=\"#L214\">214</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"s\">\"\"</span><span class=\"o\">.</span>join<span class=\"p\">(</span>iovec<span class=\"p\">))</span></td></tr><tr><th id=\"L215\"><a href=\"#L215\">215</a></th><td></td></tr><tr><th id=\"L216\"><a href=\"#L216\">216</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">clearBuffer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L217\"><a href=\"#L217\">217</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>shouldLose <span class=\"o\">==</span>\u00a0<span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">:</span></td></tr><tr><th id=\"L218\"><a href=\"#L218\">218</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span></td></tr><tr><th id=\"L219\"><a href=\"#L219\">219</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 </td></tr><tr><th id=\"L220\"><a href=\"#L220\">220</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>producer<span class=\"p\">:</span></td></tr><tr><th id=\"L221\"><a href=\"#L221\">221</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>producer<span class=\"o\">.</span>resumeProducing<span class=\"p\">()</span></td></tr><tr><th id=\"L222\"><a href=\"#L222\">222</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>buffer<span class=\"p\">:</span></td></tr><tr><th id=\"L223\"><a href=\"#L223\">223</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>logFile<span class=\"p\">:</span></td></tr><tr><th id=\"L224\"><a href=\"#L224\">224</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>logFile<span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"s\">\"loopback receiving </span><span class=\"si\">%s</span><span class=\"se\">\\n</span><span class=\"s\">\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>buffer<span class=\"p\">))</span></td></tr><tr><th id=\"L225\"><a href=\"#L225\">225</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">buffer</span>\u00a0<span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>buffer</td></tr><tr><th id=\"L226\"><a href=\"#L226\">226</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>buffer <span class=\"o\">=</span>\u00a0<span class=\"s\">''</span></td></tr><tr><th id=\"L227\"><a href=\"#L227\">227</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>target<span class=\"o\">.</span>dataReceived<span class=\"p\">(</span><span class=\"nb\">buffer</span><span class=\"p\">)</span></td></tr><tr><th id=\"L228\"><a href=\"#L228\">228</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>shouldLose <span class=\"o\">==</span>\u00a0<span class=\"mi\">1</span><span class=\"p\">:</span></td></tr><tr><th id=\"L229\"><a href=\"#L229\">229</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>shouldLose <span class=\"o\">=</span>\u00a0<span class=\"o\">-</span><span class=\"mi\">1</span></td></tr><tr><th id=\"L230\"><a href=\"#L230\">230</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>target<span class=\"o\">.</span>connectionLost<span class=\"p\">(</span>failure<span class=\"o\">.</span>Failure<span class=\"p\">(</span>main<span class=\"o\">.</span>CONNECTION_DONE<span class=\"p\">))</span></td></tr><tr><th id=\"L231\"><a href=\"#L231\">231</a></th><td></td></tr><tr><th id=\"L232\"><a href=\"#L232\">232</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">loseConnection</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L233\"><a href=\"#L233\">233</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>shouldLose <span class=\"o\">!=</span>\u00a0<span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">:</span></td></tr><tr><th id=\"L234\"><a href=\"#L234\">234</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>shouldLose <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L235\"><a href=\"#L235\">235</a></th><td></td></tr><tr><th id=\"L236\"><a href=\"#L236\">236</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getHost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L237\"><a href=\"#L237\">237</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"s\">'loopback'</span></td></tr><tr><th id=\"L238\"><a href=\"#L238\">238</a></th><td></td></tr><tr><th id=\"L239\"><a href=\"#L239\">239</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getPeer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L240\"><a href=\"#L240\">240</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"s\">'loopback'</span></td></tr><tr><th id=\"L241\"><a href=\"#L241\">241</a></th><td></td></tr><tr><th id=\"L242\"><a href=\"#L242\">242</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">registerProducer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0producer<span class=\"p\">,</span>\u00a0streaming<span class=\"p\">):</span></td></tr><tr><th id=\"L243\"><a href=\"#L243\">243</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>producer <span class=\"o\">=</span>\u00a0producer</td></tr><tr><th id=\"L244\"><a href=\"#L244\">244</a></th><td></td></tr><tr><th id=\"L245\"><a href=\"#L245\">245</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">unregisterProducer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L246\"><a href=\"#L246\">246</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>producer <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L247\"><a href=\"#L247\">247</a></th><td></td></tr><tr><th id=\"L248\"><a href=\"#L248\">248</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">logPrefix</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L249\"><a href=\"#L249\">249</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"s\">'Loopback(</span><span class=\"si\">%r</span><span class=\"s\">)'</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>target<span class=\"o\">.</span>__class__<span class=\"o\">.</span>__name__<span class=\"p\">,)</span></td></tr><tr><th id=\"L250\"><a href=\"#L250\">250</a></th><td></td></tr><tr><th id=\"L251\"><a href=\"#L251\">251</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">loopback</span><span class=\"p\">(</span>server<span class=\"p\">,</span>\u00a0client<span class=\"p\">,</span>\u00a0logFile<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L252\"><a href=\"#L252\">252</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Run session between server and client.</span></td></tr><tr><th id=\"L253\"><a href=\"#L253\">253</a></th><td><span class=\"sd\">\u00a0 \u00a0 DEPRECATED in Twisted 2.5. Use loopbackAsync instead.</span></td></tr><tr><th id=\"L254\"><a href=\"#L254\">254</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L255\"><a href=\"#L255\">255</a></th><td>\u00a0 \u00a0 <span class=\"kn\">import</span>\u00a0<span class=\"nn\">warnings</span></td></tr><tr><th id=\"L256\"><a href=\"#L256\">256</a></th><td>\u00a0 \u00a0 warnings<span class=\"o\">.</span>warn<span class=\"p\">(</span><span class=\"s\">'loopback() is deprecated (since Twisted 2.5). '</span></td></tr><tr><th id=\"L257\"><a href=\"#L257\">257</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">'Use loopbackAsync() instead.'</span><span class=\"p\">,</span></td></tr><tr><th id=\"L258\"><a href=\"#L258\">258</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 stacklevel<span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\u00a0category<span class=\"o\">=</span><span class=\"ne\">DeprecationWarning</span><span class=\"p\">)</span></td></tr><tr><th id=\"L259\"><a href=\"#L259\">259</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet</span>\u00a0<span class=\"kn\">import</span>\u00a0reactor</td></tr><tr><th id=\"L260\"><a href=\"#L260\">260</a></th><td>\u00a0 \u00a0 serverToClient <span class=\"o\">=</span>\u00a0LoopbackRelay<span class=\"p\">(</span>client<span class=\"p\">,</span>\u00a0logFile<span class=\"p\">)</span></td></tr><tr><th id=\"L261\"><a href=\"#L261\">261</a></th><td>\u00a0 \u00a0 clientToServer <span class=\"o\">=</span>\u00a0LoopbackRelay<span class=\"p\">(</span>server<span class=\"p\">,</span>\u00a0logFile<span class=\"p\">)</span></td></tr><tr><th id=\"L262\"><a href=\"#L262\">262</a></th><td>\u00a0 \u00a0 server<span class=\"o\">.</span>makeConnection<span class=\"p\">(</span>serverToClient<span class=\"p\">)</span></td></tr><tr><th id=\"L263\"><a href=\"#L263\">263</a></th><td>\u00a0 \u00a0 client<span class=\"o\">.</span>makeConnection<span class=\"p\">(</span>clientToServer<span class=\"p\">)</span></td></tr><tr><th id=\"L264\"><a href=\"#L264\">264</a></th><td>\u00a0 \u00a0 <span class=\"k\">while</span>\u00a0<span class=\"mi\">1</span><span class=\"p\">:</span></td></tr><tr><th id=\"L265\"><a href=\"#L265\">265</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 reactor<span class=\"o\">.</span>iterate<span class=\"p\">(</span><span class=\"mf\">0.01</span><span class=\"p\">)</span>\u00a0<span class=\"c\"># this is to clear any deferreds</span></td></tr><tr><th id=\"L266\"><a href=\"#L266\">266</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 serverToClient<span class=\"o\">.</span>clearBuffer<span class=\"p\">()</span></td></tr><tr><th id=\"L267\"><a href=\"#L267\">267</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 clientToServer<span class=\"o\">.</span>clearBuffer<span class=\"p\">()</span></td></tr><tr><th id=\"L268\"><a href=\"#L268\">268</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0serverToClient<span class=\"o\">.</span>shouldLose<span class=\"p\">:</span></td></tr><tr><th id=\"L269\"><a href=\"#L269\">269</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 serverToClient<span class=\"o\">.</span>clearBuffer<span class=\"p\">()</span></td></tr><tr><th id=\"L270\"><a href=\"#L270\">270</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 server<span class=\"o\">.</span>connectionLost<span class=\"p\">(</span>failure<span class=\"o\">.</span>Failure<span class=\"p\">(</span>main<span class=\"o\">.</span>CONNECTION_DONE<span class=\"p\">))</span></td></tr><tr><th id=\"L271\"><a href=\"#L271\">271</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">break</span></td></tr><tr><th id=\"L272\"><a href=\"#L272\">272</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0clientToServer<span class=\"o\">.</span>shouldLose<span class=\"p\">:</span></td></tr><tr><th id=\"L273\"><a href=\"#L273\">273</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 client<span class=\"o\">.</span>connectionLost<span class=\"p\">(</span>failure<span class=\"o\">.</span>Failure<span class=\"p\">(</span>main<span class=\"o\">.</span>CONNECTION_DONE<span class=\"p\">))</span></td></tr><tr><th id=\"L274\"><a href=\"#L274\">274</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">break</span></td></tr><tr><th id=\"L275\"><a href=\"#L275\">275</a></th><td>\u00a0 \u00a0 reactor<span class=\"o\">.</span>iterate<span class=\"p\">()</span>\u00a0<span class=\"c\"># last gasp before I go away</span></td></tr><tr><th id=\"L276\"><a href=\"#L276\">276</a></th><td></td></tr><tr><th id=\"L277\"><a href=\"#L277\">277</a></th><td></td></tr><tr><th id=\"L278\"><a href=\"#L278\">278</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">LoopbackClientFactory</span><span class=\"p\">(</span>protocol<span class=\"o\">.</span>ClientFactory<span class=\"p\">):</span></td></tr><tr><th id=\"L279\"><a href=\"#L279\">279</a></th><td></td></tr><tr><th id=\"L280\"><a href=\"#L280\">280</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0protocol<span class=\"p\">):</span></td></tr><tr><th id=\"L281\"><a href=\"#L281\">281</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>disconnected <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L282\"><a href=\"#L282\">282</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>deferred <span class=\"o\">=</span>\u00a0defer<span class=\"o\">.</span>Deferred<span class=\"p\">()</span></td></tr><tr><th id=\"L283\"><a href=\"#L283\">283</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>protocol <span class=\"o\">=</span>\u00a0protocol</td></tr><tr><th id=\"L284\"><a href=\"#L284\">284</a></th><td></td></tr><tr><th id=\"L285\"><a href=\"#L285\">285</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">buildProtocol</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0addr<span class=\"p\">):</span></td></tr><tr><th id=\"L286\"><a href=\"#L286\">286</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>protocol</td></tr><tr><th id=\"L287\"><a href=\"#L287\">287</a></th><td></td></tr><tr><th id=\"L288\"><a href=\"#L288\">288</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">clientConnectionLost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0connector<span class=\"p\">,</span>\u00a0reason<span class=\"p\">):</span></td></tr><tr><th id=\"L289\"><a href=\"#L289\">289</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>disconnected <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L290\"><a href=\"#L290\">290</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>deferred<span class=\"o\">.</span>callback<span class=\"p\">(</span><span class=\"bp\">None</span><span class=\"p\">)</span></td></tr><tr><th id=\"L291\"><a href=\"#L291\">291</a></th><td></td></tr><tr><th id=\"L292\"><a href=\"#L292\">292</a></th><td></td></tr><tr><th id=\"L293\"><a href=\"#L293\">293</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">_FireOnClose</span><span class=\"p\">(</span>policies<span class=\"o\">.</span>ProtocolWrapper<span class=\"p\">):</span></td></tr><tr><th id=\"L294\"><a href=\"#L294\">294</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0protocol<span class=\"p\">,</span>\u00a0factory<span class=\"p\">):</span></td></tr><tr><th id=\"L295\"><a href=\"#L295\">295</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 policies<span class=\"o\">.</span>ProtocolWrapper<span class=\"o\">.</span>__init__<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0protocol<span class=\"p\">,</span>\u00a0factory<span class=\"p\">)</span></td></tr><tr><th id=\"L296\"><a href=\"#L296\">296</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>deferred <span class=\"o\">=</span>\u00a0defer<span class=\"o\">.</span>Deferred<span class=\"p\">()</span></td></tr><tr><th id=\"L297\"><a href=\"#L297\">297</a></th><td></td></tr><tr><th id=\"L298\"><a href=\"#L298\">298</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectionLost</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reason<span class=\"p\">):</span></td></tr><tr><th id=\"L299\"><a href=\"#L299\">299</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 policies<span class=\"o\">.</span>ProtocolWrapper<span class=\"o\">.</span>connectionLost<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0reason<span class=\"p\">)</span></td></tr><tr><th id=\"L300\"><a href=\"#L300\">300</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>deferred<span class=\"o\">.</span>callback<span class=\"p\">(</span><span class=\"bp\">None</span><span class=\"p\">)</span></td></tr><tr><th id=\"L301\"><a href=\"#L301\">301</a></th><td></td></tr><tr><th id=\"L302\"><a href=\"#L302\">302</a></th><td></td></tr><tr><th id=\"L303\"><a href=\"#L303\">303</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">loopbackTCP</span><span class=\"p\">(</span>server<span class=\"p\">,</span>\u00a0client<span class=\"p\">,</span>\u00a0port<span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\u00a0noisy<span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">):</span></td></tr><tr><th id=\"L304\"><a href=\"#L304\">304</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Run session between server and client protocol instances over TCP.\"\"\"</span></td></tr><tr><th id=\"L305\"><a href=\"#L305\">305</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet</span>\u00a0<span class=\"kn\">import</span>\u00a0reactor</td></tr><tr><th id=\"L306\"><a href=\"#L306\">306</a></th><td>\u00a0 \u00a0 f <span class=\"o\">=</span>\u00a0policies<span class=\"o\">.</span>WrappingFactory<span class=\"p\">(</span>protocol<span class=\"o\">.</span>Factory<span class=\"p\">())</span></td></tr><tr><th id=\"L307\"><a href=\"#L307\">307</a></th><td>\u00a0 \u00a0 serverWrapper <span class=\"o\">=</span>\u00a0_FireOnClose<span class=\"p\">(</span>f<span class=\"p\">,</span>\u00a0server<span class=\"p\">)</span></td></tr><tr><th id=\"L308\"><a href=\"#L308\">308</a></th><td>\u00a0 \u00a0 f<span class=\"o\">.</span>noisy <span class=\"o\">=</span>\u00a0noisy</td></tr><tr><th id=\"L309\"><a href=\"#L309\">309</a></th><td>\u00a0 \u00a0 f<span class=\"o\">.</span>buildProtocol <span class=\"o\">=</span>\u00a0<span class=\"k\">lambda</span>\u00a0addr<span class=\"p\">:</span>\u00a0serverWrapper</td></tr><tr><th id=\"L310\"><a href=\"#L310\">310</a></th><td>\u00a0 \u00a0 serverPort <span class=\"o\">=</span>\u00a0reactor<span class=\"o\">.</span>listenTCP<span class=\"p\">(</span>port<span class=\"p\">,</span>\u00a0f<span class=\"p\">,</span>\u00a0interface<span class=\"o\">=</span><span class=\"s\">'127.0.0.1'</span><span class=\"p\">)</span></td></tr><tr><th id=\"L311\"><a href=\"#L311\">311</a></th><td>\u00a0 \u00a0 clientF <span class=\"o\">=</span>\u00a0LoopbackClientFactory<span class=\"p\">(</span>client<span class=\"p\">)</span></td></tr><tr><th id=\"L312\"><a href=\"#L312\">312</a></th><td>\u00a0 \u00a0 clientF<span class=\"o\">.</span>noisy <span class=\"o\">=</span>\u00a0noisy</td></tr><tr><th id=\"L313\"><a href=\"#L313\">313</a></th><td>\u00a0 \u00a0 reactor<span class=\"o\">.</span>connectTCP<span class=\"p\">(</span><span class=\"s\">'127.0.0.1'</span><span class=\"p\">,</span>\u00a0serverPort<span class=\"o\">.</span>getHost<span class=\"p\">()</span><span class=\"o\">.</span>port<span class=\"p\">,</span>\u00a0clientF<span class=\"p\">)</span></td></tr><tr><th id=\"L314\"><a href=\"#L314\">314</a></th><td>\u00a0 \u00a0 d <span class=\"o\">=</span>\u00a0clientF<span class=\"o\">.</span>deferred</td></tr><tr><th id=\"L315\"><a href=\"#L315\">315</a></th><td>\u00a0 \u00a0 d<span class=\"o\">.</span>addCallback<span class=\"p\">(</span><span class=\"k\">lambda</span>\u00a0x<span class=\"p\">:</span>\u00a0serverWrapper<span class=\"o\">.</span>deferred<span class=\"p\">)</span></td></tr><tr><th id=\"L316\"><a href=\"#L316\">316</a></th><td>\u00a0 \u00a0 d<span class=\"o\">.</span>addCallback<span class=\"p\">(</span><span class=\"k\">lambda</span>\u00a0x<span class=\"p\">:</span>\u00a0serverPort<span class=\"o\">.</span>stopListening<span class=\"p\">())</span></td></tr><tr><th id=\"L317\"><a href=\"#L317\">317</a></th><td>\u00a0 \u00a0 <span class=\"k\">return</span>\u00a0d</td></tr><tr><th id=\"L318\"><a href=\"#L318\">318</a></th><td></td></tr><tr><th id=\"L319\"><a href=\"#L319\">319</a></th><td></td></tr><tr><th id=\"L320\"><a href=\"#L320\">320</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">loopbackUNIX</span><span class=\"p\">(</span>server<span class=\"p\">,</span>\u00a0client<span class=\"p\">,</span>\u00a0noisy<span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">):</span></td></tr><tr><th id=\"L321\"><a href=\"#L321\">321</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Run session between server and client protocol instances over UNIX socket.\"\"\"</span></td></tr><tr><th id=\"L322\"><a href=\"#L322\">322</a></th><td>\u00a0 \u00a0 path <span class=\"o\">=</span>\u00a0tempfile<span class=\"o\">.</span>mktemp<span class=\"p\">()</span></td></tr><tr><th id=\"L323\"><a href=\"#L323\">323</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet</span>\u00a0<span class=\"kn\">import</span>\u00a0reactor</td></tr><tr><th id=\"L324\"><a href=\"#L324\">324</a></th><td>\u00a0 \u00a0 f <span class=\"o\">=</span>\u00a0policies<span class=\"o\">.</span>WrappingFactory<span class=\"p\">(</span>protocol<span class=\"o\">.</span>Factory<span class=\"p\">())</span></td></tr><tr><th id=\"L325\"><a href=\"#L325\">325</a></th><td>\u00a0 \u00a0 serverWrapper <span class=\"o\">=</span>\u00a0_FireOnClose<span class=\"p\">(</span>f<span class=\"p\">,</span>\u00a0server<span class=\"p\">)</span></td></tr><tr><th id=\"L326\"><a href=\"#L326\">326</a></th><td>\u00a0 \u00a0 f<span class=\"o\">.</span>noisy <span class=\"o\">=</span>\u00a0noisy</td></tr><tr><th id=\"L327\"><a href=\"#L327\">327</a></th><td>\u00a0 \u00a0 f<span class=\"o\">.</span>buildProtocol <span class=\"o\">=</span>\u00a0<span class=\"k\">lambda</span>\u00a0addr<span class=\"p\">:</span>\u00a0serverWrapper</td></tr><tr><th id=\"L328\"><a href=\"#L328\">328</a></th><td>\u00a0 \u00a0 serverPort <span class=\"o\">=</span>\u00a0reactor<span class=\"o\">.</span>listenUNIX<span class=\"p\">(</span>path<span class=\"p\">,</span>\u00a0f<span class=\"p\">)</span></td></tr><tr><th id=\"L329\"><a href=\"#L329\">329</a></th><td>\u00a0 \u00a0 clientF <span class=\"o\">=</span>\u00a0LoopbackClientFactory<span class=\"p\">(</span>client<span class=\"p\">)</span></td></tr><tr><th id=\"L330\"><a href=\"#L330\">330</a></th><td>\u00a0 \u00a0 clientF<span class=\"o\">.</span>noisy <span class=\"o\">=</span>\u00a0noisy</td></tr><tr><th id=\"L331\"><a href=\"#L331\">331</a></th><td>\u00a0 \u00a0 reactor<span class=\"o\">.</span>connectUNIX<span class=\"p\">(</span>path<span class=\"p\">,</span>\u00a0clientF<span class=\"p\">)</span></td></tr><tr><th id=\"L332\"><a href=\"#L332\">332</a></th><td>\u00a0 \u00a0 d <span class=\"o\">=</span>\u00a0clientF<span class=\"o\">.</span>deferred</td></tr><tr><th id=\"L333\"><a href=\"#L333\">333</a></th><td>\u00a0 \u00a0 d<span class=\"o\">.</span>addCallback<span class=\"p\">(</span><span class=\"k\">lambda</span>\u00a0x<span class=\"p\">:</span>\u00a0serverWrapper<span class=\"o\">.</span>deferred<span class=\"p\">)</span></td></tr><tr><th id=\"L334\"><a href=\"#L334\">334</a></th><td>\u00a0 \u00a0 d<span class=\"o\">.</span>addCallback<span class=\"p\">(</span><span class=\"k\">lambda</span>\u00a0x<span class=\"p\">:</span>\u00a0serverPort<span class=\"o\">.</span>stopListening<span class=\"p\">())</span></td></tr><tr><th id=\"L335\"><a href=\"#L335\">335</a></th><td>\u00a0 \u00a0 <span class=\"k\">return</span>\u00a0d</td></tr></tbody></table>\n\n      </div>\n      <div id=\"anydiff\">\n        <form action=\"/LUCICodeRepository/nomaticIM/diff\" method=\"get\">\n          <div class=\"buttons\">\n            <input type=\"hidden\" name=\"new_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/loopback.py\" />\n            <input type=\"hidden\" name=\"old_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/loopback.py\" />\n            <input type=\"hidden\" name=\"new_rev\" />\n            <input type=\"hidden\" name=\"old_rev\" />\n            <input type=\"submit\" value=\"View changes...\" title=\"Select paths and revs for Diff\" />\n          </div>\n        </form>\n      </div>\n      <div id=\"help\"><strong>Note:</strong> See <a href=\"/LUCICodeRepository/nomaticIM/wiki/TracBrowser\">TracBrowser</a>\n        for help on using the repository browser.</div>\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"first\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/loopback.py?format=txt\">Plain Text</a>\n        </li><li class=\"last\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/loopback.py\">Original Format</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/LUCICodeRepository/nomaticIM/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/LUCICodeRepository/nomaticIM/about\"><strong>Trac 1.0.1</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">All content copyright 2007-2008 by LUCI <br /><a href=\"http://luci.ics.uci.edu/\">http://luci.ics.uci.edu/</a></p>\n    </div>\n\t\t<div id=\"sitefooter\">\n\t\t\t<script src=\"http://www.google-analytics.com/urchin.js\" type=\"text/javascript\">\n\t\t\t</script>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t\t_uacct = \"UA-338915-2\";\n\t\t\t\turchinTracker();\n\t\t\t</script>\n\t\t</div>\n\t</body>\n</html>", "id": 44205.0}