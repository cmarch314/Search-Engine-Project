{"text": "View Javadoc 1 2 Copyright c 2 3 Regents of the University of California 3 All rights reserved 4 5 6 The Apache Software License Version 1 1 7 8 Redistribution and use in source and binary forms with or without 9 modification are permitted provided that the following conditions 1 are met 11 12 1 Redistributions of source code must retain the above copyright 13 notice this list of conditions and the following disclaimer 14 15 2 Redistributions in binary form must reproduce the above copyright 16 notice this list of conditions and the following disclaimer in 17 the documentation and or other materials provided with the 18 distribution 19 2 3 The end user documentation included with the redistribution if 21 any must include the following acknowledgment 22 This product includes software developed by 23 the Institute for Software Research at 24 University of California Irvine 25 Alternately this acknowledgment may appear in the software 26 itself if and wherever such third party acknowledgments normally 27 appear 28 29 4 The names YANCEES Institute for Software Research and 3 University of California must not be used to 31 endorse or promote products derived from this software without 32 prior written permission For written permission please contact 33 rsilvafi ics uci edu or redmiles ics uci edu 34 35 5 Products derived from this software may not be called 36 YANCEES nor may YANCEES appear in their name without 37 prior written permission of the University of California Regents 38 39 THIS SOFTWARE IS PROVIDED AS IS AND ANY EXPRESSED OR IMPLIED 4 WARRANTIES INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF 41 MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED 42 IN NO EVENT SHALL THE INSTITUTE FOR SOFTWARE RESEARCH AT THE UNIVERSITY 43 OF CALIFORNIA IRVINE OR ITS CONTRIBUTORS BE LIABLE FOR 44 ANY DIRECT INDIRECT INCIDENTAL SPECIAL EXEMPLARY OR 45 CONSEQUENTIAL DAMAGES INCLUDING BUT NOT LIMITED TO PROCUREMENT OF 46 SUBSTITUTE GOODS OR SERVICES LOSS OF USE DATA OR PROFITS OR 47 BUSINESS INTERRUPTION HOWEVER CAUSED AND ON ANY THEORY OF 48 LIABILITY WHETHER IN CONTRACT STRICT LIABILITY OR TORT INCLUDING 49 NEGLIGENCE OR OTHERWISE ARISING IN ANY WAY OUT OF THE USE OF THIS 5 SOFTWARE EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE 51 52 53 54 package edu uci isr impromptu pocketpc 55 56 import java io File 57 import java net InetAddress 58 import java net MalformedURLException 59 import java net UnknownHostException 6 import java rmi Naming 61 import java rmi RemoteException 62 import java rmi registry LocateRegistry 63 import java rmi registry Registry 64 65 import edu uci isr impromptu common Utils 66 import edu uci isr yancees EventInterface 67 import edu uci isr yancees GenericMessage 68 import edu uci isr yancees SubscriberInterface 69 import edu uci isr yancees YanceesEvent 7 import edu uci isr yancees YanceesException 71 import edu uci isr yancees client rmi YanceesRMIClient 72 import edu uci isr yancees server filter peerpublisher PeerPublisherInputFilter 73 import edu uci isr yancees server rmi RemoteYanceesImplementation 74 75 76 77 Visualizes the events being generated by the peers in the impromptu scenario 78 This will be ran and displayed in a pocket PC in order to suplement the 79 desktop visualization 8 81 author rsilvafi 82 class created at Jul 27 2 5 83 84 85 public class EventViewer implements SubscriberInterface 86 87 public static boolean print true 88 89 The Yancees server 9 private RemoteYanceesImplementation server 91 92 The Yancees client 93 private YanceesRMIClient client 94 95 private static String configurationFileName edu uci isr impromptu common Configuration YANCEES CONFIGURATION FILE 96 97 private String hostname localhost 98 99 the name under which this remote interface will be registered with 1 the rmiregistry 1 1 private String instanceName Utils getImpromptuName edu uci isr impromptu common Configuration REPOSITORY CHARACTER 1 2 private String instanceName Utils getImpromptuName edu uci isr impromptu common Configuration PIE CHARACTER 1 3 private String instanceName Utils getImpromptuName 1 4 1 5 public static void printUsage 1 6 System out println 1 7 System out println Usage 1 8 System out println java EventViewer configurationFile xml 1 9 System out println 11 111 112 public static void main String args 113 114 if args length 1 115 printUsage 116 else if args length 1 117 configurationFileName args 118 System out println Using configuration file configurationFileName 119 12 121 EventViewer viewer new EventViewer 122 123 124 constructor 125 public EventViewer 126 connectToLocalYancees 127 YanceesEvent requrest generatePeerQueryREQUEST 128 try 129 client publish requrest 13 catch YanceesException e 131 e printStackTrace 132 133 134 135 136 Creates the rmi registry if it is not already started 137 138 void createRegistry 139 14 try 141 LocateRegistry createRegistry Registry REGISTRY PORT 142 catch RemoteException ri 143 If there is already one just use it 144 145 146 147 148 149 Creates a local YANCEES server that automatically connects to the P2P 15 network of notification servers As a consequence it listens to all 151 the relevant events from the network 152 153 void createLocalYanceesServer 154 String name hostname instanceName 155 156 creates a yancees server instance locally 157 try 158 server new RemoteYanceesImplementation new File 159 configurationFileName 16 Naming rebind name server 161 162 catch RemoteException e 163 e printStackTrace 164 catch MalformedURLException e 165 e printStackTrace 166 167 168 169 17 171 Connects to the local version of YANCEES and subscribes to all the events 172 being produced by it 173 174 private void connectToLocalYancees 175 176 try 177 178 System out println hostname hostname 179 System out println instanceName instanceName 18 181 connects to the local server through a client interface 182 client new YanceesRMIClient hostname instanceName 183 GenericMessage msg new GenericMessage 184 subscription filter EQ name yancees version name 185 value type yanceesString 1 value EQ filter subscription 186 client subscribe msg this 187 188 catch Exception e 189 Utils handleException e 19 191 192 193 194 195 generates a unique identifier based on current timestamp and this host 196 address This is may be used to match responses to requests 197 198 return the unique id 199 2 protected String generateUniqueId 2 1 String hostname null 2 2 try 2 3 hostname InetAddress getLocalHost getHostAddress 2 4 catch UnknownHostException e 2 5 e printStackTrace 2 6 2 7 String id System currentTimeMillis hostname 2 8 2 9 return id 21 211 212 213 We pack a list of files with their owners name and their sharing level 214 in order to send the results back to the requestor 215 216 param id is the identifier of the request that will issue in this 217 response 218 return 219 22 protected YanceesEvent generatePeerQueryREQUEST 221 YanceesEvent request new YanceesEvent 222 223 generates a response to certain session id 224 request put PeerQueryProtocol MESSAGE TYPE PeerQueryProtocol REQ MESSAGE TYPE 225 request put PeerQueryProtocol SESSION ID generateUniqueId 226 227 We ask the YANCEES server only without inquiring other peers to prevent 228 response flood 229 request put PeerPublisherInputFilter PUBLISH TO PEERS PeerPublisherInputFilter FALSE 23 request put PeerQueryProtocol QUERY COMMAND PeerQueryProtocol CMD LIST GLOBAL FILES 231 232 return request 233 234 235 236 SubscriberInterface implementation 237 238 239 Get response notification 24 see edu uci isr yancees SubscriberInterface notify edu uci isr yancees EventInterface 241 242 public void notify EventInterface msg 243 if print 244 System out println EventViewer got event msg toString 245 246 YanceesEvent message YanceesEvent msg 247 248 If the message received is a response 249 if message containsAttribute PeerQueryProtocol MESSAGE TYPE 25 String message get PeerQueryProtocol MESSAGE TYPE 251 equals PeerQueryProtocol RESP MESSAGE TYPE 252 253 String sessionId String message get PeerQueryProtocol SESSION ID 254 if print 255 System out println EventViewer got event response for session sessionId 256 257 258 259 26 261 262 Get eventual response notification in the form of a pattern 263 see edu uci isr yancees SubscriberInterface notify edu uci isr yancees EventInterface 264 265 public void notify EventInterface pattern 266 for int i i pattern length i 267 notify pattern i 268 269 27 271 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.30/xref/edu/uci/isr/impromptu/pocketpc/EventViewer.html", "title": "eventviewer xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>EventViewer xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../../../../stylesheet.css\" />\n</head>\n<body>\n<div id=\"overview\"><a href=\"../../../../../../apidocs/edu/uci/isr/impromptu/pocketpc/EventViewer.html\">View Javadoc</a></div><pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <em class=\"comment\">/*</em>\n<a name=\"2\" href=\"#2\">2</a>   <em class=\"comment\"> * Copyright (c) 2003, Regents of the University of California.</em>\n<a name=\"3\" href=\"#3\">3</a>   <em class=\"comment\"> * All rights reserved.</em>\n<a name=\"4\" href=\"#4\">4</a>   <em class=\"comment\"> * </em>\n<a name=\"5\" href=\"#5\">5</a>   <em class=\"comment\"> * ===================================================================</em>\n<a name=\"6\" href=\"#6\">6</a>   <em class=\"comment\"> * The Apache Software License, Version 1.1</em>\n<a name=\"7\" href=\"#7\">7</a>   <em class=\"comment\"> * </em>\n<a name=\"8\" href=\"#8\">8</a>   <em class=\"comment\"> * Redistribution and use in source and binary forms, with or without</em>\n<a name=\"9\" href=\"#9\">9</a>   <em class=\"comment\"> * modification, are permitted provided that the following conditions</em>\n<a name=\"10\" href=\"#10\">10</a>  <em class=\"comment\"> * are met:</em>\n<a name=\"11\" href=\"#11\">11</a>  <em class=\"comment\"> * </em>\n<a name=\"12\" href=\"#12\">12</a>  <em class=\"comment\"> * 1. Redistributions of source code must retain the above copyright</em>\n<a name=\"13\" href=\"#13\">13</a>  <em class=\"comment\"> *    notice, this list of conditions and the following disclaimer.</em>\n<a name=\"14\" href=\"#14\">14</a>  <em class=\"comment\"> * </em>\n<a name=\"15\" href=\"#15\">15</a>  <em class=\"comment\"> * 2. Redistributions in binary form must reproduce the above copyright</em>\n<a name=\"16\" href=\"#16\">16</a>  <em class=\"comment\"> *    notice, this list of conditions and the following disclaimer in</em>\n<a name=\"17\" href=\"#17\">17</a>  <em class=\"comment\"> *    the documentation and/or other materials provided with the</em>\n<a name=\"18\" href=\"#18\">18</a>  <em class=\"comment\"> *    distribution.</em>\n<a name=\"19\" href=\"#19\">19</a>  <em class=\"comment\"> * </em>\n<a name=\"20\" href=\"#20\">20</a>  <em class=\"comment\"> * 3. The end-user documentation included with the redistribution, if</em>\n<a name=\"21\" href=\"#21\">21</a>  <em class=\"comment\"> *    any, must include the following acknowledgment:</em>\n<a name=\"22\" href=\"#22\">22</a>  <em class=\"comment\"> *       \"This product includes software developed by</em>\n<a name=\"23\" href=\"#23\">23</a>  <em class=\"comment\"> *        the Institute for Software Research at  </em>\n<a name=\"24\" href=\"#24\">24</a>  <em class=\"comment\"> *        University of California, Irvine\"</em>\n<a name=\"25\" href=\"#25\">25</a>  <em class=\"comment\"> *    Alternately, this acknowledgment may appear in the software</em>\n<a name=\"26\" href=\"#26\">26</a>  <em class=\"comment\"> *    itself, if and wherever such third-party acknowledgments normally</em>\n<a name=\"27\" href=\"#27\">27</a>  <em class=\"comment\"> *    appear.</em>\n<a name=\"28\" href=\"#28\">28</a>  <em class=\"comment\"> * </em>\n<a name=\"29\" href=\"#29\">29</a>  <em class=\"comment\"> * 4. The names \"YANCEES\", \"Institute for Software Research\" and</em>\n<a name=\"30\" href=\"#30\">30</a>  <em class=\"comment\"> *    \"University of California\" must not be used to</em>\n<a name=\"31\" href=\"#31\">31</a>  <em class=\"comment\"> *    endorse or promote products derived from this software without</em>\n<a name=\"32\" href=\"#32\">32</a>  <em class=\"comment\"> *    prior written permission. For written permission, please contact</em>\n<a name=\"33\" href=\"#33\">33</a>  <em class=\"comment\"> *    rsilvafi@ics.uci.edu or redmiles@ics.uci.edu.</em>\n<a name=\"34\" href=\"#34\">34</a>  <em class=\"comment\"> * </em>\n<a name=\"35\" href=\"#35\">35</a>  <em class=\"comment\"> * 5. Products derived from this software may not be called</em>\n<a name=\"36\" href=\"#36\">36</a>  <em class=\"comment\"> *    \"YANCEES\", nor may \"YANCEES\" appear in their name, without</em>\n<a name=\"37\" href=\"#37\">37</a>  <em class=\"comment\"> *    prior written permission of the University of California Regents.</em>\n<a name=\"38\" href=\"#38\">38</a>  <em class=\"comment\"> * </em>\n<a name=\"39\" href=\"#39\">39</a>  <em class=\"comment\"> * THIS SOFTWARE IS PROVIDED \"AS IS\" AND ANY EXPRESSED OR IMPLIED</em>\n<a name=\"40\" href=\"#40\">40</a>  <em class=\"comment\"> * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF</em>\n<a name=\"41\" href=\"#41\">41</a>  <em class=\"comment\"> * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.</em>\n<a name=\"42\" href=\"#42\">42</a>  <em class=\"comment\"> * IN NO EVENT SHALL THE INSTITUTE FOR SOFTWARE RESEARCH AT THE UNIVERSITY</em>\n<a name=\"43\" href=\"#43\">43</a>  <em class=\"comment\"> * OF CALIFORNIA, IRVINE, OR ITS CONTRIBUTORS BE LIABLE FOR</em>\n<a name=\"44\" href=\"#44\">44</a>  <em class=\"comment\"> * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR</em>\n<a name=\"45\" href=\"#45\">45</a>  <em class=\"comment\"> * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF</em>\n<a name=\"46\" href=\"#46\">46</a>  <em class=\"comment\"> * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR</em>\n<a name=\"47\" href=\"#47\">47</a>  <em class=\"comment\"> * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF</em>\n<a name=\"48\" href=\"#48\">48</a>  <em class=\"comment\"> * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING</em>\n<a name=\"49\" href=\"#49\">49</a>  <em class=\"comment\"> * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS</em>\n<a name=\"50\" href=\"#50\">50</a>  <em class=\"comment\"> * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</em>\n<a name=\"51\" href=\"#51\">51</a>  <em class=\"comment\"> * ====================================================================</em>\n<a name=\"52\" href=\"#52\">52</a>  <em class=\"comment\"> */</em>\n<a name=\"53\" href=\"#53\">53</a>  \n<a name=\"54\" href=\"#54\">54</a>  <strong>package</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pocketpc/package-summary.html\">edu.uci.isr.impromptu.pocketpc</a>;\n<a name=\"55\" href=\"#55\">55</a>  \n<a name=\"56\" href=\"#56\">56</a>  <strong>import</strong> java.io.File;\n<a name=\"57\" href=\"#57\">57</a>  <strong>import</strong> java.net.InetAddress;\n<a name=\"58\" href=\"#58\">58</a>  <strong>import</strong> java.net.MalformedURLException;\n<a name=\"59\" href=\"#59\">59</a>  <strong>import</strong> java.net.UnknownHostException;\n<a name=\"60\" href=\"#60\">60</a>  <strong>import</strong> java.rmi.Naming;\n<a name=\"61\" href=\"#61\">61</a>  <strong>import</strong> java.rmi.RemoteException;\n<a name=\"62\" href=\"#62\">62</a>  <strong>import</strong> java.rmi.registry.LocateRegistry;\n<a name=\"63\" href=\"#63\">63</a>  <strong>import</strong> java.rmi.registry.Registry;\n<a name=\"64\" href=\"#64\">64</a>  \n<a name=\"65\" href=\"#65\">65</a>  <strong>import</strong> edu.uci.isr.impromptu.common.Utils;\n<a name=\"66\" href=\"#66\">66</a>  <strong>import</strong> edu.uci.isr.yancees.EventInterface;\n<a name=\"67\" href=\"#67\">67</a>  <strong>import</strong> edu.uci.isr.yancees.GenericMessage;\n<a name=\"68\" href=\"#68\">68</a>  <strong>import</strong> edu.uci.isr.yancees.SubscriberInterface;\n<a name=\"69\" href=\"#69\">69</a>  <strong>import</strong> edu.uci.isr.yancees.YanceesEvent;\n<a name=\"70\" href=\"#70\">70</a>  <strong>import</strong> edu.uci.isr.yancees.YanceesException;\n<a name=\"71\" href=\"#71\">71</a>  <strong>import</strong> edu.uci.isr.yancees.client.rmi.YanceesRMIClient;\n<a name=\"72\" href=\"#72\">72</a>  <strong>import</strong> edu.uci.isr.yancees.server.filter.peerpublisher.PeerPublisherInputFilter;\n<a name=\"73\" href=\"#73\">73</a>  <strong>import</strong> edu.uci.isr.yancees.server.rmi.RemoteYanceesImplementation;\n<a name=\"74\" href=\"#74\">74</a>  \n<a name=\"75\" href=\"#75\">75</a>  \n<a name=\"76\" href=\"#76\">76</a>  <em>/**<em>*</em></em>\n<a name=\"77\" href=\"#77\">77</a>  <em> * Visualizes the events being generated by the peers in the impromptu scenario.</em>\n<a name=\"78\" href=\"#78\">78</a>  <em> * This will be ran and displayed in a pocket PC, in order to suplement the</em>\n<a name=\"79\" href=\"#79\">79</a>  <em> * desktop visualization</em>\n<a name=\"80\" href=\"#80\">80</a>  <em> * </em>\n<a name=\"81\" href=\"#81\">81</a>  <em> * @author rsilvafi</em>\n<a name=\"82\" href=\"#82\">82</a>  <em> * class created at Jul 27, 2005</em>\n<a name=\"83\" href=\"#83\">83</a>  <em> *</em>\n<a name=\"84\" href=\"#84\">84</a>  <em> */</em>\n<a name=\"85\" href=\"#85\">85</a>  <strong>public</strong> <strong>class</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pocketpc/EventViewer.html\">EventViewer</a> implements SubscriberInterface {\n<a name=\"86\" href=\"#86\">86</a>  \n<a name=\"87\" href=\"#87\">87</a>  \t<strong>public</strong> <strong>static</strong> <strong>boolean</strong> print = <strong>true</strong>;\n<a name=\"88\" href=\"#88\">88</a>  \t\n<a name=\"89\" href=\"#89\">89</a>  \t<em class=\"comment\">// The Yancees server</em>\n<a name=\"90\" href=\"#90\">90</a>  \t<strong>private</strong> RemoteYanceesImplementation server;\n<a name=\"91\" href=\"#91\">91</a>  \n<a name=\"92\" href=\"#92\">92</a>  \t<em class=\"comment\">// The Yancees client</em>\n<a name=\"93\" href=\"#93\">93</a>  \t<strong>private</strong> YanceesRMIClient client;\n<a name=\"94\" href=\"#94\">94</a>  \n<a name=\"95\" href=\"#95\">95</a>  \t<strong>private</strong> <strong>static</strong> String configurationFileName = edu.uci.isr.impromptu.common.Configuration.YANCEES_CONFIGURATION_FILE;\n<a name=\"96\" href=\"#96\">96</a>  \t\n<a name=\"97\" href=\"#97\">97</a>  \t<strong>private</strong> String hostname = <span class=\"string\">\"localhost\"</span>;\n<a name=\"98\" href=\"#98\">98</a>  \n<a name=\"99\" href=\"#99\">99</a>  \t<em class=\"comment\">// the name under which this remote interface will be registered with</em>\n<a name=\"100\" href=\"#100\">100</a> \t<em class=\"comment\">// the rmiregistry</em>\n<a name=\"101\" href=\"#101\">101</a> \t<em class=\"comment\">//private String instanceName = Utils.getImpromptuName()+edu.uci.isr.impromptu.common.Configuration.REPOSITORY_CHARACTER; </em>\n<a name=\"102\" href=\"#102\">102</a> \t<em class=\"comment\">//private String instanceName = Utils.getImpromptuName()+edu.uci.isr.impromptu.common.Configuration.PIE_CHARACTER;</em>\n<a name=\"103\" href=\"#103\">103</a> \t<strong>private</strong> String instanceName = Utils.getImpromptuName();\n<a name=\"104\" href=\"#104\">104</a> \t\n<a name=\"105\" href=\"#105\">105</a> \t<strong>public</strong> <strong>static</strong> <strong>void</strong> printUsage() {\n<a name=\"106\" href=\"#106\">106</a> \t\tSystem.out.println();\n<a name=\"107\" href=\"#107\">107</a> \t\tSystem.out.println(<span class=\"string\">\"Usage: \"</span>);\n<a name=\"108\" href=\"#108\">108</a> \t\tSystem.out.println(<span class=\"string\">\"java EventViewer configurationFile.xml\"</span>);\n<a name=\"109\" href=\"#109\">109</a> \t\tSystem.out.println();\n<a name=\"110\" href=\"#110\">110</a> \t}\n<a name=\"111\" href=\"#111\">111</a> \n<a name=\"112\" href=\"#112\">112</a> \t<strong>public</strong> <strong>static</strong> <strong>void</strong> main(String[] args) {\n<a name=\"113\" href=\"#113\">113</a> \t\t\n<a name=\"114\" href=\"#114\">114</a> \t\t  <strong>if</strong> (args.length > 1) { \n<a name=\"115\" href=\"#115\">115</a> \t\t\t  printUsage();\n<a name=\"116\" href=\"#116\">116</a> \t\t  } <strong>else</strong> <strong>if</strong> (args.length == 1) {\n<a name=\"117\" href=\"#117\">117</a> \t\t\t  configurationFileName = args[0];\n<a name=\"118\" href=\"#118\">118</a> \t\t\t  System.out.println(<span class=\"string\">\"Using configuration file: \"</span>+configurationFileName);\n<a name=\"119\" href=\"#119\">119</a> \t\t  }\n<a name=\"120\" href=\"#120\">120</a> \t\t \n<a name=\"121\" href=\"#121\">121</a> \t\tEventViewer viewer = <strong>new</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pocketpc/EventViewer.html\">EventViewer</a>();\n<a name=\"122\" href=\"#122\">122</a> \t}\n<a name=\"123\" href=\"#123\">123</a> \n<a name=\"124\" href=\"#124\">124</a> \t<em class=\"comment\">// constructor</em>\n<a name=\"125\" href=\"#125\">125</a> \t<strong>public</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pocketpc/EventViewer.html\">EventViewer</a>() {\n<a name=\"126\" href=\"#126\">126</a> \t\tconnectToLocalYancees();\n<a name=\"127\" href=\"#127\">127</a> \t\tYanceesEvent requrest = generatePeerQueryREQUEST();\n<a name=\"128\" href=\"#128\">128</a> \t\t<strong>try</strong> {\n<a name=\"129\" href=\"#129\">129</a> \t\t\tclient.publish(requrest);\n<a name=\"130\" href=\"#130\">130</a> \t\t} <strong>catch</strong> (YanceesException e) {\n<a name=\"131\" href=\"#131\">131</a> \t\t\te.printStackTrace();\n<a name=\"132\" href=\"#132\">132</a> \t\t}\n<a name=\"133\" href=\"#133\">133</a> \t}\n<a name=\"134\" href=\"#134\">134</a> \t\n<a name=\"135\" href=\"#135\">135</a> \t<em>/**<em>*</em></em>\n<a name=\"136\" href=\"#136\">136</a> <em>\t * Creates the rmi registry if it is not already started</em>\n<a name=\"137\" href=\"#137\">137</a> <em>\t */</em> \n<a name=\"138\" href=\"#138\">138</a> \t<strong>void</strong> createRegistry() {\n<a name=\"139\" href=\"#139\">139</a> \t\n<a name=\"140\" href=\"#140\">140</a> \t\t<strong>try</strong> {\n<a name=\"141\" href=\"#141\">141</a> \t\t\tLocateRegistry.createRegistry(Registry.REGISTRY_PORT);\n<a name=\"142\" href=\"#142\">142</a> \t\t} <strong>catch</strong> (RemoteException ri) {\n<a name=\"143\" href=\"#143\">143</a> \t\t\t<em class=\"comment\">// If there is already one, just use it</em>\n<a name=\"144\" href=\"#144\">144</a> \t\t}\n<a name=\"145\" href=\"#145\">145</a> \n<a name=\"146\" href=\"#146\">146</a> \t}\n<a name=\"147\" href=\"#147\">147</a> \t\n<a name=\"148\" href=\"#148\">148</a> \t<em class=\"comment\">/*</em>\n<a name=\"149\" href=\"#149\">149</a> <em class=\"comment\">\t * Creates a local YANCEES server that automatically connects to the P2P</em>\n<a name=\"150\" href=\"#150\">150</a> <em class=\"comment\">\t * network of notification servers. As a consequence, it listens to all</em>\n<a name=\"151\" href=\"#151\">151</a> <em class=\"comment\">\t * the relevant events from the network.</em>\n<a name=\"152\" href=\"#152\">152</a> <em class=\"comment\">\t */</em>\n<a name=\"153\" href=\"#153\">153</a> \t<strong>void</strong> createLocalYanceesServer() {\t\t\n<a name=\"154\" href=\"#154\">154</a> \t\tString name = <span class=\"string\">\"//\"</span> + hostname + <span class=\"string\">\"/\"</span> + instanceName;\n<a name=\"155\" href=\"#155\">155</a> \t\t\n<a name=\"156\" href=\"#156\">156</a> \t\t<em class=\"comment\">// creates a yancees server instance locally</em>\n<a name=\"157\" href=\"#157\">157</a> \t\t<strong>try</strong> {\n<a name=\"158\" href=\"#158\">158</a> \t\t\tserver = <strong>new</strong> RemoteYanceesImplementation(<strong>new</strong> File(\n<a name=\"159\" href=\"#159\">159</a> \t\t\t\t\tconfigurationFileName));\n<a name=\"160\" href=\"#160\">160</a> \t\t\tNaming.rebind(name, server);\n<a name=\"161\" href=\"#161\">161</a> \t\t\t\n<a name=\"162\" href=\"#162\">162</a> \t\t} <strong>catch</strong> (RemoteException e) {\n<a name=\"163\" href=\"#163\">163</a> \t\t\te.printStackTrace();\n<a name=\"164\" href=\"#164\">164</a> \t\t} <strong>catch</strong> (MalformedURLException e) {\n<a name=\"165\" href=\"#165\">165</a> \t\t\te.printStackTrace();\n<a name=\"166\" href=\"#166\">166</a> \t\t}\n<a name=\"167\" href=\"#167\">167</a> \n<a name=\"168\" href=\"#168\">168</a> \t}\n<a name=\"169\" href=\"#169\">169</a> \n<a name=\"170\" href=\"#170\">170</a> \t<em>/**<em>*</em></em>\n<a name=\"171\" href=\"#171\">171</a> <em>\t * Connects to the local version of YANCEES and subscribes to all the events</em>\n<a name=\"172\" href=\"#172\">172</a> <em>\t * being produced by it.</em>\n<a name=\"173\" href=\"#173\">173</a> <em>\t */</em>\n<a name=\"174\" href=\"#174\">174</a> \t<strong>private</strong> <strong>void</strong> connectToLocalYancees() {\n<a name=\"175\" href=\"#175\">175</a> \n<a name=\"176\" href=\"#176\">176</a> \t\t<strong>try</strong> {\n<a name=\"177\" href=\"#177\">177</a> \t\t\t\n<a name=\"178\" href=\"#178\">178</a> \t\t\tSystem.out.println(<span class=\"string\">\"hostname = \"</span>+hostname);\n<a name=\"179\" href=\"#179\">179</a> \t\t\tSystem.out.println(<span class=\"string\">\"instanceName = \"</span>+instanceName);\n<a name=\"180\" href=\"#180\">180</a> \t\t\t\n<a name=\"181\" href=\"#181\">181</a> \t\t\t<em class=\"comment\">// connects to the local server through a client interface</em>\n<a name=\"182\" href=\"#182\">182</a> \t\t\tclient = <strong>new</strong> YanceesRMIClient(hostname, instanceName);\n<a name=\"183\" href=\"#183\">183</a> \t\t\tGenericMessage msg = <strong>new</strong> GenericMessage(\n<a name=\"184\" href=\"#184\">184</a> \t\t\t\t\t<span class=\"string\">\"&lt;subscription>&lt;filter>&lt;EQ>&lt;name>yancees.version&lt;/name>\"</span>\n<a name=\"185\" href=\"#185\">185</a> \t\t\t\t\t\t\t+ <span class=\"string\">\"&lt;value type=\\&quot;yanceesString\\&quot;>1.0&lt;/value>&lt;/EQ>&lt;/filter>&lt;/subscription>\"</span>);\n<a name=\"186\" href=\"#186\">186</a> \t\t\tclient.subscribe(msg, <strong>this</strong>);\n<a name=\"187\" href=\"#187\">187</a> \n<a name=\"188\" href=\"#188\">188</a> \t\t} <strong>catch</strong> (Exception e) {\n<a name=\"189\" href=\"#189\">189</a> \t\t\tUtils.handleException(e);\n<a name=\"190\" href=\"#190\">190</a> \t\t}\n<a name=\"191\" href=\"#191\">191</a> \n<a name=\"192\" href=\"#192\">192</a> \t}\n<a name=\"193\" href=\"#193\">193</a> \t\n<a name=\"194\" href=\"#194\">194</a> \t<em>/**<em>*</em></em>\n<a name=\"195\" href=\"#195\">195</a> <em>\t * generates a unique identifier based on current timestamp and this host</em>\n<a name=\"196\" href=\"#196\">196</a> <em>\t * address. This is may be used to match responses to requests</em>\n<a name=\"197\" href=\"#197\">197</a> <em>\t * </em>\n<a name=\"198\" href=\"#198\">198</a> <em>\t * @return the unique id</em>\n<a name=\"199\" href=\"#199\">199</a> <em>\t */</em>\n<a name=\"200\" href=\"#200\">200</a> \t<strong>protected</strong> String generateUniqueId() {\n<a name=\"201\" href=\"#201\">201</a> \t\tString hostname = <strong>null</strong>;\n<a name=\"202\" href=\"#202\">202</a> \t\t<strong>try</strong> {\n<a name=\"203\" href=\"#203\">203</a> \t\t\thostname = InetAddress.getLocalHost().getHostAddress();\n<a name=\"204\" href=\"#204\">204</a> \t\t} <strong>catch</strong> (UnknownHostException e) {\n<a name=\"205\" href=\"#205\">205</a> \t\t\te.printStackTrace();\n<a name=\"206\" href=\"#206\">206</a> \t\t}\n<a name=\"207\" href=\"#207\">207</a> \t\tString id = System.currentTimeMillis() + <span class=\"string\">\"-\"</span> + hostname;\n<a name=\"208\" href=\"#208\">208</a> \n<a name=\"209\" href=\"#209\">209</a> \t\t<strong>return</strong> id;\n<a name=\"210\" href=\"#210\">210</a> \t}\n<a name=\"211\" href=\"#211\">211</a> \t\n<a name=\"212\" href=\"#212\">212</a> \t<em>/**<em>*</em></em>\n<a name=\"213\" href=\"#213\">213</a> <em>\t * We pack a list of files, with their owners/name, and their sharing level</em>\n<a name=\"214\" href=\"#214\">214</a> <em>\t * in order to send the results back to the requestor.</em>\n<a name=\"215\" href=\"#215\">215</a> <em>\t * </em>\n<a name=\"216\" href=\"#216\">216</a> <em>\t * @param id  is the identifier of the request that will issue in this</em>\n<a name=\"217\" href=\"#217\">217</a> <em>\t *            response</em>\n<a name=\"218\" href=\"#218\">218</a> <em>\t * @return</em>\n<a name=\"219\" href=\"#219\">219</a> <em>\t */</em>\n<a name=\"220\" href=\"#220\">220</a> \t<strong>protected</strong> YanceesEvent generatePeerQueryREQUEST() {\n<a name=\"221\" href=\"#221\">221</a> \t\tYanceesEvent request = <strong>new</strong> YanceesEvent();\n<a name=\"222\" href=\"#222\">222</a> \n<a name=\"223\" href=\"#223\">223</a> \t\t<em class=\"comment\">// generates a response to certain session id.</em>\n<a name=\"224\" href=\"#224\">224</a> \t\trequest.put(PeerQueryProtocol.MESSAGE_TYPE, PeerQueryProtocol.REQ_MESSAGE_TYPE);\n<a name=\"225\" href=\"#225\">225</a> \t\trequest.put(PeerQueryProtocol.SESSION_ID, generateUniqueId());\n<a name=\"226\" href=\"#226\">226</a> \t\t\n<a name=\"227\" href=\"#227\">227</a> \t\t<em class=\"comment\">// We ask the YANCEES server only (without inquiring other peers), to prevent</em>\n<a name=\"228\" href=\"#228\">228</a> \t\t<em class=\"comment\">// response flood.</em>\n<a name=\"229\" href=\"#229\">229</a> \t\trequest.put(PeerPublisherInputFilter.PUBLISH_TO_PEERS, PeerPublisherInputFilter.FALSE);\n<a name=\"230\" href=\"#230\">230</a> \t\trequest.put(PeerQueryProtocol.QUERY_COMMAND, PeerQueryProtocol.CMD_LIST_GLOBAL_FILES);\n<a name=\"231\" href=\"#231\">231</a> \t\t\n<a name=\"232\" href=\"#232\">232</a> \t\t<strong>return</strong> request;\n<a name=\"233\" href=\"#233\">233</a> \t}\n<a name=\"234\" href=\"#234\">234</a> \n<a name=\"235\" href=\"#235\">235</a> \n<a name=\"236\" href=\"#236\">236</a> \t<em>/**<em>****************** SubscriberInterface implementation *******************/</em></em>\n<a name=\"237\" href=\"#237\">237</a> \t\n<a name=\"238\" href=\"#238\">238</a> \t<em>/**<em>*</em></em>\n<a name=\"239\" href=\"#239\">239</a> <em>\t * Get response notification</em>\n<a name=\"240\" href=\"#240\">240</a> <em>\t * @see edu.uci.isr.yancees.SubscriberInterface#notify(edu.uci.isr.yancees.EventInterface)</em>\n<a name=\"241\" href=\"#241\">241</a> <em>\t */</em>\n<a name=\"242\" href=\"#242\">242</a> \t<strong>public</strong> <strong>void</strong> notify(EventInterface msg) {\n<a name=\"243\" href=\"#243\">243</a> \t\t<strong>if</strong> (print)\n<a name=\"244\" href=\"#244\">244</a> \t\t\tSystem.out.println(<span class=\"string\">\"EventViewer: got event \"</span>+msg.toString());\n<a name=\"245\" href=\"#245\">245</a> \t\t\n<a name=\"246\" href=\"#246\">246</a> \t\tYanceesEvent message = (YanceesEvent) msg;\n<a name=\"247\" href=\"#247\">247</a> \t\t\n<a name=\"248\" href=\"#248\">248</a> \t\t<em class=\"comment\">// If the message received is a response</em>\n<a name=\"249\" href=\"#249\">249</a> \t\t<strong>if</strong> (message.containsAttribute(PeerQueryProtocol.MESSAGE_TYPE)\n<a name=\"250\" href=\"#250\">250</a> \t\t\t\t&amp;&amp; ((String) message.get(PeerQueryProtocol.MESSAGE_TYPE))\n<a name=\"251\" href=\"#251\">251</a> \t\t\t\t\t\t.equals(PeerQueryProtocol.RESP_MESSAGE_TYPE)) {\n<a name=\"252\" href=\"#252\">252</a> \t\n<a name=\"253\" href=\"#253\">253</a> \t\t\tString sessionId = (String) message.get(PeerQueryProtocol.SESSION_ID);\n<a name=\"254\" href=\"#254\">254</a> \t\t\t<strong>if</strong> (print)\n<a name=\"255\" href=\"#255\">255</a> \t\t\t\tSystem.out.println(<span class=\"string\">\"EventViewer: got event response for session: \"</span>+sessionId);\n<a name=\"256\" href=\"#256\">256</a> \t\t\t\n<a name=\"257\" href=\"#257\">257</a> \t\t}\n<a name=\"258\" href=\"#258\">258</a> \t\t\n<a name=\"259\" href=\"#259\">259</a> \t}\n<a name=\"260\" href=\"#260\">260</a> \n<a name=\"261\" href=\"#261\">261</a> \t<em>/**<em>*</em></em>\n<a name=\"262\" href=\"#262\">262</a> <em>\t * Get eventual response notification in the form of a pattern</em>\n<a name=\"263\" href=\"#263\">263</a> <em>\t * @see edu.uci.isr.yancees.SubscriberInterface#notify(edu.uci.isr.yancees.EventInterface)</em>\n<a name=\"264\" href=\"#264\">264</a> <em>\t */</em>\n<a name=\"265\" href=\"#265\">265</a> \t<strong>public</strong> <strong>void</strong> notify(EventInterface[] pattern) {\n<a name=\"266\" href=\"#266\">266</a> \t\t<strong>for</strong> (<strong>int</strong> i = 0; i &lt; pattern.length; i++) {\n<a name=\"267\" href=\"#267\">267</a> \t\t\tnotify(pattern[i]);\n<a name=\"268\" href=\"#268\">268</a> \t\t}\n<a name=\"269\" href=\"#269\">269</a> \t}\n<a name=\"270\" href=\"#270\">270</a> \n<a name=\"271\" href=\"#271\">271</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 32716.0}