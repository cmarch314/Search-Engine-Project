{"text": "Navigation Up Table of Contents Bibliography Index Title Page advanced CGAL Pm file writer Planar map DefinitionThe Pm file writer Planar map class is inherited from the File header class This class contains functions for writing the Planar map components to a given output stream Users have to make sure that methods for writing Point 2 and X curve 2 objects defined in the Planar map traits class are provided when using the output stream they choose to work with This class is templated with Planar map and hence the user can work with Pm file writer Planar map with its own Planar map Types The following handles and iterators have appropriate constant counterparts The mutable types are assignable to their constant counterparts The iterators are assignable to the respective handle types Wherever the handles appear in function parameter lists the appropriate iterator can be used as well Pm file writer Planar map Vertex handle handle to the Planar map vertex Pm file writer Planar map Halfedge handle handle to the Planar map halfedge Pm file writer Planar map Face handle handle to the Planar map face Pm file writer Planar map Vertex iterator a bidirectional iterator over the vertices of the Planar map Pm file writer Planar map Halfedge iterator a bidirectional iterator over the halfedges of the Planar map Pm file writer Planar map Face iterator a bidirectional iterator over the faces of the Planar map CreationAs described in the introduction the Planar map users can choose a verbose format for printing their planar map this is done by putting this option in the constructor Pm file writer Planar map pm file writer std ostream o PM pm bool verbose false constructs Pm file writer Planar map for a given output stream the specified Planar map and a verbose choice Pm file writer Planar map pm file writer std ostream o PM pm File header h constructs Pm file writer Planar map for a given output stream the specified Planar map and File header Operations In the following operations the methods for writing lines in comments are defined only if the comments flag is set to true void pm file writer write title const char feature name writes a title in comments to the output stream void pm file writer write pm vhf sizes writes the number of vertices halfedges and faces in the Planar map to the output stream void pm file writer write vertices header writes a title in comments that begins the vertices list to the output stream void pm file writer write halfedges header writes a title in comments that begins the halfedges list to the output stream void pm file writer write faces header writes a title in comments that begins the faces list to the output stream void pm file writer write comment const char str writes a line by comments with the information noted in str to the output stream void pm file writer write comment const char str int i writes a line by comments with the information noted in str and i to the output stream void pm file writer write value unsigned int val char delimiter newline writing an integer value followed by a delimiter to the output stream The delimiter has a default value set to the newline character n ostream pm file writer out returns the output stream the Planar map is written to void pm file writer write vertex Vertex handle v writes a vertex of the Planar map to the output stream void pm file writer write halfedge Halfedge handle h writes an halfedge of the Planar map to the output stream void pm file writer write face Face handle f writes a face of the Planar map to the output stream void pm file writer write vertices Vertex iterator Vertices begin Vertex iterator Vertices end writes all the vertices in the range Vertices begin Vertices end to the output stream void pm file writer write halfedges Halfedge const iterator Halfedges begin Halfedge const iterator Halfedges end writes all the halfedges in the range Halfedges begin Halfedges end to the output stream void pm file writer write faces Face iterator Faces begin Face iterator Faces end writes all the faces in the range Faces begin Faces end to the output stream advanced Next write pm Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Planar_map_ref/Class_Pm_file_writer.html", "title": "pm_file_writer&lt;planar_map&gt;", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Planar_map_ref/Pm_file_writer.tex' -->\n<html> <head>  \n<title>Pm_file_writer&lt;Planar_map&gt;</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_808\"></A>\n\n<A NAME=\"Cross_link_anchor_809\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_807\"></A><BR>\n\n<div class=\"AdvancedBlock\">\n  <table><tr><td valign=\"top\">\n  <img border=\"0\" src=\"cc_advanced_begin1.gif\" alt=\"begin of advanced section\">\n  </td><td valign=\"top\">\n  <em class=\"AdvancedBlockLabel\">&nbsp;advanced&nbsp;</em>\n  </td><td valign=\"top\">\n  <img border=\"0\" src=\"cc_advanced_begin2.gif\" alt=\"begin of advanced section\">\n  </td></tr></table>\n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Class.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_CGAL::Pm_file_writer<Planar_map>\"></A>\n<h2><I>CGAL::Pm_file_writer&lt;Planar_map&gt;</I></h2>\n<P>\n\n<H3>Definition</H3>The <I><A HREF=\"Class_Pm_file_writer.html#Cross_link_anchor_809\">Pm_file_writer</A>&lt;Planar_map&gt;</I> class is inherited from the <I><A HREF=\"Class_File_header.html#Cross_link_anchor_805\">File_header</A></I> class. \nThis class contains functions for writing the <I>Planar map</I> components to a given output stream.\nUsers have to make sure that methods for writing <I><A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A></I> \nand <I>X_curve_2</I> objects defined in the <I>Planar map traits</I> \nclass are provided when using the output stream they choose to work with..\nThis class is templated with <I>Planar map</I>, and hence the user can work with <I><A HREF=\"Class_Pm_file_writer.html#Cross_link_anchor_809\">Pm_file_writer</A>&lt;Planar_map&gt;</I> \nwith its own <I>Planar map</I>.\n<P>\n\n<H3>Types</H3>\n<P>\n\nThe following handles and iterators have appropriate constant counterparts. \nThe mutable types are assignable to their\nconstant counterparts. The iterators are assignable to the respective handle types. \nWherever the handles appear in function parameter lists, the appropriate iterator can be used as well.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Pm_file_writer.html#Cross_link_anchor_809\">Pm_file_writer</A>&lt;Planar_map&gt;::Vertex_handle\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    handle to the <I>Planar map</I> vertex.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Pm_file_writer.html#Cross_link_anchor_809\">Pm_file_writer</A>&lt;Planar_map&gt;::Halfedge_handle\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    handle to the <I>Planar map</I> halfedge.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Pm_file_writer.html#Cross_link_anchor_809\">Pm_file_writer</A>&lt;Planar_map&gt;::Face_handle\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    handle to the <I>Planar map</I> face.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Pm_file_writer.html#Cross_link_anchor_809\">Pm_file_writer</A>&lt;Planar_map&gt;::Vertex_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    a bidirectional iterator over the vertices of the <I>Planar map</I>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Pm_file_writer.html#Cross_link_anchor_809\">Pm_file_writer</A>&lt;Planar_map&gt;::Halfedge_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    a bidirectional iterator over the halfedges of the <I>Planar map</I>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Pm_file_writer.html#Cross_link_anchor_809\">Pm_file_writer</A>&lt;Planar_map&gt;::Face_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    a bidirectional iterator over the faces of the <I>Planar map</I>.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Creation</H3>As described in the introduction, the <I>Planar map</I> users can choose a verbose format for \nprinting their planar map, this is done by putting this option in the constructor.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    <A HREF=\"Class_Pm_file_writer.html#Cross_link_anchor_809\">Pm_file_writer</A>&lt;Planar_map&gt; pm_file_writer ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    std::ostream&amp; o,<BR>\n\nPM pm,<BR>\n\nbool verbose = false);</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    constructs <I><A HREF=\"Class_Pm_file_writer.html#Cross_link_anchor_809\">Pm_file_writer</A>&lt;Planar_map&gt;</I> for a given output stream, the specified <I>Planar map</I> and a verbose choice.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    <A HREF=\"Class_Pm_file_writer.html#Cross_link_anchor_809\">Pm_file_writer</A>&lt;Planar_map&gt; pm_file_writer ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    std::ostream&amp; o,<BR>\n\nPM pm,<BR>\n\n<A HREF=\"Class_File_header.html#Cross_link_anchor_805\">File_header</A> h);</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    constructs <I><A HREF=\"Class_Pm_file_writer.html#Cross_link_anchor_809\">Pm_file_writer</A>&lt;Planar_map&gt;</I> for a given output stream, the specified <I>Planar map</I> and File header.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Operations</H3>\n<P>\n\nIn the following operations the methods for writing lines in \ncomments are defined only if the comments flag is set to true:\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_write_title_6const_char_*feature_name9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    pm_file_writer.write_title ( const char *feature_name)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    writes a title in comments to the output stream.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_write_pm_vhf_sizes_69;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    pm_file_writer.write_pm_vhf_sizes ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    writes the number of vertices, halfedges and faces in the <I>Planar map</I> to the output stream.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_write_vertices_header_69;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    pm_file_writer.write_vertices_header ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    writes a title in comments that begins the vertices list to the output stream.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_write_halfedges_header_69;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    pm_file_writer.write_halfedges_header ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    writes a title in comments that begins the halfedges list to the output stream.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_write_faces_header_69;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    pm_file_writer.write_faces_header ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    writes a title in comments that begins the faces list to the output stream.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_write_comment_6const_char_*str9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    pm_file_writer.write_comment ( const char *str)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    writes a line by comments with the information noted in <I>str</I> to the output stream.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_write_comment_6const_char_*str+_int_i9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    pm_file_writer.write_comment ( const char *str,  int i)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    writes a line by comments with the information noted in <I>str</I> and <I>i</I> to the output stream.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_write_value_6unsigned_int_val+_char_delimiter_=_newline9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    pm_file_writer.write_value ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    unsigned int val,<BR>\n\nchar delimiter = newline)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    writing an integer value followed by a delimiter to the output stream.\n The delimiter has a default value set to the <I>newline</I> character\n (\\n).\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_ostream__out69;\"></A>\nostream&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    pm_file_writer.out ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the output stream the <I>Planar map</I> is written to.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_write_vertex_6Vertex_handle_v9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    pm_file_writer.write_vertex ( Vertex_handle v)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    writes a vertex of the <I>Planar map</I> to the output stream.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_write_halfedge_6Halfedge_handle_h9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    pm_file_writer.write_halfedge ( Halfedge_handle h)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    writes an halfedge of the <I>Planar map</I> to the output stream.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_write_face_6Face_handle_f9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    pm_file_writer.write_face ( Face_handle f)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    writes a face of the <I>Planar map</I> to the output stream.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_write_vertices_6Vertex_iterator_Vertices_begin+_Vertex_iterator_Vertices_end9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    pm_file_writer.write_vertices ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    Vertex_iterator Vertices_begin,<BR>\n\nVertex_iterator Vertices_end)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    writes all the vertices in the range [Vertices_begin, Vertices_end) to the output stream.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_write_halfedges_6Halfedge_const_iterator_Halfedges_begin+_Halfedge_const_iterator_Halfedges_end9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    pm_file_writer.write_halfedges ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    Halfedge_const_iterator Halfedges_begin,<BR>\n\nHalfedge_const_iterator Halfedges_end)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    writes all the halfedges in the range [Halfedges_begin, Halfedges_end) to the output stream.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_write_faces_6Face_iterator_Faces_begin+_Face_iterator_Faces_end9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    pm_file_writer.write_faces ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    Face_iterator Faces_begin,<BR>\n\nFace_iterator Faces_end)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    writes all the faces in the range [Faces_begin, Faces_end) to the output stream.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<table><tr><td valign=\"bottom\">\n  <img border=\"0\" src=\"cc_advanced_end1.gif\" alt=\"end of advanced section\">\n  </td><td valign=\"bottom\">\n  <em class=\"AdvancedBlockLabel\">&nbsp;advanced&nbsp;</em>\n  </td><td valign=\"bottom\">\n  <img border=\"0\" src=\"cc_advanced_end2.gif\" alt=\"end of advanced section\">\n  </td></tr></table></div>\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Function_write_pm.html\"><I>write_pm</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_20!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 38704.0}