{"text": "Local Site MapOverviewViewersObjectsViewsAnchorsLinksAttributesClientsHyperwebs Objects Viewers display objects Objects are bits of application specific information used to generate views A Chimera object can be practically anything including an image file a relational database a sound file an internal data structure or a value calculated by an application at run time From this list it should be apparent that an object can be either persistent or transient Chimera places no restrictions on the format of a viewer s objects In fact Chimera has no knowledge of the format or type of any object manipulated by its integrated viewers It may seem odd then that Chimera provides the object concept at all However this lack of knowledge of the explicit type of an object enables Chimera to link a diverse set of media types Therefore it is important to clearly define the modeling power provided by objects The object concept is used as a reference to application specific data It is not the data itself but rather contains the information necessary for a viewer to relocate or recompute the data Like a viewer the object has an associated name Typically if the object refers to a file or Internet resource the name of the object is a URL specifying the location of that resource An object also has an associated MIME type This specifies the format of the object and allows Chimera to monitor the creation of views In particular Chimera will not allow a view to be created if the viewer does not support the MIME type specified by the object If additional information is required to locate an object besides the object s name attribute value pairs can be created on the object instance to store this information In some cases viewers synthesize information from more than one object in order to create a view For instance a flight simulator can create an artificial horizon view based off the pitch and roll values of the simulation In order to accurately model this situation within Chimera three object instances would be created One each for the pitch and roll objects and one for their combination Views can then be created for each of these objects allowing anchors to be associated with each separately The combination object is known as a composite and is created by instantiating a new object instance and adding the pitch and roll objects to it Since you can add composites to other composites hierarchies can be formed to model hierarchical data objects Views can then be created on any part of the hierarchy Developer Information The available operations on objects are listed below For more information see the on line documentation addObject object object Adds the specified object to the target object The target object is now considered a composite object createAnchor object Creates a new anchor on the specified object This anchor is considered view independent createObject String String Creates a new object in the active hyperweb The first string specifies the object s name typically a URL pointing to the object while the second string specifies the object s MIME type deleteObject object Delete s the specified object from the active hyperweb Note the Chimera server proactively maintains the consistency of the Chimera hyperweb thus this operation will also remove any views which contain the specified object which in turn will delete any anchors associated with those views etc getAnchors object Returns a list of anchors associated with the specified object in the active hyperweb getMIMEtype object Returns the object s MIME type getObject String Returns the object with the specified name getObjectName object Returns the object s name getObjects Returns all of the objects for the active hyperweb getObjects object Returns all of the objects stored in the specified composite isComposite object Returns TRUE if the object is a composite numberOfAnchors object Returns the number of anchors associated with the specified object numberOfObjects Returns the number of objects contained in the active hyperweb numberOfObjects object Returns the number of objects contained in the specified composite objectExists String Checks to see if an object with the specified name exists in the active hyperweb objectExists object Checks to see if an object with the specified object id exists in the active hyperweb Local Site MapOverviewViewersObjectsViewsAnchorsLinksAttributesClientsHyperwebs This page is part of the Chimera web site Send feedback and questions to Ken Anderson ", "_id": "http://ftp.ics.uci.edu/pub/chimera/overview/concepts/objects.html", "title": " chimera concepts - objects", "html": "<HTML>\n<HEAD>\n  <META NAME=\"GENERATOR\" CONTENT=\"Adobe PageMill 2.0 Mac\">\n  <TITLE> Chimera Concepts - Objects</TITLE>\n</HEAD>\n<BODY LINK=\"#0000ff\" VLINK=\"#ff0000\" ALINK=\"#00bb00\" BGCOLOR=\"#ffffff\">\n\n<P><CENTER><TABLE BORDER=\"1\" CELLSPACING=\"0\" CELLPADDING=\"2\">\n<CAPTION ALIGN=\"TOP\">Local Site Map</CAPTION>\n<TR>\n<TD WIDTH=\"33%\" BGCOLOR=\"#ffff99\" ALIGN=\"CENTER\"><A HREF=\"index.html\">Overview</A></TD>\n<TD WIDTH=\"33%\" BGCOLOR=\"#ffff99\" ALIGN=\"CENTER\"><A HREF=\"viewers.html\">Viewers</A></TD>\n<TD WIDTH=\"34%\" BGCOLOR=\"#ffff99\" ALIGN=\"CENTER\"><B>Objects</B></TD></TR>\n<TR>\n<TD WIDTH=\"33%\" BGCOLOR=\"#ffff99\" ALIGN=\"CENTER\"><A HREF=\"views.html\">Views</A></TD>\n<TD WIDTH=\"33%\" BGCOLOR=\"#ffff99\" ALIGN=\"CENTER\"><A HREF=\"anchors.html\">Anchors</A></TD>\n<TD WIDTH=\"34%\" BGCOLOR=\"#ffff99\" ALIGN=\"CENTER\"><A HREF=\"links.html\">Links</A></TD></TR>\n<TR>\n<TD WIDTH=\"33%\" BGCOLOR=\"#ffff99\" ALIGN=\"CENTER\"><A HREF=\"attributes.html\">Attributes</A></TD>\n<TD WIDTH=\"33%\" BGCOLOR=\"#ffff99\" ALIGN=\"CENTER\"><A HREF=\"clients.html\">Clients</A></TD>\n<TD WIDTH=\"34%\" BGCOLOR=\"#ffff99\" ALIGN=\"CENTER\"><A HREF=\"hyperwebs.html\">Hyperwebs</A></TD></TR>\n</TABLE>\n</CENTER></P>\n\n<P><CENTER><HR></CENTER></P>\n\n<H1><CENTER>Objects</CENTER></H1>\n\n<P><A HREF=\"viewers.html\">Viewers</A> display objects. Objects are bits\nof application-specific information used to generate <A HREF=\"views.html\">views</A>.\nA Chimera object can be practically anything, including an image file, a\nrelational database, a sound file, an internal data structure, or a value\ncalculated by an application at run-time. From this list, it should be apparent\nthat an object can be either persistent or transient. Chimera places no\nrestrictions on the format of a viewer's objects. In fact, Chimera has no\nknowledge of the format or type of any object manipulated by its integrated\nviewers. It may seem odd, then, that Chimera provides the object concept\nat all. However, this lack of knowledge of the explicit type of an object\nenables Chimera to link a diverse set of media types. Therefore it is important\nto clearly define the modeling power provided by objects.</P>\n\n<P>The object concept is used as a reference to application-specific data.\nIt is <I>not</I> the data itself, but rather contains the information necessary\nfor a viewer to relocate or recompute the data. Like a viewer, the object\nhas an associated name. Typically, if the object refers to a file or Internet\nresource, the name of the object is a URL specifying the location of that\nresource. An object also has an associated MIME-type. This specifies the\nformat of the object and allows Chimera to monitor the creation of views.\nIn particular, Chimera will not allow a view to be created if the viewer\ndoes not support the MIME-type specified by the object. If additional information\nis required to locate an object besides the object's name, <A HREF=\"attributes.html\">attribute-value\npairs</A> can be created on the object instance to store this information.</P>\n\n<P><TABLE BORDER=\"0\" CELLSPACING=\"2\" CELLPADDING=\"0\">\n<TR>\n<TD VALIGN=\"TOP\">In some cases, viewers synthesize information from more than one object\nin order to create a view. For instance, a flight simulator can create an\nartificial horizon view based off the pitch and roll values of the simulation.\nIn order to accurately model this situation within Chimera three object\ninstances would be created. One each for the pitch and roll objects, and\none for their combination. Views can then be created for each of these objects\nallowing anchors to be associated with each separately. The combination\nobject is known as a <I>composite</I> and is created by instantiating a\nnew object instance and adding the pitch and roll objects to it. Since you\ncan add composites to other composites, hierarchies can be formed to model\nhierarchical data objects. Views can then be created on any part of the\nhierarchy.</TD>\n<TD><IMG SRC=\"../../images/multiview.gif\" WIDTH=\"222\" HEIGHT=\"287\" NATURALSIZEFLAG=\n\"3\" ALIGN=\"BOTTOM\"></TD></TR>\n</TABLE>\n</P>\n\n<H2>Developer Information</H2>\n\n<P>The available operations on objects are listed below. For more information\nsee the <A HREF=\"../../dev/docs/index.html\">on-line documentation</A>.</P>\n\n<P><TABLE BORDER=\"1\" CELLSPACING=\"2\" CELLPADDING=\"4\">\n<TR VALIGN=\"TOP\">\n<TD VALIGN=\"TOP\" NOWRAP><B>addObject(object, object)</B></TD>\n<TD>Adds the specified object to the target object. The target object is now\nconsidered a composite object.</TD></TR>\n<TR VALIGN=\"TOP\">\n<TD VALIGN=\"TOP\" NOWRAP><B>createAnchor(object)</B></TD>\n<TD>Creates a new anchor on the specified object. This anchor is considered\n<A HREF=\"anchors.html\">view-independent</A>.</TD></TR>\n<TR VALIGN=\"TOP\">\n<TD VALIGN=\"TOP\" NOWRAP><B>createObject(String, String)</B></TD>\n<TD>Creates a new object in the active hyperweb. The first string specifies\nthe object's name (typically a URL pointing to the object), while the second\nstring specifies the object's MIME type.</TD></TR>\n<TR VALIGN=\"TOP\">\n<TD VALIGN=\"TOP\" NOWRAP><B>deleteObject(object)</B></TD>\n<TD>Delete's the specified object from the active hyperweb. Note, the Chimera\nserver proactively maintains the consistency of the Chimera hyperweb, thus\nthis operation will also remove any views which contain the specified object,\nwhich in turn will delete any anchors associated with those views, etc.</TD></TR>\n<TR VALIGN=\"TOP\">\n<TD VALIGN=\"TOP\" NOWRAP><B>getAnchors(object)</B></TD>\n<TD>Returns a list of anchors associated with the specified object in the active\nhyperweb.</TD></TR>\n<TR VALIGN=\"TOP\">\n<TD VALIGN=\"TOP\" NOWRAP><B>getMIMEtype(object)</B></TD>\n<TD>Returns the object's MIME type.</TD></TR>\n<TR VALIGN=\"TOP\">\n<TD VALIGN=\"TOP\" NOWRAP><B>getObject(String)</B></TD>\n<TD>Returns the object with the specified name.</TD></TR>\n<TR VALIGN=\"TOP\">\n<TD VALIGN=\"TOP\" NOWRAP><B>getObjectName(object)</B></TD>\n<TD>Returns the object's name.</TD></TR>\n<TR VALIGN=\"TOP\">\n<TD VALIGN=\"TOP\" NOWRAP><B>getObjects()</B></TD>\n<TD>Returns all of the objects for the active hyperweb.</TD></TR>\n<TR VALIGN=\"TOP\">\n<TD VALIGN=\"TOP\" NOWRAP><B>getObjects(object)</B></TD>\n<TD>Returns all of the objects stored in the specified composite.</TD></TR>\n<TR VALIGN=\"TOP\">\n<TD VALIGN=\"TOP\" NOWRAP><B>isComposite(object)</B></TD>\n<TD>Returns <CODE>TRUE</CODE> if the object is a composite.</TD></TR>\n<TR VALIGN=\"TOP\">\n<TD VALIGN=\"TOP\" NOWRAP><B>numberOfAnchors(object)</B></TD>\n<TD>Returns the number of anchors associated with the specified object.</TD></TR>\n<TR VALIGN=\"TOP\">\n<TD VALIGN=\"TOP\" NOWRAP><B>numberOfObjects()</B></TD>\n<TD>Returns the number of objects contained in the active hyperweb.</TD></TR>\n<TR VALIGN=\"TOP\">\n<TD VALIGN=\"TOP\" NOWRAP><B>numberOfObjects(object)</B></TD>\n<TD>Returns the number of objects contained in the specified composite.</TD></TR>\n<TR VALIGN=\"TOP\">\n<TD VALIGN=\"TOP\" NOWRAP><B>objectExists(String)</B></TD>\n<TD>Checks to see if an object with the specified name exists in the active\nhyperweb.</TD></TR>\n<TR VALIGN=\"TOP\">\n<TD VALIGN=\"TOP\" NOWRAP><B>objectExists(object)</B></TD>\n<TD>Checks to see if an object with the specified object id exists in the active\nhyperweb.</TD></TR>\n</TABLE>\n</P>\n\n<P><CENTER><HR SIZE=\"1\" NOSHADE> <TABLE BORDER=\"1\" CELLSPACING=\"0\" CELLPADDING=\n\"2\">\n<CAPTION ALIGN=\"TOP\">Local Site Map</CAPTION>\n<TR>\n<TD WIDTH=\"33%\" BGCOLOR=\"#ffff99\" ALIGN=\"CENTER\"><A HREF=\"index.html\">Overview</A></TD>\n<TD WIDTH=\"33%\" BGCOLOR=\"#ffff99\" ALIGN=\"CENTER\"><A HREF=\"viewers.html\">Viewers</A></TD>\n<TD WIDTH=\"34%\" BGCOLOR=\"#ffff99\" ALIGN=\"CENTER\"><B>Objects</B></TD></TR>\n<TR>\n<TD WIDTH=\"33%\" BGCOLOR=\"#ffff99\" ALIGN=\"CENTER\"><A HREF=\"views.html\">Views</A></TD>\n<TD WIDTH=\"33%\" BGCOLOR=\"#ffff99\" ALIGN=\"CENTER\"><A HREF=\"anchors.html\">Anchors</A></TD>\n<TD WIDTH=\"34%\" BGCOLOR=\"#ffff99\" ALIGN=\"CENTER\"><A HREF=\"links.html\">Links</A></TD></TR>\n<TR>\n<TD WIDTH=\"33%\" BGCOLOR=\"#ffff99\" ALIGN=\"CENTER\"><A HREF=\"attributes.html\">Attributes</A></TD>\n<TD WIDTH=\"33%\" BGCOLOR=\"#ffff99\" ALIGN=\"CENTER\"><A HREF=\"clients.html\">Clients</A></TD>\n<TD WIDTH=\"34%\" BGCOLOR=\"#ffff99\" ALIGN=\"CENTER\"><A HREF=\"hyperwebs.html\">Hyperwebs</A></TD></TR>\n</TABLE>\n</CENTER></P>\n\n<P><B>This page is part of the <A HREF=\"http://www.ics.uci.edu/pub/chimera/\">Chimera</A>\nweb site.<BR>\nSend feedback and questions to <A HREF=\"mailto:kanderso@ics.uci.edu\">Ken\nAnderson</A>.</B>\n</BODY>\n</HTML>\n", "id": 31057.0}