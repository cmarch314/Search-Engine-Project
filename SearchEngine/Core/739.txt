{"text": "ICS 163 Spring 2 1 Graph Algorithms General Course Information Coursework will consist of weekly homeworks a midterm and a comprehensive final exam Group work on homeworks is permitted each student should turn in his or her own copy of the homeworks Recommended but not required course texts will be Network Flows Ahuja Magnanti and Orlin and Graph Drawing Di Battista Eades Tamassia and Tollis The course meets Monday Wednesday and Fridays 2 2 5 in Bren Hall room 13 My office hours will be Mondays and Tuesdays 3 3 5 in Bren Hall room 4214 or by appointment The final grade will be formed by combining the numerical scores from the homeworks 2 midterm 35 and final 45 The reader is Liyan Zhang Tentative Schedule of Topics Week 1 Web crawler case study DFS BFS Kosaraju s algorithm for strongly connected components PageRank algorithm Representation of graphs Homework 1 due April 7 Week 2 Software call graph visualization case study DAGs topological ordering transitive closure transitive reduction layered graph drawing Homework 2 due April 14 Week 3 Road map path planning case study Shortest paths relaxation algorithms Dijkstra s algorithm Bellman Ford algorithm Johnson s algorithm A algorithm 15 puzzle example Euclidean distance based distance estimation landmark based distance estimation Homework 3 due April 21 Week 4 Maze and river network simulation via invasion percolation case study Minimum spanning trees Prim Dijkstra Jarnik algorithm Boruvka s algorithm Kruskal s algorithm Dynamic graph algorithms incremental connectivity testing union find data structure Homework 4 due April 28 Week 5 Social network analysis case study Cliques finding triangles Moon Moser bound on maximal cliques Bron Kerbosch algorithm MIDTERM FRIDAY Week 6 Medical school residency assignment case study Matchings stable marriage Gale Shipley algorithm for stable marriage bipartite graphs Hopcroft Karp algorithm for bipartite matching Homework 5 due May 12 Week 7 Rectangular cartogram case study Maximum flow problem minimum cut problem max flow min cut theorem formulating maximum matching as a flow problem baseball elimination augmenting path Ford Fulkerson algorithm bend minimization via min cost flow Edmonds Karp shortest augmenting path algorithm Homework 6 due Friday May 21 Week 8 Transportation scheduling case study Euler tours the Chinese postman problem the travelling salesman problem exponential time dynamic programming for the TSP approximation algorithms and the approximation ratio MST doubling heuristic Christofides heuristic Homework 7 due Friday May 28 Week 9 Register allocation case study Graph coloring greedy coloring intersection graphs interval graphs chordal graphs perfect graphs perfect elimination ordering lexicographic BFS Homework 8 due Friday June 4 Week 1 MEMORIAL DAY HOLIDAY MONDAY Sensor network localization case study relative neighborhood graphs Planar graphs review of planarity related topics from earlier weeks graph drawing road maps invasion percolation via minimum spanning trees of grid graphs bend minimization in cartograms graph coloring and the four color theorem Duality duality of Euler tours and bipartiteness Euler s formula F ry s theorem Schnyder s straight line embedding algorithm Material from Previous Course Offerings Syllabus from Spring 2 6 Syllabus and final exam from Spring 2 2 Syllabus midterm and final exam from Winter 1994 ", "_id": "http://www.ics.uci.edu/~eppstein/163/s10.html", "title": "graph algorithms", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<html>\n<head>\n<title>Graph Algorithms</title>\n</head>\n<body bgcolor=\"#ffffff\" text=\"#000000\">\n<h1>ICS 163, Spring 2010:<br>\nGraph Algorithms</h1>\n\n<hr>\n<h2>General Course Information</h2>\n\n<p>Coursework will consist of weekly homeworks, a midterm, and a\ncomprehensive final exam. Group work on homeworks is permitted;\neach student should turn in his or her own copy of the homeworks.\nRecommended (but not required) course texts will be <i>Network Flows</i>\n(Ahuja, Magnanti, and Orlin) and <i>Graph Drawing</i> (Di Battista, Eades, Tamassia, and\nTollis). The course meets Monday, Wednesday, and Fridays, 2:00 - 2:50,\nin Bren Hall, room 1300. My office hours will be Mondays and Tuesdays\n3:00 - 3:50, in Bren Hall, room 4214, or by appointment.\n\n<p>The final grade will be formed by combining the numerical scores from\nthe homeworks (20%), midterm (35%), and final (45%). The reader is Liyan\nZhang.</p>\n\n<h2>Tentative Schedule of Topics</h2>\n<ul>\n<li>Week 1. <a href=\"http://en.wikipedia.org/wiki/Web_crawler\">Web crawler</a> case study. <a\nhref=\"http://en.wikipedia.org/wiki/Depth-first_search\">DFS</a>, <a\nhref=\"http://en.wikipedia.org/wiki/Breadth-first_search\">BFS</a>, <a\nhref=\"http://en.wikipedia.org/wiki/Kosaraju%27s_algorithm\">Kosaraju's\nalgorithm</a> for <a href=\"http://en.wikipedia.org/wiki/Strongly_connected_component\">strongly connected\ncomponents</a>. <a href=\"http://en.wikipedia.org/wiki/PageRank\">PageRank\nalgorithm</a>. <a href=\"http://en.wikipedia.org/wiki/Graph_(data_structure)\">Representation of graphs</a>.<br>\n<a href=\"s10-hw1.txt\">Homework 1, due April 7.</a></li>\n<li>Week 2. <a href=\"http://en.wikipedia.org/wiki/Call_graph\">Software call graph</a> visualization case study. <a href=\"http://en.wikipedia.org/wiki/Directed_acyclic_graph\">DAGs</a>,\n<a href=\"http://en.wikipedia.org/wiki/Topological_sorting\">topological\nordering</a>, <a\nhref=\"http://en.wikipedia.org/wiki/Transitive_closure\">transitive\nclosure</a>, <a\nhref=\"http://en.wikipedia.org/wiki/Transitive_reduction\">transitive\nreduction</a>, <a\nhref=\"http://www.cs.usyd.edu.au/~visual/comp4048/slides03.ppt\">layered\ngraph drawing</a>.<br>\n<a href=\"s10-hw2.txt\">Homework 2, due April 14.</a></li>\n<li>Week 3.\n<a href=\"http://en.wikipedia.org/wiki/Route_planning_software\">Road map path planning</a> case study.\n<a href=\"http://en.wikipedia.org/wiki/Shortest_path_problem\">Shortest paths</a>,\n<a href=\"http://www.catonmat.net/blog/mit-introduction-to-algorithms-part-twelve/\">relaxation algorithms</a>,\n<a href=\"http://en.wikipedia.org/wiki/Dijkstra%27s_algorithm\">Dijkstra's algorithm</a>,\n<a href=\"http://en.wikipedia.org/wiki/Bellman-Ford_algorithm\">Bellman-Ford algorithm</a>,\n<a href=\"http://en.wikipedia.org/wiki/Johnson%27s_algorithm\">Johnson's algorithm</a>,\n<a href=\"http://en.wikipedia.org/wiki/A*_search_algorithm\">A*\nalgorithm</a>,\n<a href=\"http://en.wikipedia.org/wiki/Fifteen_puzzle\">15-puzzle example</a>,\n<a href=\"http://en.wikipedia.org/wiki/Euclidean_distance\">Euclidean\ndistance</a> based distance estimation,\n<a href=\"http://www.avglab.com/andrew/pub/soda05.pdf\">landmark-based distance estimation</a>.<br>\n<a href=\"s10-hw3.txt\">Homework 3, due April 21.</a></li>\n<li>Week 4. <a\nhref=\"http://en.wikipedia.org/wiki/Maze_generation_algorithm\">Maze</a>\nand <a href=\"http://www.nature.com/nature/journal/v352/n6334/abs/352423a0.html\">river network simulation via invasion percolation</a> case\nstudy. <a href=\"http://en.wikipedia.org/wiki/Minimum_spanning_tree\">Minimum\nspanning trees</a>, <a\nhref=\"http://en.wikipedia.org/wiki/Prim%27s_algorithm\">Prim-Dijkstra-Jarnik\nalgorithm</a>, <a\nhref=\"http://en.wikipedia.org/wiki/Boruvka%27s_algorithm\">Boruvka's\nalgorithm</a>, <a\nhref=\"http://en.wikipedia.org/wiki/Kruskal%27s_algorithm\">Kruskal's\nalgorithm</a>. <a\nhref=\"http://en.wikipedia.org/wiki/Dynamic_problem_(algorithms)#Graphs\">Dynamic\ngraph algorithms</a>, incremental connectivity testing, <a\nhref=\"http://en.wikipedia.org/wiki/Disjoint-set_data_structure\">union-find\ndata structure</a>.<br>\n<a href=\"s10-hw4.txt\">Homework 4, due April 28.</a></li>\n<li>Week 5. <a href=\"http://en.wikipedia.org/wiki/Social_network\">Social network analysis</a> case study. <a\nhref=\"http://en.wikipedia.org/wiki/Clique_problem\">Cliques</a>, <a href=\"http://en.wikipedia.org/wiki/Clique_problem#Cliques_of_fixed_size\">finding\ntriangles</a>, <a href=\"http://en.wikipedia.org/wiki/Tur%C3%A1n_graph#Special_cases\">Moon-Moser\nbound on maximal cliques</a>, <a href=\"http://en.wikipedia.org/wiki/Bron%E2%80%93Kerbosch_algorithm\">Bron-Kerbosch\nalgorithm</a>. MIDTERM FRIDAY.</li>\n<li>Week 6. <a\nhref=\"http://en.wikipedia.org/wiki/Residency_(medicine)#Matching\">Medical\nschool residency assignment</a> case study. <a href=\"http://en.wikipedia.org/wiki/Matching_(graph_theory)\">Matchings</a>, <a\nhref=\"http://en.wikipedia.org/wiki/Stable_marriage_problem\">stable\nmarriage</a>, <a\nhref=\"http://en.wikipedia.org/wiki/Stable_marriage_problem#Algorithm\">Gale-Shipley\nalgorithm for stable marriage</a>, <a\nhref=\"http://en.wikipedia.org/wiki/Bipartite_graph\">bipartite\ngraphs</a>, <a\nhref=\"http://en.wikipedia.org/wiki/Hopcroft-Karp_algorithm\">Hopcroft-Karp\nalgorithm for bipartite matching</a>.<br>\n<a href=\"s10-hw5.txt\">Homework 5, due May 12.</a></li>\n</li>\n<li>Week 7. <a\nhref=\"http://www.win.tue.nl/~speckman/Cartograms/SoccerCarto.html\">Rectangular\ncartogram</a> case study. <a\nhref=\"http://en.wikipedia.org/wiki/Maximum_flow_problem\">Maximum flow\nproblem</a>, <a\nhref=\"http://en.wikipedia.org/wiki/Cut_(graph_theory)\">minimum cut\nproblem</a>, <a\nhref=\"http://en.wikipedia.org/wiki/Max-flow_min-cut_theorem\">max-flow\nmin-cut theorem</a>, <a href=\"http://ace.cs.ohiou.edu/~razvan/courses/cs404/lecture21.pdf\">formulating maximum matching as a flow problem</a>, <a\nhref=\"http://www.cs.princeton.edu/courses/archive/spr03/cs226/assignments/baseball.html\">baseball elimination</a>, <a\nhref=\"http://en.wikipedia.org/wiki/Ford-Fulkerson_algorithm\">augmenting\npath (Ford-Fulkerson) algorithm</a>, <a\nhref=\"http://www.math.nyu.edu/~pach/syllabus/raghavan-notes2.pdf\">bend\nminimization via min cost flow</a>, <a\nhref=\"http://en.wikipedia.org/wiki/Edmonds-Karp_algorithm\">Edmonds-Karp\n(shortest augmenting path) algorithm</a>.<br>\n<a href=\"s10-hw6.txt\">Homework 6, due Friday May 21.</a></li>\n<li>Week 8. Transportation scheduling case study.\n<a href=\"http://en.wikipedia.org/wiki/Eulerian_path\">Euler tours</a>,\n<a href=\"http://en.wikipedia.org/wiki/Route_inspection_problem\">the Chinese postman problem</a>,\n<a href=\"http://en.wikipedia.org/wiki/Travelling_salesman_problem\">the travelling salesman problem</a>,\n<a href=\"http://11011110.livejournal.com/133469.html\">exponential-time dynamic programming for the TSP</a>,\n<a href=\"http://en.wikipedia.org/wiki/Approximation_algorithm\">approximation algorithms and the approximation ratio</a>,\n<a\nhref=\"http://en.wikipedia.org/wiki/Travelling_salesman_problem#Metric_TSP\">MST-doubling\nheuristic</a>,\n<a href=\"http://en.wikipedia.org/wiki/Christofides_algorithm\">Christofides' heuristic</a>.\n<br>\n<a href=\"s10-hw7.txt\">Homework 7, due Friday May 28.</a></li>\n<li>Week 9. <a href=\"http://en.wikipedia.org/wiki/Register_allocation\">Register allocation</a> case study.\n<a href=\"http://en.wikipedia.org/wiki/Graph_coloring\">Graph coloring</a>,\n<a href=\"http://en.wikipedia.org/wiki/Greedy_coloring\">greedy coloring</a>,\n<a href=\"http://en.wikipedia.org/wiki/Intersection_graph\">intersection graphs</a>,\n<a href=\"http://en.wikipedia.org/wiki/Interval_graph\">interval graphs</a>,\n<a href=\"http://en.wikipedia.org/wiki/Chordal_graph\">chordal graphs</a>,\n<a href=\"http://en.wikipedia.org/wiki/Perfect_graph\">perfect graphs</a>,\n<a href=\"http://en.wikipedia.org/wiki/Chordal_graph#Perfect_elimination_and_efficient_recognition\">perfect elimination ordering,\n<a href=\"http://en.wikipedia.org/wiki/Lexicographic_breadth-first_search\">lexicographic BFS</a>.<br>\n<a href=\"s10-hw8.txt\">Homework 8, due Friday June 4.</a></li>\n<li>Week 10. MEMORIAL DAY HOLIDAY MONDAY.\n<a href=\"http://en.wikipedia.org/wiki/Wireless_sensor_network\">Sensor\nnetwork</a/> <a\nhref=\"http://en.wikipedia.org/wiki/Robot_localization\">localization</a>\ncase study, <a\nhref=\"http://en.wikipedia.org/wiki/Relative_neighborhood_graph\">relative\nneighborhood graphs</a>. <a href=\"http://en.wikipedia.org/wiki/Planar_graph\">Planar\ngraphs</a>; review of planarity-related topics from earlier weeks (graph\ndrawing, road maps, invasion percolation via minimum spanning trees of\ngrid graphs, bend minimization in cartograms, graph coloring and the\nfour-color theorem). <a href=\"http://en.wikipedia.org/wiki/Dual_graph\">Duality</a>,\nduality of <a href=\"http://en.wikipedia.org/wiki/Euler_tour\">Euler\ntours</a> and <a href=\"http://en.wikipedia.org/wiki/Bipartite_graph\">bipartiteness</a>,\n<a href=\"http://www.ics.uci.edu/~eppstein/junkyard/euler/\">Euler's formula</a>,\n<a href=\"http://en.wikipedia.org/wiki/Fary%27s_theorem\">F&aacute;ry's theorem</a>,\n<a href=\"http://www.ics.uci.edu/~eppstein/gina/schnyder/\">Schnyder's\nstraight-line embedding algorithm</a>.</li>\n</ul>\n\n<h2>Material from Previous Course Offerings</h2>\n\n<ul>\n<li><a href=\"s06.html\">Syllabus</a> from Spring 2006.</li>\n<li><a href=\"s02.html\">Syllabus</a> and <a href=\"s02-final.pdf\">final exam</a> from Spring 2002.</li>\n<li><a href=\"w94-syl.pdf\">Syllabus</a>, <a href=\"w94-mt.pdf\">midterm</a>, and <a href=\"w94-f.pdf\">final exam</a> from Winter 1994.</li>\n</body>\n</html>\n\n", "id": 739.0}