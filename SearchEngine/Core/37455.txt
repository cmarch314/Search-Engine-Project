{"text": "OEChem Python Theory Manual Version 1 3 1 Previous 16 Formal and Partial Up 16 Formal and Partial Next 16 2 Working with Partial 16 1 Assigning Formal Charges Normally file formats such as SMILES SLN or MDL s SDF format specify the formal on each atom of a connection table However when reading from lesser file formats or when repairing broken molecules it may be convenient to assign formal charges to each atom such that the atomic valence is consistent OEChem provides this functionality via the OEAssignFormalCharges function This function requires that bond orders and implicit hydrogen counts have been set on a molecule It then adjusts the formal charge on each uncharged atom to correct common valence model mismatches For example quaternary nitrogens are assigned a 1 formal charge and terminal oxygen connected only by a single bond with no implicit hydrogens is assigned a 1 formal charge A more technical discussion of the formal charges that are assigned by this function are described in the OpenEye Charge Model section of the Valence Models chapter of this document OEChem Python Theory Manual Version 1 3 1 Previous 16 Formal and Partial Up 16 Formal and Partial Next 16 2 Working with Partial Documentation released on July 3 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/oechem/pyprog/node144.html", "title": "16.1 assigning formal charges", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<html>\n<head>\n<title>16.1 Assigning Formal Charges</title>\n<META NAME=\"description\" CONTENT=\"16.1 Assigning Formal Charges\">\n<META NAME=\"keywords\" CONTENT=\"pyprog\">\n<META NAME=\"resource-type\" CONTENT=\"document\">\n<META NAME=\"distribution\" CONTENT=\"global\">\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n<link rel=\"STYLESHEET\" href=\"pyprog.css\">\n<link rel=\"first\" href=\"pyprog.html\">\n<link rel=\"contents\" href=\"contents.html\" title=\"Contents\">\n\n<LINK REL=\"next\" HREF=\"node145.html\">\n<LINK REL=\"previous\" HREF=\"node143.html\">\n<LINK REL=\"up\" HREF=\"node143.html\">\n<LINK REL=\"next\" HREF=\"node145.html\">\n</head>\n<body>\n<DIV CLASS=\"navigation\">\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node143.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node143.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node145.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - Python Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"genindex.html\"><img src=\"../icons/index.gif\"\n  border=\"0\" alt=\"Index\"></A></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node143.html\">16. Formal and Partial</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node143.html\">16. Formal and Partial</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node145.html\">16.2 Working with Partial</A>\n<br><hr>\n</DIV>\n<!--End of Navigation Panel-->\n\n<H1><A NAME=\"SECTION0018100000000000000000\">\n16.1 Assigning Formal Charges</A>\n</H1>\n\n<P>\nNormally, file formats such as SMILES, SLN or MDL's SDF format, specify\nthe formal on each atom of a connection table.  However, when reading\nfrom lesser file formats or when repairing \"broken\" molecules, it may\nbe convenient to assign formal charges to each atom such that the atomic\nvalence is consistent.  OEChem provides this functionality via the\n<code>OEAssignFormalCharges</code> function.  This function requires that bond\norders and implicit hydrogen counts have been set on a molecule.  It then\nadjusts the formal charge on each uncharged atom to correct common valence\nmodel mismatches.  For example, quaternary nitrogens are assigned a +1\nformal charge, and terminal oxygen connected only by a single bond (with\nno implicit hydrogens) is assigned a -1 formal charge.\n\n<P>\nA more technical discussion of the formal charges that are assigned by\nthis function are described in the \"OpenEye Charge Model\" section of the\n\"Valence Models\" chapter of this document.\n\n<P>\n\n<DIV CLASS=\"navigation\">\n<p><hr>\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node143.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node143.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node145.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - Python Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"genindex.html\"><img src=\"../icons/index.gif\"\n  border=\"0\" alt=\"Index\"></A></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node143.html\">16. Formal and Partial</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node143.html\">16. Formal and Partial</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node145.html\">16.2 Working with Partial</A>\n<hr>\n<span class=\"release-info\">Documentation released on July 30, 2004.</span>\n</DIV>\n<!--End of Navigation Panel-->\n\n</BODY>\n</HTML>\n", "id": 37455.0}