{"text": " Home Trees Indices Help Package CHEM Package Annotation Module ChemicalAnnotators Class InChiAnnotator hide private frames no frames Class InChiAnnotator BaseAnnotator BaseAnnotator InChiAnnotator Determine the InChi string given an OEMolBase the IUPAC defined chemical identifier standard Comes with an AuxInfo line too which is apparently necessary to identify atom types to fully back convert the InChi into other molecular file formats http www iupac org inchi annotator InChiAnnotator for item in callBySmiles annotator C1OC C NCO1 print item InChI 1 C4H9NO2 c1 4 5 2 6 3 7 4 h4 5H 2 3H2 1H3 AuxInfo 1 N 4 6 1 3 5 7 2 rA 7cCOCCNCO rB s1 s2 s3 s3 s5 s1s6 rC for item in callBySmiles annotator C1OCNCO1 print item InChI 1 C3H7NO2 c1 4 2 6 3 5 1 h4H 1 3H2 AuxInfo 1 N 3 5 1 4 2 6 E 1 2 5 6 rA 6nCOCNCO rB s1 s2 s3 s4 s1s5 rC for item in callBySmiles annotator C1O C H C NCO1 print item InChI 1 C4H9NO2 c1 4 5 2 6 3 7 4 h4 5H 2 3H2 1H3 AuxInfo 1 N 4 6 1 3 5 7 2 rA 7cCOCCNCO rB s1 s2 s3 s3 s5 s1s6 rC for item in callBySmiles annotator COCN C C print item InChI 1 C4H11NO c1 5 2 4 6 3 h4H2 1 3H3 AuxInfo 1 N 5 6 1 3 4 2 E 1 2 rA 6nCOCNCC rB s1 s2 s3 s4 s4 rC for item in callBySmiles annotator OC C N print item InChI 1 C2H7NO c1 2 3 4 h2 4H 3H2 1H3 AuxInfo 1 N 3 2 4 1 rA 4cOCCN rB s1 s2 s2 rC for item in callBySmiles annotator OC C print item InChI 1 C2H4O c1 2 3 h2 3H 1H2 AuxInfo 1 N 3 2 1 rA 3nOCC rB s1 d2 rC for item in callBySmiles annotator c1ccccc1O print item InChI 1 C6H6O c7 6 4 2 1 3 5 6 h1 5 7H AuxInfo 1 N 3 2 4 1 5 6 7 E 2 3 4 5 rA 7nCCCCCCO rB s1 d2 s3 d4 d1s5 s6 rC for item in callBySmiles annotator c1ccccc1c2ccccc2 print item InChI 1 C12H1 c1 3 7 11 8 4 1 12 9 5 2 6 1 12 h1 1 H AuxInfo 1 N 3 1 2 4 9 11 1 5 8 12 6 7 E 1 2 3 4 5 6 7 8 9 1 11 12 rA 12nCCCCCCCCCCCC rB s1 d2 s3 d4 d1s5 s6 s7 d8 s9 d1 d7s11 rC Instance Methods hide private allColumns self Return an ordered sequence of all the column names that this multiple annotator can generate values for allValues self input Return an ordered sequence of all the values this multiple annotator can calculate off of the input Inherited from BaseAnnotator BaseAnnotator init annotateDict iteritems iterkeys itervalues keys specifyColumns values Class Variables hide private Inherited from BaseAnnotator BaseAnnotator specificCols Method Details hide private allColumns self Return an ordered sequence of all the column names that this multiple annotator can generate values for To facilitate ease of filtering with case insensitivity all of the values returned by this method should be lowercase Overrides BaseAnnotator BaseAnnotator allColumns inherited documentation allValues self input Return an ordered sequence of all the values this multiple annotator can calculate off of the input The order must correspond to the column list returned by allColumns so the caller can know which element is which Overrides BaseAnnotator BaseAnnotator allValues inherited documentation Home Trees Indices Help Generated by Epydoc 3 beta1 on Thu Nov 8 17 49 26 2 7 http epydoc sourceforge net", "_id": "http://www.ics.uci.edu/~dock/CHEM_docs/CHEM.Annotation.ChemicalAnnotators.InChiAnnotator-class.html", "title": "chem.annotation.chemicalannotators.inchiannotator", "html": "<?xml version=\"1.0\" encoding=\"ascii\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n          \"DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n  <title>CHEM.Annotation.ChemicalAnnotators.InChiAnnotator</title>\n  <link rel=\"stylesheet\" href=\"epydoc.css\" type=\"text/css\" />\n  <script type=\"text/javascript\" src=\"epydoc.js\"></script>\n</head>\n\n<body bgcolor=\"white\" text=\"black\" link=\"blue\" vlink=\"#204080\"\n      alink=\"#204080\">\n<!-- ==================== NAVIGATION BAR ==================== -->\n<table class=\"navbar\" border=\"0\" width=\"100%\" cellpadding=\"0\"\n       bgcolor=\"#a0c0ff\" cellspacing=\"0\">\n  <tr valign=\"middle\">\n  <!-- Home link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"CHEM-module.html\">Home</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Tree link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"module-tree.html\">Trees</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Index link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"identifier-index.html\">Indices</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Help link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"help.html\">Help</a>&nbsp;&nbsp;&nbsp;</th>\n\n      <th class=\"navbar\" width=\"100%\"></th>\n  </tr>\n</table>\n<table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n  <tr valign=\"top\">\n    <td width=\"100%\">\n      <span class=\"breadcrumbs\">\n        <a href=\"CHEM-module.html\">Package&nbsp;CHEM</a> ::\n        <a href=\"CHEM.Annotation-module.html\">Package&nbsp;Annotation</a> ::\n        <a href=\"CHEM.Annotation.ChemicalAnnotators-module.html\">Module&nbsp;ChemicalAnnotators</a> ::\n        Class&nbsp;InChiAnnotator\n      </span>\n    </td>\n    <td>\n      <table cellpadding=\"0\" cellspacing=\"0\">\n        <!-- hide/show private -->\n        <tr><td align=\"right\"><span class=\"options\">[<a href=\"javascript:void(0);\" class=\"privatelink\"\n    onclick=\"toggle_private();\">hide&nbsp;private</a>]</span></td></tr>\n        <tr><td align=\"right\"><span class=\"options\"\n            >[<a href=\"frames.html\" target=\"_top\">frames</a\n            >]&nbsp;|&nbsp;<a href=\"CHEM.Annotation.ChemicalAnnotators.InChiAnnotator-class.html\"\n            target=\"_top\">no&nbsp;frames</a>]</span></td></tr>\n      </table>\n    </td>\n  </tr>\n</table>\n<!-- ==================== CLASS DESCRIPTION ==================== -->\n<h1 class=\"epydoc\">Class InChiAnnotator</h1><br /><br />\n<pre class=\"base-tree\">\nBaseAnnotator.BaseAnnotator --+\n                              |\n                             <strong class=\"uidshort\">InChiAnnotator</strong>\n</pre>\n\n<hr />\n<p>Determine the InChi string given an OEMolBase, the IUPAC defined \n  chemical identifier standard. Comes with an AuxInfo line too, which is \n  apparently necessary to identify atom types to fully back-convert the \n  InChi into other molecular file formats.</p>\n  http://www.iupac.org/inchi/\n<pre class=\"py-doctest\">\n<span class=\"py-prompt\">&gt;&gt;&gt; </span>annotator = InChiAnnotator();\n<span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">for</span> item <span class=\"py-keyword\">in</span> callBySmiles( annotator, <span class=\"py-string\">&quot;C1OC(C)NCO1&quot;</span>):\n<span class=\"py-more\">... </span>    <span class=\"py-keyword\">print</span> item;\n<span class=\"py-output\">InChI=1/C4H9NO2/c1-4-5-2-6-3-7-4/h4-5H,2-3H2,1H3</span>\n<span class=\"py-output\">AuxInfo=1/0/N:4,6,1,3,5,7,2/rA:7cCOCCNCO/rB:s1;s2;s3;s3;s5;s1s6;/rC:;;;;;;;</span>\n<span class=\"py-output\"></span><span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">for</span> item <span class=\"py-keyword\">in</span> callBySmiles( annotator, <span class=\"py-string\">&quot;C1OCNCO1&quot;</span>):\n<span class=\"py-more\">... </span>    <span class=\"py-keyword\">print</span> item;\n<span class=\"py-output\">InChI=1/C3H7NO2/c1-4-2-6-3-5-1/h4H,1-3H2</span>\n<span class=\"py-output\">AuxInfo=1/0/N:3,5,1,4,2,6/E:(1,2)(5,6)/rA:6nCOCNCO/rB:s1;s2;s3;s4;s1s5;/rC:;;;;;;</span>\n<span class=\"py-output\"></span><span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">for</span> item <span class=\"py-keyword\">in</span> callBySmiles( annotator, <span class=\"py-string\">&quot;C1O[C@H](C)NCO1&quot;</span>):\n<span class=\"py-more\">... </span>    <span class=\"py-keyword\">print</span> item;\n<span class=\"py-output\">InChI=1/C4H9NO2/c1-4-5-2-6-3-7-4/h4-5H,2-3H2,1H3</span>\n<span class=\"py-output\">AuxInfo=1/0/N:4,6,1,3,5,7,2/rA:7cCOCCNCO/rB:s1;s2;s3;s3;s5;s1s6;/rC:;;;;;;;</span>\n<span class=\"py-output\"></span><span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">for</span> item <span class=\"py-keyword\">in</span> callBySmiles( annotator, <span class=\"py-string\">&quot;COCN(C)C&quot;</span>):\n<span class=\"py-more\">... </span>    <span class=\"py-keyword\">print</span> item;\n<span class=\"py-output\">InChI=1/C4H11NO/c1-5(2)4-6-3/h4H2,1-3H3</span>\n<span class=\"py-output\">AuxInfo=1/0/N:5,6,1,3,4,2/E:(1,2)/rA:6nCOCNCC/rB:s1;s2;s3;s4;s4;/rC:;;;;;;</span>\n<span class=\"py-output\"></span><span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">for</span> item <span class=\"py-keyword\">in</span> callBySmiles( annotator, <span class=\"py-string\">&quot;OC(C)N&quot;</span>):\n<span class=\"py-more\">... </span>    <span class=\"py-keyword\">print</span> item;\n<span class=\"py-output\">InChI=1/C2H7NO/c1-2(3)4/h2,4H,3H2,1H3</span>\n<span class=\"py-output\">AuxInfo=1/0/N:3,2,4,1/rA:4cOCCN/rB:s1;s2;s2;/rC:;;;;</span>\n<span class=\"py-output\"></span><span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">for</span> item <span class=\"py-keyword\">in</span> callBySmiles( annotator, <span class=\"py-string\">&quot;OC=C&quot;</span>):\n<span class=\"py-more\">... </span>    <span class=\"py-keyword\">print</span> item;\n<span class=\"py-output\">InChI=1/C2H4O/c1-2-3/h2-3H,1H2</span>\n<span class=\"py-output\">AuxInfo=1/0/N:3,2,1/rA:3nOCC/rB:s1;d2;/rC:;;;</span>\n<span class=\"py-output\"></span><span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">for</span> item <span class=\"py-keyword\">in</span> callBySmiles( annotator, <span class=\"py-string\">&quot;c1ccccc1O&quot;</span>):\n<span class=\"py-more\">... </span>    <span class=\"py-keyword\">print</span> item;\n<span class=\"py-output\">InChI=1/C6H6O/c7-6-4-2-1-3-5-6/h1-5,7H</span>\n<span class=\"py-output\">AuxInfo=1/0/N:3,2,4,1,5,6,7/E:(2,3)(4,5)/rA:7nCCCCCCO/rB:s1;d2;s3;d4;d1s5;s6;/rC:;;;;;;;</span>\n<span class=\"py-output\"></span><span class=\"py-prompt\">&gt;&gt;&gt; </span><span class=\"py-keyword\">for</span> item <span class=\"py-keyword\">in</span> callBySmiles( annotator, <span class=\"py-string\">&quot;c1ccccc1c2ccccc2&quot;</span>):\n<span class=\"py-more\">... </span>    <span class=\"py-keyword\">print</span> item;\n<span class=\"py-output\">InChI=1/C12H10/c1-3-7-11(8-4-1)12-9-5-2-6-10-12/h1-10H</span>\n<span class=\"py-output\">AuxInfo=1/0/N:3,10,2,4,9,11,1,5,8,12,6,7/E:(1,2)(3,4,5,6)(7,8,9,10)(11,12)/rA:12nCCCCCCCCCCCC/rB:s1;d2;s3;d4;d1s5;s6;s7;d8;s9;d10;d7s11;/rC:;;;;;;;;;;;;</span></pre><br /><br />\n\n<!-- ==================== INSTANCE METHODS ==================== -->\n<a name=\"section-InstanceMethods\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Instance Methods</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-InstanceMethods\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Annotation.ChemicalAnnotators.InChiAnnotator-class.html#allColumns\" class=\"summary-sig-name\">allColumns</a>(<span class=\"summary-sig-arg\">self</span>)</span><br />\n      Return an ordered sequence of all the column names that this \n      multiple annotator can generate values for.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Annotation.ChemicalAnnotators.InChiAnnotator-class.html#allValues\" class=\"summary-sig-name\">allValues</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">input</span>)</span><br />\n      Return an ordered sequence of all the values this multiple \n      annotator can calculate off of the input.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n  <tr>\n    <td colspan=\"2\" class=\"summary\">\n    <p class=\"indent-wrapped-lines\"><b>Inherited from <code>BaseAnnotator.BaseAnnotator</code></b>:\n      <code>__init__</code>,\n      <code>annotateDict</code>,\n      <code>iteritems</code>,\n      <code>iterkeys</code>,\n      <code>itervalues</code>,\n      <code>keys</code>,\n      <code>specifyColumns</code>,\n      <code>values</code>\n      </p>\n    </td>\n  </tr>\n</table>\n<!-- ==================== CLASS VARIABLES ==================== -->\n<a name=\"section-ClassVariables\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Class Variables</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-ClassVariables\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n  <tr>\n    <td colspan=\"2\" class=\"summary\">\n    <p class=\"indent-wrapped-lines\"><b>Inherited from <code>BaseAnnotator.BaseAnnotator</code></b>:\n      <code>specificCols</code>\n      </p>\n    </td>\n  </tr>\n</table>\n<!-- ==================== METHOD DETAILS ==================== -->\n<a name=\"section-MethodDetails\"></a>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Method Details</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-MethodDetails\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n</table>\n<a name=\"allColumns\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">allColumns</span>(<span class=\"sig-arg\">self</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <p>Return an ordered sequence of all the column names that this multiple \n  annotator can generate values for.</p>\n  To facilitate ease of filtering with case-insensitivity, all of the \n  values returned by this method should be lowercase.\n  <dl class=\"fields\">\n    <dt>Overrides:\n      <a href=\"CHEM.Annotation.BaseAnnotator.BaseAnnotator-class.html#allColumns\">BaseAnnotator.BaseAnnotator.allColumns</a>\n        <dd><em class=\"note\">(inherited documentation)</em></dd>\n    </dt>\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"allValues\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">allValues</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">input</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Return an ordered sequence of all the values this multiple annotator \n  can calculate off of the input.  The order must correspond to the column \n  list returned by allColumns so the caller can know which element is \n  which.\n  <dl class=\"fields\">\n    <dt>Overrides:\n      <a href=\"CHEM.Annotation.BaseAnnotator.BaseAnnotator-class.html#allValues\">BaseAnnotator.BaseAnnotator.allValues</a>\n        <dd><em class=\"note\">(inherited documentation)</em></dd>\n    </dt>\n  </dl>\n</td></tr></table>\n</div>\n<br />\n<!-- ==================== NAVIGATION BAR ==================== -->\n<table class=\"navbar\" border=\"0\" width=\"100%\" cellpadding=\"0\"\n       bgcolor=\"#a0c0ff\" cellspacing=\"0\">\n  <tr valign=\"middle\">\n  <!-- Home link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"CHEM-module.html\">Home</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Tree link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"module-tree.html\">Trees</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Index link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"identifier-index.html\">Indices</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Help link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"help.html\">Help</a>&nbsp;&nbsp;&nbsp;</th>\n\n      <th class=\"navbar\" width=\"100%\"></th>\n  </tr>\n</table>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%%\">\n  <tr>\n    <td align=\"left\" class=\"footer\">\n    Generated by Epydoc 3.0beta1 on Thu Nov  8 17:49:26 2007\n    </td>\n    <td align=\"right\" class=\"footer\">\n      <a href=\"http://epydoc.sourceforge.net\">http://epydoc.sourceforge.net</a>\n    </td>\n  </tr>\n</table>\n\n<script type=\"text/javascript\">\n  <!--\n  // Private objects are initially displayed (because if\n  // javascript is turned off then we want them to be\n  // visible); but by default, we want to hide them.  So hide\n  // them unless we have a cookie that says to show them.\n  checkCookie()\n  // -->\n</script>\n  \n</body>\n</html>\n", "id": 40396.0}