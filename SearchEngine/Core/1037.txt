{"text": "Syllabus CS 161 Design and Analysis of Algorithms Michael T Goodrich http www ics uci edu goodrich teach cs161 Lectures TTh 11 12 2 pm ICS 174 Office hours MW 2 3 pm Course Description Techniques for efficient algorithm design including divide and conquer and dynamic programming and time and space analysis of algorithms Fast algorithms for problems having applications in networks computer games graphics and scientific computing such as sorting shortest paths minimum spanning trees network flow and pattern matching Coursework Coursework will consist of weekly homeworks two midterms and a comprehensive final exam The overall grade will be determined 2 from homework 25 from each midterm and 3 from the final Group work on homeworks is permitted but each student must list his or her collaborators in writing for each problem If a student turns in a solution without listing the others who helped produce this solution this act will be considered cheating for it is plagarism Late homework assignments will not be accepted Exam policy Exam performance must be 1 individual effort no collaboration is allowed on exams Any collaboration or copying on exams will be considered cheating In addition to the procedures of the ICS Cheating Policy students caught cheating on exams will be given a failing grade in the class Laptop policy Open laptop computers are not allowed during lectures Text The course text which is required will be Algorithm Design by Goodrich and Tamassia Add drop policy Drops will be accepted only up to the first midterm Once your drop card has been signed further coursework from you will not be graded After the seventh week of classes withdrawals will be allowed only by petition and under documented extenuating circumstances Tentative Schedule Week 1 Growth of functions Amortization Data Structures Heap sort Week 2 Sorting comparison trees and lower bounds Mergesort Quicksort Bucket sort Selection Week 3 Fundamental techniques The greedy method Divide and conquer Week 4 Midterm I Dynamic programming Matrix chains Week 5 Knapsack Longest common subsequence Graphs and their representations Week 6 Graph algorithms Depth first search Breadth first search Topological sort Week 7 Midterm II Weighted graph algorithms Shortest paths Week 8 Minimum spanning trees Network flow Week 9 NP Completeness Week 1 Approximation algorithms FFT Copyright 2 14 Michael T Goodrich as to all lectures Students are prohibited from selling or being paid for taking notes during this course to or by any person or commercial firm without the express written permission of the professor teaching this course ", "_id": "http://www.ics.uci.edu/~goodrich/teach/cs161/syll.html", "title": "cs 161 - syllabus", "html": "<HEAD>\n<TITLE>CS 161 - Syllabus</TITLE>\n</HEAD>\n\n<body bgcolor=\"#FFFFFF\">\n<meta name=\"description\" value=\"SYLLABUS\">\n<meta name=\"keywords\" value=\"syll\">\n<meta name=\"resource-type\" value=\"document\">\n<meta name=\"distribution\" value=\"global\">\n\n<center>\n<h3> <b> Syllabus - CS 161 - Design and Analysis of Algorithms</b></h3> \n<b>Michael T. Goodrich</b> <BR> \n<a href=\"http://www.ics.uci.edu/~goodrich/teach/cs161/\">\n\t  http://www.ics.uci.edu/~goodrich/teach/cs161/</a> <BR>\nLectures: TTh 11:00-12:20pm, ICS 174\n<br>\nOffice hours: MW, 2:00-3:00pm\n</center>\n\n<ul>\n<li><b>Course Description.</b> \nTechniques for efficient algorithm design, including divide-and-conquer \nand dynamic programming, and time and space analysis of algorithms.\nFast algorithms for problems having applications in networks, \ncomputer games, graphics, and scientific computing, such as sorting, \nshortest paths, minimum spanning trees, network flow, and pattern matching.\n<li><b>Coursework.</b> Coursework will consist of weekly homeworks,\ntwo midterms, and a comprehensive final exam. The overall grade\nwill be determined 20% from homework, 25% from each midterm, and\n30% from the final.\nGroup work on homeworks is permitted, but each\nstudent must list his or her collaborators in writing for each problem.\nIf a student turns in a solution without listing\nthe others who helped produce this solution,\nthis act will be considered cheating (for it is plagarism).\nLate homework assignments will not be accepted.<br>\n</li>\n\n<li><b>Exam policy.</b>\nExam performance must be 100% individual effort; no collaboration\nis allowed on exams.  Any collaboration or copying on exams \nwill be considered cheating.\nIn addition to the procedures of the\n<a href=\"http://www.ics.uci.edu/ugrad/policies/index.php#cheating\">ICS \nCheating Policy</a>, students caught cheating on exams will be given a \nfailing grade in the class.\n</li>\n\n<li><b>Laptop policy.</b>\nOpen laptop computers are not allowed during lectures.\n</li>\n\n<li><b>Text.</b> The course text, which is required, will be \n<a href=\"http://www.algorithmdesign.net/\">Algorithm Design</a>,\nby Goodrich and Tamassia.\n</li>\n\n<li><b>Add/drop policy.</b> \nDrops will be accepted only up to the first midterm. \nOnce your drop card has been\nsigned, further coursework from you will not be graded. After the\nseventh week of classes, withdrawals will be allowed only by\npetition and under documented extenuating circumstances.\n</li>\n</ul>\n\n<h3>Tentative Schedule</h3>\n\n<ul>\n<li><b>Week 1:</b></li>\n\n<ul>\n<li>\nGrowth of functions.\nAmortization.  \nData Structures.\nHeap sort.  \n</li>\n</ul>\n\n<li><b>Week 2:</b></li>\n\n<ul>\n<li>\nSorting, comparison trees, and lower bounds. Mergesort. \nQuicksort. \nBucket sort. \nSelection.\n</li>\n</ul>\n\n<li>\n<b>Week 3:</b></li>\n\n\n<ul><li>\nFundamental techniques.\nThe greedy method.\nDivide-and-conquer.\n</li>\n</ul>\n\n<li>\n<b>Week 4:</b></li>\n\n\n<font color=\"RED\">Midterm I</font><br>\n<ul>\n<li>\nDynamic programming. \nMatrix-chains.  \n</li>\n</ul>\n\n<li>\n<b>Week 5:</b></li>\n\n<ul>\n<li>\nKnapsack.  Longest common subsequence.\nGraphs and their representations.\n</li>\n</ul>\n\n<li>\n<b>Week 6:</b></li>\n<ul>\n<li>\nGraph algorithms. Depth first search. \nBreadth-first search.\nTopological sort. \n</li>\n</ul>\n\n\n<li>\n<b>Week 7:</b></li>\n<font color=\"RED\">Midterm II</font><br>\n\n<ul>\n<li>\nWeighted graph algorithms.\nShortest paths.\n</li>\n</ul>\n\n<li>\n<b>Week 8:</b></li>\n\n\n\n<ul>\n<li>\nMinimum spanning trees. \nNetwork flow.\n</li>\n</ul>\n\n<li>\n<b>Week 9:</b></li>\n\n<ul>\n<li>\nNP-Completeness. \n</li>\n</ul>\n\n<li>\n<b>Week 10:</b>\n\n<ul>\n<li>\nApproximation algorithms. \nFFT.\n</li>\n</ul>\n\n</ul>\n\n<p>\n<p>\nCopyright &copy 2014\n<a href=\"http://www.ics.uci.edu/~goodrich/\">\nMichael T. Goodrich</a>, as to all lectures. \nStudents are prohibited from selling \n(or being paid for taking) notes during this course to or by any\nperson or commercial firm without the express written permission of the\nprofessor teaching this course.\n\n</BODY>\n", "id": 1037.0}