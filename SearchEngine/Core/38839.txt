{"text": "Navigation Up Table of Contents Bibliography Index Title Page CGAL Min annulus d Traits Definition An object of the class Min annulus d Traits is the unique annulus region between two concentric spheres with radii r and R r R enclosing a finite set of points in d dimensional Euclidean space d where the difference R2 r2 is minimal For a point set P we denote by ma P the smallest annulus that contains all points of P Note that ma P can be degenerate i e ma P if P and ma P p if P p An inclusion minimal subset S of P with ma S ma P is called a support set the points in S are the support points A support set has size at most d 2 and all its points lie on the boundary of ma P In general the support set is not necessarily unique The underlying algorithm can cope with all kinds of input e g P may be empty or points may occur more than once The algorithm computes a support set S which remains fixed until the next set insert or clear operation include CGAL Min annulus d h Requirements The template parameter Traits is a model for OptimisationDTraits We provide the models Optimisation d traits 2 Optimisation d traits 3 and Optimisation d traits d using the two three and d dimensional CGAL kernel respectively Types Min annulus d Traits Point typedef to Traits Point d Point type used to represent the input points Min annulus d Traits FT typedef to Traits FT Number type used to return the squared radii of the smallest enclosing annulus Min annulus d Traits ET typedef to Traits ET Number type used to do the exact computations in the underlying solver for quadratic programs cf Implementation Min annulus d Traits Point iterator non mutable model of the STL concept RandomAccessIterator with value type Point Used to access the points of the smallest enclosing annulus Min annulus d Traits Support point iterator non mutable model of the STL concept RandomAccessIterator with value type Point Used to access the support points of the smallest enclosing annulus Min annulus d Traits Inner support point iterator non mutable model of the STL concept RandomAccessIterator with value type Point Used to access the inner support points of the smallest enclosing annulus Min annulus d Traits Outer support point iterator non mutable model of the STL concept RandomAccessIterator with value type Point Used to access the outer support points of the smallest enclosing annulus Min annulus d Traits Coordinate iterator non mutable model of the STL concept RandomAccessIterator with value type ET Used to access the coordinates of the center of the smallest enclosing annulus Creation Min annulus d Traits min annulus Traits traits Traits int verbose std ostream stream std cout initializes min annulus to ma template class InputIterator Min annulus d Traits min annulus InputIterator first InputIterator last Traits traits Traits int verbose std ostream stream std cout initializes min annulus to ma P with P being the set of points in the range first last Requirement The value type of InputIterator is Point Precondition All points have the same dimension advanced If verbose is set to 1 2 or 3 then some more or full verbose output of the underlying solver for linear programs is written to stream resp advanced Access Functions int min annulus ambient dimension returns the dimension of the points in P If min annulus is empty the ambient dimension is 1 int min annulus number of points returns the number of points of min annulus i e P int min annulus number of support points returns the number of support points of min annulus i e S int min annulus number of inner support points returns the number of support points of min annulus which lie on the inner sphere int min annulus number of outer support points returns the number of support points of min annulus which lie on the outer sphere Point iterator min annulus points begin returns an iterator referring to the first point of min annulus Point iterator min annulus points end returns the corresponding past the end iterator Support point iterator min annulus support points begin returns an iterator referring to the first support point of min annulus Support point iterator min annulus support points end returns the corresponding past the end iterator Inner support point iterator min annulus inner support points begin returns an iterator referring to the first inner support point of min annulus Inner support point iterator min annulus inner support points end returns the corresponding past the end iterator Outer support point iterator min annulus outer support points begin returns an iterator referring to the first outer support point of min annulus Outer support point iterator min annulus outer support points end returns the corresponding past the end iterator Point min annulus center returns the center of min annulus Requirement An implicit conversion from ET to RT is available Precondition min annulus is not empty FT min annulus squared inner radius returns the squared inner radius of min annulus Requirement An implicit conversion from ET to RT is available Precondition min annulus is not empty FT min annulus squared outer radius returns the squared outer radius of min annulus Requirement An implicit conversion from ET to RT is available Precondition min annulus is not empty Coordinate iterator min annulus center coordinates begin returns an iterator referring to the first coordinate of the center of min annulus Note The coordinates have a rational representation i e the first d elements of the iterator range are the numerators and the d 1 st element is the common denominator Coordinate iterator min annulus center coordinates end returns the corresponding past the end iterator ET min annulus squared inner radius numerator returns the numerator of the squared inner radius of min annulus ET min annulus squared outer radius numerator returns the numerator of the squared outer radius of min annulus ET min annulus squared radii denominator returns the denominator of the squared radii of min annulus Predicates The bounded area of the smallest enclosing annulus lies between the inner and the outer sphere The boundary is the union of both spheres By definition an empty annulus has no boundary and no bounded side i e its unbounded side equals the whole space d CGAL Bounded side min annulus bounded side Point p returns CGAL ON BOUNDED SIDE CGAL ON BOUNDARY or CGAL ON UNBOUNDED SIDE iff p lies properly inside on the boundary or properly outside of min annulus resp Precondition The dimension of p equals min annulus ambient dimension if min annulus is not empty bool min annulus has on bounded side Point p returns true iff p lies properly inside min annulus Precondition The dimension of p equals min annulus ambient dimension if min annulus is not empty bool min annulus has on boundary Point p returns true iff p lies on the boundary of min annulus Precondition The dimension of p equals min annulus ambient dimension if min annulus is not empty bool min annulus has on unbounded side Point p returns true iff p lies properly outside of min annulus Precondition The dimension of p equals min annulus ambient dimension if min annulus is not empty bool min annulus is empty returns true iff min annulus is empty this implies degeneracy bool min annulus is degenerate returns true iff min annulus is degenerate i e if min annulus is empty or equal to a single point Modifiers void min annulus clear resets min annulus to ma template class InputIterator void min annulus set InputIterator first InputIterator last sets min annulus to ma P where P is the set of points in the range first last Requirement The value type of InputIterator is Point Precondition All points have the same dimension void min annulus insert Point p inserts p into min annulus Precondition The dimension of p equals min annulus ambient dimension if min annulus is not empty template class InputIterator void min annulus insert InputIterator first InputIterator last inserts the points in the range first last into min annulus and recomputes the smallest enclosing annulus Requirement The value type of InputIterator is Point Precondition All points have the same dimension If min annulus is not empty this dimension must be equal to min annulus ambient dimension Validity Check An object min annulus is valid iff min annulus contains all points of its defining set P min annulus is the smallest annulus containing its support set S and S is minimal i e no support point is redundant Note In this release only the first item is considered by the validity check bool min annulus is valid bool verbose false int level returns true iff min annulus is valid If verbose is true some messages concerning the performed checks are written to standard error stream The second parameter level is not used we provide it only for consistency with interfaces of other classes Miscellaneous const Traits min annulus traits returns a const reference to the traits class object I O std ostream std ostream os min annulus writes min annulus to output stream os Requirement The output operator is defined for Point std istream std istream is min annulus reads min annulus from input stream is Requirement The input operator is defined for Point See Also CGAL Min sphere d Traits CGAL Optimisation d traits 2 K ET NT CGAL Optimisation d traits 3 K ET NT CGAL Optimisation d traits d K ET NT OptimisationDTraits Implementation The problem of finding the smallest enclosing annulus of a finite point set can be formulated as an optimization problem with linear constraints and a linear objective function The solution is obtained using our exact solver for linear and quadratic programs GS The creation time is almost always linear in the number of points Access functions and predicates take constant time inserting a point takes almost always linear time The clear operation and the check for validity each take linear time Next Min sphere of spheres d Traits Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Optimisation_ref/Class_Min_annulus_d.html", "title": "min_annulus_d&lt;traits&gt;", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Optimisation_ref/Min_annulus_d.tex' -->\n<html> <head>  \n<title>Min_annulus_d&lt;Traits&gt;</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_1164\"></A>\n\n<A NAME=\"Cross_link_anchor_1165\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_1153\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Class.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_CGAL::Min_annulus_d<Traits>\"></A>\n<h2><I>CGAL::Min_annulus_d&lt;Traits&gt;</I></h2>\n<P>\n\n<A NAME=\"Index_anchor_1154\"></A> \n\n   \n\n\n   \n   \n     \n     \n<A NAME=\"Index_anchor_1155\"></A> \n\n   \n\n   \n\n\n   \n     \n     \n<A NAME=\"Index_anchor_1156\"></A> \n\n   \n\n\n   \n     \n     \n<A NAME=\"Index_anchor_1157\"></A>\n<P>\n\n<H3>Definition</H3>\n<P>\n\nAn object of the class <I><A HREF=\"Class_Min_annulus_d.html#Cross_link_anchor_1165\">Min_annulus_d</A>&lt;Traits&gt;</I> is the unique annulus (region between\ntwo concentric spheres with radii <MATH><I>r</I></MATH> and <MATH><I>R</I></MATH>, <MATH><I>r  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> R</I></MATH>) enclosing a\nfinite set of points in <MATH><I>d</I></MATH>-dimensional Euclidean space <MATH><I> <IMG BORDER=0 WIDTH=12 HEIGHT=12 ALIGN=BOTTOM SRC=\"cc_mathbb_E.gif\"> <SUB>d</SUB></I></MATH>, where the\ndifference <MATH><I>R<SUP>2</SUP>-r<SUP>2</SUP></I></MATH> is minimal. For a point set <MATH><I>P</I></MATH> we denote by <MATH><I>ma(P)</I></MATH>\nthe smallest annulus that contains all points of <MATH><I>P</I></MATH>.  Note that <MATH><I>ma(P)</I></MATH>\ncan be degenerate,\ni.e.&nbsp;<MATH><I>ma(P)=</I></MATH>&Oslash;<MATH><I></I></MATH> if\n<MATH><I>P=</I></MATH>&Oslash;<MATH><I></I></MATH> and <MATH><I>ma(P)={p}</I></MATH> if\n<MATH><I>P={p}</I></MATH>.\n<P>\n\nAn inclusion-minimal subset <MATH><I>S</I></MATH> of <MATH><I>P</I></MATH> with <MATH><I>ma(S)=ma(P)</I></MATH> is called a\n<I>support set</I>,\nthe points in <MATH><I>S</I></MATH> are the <I>support points</I>.  A support set has size at\nmost <MATH><I>d+2</I></MATH>, and all its points lie on the boundary of <MATH><I>ma(P)</I></MATH>. In general,\nthe support set is not necessarily unique.\n<P>\n\nThe underlying algorithm can cope with all kinds of input, e.g.&nbsp;<MATH><I>P</I></MATH> may be\nempty or points may occur more than once. The algorithm computes a support\nset <MATH><I>S</I></MATH> which remains fixed until the next set, insert, or clear operation.\n<P>\n\n<I>#include &lt;<A HREF=\"../../../include/CGAL/Min_annulus_d.h\">CGAL/Min_annulus_d.h</A>&gt;</I>\n<P>\n\n<H3>Requirements</H3>   \n     \n     \n<A NAME=\"Index_anchor_1158\"></A>\n<P>\n\nThe template parameter <I>Traits</I> is a model for <I><A HREF=\"Concept_OptimisationDTraits.html#Cross_link_anchor_1181\">OptimisationDTraits</A></I>.\n<P>\n\nWe provide the models <I><A HREF=\"Class_Optimisation_d_traits_2.html#Cross_link_anchor_1176\">Optimisation_d_traits_2</A></I>,\n<I><A HREF=\"Class_Optimisation_d_traits_3.html#Cross_link_anchor_1178\">Optimisation_d_traits_3</A></I>, and <I><A HREF=\"Class_Optimisation_d_traits_d.html#Cross_link_anchor_1180\">Optimisation_d_traits_d</A></I> using the\ntwo-, three-, and <MATH><I>d</I></MATH>-dimensional C<SMALL>GAL</SMALL>&nbsp;kernel, respectively.\n<P>\n\n<H3>Types</H3>   \n     \n     \n<A NAME=\"Index_anchor_1159\"></A>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Min_annulus_d.html#Cross_link_anchor_1165\">Min_annulus_d</A>&lt;Traits&gt;::Point\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    typedef to <I>Traits::<A HREF=\"../Kernel_d_ref/Class_Point_d.html#Cross_link_anchor_487\">Point_d</A></I>.\n        Point type used to represent the input points.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Min_annulus_d.html#Cross_link_anchor_1165\">Min_annulus_d</A>&lt;Traits&gt;::FT\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    typedef to <I>Traits::FT</I>.\n        Number type used to return the squared radii of the smallest\n        enclosing annulus.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Min_annulus_d.html#Cross_link_anchor_1165\">Min_annulus_d</A>&lt;Traits&gt;::ET\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    typedef to <I>Traits::ET</I>.\n        Number type used to do the exact computations in the underlying\n        solver for quadratic programs (cf.&nbsp;<B>Implementation</B>).\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Min_annulus_d.html#Cross_link_anchor_1165\">Min_annulus_d</A>&lt;Traits&gt;::Point_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    non-mutable model of the STL concept <I>RandomAccessIterator</I>\n        with value type <I>Point</I>. Used to access the points\n        of the smallest enclosing annulus.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Min_annulus_d.html#Cross_link_anchor_1165\">Min_annulus_d</A>&lt;Traits&gt;::Support_point_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    non-mutable model of the STL concept <I>RandomAccessIterator</I>\n        with value type <I>Point</I>. Used to access the support points\n        of the smallest enclosing annulus.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Min_annulus_d.html#Cross_link_anchor_1165\">Min_annulus_d</A>&lt;Traits&gt;::Inner_support_point_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    non-mutable model of the STL concept <I>RandomAccessIterator</I>\n        with value type <I>Point</I>. Used to access the inner support points\n        of the smallest enclosing annulus.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Min_annulus_d.html#Cross_link_anchor_1165\">Min_annulus_d</A>&lt;Traits&gt;::Outer_support_point_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    non-mutable model of the STL concept <I>RandomAccessIterator</I>\n        with value type <I>Point</I>. Used to access the outer support points\n        of the smallest enclosing annulus.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Min_annulus_d.html#Cross_link_anchor_1165\">Min_annulus_d</A>&lt;Traits&gt;::Coordinate_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    non-mutable model of the STL concept <I>RandomAccessIterator</I>\n        with value type <I>ET</I>. Used to access the coordinates of\n        the center of the smallest enclosing annulus.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Creation</H3>   \n     \n     \n<A NAME=\"Index_anchor_1160\"></A>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    <A HREF=\"Class_Min_annulus_d.html#Cross_link_anchor_1165\">Min_annulus_d</A>&lt;Traits&gt; min_annulus ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n     Traits traits = Traits(),<BR>\n\nint verbose = 0,<BR>\n\nstd::ostream&amp; stream = std::cout);</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    initializes <I>min_annulus</I> to <MATH><I>ma(</I></MATH>&Oslash;<MATH><I>)</I></MATH>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    template &lt; class InputIterator &gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    <A HREF=\"Class_Min_annulus_d.html#Cross_link_anchor_1165\">Min_annulus_d</A>&lt;Traits&gt; min_annulus ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    InputIterator first,<BR>\n\nInputIterator last,<BR>\n\nTraits traits = Traits(),<BR>\n\nint verbose = 0,<BR>\n\nstd::ostream&amp; stream = std::cout);</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    initializes <I>min_annulus</I> to <MATH><I>ma(P)</I></MATH> with <MATH><I>P</I></MATH> being the set of points\n        in the range [<I>first</I>,<I>last</I>).<BR>\n\n<EM>Requirement: </EM>The value type of <I>InputIterator</I> is <I>Point</I>.<BR>\n\n<EM>Precondition: </EM>All points have the same dimension.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<BR>\n\n<div class=\"AdvancedBlock\">\n  <table><tr><td valign=\"top\">\n  <img border=\"0\" src=\"cc_advanced_begin1.gif\" alt=\"begin of advanced section\">\n  </td><td valign=\"top\">\n  <em class=\"AdvancedBlockLabel\">&nbsp;advanced&nbsp;</em>\n  </td><td valign=\"top\">\n  <img border=\"0\" src=\"cc_advanced_begin2.gif\" alt=\"begin of advanced section\">\n  </td></tr></table>\n\n  If <I>verbose</I> is set to <MATH><I>1</I></MATH>, <MATH><I>2</I></MATH>, or <MATH><I>3</I></MATH> then some, more, or full\n  verbose output of the underlying solver for linear programs is\n  written to <I>stream</I>, resp.\n\n<table><tr><td valign=\"bottom\">\n  <img border=\"0\" src=\"cc_advanced_end1.gif\" alt=\"end of advanced section\">\n  </td><td valign=\"bottom\">\n  <em class=\"AdvancedBlockLabel\">&nbsp;advanced&nbsp;</em>\n  </td><td valign=\"bottom\">\n  <img border=\"0\" src=\"cc_advanced_end2.gif\" alt=\"end of advanced section\">\n  </td></tr></table></div>\n<P>\n\n<H3>Access Functions</H3>   \n     \n     \n<A NAME=\"Index_anchor_1161\"></A> \n\n   \n\n\n   \n     \n     \n     \n<A NAME=\"Index_anchor_1162\"></A> \n\n   \n   \n     \n     \n<A NAME=\"Index_anchor_1163\"></A>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_int_ambient_dimension6_9_const;\"></A>\nint\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.ambient_dimension ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the dimension of the points in <MATH><I>P</I></MATH>.\n        If <I>min_annulus</I> is empty, the ambient dimension is <MATH><I>-1</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_int_number_of_points6_9_const;\"></A>\nint\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.number_of_points ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the number of points of <I>min_annulus</I>, i.e.&nbsp;<MATH><I>|P|</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_int_number_of_support_points6_9_const;\"></A>\nint\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.number_of_support_points ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the number of support points of <I>min_annulus</I>, i.e.&nbsp;<MATH><I>|S|</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_int_number_of_inner_support_points6_9_const;\"></A>\nint\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.number_of_inner_support_points ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the number of support points of <I>min_annulus</I>\n        which lie on the inner sphere.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_int_number_of_outer_support_points6_9_const;\"></A>\nint\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.number_of_outer_support_points ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the number of support points of <I>min_annulus</I>\n        which lie on the outer sphere.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<BR>\n\n<BR>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Point_iterator_points_begin6_9_const;\"></A>\nPoint_iterator\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.points_begin ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns an iterator referring to the first point of <I>min_annulus</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Point_iterator_points_end6_9_const;\"></A>\nPoint_iterator\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.points_end ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the corresponding past-the-end iterator.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<BR>\n\n<BR>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Support_point_iterator_support_points_begin6_9_const;\"></A>\nSupport_point_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.support_points_begin ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns an iterator referring to the first support point of <I>min_annulus</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Support_point_iterator_support_points_end6_9_const;\"></A>\nSupport_point_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.support_points_end ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the corresponding past-the-end iterator.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<BR>\n\n<BR>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Inner_support_point_iterator_inner_support_points_begin6_9_const;\"></A>\nInner_support_point_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.inner_support_points_begin ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns an iterator referring to the first inner support point\n        of <I>min_annulus</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Inner_support_point_iterator_inner_support_points_end6_9_const;\"></A>\nInner_support_point_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.inner_support_points_end ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the corresponding past-the-end iterator.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<BR>\n\n<BR>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Outer_support_point_iterator_outer_support_points_begin6_9_const;\"></A>\nOuter_support_point_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.outer_support_points_begin ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns an iterator referring to the first outer support point\n        of <I>min_annulus</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Outer_support_point_iterator_outer_support_points_end6_9_const;\"></A>\nOuter_support_point_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.outer_support_points_end ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the corresponding past-the-end iterator.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Point_center6_9_const;\"></A>\nPoint\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.center ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the center of <I>min_annulus</I>.<BR>\n\n<EM>Requirement: </EM>An implicit conversion from <I>ET</I> to <I>RT</I> is\n        available.<BR>\n\n<EM>Precondition: </EM><I>min_annulus</I> is not empty.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_FT_squared_inner_radius6_9_const;\"></A>\nFT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.squared_inner_radius ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the squared inner radius of <I>min_annulus</I>.<BR>\n\n<EM>Requirement: </EM>An implicit conversion from <I>ET</I> to <I>RT</I> is\n        available.<BR>\n\n<EM>Precondition: </EM><I>min_annulus</I> is not empty.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_FT_squared_outer_radius6_9_const;\"></A>\nFT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.squared_outer_radius ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the squared outer radius of <I>min_annulus</I>.<BR>\n\n<EM>Requirement: </EM>An implicit conversion from <I>ET</I> to <I>RT</I> is\n        available.<BR>\n\n<EM>Precondition: </EM><I>min_annulus</I> is not empty.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<BR>\n\n<BR>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Coordinate_iterator_center_coordinates_begin69_const;\"></A>\nCoordinate_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.center_coordinates_begin ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns an iterator referring to the first coordinate\n        of the center of <I>min_annulus</I>.<BR>\n\n<EM>Note: </EM> The coordinates have a rational\n        representation, i.e.&nbsp;the first <MATH><I>d</I></MATH> elements of the iterator\n        range are the numerators and the <MATH><I>(d+1)</I></MATH>-st element is the\n        common denominator.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Coordinate_iterator_center_coordinates_end69_const;\"></A>\nCoordinate_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.center_coordinates_end ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the corresponding past-the-end iterator.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_ET_squared_inner_radius_numerator6_9_const;\"></A>\nET\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.squared_inner_radius_numerator ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the numerator of the squared inner radius of <I>min_annulus</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_ET_squared_outer_radius_numerator6_9_const;\"></A>\nET\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.squared_outer_radius_numerator ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the numerator of the squared outer radius of <I>min_annulus</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_ET_squared_radii_denominator6_9_const;\"></A>\nET\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.squared_radii_denominator ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the denominator of the squared radii of <I>min_annulus</I>.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Predicates</H3>   \n     \n     \n     \n<A NAME=\"Index_anchor_1164\"></A> \n\n   \n   \n     \n     \n<A NAME=\"Index_anchor_1165\"></A>\n<P>\n\nThe bounded <A HREF=\"../Kernel_23_ref/Function_area.html#Cross_link_anchor_159\">area</A> of the smallest enclosing annulus lies between the inner\nand the outer sphere. The boundary is the union of both spheres. By\ndefinition, an empty annulus has no boundary and no bounded side, i.e.&nbsp;its\nunbounded side equals the whole space <MATH><I> <IMG BORDER=0 WIDTH=12 HEIGHT=12 ALIGN=BOTTOM SRC=\"cc_mathbb_E.gif\"> <SUB>d</SUB></I></MATH>.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_CGAL::Bounded_side_bounded_side6_const_Point__p9_const;\"></A>\n<A HREF=\"../Kernel_23_ref/Enum_Bounded_side.html#Cross_link_anchor_98\">CGAL::Bounded_side</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.bounded_side (  Point p)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns <I>CGAL::</I><I><A HREF=\"../Kernel_23_ref/Enum_Bounded_side#Enum_Bounded_side\">ON_BOUNDED_SIDE</A></I>,\n        <I>CGAL::</I><I><A HREF=\"../Kernel_23_ref/Enum_Bounded_side#Enum_Bounded_side\">ON_BOUNDARY</A></I>, or\n        <I>CGAL::</I><I><A HREF=\"../Kernel_23_ref/Enum_Bounded_side#Enum_Bounded_side\">ON_UNBOUNDED_SIDE</A></I> iff <I>p</I> lies\n        properly inside, on the boundary, or properly outside of\n        <I>min_annulus</I>, resp.<BR>\n\n<EM>Precondition: </EM>The dimension of <I>p</I> equals\n        <I>min_annulus</I><I>.ambient_dimension()</I> if <I>min_annulus</I> is not empty.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_has_on_bounded_side6_const_Point__p9_const;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.has_on_bounded_side (  Point p)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns <I>true</I>, iff <I>p</I> lies properly inside <I>min_annulus</I>.<BR>\n\n<EM>Precondition: </EM>The dimension of <I>p</I> equals\n        <I>min_annulus</I><I>.ambient_dimension()</I> if <I>min_annulus</I> is not empty.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_has_on_boundary6_const_Point__p9_const;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.has_on_boundary (  Point p)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns <I>true</I>, iff <I>p</I> lies on the boundary of <I>min_annulus</I>.<BR>\n\n<EM>Precondition: </EM>The dimension of <I>p</I> equals\n        <I>min_annulus</I><I>.ambient_dimension()</I> if <I>min_annulus</I> is not empty.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_has_on_unbounded_side6_const_Point__p9_const;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.has_on_unbounded_side (  Point p)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns <I>true</I>, iff <I>p</I> lies properly outside of <I>min_annulus</I>.<BR>\n\n<EM>Precondition: </EM>The dimension of <I>p</I> equals\n        <I>min_annulus</I><I>.ambient_dimension()</I> if <I>min_annulus</I> is not empty.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_is_empty6_9_const;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.is_empty ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns <I>true</I>, iff <I>min_annulus</I> is empty (this implies degeneracy).\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_is_degenerate6_9_const;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.is_degenerate ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns <I>true</I>, iff <I>min_annulus</I> is degenerate, i.e.&nbsp;if <I>min_annulus</I>         is empty or equal to a single point.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Modifiers</H3>   \n     \n     \n     \n<A NAME=\"Index_anchor_1166\"></A> \n\n   \n   \n     \n     \n<A NAME=\"Index_anchor_1167\"></A>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_clear6_9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.clear ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    resets <I>min_annulus</I> to <MATH><I>ma(</I></MATH>&Oslash;<MATH><I>)</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    template &lt; class InputIterator &gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_set6_InputIterator_first+_InputIterator_last_9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    min_annulus.set ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    InputIterator first,<BR>\n\nInputIterator last)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    sets <I>min_annulus</I> to <MATH><I>ma(P)</I></MATH>, where <MATH><I>P</I></MATH> is the set of points in\n        the range [<I>first</I>,<I>last</I>).<BR>\n\n<EM>Requirement: </EM>The value type of <I>InputIterator</I> is <I>Point</I>.<BR>\n\n<EM>Precondition: </EM>All points have the same dimension.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_insert6_const_Point__p9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.insert (  Point p)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    inserts <I>p</I> into <I>min_annulus</I>.<BR>\n\n<EM>Precondition: </EM>The dimension of <I>p</I> equals\n        <I>min_annulus</I><I>.ambient_dimension()</I> if <I>min_annulus</I> is not empty.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    template &lt; class InputIterator &gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_insert6_InputIterator_first+_InputIterator_last_9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    min_annulus.insert ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    InputIterator first,<BR>\n\nInputIterator last)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    inserts the points in the range [<I>first</I>,<I>last</I>) into\n        <I>min_annulus</I> and recomputes the smallest enclosing annulus.<BR>\n\n<EM>Requirement: </EM>The value type of <I>InputIterator</I> is <I>Point</I>.<BR>\n\n<EM>Precondition: </EM>All points have the same dimension.\n        If <I>min_annulus</I> is not empty, this dimension must be equal to\n        <I>min_annulus</I><I>.ambient_dimension()</I>.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Validity Check</H3>\n   \n     \n     \n     \n<A NAME=\"Index_anchor_1168\"></A> \n\n   \n   \n     \n     \n<A NAME=\"Index_anchor_1169\"></A>\n<P>\n\nAn object <I>min_annulus</I> is valid, iff\n<UL>\n  <LI><I>min_annulus</I> contains all points of its defining set <MATH><I>P</I></MATH>,\n  <LI><I>min_annulus</I> is the smallest annulus containing its support set <MATH><I>S</I></MATH>, and\n  <LI><MATH><I>S</I></MATH> is minimal, i.e. no support point is redundant.\n</UL>\n<I>Note:</I> In this release only the first item is considered by the\nvalidity check.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_is_valid6_bool_verbose_=_false+_int_level_=_0_9_const;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    min_annulus.is_valid ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    bool verbose = false,<BR>\n\nint level = 0)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns <I>true</I>, iff <I>min_annulus</I> is valid. If <I>verbose</I> is\n      <I>true</I>, some messages concerning the performed checks are\n      written to standard error stream. The second parameter\n      <I>level</I> is not used, we provide it only for consistency\n      with interfaces of other classes.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Miscellaneous</H3>\n   \n     \n     \n     \n<A NAME=\"Index_anchor_1170\"></A> \n\n   \n   \n     \n     \n<A NAME=\"Index_anchor_1171\"></A>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_const_Traits__traits6_9_const;\"></A>\nconst Traits&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    min_annulus.traits ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns a const reference to the traits class object.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>I/O</H3>\n   \n     \n     \n<A NAME=\"Index_anchor_1172\"></A>\n<P>\n\n<A NAME=\"Index_anchor_1173\"></A> \n\n   \n   \n     \n     \n<A NAME=\"Index_anchor_1174\"></A> \n\n   \n  \n      \n\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    std::ostream&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n     std::ostream&amp; os &lt;&lt;  min_annulus<A NAME=\"Function_std::ostream__operator_66_6_std::ostream__os+_const_Min_annulus_d6Traits9__min_annulus9;\"></A>\n\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    writes <I>min_annulus</I> to output stream <I>os</I>.<BR>\n\n<EM>Requirement: </EM>The output operator is defined for <I>Point</I>.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<A NAME=\"Index_anchor_1175\"></A> \n\n   \n   \n     \n     \n<A NAME=\"Index_anchor_1176\"></A> \n\n   \n  \n      \n\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    std::istream&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n     std::istream&amp; is &gt;&gt;  min_annulus&amp;<A NAME=\"Function_std::istream__operator_99_6_std::istream__is+_Min_annulus_d6Traits9_min_annulus_9;\"></A>\n\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    reads <I>min_annulus</I> from input stream <I>is</I>.<BR>\n\n<EM>Requirement: </EM>The input operator is defined for <I>Point</I>.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>See Also</H3>\n<P>\n\n<I><A HREF=\"Class_Min_sphere_d.html#Cross_link_anchor_1162\">CGAL::Min_sphere_d</A>&lt;Traits&gt;</I><BR>\n\n<I><A HREF=\"Class_Optimisation_d_traits_2.html#Cross_link_anchor_1175\">CGAL::Optimisation_d_traits_2</A>&lt;K,ET,NT&gt;</I><BR>\n\n<I><A HREF=\"Class_Optimisation_d_traits_3.html#Cross_link_anchor_1177\">CGAL::Optimisation_d_traits_3</A>&lt;K,ET,NT&gt;</I><BR>\n\n<I><A HREF=\"Class_Optimisation_d_traits_d.html#Cross_link_anchor_1179\">CGAL::Optimisation_d_traits_d</A>&lt;K,ET,NT&gt;</I><BR>\n\n<I><A HREF=\"Concept_OptimisationDTraits.html#Cross_link_anchor_1181\">OptimisationDTraits</A></I>\n<P>\n\n<H3>Implementation</H3>   \n     \n     \n<A NAME=\"Index_anchor_1177\"></A>\n<P>\n\nThe problem of finding the smallest enclosing annulus of a finite point set\ncan be formulated as an optimization problem with linear constraints and a\nlinear objective\nfunction.\nThe solution is obtained using our exact\nsolver for linear and quadratic programs&nbsp;[<A HREF=\"../biblio.html#Biblio_gs-eegqp-00\">GS00</A>].\n<P>\n\nThe creation time is almost always linear in the number of points.  Access\nfunctions and predicates take constant time, inserting a point takes almost\nalways linear time. The clear operation and the check for validity each\ntake linear time.\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Class_Min_sphere_of_spheres_d.html\"><I>Min_sphere_of_spheres_d&lt;Traits&gt;</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_52!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 38839.0}