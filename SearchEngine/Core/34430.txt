{"text": "1 package swirl workspace 2 3 import junit framework Test 4 import junit framework TestSuite 5 6 import org apache commons httpclient HttpMethod 7 import org apache commons logging Log 8 import org apache commons logging LogFactory 9 import org apache webdav lib methods OptionsMethod 1 11 12 TODO 13 14 author author 15 version Revision 1 13 16 17 public class OptionCommandTest extends CommandTest 18 19 TODO 2 String allowValues PROPPATCH PUT HEAD OPTIONS GET DELETE 21 POST COPY REPORT PROPFIND MOVE UNLOCK TRACE ACL LOCK 22 23 TODO 24 private Log log 25 26 27 Creates a new OptionCommandTest object 28 29 param name TODO 3 31 public OptionCommandTest String name 32 33 super name 34 log LogFactory getLog this getClass 35 36 37 38 TODO 39 4 return TODO 41 42 throws Exception TODO 43 44 public static Test suite throws Exception 45 46 TestSuite suite new TestSuite 47 48 suite addTestSuite OptionCommandTest class 49 5 51 suite addTest new PropfindCommandTest testSlash 52 suite addTest new PropfindCommandTest testNoSlash 53 suite addTest new PropfindCommandTest testCollection 54 suite addTest new PropfindCommandTest testFile 55 suite addTest new PropfindCommandTest testDeepFile 56 suite addTest new OptionCommandTest testNonexistentFile 57 return suite 58 59 return wrapSuite suite 6 61 62 63 TODO 64 65 throws Exception TODO 66 67 public void testCollection throws Exception 68 69 go SlideTestSetup LOCALHOST SlideTestSetup SWIRL 7 SlideTestSetup COLLECTION 2 71 checkHeaders 72 73 74 75 TODO 76 77 throws Exception TODO 78 79 public void testDeepFile throws Exception 8 81 go SlideTestSetup LOCALHOST SlideTestSetup SWIRL 82 SlideTestSetup DEEP FILE 2 83 checkHeaders 84 85 86 87 TODO 88 89 throws Exception TODO 9 91 public void testFile throws Exception 92 93 go SlideTestSetup LOCALHOST SlideTestSetup SWIRL 94 SlideTestSetup FILE 2 95 checkHeaders 96 97 98 99 TODO 1 1 1 throws Exception TODO 1 2 1 3 public void testNoSlash throws Exception 1 4 1 5 go SlideTestSetup LOCALHOST SlideTestSetup SWIRL NO SLASH 2 1 6 checkHeaders 1 7 1 8 1 9 11 TODO 111 112 throws Exception TODO 113 114 public void testNonexistentFile throws Exception 115 116 go SlideTestSetup LOCALHOST SlideTestSetup SWIRL 117 SlideTestSetup BAD FILE 2 118 119 12 121 TODO 122 123 throws Exception TODO 124 125 public void testSlash throws Exception 126 127 go SlideTestSetup LOCALHOST SlideTestSetup SWIRL 2 128 checkHeaders 129 13 131 132 TODO 133 134 param uri TODO 135 136 return TODO 137 138 protected HttpMethod createMethod String uri 139 14 return new OptionsMethod uri 141 142 143 144 TODO 145 146 private void checkHeaders 147 148 String allow getMethod getResponseHeader Allow getValue 149 15 String result allowValues split 151 152 for int x x result length x 153 154 if log isDebugEnabled 155 156 log debug checking if result x is in allow 157 indexOf allow indexOf result x trim 158 159 16 assertTrue Header result x should be in allow 161 allow indexOf result x trim 1 162 163 164 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.20/xref-test/swirl/workspace/OptionCommandTest.html", "title": "optioncommandtest xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>OptionCommandTest xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../stylesheet.css\" />\n</head>\n<body>\n<pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <strong>package</strong> <a href=\"../../swirl/workspace/package-summary.html\">swirl.workspace</a>;\n<a name=\"2\" href=\"#2\">2</a>   \n<a name=\"3\" href=\"#3\">3</a>   <strong>import</strong> junit.framework.Test;\n<a name=\"4\" href=\"#4\">4</a>   <strong>import</strong> junit.framework.TestSuite;\n<a name=\"5\" href=\"#5\">5</a>   \n<a name=\"6\" href=\"#6\">6</a>   <strong>import</strong> org.apache.commons.httpclient.HttpMethod;\n<a name=\"7\" href=\"#7\">7</a>   <strong>import</strong> org.apache.commons.logging.Log;\n<a name=\"8\" href=\"#8\">8</a>   <strong>import</strong> org.apache.commons.logging.LogFactory;\n<a name=\"9\" href=\"#9\">9</a>   <strong>import</strong> org.apache.webdav.lib.methods.OptionsMethod;\n<a name=\"10\" href=\"#10\">10</a>  \n<a name=\"11\" href=\"#11\">11</a>  <em>/**<em>*</em></em>\n<a name=\"12\" href=\"#12\">12</a>  <em> * TODO</em>\n<a name=\"13\" href=\"#13\">13</a>  <em> *</em>\n<a name=\"14\" href=\"#14\">14</a>  <em> * @author $author$</em>\n<a name=\"15\" href=\"#15\">15</a>  <em> * @version $Revision: 1.13 $</em>\n<a name=\"16\" href=\"#16\">16</a>  <em> */</em>\n<a name=\"17\" href=\"#17\">17</a>  <strong>public</strong> <strong>class</strong> <a href=\"../../swirl/workspace/OptionCommandTest.html\">OptionCommandTest</a> <strong>extends</strong> <a href=\"../../swirl/workspace/CommandTest.html\">CommandTest</a>\n<a name=\"18\" href=\"#18\">18</a>  {\n<a name=\"19\" href=\"#19\">19</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"20\" href=\"#20\">20</a>      String allowValues = <span class=\"string\">\"PROPPATCH, PUT, HEAD, OPTIONS, GET, DELETE, \"</span>\n<a name=\"21\" href=\"#21\">21</a>                           + <span class=\"string\">\"POST, COPY, REPORT, PROPFIND, MOVE, UNLOCK, TRACE, ACL, LOCK\"</span>;\n<a name=\"22\" href=\"#22\">22</a>  \n<a name=\"23\" href=\"#23\">23</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"24\" href=\"#24\">24</a>      <strong>private</strong> Log log;\n<a name=\"25\" href=\"#25\">25</a>  \n<a name=\"26\" href=\"#26\">26</a>      <em>/**<em>*</em></em>\n<a name=\"27\" href=\"#27\">27</a>  <em>     * Creates a new OptionCommandTest object.</em>\n<a name=\"28\" href=\"#28\">28</a>  <em>     *</em>\n<a name=\"29\" href=\"#29\">29</a>  <em>     * @param name TODO</em>\n<a name=\"30\" href=\"#30\">30</a>  <em>     */</em>\n<a name=\"31\" href=\"#31\">31</a>      <strong>public</strong> <a href=\"../../swirl/workspace/OptionCommandTest.html\">OptionCommandTest</a>(String name)\n<a name=\"32\" href=\"#32\">32</a>      {\n<a name=\"33\" href=\"#33\">33</a>          <strong>super</strong>(name);\n<a name=\"34\" href=\"#34\">34</a>          log = LogFactory.getLog(<strong>this</strong>.getClass());\n<a name=\"35\" href=\"#35\">35</a>      }\n<a name=\"36\" href=\"#36\">36</a>  \n<a name=\"37\" href=\"#37\">37</a>      <em>/**<em>*</em></em>\n<a name=\"38\" href=\"#38\">38</a>  <em>     * TODO</em>\n<a name=\"39\" href=\"#39\">39</a>  <em>     *</em>\n<a name=\"40\" href=\"#40\">40</a>  <em>     * @return TODO</em>\n<a name=\"41\" href=\"#41\">41</a>  <em>     *</em>\n<a name=\"42\" href=\"#42\">42</a>  <em>     * @throws Exception TODO</em>\n<a name=\"43\" href=\"#43\">43</a>  <em>     */</em>\n<a name=\"44\" href=\"#44\">44</a>      <strong>public</strong> <strong>static</strong> Test suite() throws Exception\n<a name=\"45\" href=\"#45\">45</a>      {\n<a name=\"46\" href=\"#46\">46</a>          TestSuite suite = <strong>new</strong> TestSuite();\n<a name=\"47\" href=\"#47\">47</a>  \n<a name=\"48\" href=\"#48\">48</a>          suite.addTestSuite(OptionCommandTest.<strong>class</strong>);\n<a name=\"49\" href=\"#49\">49</a>  \n<a name=\"50\" href=\"#50\">50</a>          <em class=\"comment\">/*</em>\n<a name=\"51\" href=\"#51\">51</a>  <em class=\"comment\">           //suite.addTest(new PropfindCommandTest(\"testSlash\"));</em>\n<a name=\"52\" href=\"#52\">52</a>  <em class=\"comment\">           //suite.addTest(new PropfindCommandTest(\"testNoSlash\"));</em>\n<a name=\"53\" href=\"#53\">53</a>  <em class=\"comment\">           //suite.addTest(new PropfindCommandTest(\"testCollection\"));</em>\n<a name=\"54\" href=\"#54\">54</a>  <em class=\"comment\">           //suite.addTest(new PropfindCommandTest(\"testFile\"));</em>\n<a name=\"55\" href=\"#55\">55</a>  <em class=\"comment\">           //suite.addTest(new PropfindCommandTest(\"testDeepFile\"));</em>\n<a name=\"56\" href=\"#56\">56</a>  <em class=\"comment\">           suite.addTest(new OptionCommandTest(\"testNonexistentFile\"));</em>\n<a name=\"57\" href=\"#57\">57</a>  <em class=\"comment\">           return suite;</em>\n<a name=\"58\" href=\"#58\">58</a>  <em class=\"comment\">           //*/</em>\n<a name=\"59\" href=\"#59\">59</a>          <strong>return</strong> wrapSuite(suite);\n<a name=\"60\" href=\"#60\">60</a>      }\n<a name=\"61\" href=\"#61\">61</a>  \n<a name=\"62\" href=\"#62\">62</a>      <em>/**<em>*</em></em>\n<a name=\"63\" href=\"#63\">63</a>  <em>     * TODO</em>\n<a name=\"64\" href=\"#64\">64</a>  <em>     *</em>\n<a name=\"65\" href=\"#65\">65</a>  <em>     * @throws Exception TODO</em>\n<a name=\"66\" href=\"#66\">66</a>  <em>     */</em>\n<a name=\"67\" href=\"#67\">67</a>      <strong>public</strong> <strong>void</strong> testCollection() throws Exception\n<a name=\"68\" href=\"#68\">68</a>      {\n<a name=\"69\" href=\"#69\">69</a>          go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL\n<a name=\"70\" href=\"#70\">70</a>             + SlideTestSetup.COLLECTION, 200);\n<a name=\"71\" href=\"#71\">71</a>          checkHeaders();\n<a name=\"72\" href=\"#72\">72</a>      }\n<a name=\"73\" href=\"#73\">73</a>  \n<a name=\"74\" href=\"#74\">74</a>      <em>/**<em>*</em></em>\n<a name=\"75\" href=\"#75\">75</a>  <em>     * TODO</em>\n<a name=\"76\" href=\"#76\">76</a>  <em>     *</em>\n<a name=\"77\" href=\"#77\">77</a>  <em>     * @throws Exception TODO</em>\n<a name=\"78\" href=\"#78\">78</a>  <em>     */</em>\n<a name=\"79\" href=\"#79\">79</a>      <strong>public</strong> <strong>void</strong> testDeepFile() throws Exception\n<a name=\"80\" href=\"#80\">80</a>      {\n<a name=\"81\" href=\"#81\">81</a>          go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL\n<a name=\"82\" href=\"#82\">82</a>             + SlideTestSetup.DEEP_FILE, 200);\n<a name=\"83\" href=\"#83\">83</a>          checkHeaders();\n<a name=\"84\" href=\"#84\">84</a>      }\n<a name=\"85\" href=\"#85\">85</a>  \n<a name=\"86\" href=\"#86\">86</a>      <em>/**<em>*</em></em>\n<a name=\"87\" href=\"#87\">87</a>  <em>     * TODO</em>\n<a name=\"88\" href=\"#88\">88</a>  <em>     *</em>\n<a name=\"89\" href=\"#89\">89</a>  <em>     * @throws Exception TODO</em>\n<a name=\"90\" href=\"#90\">90</a>  <em>     */</em>\n<a name=\"91\" href=\"#91\">91</a>      <strong>public</strong> <strong>void</strong> testFile() throws Exception\n<a name=\"92\" href=\"#92\">92</a>      {\n<a name=\"93\" href=\"#93\">93</a>          go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL\n<a name=\"94\" href=\"#94\">94</a>             + SlideTestSetup.FILE, 200);\n<a name=\"95\" href=\"#95\">95</a>          checkHeaders();\n<a name=\"96\" href=\"#96\">96</a>      }\n<a name=\"97\" href=\"#97\">97</a>  \n<a name=\"98\" href=\"#98\">98</a>      <em>/**<em>*</em></em>\n<a name=\"99\" href=\"#99\">99</a>  <em>     * TODO</em>\n<a name=\"100\" href=\"#100\">100</a> <em>     *</em>\n<a name=\"101\" href=\"#101\">101</a> <em>     * @throws Exception TODO</em>\n<a name=\"102\" href=\"#102\">102</a> <em>     */</em>\n<a name=\"103\" href=\"#103\">103</a>     <strong>public</strong> <strong>void</strong> testNoSlash() throws Exception\n<a name=\"104\" href=\"#104\">104</a>     {\n<a name=\"105\" href=\"#105\">105</a>         go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL_NO_SLASH, 200);\n<a name=\"106\" href=\"#106\">106</a>         checkHeaders();\n<a name=\"107\" href=\"#107\">107</a>     }\n<a name=\"108\" href=\"#108\">108</a> \n<a name=\"109\" href=\"#109\">109</a>     <em>/**<em>*</em></em>\n<a name=\"110\" href=\"#110\">110</a> <em>     * TODO</em>\n<a name=\"111\" href=\"#111\">111</a> <em>     *</em>\n<a name=\"112\" href=\"#112\">112</a> <em>     * @throws Exception TODO</em>\n<a name=\"113\" href=\"#113\">113</a> <em>     */</em>\n<a name=\"114\" href=\"#114\">114</a>     <strong>public</strong> <strong>void</strong> testNonexistentFile() throws Exception\n<a name=\"115\" href=\"#115\">115</a>     {\n<a name=\"116\" href=\"#116\">116</a>         go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL\n<a name=\"117\" href=\"#117\">117</a>            + SlideTestSetup.BAD_FILE, 200);\n<a name=\"118\" href=\"#118\">118</a>     }\n<a name=\"119\" href=\"#119\">119</a> \n<a name=\"120\" href=\"#120\">120</a>     <em>/**<em>*</em></em>\n<a name=\"121\" href=\"#121\">121</a> <em>     * TODO</em>\n<a name=\"122\" href=\"#122\">122</a> <em>     *</em>\n<a name=\"123\" href=\"#123\">123</a> <em>     * @throws Exception TODO</em>\n<a name=\"124\" href=\"#124\">124</a> <em>     */</em>\n<a name=\"125\" href=\"#125\">125</a>     <strong>public</strong> <strong>void</strong> testSlash() throws Exception\n<a name=\"126\" href=\"#126\">126</a>     {\n<a name=\"127\" href=\"#127\">127</a>         go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL, 200);\n<a name=\"128\" href=\"#128\">128</a>         checkHeaders();\n<a name=\"129\" href=\"#129\">129</a>     }\n<a name=\"130\" href=\"#130\">130</a> \n<a name=\"131\" href=\"#131\">131</a>     <em>/**<em>*</em></em>\n<a name=\"132\" href=\"#132\">132</a> <em>     * TODO</em>\n<a name=\"133\" href=\"#133\">133</a> <em>     *</em>\n<a name=\"134\" href=\"#134\">134</a> <em>     * @param uri TODO</em>\n<a name=\"135\" href=\"#135\">135</a> <em>     *</em>\n<a name=\"136\" href=\"#136\">136</a> <em>     * @return TODO</em>\n<a name=\"137\" href=\"#137\">137</a> <em>     */</em>\n<a name=\"138\" href=\"#138\">138</a>     <strong>protected</strong> HttpMethod createMethod(String uri)\n<a name=\"139\" href=\"#139\">139</a>     {\n<a name=\"140\" href=\"#140\">140</a>         <strong>return</strong> <strong>new</strong> OptionsMethod(uri);\n<a name=\"141\" href=\"#141\">141</a>     }\n<a name=\"142\" href=\"#142\">142</a> \n<a name=\"143\" href=\"#143\">143</a>     <em>/**<em>*</em></em>\n<a name=\"144\" href=\"#144\">144</a> <em>     * TODO</em>\n<a name=\"145\" href=\"#145\">145</a> <em>     */</em>\n<a name=\"146\" href=\"#146\">146</a>     <strong>private</strong> <strong>void</strong> checkHeaders()\n<a name=\"147\" href=\"#147\">147</a>     {\n<a name=\"148\" href=\"#148\">148</a>         String allow = getMethod().getResponseHeader(<span class=\"string\">\"Allow\"</span>).getValue();\n<a name=\"149\" href=\"#149\">149</a> \n<a name=\"150\" href=\"#150\">150</a>         String[] result = allowValues.split(<span class=\"string\">\",\"</span>);\n<a name=\"151\" href=\"#151\">151</a> \n<a name=\"152\" href=\"#152\">152</a>         <strong>for</strong>(<strong>int</strong> x = 0; x &lt; result.length; x++)\n<a name=\"153\" href=\"#153\">153</a>         {\n<a name=\"154\" href=\"#154\">154</a>             <strong>if</strong>(log.isDebugEnabled())\n<a name=\"155\" href=\"#155\">155</a>             {\n<a name=\"156\" href=\"#156\">156</a>                 log.debug(<span class=\"string\">\"checking if \"</span> + result[x] + <span class=\"string\">\" is in \"</span> + allow\n<a name=\"157\" href=\"#157\">157</a>                           + <span class=\"string\">\"  indexOf: \"</span> + allow.indexOf(result[x].trim()));\n<a name=\"158\" href=\"#158\">158</a>             }\n<a name=\"159\" href=\"#159\">159</a> \n<a name=\"160\" href=\"#160\">160</a>             assertTrue(<span class=\"string\">\"Header \"</span> + result[x] + <span class=\"string\">\" should be in \"</span> + allow,\n<a name=\"161\" href=\"#161\">161</a>                        allow.indexOf(result[x].trim()) != -1);\n<a name=\"162\" href=\"#162\">162</a>         }\n<a name=\"163\" href=\"#163\">163</a>     }\n<a name=\"164\" href=\"#164\">164</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 34430.0}