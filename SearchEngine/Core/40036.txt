{"text": "Search LoginPreferencesHelp GuideAbout Trac WikiTimelineRoadmapBrowse SourceView TicketsSearch Context Navigation Previous ChangeNext Change Changeset 228 for vendor current console libgnt gntwm h View differences inlineside by side Show lines around each change Show the changes in full context Ignore Blank lines Case changes White space changes Timestamp Mar 6 2 7 1 39 26 PM 8 years ago Author djp3Message Updating from gaim Repository File 1 edited vendor current console libgnt gntwm h modified 3 diffs Legend UnmodifiedAddedRemoved vendor current console libgnt gntwm h r65 r228 1 2 include gntwidget h 3 include gntmenu h 4 15 include panel h 26 3 include gntwidget h 7 define GNT TYPE WM gnt wm get gtype 8 define GNT WM obj G TYPE CHECK INSTANCE CAST obj GNT TYPE WM GntWM 9 define GNT WM CLASS klass G TYPE CHECK CLASS CAST klass GNT TYPE WM GntWMClass 1 define GNT IS WM obj G TYPE CHECK INSTANCE TYPE obj GNT TYPE WM 11 define GNT IS WM CLASS klass G TYPE CHECK CLASS TYPE klass GNT TYPE WM 12 define GNT WM GET CLASS obj G TYPE INSTANCE GET CLASS obj GNT TYPE WM GntWMClass 413 5 XXX It might be a good idea to move GntNode from gntmain c to here 14typedef enum 15 16 GNT KP MODE NORMAL 17 GNT KP MODE RESIZE 18 GNT KP MODE MOVE 19 GntKeyPressMode 2 21typedef struct 22 23 GntWidget me 24 25 PANEL panel 26 GntNode 627 728typedef struct GntWM GntWM 829 3 typedef struct GnPosition 31 32 int x 33 int y 34 GntPosition 35 36 37 An application can register actions which will show up in a start menu like popup 38 39typedef struct GnAction 4 41 const char label 42 void callback 43 GntAction 44 945struct GntWM 1 46 11 This should return a PANEL for the win 12 PANEL new window GntWidget win 47 GntBindable inherit 1348 49 GMainLoop loop 5 51 GList list List of windows ordered on their creation time 52 GList ordered List of windows ordered on their focus 53 54 struct 55 GntWidget window 56 GntWidget tree 57 list 58 windows Window list window 59 actions Action list window 6 61 GHashTable nodes GntWidget GntNode 62 63 GList acts List of actions 64 65 66 There can be at most one menu at a time on the screen 67 If there is a menu being displayed then all the keystrokes will be sent to 68 the menu until it is closed either when the user activates a menuitem or 69 presses Escape to cancel the menu 7 71 GntMenu menu Currently active menu 72 73 74 event stack will be set to TRUE when a user event ie a mouse click 75 or a key press is being processed This variable will be used to determine 76 whether to give focus to a new window 77 78 gboolean event stack 79 8 GntKeyPressMode mode 81 82 GHashTable positions 83 84 void res1 85 void res2 86 void res3 87 void res4 88 89 9 typedef struct GnWMClass GntWMClass 91 92struct GnWMClass 93 94 GntBindableClass parent 95 96 This is called when a new window is shown 97 void new window GntWM wm GntWidget win 98 99 void decorate window GntWM wm GntWidget win 141 This is called when a window is being closed 15 gboolean close window GntWidget win 1 1 gboolean close window GntWM wm GntWidget win 161 2 171 3 The WM may want to confirm a size for a window first 18 gboolean window resize confirm GntWidget win int w int h 1 4 gboolean window resize confirm GntWM wm GntWidget win int w int h 191 5 2 Can del panel the old panel and return a new panel 21 Otherwise this should at least do a replace panel 22 PANEL window resized PANEL pan GntWidget win 1 6 void window resized GntWM wm GntNode node 231 7 241 8 The WM may want to confirm the position of a window 25 gboolean window move confirm GntWidget win int x int y 1 9 gboolean window move confirm GntWM wm GntWidget win int x int y 2611 27 void window moved PANEL pan GntWidget win 111 void window moved GntWM wm GntNode node 28112 29113 This gets called when 31115 the urgency of the window changes 32116 33 void window update PANEL pan GntWidget win 117 void window update GntWM wm GntNode node 34118 35119 This should usually return NULL if the keys were processed by the WM 38122 static string for the default WM to process 39123 4 const char key pressed const char key 124 gboolean key pressed GntWM wm const char key 41125 42 gboolean mouse clicked GntMouseEvent event int x int y GntWidget widget 126 gboolean mouse clicked GntWM wm GntMouseEvent event int x int y GntWidget widget 43127 44128 Whatever the WM wants to do when a window is given focus 45 void give focus GntWidget widget 46 47 If something needs to be uninited 48 void gntwm uninit 129 void give focus GntWM wm GntWidget widget 4913 5 131 List of windows Although the WM can keep a list of its own for the windows 51132 it d be better if there was a way to share between the core and the WM 52133 53 const GList window list 134 const GList window list 135 136 void res1 void 137 void res2 void 138 void res3 void 139 void res4 void 5414 55141 142G BEGIN DECLS 143 144GType gnt wm get gtype void 145 146void gnt wm new window GntWM wm GntWidget widget 147 148void gnt wm window decorate GntWM wm GntWidget widget 149 15 void gnt wm window close GntWM wm GntWidget widget 151 152void gnt wm process input GntWM wm const char string 153 154gboolean gnt wm process click GntWM wm GntMouseEvent event int x int y GntWidget widget 155 156void gnt wm resize window GntWM wm GntWidget widget int width int height 157 158void gnt wm move window GntWM wm GntWidget widget int x int y 159 16 void gnt wm update window GntWM wm GntWidget widget 161 162void gnt wm raise window GntWM wm GntWidget widget 163 164G END DECLS Note See TracChangeset for help on using the changeset viewer Download in other formats Unified Diff Zip Archive Powered by Trac 1 1 By Edgewall Software All content copyright 2 7 2 8 by LUCI http luci ics uci edu ", "_id": "http://djp3-pc2.ics.uci.edu/LUCICodeRepository/nomaticIM/changeset/228/vendor/current/console/libgnt/gntwm.h", "title": "\n      changeset 228 for vendor/current/console/libgnt/gntwm.h \u2013 nomatic*im\n    ", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n  \n\n\n  <head>\n\t\t<title>\n      Changeset 228 for vendor/current/console/libgnt/gntwm.h \u2013 Nomatic*IM\n    </title><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><link rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search\" /><link rel=\"help\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\" /><link rel=\"alternate\" href=\"?format=diff&amp;new=228\" type=\"text/plain\" class=\"diff\" title=\"Unified Diff\" /><link rel=\"alternate\" href=\"?format=zip&amp;new=228\" type=\"application/zip\" class=\"zip\" title=\"Zip Archive\" /><link rel=\"next\" href=\"/LUCICodeRepository/nomaticIM/changeset/274\" title=\"Changeset 274 for vendor/current/console/libgnt/gntwm.h\" /><link rel=\"start\" href=\"/LUCICodeRepository/nomaticIM/wiki\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/changeset.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/diff.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/code.css\" type=\"text/css\" /><link rel=\"prev\" href=\"/LUCICodeRepository/nomaticIM/changeset/65/vendor/current/console/libgnt/gntwm.h\" title=\"Changeset 65 for vendor/current/console/libgnt/gntwm.h\" /><link rel=\"shortcut icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link rel=\"icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link type=\"application/opensearchdescription+xml\" rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search/opensearch\" title=\"Search Nomatic*IM\" /><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/jquery.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/babel.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/messages/en_US.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/trac.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/search.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/diff.js\"></script><script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\".trac-toggledeleted\").show().click(function() {\n                  $(this).siblings().find(\".trac-deleted\").toggle();\n                  return false;\n        }).click();\n        $(\"#content\").find(\"li.entry h2 a\").parent().addAnchor(_(\"Link to this diff\"));\n      });\n    </script>\n\t</head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://luci.ics.uci.edu/#code\"><img src=\"http://luci.ics.uci.edu/blog/archives/LUCIhorzTight.jpg\" alt=\"LUCI Code Repository\" /></a>\n      </div>\n      <form id=\"search\" action=\"/LUCICodeRepository/nomaticIM/search\" method=\"get\">\n        <div>\n          <label for=\"proj-search\">Search:</label>\n          <input type=\"text\" id=\"proj-search\" name=\"q\" size=\"18\" value=\"\" />\n          <input type=\"submit\" value=\"Search\" />\n        </div>\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/login\">Login</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/prefs\">Preferences</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\">Help/Guide</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/wiki\">Wiki</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/timeline\">Timeline</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/roadmap\">Roadmap</a></li><li class=\"active\"><a href=\"/LUCICodeRepository/nomaticIM/browser\">Browse Source</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/report\">View Tickets</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/search\">Search</a></li>\n    </ul>\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><span>&larr; <a class=\"prev\" href=\"/LUCICodeRepository/nomaticIM/changeset/65/vendor/current/console/libgnt/gntwm.h\" title=\"Changeset 65 for vendor/current/console/libgnt/gntwm.h\">Previous Change</a></span></li><li class=\"last\"><span><a class=\"next\" href=\"/LUCICodeRepository/nomaticIM/changeset/274\" title=\"Changeset 274 for vendor/current/console/libgnt/gntwm.h\">Next Change</a> &rarr;</span></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"changeset\">\n      <div id=\"title\">\n            <h1>Changeset <a title=\"Show full changeset\" href=\"/LUCICodeRepository/nomaticIM/changeset/228\">228</a>\n              for <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/console/libgnt/gntwm.h?rev=228\">vendor/current/console/libgnt/gntwm.h</a></h1>\n      </div>\n      <form id=\"prefs\" action=\"\">\n        <div>\n          \n  <label for=\"style\">View differences</label>\n  <select id=\"style\" name=\"style\">\n    <option selected=\"selected\" value=\"inline\">inline</option>\n    <option value=\"sidebyside\">side by side</option>\n  </select>\n  <div class=\"field\">\n    <label><input type=\"radio\" name=\"contextall\" value=\"0\" checked=\"checked\" />\n             Show</label>\n      <label><input type=\"text\" name=\"contextlines\" id=\"contextlines\" size=\"2\" maxlength=\"3\" value=\"2\" />\n             lines around each change</label><br />\n    <label><input type=\"radio\" name=\"contextall\" value=\"1\" />\n           Show the changes in full context</label>\n  </div>\n  <fieldset id=\"ignore\">\n    <legend>Ignore:</legend>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignoreblanklines\" name=\"ignoreblanklines\" />\n      <label for=\"ignoreblanklines\">Blank lines</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorecase\" name=\"ignorecase\" />\n      <label for=\"ignorecase\">Case changes</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorewhitespace\" name=\"ignorewhitespace\" />\n      <label for=\"ignorewhitespace\">White space changes</label>\n    </div>\n  </fieldset>\n  <div class=\"buttons\">\n    <input type=\"submit\" name=\"update\" value=\"Update\" />\n  </div>\n\n        </div>\n      </form>\n      <dl id=\"overview\">\n          <dt class=\"property time\">Timestamp:</dt>\n          <dd class=\"time\">\n             Mar 6, 2007, 10:39:26 PM\n             (<a class=\"timeline\" href=\"/LUCICodeRepository/nomaticIM/timeline?from=2007-03-06T22%3A39%3A26-08%3A00&amp;precision=second\" title=\"See timeline at Mar 6, 2007, 10:39:26 PM\">8 years</a> ago)\n          </dd>\n          <dt class=\"property author\">Author:</dt>\n          <dd class=\"author\">djp3</dd>\n          <dt class=\"property message\">Message:</dt>\n          <dd class=\"message searchable\">\n            \n            \n              <p>\nUpdating from gaim Repository<br />\n</p>\n\n            \n            \n          </dd>\n        <dt class=\"property files\">\n          File:\n        </dt>\n        <dd class=\"files\">\n          <div class=\"legend\" id=\"file-legend\">\n            <dl>\n              <dt class=\"mod\"></dt><dd>1 edited</dd>\n            </dl>\n          </div>\n          <br />\n          <ul>\n            <li>\n          <div class=\"mod\"> </div>\n            <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/console/libgnt/gntwm.h?rev=228\">\n              vendor/current/console/libgnt/gntwm.h\n            </a>\n          <span class=\"comment\">(modified)</span>\n              (<a title=\"Show differences\" href=\"#file0\">3 diffs</a>)\n            </li>\n          </ul>\n        </dd>\n      </dl>\n      <div class=\"diff\">\n        <div class=\"legend\" id=\"diff-legend\">\n          <h3>Legend:</h3>\n          <dl>\n            <dt class=\"unmod\"></dt><dd>Unmodified</dd>\n            <dt class=\"add\"></dt><dd>Added</dd>\n            <dt class=\"rem\"></dt><dd>Removed</dd>\n          </dl>\n        </div>\n        <div class=\"diff\">\n  <ul class=\"entries\">\n      <li class=\"entry\">\n        <h2 id=\"file0\">\n          <a href=\"/LUCICodeRepository/nomaticIM/changeset/228/vendor/current/console/libgnt/gntwm.h\" title=\"Show the changeset 228 restricted to vendor/current/console/libgnt/gntwm.h\">vendor/current/console/libgnt/gntwm.h</a>\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"Revision 65\">\n                    <a title=\"Show revision 65 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/console/libgnt/gntwm.h?rev=65#L1\">\n                      r65</a>\n                  </th>\n                  <th title=\"Revision 228\">\n                    <a title=\"Show revision 228 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/console/libgnt/gntwm.h?rev=228#L1\">\n                      r228</a>\n                  </th>\n                  <td>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>1</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>2</th><td class=\"r\"><ins>#include \"gntwidget.h\"</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>3</th><td class=\"r\"><ins>#include \"gntmenu.h\"</ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>4</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>1</th><th>5</th><td class=\"l\"><span>#include &lt;panel.h&gt;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>2</th><th>6</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>3</th><th>\u00a0</th><td class=\"l\"><span>#include \"gntwidget.h\"</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>7</th><td class=\"r\"><span>#define GNT_TYPE_WM&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(gnt_wm_get_gtype())</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>8</th><td class=\"r\"><span>#define GNT_WM(obj)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(G_TYPE_CHECK_INSTANCE_CAST((obj), GNT_TYPE_WM, GntWM))</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>9</th><td class=\"r\"><span>#define GNT_WM_CLASS(klass)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(G_TYPE_CHECK_CLASS_CAST((klass), GNT_TYPE_WM, GntWMClass))</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>10</th><td class=\"r\"><span>#define GNT_IS_WM(obj)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (G_TYPE_CHECK_INSTANCE_TYPE((obj), GNT_TYPE_WM))</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>11</th><td class=\"r\"><span>#define GNT_IS_WM_CLASS(klass)&nbsp; (G_TYPE_CHECK_CLASS_TYPE((klass), GNT_TYPE_WM))</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>12</th><td class=\"r\"><span>#define GNT_WM_GET_CLASS(obj)&nbsp; &nbsp;(G_TYPE_INSTANCE_GET_CLASS((obj), GNT_TYPE_WM, GntWMClass))</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>4</th><th>13</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>5</th><th>\u00a0</th><td class=\"l\"><span>/* XXX: It might be a good idea to move GntNode from gntmain.c to here. */</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>14</th><td class=\"r\"><span>typedef enum</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>15</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>16</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; GNT_KP_MODE_NORMAL,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>17</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; GNT_KP_MODE_RESIZE,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>18</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; GNT_KP_MODE_MOVE,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>19</th><td class=\"r\"><span>} GntKeyPressMode;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>20</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>21</th><td class=\"r\"><span>typedef struct</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>22</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>23</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; GntWidget *me;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>24</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>25</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; PANEL *panel;</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>26</th><td class=\"r\"><span>} GntNode;</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>6</th><th>27</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>7</th><th>28</th><td class=\"l\"><span>typedef struct _GntWM GntWM;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>8</th><th>29</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>30</th><td class=\"r\"><ins>typedef struct _GnPosition</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>31</th><td class=\"r\"><ins>{</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>32</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; int x;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>33</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; int y;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>34</th><td class=\"r\"><ins>} GntPosition;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>35</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>36</th><td class=\"r\"><ins>/**</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>37</th><td class=\"r\"><ins>&nbsp;* An application can register actions which will show up in a 'start-menu' like popup</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>38</th><td class=\"r\"><ins>&nbsp;*/</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>39</th><td class=\"r\"><ins>typedef struct _GnAction</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>40</th><td class=\"r\"><ins>{</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>41</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; const char *label;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>42</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; void (*callback)();</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>43</th><td class=\"r\"><ins>} GntAction;</ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>44</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>9</th><th>45</th><td class=\"l\"><span>struct _GntWM</span>\u00a0</td>\n                  </tr><tr>\n                          <th>10</th><th>46</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>11</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* This should return a PANEL for the win */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>12</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; PANEL *(*new_window)(GntWidget *win);</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>47</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; GntBindable inherit;</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>13</th><th>48</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>49</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; GMainLoop *loop;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>50</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>51</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; GList *list;&nbsp; &nbsp; &nbsp; /* List of windows ordered on their creation time */</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>52</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; GList *ordered;&nbsp; &nbsp;/* List of windows ordered on their focus */</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>53</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>54</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; struct {</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>55</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GntWidget *window;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>56</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GntWidget *tree;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>57</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; } _list,</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>58</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *windows,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/* Window-list window */</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>59</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *actions;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/* Action-list window */</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>60</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>61</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; GHashTable *nodes;&nbsp; &nbsp; /* GntWidget -&gt; GntNode */</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>62</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>63</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; GList *acts;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* List of actions */</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>64</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>65</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; /**</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>66</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* There can be at most one menu at a time on the screen.</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>67</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* If there is a menu being displayed, then all the keystrokes will be sent to</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>68</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* the menu until it is closed, either when the user activates a menuitem, or</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>69</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* presses Escape to cancel the menu.</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>70</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*/</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>71</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; GntMenu *menu;&nbsp; &nbsp; &nbsp; &nbsp; /* Currently active menu */</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>72</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>73</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; /**</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>74</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* 'event_stack' will be set to TRUE when a user-event, ie. a mouse-click</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>75</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* or a key-press is being processed. This variable will be used to determine</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>76</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* whether to give focus to a new window.</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>77</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*/</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>78</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; gboolean event_stack;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>79</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>80</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; GntKeyPressMode mode;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>81</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>82</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; GHashTable *positions;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>83</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>84</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; void *res1;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>85</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; void *res2;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>86</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; void *res3;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>87</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; void *res4;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>88</th><td class=\"r\"><ins>};</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>89</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>90</th><td class=\"r\"><ins>typedef struct _GnWMClass GntWMClass;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>91</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>92</th><td class=\"r\"><ins>struct _GnWMClass</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>93</th><td class=\"r\"><ins>{</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>94</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; GntBindableClass parent;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>95</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>96</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; /* This is called when a new window is shown */</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>97</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; void (*new_window)(GntWM *wm, GntWidget *win);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>98</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>99</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; void (*decorate_window)(GntWM *wm, GntWidget *win);</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>14</th><th>100</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* This is called when a window is being closed */</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>15</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gboolean (*close_window)(GntW<del></del>idget *win);</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>101</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gboolean (*close_window)(GntW<ins>M *wm, GntW</ins>idget *win);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>16</th><th>102</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>17</th><th>103</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* The WM may want to confirm a size for a window first */</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>18</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gboolean (*window_resize_confirm)(GntW<del></del>idget *win, int *w, int *h);</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>104</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gboolean (*window_resize_confirm)(GntW<ins>M *wm, GntW</ins>idget *win, int *w, int *h);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>19</th><th>105</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>20</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* Can del_panel the old panel and return a new_panel.</span>\u00a0</td>\n                      </tr><tr>\n                        <th>21</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* Otherwise, this should at least do a replace_panel. */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>22</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; PANEL *(*window_resized)(PANEL *pan, GntWidget *win);</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>106</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; void (*window_resized)(GntWM *wm, GntNode *node);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>23</th><th>107</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>24</th><th>108</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* The WM may want to confirm the position of a window */</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>25</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gboolean (*window_move_confirm)(GntW<del></del>idget *win, int *x, int *y);</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>109</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gboolean (*window_move_confirm)(GntW<ins>M *wm, GntW</ins>idget *win, int *x, int *y);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>26</th><th>110</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>27</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; void (*window_moved)(<del>PANEL *pan, GntWidget *win</del>);</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>111</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; void (*window_moved)(<ins>GntWM *wm, GntNode *node</ins>);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>28</th><th>112</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>29</th><th>113</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* This gets called when:</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/console/libgnt/gntwm.h?rev=65#L31\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/console/libgnt/gntwm.h?rev=228#L115\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>31</th><th>115</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*&nbsp; &nbsp; &nbsp; &nbsp;- the 'urgency' of the window changes</span>\u00a0</td>\n                  </tr><tr>\n                          <th>32</th><th>116</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*/</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>33</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; void (*window_update)(<del>PANEL *pan, GntWidget *win</del>);</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>117</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; void (*window_update)(<ins>GntWM *wm, GntNode *node</ins>);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>34</th><th>118</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>35</th><th>119</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* This should usually return NULL if the keys were processed by the WM.</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/console/libgnt/gntwm.h?rev=65#L38\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/console/libgnt/gntwm.h?rev=228#L122\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>38</th><th>122</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* static string for the default WM to process.</span>\u00a0</td>\n                  </tr><tr>\n                          <th>39</th><th>123</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*/</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>40</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; <del>const char *(*key_pressed)(</del>const char *key);</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>124</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; <ins>gboolean (*key_pressed)(GntWM *wm, </ins>const char *key);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>41</th><th>125</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>42</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gboolean (*mouse_clicked)(Gnt<del></del>MouseEvent event, int x, int y, GntWidget *widget);</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>126</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gboolean (*mouse_clicked)(Gnt<ins>WM *wm, Gnt</ins>MouseEvent event, int x, int y, GntWidget *widget);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>43</th><th>127</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>44</th><th>128</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* Whatever the WM wants to do when a window is given focus */</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>45</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; void (*give_focus)(GntWidget *widget);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>46</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>47</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* If something needs to be uninited */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>48</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; void (*gntwm_uninit)();</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>129</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; void (*give_focus)(GntWM *wm, GntWidget *widget);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>49</th><th>130</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>50</th><th>131</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* List of windows. Although the WM can keep a list of its own for the windows,</span>\u00a0</td>\n                  </tr><tr>\n                          <th>51</th><th>132</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* it'd be better if there was a way to share between the 'core' and the WM.</span>\u00a0</td>\n                  </tr><tr>\n                          <th>52</th><th>133</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*/</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>53</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; const GList *(*window_list)();</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>134</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /*const GList *(*window_list)();*/</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>135</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>136</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; void (*res1)(void);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>137</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; void (*res2)(void);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>138</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; void (*res3)(void);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>139</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; void (*res4)(void);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>54</th><th>140</th><td class=\"l\"><span>};</span>\u00a0</td>\n                  </tr><tr>\n                          <th>55</th><th>141</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>142</th><td class=\"r\"><ins>G_BEGIN_DECLS</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>143</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>144</th><td class=\"r\"><ins>GType gnt_wm_get_gtype(void);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>145</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>146</th><td class=\"r\"><ins>void gnt_wm_new_window(GntWM *wm, GntWidget *widget);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>147</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>148</th><td class=\"r\"><ins>void gnt_wm_window_decorate(GntWM *wm, GntWidget *widget);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>149</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>150</th><td class=\"r\"><ins>void gnt_wm_window_close(GntWM *wm, GntWidget *widget);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>151</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>152</th><td class=\"r\"><ins>void gnt_wm_process_input(GntWM *wm, const char *string);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>153</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>154</th><td class=\"r\"><ins>gboolean gnt_wm_process_click(GntWM *wm, GntMouseEvent event, int x, int y, GntWidget *widget);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>155</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>156</th><td class=\"r\"><ins>void gnt_wm_resize_window(GntWM *wm, GntWidget *widget, int width, int height);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>157</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>158</th><td class=\"r\"><ins>void gnt_wm_move_window(GntWM *wm, GntWidget *widget, int x, int y);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>159</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>160</th><td class=\"r\"><ins>void gnt_wm_update_window(GntWM *wm, GntWidget *widget);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>161</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>162</th><td class=\"r\"><ins>void gnt_wm_raise_window(GntWM *wm, GntWidget *widget);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>163</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>164</th><td class=\"r\"><ins>G_END_DECLS</ins>\u00a0</td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n  </ul>\n</div>\n        <div id=\"help\"><strong>Note:</strong> See <a href=\"/LUCICodeRepository/nomaticIM/wiki/TracChangeset\">TracChangeset</a>\n          for help on using the changeset viewer.</div>\n      </div>\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"first\">\n          <a rel=\"nofollow\" href=\"?format=diff&amp;new=228\" class=\"diff\">Unified Diff</a>\n        </li><li class=\"last\">\n          <a rel=\"nofollow\" href=\"?format=zip&amp;new=228\" class=\"zip\">Zip Archive</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/LUCICodeRepository/nomaticIM/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/LUCICodeRepository/nomaticIM/about\"><strong>Trac 1.0.1</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">All content copyright 2007-2008 by LUCI <br /><a href=\"http://luci.ics.uci.edu/\">http://luci.ics.uci.edu/</a></p>\n    </div>\n\t\t<div id=\"sitefooter\">\n\t\t\t<script src=\"http://www.google-analytics.com/urchin.js\" type=\"text/javascript\">\n\t\t\t</script>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t\t_uacct = \"UA-338915-2\";\n\t\t\t\turchinTracker();\n\t\t\t</script>\n\t\t</div>\n\t</body>\n</html>", "id": 40036.0}