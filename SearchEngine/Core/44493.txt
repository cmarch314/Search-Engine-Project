{"text": "Search LoginPreferencesHelp GuideAbout Trac WikiTimelineRoadmapBrowse SourceView TicketsSearch Context Navigation BlameRevision Log source nomatic tags NomaticIM 4 buddy bots src twisted protocols telnet py View diff against View revision Visit trunk Last change on this file was 712 checked in by cbaker 7 years ago First draft of nomatic buddy bots oscar bot is functional if you give it good authentication credentials jabber bot is just an example from the web File size 12 KB Line 12 Copyright c 2 1 2 4 Twisted Matrix Laboratories 3 See LICENSE for details 456 TELNET implementation with line oriented command handling 7 89import warnings1 warnings warn 11 As of Twisted 2 1 twisted protocols telnet is deprecated 12 See twisted conch telnet for the current supported API 13 DeprecationWarning 14 stacklevel 2 151617 System Imports18try 19 from cStringIO import StringIO2 except ImportError 21 from StringIO import StringIO2223 Twisted Imports24from twisted import copyright25from twisted internet import protocol2627 Some utility chars 28ESC chr 27 ESC for doing fanciness29BOLD MODE ON ESC 1m turn bold on3 BOLD MODE OFF ESC m no char attributes313233 Characters gleaned from the various and conflicting RFCs Not all of these are correct 3435NULL chr No operation 36LF chr 1 Moves the printer to the37 next print line keeping the38 same horizontal position 39CR chr 13 Moves the printer to the left4 margin of the current line 41BEL chr 7 Produces an audible or42 visible signal which does43 NOT move the print head 44BS chr 8 Moves the print head one45 character position towards46 the left margin 47HT chr 9 Moves the printer to the48 next horizontal tab stop 49 It remains unspecified how5 either party determines or51 establishes where such tab52 stops are located 53VT chr 11 Moves the printer to the54 next vertical tab stop It55 remains unspecified how56 either party determines or57 establishes where such tab58 stops are located 59FF chr 12 Moves the printer to the top6 of the next page keeping61 the same horizontal position 62SE chr 24 End of subnegotiation parameters 63NOP chr 241 No operation 64DM chr 242 Data Mark The data stream portion65 of a Synch This should always be66 accompanied by a TCP Urgent67 notification 68BRK chr 243 NVT character Break 69IP chr 244 The function Interrupt Process 7 AO chr 245 The function Abort Output71AYT chr 246 The function Are You There 72EC chr 247 The function Erase Character 73EL chr 248 The function Erase Line74GA chr 249 The Go Ahead signal 75SB chr 25 Indicates that what follows is76 subnegotiation of the indicated77 option 78WILL chr 251 Indicates the desire to begin79 performing or confirmation that8 you are now performing the81 indicated option 82WONT chr 252 Indicates the refusal to perform 83 or continue performing the84 indicated option 85DO chr 253 Indicates the request that the86 other party perform or87 confirmation that you are expecting88 the other party to perform the89 indicated option 9 DONT chr 254 Indicates the demand that the91 other party stop performing 92 or confirmation that you are no93 longer expecting the other party94 to perform the indicated option 95IAC chr 255 Data Byte 255 9697 features9899ECHO chr 1 User to Server Asks the server to send1 Echos of the transmitted data 1 11 2 Server to User States that the server is1 3 sending echos of the transmitted data 1 4 Sent only as a reply to ECHO or NO ECHO 1 51 6SUPGA chr 3 Supress Go Ahead Modern telnet servers1 7 are supposed to do this 1 81 9LINEMODE chr 34 I don t care that Jon Postel is dead 11 111HIDE chr 133 The intention is that a server will send112 this signal to a user system which is113 echoing locally to the user when the user114 is about to type something secret e g a115 password In this case the user system116 is to suppress local echoing or overprint117 the input or something until the server118 sends a NOECHO signal In situations where119 the user system is not echoing locally 12 this signal must not be sent by the server 121122123NOECHO chr 131 User to Server Asks the server not to124 return Echos of the transmitted data 125 126 Server to User States that the server is127 not sending echos of the transmitted data 128 Sent only as a reply to ECHO or NO ECHO 129 or to end the hide your input 13 131132133iacBytes 134 DO DO 135 DONT DONT 136 WILL WILL 137 WONT WONT 138 IP IP 139 14 141def multireplace st dct 142 for k v in dct items 143 st st replace k v 144 return st145146class Telnet protocol Protocol 147 I am a Protocol for handling Telnet connections I have two148 sets of special methods telnet and iac 14915 telnet methods get called on every line sent to me The method151 to call is decided by the current mode The initial mode is User 152 this means that telnet User is the first telnet method to be called 153 All telnet methods should return a string which specifies the mode154 to go into next thus dictating which telnet method to call next 155 For example the default telnet User method returns Password to go156 into Password mode and the default telnet Password method returns157 Command to go into Command mode 158159 The iac methods are less used they are called when an IAC telnet16 byte is received You can define iac DO iac DONT iac WILL iac WONT 161 and iac IP methods to do what you want when one of these bytes is162 received 163164165 gotIAC 166 iacByte None167 lastLine None168 buffer 169 echo 17 delimiters r n r 171 mode User 172173 def write self data 174 Send the given data over my transport 175 self transport write data 176177178 def connectionMade self 179 I will write a welcomeMessage and loginPrompt to the client 18 self write self welcomeMessage self loginPrompt 181182 def welcomeMessage self 183 Override me to return a string which will be sent to the client184 before login 185 x self factory class 186 return r n x module x name 187 r nTwisted s r n copyright version188 18919 def loginPrompt self 191 Override me to return a login type prompt 192 return username 193194 def iacSBchunk self chunk 195 pass196197 def iac DO self feature 198 pass1992 def iac DONT self feature 2 1 pass2 22 3 def iac WILL self feature 2 4 pass2 52 6 def iac WONT self feature 2 7 pass2 82 9 def iac IP self feature 21 pass211212 def processLine self line 213 I call a method that looks like telnet where is filled214 in by the current mode telnet methods should return a string which215 will become the new mode If None is returned the mode will not change 216 217 mode getattr self telnet self mode line 218 if mode is not None 219 self mode mode22 221 def telnet User self user 222 I take a username set it to the self username attribute 223 print out a password prompt and switch to Password mode If224 you want to do something else when the username is received ie 225 create a new user if the user doesn t exist override me 226 self username user227 self write IAC WILL ECHO password 228 return Password 22923 def telnet Password self paswd 231 I accept a password as an argument and check it with the232 checkUserAndPass method If the login is successful I call233 loggedIn 234 self write IAC WONT ECHO r n 235 try 236 checked self checkUserAndPass self username paswd 237 except 238 return Done 239 if not checked 24 return Done 241 self loggedIn 242 return Command 243244 def telnet Command self cmd 245 The default command processing mode You probably want to246 override me 247 return Command 248249 def processChunk self chunk 25 I take a chunk of data and delegate out to telnet methods251 by way of processLine If the current mode is Done I ll close252 the connection 253 self buffer self buffer chunk254255 yech 256 for delim in self delimiters 257 idx self buffer find delim 258 if idx 1 259 break26 261 while idx 1 262 buf self buffer self buffer idx self buffer idx 2 263 self processLine buf 264 if self mode Done 265 self transport loseConnection 266267 for delim in self delimiters 268 idx self buffer find delim 269 if idx 1 27 break271272 def dataReceived self data 273 chunk StringIO 274 silly little IAC state machine275 for char in data 276 if self gotIAC 277 working on an IAC request state278 if self iacByte 279 we re in SB mode getting a chunk28 if self iacByte SB 281 if char SE 282 self iacSBchunk chunk getvalue 283 chunk StringIO 284 del self iacByte285 del self gotIAC286 else 287 chunk write char 288 else 289 got all I need to know state29 try 291 getattr self iac s iacBytes self iacByte char 292 except KeyError 293 pass294 del self iacByte295 del self gotIAC296 else 297 got IAC this is my W W D D or perhaps sb 298 self iacByte char299 elif char IAC 3 Process what I ve got so far before going into3 1 the IAC state don t want to process characters3 2 in an inconsistent state with what they were3 3 received in 3 4 c chunk getvalue 3 5 if c 3 6 why self processChunk c 3 7 if why 3 8 return why3 9 chunk StringIO 31 self gotIAC 1311 else 312 chunk write char 313 chunks are of a relatively indeterminate size 314 c chunk getvalue 315 if c 316 why self processChunk c 317 if why 318 return why31932 def loggedIn self 321 Called after the user succesfully logged in 322 323 Override in subclasses 324 325 pass Note See TracBrowser for help on using the repository browser Download in other formats Plain Text Original Format Powered by Trac 1 1 By Edgewall Software All content copyright 2 7 2 8 by LUCI http luci ics uci edu ", "_id": "http://djp3-pc2.ics.uci.edu/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.4/buddy_bots/src/twisted/protocols/telnet.py", "title": "\n      telnet.py in nomatic/tags/nomaticim-0.0.4/buddy_bots/src/twisted/protocols\n     \u2013 nomatic*im\n    ", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n  \n\n\n  <head>\n\t\t<title>\n      telnet.py in nomatic/tags/NomaticIM-0.0.4/buddy_bots/src/twisted/protocols\n     \u2013 Nomatic*IM\n    </title><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><link rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search\" /><link rel=\"help\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.4/buddy_bots/src/twisted/protocols/telnet.py?format=txt\" type=\"text/plain\" title=\"Plain Text\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.4/buddy_bots/src/twisted/protocols/telnet.py\" type=\"application/x-python; charset=iso-8859-15\" title=\"Original Format\" /><link rel=\"start\" href=\"/LUCICodeRepository/nomaticIM/wiki\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/code.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/pygments/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/browser.css\" type=\"text/css\" /><link rel=\"shortcut icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link rel=\"icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link type=\"application/opensearchdescription+xml\" rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search/opensearch\" title=\"Search Nomatic*IM\" /><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/jquery.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/babel.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/messages/en_US.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/trac.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/search.js\"></script><script type=\"text/javascript\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/folding.js\"></script><script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\".trac-toggledeleted\").show().click(function() {\n                  $(this).siblings().find(\".trac-deleted\").toggle();\n                  return false;\n        }).click();\n        $(\"#jumploc input\").hide();\n        $(\"#jumploc select\").change(function () {\n          this.parentNode.parentNode.submit();\n        });\n          $('#preview table.code').enableCollapsibleColumns($('#preview table.code thead th.content'));\n      });\n    </script>\n\t</head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://luci.ics.uci.edu/#code\"><img src=\"http://luci.ics.uci.edu/blog/archives/LUCIhorzTight.jpg\" alt=\"LUCI Code Repository\" /></a>\n      </div>\n      <form id=\"search\" action=\"/LUCICodeRepository/nomaticIM/search\" method=\"get\">\n        <div>\n          <label for=\"proj-search\">Search:</label>\n          <input type=\"text\" id=\"proj-search\" name=\"q\" size=\"18\" value=\"\" />\n          <input type=\"submit\" value=\"Search\" />\n        </div>\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/login\">Login</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/prefs\">Preferences</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\">Help/Guide</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/wiki\">Wiki</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/timeline\">Timeline</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/roadmap\">Roadmap</a></li><li class=\"active\"><a href=\"/LUCICodeRepository/nomaticIM/browser\">Browse Source</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/report\">View Tickets</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/search\">Search</a></li>\n    </ul>\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/buddy_bots/twisted/protocols/telnet.py?annotate=blame\" title=\"Annotate each line with the last changed revision (this can be time consuming...)\">Blame</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/log/nomatic/tags/NomaticIM-0.0.4/buddy_bots/src/twisted/protocols/telnet.py\">Revision Log</a></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"browser\">\n        <h1>\n          \n<a class=\"pathentry first\" href=\"/LUCICodeRepository/nomaticIM/browser?order=name\" title=\"Go to repository root\">source:</a>\n<a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic?order=name\" title=\"View nomatic\">nomatic</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags?order=name\" title=\"View tags\">tags</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.4?order=name\" title=\"View NomaticIM-0.0.4\">NomaticIM-0.0.4</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.4/buddy_bots?order=name\" title=\"View buddy_bots\">buddy_bots</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.4/buddy_bots/src?order=name\" title=\"View src\">src</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.4/buddy_bots/src/twisted?order=name\" title=\"View twisted\">twisted</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.4/buddy_bots/src/twisted/protocols?order=name\" title=\"View protocols\">protocols</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.4/buddy_bots/src/twisted/protocols/telnet.py?order=name\" title=\"View telnet.py\">telnet.py</a>\n<br style=\"clear: both\" />\n\n        </h1>\n        <div id=\"diffrev\">\n          <form action=\"/LUCICodeRepository/nomaticIM/changeset\" method=\"get\">\n            <div>\n              <label title=\"Show the diff against a specific revision\">\n                View diff against: <input type=\"text\" name=\"old\" size=\"6\" />\n                <input type=\"hidden\" name=\"old_path\" value=\"nomatic/tags/NomaticIM-0.0.4/buddy_bots/src/twisted/protocols/telnet.py\" />\n                <input type=\"hidden\" name=\"new\" />\n                <input type=\"hidden\" name=\"new_path\" value=\"nomatic/tags/NomaticIM-0.0.4/buddy_bots/src/twisted/protocols/telnet.py\" />\n              </label>\n            </div>\n          </form>\n        </div>\n        <div id=\"jumprev\">\n          <form action=\"\" method=\"get\">\n            <div>\n              <label for=\"rev\">\n                View revision:</label>\n              <input type=\"text\" id=\"rev\" name=\"rev\" size=\"6\" />\n            </div>\n          </form>\n        </div>\n        <div id=\"jumploc\">\n          <form action=\"\" method=\"get\">\n            <div class=\"buttons\">\n              <label for=\"preselected\">Visit:</label>\n              <select id=\"preselected\" name=\"preselected\">\n                <option selected=\"selected\"></option>\n                <optgroup label=\"branches\">\n                  <option value=\"/LUCICodeRepository/nomaticIM/browser/trunk\">trunk</option>\n                </optgroup>\n              </select>\n              <input type=\"submit\" value=\"Go!\" title=\"Jump to the chosen preselected path\" />\n            </div>\n          </form>\n        </div>\n        <div class=\"trac-tags\">\n        </div>\n      <table id=\"info\" summary=\"Revision info\">\n        <tr>\n          <th>\n                <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/nomatic/trunk/buddy_bots/twisted/protocols/telnet.py\" title=\"View differences\">Last change</a>\n                  on this file was\n                  <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/\" title=\"View changeset 712\">712</a>,\n                  checked in by cbaker, <a class=\"timeline\" href=\"/LUCICodeRepository/nomaticIM/timeline?from=2008-02-16T08%3A16%3A53-08%3A00&amp;precision=second\" title=\"See timeline at Feb 16, 2008, 8:16:53 AM\">7 years ago</a>\n          </th>\n        </tr>\n        <tr>\n          <td class=\"message searchable\">\n              <p>\nFirst draft of nomatic buddy bots. oscar_bot is functional if you give it good authentication credentials, jabber_bot is just an example from the web <br />\n</p>\n          </td>\n        </tr>\n        <tr><td colspan=\"2\">\n            <strong>File size:</strong>\n            <span title=\"12270 bytes\">12.0 KB</span>\n          </td></tr>\n      </table>\n      <div id=\"preview\" class=\"searchable\">\n        \n  <table class=\"code\"><thead><tr><th class=\"lineno\" title=\"Line numbers\">Line</th><th class=\"content\">\u00a0</th></tr></thead><tbody><tr><th id=\"L1\"><a href=\"#L1\">1</a></th><td></td></tr><tr><th id=\"L2\"><a href=\"#L2\">2</a></th><td><span class=\"c\"># Copyright (c) 2001-2004 Twisted Matrix Laboratories.</span></td></tr><tr><th id=\"L3\"><a href=\"#L3\">3</a></th><td><span class=\"c\"># See LICENSE for details.</span></td></tr><tr><th id=\"L4\"><a href=\"#L4\">4</a></th><td></td></tr><tr><th id=\"L5\"><a href=\"#L5\">5</a></th><td></td></tr><tr><th id=\"L6\"><a href=\"#L6\">6</a></th><td><span class=\"sd\">\"\"\"TELNET implementation, with line-oriented command handling.</span></td></tr><tr><th id=\"L7\"><a href=\"#L7\">7</a></th><td><span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L8\"><a href=\"#L8\">8</a></th><td></td></tr><tr><th id=\"L9\"><a href=\"#L9\">9</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">warnings</span></td></tr><tr><th id=\"L10\"><a href=\"#L10\">10</a></th><td>warnings<span class=\"o\">.</span>warn<span class=\"p\">(</span></td></tr><tr><th id=\"L11\"><a href=\"#L11\">11</a></th><td>\u00a0 \u00a0 <span class=\"s\">\"As of Twisted 2.1, twisted.protocols.telnet is deprecated.\u00a0 \"</span></td></tr><tr><th id=\"L12\"><a href=\"#L12\">12</a></th><td>\u00a0 \u00a0 <span class=\"s\">\"See twisted.conch.telnet for the current, supported API.\"</span><span class=\"p\">,</span></td></tr><tr><th id=\"L13\"><a href=\"#L13\">13</a></th><td>\u00a0 \u00a0 <span class=\"ne\">DeprecationWarning</span><span class=\"p\">,</span></td></tr><tr><th id=\"L14\"><a href=\"#L14\">14</a></th><td>\u00a0 \u00a0 stacklevel<span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span></td></tr><tr><th id=\"L15\"><a href=\"#L15\">15</a></th><td></td></tr><tr><th id=\"L16\"><a href=\"#L16\">16</a></th><td></td></tr><tr><th id=\"L17\"><a href=\"#L17\">17</a></th><td><span class=\"c\"># System Imports</span></td></tr><tr><th id=\"L18\"><a href=\"#L18\">18</a></th><td><span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L19\"><a href=\"#L19\">19</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">cStringIO</span>\u00a0<span class=\"kn\">import</span>\u00a0StringIO</td></tr><tr><th id=\"L20\"><a href=\"#L20\">20</a></th><td><span class=\"k\">except</span>\u00a0<span class=\"ne\">ImportError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L21\"><a href=\"#L21\">21</a></th><td>\u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">StringIO</span>\u00a0<span class=\"kn\">import</span>\u00a0StringIO</td></tr><tr><th id=\"L22\"><a href=\"#L22\">22</a></th><td></td></tr><tr><th id=\"L23\"><a href=\"#L23\">23</a></th><td><span class=\"c\"># Twisted Imports</span></td></tr><tr><th id=\"L24\"><a href=\"#L24\">24</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted</span>\u00a0<span class=\"kn\">import</span>\u00a0copyright</td></tr><tr><th id=\"L25\"><a href=\"#L25\">25</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet</span>\u00a0<span class=\"kn\">import</span>\u00a0protocol</td></tr><tr><th id=\"L26\"><a href=\"#L26\">26</a></th><td></td></tr><tr><th id=\"L27\"><a href=\"#L27\">27</a></th><td><span class=\"c\"># Some utility chars.</span></td></tr><tr><th id=\"L28\"><a href=\"#L28\">28</a></th><td>ESC <span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">27</span><span class=\"p\">)</span>\u00a0<span class=\"c\"># ESC for doing fanciness</span></td></tr><tr><th id=\"L29\"><a href=\"#L29\">29</a></th><td>BOLD_MODE_ON <span class=\"o\">=</span>\u00a0 \u00a0ESC<span class=\"o\">+</span><span class=\"s\">\"[1m\"</span>\u00a0<span class=\"c\"># turn bold on</span></td></tr><tr><th id=\"L30\"><a href=\"#L30\">30</a></th><td>BOLD_MODE_OFF<span class=\"o\">=</span>\u00a0 \u00a0ESC<span class=\"o\">+</span><span class=\"s\">\"[m\"</span>\u00a0 <span class=\"c\"># no char attributes</span></td></tr><tr><th id=\"L31\"><a href=\"#L31\">31</a></th><td></td></tr><tr><th id=\"L32\"><a href=\"#L32\">32</a></th><td></td></tr><tr><th id=\"L33\"><a href=\"#L33\">33</a></th><td><span class=\"c\"># Characters gleaned from the various (and conflicting) RFCs.\u00a0 Not all of these are correct.</span></td></tr><tr><th id=\"L34\"><a href=\"#L34\">34</a></th><td></td></tr><tr><th id=\"L35\"><a href=\"#L35\">35</a></th><td>NULL <span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\u00a0 <span class=\"c\"># No operation.</span></td></tr><tr><th id=\"L36\"><a href=\"#L36\">36</a></th><td>LF\u00a0 \u00a0<span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\u00a0 <span class=\"c\"># Moves the printer to the</span></td></tr><tr><th id=\"L37\"><a href=\"#L37\">37</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># next print line, keeping the</span></td></tr><tr><th id=\"L38\"><a href=\"#L38\">38</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># same horizontal position.</span></td></tr><tr><th id=\"L39\"><a href=\"#L39\">39</a></th><td>CR <span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">13</span><span class=\"p\">)</span>\u00a0 <span class=\"c\"># Moves the printer to the left</span></td></tr><tr><th id=\"L40\"><a href=\"#L40\">40</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># margin of the current line.</span></td></tr><tr><th id=\"L41\"><a href=\"#L41\">41</a></th><td>BEL <span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">)</span>\u00a0 <span class=\"c\"># Produces an audible or</span></td></tr><tr><th id=\"L42\"><a href=\"#L42\">42</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># visible signal (which does</span></td></tr><tr><th id=\"L43\"><a href=\"#L43\">43</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># NOT move the print head).</span></td></tr><tr><th id=\"L44\"><a href=\"#L44\">44</a></th><td>BS\u00a0 <span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">)</span>\u00a0 <span class=\"c\"># Moves the print head one</span></td></tr><tr><th id=\"L45\"><a href=\"#L45\">45</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># character position towards</span></td></tr><tr><th id=\"L46\"><a href=\"#L46\">46</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># the left margin.</span></td></tr><tr><th id=\"L47\"><a href=\"#L47\">47</a></th><td>HT\u00a0 <span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">)</span>\u00a0 <span class=\"c\"># Moves the printer to the</span></td></tr><tr><th id=\"L48\"><a href=\"#L48\">48</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># next horizontal tab stop.</span></td></tr><tr><th id=\"L49\"><a href=\"#L49\">49</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># It remains unspecified how</span></td></tr><tr><th id=\"L50\"><a href=\"#L50\">50</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># either party determines or</span></td></tr><tr><th id=\"L51\"><a href=\"#L51\">51</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># establishes where such tab</span></td></tr><tr><th id=\"L52\"><a href=\"#L52\">52</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># stops are located.</span></td></tr><tr><th id=\"L53\"><a href=\"#L53\">53</a></th><td>VT <span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">11</span><span class=\"p\">)</span>\u00a0 <span class=\"c\"># Moves the printer to the</span></td></tr><tr><th id=\"L54\"><a href=\"#L54\">54</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># next vertical tab stop.\u00a0 It</span></td></tr><tr><th id=\"L55\"><a href=\"#L55\">55</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># remains unspecified how</span></td></tr><tr><th id=\"L56\"><a href=\"#L56\">56</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># either party determines or</span></td></tr><tr><th id=\"L57\"><a href=\"#L57\">57</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># establishes where such tab</span></td></tr><tr><th id=\"L58\"><a href=\"#L58\">58</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># stops are located.</span></td></tr><tr><th id=\"L59\"><a href=\"#L59\">59</a></th><td>FF <span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">12</span><span class=\"p\">)</span>\u00a0 <span class=\"c\"># Moves the printer to the top</span></td></tr><tr><th id=\"L60\"><a href=\"#L60\">60</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># of the next page, keeping</span></td></tr><tr><th id=\"L61\"><a href=\"#L61\">61</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># the same horizontal position.</span></td></tr><tr><th id=\"L62\"><a href=\"#L62\">62</a></th><td>SE <span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">240</span><span class=\"p\">)</span>\u00a0 <span class=\"c\"># End of subnegotiation parameters.</span></td></tr><tr><th id=\"L63\"><a href=\"#L63\">63</a></th><td>NOP<span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">241</span><span class=\"p\">)</span>\u00a0 <span class=\"c\"># No operation.</span></td></tr><tr><th id=\"L64\"><a href=\"#L64\">64</a></th><td>DM <span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">242</span><span class=\"p\">)</span>\u00a0 <span class=\"c\"># \"Data Mark\": The data stream portion</span></td></tr><tr><th id=\"L65\"><a href=\"#L65\">65</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># of a Synch.\u00a0 This should always be</span></td></tr><tr><th id=\"L66\"><a href=\"#L66\">66</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># accompanied by a TCP Urgent</span></td></tr><tr><th id=\"L67\"><a href=\"#L67\">67</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># notification.</span></td></tr><tr><th id=\"L68\"><a href=\"#L68\">68</a></th><td>BRK<span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">243</span><span class=\"p\">)</span>\u00a0 <span class=\"c\"># NVT character Break.</span></td></tr><tr><th id=\"L69\"><a href=\"#L69\">69</a></th><td>IP <span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">244</span><span class=\"p\">)</span>\u00a0 <span class=\"c\"># The function Interrupt Process.</span></td></tr><tr><th id=\"L70\"><a href=\"#L70\">70</a></th><td>AO <span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">245</span><span class=\"p\">)</span>\u00a0 <span class=\"c\"># The function Abort Output</span></td></tr><tr><th id=\"L71\"><a href=\"#L71\">71</a></th><td>AYT<span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">246</span><span class=\"p\">)</span>\u00a0 <span class=\"c\"># The function Are You There.</span></td></tr><tr><th id=\"L72\"><a href=\"#L72\">72</a></th><td>EC <span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">247</span><span class=\"p\">)</span>\u00a0 <span class=\"c\"># The function Erase Character.</span></td></tr><tr><th id=\"L73\"><a href=\"#L73\">73</a></th><td>EL <span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">248</span><span class=\"p\">)</span>\u00a0 <span class=\"c\"># The function Erase Line</span></td></tr><tr><th id=\"L74\"><a href=\"#L74\">74</a></th><td>GA <span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">249</span><span class=\"p\">)</span>\u00a0 <span class=\"c\"># The Go Ahead signal.</span></td></tr><tr><th id=\"L75\"><a href=\"#L75\">75</a></th><td>SB <span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">250</span><span class=\"p\">)</span>\u00a0 <span class=\"c\"># Indicates that what follows is</span></td></tr><tr><th id=\"L76\"><a href=\"#L76\">76</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># subnegotiation of the indicated</span></td></tr><tr><th id=\"L77\"><a href=\"#L77\">77</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># option.</span></td></tr><tr><th id=\"L78\"><a href=\"#L78\">78</a></th><td>WILL <span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">251</span><span class=\"p\">)</span>\u00a0 <span class=\"c\"># Indicates the desire to begin</span></td></tr><tr><th id=\"L79\"><a href=\"#L79\">79</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># performing, or confirmation that</span></td></tr><tr><th id=\"L80\"><a href=\"#L80\">80</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># you are now performing, the</span></td></tr><tr><th id=\"L81\"><a href=\"#L81\">81</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># indicated option.</span></td></tr><tr><th id=\"L82\"><a href=\"#L82\">82</a></th><td>WONT <span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">252</span><span class=\"p\">)</span>\u00a0 <span class=\"c\"># Indicates the refusal to perform,</span></td></tr><tr><th id=\"L83\"><a href=\"#L83\">83</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># or continue performing, the</span></td></tr><tr><th id=\"L84\"><a href=\"#L84\">84</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># indicated option.</span></td></tr><tr><th id=\"L85\"><a href=\"#L85\">85</a></th><td>DO <span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">253</span><span class=\"p\">)</span>\u00a0 <span class=\"c\"># Indicates the request that the</span></td></tr><tr><th id=\"L86\"><a href=\"#L86\">86</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># other party perform, or</span></td></tr><tr><th id=\"L87\"><a href=\"#L87\">87</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># confirmation that you are expecting</span></td></tr><tr><th id=\"L88\"><a href=\"#L88\">88</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># the other party to perform, the</span></td></tr><tr><th id=\"L89\"><a href=\"#L89\">89</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># indicated option.</span></td></tr><tr><th id=\"L90\"><a href=\"#L90\">90</a></th><td>DONT <span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">254</span><span class=\"p\">)</span>\u00a0 <span class=\"c\"># Indicates the demand that the</span></td></tr><tr><th id=\"L91\"><a href=\"#L91\">91</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># other party stop performing,</span></td></tr><tr><th id=\"L92\"><a href=\"#L92\">92</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># or confirmation that you are no</span></td></tr><tr><th id=\"L93\"><a href=\"#L93\">93</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># longer expecting the other party</span></td></tr><tr><th id=\"L94\"><a href=\"#L94\">94</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># to perform, the indicated option.</span></td></tr><tr><th id=\"L95\"><a href=\"#L95\">95</a></th><td>IAC <span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">)</span>\u00a0 <span class=\"c\"># Data Byte 255.</span></td></tr><tr><th id=\"L96\"><a href=\"#L96\">96</a></th><td></td></tr><tr><th id=\"L97\"><a href=\"#L97\">97</a></th><td><span class=\"c\"># features</span></td></tr><tr><th id=\"L98\"><a href=\"#L98\">98</a></th><td></td></tr><tr><th id=\"L99\"><a href=\"#L99\">99</a></th><td>ECHO\u00a0 <span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\u00a0 <span class=\"c\"># User-to-Server:\u00a0 Asks the server to send</span></td></tr><tr><th id=\"L100\"><a href=\"#L100\">100</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Echos of the transmitted data.</span></td></tr><tr><th id=\"L101\"><a href=\"#L101\">101</a></th><td></td></tr><tr><th id=\"L102\"><a href=\"#L102\">102</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Server-to User:\u00a0 States that the server is</span></td></tr><tr><th id=\"L103\"><a href=\"#L103\">103</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># sending echos of the transmitted data.</span></td></tr><tr><th id=\"L104\"><a href=\"#L104\">104</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Sent only as a reply to ECHO or NO ECHO.</span></td></tr><tr><th id=\"L105\"><a href=\"#L105\">105</a></th><td></td></tr><tr><th id=\"L106\"><a href=\"#L106\">106</a></th><td>SUPGA <span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\u00a0 <span class=\"c\"># Supress Go Ahead...? \"Modern\" telnet servers</span></td></tr><tr><th id=\"L107\"><a href=\"#L107\">107</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># are supposed to do this.</span></td></tr><tr><th id=\"L108\"><a href=\"#L108\">108</a></th><td></td></tr><tr><th id=\"L109\"><a href=\"#L109\">109</a></th><td>LINEMODE <span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0<span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">34</span><span class=\"p\">)</span>\u00a0 <span class=\"c\"># I don't care that Jon Postel is dead.</span></td></tr><tr><th id=\"L110\"><a href=\"#L110\">110</a></th><td></td></tr><tr><th id=\"L111\"><a href=\"#L111\">111</a></th><td>HIDE\u00a0 <span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">133</span><span class=\"p\">)</span>\u00a0 <span class=\"c\"># The intention is that a server will send</span></td></tr><tr><th id=\"L112\"><a href=\"#L112\">112</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># this signal to a user system which is</span></td></tr><tr><th id=\"L113\"><a href=\"#L113\">113</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># echoing locally (to the user) when the user</span></td></tr><tr><th id=\"L114\"><a href=\"#L114\">114</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># is about to type something secret (e.g. a</span></td></tr><tr><th id=\"L115\"><a href=\"#L115\">115</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># password).\u00a0 In this case, the user system</span></td></tr><tr><th id=\"L116\"><a href=\"#L116\">116</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># is to suppress local echoing or overprint</span></td></tr><tr><th id=\"L117\"><a href=\"#L117\">117</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># the input (or something) until the server</span></td></tr><tr><th id=\"L118\"><a href=\"#L118\">118</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># sends a NOECHO signal.\u00a0 In situations where</span></td></tr><tr><th id=\"L119\"><a href=\"#L119\">119</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># the user system is not echoing locally,</span></td></tr><tr><th id=\"L120\"><a href=\"#L120\">120</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># this signal must not be sent by the server.</span></td></tr><tr><th id=\"L121\"><a href=\"#L121\">121</a></th><td></td></tr><tr><th id=\"L122\"><a href=\"#L122\">122</a></th><td></td></tr><tr><th id=\"L123\"><a href=\"#L123\">123</a></th><td>NOECHO<span class=\"o\">=</span>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">131</span><span class=\"p\">)</span>\u00a0 <span class=\"c\"># User-to-Server:\u00a0 Asks the server not to</span></td></tr><tr><th id=\"L124\"><a href=\"#L124\">124</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># return Echos of the transmitted data.</span></td></tr><tr><th id=\"L125\"><a href=\"#L125\">125</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># </span></td></tr><tr><th id=\"L126\"><a href=\"#L126\">126</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Server-to-User:\u00a0 States that the server is</span></td></tr><tr><th id=\"L127\"><a href=\"#L127\">127</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># not sending echos of the transmitted data.</span></td></tr><tr><th id=\"L128\"><a href=\"#L128\">128</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Sent only as a reply to ECHO or NO ECHO,</span></td></tr><tr><th id=\"L129\"><a href=\"#L129\">129</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># or to end the hide your input.</span></td></tr><tr><th id=\"L130\"><a href=\"#L130\">130</a></th><td></td></tr><tr><th id=\"L131\"><a href=\"#L131\">131</a></th><td></td></tr><tr><th id=\"L132\"><a href=\"#L132\">132</a></th><td></td></tr><tr><th id=\"L133\"><a href=\"#L133\">133</a></th><td>iacBytes <span class=\"o\">=</span>\u00a0<span class=\"p\">{</span></td></tr><tr><th id=\"L134\"><a href=\"#L134\">134</a></th><td>\u00a0 \u00a0 DO<span class=\"p\">:</span>\u00a0 \u00a0<span class=\"s\">'DO'</span><span class=\"p\">,</span></td></tr><tr><th id=\"L135\"><a href=\"#L135\">135</a></th><td>\u00a0 \u00a0 DONT<span class=\"p\">:</span>\u00a0<span class=\"s\">'DONT'</span><span class=\"p\">,</span></td></tr><tr><th id=\"L136\"><a href=\"#L136\">136</a></th><td>\u00a0 \u00a0 WILL<span class=\"p\">:</span>\u00a0<span class=\"s\">'WILL'</span><span class=\"p\">,</span></td></tr><tr><th id=\"L137\"><a href=\"#L137\">137</a></th><td>\u00a0 \u00a0 WONT<span class=\"p\">:</span>\u00a0<span class=\"s\">'WONT'</span><span class=\"p\">,</span></td></tr><tr><th id=\"L138\"><a href=\"#L138\">138</a></th><td>\u00a0 \u00a0 IP<span class=\"p\">:</span>\u00a0 \u00a0<span class=\"s\">'IP'</span></td></tr><tr><th id=\"L139\"><a href=\"#L139\">139</a></th><td>\u00a0 \u00a0 <span class=\"p\">}</span></td></tr><tr><th id=\"L140\"><a href=\"#L140\">140</a></th><td></td></tr><tr><th id=\"L141\"><a href=\"#L141\">141</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">multireplace</span><span class=\"p\">(</span>st<span class=\"p\">,</span>\u00a0dct<span class=\"p\">):</span></td></tr><tr><th id=\"L142\"><a href=\"#L142\">142</a></th><td>\u00a0 \u00a0 <span class=\"k\">for</span>\u00a0k<span class=\"p\">,</span>\u00a0v <span class=\"ow\">in</span>\u00a0dct<span class=\"o\">.</span>items<span class=\"p\">():</span></td></tr><tr><th id=\"L143\"><a href=\"#L143\">143</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 st <span class=\"o\">=</span>\u00a0st<span class=\"o\">.</span>replace<span class=\"p\">(</span>k<span class=\"p\">,</span>\u00a0v<span class=\"p\">)</span></td></tr><tr><th id=\"L144\"><a href=\"#L144\">144</a></th><td>\u00a0 \u00a0 <span class=\"k\">return</span>\u00a0st</td></tr><tr><th id=\"L145\"><a href=\"#L145\">145</a></th><td></td></tr><tr><th id=\"L146\"><a href=\"#L146\">146</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">Telnet</span><span class=\"p\">(</span>protocol<span class=\"o\">.</span>Protocol<span class=\"p\">):</span></td></tr><tr><th id=\"L147\"><a href=\"#L147\">147</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"I am a Protocol for handling Telnet connections. I have two</span></td></tr><tr><th id=\"L148\"><a href=\"#L148\">148</a></th><td><span class=\"sd\">\u00a0 \u00a0 sets of special methods, telnet_* and iac_*.</span></td></tr><tr><th id=\"L149\"><a href=\"#L149\">149</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L150\"><a href=\"#L150\">150</a></th><td><span class=\"sd\">\u00a0 \u00a0 telnet_* methods get called on every line sent to me. The method</span></td></tr><tr><th id=\"L151\"><a href=\"#L151\">151</a></th><td><span class=\"sd\">\u00a0 \u00a0 to call is decided by the current mode. The initial mode is 'User';</span></td></tr><tr><th id=\"L152\"><a href=\"#L152\">152</a></th><td><span class=\"sd\">\u00a0 \u00a0 this means that telnet_User is the first telnet_* method to be called.</span></td></tr><tr><th id=\"L153\"><a href=\"#L153\">153</a></th><td><span class=\"sd\">\u00a0 \u00a0 All telnet_* methods should return a string which specifies the mode</span></td></tr><tr><th id=\"L154\"><a href=\"#L154\">154</a></th><td><span class=\"sd\">\u00a0 \u00a0 to go into next; thus dictating which telnet_* method to call next.</span></td></tr><tr><th id=\"L155\"><a href=\"#L155\">155</a></th><td><span class=\"sd\">\u00a0 \u00a0 For example, the default telnet_User method returns 'Password' to go</span></td></tr><tr><th id=\"L156\"><a href=\"#L156\">156</a></th><td><span class=\"sd\">\u00a0 \u00a0 into Password mode, and the default telnet_Password method returns</span></td></tr><tr><th id=\"L157\"><a href=\"#L157\">157</a></th><td><span class=\"sd\">\u00a0 \u00a0 'Command' to go into Command mode.</span></td></tr><tr><th id=\"L158\"><a href=\"#L158\">158</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L159\"><a href=\"#L159\">159</a></th><td><span class=\"sd\">\u00a0 \u00a0 The iac_* methods are less-used; they are called when an IAC telnet</span></td></tr><tr><th id=\"L160\"><a href=\"#L160\">160</a></th><td><span class=\"sd\">\u00a0 \u00a0 byte is received. You can define iac_DO, iac_DONT, iac_WILL, iac_WONT,</span></td></tr><tr><th id=\"L161\"><a href=\"#L161\">161</a></th><td><span class=\"sd\">\u00a0 \u00a0 and iac_IP methods to do what you want when one of these bytes is</span></td></tr><tr><th id=\"L162\"><a href=\"#L162\">162</a></th><td><span class=\"sd\">\u00a0 \u00a0 received.\"\"\"</span></td></tr><tr><th id=\"L163\"><a href=\"#L163\">163</a></th><td></td></tr><tr><th id=\"L164\"><a href=\"#L164\">164</a></th><td></td></tr><tr><th id=\"L165\"><a href=\"#L165\">165</a></th><td>\u00a0 \u00a0 gotIAC <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L166\"><a href=\"#L166\">166</a></th><td>\u00a0 \u00a0 iacByte <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L167\"><a href=\"#L167\">167</a></th><td>\u00a0 \u00a0 lastLine <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L168\"><a href=\"#L168\">168</a></th><td>\u00a0 \u00a0 <span class=\"nb\">buffer</span>\u00a0<span class=\"o\">=</span>\u00a0<span class=\"s\">''</span></td></tr><tr><th id=\"L169\"><a href=\"#L169\">169</a></th><td>\u00a0 \u00a0 echo <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L170\"><a href=\"#L170\">170</a></th><td>\u00a0 \u00a0 delimiters <span class=\"o\">=</span>\u00a0<span class=\"p\">[</span><span class=\"s\">'</span><span class=\"se\">\\r\\n</span><span class=\"s\">'</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'</span><span class=\"se\">\\r\\000</span><span class=\"s\">'</span><span class=\"p\">]</span></td></tr><tr><th id=\"L171\"><a href=\"#L171\">171</a></th><td>\u00a0 \u00a0 mode <span class=\"o\">=</span>\u00a0<span class=\"s\">\"User\"</span></td></tr><tr><th id=\"L172\"><a href=\"#L172\">172</a></th><td></td></tr><tr><th id=\"L173\"><a href=\"#L173\">173</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">write</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0data<span class=\"p\">):</span></td></tr><tr><th id=\"L174\"><a href=\"#L174\">174</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Send the given data over my transport.\"\"\"</span></td></tr><tr><th id=\"L175\"><a href=\"#L175\">175</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>transport<span class=\"o\">.</span>write<span class=\"p\">(</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L176\"><a href=\"#L176\">176</a></th><td></td></tr><tr><th id=\"L177\"><a href=\"#L177\">177</a></th><td></td></tr><tr><th id=\"L178\"><a href=\"#L178\">178</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectionMade</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L179\"><a href=\"#L179\">179</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"I will write a welcomeMessage and loginPrompt to the client.\"\"\"</span></td></tr><tr><th id=\"L180\"><a href=\"#L180\">180</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>welcomeMessage<span class=\"p\">()</span>\u00a0<span class=\"o\">+</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>loginPrompt<span class=\"p\">())</span></td></tr><tr><th id=\"L181\"><a href=\"#L181\">181</a></th><td></td></tr><tr><th id=\"L182\"><a href=\"#L182\">182</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">welcomeMessage</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L183\"><a href=\"#L183\">183</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Override me to return a string which will be sent to the client</span></td></tr><tr><th id=\"L184\"><a href=\"#L184\">184</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 before login.\"\"\"</span></td></tr><tr><th id=\"L185\"><a href=\"#L185\">185</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 x <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>factory<span class=\"o\">.</span>__class__</td></tr><tr><th id=\"L186\"><a href=\"#L186\">186</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"p\">(</span><span class=\"s\">\"</span><span class=\"se\">\\r\\n</span><span class=\"s\">\"</span>\u00a0<span class=\"o\">+</span>\u00a0x<span class=\"o\">.</span>__module__ <span class=\"o\">+</span>\u00a0<span class=\"s\">'.'</span>\u00a0<span class=\"o\">+</span>\u00a0x<span class=\"o\">.</span>__name__ <span class=\"o\">+</span></td></tr><tr><th id=\"L187\"><a href=\"#L187\">187</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">'</span><span class=\"se\">\\r\\n</span><span class=\"s\">Twisted </span><span class=\"si\">%s</span><span class=\"se\">\\r\\n</span><span class=\"s\">'</span>\u00a0<span class=\"o\">%</span>\u00a0copyright<span class=\"o\">.</span>version</td></tr><tr><th id=\"L188\"><a href=\"#L188\">188</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"p\">)</span></td></tr><tr><th id=\"L189\"><a href=\"#L189\">189</a></th><td></td></tr><tr><th id=\"L190\"><a href=\"#L190\">190</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">loginPrompt</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L191\"><a href=\"#L191\">191</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Override me to return a 'login:'-type prompt.\"\"\"</span></td></tr><tr><th id=\"L192\"><a href=\"#L192\">192</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"s\">\"username: \"</span></td></tr><tr><th id=\"L193\"><a href=\"#L193\">193</a></th><td></td></tr><tr><th id=\"L194\"><a href=\"#L194\">194</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">iacSBchunk</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0chunk<span class=\"p\">):</span></td></tr><tr><th id=\"L195\"><a href=\"#L195\">195</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L196\"><a href=\"#L196\">196</a></th><td></td></tr><tr><th id=\"L197\"><a href=\"#L197\">197</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">iac_DO</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0feature<span class=\"p\">):</span></td></tr><tr><th id=\"L198\"><a href=\"#L198\">198</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L199\"><a href=\"#L199\">199</a></th><td></td></tr><tr><th id=\"L200\"><a href=\"#L200\">200</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">iac_DONT</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0feature<span class=\"p\">):</span></td></tr><tr><th id=\"L201\"><a href=\"#L201\">201</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L202\"><a href=\"#L202\">202</a></th><td></td></tr><tr><th id=\"L203\"><a href=\"#L203\">203</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">iac_WILL</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0feature<span class=\"p\">):</span></td></tr><tr><th id=\"L204\"><a href=\"#L204\">204</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L205\"><a href=\"#L205\">205</a></th><td></td></tr><tr><th id=\"L206\"><a href=\"#L206\">206</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">iac_WONT</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0feature<span class=\"p\">):</span></td></tr><tr><th id=\"L207\"><a href=\"#L207\">207</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L208\"><a href=\"#L208\">208</a></th><td></td></tr><tr><th id=\"L209\"><a href=\"#L209\">209</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">iac_IP</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0feature<span class=\"p\">):</span></td></tr><tr><th id=\"L210\"><a href=\"#L210\">210</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L211\"><a href=\"#L211\">211</a></th><td></td></tr><tr><th id=\"L212\"><a href=\"#L212\">212</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">processLine</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0line<span class=\"p\">):</span></td></tr><tr><th id=\"L213\"><a href=\"#L213\">213</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"I call a method that looks like 'telnet_*' where '*' is filled</span></td></tr><tr><th id=\"L214\"><a href=\"#L214\">214</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 in by the current mode. telnet_* methods should return a string which</span></td></tr><tr><th id=\"L215\"><a href=\"#L215\">215</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 will become the new mode.\u00a0 If None is returned, the mode will not change.</span></td></tr><tr><th id=\"L216\"><a href=\"#L216\">216</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L217\"><a href=\"#L217\">217</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 mode <span class=\"o\">=</span>\u00a0<span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"telnet_\"</span><span class=\"o\">+</span><span class=\"bp\">self</span><span class=\"o\">.</span>mode<span class=\"p\">)(</span>line<span class=\"p\">)</span></td></tr><tr><th id=\"L218\"><a href=\"#L218\">218</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0mode <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L219\"><a href=\"#L219\">219</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>mode <span class=\"o\">=</span>\u00a0mode</td></tr><tr><th id=\"L220\"><a href=\"#L220\">220</a></th><td></td></tr><tr><th id=\"L221\"><a href=\"#L221\">221</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">telnet_User</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0user<span class=\"p\">):</span></td></tr><tr><th id=\"L222\"><a href=\"#L222\">222</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"I take a username, set it to the 'self.username' attribute,</span></td></tr><tr><th id=\"L223\"><a href=\"#L223\">223</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 print out a password prompt, and switch to 'Password' mode. If</span></td></tr><tr><th id=\"L224\"><a href=\"#L224\">224</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 you want to do something else when the username is received (ie,</span></td></tr><tr><th id=\"L225\"><a href=\"#L225\">225</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 create a new user if the user doesn't exist), override me.\"\"\"</span></td></tr><tr><th id=\"L226\"><a href=\"#L226\">226</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>username <span class=\"o\">=</span>\u00a0user</td></tr><tr><th id=\"L227\"><a href=\"#L227\">227</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>write<span class=\"p\">(</span>IAC<span class=\"o\">+</span>WILL<span class=\"o\">+</span>ECHO<span class=\"o\">+</span><span class=\"s\">\"password: \"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L228\"><a href=\"#L228\">228</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"s\">\"Password\"</span></td></tr><tr><th id=\"L229\"><a href=\"#L229\">229</a></th><td></td></tr><tr><th id=\"L230\"><a href=\"#L230\">230</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">telnet_Password</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0paswd<span class=\"p\">):</span></td></tr><tr><th id=\"L231\"><a href=\"#L231\">231</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"I accept a password as an argument, and check it with the</span></td></tr><tr><th id=\"L232\"><a href=\"#L232\">232</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 checkUserAndPass method. If the login is successful, I call</span></td></tr><tr><th id=\"L233\"><a href=\"#L233\">233</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 loggedIn().\"\"\"</span></td></tr><tr><th id=\"L234\"><a href=\"#L234\">234</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>write<span class=\"p\">(</span>IAC<span class=\"o\">+</span>WONT<span class=\"o\">+</span>ECHO<span class=\"o\">+</span><span class=\"s\">\"*****</span><span class=\"se\">\\r\\n</span><span class=\"s\">\"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L235\"><a href=\"#L235\">235</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L236\"><a href=\"#L236\">236</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 checked <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>checkUserAndPass<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>username<span class=\"p\">,</span>\u00a0paswd<span class=\"p\">)</span></td></tr><tr><th id=\"L237\"><a href=\"#L237\">237</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span><span class=\"p\">:</span></td></tr><tr><th id=\"L238\"><a href=\"#L238\">238</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"s\">\"Done\"</span></td></tr><tr><th id=\"L239\"><a href=\"#L239\">239</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0checked<span class=\"p\">:</span></td></tr><tr><th id=\"L240\"><a href=\"#L240\">240</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"s\">\"Done\"</span></td></tr><tr><th id=\"L241\"><a href=\"#L241\">241</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>loggedIn<span class=\"p\">()</span></td></tr><tr><th id=\"L242\"><a href=\"#L242\">242</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"s\">\"Command\"</span></td></tr><tr><th id=\"L243\"><a href=\"#L243\">243</a></th><td></td></tr><tr><th id=\"L244\"><a href=\"#L244\">244</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">telnet_Command</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0cmd<span class=\"p\">):</span></td></tr><tr><th id=\"L245\"><a href=\"#L245\">245</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"The default 'command processing' mode. You probably want to</span></td></tr><tr><th id=\"L246\"><a href=\"#L246\">246</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 override me.\"\"\"</span></td></tr><tr><th id=\"L247\"><a href=\"#L247\">247</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"s\">\"Command\"</span></td></tr><tr><th id=\"L248\"><a href=\"#L248\">248</a></th><td></td></tr><tr><th id=\"L249\"><a href=\"#L249\">249</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">processChunk</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0chunk<span class=\"p\">):</span></td></tr><tr><th id=\"L250\"><a href=\"#L250\">250</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"I take a chunk of data and delegate out to telnet_* methods</span></td></tr><tr><th id=\"L251\"><a href=\"#L251\">251</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 by way of processLine. If the current mode is 'Done', I'll close</span></td></tr><tr><th id=\"L252\"><a href=\"#L252\">252</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 the connection. \"\"\"</span></td></tr><tr><th id=\"L253\"><a href=\"#L253\">253</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>buffer <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>buffer <span class=\"o\">+</span>\u00a0chunk</td></tr><tr><th id=\"L254\"><a href=\"#L254\">254</a></th><td></td></tr><tr><th id=\"L255\"><a href=\"#L255\">255</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\">#yech.</span></td></tr><tr><th id=\"L256\"><a href=\"#L256\">256</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0delim <span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>delimiters<span class=\"p\">:</span></td></tr><tr><th id=\"L257\"><a href=\"#L257\">257</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 idx <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>buffer<span class=\"o\">.</span>find<span class=\"p\">(</span>delim<span class=\"p\">)</span></td></tr><tr><th id=\"L258\"><a href=\"#L258\">258</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0idx <span class=\"o\">!=</span>\u00a0<span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">:</span></td></tr><tr><th id=\"L259\"><a href=\"#L259\">259</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">break</span></td></tr><tr><th id=\"L260\"><a href=\"#L260\">260</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 </td></tr><tr><th id=\"L261\"><a href=\"#L261\">261</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">while</span>\u00a0idx <span class=\"o\">!=</span>\u00a0<span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">:</span></td></tr><tr><th id=\"L262\"><a href=\"#L262\">262</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 buf<span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>buffer <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>buffer<span class=\"p\">[:</span>idx<span class=\"p\">],</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>buffer<span class=\"p\">[</span>idx<span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">:]</span></td></tr><tr><th id=\"L263\"><a href=\"#L263\">263</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>processLine<span class=\"p\">(</span>buf<span class=\"p\">)</span></td></tr><tr><th id=\"L264\"><a href=\"#L264\">264</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>mode <span class=\"o\">==</span>\u00a0<span class=\"s\">'Done'</span><span class=\"p\">:</span></td></tr><tr><th id=\"L265\"><a href=\"#L265\">265</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>transport<span class=\"o\">.</span>loseConnection<span class=\"p\">()</span></td></tr><tr><th id=\"L266\"><a href=\"#L266\">266</a></th><td></td></tr><tr><th id=\"L267\"><a href=\"#L267\">267</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0delim <span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>delimiters<span class=\"p\">:</span></td></tr><tr><th id=\"L268\"><a href=\"#L268\">268</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 idx <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>buffer<span class=\"o\">.</span>find<span class=\"p\">(</span>delim<span class=\"p\">)</span></td></tr><tr><th id=\"L269\"><a href=\"#L269\">269</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0idx <span class=\"o\">!=</span>\u00a0<span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">:</span></td></tr><tr><th id=\"L270\"><a href=\"#L270\">270</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">break</span></td></tr><tr><th id=\"L271\"><a href=\"#L271\">271</a></th><td></td></tr><tr><th id=\"L272\"><a href=\"#L272\">272</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">dataReceived</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0data<span class=\"p\">):</span></td></tr><tr><th id=\"L273\"><a href=\"#L273\">273</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 chunk <span class=\"o\">=</span>\u00a0StringIO<span class=\"p\">()</span></td></tr><tr><th id=\"L274\"><a href=\"#L274\">274</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># silly little IAC state-machine</span></td></tr><tr><th id=\"L275\"><a href=\"#L275\">275</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0char <span class=\"ow\">in</span>\u00a0data<span class=\"p\">:</span></td></tr><tr><th id=\"L276\"><a href=\"#L276\">276</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>gotIAC<span class=\"p\">:</span></td></tr><tr><th id=\"L277\"><a href=\"#L277\">277</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># working on an IAC request state</span></td></tr><tr><th id=\"L278\"><a href=\"#L278\">278</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>iacByte<span class=\"p\">:</span></td></tr><tr><th id=\"L279\"><a href=\"#L279\">279</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># we're in SB mode, getting a chunk</span></td></tr><tr><th id=\"L280\"><a href=\"#L280\">280</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>iacByte <span class=\"o\">==</span>\u00a0SB<span class=\"p\">:</span></td></tr><tr><th id=\"L281\"><a href=\"#L281\">281</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0char <span class=\"o\">==</span>\u00a0SE<span class=\"p\">:</span></td></tr><tr><th id=\"L282\"><a href=\"#L282\">282</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>iacSBchunk<span class=\"p\">(</span>chunk<span class=\"o\">.</span>getvalue<span class=\"p\">())</span></td></tr><tr><th id=\"L283\"><a href=\"#L283\">283</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 chunk <span class=\"o\">=</span>\u00a0StringIO<span class=\"p\">()</span></td></tr><tr><th id=\"L284\"><a href=\"#L284\">284</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>iacByte</td></tr><tr><th id=\"L285\"><a href=\"#L285\">285</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>gotIAC</td></tr><tr><th id=\"L286\"><a href=\"#L286\">286</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L287\"><a href=\"#L287\">287</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 chunk<span class=\"o\">.</span>write<span class=\"p\">(</span>char<span class=\"p\">)</span></td></tr><tr><th id=\"L288\"><a href=\"#L288\">288</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L289\"><a href=\"#L289\">289</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># got all I need to know state</span></td></tr><tr><th id=\"L290\"><a href=\"#L290\">290</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">try</span><span class=\"p\">:</span></td></tr><tr><th id=\"L291\"><a href=\"#L291\">291</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"s\">'iac_</span><span class=\"si\">%s</span><span class=\"s\">'</span>\u00a0<span class=\"o\">%</span>\u00a0iacBytes<span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span>iacByte<span class=\"p\">])(</span>char<span class=\"p\">)</span></td></tr><tr><th id=\"L292\"><a href=\"#L292\">292</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">except</span>\u00a0<span class=\"ne\">KeyError</span><span class=\"p\">:</span></td></tr><tr><th id=\"L293\"><a href=\"#L293\">293</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L294\"><a href=\"#L294\">294</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>iacByte</td></tr><tr><th id=\"L295\"><a href=\"#L295\">295</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>gotIAC</td></tr><tr><th id=\"L296\"><a href=\"#L296\">296</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L297\"><a href=\"#L297\">297</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># got IAC, this is my W/W/D/D (or perhaps sb)</span></td></tr><tr><th id=\"L298\"><a href=\"#L298\">298</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>iacByte <span class=\"o\">=</span>\u00a0char</td></tr><tr><th id=\"L299\"><a href=\"#L299\">299</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0char <span class=\"o\">==</span>\u00a0IAC<span class=\"p\">:</span></td></tr><tr><th id=\"L300\"><a href=\"#L300\">300</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Process what I've got so far before going into</span></td></tr><tr><th id=\"L301\"><a href=\"#L301\">301</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># the IAC state; don't want to process characters</span></td></tr><tr><th id=\"L302\"><a href=\"#L302\">302</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># in an inconsistent state with what they were</span></td></tr><tr><th id=\"L303\"><a href=\"#L303\">303</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># received in.</span></td></tr><tr><th id=\"L304\"><a href=\"#L304\">304</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 c <span class=\"o\">=</span>\u00a0chunk<span class=\"o\">.</span>getvalue<span class=\"p\">()</span></td></tr><tr><th id=\"L305\"><a href=\"#L305\">305</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0c<span class=\"p\">:</span></td></tr><tr><th id=\"L306\"><a href=\"#L306\">306</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 why <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>processChunk<span class=\"p\">(</span>c<span class=\"p\">)</span></td></tr><tr><th id=\"L307\"><a href=\"#L307\">307</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0why<span class=\"p\">:</span></td></tr><tr><th id=\"L308\"><a href=\"#L308\">308</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0why</td></tr><tr><th id=\"L309\"><a href=\"#L309\">309</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 chunk <span class=\"o\">=</span>\u00a0StringIO<span class=\"p\">()</span></td></tr><tr><th id=\"L310\"><a href=\"#L310\">310</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>gotIAC <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L311\"><a href=\"#L311\">311</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L312\"><a href=\"#L312\">312</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 chunk<span class=\"o\">.</span>write<span class=\"p\">(</span>char<span class=\"p\">)</span></td></tr><tr><th id=\"L313\"><a href=\"#L313\">313</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># chunks are of a relatively indeterminate size.</span></td></tr><tr><th id=\"L314\"><a href=\"#L314\">314</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 c <span class=\"o\">=</span>\u00a0chunk<span class=\"o\">.</span>getvalue<span class=\"p\">()</span></td></tr><tr><th id=\"L315\"><a href=\"#L315\">315</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0c<span class=\"p\">:</span></td></tr><tr><th id=\"L316\"><a href=\"#L316\">316</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 why <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>processChunk<span class=\"p\">(</span>c<span class=\"p\">)</span></td></tr><tr><th id=\"L317\"><a href=\"#L317\">317</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0why<span class=\"p\">:</span></td></tr><tr><th id=\"L318\"><a href=\"#L318\">318</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0why</td></tr><tr><th id=\"L319\"><a href=\"#L319\">319</a></th><td></td></tr><tr><th id=\"L320\"><a href=\"#L320\">320</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">loggedIn</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L321\"><a href=\"#L321\">321</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Called after the user succesfully logged in.</span></td></tr><tr><th id=\"L322\"><a href=\"#L322\">322</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 </span></td></tr><tr><th id=\"L323\"><a href=\"#L323\">323</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Override in subclasses.</span></td></tr><tr><th id=\"L324\"><a href=\"#L324\">324</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L325\"><a href=\"#L325\">325</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">pass</span></td></tr></tbody></table>\n\n      </div>\n      <div id=\"anydiff\">\n        <form action=\"/LUCICodeRepository/nomaticIM/diff\" method=\"get\">\n          <div class=\"buttons\">\n            <input type=\"hidden\" name=\"new_path\" value=\"/nomatic/tags/NomaticIM-0.0.4/buddy_bots/src/twisted/protocols/telnet.py\" />\n            <input type=\"hidden\" name=\"old_path\" value=\"/nomatic/tags/NomaticIM-0.0.4/buddy_bots/src/twisted/protocols/telnet.py\" />\n            <input type=\"hidden\" name=\"new_rev\" />\n            <input type=\"hidden\" name=\"old_rev\" />\n            <input type=\"submit\" value=\"View changes...\" title=\"Select paths and revs for Diff\" />\n          </div>\n        </form>\n      </div>\n      <div id=\"help\"><strong>Note:</strong> See <a href=\"/LUCICodeRepository/nomaticIM/wiki/TracBrowser\">TracBrowser</a>\n        for help on using the repository browser.</div>\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"first\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.4/buddy_bots/src/twisted/protocols/telnet.py?format=txt\">Plain Text</a>\n        </li><li class=\"last\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.4/buddy_bots/src/twisted/protocols/telnet.py\">Original Format</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/LUCICodeRepository/nomaticIM/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/LUCICodeRepository/nomaticIM/about\"><strong>Trac 1.0.1</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">All content copyright 2007-2008 by LUCI <br /><a href=\"http://luci.ics.uci.edu/\">http://luci.ics.uci.edu/</a></p>\n    </div>\n\t\t<div id=\"sitefooter\">\n\t\t\t<script src=\"http://www.google-analytics.com/urchin.js\" type=\"text/javascript\">\n\t\t\t</script>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t\t_uacct = \"UA-338915-2\";\n\t\t\t\turchinTracker();\n\t\t\t</script>\n\t\t</div>\n\t</body>\n</html>", "id": 44493.0}