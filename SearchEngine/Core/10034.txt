{"text": "Project Description Summary of System Features Process Definition Platform Availability Example Activity Network Project Personnel Papers Contact Information Online Interactive Teamware Demo Teamware Activity Guidance Support Online API Reference Manual Teamware Architecture Diagrams Project Description The Teamware process support system is designed to improve team coordination and managerial control of software development teams Teamware allows users to explicitly define their software development process and provides extensive execution support In addition Teamware is designed for non technical as well as technical users and is appropriate for use by managers programmers domain experts and customer representatives It also provides support for company site or project specific customization During process execution Teamware provides a summary of assignments for each team member As each assignment is completed Teamware informs appropriate managers and team members and updates the shared project view It also coordinates handoff of artifacts tool interaction and resource assignments Further automation can be provided depending on the user s environment This automation can include for example automatic invocation of tools automated forwarding of documents to reviewers or interaction with metrics gathering tools Summary of System Features Support for Non Technical Personnel The language and system are designed to support non technical users as well as technical users Non technical managers domain experts accounting marketing and support staff are able to both read and write programs using the Teamware language Company Site or Project Customizable Companies or projects can customize Teamware to meet their specific needs New activity artifact and resource types can be defined Facilitates Integration with External Tools Teamware s object model is designed to facilitate integration with any external tools providing an API Teamware s agenda tool and default mail system for example can be replaced with the time management and mail systems preferred by a particular site In addition meeting room schedulers project management tools and other site specific tools can be integrated in using the object model Object Oriented Teamware s activity artifact and resource definitions are object oriented Users can create new definitions which inherit the properties of existing definitions Multiple Viewing Formalisms Supportable While Teamware provides a default view of the process similar to PERT charts it also provides an API allowing access for viewing and editing using other viewers Future viewers are planned including IDEF In addition users can define their own viewers Dynamic Response to Project Changes Teamware provides flexibility as the project changes Teamware activities activity networks and activity artifact and resource types can be changed dynamically as the process executes Process Definition in Teamware Teamware allows definition of the activities artifacts and resources associated with the software development process These items can be defined hierarchically thus an activity can be further subdivided into subactivities while a software development team resource can be further defined to include team member resources or subteam resources In addition Teamware activity networks define the interelationships between activities artifacts and resources Networks include definition of control flow data flow and resource assignments Teamware s default activity network viewer provides a PERT like view of the activities however additional viewers can be defined using Teamware s API An IDEF viewer for example is planned Teamware provides a high degree of extensibility and flexibility in process definitions Teamware provides object oriented hierarchies of activity artifact and resource categories Users can customize or extend the existing categories to meet their specific needs Thus if a company uses a different e mail system than mh Teamware s default system a new e mail system can be easily integrated Similarly if a project needs a new resource type not found in Teamware the existing resource hierarchy can be extended Platform The initial implementation of Teamware has been developed running Sun OS 4 2 or higher It utilizes Sun Ada gcc and Python API s are provided for both Ada and Python Default viewers provided are built on top of the ARPA sponsored Chiron User Interface Management System Availability Teamware is public domain software with full source distribution Teamware 1 1 is written completely in Java tm and is set for release on the web sometime in the second quarter 1996 Object handlers are currently supported in Python and Java support for Ada95 and Tcl are currently underway If you are interested in becoming a beta tester please contact us Example Teamware Activity Network using default viewer Current Project Personnel Patrick S Young Project Manager Gregory Alan Bolcer Lead Programmer Jeffrey J Blevins Deborah L Dubrow Peter Kammer Jason E Robbins Harry E Yessayan Richard N Taylor Supervising Faculty Papers Customizable Process Specification and Enactment for Technical and Non Technical Users Disseration by Patrick Scott Chun Young 94 kB The Teamware Language Reference Manual Version 1 by Patrick Scott Chun Young March 25 1994 249kB The Teamware Foundation Reference Manual Version 1 by Patrick Scott Chun Young March 25 1994 148kB Human Executed Operations in the Teamware Process Programming System by Patrick S Young and Richard N Taylor in Proceedings of the Ninth Internation Software Process Workshop 46kB Process Model Customization for Technical and Non Technical Users by Patrick S Young and Richard N Taylor 1 2kB Team Oriented Process Programming by Patrick S Young and Richard N Taylor Technical Report UCI 91 68 Contact Information Arcadia Teamware Department of Information and Computer Science University of California Irvine Irvine CA 92717 3425 arcadia teamware ics uci edu Arcadia Project at UCI Last modified Fri Dec 9 13 4 25 1994", "_id": "http://www.ics.uci.edu/~arcadia/Teamware/historical.html", "title": "teamware - process support system", "html": "<HTML>\n<HEAD>\n<TITLE>Teamware - Process Support System</TITLE>\n</HEAD><BODY>\n<IMG SRC=\"Teamware_Logo.gif\">\n\n\n<UL>\n<LI> <A HREF=\"#Description\">Project Description</A>\n<LI> <A HREF=\"#Features\">Summary of System Features</A>\n<LI> <A HREF=\"#Definition\">Process Definition</A>\n<LI> <A HREF=\"#Platform\">Platform</A>\n<LI> <A HREF=\"#Availability\">Availability</A>\n<LI> <A HREF=\"#Example\">Example Activity Network</A>\n<LI> <A HREF=\"#Personnel\">Project Personnel</A>\n<LI> <A HREF=\"#Papers\">Papers</A>\n<LI> <A HREF=\"#Contact\">Contact Information</A>\n<LI> <A HREF=\"http://www.ics.uci.edu/Arcadia/Teamware/demo/idemo.html\">Online\nInteractive Teamware Demo</A>\n<LI> <A HREF=\"http://www.ics.uci.edu/Arcadia/Teamware/tags/tags.html\">\nTeamware Activity Guidance Support</A>\n<LI> <A HREF=\"http://www.ics.uci.edu/Arcadia/Teamware/docs/packages.html\">\nOnline API Reference Manual</A>\n<LI> <A HREF=\"http://www.ics.uci.edu/Arcadia/Teamware/arch/arch.html\">\nTeamware Architecture Diagrams</A>\n</UL>\n\n<HR>\n<A NAME = \"Description\"><H2>Project Description</H2>\n\n<P>\nThe Teamware process support system is designed to improve team coordination \nand managerial control of software development teams. Teamware allows users \nto explicitly define their software development process and provides \nextensive execution support. In addition, Teamware is designed for \nnon-technical as well as technical users, and is appropriate for use by \nmanagers, programmers, domain experts, and customer representatives. \nIt also provides support for company-, site-, or project-specific \ncustomization.\n</P>\n\n<P>\nDuring process execution, Teamware provides a summary of assignments for \neach team member. As each assignment is completed, Teamware informs \nappropriate managers and team members, and updates the shared project view. \nIt also coordinates handoff of artifacts, tool interaction, and resource \nassignments. Further automation can be provided depending on the user's \nenvironment. This automation can include, for example, automatic invocation \nof tools, automated forwarding of documents to reviewers, or interaction \nwith metrics gathering tools.\n</P>\n\n\n<A NAME = \"Features\"><H2>\nSummary of System Features\n</H2>\n<ul>\n<li><b>Support for Non-Technical Personnel</b> - The language and system are \ndesigned to support non-technical users as well as technical users. \nNon-technical managers, domain experts, accounting, marketing, and support \nstaff are able to both read and write programs using the Teamware language.\n\n<li><b>Company, Site, or Project Customizable</b> - Companies or projects \ncan customize Teamware to meet their specific needs. New activity, artifact, \nand resource types can be defined.\n\n<li><b>Facilitates Integration with External Tools</b> - Teamware's object \nmodel is designed to facilitate integration with any external tools providing \nan API. Teamware's agenda tool and default mail system, for example, can be \nreplaced with the time-management and mail systems preferred by a particular \nsite. In addition, meeting room schedulers, project management tools, and other \nsite-specific tools can be integrated in using the object model.\n\n<li><b>Object-Oriented</b> - Teamware's activity, artifact, and resource \ndefinitions are object-oriented. Users can create new definitions which \ninherit the properties of existing definitions.\n\n<li><b>Multiple-Viewing Formalisms Supportable</b> - While Teamware provides \na default view of the process similar to PERT charts, it also provides an API \nallowing access for viewing and editing using other viewers. Future viewers are \nplanned including IDEF. In addition, users can define their own viewers.\n\n<li><b>Dynamic Response to Project Changes</b> - Teamware provides flexibility \nas the project changes. Teamware activities, activity networks, and activity, \nartifact, and resource types can be changed dynamically as the process \nexecutes.\n</ul>\n\n<A NAME = \"Definition\"><H2>\nProcess Definition in Teamware\n</H2>\n\n<p>\nTeamware allows definition of the activities, artifacts, and resources \nassociated with the software development process. These items can be defined \nhierarchically, thus an activity can be further subdivided into subactivities, \nwhile a software development team resource can be further defined to include \nteam member resources or subteam resources. In addition, Teamware activity \nnetworks define the interelationships between activities, artifacts, and \nresources. Networks include definition of control flow, data flow, and \nresource assignments. Teamware's default activity network viewer provides \na PERT-like view of the activities, however additional viewers can be defined \nusing Teamware's API. An IDEF0 viewer, for example, is planned.\n</p>\n\n<p>\nTeamware provides a high degree of extensibility and flexibility in process \ndefinitions. Teamware provides object-oriented hierarchies of activity, \nartifact, and resource categories. Users can customize or extend the existing \ncategories to meet their specific needs. Thus, if a company uses a different \ne-mail system than mh (Teamware's default system), a new e-mail system can \nbe easily integrated. Similarly, if a project needs a new resource type \nnot found in Teamware, the existing resource hierarchy can be extended.\n</p>\n\n<h2><A NAME = \"Platform\">\nPlatform\n</h2>\n\n<p>\nThe initial implementation of Teamware has been developed running Sun OS 4.2 \nor higher. It utilizes Sun Ada, gcc, and \n<A HREF=\"http://www.python.org/\">Python</A>. \nAPI's are provided for both \nAda and Python. Default viewers provided are built on top of the ARPA-sponsored \n<A HREF=\"http://www.ics.uci.edu/Arcadia/Chiron/chiron.html\">Chiron User Interface Management System</A>.\n</p>\n\n<h2><A NAME = \"Availability\"> \nAvailability\n</h2>\n\n<p>\nTeamware is public domain software with full source distribution.\nTeamware-1.1 is written completely in \n<A HREF=\"http://java.sun.com/\">Java</A>(tm) and is set for release\non the web sometime in the second quarter, 1996.\nObject handlers are currently supported in Python and Java; support\nfor Ada95 and Tcl are currently underway. \n\nIf you are interested in becoming a beta-tester, \n<A HREF=\"mailto:teamware-local@ics.uci.edu\">please contact us</A>. \n</p>\n\n<HR>\n<h2> <A NAME = \"Example\">\nExample Teamware Activity Network using default viewer.\n</h2>\n<IMG SRC=\"network.gif\">\n<HR>\n<h2><A NAME = \"Personnel\">\nCurrent Project Personnel\n</h2>\n<ul>\n<li><A HREF=\"http:/dir/visitor/pyoung\">Patrick S. Young</A> (Project Manager)\n<li><A HREF=\"http:/dir/staff/gbolcer\">Gregory Alan Bolcer</A> (Lead Programmer)\n<li><A HREF=\"http:/dir/grad/Software/jblevins\">Jeffrey J. Blevins</A>\n<li><A HREF=\"http:/dir/grad/Software/ddubrow\">Deborah L. Dubrow</A>\n<li><A HREF=\"http:/dir/grad/Software/pkammer\">Peter Kammer</A>\n<li><A HREF=\"http:/dir/grad/Software/jrobbins\">Jason E. Robbins</A>\n<li><A HREF=\"http:/dir/grad/Software/yessayan\">Harry E. Yessayan</A>\n<li><A HREF=\"http:/dir/faculty/Software/taylor\">Richard N. Taylor</A> (Supervising Faculty)\n</ul>\n\n<HR>\n<h2><A NAME = \"Papers\">\nPapers\n</h2>\n<DL>\n<DT> <A HREF=\"http://www.ics.uci.edu/~pyoung/dissert-1s.ps\">\nCustomizable Process Specification and Enactment for Technical\nand Non-Technical Users (Disseration) </A>\n<DD> by <A HREF = \"http:/dir/visitor/pyoung\">Patrick Scott Chun Young</A>.\n[940kB]\n\n<DT> <A HREF=\"http://www.ics.uci.edu/~pyoung/lrm-1s.ps\">\nThe Teamware Language Reference Manual Version 1.0</A>\n<DD> by <A HREF = \"http:/dir/visitor/pyoung\">Patrick Scott Chun Young</A>,\nMarch 25, 1994. [249kB]\n\n<DT> <A HREF=\"http://www.ics.uci.edu/~pyoung/found-1s.ps\">\nThe Teamware Foundation Reference Manual Version 1.0</A>\n<DD> by <A HREF = \"http:/dir/visitor/pyoung\">Patrick Scott Chun Young</A>,\nMarch 25, 1994. [148kB]\n\n<DT> <A HREF=\"http://www.ics.uci.edu/~pyoung/ispw9.ps\">\nHuman-Executed Operations in the Teamware Process Programming System</A>,\n<DD> by <A HREF = \"http:/dir/visitor/pyoung\">Patrick S. Young</A> and\n<A HREF=\"http:/dir/faculty/Software/taylor\">Richard N. Taylor</A>,\nin Proceedings of the Ninth Internation Software Process Workshop. [46kB]\n\n<DT> <A HREF=\"http://www.ics.uci.edu/~pyoung/tr94.ps\">\nProcess Model Customization for Technical and Non-Technical Users</A>, \n<DD> by <A HREF = \"http:/dir/visitor/pyoung\">Patrick S. Young</A> and \n<A HREF=\"http:/dir/faculty/Software/taylor\">Richard N. Taylor</A>. [102kB]\n\n<DT> <A HREF=\"http://www.ics.uci.edu/~pyoung/tr91-68.ps\">\nTeam-Oriented Process Programming</A>,\n<DD> by <A HREF = \"http:/dir/visitor/pyoung\">Patrick S. Young</A> and\n<A HREF=\"http:/dir/faculty/Software/taylor\">Richard N. Taylor</A>, \nTechnical Report UCI 91-68.\n\n\n</DL>\n\n\n<HR>\n<h2><A NAME=\"Contact\">\nContact Information\n</h2>\n<ADDRESS>\nArcadia-Teamware<BR>\n<A HREF=\"http://www.ics.uci.edu/\">\nDepartment of Information and Computer Science,</A><BR>\nUniversity of California, Irvine<BR>\nIrvine, CA 92717-3425<BR>\n</ADDRESS>\n<HR>\narcadia-teamware@ics.uci.edu\n<BR><A HREF=\"http://www.ics.uci.edu/Arcadia/atUCI.html\">\nArcadia Project at UCI</A><BR>\n<BR>Last modified: Fri Dec  9 13:04:25 1994\n</BODY></HTML>\n", "id": 10034.0}