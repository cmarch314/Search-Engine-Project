{"text": "View Javadoc 1 2 Created on Mar 1 2 5 3 4 5 package edu uci isr impromptu pie 6 7 import java awt BorderLayout 8 import java awt Color 9 import java awt Container 1 import java awt Point 11 import java awt RenderingHints 12 import java awt datatransfer DataFlavor 13 import java awt datatransfer Transferable 14 import java awt dnd DnDConstants 15 import java awt dnd DropTarget 16 import java awt dnd DropTargetAdapter 17 import java awt dnd DropTargetDropEvent 18 import java awt event ActionEvent 19 import java awt event KeyEvent 2 import java awt event WindowAdapter 21 import java awt event WindowEvent 22 import java awt geom AffineTransform 23 import java awt geom NoninvertibleTransformException 24 import java awt geom Point2D 25 import java io File 26 import java io FileNotFoundException 27 import java io FileOutputStream 28 import java io IOException 29 import java util ArrayList 3 import java util Collections 31 import java util Enumeration 32 import java util HashMap 33 import java util HashSet 34 import java util Hashtable 35 import java util Iterator 36 import java util List 37 import java util Map 38 import java util Set 39 import java util SortedMap 4 import java util TreeMap 41 import java util Vector 42 43 import javax jmdns ServiceInfo 44 import javax swing AbstractAction 45 import javax swing Action 46 import javax swing BorderFactory 47 import javax swing ImageIcon 48 import javax swing JButton 49 import javax swing JCheckBoxMenuItem 5 import javax swing JColorChooser 51 import javax swing JFileChooser 52 import javax swing JFrame 53 import javax swing JLabel 54 import javax swing JMenu 55 import javax swing JMenuBar 56 import javax swing JMenuItem 57 import javax swing JOptionPane 58 import javax swing JPopupMenu 59 import javax swing JToolBar 6 61 import org apache batik bridge UpdateManager 62 import org apache batik dom events DOMKeyEvent 63 import org apache batik dom events DOMMouseEvent 64 import org apache batik dom svg SVGDOMImplementation 65 import org apache batik swing JSVGCanvas 66 import org apache batik swing gvt GVTTreeRendererAdapter 67 import org apache batik swing gvt GVTTreeRendererEvent 68 import org apache batik util RunnableQueue 69 import org apache batik util SVGConstants 7 import org apache commons httpclient HttpURL 71 import org apache commons logging Log 72 import org apache commons logging LogFactory 73 import org apache webdav lib PropertyName 74 import org apache webdav lib WebdavResource 75 import org apache webdav lib methods DepthSupport 76 import org eclipse swt SWT 77 import org eclipse swt events ControlAdapter 78 import org eclipse swt events ControlEvent 79 import org eclipse swt events SelectionAdapter 8 import org eclipse swt events SelectionEvent 81 import org eclipse swt events ShellAdapter 82 import org eclipse swt events ShellEvent 83 import org eclipse swt layout FillLayout 84 import org eclipse swt widgets Display 85 import org eclipse swt widgets Menu 86 import org eclipse swt widgets MenuItem 87 import org eclipse swt widgets Shell 88 import org holongate j2d J2DRegistry 89 import org w3c dom Element 9 import org w3c dom Text 91 import org w3c dom events Event 92 import org w3c dom events EventListener 93 import org w3c dom events EventTarget 94 import org w3c dom svg SVGDocument 95 96 import edu uci isr impromptu common MessageProcessor 97 import edu uci isr impromptu common Peer 98 import edu uci isr impromptu common PeerManager 99 import edu uci isr impromptu common PeerOwner 1 import edu uci isr impromptu common Utils 1 1 import edu uci isr impromptu security ACLManager 1 2 import edu uci isr impromptu security SecurityConstants 1 3 import edu uci isr impromptu security UserManager 1 4 1 5 1 6 This is the Pie client for the proxy It connects to the Proxy 1 7 displays available files using special properties owner level position it finds 1 8 It can also change these properties when the user drags files 1 9 It allows user open files using simple start open command 11 The whole pie assumes a file with a certain name only belongs to one peer so two 111 peers cannot have files with the same name 112 113 author Jie Ren 114 115 public class Pie implements EventListener PeerOwner 116 private static Log log LogFactory getLog Pie class 117 118 119 the namespace prefix for SVG 12 121 public static String SVG NS SVGDOMImplementation SVG NAMESPACE URI 122 123 The element ids for the SVG Document 124 125 126 The text path for a peer s name 127 128 public static final String ID TEXT PATH textPath 129 13 The text template for a peer s name 131 132 public static final String ID TEXT TEMPLATE textTemplate 133 134 The private space background 135 136 public static final String ID PRIVATE SPACE privateSpace 137 138 The root of all peers rings 139 14 private static final String ID PEERS peersGroup 141 142 The persistent space center circle 143 144 public static final String ID PERSISTENT SPACE persistentSpace 145 146 The element used for shading local peer 147 148 public static final String ID LOCAL MASK localMask 149 15 The element used for shading local persistent 151 152 public static final String ID LOCAL MASK PERSISTENT localMaskPersistent 153 154 The g element used for dragging a file dot 155 156 public static final String ID DRAGGING DELEGATE draggingDelegate 157 158 The circle element used for dragging a file dot 159 16 public static final String ID DRAGGING CIRCLE draggingCircle 161 162 The text element used for dragging a file dot 163 164 public static final String ID DRAGGING TEXT draggingText 165 166 File Description 167 168 private static final String ID FILE DESCRIPTION fileDescription 169 17 File Description name 171 172 private static final String ID FILE NAME fileName 173 174 File Description permission 175 176 private static final String ID FILE PERMISSION filePermission 177 178 Visible file description 179 18 public static final String VISIBILITY VISIBLE visibility visible 181 182 Hidden file description 183 184 public static final String VISIBILITY HIDDEN visibility hidden 185 186 The root of all files 187 188 public static final String ID FILES filesGroup 189 19 191 Our namespace URI for our properties 192 193 public static final String NS PREFIX I 194 public static final String NS URI http www isr uci edu projects swirl 195 196 The owner property 197 198 public static final String PROPERTY OWNER owner 199 2 The relative radius property 2 1 2 2 public static final String PROPERTY RADIUS radius 2 3 2 4 The relative angle property 2 5 2 6 public static final String PROPERTY ANGLE angle 2 7 2 8 2 9 The DOM structure for the UI 21 211 The document 212 private SVGDocument document 213 214 Spaces 215 Center persistent 216 private Element persistentSpace 217 Background private 218 private Element privateSpace 219 22 Peers 221 private Element peersGroup 222 This may not start if the Pie is bound with the Repository to share 223 Yancees 224 When it starts it listens to both Pie and Repository apperance The 225 Repository is not interested in Pie events 226 The peers map below only contains SlicePeers presentation vs communication 227 private PeerManager pm 228 private ServiceInfo myServiceInfo 229 private Set interestedServices new HashSet 23 for quick access an aux structure 231 all peers in this map are slice peer 232 This probably could be merged with the peer manager s peers map 233 but the synchronization concurrency cost might be more than its worth 234 private SortedMap peers Collections synchronizedSortedMap new TreeMap 235 whether the other peer has admitted this peer to access the remote files 236 The key is the remote peer s name the value is admitted true or not admitted false 237 The key includes the userName which should always be true 238 private SortedMap admittedBy Collections synchronizedSortedMap new TreeMap 239 private SlicePeer localPeer 24 private String userName 241 for shading local peer 242 private Element localMask 243 for shading local peer perisistent 244 private Element localMaskPersistent 245 for dragging a file dot the g 246 private Element draggingDelegate 247 for dragging a file dot the name 248 private Text draggingText 249 The template text path for a peer s name 25 private Element textPath 251 The template text name for a peer s name 252 private Element textTemplate 253 254 Files 255 private Element filesGroup 256 257 The tip for a file 258 private Element fileDescription 259 The name 26 private Text fileName 261 The permission 262 private Text filePermission 263 264 The Batik update manager 265 private UpdateManager updater 266 The runnable queue for asynchronous execution 267 private RunnableQueue laterWork 268 The JSVGCanvas 269 private JSVGCanvas canvas 27 271 The WebdavResource 272 private WebdavResource impromptuServer 273 The properties that we store and retrieve owner radius angle 274 private Vector ourProperties 275 The ACL manager 276 private ACLManager aclManager 277 The user manager 278 private UserManager userManager 279 28 281 Create an empty instance 282 283 284 public Pie 285 286 287 288 Start peer manager 289 29 param integratePie true if the pie is integrated with the repository as a peer 291 false if the pie is running standalone 292 293 public void startPeerManager boolean integratePie 294 this integratePie integratePie 295 if integratePie 296 interestedServices add Configuration PIE SERVICE TYPE 297 interestedServices add edu uci isr impromptu repository Configuration IMPROMPTU SERVICE TYPE 298 myServiceInfo new ServiceInfo Configuration PIE SERVICE TYPE 299 getName getCharacter Configuration PIE PORT NONE getName getCharacter 3 pm new PeerManager this Configuration YANCEES CONFIGURATION FILE SECONDARY 3 1 pm registerJmDNS 3 2 if log null 3 3 3 4 3 5 3 6 3 7 If true then the Pie is integrated with the proxy filter 3 8 private boolean integratePie false 3 9 31 Set the peer manager used when the owner does not start its own manager 311 param pm the peer manager that this owner should use 312 313 public void setPeerManager PeerManager pm 314 if this pm null 315 If we have not got one peer manager 316 This is used when integrated with the proxy filter 317 because we need this to send out messages 318 this pm pm 319 integratePie true 32 321 322 323 private boolean leaving false 324 325 Send out a leave notify message after the user chooses to exit the GUI 326 327 public void leaveNotify 328 if peers size 1 localPeer null localPeer getPersistentFiles size 329 There are more than just us and we have some persistent files 33 We only do persistent exchanges here The eager policy which 331 back up persistent files proactively when persistent files 332 are created and modified still needs notifications of a 333 peer s leaving But with such notifications it is also 334 possible to execute a lazy policy 335 leaving true 336 Map leaveNotifyEvent new HashMap 337 leaveNotifyEvent put MessageProcessor ATTR PEER NAME 338 userName 339 leaveNotifyEvent put MessageProcessor ATTR ACTION 34 MessageProcessor ACTION LEAVE NOTIFY 341 pm sendMessage leaveNotifyEvent 342 new Thread Shutdown waiter 343 public void run 344 wait 3 seconds 345 try 346 Thread sleep 3 347 348 catch InterruptedException e 349 35 then shutdown 351 log debug Having been waiting for too long 352 shutdown 353 354 start 355 356 else 357 shutdown 358 359 36 361 362 Whether we should take over a remote user s persistent files 363 param remoteUserName the name of the remote user 364 return true if we want to take over and keep servering that user s 365 persistent files false if we do not want to do so 366 367 public boolean takePersistent String remoteUserName 368 boolean result false 369 int peersSize peers size 37 if peersSize 1 371 we take over if we are right after the remoteUserName in the pie 372 The second condition is for the ring case we are first and 373 the remote is the last 374 int localCardinal localPeer getCardinal peersSize 375 int remoteCardinal SlicePeer peers get remoteUserName getCardinal 376 result localCardinal remoteCardinal peersSize 1 377 378 return result 379 38 381 A list of others persistent files Might contain more than one user s files 382 private List othersPersistentFiles Collections synchronizedList new ArrayList 383 384 Copy a remote user s persistent files to our persistent directory 385 param remoteUserName the name of the remote user 386 387 public void savePersistent String remoteUserName 388 List p SlicePeer peers get remoteUserName getPersistentFiles 389 for Iterator i p iterator i hasNext 39 Dot d Dot i next 391 copy each file to our own persisten directory 392 String fileName d getFileName 393 Platform exportFile fileName Platform getPersistentPrefix fileName 394 395 Use an add method in case we are busy serving more than one remote user 396 othersPersistentFiles addAll p 397 398 399 4 Reimport a remote user s persistent files so we are their new owner 4 1 param remoteUserName the name of the remote user who has just left 4 2 4 3 public void reimportPersistent String remoteUserName 4 4 make a copy in case of concurrent modification 4 5 synchronized othersPersistentFiles 4 6 List p new ArrayList 4 7 for Iterator i othersPersistentFiles iterator i hasNext 4 8 Dot d Dot i next 4 9 if d getOwner getName equals remoteUserName 41 copy each file from our own persisten directory to its original place 411 File file new File Platform getPersistentPrefix d getFileName 412 if doImportFile file 413 doDrop file d getLocation 414 415 p add d 416 417 418 othersPersistentFiles removeAll p 419 42 421 422 423 Send out a shutdown message probably after receiving the backup holder s 424 leave continue message 425 426 public void shutdown 427 Platform unmountDrive 428 429 if pm null 43 Map shutdownEvent new HashMap 431 shutdownEvent put MessageProcessor ATTR PEER NAME 432 userName 433 shutdownEvent put MessageProcessor ATTR ACTION 434 MessageProcessor ACTION SHUTDOWN 435 pm sendMessage shutdownEvent 436 437 438 if we are not integrated then exit directly 439 if integratePie 44 give some time to Yancees 441 try 442 Thread sleep 2 443 444 catch InterruptedException ie 445 446 log debug Exiting 447 System exit 448 449 45 451 452 Get the ServiceInfo structure of the local peer 453 return the ServiceInfo 454 455 public ServiceInfo getServiceInfo 456 return myServiceInfo 457 458 459 46 Get the services that this owner is interested 461 return a set of interested services 462 463 public Set getInterestedServices 464 return interestedServices 465 466 467 468 Construct a pie based on the loaded template This is the real constructor 469 param document the template document 47 471 public void setDocument SVGDocument document 472 document document 473 474 Must check the old attribute value against the new value 475 If blindly setting the attribute with the same new value it will trigger attribute 476 change events whose handler generates null pointer exceptions 477 Again the template svg must also be changed to reflect a new width height 478 Batik seemingly won t catch up the width height viewbox update at svg element 479 after a document has been loaded from the template 48 Cannot out smart each other 481 Element svgRoot document getDocumentElement 482 width 483 String oldAttribute svgRoot getAttribute SVGConstants SVG WIDTH ATTRIBUTE 484 String newAttribute String valueOf Configuration SIZE VIEW WIDTH 485 if newAttribute equals oldAttribute 486 svgRoot setAttributeNS null SVGConstants SVG WIDTH ATTRIBUTE newAttribute 487 height 488 oldAttribute svgRoot getAttribute SVGConstants SVG HEIGHT ATTRIBUTE 489 newAttribute String valueOf Configuration SIZE VIEW HEIGHT 49 if newAttribute equals oldAttribute 491 svgRoot setAttributeNS null SVGConstants SVG HEIGHT ATTRIBUTE newAttribute 492 viewBox A rather quick comparison instead of a full analysis 493 oldAttribute svgRoot getAttribute SVGConstants SVG VIEW BOX ATTRIBUTE 494 newAttribute String valueOf Configuration SIZE VIEW WIDTH 495 String valueOf Configuration SIZE VIEW HEIGHT 496 if newAttribute equals oldAttribute 497 svgRoot setAttributeNS null SVGConstants SVG VIEW BOX ATTRIBUTE newAttribute 498 499 5 Move original long procedure into the SVG stub template clone node 5 1 so this looks simple and it becomes easy to change visual effects 5 2 Notes 5 3 filter is fixed 5 4 tooltip is template 5 5 dot uses a template The same template is used as a dragging template 5 6 original local mask code covers the center 5 7 5 8 get the empty textpath reference 5 9 textPath document getElementById ID TEXT PATH 51 get the template text for name 511 textTemplate document getElementById ID TEXT TEMPLATE 512 get private space 513 privateSpace document getElementById ID PRIVATE SPACE 514 privateSpace setAttributeNS null SVGConstants SVG WIDTH ATTRIBUTE String valueOf Configuration SIZE VIEW WIDTH 515 privateSpace setAttributeNS null SVGConstants SVG HEIGHT ATTRIBUTE String valueOf Configuration SIZE VIEW HEIGHT 516 Get the peers 517 peersGroup document getElementById ID PEERS 518 get the persistent space 519 persistentSpace document getElementById ID PERSISTENT SPACE 52 persistentSpace setAttributeNS null SVGConstants SVG R ATTRIBUTE String valueOf PieUtils getRadius SecurityConstants LEVEL PERSISTENT 521 PieUtils setTranslateCenter persistentSpace 522 get the local mask 523 localMask document getElementById ID LOCAL MASK 524 get the local mask persistent 525 localMaskPersistent document getElementById ID LOCAL MASK PERSISTENT 526 localMaskPersistent setAttributeNS null SVGConstants SVG R ATTRIBUTE String valueOf PieUtils getRadius SecurityConstants LEVEL PERSISTENT 527 PieUtils setTranslateCenter localMaskPersistent 528 get the dragging dot 529 draggingDelegate document getElementById ID DRAGGING DELEGATE 53 draggingText Text document getElementById ID DRAGGING TEXT getFirstChild 531 Get the tool tip 532 fileDescription document getElementById ID FILE DESCRIPTION 533 fileName Text document getElementById ID FILE NAME getFirstChild 534 filePermission Text document getElementById ID FILE PERMISSION getFirstChild 535 get files 536 filesGroup document getElementById ID FILES 537 538 always listen to Esc 539 EventTarget localMask addEventListener SVGConstants SVG KEYPRESS EVENT TYPE Pie this false 54 EventTarget privateSpace addEventListener SVGConstants SVG KEYPRESS EVENT TYPE Pie this false 541 542 ourProperties new Vector 543 ourProperties add new PropertyName NS URI PROPERTY OWNER 544 ourProperties add new PropertyName NS URI PROPERTY RADIUS 545 ourProperties add new PropertyName NS URI PROPERTY ANGLE 546 547 548 549 Get the contained document 55 return the document 551 552 public SVGDocument getDocument 553 return document 554 555 556 557 Get the text path element 558 return the text path elelment 559 56 public Element getTextPath 561 return textPath 562 563 564 565 Get the text template element 566 return the text template elelment 567 568 public Element getTextTemplate 569 return textTemplate 57 571 572 573 Get the group element g for the peers 574 return the group element 575 576 public Element getPeersGroup 577 return peersGroup 578 579 58 581 Get the group element g for the files 582 return the group element 583 584 public Element getFilesGroup 585 return filesGroup 586 587 588 589 Get the element for shading the local peer 59 return the shading element 591 592 public Element getLocalMask 593 return localMask 594 595 596 597 Get the element for the dragging delegate 598 return the dragging delegate 599 6 public Element getDraggingDelegate 6 1 return draggingDelegate 6 2 6 3 6 4 6 5 whether the description window is shown 6 6 6 7 private boolean enableShowDescription true 6 8 6 9 Enable or disable the description window 61 param show true to enable false to disable 611 612 public void setShowDescription boolean show 613 enableShowDescription show 614 615 616 Get whether the description window is enabled 617 return true if enabled false if disabled 618 619 public boolean getShowDescription 62 return enableShowDescription 621 622 623 624 whether the description follows dot 625 626 private boolean followDot true 627 628 Set whether the description window should follow the dot 629 param f true to follow false not to follow 63 631 public void setFollowDot boolean f 632 followDot f 633 634 635 Get whether the description window should follow the dot 636 return true to follow false not to follow 637 638 public boolean getFollowDot 639 return followDot 64 641 642 643 Show description for a dot 644 645 param d the dot for a file 646 647 public void showDescription Dot d 648 if enableShowDescription d null 649 fileName setNodeValue d getFileName 65 filePermission setNodeValue SecurityConstants LEVELS DESCRIPTION d getSharingLevel 651 follow is true during normal operation 652 it is set to false during dragging so 1 the description would not be too annoying 653 2 if we do not track move events for fileDescription element there is one blind spot 654 3 But if we track move events for that element it might overlap with other non droppable area 655 if followDot 656 Point p d getLocation 657 fileDescription setAttributeNS null SVGConstants SVG TRANSFORM ATTRIBUTE 658 PieUtils getTranslateString p getX d getSize Configuration CENTER X 659 p getY d getSize Configuration CENTER Y 66 661 else 662 fileDescription setAttributeNS null SVGConstants SVG TRANSFORM ATTRIBUTE 663 PieUtils getTranslateString 664 665 fileDescription setAttributeNS null SVGConstants SVG STYLE ATTRIBUTE VISIBILITY VISIBLE 666 667 668 669 67 Hide the description 671 672 673 public void hideDescription 674 fileDescription setAttributeNS null SVGConstants SVG STYLE ATTRIBUTE VISIBILITY HIDDEN 675 676 677 678 Trigger a refresh for Batik Batik requires updating through update manager 679 This refresh sets the background of the private space and triggers a repaint 68 681 public void repaint 682 final Element refreshTrigger privateSpace 683 laterWork invokeLater new Runnable 684 public void run 685 refreshTrigger setAttributeNS null SVGConstants CSS FILL PROPERTY 686 Configuration COLOR PRIVATE SPACE 687 688 689 69 691 692 Set the update manager for this pie 693 param updater the update manager 694 695 public void setUpdateManager UpdateManager updater 696 updater updater 697 laterWork updater getUpdateRunnableQueue 698 699 pick up any update requests that were sent before we are up 7 for Iterator i toUpdater iterator i hasNext 7 1 ServiceInfo si ServiceInfo i next 7 2 createAPeer si 7 3 7 4 toUpdater clear 7 5 7 6 Start a thread that is in charge of blinking dots 7 7 new Thread Dot Blinker 7 8 public void run 7 9 while true 71 blinking interval 711 try 712 Thread sleep 5 713 714 catch InterruptedException e 715 716 Remove dots that have blinked 717 synchronized dotsToBlink 718 List toRemove new ArrayList 719 for Iterator i dotsToBlink iterator i hasNext 72 Dot d Dot i next 721 if d blinked 722 toRemove add d 723 724 dotsToBlink removeAll toRemove 725 if dotsToBlink isEmpty 726 Keep blinking other dots 727 laterWork invokeLater new Runnable 728 public void run 729 synchronized dotsToBlink 73 for Iterator i dotsToBlink iterator i hasNext 731 Dot d Dot i next 732 d blink 733 734 735 736 737 738 739 74 741 start 742 743 744 745 Get the udpate manager for this pie 746 return the update manager 747 748 public UpdateManager getUpdateManager 749 return updater 75 751 752 753 Set the canvas for this pie 754 This could be merged with update manager but we might want to use SWT 755 param canvas the SVG canvas 756 757 public void setJSVGCanvas JSVGCanvas canvas 758 canvas canvas 759 76 761 762 Translate the client coordinate to the SVG coordinate 763 param evt the event containing the client coordinate 764 return the SVG coordinate 765 766 private Point2D clientToSVG DOMMouseEvent evt 767 AffineTransform at canvas getViewBoxTransform 768 try 769 at at createInverse 77 771 catch NoninvertibleTransformException e 772 773 return at transform new Point2D Float evt getClientX evt getClientY null 774 775 776 777 Translate the client coordinate to the SVG coordinate 778 param p the event containing the client coordinate 779 return the SVG coordinate 78 781 private Point2D clientToSVG Point p 782 AffineTransform at canvas getViewBoxTransform 783 try 784 at at createInverse 785 786 catch NoninvertibleTransformException e 787 788 return at transform p null 789 79 791 792 Whether to use a delegate for dragging 793 794 private boolean dragWithDelegate false 795 796 797 Set whether to use a delegate for dragging 798 param drag true for using a delegate false for using the dot directly 799 8 public void setDragWithDelegate boolean drag 8 1 dragWithDelegate drag 8 2 8 3 8 4 8 5 Get whether to use a delgate for dragging 8 6 return true for using a delegate false for using the dot directly 8 7 8 8 public boolean getDragWithDelegate 8 9 return dragWithDelegate 81 811 812 813 The target element used in dragging If using a delegate 814 then this is the draggingDelegate template element If not using a delgate 815 then this is the real dot s group element that is being dragged 816 817 private Element draggingTarget 818 819 Are we dragging 82 821 private boolean isDragging false 822 823 Which dot is selected 824 825 private Dot selectedDot 826 827 The old position for a dot saved for dragging cancellation 828 829 private Point2D oldP2d 83 831 832 Event handling 833 834 public void handleEvent Event evt 835 final Event keyEvt evt 836 EventTarget target evt getTarget 837 String eventType evt getType 838 DOMMouseEvent mouseHolder null 839 if evt instanceof DOMMouseEvent 84 mouseHolder DOMMouseEvent evt 841 final DOMMouseEvent evt mouseHolder 842 Element dotElement Element Element target getParentNode 843 Dot dotHolder null 844 if dotElement null 845 String fileName dotElement getAttribute SVGConstants SVG ID ATTRIBUTE 846 dotHolder getFile fileName 847 848 final Dot dot dotHolder 849 85 if eventType equals SVGConstants SVG MOUSEOVER EVENT TYPE 851 move the tip at the first mouse over 852 laterWork invokeLater new Runnable 853 public void run 854 showDescription dot 855 dot handleEvent evt 856 857 858 859 else if eventType equals SVGConstants SVG MOUSEOUT EVENT TYPE 86 laterWork invokeLater new Runnable 861 public void run 862 hideDescription 863 if dot null 864 dot handleEvent evt 865 866 867 868 else if eventType equals SVGConstants SVG MOUSEDOWN EVENT TYPE 869 laterWork invokeLater new Runnable 87 public void run 871 This is the single selection model 872 if selectedDot null 873 selectedDot deselect 874 selectedDot dot 875 selectedDot select 876 877 EventTarget selectedTarget EventTarget selectedDot getGroupElement 878 track mouse up events for pure selection 879 track mouse move events for dragging 88 and no need to move out of the circle to start dragging 881 track keypress events of Esc for cancelling selection or dragging 882 selectedTarget addEventListener SVGConstants SVG MOUSEUP EVENT TYPE Pie this false 883 allow dragging only for local files 884 if localPeer owns selectedDot getFileName 885 selectedTarget addEventListener SVGConstants SVG MOUSEMOVE EVENT TYPE Pie this false 886 selectedTarget addEventListener SVGConstants SVG KEYPRESS EVENT TYPE Pie this false 887 888 also track these events on the local mask and private space 889 EventTarget lm EventTarget localMask 89 EventTarget ps EventTarget privateSpace 891 lm addEventListener SVGConstants SVG MOUSEUP EVENT TYPE Pie this false 892 ps addEventListener SVGConstants SVG MOUSEUP EVENT TYPE Pie this false 893 allow dragging only for local files 894 if localPeer owns selectedDot getFileName 895 lm addEventListener SVGConstants SVG MOUSEMOVE EVENT TYPE Pie this false 896 ps addEventListener SVGConstants SVG MOUSEMOVE EVENT TYPE Pie this false 897 898 Save the old position 899 If doing this at move then only the position after the first move is saved 9 And must use the position from the dot otherwise there is minor movement 9 1 oldP2d selectedDot getLocation 9 2 9 3 9 4 9 5 else if eventType equals SVGConstants SVG MOUSEMOVE EVENT TYPE 9 6 laterWork invokeLater new Runnable 9 7 public void run 9 8 Point2D p2d null 9 9 if isDragging evt getButton selectedDot null 91 when it just starts moving not dragging yet a dot is selcted 911 mouse is moved and the primary button is pressed 912 isDragging true 913 p2d clientToSVG evt 914 915 if dragWithDelegate 916 show the delegate dot 917 draggingDelegate setAttributeNS null SVGConstants SVG STYLE ATTRIBUTE VISIBILITY VISIBLE 918 use the delegate 919 draggingTarget draggingDelegate 92 track the delegate 921 EventTarget et EventTarget draggingTarget 922 et addEventListener SVGConstants SVG MOUSEUP EVENT TYPE Pie this false 923 et addEventListener SVGConstants SVG MOUSEMOVE EVENT TYPE Pie this false 924 et addEventListener SVGConstants SVG KEYPRESS EVENT TYPE Pie this false 925 926 else 927 draggingTarget selectedDot getGroupElement 928 929 93 if selectedDot null 931 if dragWithDelegate 932 draggingText setNodeValue selectedDot getFileName 933 934 else 935 EventTarget draggingTarget removeEventListener SVGConstants SVG MOUSEOVER EVENT TYPE 936 Pie this false 937 EventTarget draggingTarget removeEventListener SVGConstants SVG MOUSEOUT EVENT TYPE 938 Pie this false 939 94 941 942 if isDragging 943 if we are not dragging then return 944 return 945 946 947 if evt getButton 948 if we were dragging but the button is not pressed 949 then we cancel the dragging 95 This happens when a mouse up happens in some other elements 951 which we do not track mouse up events 952 Sicne there are many that we DO NOT track this prevention 953 method which is cheaper is used 954 endDragging 955 return 956 957 958 if p2d null 959 p2d clientToSVG evt 96 if dragWithDelegate 961 draggingTarget setAttributeNS null SVGConstants SVG TRANSFORM ATTRIBUTE 962 PieUtils getTranslateString p2d getX p2d getY 963 964 else 965 selectedDot updateLocation new Point int p2d getX Configuration CENTER X 966 int p2d getY Configuration CENTER Y 967 968 showDescription selectedDot 969 97 971 972 else if eventType equals SVGConstants SVG MOUSEUP EVENT TYPE 973 laterWork invokeLater new Runnable 974 public void run 975 if isDragging 976 position change 977 The owner of ACL is set by Slide automatically 978 Point2D p2d clientToSVG evt 979 selectedDot updateLocation new Point int p2d getX Configuration CENTER X 98 int p2d getY Configuration CENTER Y 981 show a new tip 982 showDescription selectedDot 983 984 This is PROPPATCH and ACL 985 These two succeed because me is able 986 to do anything even the security setting for others 987 the level handler has not been changed yet 988 setDotProperties selectedDot 989 99 send out the movement 991 Map movedEvent new HashMap 992 movedEvent put MessageProcessor ATTR PEER NAME 993 userName 994 movedEvent put MessageProcessor ATTR FILE NAME 995 selectedDot getFileName 996 movedEvent put MessageProcessor ATTR ACTION 997 MessageProcessor ACTION MOVE 998 movedEvent put MessageProcessor ATTR RADIUS 999 String valueOf selectedDot getRadius 1 movedEvent put MessageProcessor ATTR ANGLE 1 1 String valueOf selectedDot getAngle 1 2 movedEvent put MessageProcessor ATTR LEVEL 1 3 String valueOf selectedDot getSharingLevel 1 4 pm sendMessage movedEvent 1 5 1 6 endDragging 1 7 1 8 else 1 9 stopListeningAfterMouseUp 1 1 1 11 1 12 1 13 1 14 else if eventType equals SVGConstants SVG KEYPRESS EVENT TYPE 1 15 laterWork invokeLater new Runnable 1 16 public void run 1 17 if DOMKeyEvent keyEvt getCharCode DOMKeyEvent DOM VK ESCAPE 1 18 if isDragging 1 19 press Esc to cancel dragging 1 2 endDragging 1 21 selectedDot updateLocation new Point int oldP2d getX 1 22 int oldP2d getY 1 23 1 24 else if selectedDot null 1 25 also use Esc to cancel selection 1 26 tracking mouse down events for non dot elements 1 27 might be expensive 1 28 selectedDot deselect 1 29 selectedDot null 1 3 1 31 1 32 else if DOMKeyEvent keyEvt getCharCode DOMKeyEvent DOM VK DELETE 1 33 if selectedDot null localPeer owns selectedDot getFileName 1 34 deleteDot selectedDot 1 35 1 36 1 37 else if DOMKeyEvent keyEvt getCharCode DOMKeyEvent DOM VK ENTER 1 38 if selectedDot null 1 39 selectedDot openFile 1 4 1 41 1 42 1 43 1 44 1 45 else if eventType equals SVGConstants SVG CLICK EVENT TYPE 1 46 if evt getDetail 2 1 47 double click open the file 1 48 dot openFile 1 49 1 5 else if evt getButton 2 evt getButton evt getCtrlKey 1 51 Swing dependent pop up menu 1 52 On Windows Ctrl then Click triggers this 1 53 On Mac Click and press Ctrl before release triggers this 1 54 hideDescription 1 55 JPopupMenu popup new JPopupMenu 1 56 AbstractAction openAction new AbstractAction Open 1 57 public void actionPerformed ActionEvent ae 1 58 if ae null 1 59 dot openFile 1 6 1 61 1 62 openAction putValue AbstractAction MNEMONIC KEY new Integer KeyEvent VK O 1 63 popup add new JMenuItem openAction 1 64 if localPeer owns dot getFileName 1 65 AbstractAction saveAction new AbstractAction Save 1 66 public void actionPerformed ActionEvent ae 1 67 if ae null 1 68 dot saveFile 1 69 1 7 1 71 saveAction putValue AbstractAction MNEMONIC KEY new Integer KeyEvent VK S 1 72 saveAction setEnabled dot getFileModified 1 73 popup add new JMenuItem saveAction 1 74 1 75 if localPeer owns dot getFileName 1 76 AbstractAction removeAction new AbstractAction Delete 1 77 public void actionPerformed ActionEvent ae 1 78 if ae null 1 79 deleteDot dot 1 8 1 81 1 82 removeAction putValue AbstractAction MNEMONIC KEY new Integer KeyEvent VK D 1 83 popup add new JMenuItem removeAction 1 84 1 85 popup show canvas evt getClientX evt getClientY 1 86 1 87 1 88 1 89 1 9 1 91 Delete a dot 1 92 param d the dot 1 93 1 94 private void deleteDot Dot dot 1 95 if dot getFileModified 1 96 if JOptionPane showConfirmDialog frame dot getFileName is modified 1 97 Do you want to save it Save Changed Files JOptionPane YES NO OPTION 1 98 JOptionPane YES OPTION 1 99 dot saveFile 11 11 1 11 2 dot deleteFile 11 3 11 4 11 5 11 6 Processing when dragging is ended either normal end or being canceled 11 7 11 8 private void endDragging 11 9 stopListeningAfterMouseUp 111 isDragging false 1111 hide the delegate dot 1112 if dragWithDelegate 1113 draggingDelegate setAttributeNS null SVGConstants SVG STYLE ATTRIBUTE VISIBILITY HIDDEN 1114 1115 1116 1117 Stop listening to certain events after the mouse button is up 1118 1119 private void stopListeningAfterMouseUp 112 stop listening 1121 EventTarget lm EventTarget localMask 1122 EventTarget ps EventTarget privateSpace 1123 lm removeEventListener SVGConstants SVG MOUSEUP EVENT TYPE Pie this false 1124 ps removeEventListener SVGConstants SVG MOUSEUP EVENT TYPE Pie this false 1125 lm removeEventListener SVGConstants SVG MOUSEMOVE EVENT TYPE Pie this false 1126 ps removeEventListener SVGConstants SVG MOUSEMOVE EVENT TYPE Pie this false 1127 if draggingTarget null 1128 EventTarget dt EventTarget draggingTarget 1129 dt removeEventListener SVGConstants SVG MOUSEUP EVENT TYPE Pie this false 113 dt removeEventListener SVGConstants SVG MOUSEMOVE EVENT TYPE Pie this false 1131 if isDragging dragWithDelegate 1132 dt addEventListener SVGConstants SVG MOUSEOVER EVENT TYPE Pie this false 1133 dt addEventListener SVGConstants SVG MOUSEOUT EVENT TYPE Pie this false 1134 1135 1136 1137 1138 private JFrame frame 1139 114 Set the frame used by the pie so the dialogs can be shown correctly 1141 param f the frame that serves as the parent of the dialogs 1142 1143 public void setJFrame JFrame f 1144 frame f 1145 1146 1147 private List dotsToBlink Collections synchronizedList new ArrayList 1148 1149 115 Handle the drop event 1151 param dtde the drop event 1152 1153 public void drop DropTargetDropEvent dtde 1154 if dtde isDataFlavorSupported DataFlavor javaFileListFlavor 1155 dtde rejectDrop 1156 return 1157 1158 1159 final Point2D position clientToSVG dtde getLocation 116 final Point p new Point int position getX Configuration CENTER X 1161 int position getY Configuration CENTER Y 1162 if Coordinate calculateRadius p Configuration RADIUS 1163 localPeer containsAngle Coordinate calculateTheta p 1164 Coordinate calculateRadius p Configuration RADIUS 1165 edu uci isr impromptu common Configuration LEVEL RADIUS SecurityConstants LEVEL PERSISTENT 1166 reject for remote peers within the radius but not in local 1167 showMessageDialog You cannot import files to others repository 1168 dtde rejectDrop 1169 return 117 1171 1172 dtde acceptDrop DnDConstants ACTION COPY 1173 Transferable tf dtde getTransferable 1174 try 1175 List files List tf getTransferData DataFlavor javaFileListFlavor 1176 for Iterator i files iterator i hasNext 1177 final File file File i next 1178 if file isDirectory 1179 showMessageDialog Importing directory is not supported n 118 Please import the files under the directory 1181 1182 else 1183 if doImportFile file 1184 doDrop file p 1185 1186 1187 1188 1189 catch Exception e 119 Utils handleException e 1191 1192 dtde dropComplete true 1193 1194 1195 1196 Do the actual work of dropping a file at a point 1197 1198 param file the local file that is imported 1199 param p the point where the file is imported 12 12 1 private void doDrop final File file final Point p 12 2 laterWork invokeLater new Runnable 12 3 public void run 12 4 Dot d localPeer addFile file p 12 5 d setLocalPath file getAbsolutePath 12 6 setDotProperties d 12 7 12 8 send out the add event 12 9 Map addedEvent new HashMap 121 addedEvent put MessageProcessor ATTR PEER NAME userName 1211 addedEvent put MessageProcessor ATTR FILE NAME file getName 1212 addedEvent put MessageProcessor ATTR ACTION 1213 MessageProcessor ACTION ADD 1214 addedEvent put MessageProcessor ATTR RADIUS 1215 String valueOf d getRadius 1216 addedEvent put MessageProcessor ATTR ANGLE 1217 String valueOf d getAngle 1218 addedEvent put MessageProcessor ATTR LEVEL 1219 String valueOf d getSharingLevel 122 The following comments apply to the case when we announced 1221 a file s addition during M PUT at repository Now we 1222 are using Pie generated PROPPATCH to ctonrol security 1223 This generates a second addition event after the 1224 one in importFile This continas coordinates 1225 It is unlikely that this sendMessage happens 1226 before the sendMessage of the proxyFilter 1227 because PUT after which proxyFilter 1228 sends message is not even the last method 1229 of copy UNLOCK is after which this sendMessage 123 is executed A more defensive event based 1231 programming is also a good solution 1232 pm sendMessage addedEvent 1233 1234 1235 1236 1237 1238 Start blinking a dot 1239 124 param d the dot 1241 1242 private void blinkDot Dot d 1243 If the repository is slow the blinking might not be noticeable 1244 d startBlink 1 1245 dotsToBlink add d 1246 1247 1248 1249 Store the customzied properties of a dot and also set its security level 125 param d the dot 1251 1252 public void setDotProperties Dot d 1253 This could go to the Dot class but let s keep everything WebDAV here 1254 try 1255 Set customized properties 1256 String path Utils fileNameToURL d getFileName 1257 use one proppatch to save three properties 1258 Hashtable properties new Hashtable 1259 properties put new PropertyName NS URI PROPERTY OWNER 126 d getOwner getName 1261 properties put new PropertyName NS URI PROPERTY RADIUS 1262 String valueOf d getRadius 1263 properties put new PropertyName NS URI PROPERTY ANGLE 1264 String valueOf d getAngle 1265 impromptuServer lockMethod path 1266 impromptuServer proppatchMethod path properties true 1267 impromptuServer unlockMethod path 1268 1269 This is ACL 127 if edu uci isr impromptu common Configuration ACL AT CLIENT 1271 aclManager setSecurityLevel d getFileName 1272 SecurityConstants OTHERS d getSharingLevel 1273 1274 1275 catch IOException e 1276 Utils handleException e 1277 1278 1279 128 1281 Process a message 1282 1283 param message the message with attributes and values 1284 1285 public void processMessage Map message 1286 String owner String message get MessageProcessor ATTR PEER NAME 1287 String action String message get MessageProcessor ATTR ACTION 1288 final String actor String message get MessageProcessor ATTR ACTOR 1289 if owner null 129 This can be pm get but since we are using the aux peers map 1291 we keep this simple call 1292 And if we use a bundle then the pie has no peer manager and 1293 the proxy s peer manager contains no slice peers 1294 final SlicePeer ownerPeer SlicePeer peers get owner 1295 if ownerPeer null 1296 final String fileName String message get MessageProcessor ATTR FILE NAME 1297 String radius String message get MessageProcessor ATTR RADIUS 1298 String angle String message get MessageProcessor ATTR ANGLE 1299 String level String message get MessageProcessor ATTR LEVEL 13 double r PieUtils getDefaultSecureRadius 13 1 double a Math random 13 2 boolean hasR false 13 3 boolean hasA false 13 4 int l SecurityConstants LEVEL PRIVATE 13 5 try 13 6 Get radius and angle which might not exist if the file is 13 7 copied by other applications 13 8 r Double parseDouble radius 13 9 hasR true 131 a Double parseDouble angle 1311 hasA true 1312 l Integer parseInt level 1313 1314 catch Exception e 1315 1316 1317 if ownerPeer owns fileName 1318 if action equals MessageProcessor ACTION ADD 1319 action equals MessageProcessor ACTION MOVE 132 Add a file 1321 1 If the file is not droped by th pie then it 1322 appears in a random place 1323 2 do not add a private file owned by others 1324 3 once the private file becomes available through 1325 MOVE add it 1326 final double rr r 1327 final double aa a 1328 if ownerPeer isLocal l SecurityConstants LEVEL PRIVATE 1329 This is a hide decision 133 laterWork invokeLater new Runnable 1331 public void run 1332 ownerPeer fileAdded fileName rr aa 1333 blinkDot ownerPeer getFile fileName 1334 1335 1336 1337 1338 1339 else 134 if action equals MessageProcessor ACTION MOVE 1341 action equals MessageProcessor ACTION ADD 1342 The add is for moving an existing file 1343 if hasR hasA 1344 final double rr r 1345 final double aa a 1346 if ownerPeer isLocal l SecurityConstants LEVEL PRIVATE 1347 laterWork invokeLater new Runnable 1348 public void run 1349 The remote owner hides the file 135 ownerPeer fileRemoved fileName 1351 1352 1353 1354 else 1355 laterWork invokeLater new Runnable 1356 public void run 1357 ownerPeer fileMoved fileName rr aa 1358 1359 136 1361 1362 1363 else if action equals MessageProcessor ACTION REMOVE 1364 laterWork invokeLater new Runnable 1365 public void run 1366 ownerPeer fileRemoved fileName 1367 1368 1369 137 else if action equals MessageProcessor ACTION WRITE 1371 laterWork invokeLater new Runnable 1372 public void run 1373 Dot d ownerPeer getFile fileName 1374 d setFileModified 1375 SlicePeer p SlicePeer peers get actor 1376 d setRingColor p getColor 1377 d setLastAccessPeer p 1378 blinkDot d 1379 138 1381 1382 else if action equals MessageProcessor ACTION READ 1383 laterWork invokeLater new Runnable 1384 public void run 1385 Dot d ownerPeer getFile fileName 1386 SlicePeer p SlicePeer peers get actor 1387 d setRingColor p getColor 1388 d setLastAccessPeer p 1389 blinkDot d 139 1391 1392 1393 else if action equals MessageProcessor ACTION RE ADD 1394 if ownerPeer isLocal 1395 Mac Word when saving changes actually creates several 1396 new files and loses our customized properties 1397 a local file is recreated by MOVE 1398 reapply its properties and security settings 1399 Dot d ownerPeer getFile fileName 14 setDotProperties d 14 1 14 2 14 3 14 4 if ownerPeer isLocal action equals MessageProcessor ACTION SHUTDOWN 14 5 if integratePie 14 6 Shutdown 14 7 System exit 14 8 14 9 141 if action equals MessageProcessor ACTION LEAVE CONTINUE 1411 if leaving owner equals userName 1412 we are waiting for our backup holder s continue message 1413 shutdown 1414 1415 1416 if action equals MessageProcessor ACTION LEAVE NOTIFY leaving 1417 takePersistent owner 1418 savePersistent owner 1419 Map leaveContinueEvent new HashMap 142 leaveContinueEvent put MessageProcessor ATTR PEER NAME owner 1421 leaveContinueEvent put MessageProcessor ATTR ACTOR userName 1422 leaveContinueEvent put MessageProcessor ATTR ACTION 1423 MessageProcessor ACTION LEAVE CONTINUE 1424 pm sendMessage leaveContinueEvent 1425 1426 if action equals MessageProcessor ACTION COLOR 1427 final String color String message get MessageProcessor ATTR COLOR 1428 laterWork invokeLater new Runnable 1429 public void run 143 ownerPeer setColor Color decode color need to notify all peers so that ring colors can also be changed 1431 Color c Color decode color 1432 String ownerName ownerPeer getName 1433 for Iterator i peers values iterator i hasNext 1434 SlicePeer p SlicePeer i next 1435 if ownerName equals p getName 1436 p setColor c 1437 1438 p updateRingColor ownerPeer c 1439 144 repaint 1441 1442 1443 1444 1445 if action equals MessageProcessor ACTION ADD PEER 1446 This is for admission of peers so it should not depend on ownerPeer null 1447 if actor equals userName 1448 admittedBy put owner new Boolean true 1449 145 1451 1452 1453 1454 1455 The drive mount point for the Impromptu repository 1456 1457 private String impromptuDrive 1458 1459 Set the Impromptu drive 146 param impromptuDrive a drive letter on Windows a mount point on Mac 1461 1462 public void setImpromptuDrive String impromptuDrive 1463 impromptuDrive impromptuDrive 1464 1465 1466 Get the Impromptu drive 1467 return a drive letter on Windows a mount point on Mac 1468 1469 public String getImpromptuDrive 147 return impromptuDrive 1471 1472 1473 1474 The URL for the Impromptu proxy 1475 1476 private String impromptuProxy 1477 1478 Set the impromptu proxy this pie connects to 1479 param impromptuProxy the URL for the impromptu proxy 148 1481 public void setImpromptuProxy String impromptuProxy 1482 impromptuProxy impromptuProxy 1483 1484 1485 Get the impromptu proxy this pie connects to 1486 return the URL for the impromptu proxy 1487 1488 public String getImpromptuProxy 1489 return impromptuProxy 149 1491 1492 1493 The password used to connect to the Impromptu proxy 1494 1495 private String password 1496 1497 Set the password that the pie uses to authenticate to the proxy 1498 Also connect to the proxy and mount it as a drive since the necessary 1499 information is now complete 15 15 1 param password the password 15 2 15 3 public void setPassword String password 15 4 password password 15 5 15 6 During startup if we add the owner as the first peer and then 15 7 set the password at that time it seems 15 8 the server is not fully ready yet even though we have added 15 9 users and passwords We are in the proxy servlet s init where 151 it calls proxyFilter s initAfterServlet which means the server 1511 still thinks the init is not done yet So connectToProxy 1512 canno be executed here 1513 1514 1515 private boolean connectingToProxy true 1516 1517 Set whether the proxy should be connected 1518 param connectingToProxy true if the pie should connect to proxy 1519 false if the pie should be just a viewer 152 1521 public void setConnectToProxy boolean connectingToProxy 1522 this connectingToProxy connectingToProxy 1523 1524 1525 record whether we have tried the first connection 1526 private boolean connectedToProxy false 1527 1528 Connect to the Impromptu proxy and mount it for file system access 1529 153 public void connectToProxy 1531 try 1532 here we do nothing to server 1533 1534 impromptuServer new WebdavResource new HttpURL impromptuProxy 1535 new UsernamePasswordCredentials userName password 1536 WebdavResource NOACTION DepthSupport DEPTH 1537 1538 HttpURL original new HttpURL impromptuProxy 1539 Must use this HttpURL constructor that includes user and password 154 so the underlying httpclient of webdavresource can keep the context 1541 and will not create a httpclient each time with an preemptive auth 1542 impromptuServer new WebdavResource new HttpURL userName password 1543 original getHost original getPort original getPath 1544 WebdavResource NOACTION DepthSupport DEPTH 1545 impromptuServer setFollowRedirects true 1546 Here we turn off the preemptive auth which is not possible for 1547 digest authentication and actually has problem with Jetty who 1548 seemingly does not send a challenge back on a pre authed request 1549 impromptuServer retrieveSessionInstance getState 155 setAuthenticationPreemptive false 1551 impromptuServer setDebug 1 1552 if edu uci isr impromptu common Configuration ACL AT CLIENT 1553 aclManager new ACLManager impromptuServer 1554 1555 userManager new UserManager null impromptuServer 1556 1557 Configuration setDestinationDrive impromptuDrive 1558 final int mountResult Platform mountDrive userName password 1559 new Thread 156 Use a thread so this will not block other start up functions 1561 public void run 1562 if mountResult 1563 Mount unsuccessfully 1564 On Windows the error most likely is a 1219 credential conflict 1565 We cannot find a solution The only workaround is to relogin 1566 Sometimes even the return result is non zero the drive is still mounted 1567 showMessageDialog Cannot mount the Impromptu drive 1568 The error code is mountResult n n 1569 Please restart the Configuration TITLE n 157 If this problem persists please log off log on back and try again 1571 Dirve mount failure JOptionPane ERROR MESSAGE 1572 1573 1574 start 1575 1576 catch IOException ioe 1577 Utils handleException ioe 1578 1579 connectedToProxy true 158 1581 1582 1583 Display the user manager 1584 1585 public void showUserManager 1586 userManager show 1587 1588 1589 159 Get everything from the proxy and re start fresh 1591 1592 public void refresh 1593 Clear the old peers 1594 Need to make a copy of the keys for the iterator since removePeer changes the keys set 1595 Set peerNames new HashSet peers keySet 1596 for Iterator i peerNames iterator i hasNext 1597 removePeer String i next 1598 1599 16 Store refreshed peers and their files 16 1 Peers are stored alphabetically 16 2 final SortedMap newPeers new TreeMap 16 3 Set filesOfAPeer new HashSet 16 4 16 5 try 16 6 Get all files 16 7 impromptuServer setPath Utils fileNameToURL 16 8 edu uci isr impromptu common Configuration ROOT NAME 16 9 String files impromptuServer list 161 for int i files null i files length i 1611 String path Utils fileNameToURL files i 1612 Enumeration e impromptuServer propfindMethod path ourProperties 1613 if e hasMoreElements 1614 Get properties of a file 1615 String owner String e nextElement 1616 if no owner local peer becomes the owner 1617 This owner is the name we set Slide maintains a WebDAV 1618 owner property as users TheUserWeCreated 1619 if owner equals 162 owner userName 1621 String radius String e nextElement 1622 if no radius use a secure radius 1623 if radius equals 1624 radius String valueOf PieUtils getDefaultSecureRadius 1625 String angle String e nextElement 1626 if no angle use a random angle 1627 if angle equals 1628 angle String valueOf Math random 1629 163 if newPeers containsKey owner 1631 We have seen this peer 1632 filesOfAPeer Set newPeers get owner 1633 1634 else 1635 Find a new peer 1636 filesOfAPeer new HashSet 1637 newPeers put owner filesOfAPeer 1638 1639 Remember this file 164 filesOfAPeer add new DotInRepository owner files i radius angle 1641 1642 1643 1644 catch IOException ioe 1645 Utils handleException ioe 1646 1647 1648 if pm null 1649 get peers that have not created any files in the proxy 165 Set ps new HashSet pm getPeers keySet 1651 for Iterator i ps iterator i hasNext 1652 String pName pm getPeer String i next getName 1653 if newPeers containsKey pName 1654 newPeers put pName new HashSet 1655 1656 1657 1658 1659 laterWork invokeLater new Runnable 166 public void run 1661 int peersCount newPeers size 1662 int cardinal 1 1663 for Iterator i newPeers keySet iterator i hasNext 1664 String peerName String i next 1665 boolean isLocal false 1666 if peerName equals userName 1667 isLocal true 1668 1669 167 Old service info for other slices 1671 When running a repository and a pie separately only the 1672 repository is stored in the peer manager 1673 ServiceInfo si pm getPeer peerName getServiceInfo 1674 Color peerColor acquireColor si isLocal peerName localColor 1675 new peer 1676 SlicePeer p new SlicePeer peerName Pie this peersCount 1677 cardinal isLocal peerColor si getHostAddress si true 1678 addPeer p 1679 add new files 168 Set filesOfPeer Set newPeers get peerName 1681 for Iterator j filesOfPeer iterator j hasNext 1682 DotInRepository d DotInRepository j next 1683 if d getOwner equals peerName 1684 p addFile d getName Double parseDouble d getRadius Double parseDouble d getAngle 1685 1686 1687 cardinal 1688 1689 169 1691 1692 1693 1694 Dot used to describe files in the repository Essentially a structure 1695 1696 author Jie Ren 1697 1698 private final static class DotInRepository 1699 private String owner 17 private String name 17 1 private String radius 17 2 private String angle 17 3 17 4 17 5 Create such a structure 17 6 17 7 param owner owner of the file 17 8 param name name of the file 17 9 param radius relative radius of the file 171 param angle relative angle of the file 1711 1712 private DotInRepository String owner String name String radius String angle 1713 owner owner 1714 name name 1715 radius radius 1716 angle angle 1717 1718 1719 172 Get the owner of this dot 1721 return the owner 1722 1723 private String getOwner 1724 return owner 1725 1726 1727 1728 Get the name of this dot 1729 return the name 173 1731 private String getName 1732 return name 1733 1734 1735 1736 Get the radius of this dot 1737 return the radius 1738 1739 private String getRadius 174 return radius 1741 1742 1743 1744 Get the angle of this dot 1745 return the angle 1746 1747 private String getAngle 1748 return angle 1749 175 1751 1752 1753 1754 Set the local user name of this pie 1755 param userName the local user name 1756 1757 public void setName String userName 1758 userName userName 1759 176 1761 private String localColor 1762 1763 Set the color for the local peer 1764 1765 param localColor a string for the local color 1766 1767 public void setLocalColor String localColor 1768 ISSUE protocol should put to JmDNS so newbies can find my color 1769 localColor localColor 177 if localPeer null 1771 Map colorEvent new HashMap 1772 colorEvent put MessageProcessor ATTR PEER NAME 1773 userName 1774 colorEvent put MessageProcessor ATTR ACTION 1775 MessageProcessor ACTION COLOR 1776 colorEvent put MessageProcessor ATTR COLOR 1777 localColor 1778 pm sendMessage colorEvent 1779 178 1781 1782 1783 Get the color for the local peer 1784 1785 return the color for the local peer 1786 1787 public String getLocalColor 1788 return localColor 1789 179 1791 1792 Get the local user name 1793 return the local user name 1794 1795 public String getName 1796 return userName 1797 1798 1799 18 Get the character of the pie 18 1 return an empty string when running as part of a peer and the 18 2 PIE CHARACTER string when running as an independent pie 18 3 18 4 public String getCharacter 18 5 String result 18 6 if integratePie 18 7 result edu uci isr impromptu common Configuration PIE CHARACTER 18 8 18 9 return result 181 1811 whether to wait for admissions from others 1812 private boolean waitForAdmission false 1813 one time list used to notify updater what it should do when it is set 1814 private List toUpdater new ArrayList 1815 1816 Create a peer when a new peer joins 1817 1818 param si the service info of the newly appeared peer 1819 return a newly created peer 182 1821 public synchronized Peer createAPeer final ServiceInfo si 1822 String serviceType si getType 1823 if serviceType equalsIgnoreCase edu uci isr impromptu repository Configuration IMPROMPTU SERVICE TYPE 1824 return null 1825 1826 If somebody else the ProxyFilter starts peer manager 1827 our initialization may be incomplete so store this for updater 1828 if updater null 1829 toUpdater add si 183 return null 1831 1832 1833 String peerCharacterName si getName 1834 final String peerName Utils getPeerUserName peerCharacterName 1835 1836 Peer result null 1837 if peers containsKey peerName 1838 figure out the new peers count and cardinal 1839 so any peer created should be in the map 184 int peersCount peers size 1 1841 used to count the final cardinal which is requred by invokeLater 1842 int cardinalCalc 1 1843 synchronized peers 1844 for Iterator i peers keySet iterator i hasNext cardinalCalc 1845 String othersName String i next 1846 the new peer will be alphabetically inserted 1847 if othersName compareToIgnoreCase peerName 1848 break 1849 185 1851 final int cardinal cardinalCalc 1852 final boolean isLocal peerName equals userName 1853 Get the color 1854 Color c acquireColor si isLocal peerName localColor 1855 construct a peer with no svg content so we can return 1856 final SlicePeer p new SlicePeer peerName Pie this peersCount 1857 cardinal isLocal c 1858 si getHostAddress si false 1859 addPeer p 186 1861 The p is not put into peers map yet 1862 laterWork invokeLater new Runnable 1863 public void run 1864 synchronized Pie this serialize access to the pie 1865 adjust the old ones first so the display is smooth 1866 cannot use peers count above since time flies 1867 int peersCount peers size 1868 int index 1 1869 synchronized peers 187 for Iterator i peers keySet iterator i hasNext 1871 index 1872 String peerName String i next 1873 SlicePeer sp SlicePeer peers get peerName 1874 Set position for everybody If a slice has not been 1875 created in SVG then the position will be remembered 1876 sp setPosition peersCount index 1877 1878 1879 now create the real svg content using the final position 188 p create 1881 1882 if waitForAdmission 1883 wait 1 seconds for being admitted by the other 1884 Boolean admitted Boolean admittedBy get peerName 1885 int retry 1886 int maxRetry 1 1887 while admitted null admitted booleanValue false 1888 retry maxRetry 1889 try 189 Thread sleep 1 1891 1892 catch InterruptedException ie 1893 1894 retry 1895 admitted Boolean admittedBy get peerName 1896 1897 if retry maxRetry 1898 if not admitted we will not try to get the files 1899 Even if we do we will not get anything back 19 TODO security feature to notify the status of admission 19 1 log debug peerName has not admitted userName 19 2 return 19 3 19 4 19 5 19 6 If just as a passive viewer then do not connect to the proxy 19 7 if connectingToProxy 19 8 return 19 9 191 Get files for this peer 1911 Adpated from refresh 1912 refresh probably can just call createAPeer multiple 1913 times but this list is expensive and this method 1914 is rather dynamic because of SVG 1915 Set filesOfPeer new HashSet 1916 try 1917 new home for connectoToProxy 1918 if connectedToProxy 1919 connectToProxy 192 1921 Get all files 1922 impromptuServer setPath Utils fileNameToURL 1923 edu uci isr impromptu common Configuration ROOT NAME 1924 String files impromptuServer list 1925 for int i files null i files length i 1926 String path Utils fileNameToURL files i 1927 Enumeration e impromptuServer propfindMethod path ourProperties 1928 if e hasMoreElements 1929 String owner String e nextElement 193 if owner equals peerName 1931 String radius String e nextElement 1932 if no radius use a secure radius 1933 if radius equals 1934 radius String valueOf 1935 PieUtils getDefaultSecureRadius 1936 String angle String e nextElement 1937 if no angle use a random angle 1938 if angle equals 1939 angle String valueOf Math random 194 1941 filesOfPeer add new DotInRepository 1942 owner files i radius angle 1943 1944 1945 1946 1947 catch IOException ioe 1948 Utils handleException ioe 1949 195 add new files 1951 for Iterator j filesOfPeer iterator j hasNext 1952 DotInRepository d DotInRepository j next 1953 if d getOwner equals peerName 1954 p addFile d getName Double parseDouble d getRadius Double parseDouble d getAngle 1955 1956 1957 1958 1959 196 result p 1961 1962 else 1963 Should not get here 1964 1965 return result 1966 1967 1968 accquire a color from different sources 1969 private static Color acquireColor ServiceInfo si boolean isLocal String peerName String localColor 197 Color c PieUtils getColorFromServiceInfo si 1971 if c null 1972 Nothing from JmDNS 1973 c PieUtils getColorForName peerName 1974 if isLocal Configuration PIE COLOR DEFAULT equals localColor 1975 Color lc PieUtils getColorFromString localColor 1976 if lc null 1977 c lc 1978 1979 198 return c 1981 1982 1983 1984 Perform further initialization after the peer is created and added to 1985 the peer manager 1986 1987 param si the service info of the newly appeared peer 1988 1989 public void afterCreateAPeer ServiceInfo si 199 if si null 1991 1992 1993 1994 Destroy a peer when an old peer leaves 1995 1996 param peerName the name of the left peer 1997 return the old peer 1998 1999 public synchronized Peer destroyAPeer final String peerName 2 ISSUE security naming now if somebody spoofs us by using the same name 2 1 then we are in trouble 2 2 SlicePeer existingPeer SlicePeer peers get peerName 2 3 laterWork invokeLater new Runnable 2 4 public void run 2 5 synchronized Pie this serialize access to the pie 2 6 removePeer peerName 2 7 if peerName equals userName 2 8 reimportPersistent peerName 2 9 2 1 2 11 2 12 2 13 return existingPeer 2 14 2 15 2 16 2 17 Add a new peer 2 18 Let the pie control the addition and not to use the constructor of slice 2 19 because the pie knows the context and concurrency 2 2 param newPeer the new peer 2 21 2 22 public void addPeer SlicePeer newPeer 2 23 String name newPeer getName 2 24 if peers containsKey name 2 25 peers put name newPeer 2 26 if newPeer isLocal 2 27 localPeer newPeer 2 28 admittedBy put name new Boolean true 2 29 2 3 2 31 2 32 2 33 2 34 Remove an existing peer 2 35 param name the name of the existing peer 2 36 2 37 public void removePeer String name 2 38 if peers containsKey name 2 39 SlicePeer existingPeer SlicePeer peers get name 2 4 existingPeer clear 2 41 peers remove name 2 42 2 43 reset peers position 2 44 int peersCount peers size 2 45 int index 1 2 46 synchronized peers 2 47 for Iterator i peers keySet iterator i hasNext index 2 48 String othersName String i next 2 49 adjust other peers 2 5 SlicePeer sp SlicePeer peers get othersName 2 51 sp setPosition peersCount index 2 52 2 53 2 54 2 55 2 56 2 57 2 58 Get a Dot based on the name of a file 2 59 If Dot is a DOM element then it can use DOM cast to get the Dot 2 6 2 61 param fileName the name of the file 2 62 return a Dot that corresponds to the file name null if there is none 2 63 2 64 public Dot getFile String fileName 2 65 synchronized peers 2 66 Iterator i peers values iterator 2 67 while i hasNext 2 68 SlicePeer p SlicePeer i next 2 69 Dot d p getFile fileName 2 7 if d null 2 71 return d 2 72 2 73 2 74 return null 2 75 2 76 2 77 2 78 Import a file 2 79 param file the file to be imported 2 8 return true if the file is imported successfully false if there already 2 81 is a file with the same name 2 82 2 83 private boolean doImportFile File file 2 84 boolean result true 2 85 if getFile file getName null 2 86 Copy the file use OS copy command 2 87 if Platform importFile file 2 88 result false 2 89 showMessageDialog Cannot share file getName n n 2 9 Try rename your file and share it again 2 91 Share file failure JOptionPane ERROR MESSAGE 2 92 2 93 2 94 else 2 95 duplicate file 2 96 result false 2 97 showMessageDialog file getName already exists n n 2 98 You can rename your file and share it again 2 99 Duplicate file name JOptionPane ERROR MESSAGE 21 21 1 return result 21 2 21 3 21 4 21 5 Import a file as a see only file and put it at a random position in the private space 21 6 param file the newly imported file 21 7 21 8 public void importFile final File file 21 9 if doImportFile file 211 final Point p Coordinate calculatePoint PieUtils getDefaultSecureRadius 2111 Configuration RADIUS Math random Configuration CIRCLE 2112 do a pseudo drop at a random private position 2113 doDrop file p 2114 2115 2116 2117 2118 Export modified files that the user wants to save 2119 212 2121 public void exportFile 2122 if localPeer null 2123 List modifiedFiles localPeer getChangedFiles 2124 for Iterator i modifiedFiles iterator i hasNext 2125 Dot d Dot i next 2126 if JOptionPane showConfirmDialog frame d getFileName is modified 2127 Do you want to save it Save Changed Files JOptionPane YES NO OPTION 2128 JOptionPane YES OPTION 2129 d saveFile 213 2131 2132 2133 2134 2135 2136 Change the dots size 2137 param shrink if true reduce the size by 1 if false enlarge the size by 1 2138 2139 public void changeDotSize boolean shrink 214 synchronized peers 2141 for Iterator i peers values iterator i hasNext 2142 SlicePeer p SlicePeer i next 2143 p changeDotSize shrink 2144 2145 2146 repaint 2147 2148 2149 The main funciton 215 Platform independent SVG related logic should be put above 2151 Platform specific Swing vs SWT logic should be put below 2152 ISSUE SWT maybe refactor this to InteractiveSVGCanvas 2153 public static void mainSWT String args 2154 Set the nice Java 2D registry 2155 HashMap hints new HashMap 1 2156 hints put RenderingHints KEY ANTIALIASING RenderingHints VALUE ANTIALIAS ON 2157 J2DRegistry setHints hints 2158 2159 create the shell 216 final Shell shell new Shell 2161 Display display shell getDisplay 2162 shell setLayout new FillLayout 2163 shell setText Configuration TITLE 2164 2165 boolean integratePie args length 2166 create the pie based on the template 2167 final InteractiveSVGCanvas canvas new InteractiveSVGCanvas shell 2168 file localhost System getProperty user dir template svg 2169 canvas setBackground display getSystemColor SWT COLOR GRAY 217 canvas setSize int Configuration getSize getWidth 2171 int Configuration getSize getWidth 2172 final Pie p new Pie 2173 p setDocument canvas getDocument 2174 p setName Utils getImpromptuName 2175 p setLocalColor Configuration getPieColor 2176 p setImpromptuProxy Configuration getImpromptuProxy 2177 p setImpromptuDrive Configuration getDestinationDrive 2178 p setUpdateManager canvas getUpdateManager 2179 do not connect to proxy Just as a viewer 218 p setConnectToProxy false 2181 connect pie and canvas 2182 p setDocument canvas getDocument 2183 p setUpdateManager canvas getUpdateManager 2184 p startPeerManager integratePie 2185 p repaint 2186 thePie p 2187 2188 Create menu bar 2189 Menu menuBar new Menu shell SWT BAR 219 shell setMenuBar menuBar 2191 Create File menu 2192 MenuItem fileItem new MenuItem menuBar SWT CASCADE 2193 fileItem setText File 2194 Menu fileMenu new Menu shell SWT DROP DOWN 2195 fileItem setMenu fileMenu 2196 Create File Write menu item 2197 MenuItem writeItem new MenuItem fileMenu SWT NULL 2198 writeItem setText Write 2199 handle writing the pie svg 22 writeItem addSelectionListener new SelectionAdapter 22 1 public void widgetSelected SelectionEvent event 22 2 if event null 22 3 try 22 4 PieUtils writeXMLDocumentTo canvas getDocument 22 5 new FileOutputStream pie xml 22 6 22 7 catch FileNotFoundException e 22 8 e printStackTrace 22 9 221 2211 2212 Create File Exit menu item and add selection listener 2213 MenuItem exitItem new MenuItem fileMenu SWT NULL 2214 exitItem setText Exit 2215 exitItem addSelectionListener new SelectionAdapter 2216 public void widgetSelected SelectionEvent event 2217 if event null 2218 shell close 2219 222 2221 Create View menu 2222 MenuItem viewItem new MenuItem menuBar SWT CASCADE 2223 viewItem setText View 2224 Menu viewMenu new Menu shell SWT DROP DOWN 2225 viewItem setMenu viewMenu 2226 Create File Refresh menu item 2227 MenuItem refreshItem new MenuItem viewMenu SWT NULL 2228 refreshItem setText Refresh 2229 handle refresh 223 refreshItem addSelectionListener new SelectionAdapter 2231 public void widgetSelected SelectionEvent event 2232 if event null 2233 p refresh 2234 2235 2236 shell addShellListener new ShellAdapter 2237 public void shellClosed ShellEvent event 2238 if event null 2239 exitSWT shell canvas p 224 2241 2242 2243 Set the correct scale of SVG canvas 2244 double sx Configuration getSize getWidth Configuration SIZE VIEW WIDTH 2245 double sy Configuration getSize getHeight Configuration SIZE VIEW HEIGHT 2246 double s sx sy sx sy 2247 canvas getPaintableManager setScale s 2248 2249 Set the shell size and resize 225 final int marginx 5 2251 final int marginy 65 2252 shell setSize canvas getSize x marginx canvas getSize y marginy 2253 shell addControlListener new ControlAdapter 2254 public void controlResized ControlEvent event 2255 Shell c Shell event widget 2256 double width c getSize x marginx 2257 double height c getSize y marginy 2258 canvas setSize int width int height 2259 double sx width Configuration SIZE VIEW WIDTH 226 double sy height Configuration SIZE VIEW HEIGHT 2261 double s sx sy sx sy 2262 canvas getPaintableManager setScale s 2263 2264 2265 2266 2267 The standard SWT event loop 2268 shell open 2269 while shell isDisposed 227 if display readAndDispatch 2271 display sleep 2272 display dispose 2273 2274 2275 2276 Display a system specifc message dialog 2277 param message the message 2278 param title the title 2279 param messageType the type of message 228 2281 public void showMessageDialog final String message final String title final int messageType 2282 if Platform isMac 2283 JOptionPane showMessageDialog frame message title messageType 2284 2285 else 2286 Mac needs a different thread to show the dialogs 2287 new Thread 2288 public void run 2289 JOptionPane showMessageDialog frame message title messageType 229 2291 start 2292 2293 2294 2295 2296 Display a system specifc message dialog 2297 param message the message 2298 2299 public void showMessageDialog String message 23 showMessageDialog message Information JOptionPane INFORMATION MESSAGE 23 1 23 2 23 3 this is to interface with the proxy filter to accommdate Yancees 23 4 public static Pie thePie null 23 5 public static void mainSwing String args 23 6 Get the JSVGCanvas 23 7 final JSVGCanvas canvas new JSVGCanvas 23 8 canvas setDocumentState JSVGCanvas ALWAYS DYNAMIC 23 9 canvas setBackground Color LIGHT GRAY 231 canvas setPreferredSize Configuration getSize 2311 Load the template 2312 canvas loadSVGDocument file localhost System getProperty user dir template svg 2313 2314 final Pie p new Pie 2315 get the user name 2316 p setName Utils getImpromptuName 2317 p setLocalColor Configuration getPieColor 2318 p setImpromptuProxy Configuration getImpromptuProxy 2319 p setImpromptuDrive Configuration getDestinationDrive 232 thePie p 2321 final boolean integratePie args length 2322 2323 Create a JFrame 2324 final JFrame f new JFrame Configuration TITLE 2325 p setJFrame f 2326 f setIconImage new ImageIcon classes swirllogo gif getImage 2327 2328 final Container c f getContentPane 2329 233 Create the menubar 2331 JMenuBar jmb new JMenuBar 2332 JMenu menuFile new JMenu File 2333 menuFile setMnemonic KeyEvent VK F 2334 JMenu menuView new JMenu View 2335 menuView setMnemonic KeyEvent VK V 2336 JMenu menuOptions new JMenu Options 2337 menuOptions setMnemonic KeyEvent VK O 2338 JMenu menuSecurity new JMenu Security 2339 menuSecurity setMnemonic KeyEvent VK S 234 JMenu menuHelp new JMenu Help 2341 menuHelp setMnemonic KeyEvent VK H 2342 2343 Create a tool bar 2344 final JToolBar toolBar new JToolBar Toolbar 2345 2346 Import 2347 AbstractAction importAction new AbstractAction Import Files to Workspace 2348 public void actionPerformed ActionEvent ae 2349 if ae null 235 only multiple files 2351 final JFileChooser fc new JFileChooser 2352 fc setFileSelectionMode JFileChooser FILES ONLY 2353 fc setMultiSelectionEnabled true 2354 int returnVal fc showOpenDialog f 2355 if returnVal JFileChooser APPROVE OPTION 2356 File files fc getSelectedFiles 2357 for int i i files length i 2358 p importFile files i 2359 236 2361 else 2362 2363 2364 2365 importAction putValue AbstractAction MNEMONIC KEY new Integer KeyEvent VK I 2366 importAction putValue AbstractAction SHORT DESCRIPTION Import local files into the shared workspace 2367 menuFile add new JMenuItem importAction 2368 Export 2369 AbstractAction exportAction new AbstractAction Save My Changed Files 237 public void actionPerformed ActionEvent ae 2371 if ae null 2372 p exportFile 2373 2374 2375 exportAction putValue AbstractAction MNEMONIC KEY new Integer KeyEvent VK S 2376 exportAction putValue AbstractAction SHORT DESCRIPTION Export modified files to hard drive 2377 menuFile add new JMenuItem exportAction 2378 menuFile addSeparator 2379 Exit 238 AbstractAction exitAction new AbstractAction Quit 2381 public void actionPerformed ActionEvent ae 2382 if ae null 2383 exitSwing f canvas p 2384 2385 2386 exitAction putValue AbstractAction MNEMONIC KEY new Integer KeyEvent VK Q 2387 exitAction putValue AbstractAction SHORT DESCRIPTION Quit the application 2388 menuFile add new JMenuItem exitAction 2389 239 Zoom in 2391 AbstractAction zoomInAction AbstractAction canvas getActionMap 2392 get JSVGCanvas ZOOM IN ACTION 2393 zoomInAction putValue Action NAME Zoom In 2394 zoomInAction putValue AbstractAction MNEMONIC KEY new Integer KeyEvent VK I 2395 zoomInAction putValue AbstractAction SHORT DESCRIPTION Zoom In 2396 zoomInAction putValue AbstractAction SMALL ICON new ImageIcon classes zoomin gif 2397 menuView add new JMenuItem zoomInAction 2398 Zoom out 2399 AbstractAction zoomOutAction AbstractAction canvas getActionMap 24 get JSVGCanvas ZOOM OUT ACTION 24 1 zoomOutAction putValue Action NAME Zoom Out 24 2 zoomOutAction putValue AbstractAction MNEMONIC KEY new Integer KeyEvent VK O 24 3 zoomOutAction putValue AbstractAction SHORT DESCRIPTION Zoom out 24 4 zoomOutAction putValue AbstractAction SMALL ICON new ImageIcon classes zoomout gif 24 5 menuView add new JMenuItem zoomOutAction 24 6 menuView addSeparator 24 7 Enlarge dot 24 8 AbstractAction increaseAction new AbstractAction Increase Dot Size 24 9 public void actionPerformed ActionEvent ae 241 if ae null 2411 p changeDotSize false 2412 2413 2414 increaseAction putValue AbstractAction MNEMONIC KEY new Integer KeyEvent VK S 2415 increaseAction putValue AbstractAction SHORT DESCRIPTION Increase the dot size 2416 increaseAction putValue AbstractAction SMALL ICON new ImageIcon classes increasedot gif 2417 menuView add new JMenuItem increaseAction 2418 Shrink dot 2419 AbstractAction decreaseAction new AbstractAction Decrease Dot Size 242 public void actionPerformed ActionEvent ae 2421 if ae null 2422 p changeDotSize true 2423 2424 2425 decreaseAction putValue AbstractAction MNEMONIC KEY new Integer KeyEvent VK D 2426 decreaseAction putValue AbstractAction SHORT DESCRIPTION Decrease the dot size 2427 decreaseAction putValue AbstractAction SMALL ICON new ImageIcon classes decreasedot gif 2428 menuView add new JMenuItem decreaseAction 2429 menuView addSeparator 243 Tip 2431 AbstractAction tipAction new AbstractAction Show Tip Message 2432 public void actionPerformed ActionEvent ae 2433 JCheckBoxMenuItem j JCheckBoxMenuItem ae getSource 2434 p setShowDescription j getState 2435 2436 2437 tipAction putValue AbstractAction MNEMONIC KEY new Integer KeyEvent VK T 2438 tipAction putValue AbstractAction SHORT DESCRIPTION Toggle showing the floating tip window 2439 JCheckBoxMenuItem itemTip new JCheckBoxMenuItem tipAction 244 itemTip setState p getShowDescription 2441 menuView add itemTip 2442 Change the local peer color 2443 AbstractAction colorAction new AbstractAction Change color 2444 public void actionPerformed ActionEvent ae 2445 if ae null 2446 Color c PieUtils getColorFromString p getLocalColor 2447 if c null 2448 c Color BLACK 2449 Color nc JColorChooser showDialog f Choose Peer Color c 245 if nc null 2451 p setLocalColor PieUtils toHexString nc getRed 2452 PieUtils toHexString nc getGreen PieUtils toHexString nc getBlue 2453 2454 2455 2456 colorAction putValue AbstractAction MNEMONIC KEY new Integer KeyEvent VK C 2457 colorAction putValue AbstractAction SHORT DESCRIPTION Change the color of the local peer 2458 menuView add new JMenuItem colorAction 2459 Refresh 246 AbstractAction reloadAction new AbstractAction Refresh 2461 public void actionPerformed ActionEvent ae 2462 if ae null 2463 p refresh 2464 2465 2466 reloadAction putValue AbstractAction MNEMONIC KEY new Integer KeyEvent VK R 2467 reloadAction putValue AbstractAction SHORT DESCRIPTION Refresh the view 2468 Turn off toolbar so we can save space on PDA Making this a savable option would complicate code 2469 AbstractAction toolbarAction new AbstractAction Show Toolbar 247 public void actionPerformed ActionEvent ae 2471 JCheckBoxMenuItem j JCheckBoxMenuItem ae getSource 2472 toolBar setVisible j getState 2473 c doLayout 2474 2475 2476 toolbarAction putValue AbstractAction MNEMONIC KEY new Integer KeyEvent VK T 2477 toolbarAction putValue AbstractAction SHORT DESCRIPTION Toggle showing toolbar 2478 JCheckBoxMenuItem itemToolbar new JCheckBoxMenuItem toolbarAction 2479 itemToolbar setState true 248 Save SVG 2481 AbstractAction writeAction new AbstractAction Save SVG 2482 public void actionPerformed ActionEvent ae 2483 if ae null 2484 try 2485 final JFileChooser fc new JFileChooser 2486 fc setFileSelectionMode JFileChooser FILES ONLY 2487 fc setMultiSelectionEnabled false 2488 int returnVal fc showSaveDialog f 2489 if returnVal JFileChooser APPROVE OPTION 249 PieUtils writeXMLDocumentTo canvas getSVGDocument 2491 new FileOutputStream fc getSelectedFile 2492 2493 2494 catch FileNotFoundException fnf 2495 2496 2497 2498 writeAction putValue AbstractAction MNEMONIC KEY new Integer KeyEvent VK G 2499 writeAction putValue AbstractAction SHORT DESCRIPTION Save the SVG content 25 25 1 if Configuration showExtraMenus 25 2 menuView addSeparator 25 3 menuView add itemToolbar 25 4 menuView addSeparator 25 5 menuView add new JMenuItem reloadAction 25 6 menuView add new JMenuItem writeAction 25 7 25 8 25 9 Get saved options 251 p setShowDescription Configuration getShowDescription 2511 p setFollowDot Configuration getFollowDot 2512 p setDragWithDelegate Configuration getDragWithDelegate 2513 Delegate 2514 AbstractAction delegateAction new AbstractAction Drag with Delegate 2515 public void actionPerformed ActionEvent ae 2516 JCheckBoxMenuItem j JCheckBoxMenuItem ae getSource 2517 p setDragWithDelegate j getState 2518 2519 252 delegateAction putValue AbstractAction MNEMONIC KEY new Integer KeyEvent VK D 2521 delegateAction putValue AbstractAction SHORT DESCRIPTION Toggle dragging with delegate 2522 JCheckBoxMenuItem itemDelegate new JCheckBoxMenuItem delegateAction 2523 itemDelegate setState p getDragWithDelegate 2524 menuOptions add itemDelegate 2525 Follow 2526 AbstractAction followAction new AbstractAction Description Follows Dot 2527 public void actionPerformed ActionEvent ae 2528 JCheckBoxMenuItem j JCheckBoxMenuItem ae getSource 2529 p setFollowDot j getState 253 2531 2532 followAction putValue AbstractAction MNEMONIC KEY new Integer KeyEvent VK N 2533 followAction putValue AbstractAction SHORT DESCRIPTION Toggle following dot with description 2534 JCheckBoxMenuItem itemFollow new JCheckBoxMenuItem followAction 2535 itemFollow setState p getFollowDot 2536 menuOptions add itemFollow 2537 2538 About 2539 AbstractAction aboutAction new AbstractAction About 254 public void actionPerformed ActionEvent ae 2541 if ae null 2542 String title About Impromptu 2543 String copyright Impromptu 2544 edu uci isr impromptu common Configuration VERSION n n 2545 C 2 4 2 5 University of California Irvine 2546 p showMessageDialog copyright title 2547 JOptionPane INFORMATION MESSAGE 2548 2549 255 aboutAction putValue AbstractAction MNEMONIC KEY new Integer KeyEvent VK A 2551 aboutAction putValue AbstractAction SHORT DESCRIPTION Show the version information 2552 menuHelp add new JMenuItem aboutAction 2553 2554 User Manager 2555 AbstractAction userAction new AbstractAction User Manager 2556 public void actionPerformed ActionEvent ae 2557 if ae null 2558 p showUserManager 2559 256 2561 userAction putValue AbstractAction MNEMONIC KEY new Integer KeyEvent VK U 2562 userAction putValue AbstractAction SHORT DESCRIPTION Display user manager 2563 menuSecurity add new JMenuItem userAction 2564 menuSecurity addSeparator 2565 Change proxy 2566 AbstractAction proxyAction new AbstractAction Impromptu URL 2567 public void actionPerformed ActionEvent ae 2568 if ae null 2569 String oldProxy p getImpromptuProxy 257 String newProxy JOptionPane showInputDialog f 2571 Input the new Impromptu URL oldProxy 2572 if newProxy null newProxy equals oldProxy 2573 p setImpromptuProxy newProxy 2574 2575 2576 proxyAction putValue AbstractAction MNEMONIC KEY new Integer KeyEvent VK L 2577 proxyAction putValue AbstractAction SHORT DESCRIPTION Change Impromptu URL 2578 menuSecurity add new JMenuItem proxyAction 2579 Change drive 258 AbstractAction driveAction new AbstractAction Impromptu Drive 2581 public void actionPerformed ActionEvent ae 2582 if ae null 2583 String oldDrive p getImpromptuDrive 2584 String newDrive JOptionPane showInputDialog f 2585 Input the new Impromptu drive oldDrive 2586 if newDrive null newDrive equals oldDrive 2587 p setImpromptuDrive newDrive 2588 2589 259 driveAction putValue AbstractAction MNEMONIC KEY new Integer KeyEvent VK D 2591 driveAction putValue AbstractAction SHORT DESCRIPTION Change Impromptu drive 2592 menuSecurity add new JMenuItem driveAction 2593 Change Password 2594 if args length 1 2595 p setPassword args 2596 AbstractAction passwordAction new AbstractAction Impromptu Password 2597 public void actionPerformed ActionEvent ae 2598 if ae null 2599 String password JOptionPane showInputDialog f 26 Input the new password 26 1 p setPassword password 26 2 26 3 26 4 passwordAction putValue AbstractAction MNEMONIC KEY new Integer KeyEvent VK A 26 5 passwordAction putValue AbstractAction SHORT DESCRIPTION Set the password for Impromptu proxy 26 6 menuSecurity add new JMenuItem passwordAction 26 7 Reconnect 26 8 AbstractAction connectAction new AbstractAction Reconnect to Impromptu 26 9 public void actionPerformed ActionEvent ae 261 if ae null 2611 p connectToProxy 2612 2613 2614 connectAction putValue AbstractAction MNEMONIC KEY new Integer KeyEvent VK R 2615 connectAction putValue AbstractAction SHORT DESCRIPTION Reconnect to Impromptu 2616 menuSecurity add new JMenuItem connectAction 2617 2618 jmb add menuFile 2619 jmb add menuView 262 if Configuration showExtraMenus 2621 jmb add menuOptions 2622 jmb add menuSecurity 2623 2624 jmb add menuHelp 2625 2626 toolBar setRollover true 2627 JButton buttonColor new JButton colorAction 2628 JButton buttonReload new JButton reloadAction 2629 JButton buttonZoomIn new JButton zoomInAction 263 JButton buttonZoomOut new JButton zoomOutAction 2631 JButton buttonIncrease new JButton increaseAction 2632 buttonIncrease setText 2633 JButton buttonDecrease new JButton decreaseAction 2634 buttonDecrease setText 2635 JButton buttonWrite new JButton writeAction 2636 2637 toolBar add buttonZoomIn 2638 toolBar add buttonZoomOut 2639 toolBar add buttonIncrease 264 toolBar add buttonDecrease 2641 if Configuration showExtraMenus 2642 toolBar addSeparator 2643 toolBar add buttonReload 2644 toolBar add buttonColor 2645 toolBar add buttonWrite 2646 2647 2648 Create a status bar 2649 JLabel statusBar new JLabel Drop files to the outside of the pie or your slice of the pie 265 statusBar setBorder BorderFactory createLoweredBevelBorder 2651 2652 c setLayout new BorderLayout 2653 c add toolBar BorderLayout NORTH 2654 c add canvas BorderLayout CENTER 2655 if Configuration showExtraMenus 2656 c add statusBar BorderLayout SOUTH 2657 f addWindowListener new WindowAdapter 2658 public void windowClosing WindowEvent evt 2659 if evt null 266 exitSwing f canvas p 2661 2662 2663 2664 f setLocation Configuration getPosition 2665 f setJMenuBar jmb 2666 2667 f pack 2668 f setVisible true 2669 canvas addGVTTreeRendererListener new GVTTreeRendererAdapter 267 public void gvtRenderingCompleted GVTTreeRendererEvent e 2671 if e null 2672 when this happens we have both a document and an update manager 2673 so we can move on to create our stuff 2674 p setDocument canvas getSVGDocument 2675 p setJSVGCanvas canvas 2676 p setUpdateManager canvas getUpdateManager 2677 2678 set up dropping for pie 2679 new DropTarget canvas DnDConstants ACTION COPY 268 new DropTargetAdapter 2681 public void drop DropTargetDropEvent dtde 2682 p drop dtde 2683 2684 2685 p startPeerManager integratePie 2686 2687 f setVisible true 2688 p repaint 2689 now initialization is done no interest in rendering events 269 canvas removeGVTTreeRendererListener this 2691 2692 2693 2694 2695 2696 Handle exiting 2697 param f the JFrame 2698 param canvas the JSVGCanvas contained in the JFrame 2699 param p the Pie 27 27 1 private static void exitSwing JFrame f JSVGCanvas canvas Pie p 27 2 Configuration saveSwing f canvas p 27 3 p exportFile 27 4 the persistent files will be the changed copy not necessarily the original copy 27 5 p leaveNotify 27 6 27 7 27 8 27 9 Handle exiting 271 param f the SWT Shell 2711 param canvas the SVG canvas 2712 param p the Pie 2713 2714 private static void exitSWT Shell f InteractiveSVGCanvas canvas Pie p 2715 Configuration saveSWT f canvas p 2716 p exportFile 2717 the persistent files will be the changed copy not necessarily the original copy 2718 p leaveNotify 2719 272 2721 The main function dispatches to either SWT or Swing 2722 Swing takes too much space for Pocket PC 2723 SWT is used to make a viewer on Pocket PC 2724 public static void main String args 2725 if args length 1 2726 mainSwing args 2727 2728 else 2729 mainSWT args 273 2731 2732 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.30/xref/edu/uci/isr/impromptu/pie/Pie.html", "title": "pie xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>Pie xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../../../../stylesheet.css\" />\n</head>\n<body>\n<div id=\"overview\"><a href=\"../../../../../../apidocs/edu/uci/isr/impromptu/pie/Pie.html\">View Javadoc</a></div><pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <em class=\"comment\">/*</em>\n<a name=\"2\" href=\"#2\">2</a>   <em class=\"comment\"> * Created on Mar 10, 2005</em>\n<a name=\"3\" href=\"#3\">3</a>   <em class=\"comment\"> *</em>\n<a name=\"4\" href=\"#4\">4</a>   <em class=\"comment\"> */</em>\n<a name=\"5\" href=\"#5\">5</a>   <strong>package</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pie/package-summary.html\">edu.uci.isr.impromptu.pie</a>;\n<a name=\"6\" href=\"#6\">6</a>   \n<a name=\"7\" href=\"#7\">7</a>   <strong>import</strong> java.awt.BorderLayout;\n<a name=\"8\" href=\"#8\">8</a>   <strong>import</strong> java.awt.Color;\n<a name=\"9\" href=\"#9\">9</a>   <strong>import</strong> java.awt.Container;\n<a name=\"10\" href=\"#10\">10</a>  <strong>import</strong> java.awt.Point;\n<a name=\"11\" href=\"#11\">11</a>  <strong>import</strong> java.awt.RenderingHints;\n<a name=\"12\" href=\"#12\">12</a>  <strong>import</strong> java.awt.datatransfer.DataFlavor;\n<a name=\"13\" href=\"#13\">13</a>  <strong>import</strong> java.awt.datatransfer.Transferable;\n<a name=\"14\" href=\"#14\">14</a>  <strong>import</strong> java.awt.dnd.DnDConstants;\n<a name=\"15\" href=\"#15\">15</a>  <strong>import</strong> java.awt.dnd.DropTarget;\n<a name=\"16\" href=\"#16\">16</a>  <strong>import</strong> java.awt.dnd.DropTargetAdapter;\n<a name=\"17\" href=\"#17\">17</a>  <strong>import</strong> java.awt.dnd.DropTargetDropEvent;\n<a name=\"18\" href=\"#18\">18</a>  <strong>import</strong> java.awt.event.ActionEvent;\n<a name=\"19\" href=\"#19\">19</a>  <strong>import</strong> java.awt.event.KeyEvent;\n<a name=\"20\" href=\"#20\">20</a>  <strong>import</strong> java.awt.event.WindowAdapter;\n<a name=\"21\" href=\"#21\">21</a>  <strong>import</strong> java.awt.event.WindowEvent;\n<a name=\"22\" href=\"#22\">22</a>  <strong>import</strong> java.awt.geom.AffineTransform;\n<a name=\"23\" href=\"#23\">23</a>  <strong>import</strong> java.awt.geom.NoninvertibleTransformException;\n<a name=\"24\" href=\"#24\">24</a>  <strong>import</strong> java.awt.geom.Point2D;\n<a name=\"25\" href=\"#25\">25</a>  <strong>import</strong> java.io.File;\n<a name=\"26\" href=\"#26\">26</a>  <strong>import</strong> java.io.FileNotFoundException;\n<a name=\"27\" href=\"#27\">27</a>  <strong>import</strong> java.io.FileOutputStream;\n<a name=\"28\" href=\"#28\">28</a>  <strong>import</strong> java.io.IOException;\n<a name=\"29\" href=\"#29\">29</a>  <strong>import</strong> java.util.ArrayList;\n<a name=\"30\" href=\"#30\">30</a>  <strong>import</strong> java.util.Collections;\n<a name=\"31\" href=\"#31\">31</a>  <strong>import</strong> java.util.Enumeration;\n<a name=\"32\" href=\"#32\">32</a>  <strong>import</strong> java.util.HashMap;\n<a name=\"33\" href=\"#33\">33</a>  <strong>import</strong> java.util.HashSet;\n<a name=\"34\" href=\"#34\">34</a>  <strong>import</strong> java.util.Hashtable;\n<a name=\"35\" href=\"#35\">35</a>  <strong>import</strong> java.util.Iterator;\n<a name=\"36\" href=\"#36\">36</a>  <strong>import</strong> java.util.List;\n<a name=\"37\" href=\"#37\">37</a>  <strong>import</strong> java.util.Map;\n<a name=\"38\" href=\"#38\">38</a>  <strong>import</strong> java.util.Set;\n<a name=\"39\" href=\"#39\">39</a>  <strong>import</strong> java.util.SortedMap;\n<a name=\"40\" href=\"#40\">40</a>  <strong>import</strong> java.util.TreeMap;\n<a name=\"41\" href=\"#41\">41</a>  <strong>import</strong> java.util.Vector;\n<a name=\"42\" href=\"#42\">42</a>  \n<a name=\"43\" href=\"#43\">43</a>  <strong>import</strong> javax.jmdns.ServiceInfo;\n<a name=\"44\" href=\"#44\">44</a>  <strong>import</strong> javax.swing.AbstractAction;\n<a name=\"45\" href=\"#45\">45</a>  <strong>import</strong> javax.swing.Action;\n<a name=\"46\" href=\"#46\">46</a>  <strong>import</strong> javax.swing.BorderFactory;\n<a name=\"47\" href=\"#47\">47</a>  <strong>import</strong> javax.swing.ImageIcon;\n<a name=\"48\" href=\"#48\">48</a>  <strong>import</strong> javax.swing.JButton;\n<a name=\"49\" href=\"#49\">49</a>  <strong>import</strong> javax.swing.JCheckBoxMenuItem;\n<a name=\"50\" href=\"#50\">50</a>  <strong>import</strong> javax.swing.JColorChooser;\n<a name=\"51\" href=\"#51\">51</a>  <strong>import</strong> javax.swing.JFileChooser;\n<a name=\"52\" href=\"#52\">52</a>  <strong>import</strong> javax.swing.JFrame;\n<a name=\"53\" href=\"#53\">53</a>  <strong>import</strong> javax.swing.JLabel;\n<a name=\"54\" href=\"#54\">54</a>  <strong>import</strong> javax.swing.JMenu;\n<a name=\"55\" href=\"#55\">55</a>  <strong>import</strong> javax.swing.JMenuBar;\n<a name=\"56\" href=\"#56\">56</a>  <strong>import</strong> javax.swing.JMenuItem;\n<a name=\"57\" href=\"#57\">57</a>  <strong>import</strong> javax.swing.JOptionPane;\n<a name=\"58\" href=\"#58\">58</a>  <strong>import</strong> javax.swing.JPopupMenu;\n<a name=\"59\" href=\"#59\">59</a>  <strong>import</strong> javax.swing.JToolBar;\n<a name=\"60\" href=\"#60\">60</a>  \n<a name=\"61\" href=\"#61\">61</a>  <strong>import</strong> org.apache.batik.bridge.UpdateManager;\n<a name=\"62\" href=\"#62\">62</a>  <strong>import</strong> org.apache.batik.dom.events.DOMKeyEvent;\n<a name=\"63\" href=\"#63\">63</a>  <strong>import</strong> org.apache.batik.dom.events.DOMMouseEvent;\n<a name=\"64\" href=\"#64\">64</a>  <strong>import</strong> org.apache.batik.dom.svg.SVGDOMImplementation;\n<a name=\"65\" href=\"#65\">65</a>  <strong>import</strong> org.apache.batik.swing.JSVGCanvas;\n<a name=\"66\" href=\"#66\">66</a>  <strong>import</strong> org.apache.batik.swing.gvt.GVTTreeRendererAdapter;\n<a name=\"67\" href=\"#67\">67</a>  <strong>import</strong> org.apache.batik.swing.gvt.GVTTreeRendererEvent;\n<a name=\"68\" href=\"#68\">68</a>  <strong>import</strong> org.apache.batik.util.RunnableQueue;\n<a name=\"69\" href=\"#69\">69</a>  <strong>import</strong> org.apache.batik.util.SVGConstants;\n<a name=\"70\" href=\"#70\">70</a>  <strong>import</strong> org.apache.commons.httpclient.HttpURL;\n<a name=\"71\" href=\"#71\">71</a>  <strong>import</strong> org.apache.commons.logging.Log;\n<a name=\"72\" href=\"#72\">72</a>  <strong>import</strong> org.apache.commons.logging.LogFactory;\n<a name=\"73\" href=\"#73\">73</a>  <strong>import</strong> org.apache.webdav.lib.PropertyName;\n<a name=\"74\" href=\"#74\">74</a>  <strong>import</strong> org.apache.webdav.lib.WebdavResource;\n<a name=\"75\" href=\"#75\">75</a>  <strong>import</strong> org.apache.webdav.lib.methods.DepthSupport;\n<a name=\"76\" href=\"#76\">76</a>  <strong>import</strong> org.eclipse.swt.SWT;\n<a name=\"77\" href=\"#77\">77</a>  <strong>import</strong> org.eclipse.swt.events.ControlAdapter;\n<a name=\"78\" href=\"#78\">78</a>  <strong>import</strong> org.eclipse.swt.events.ControlEvent;\n<a name=\"79\" href=\"#79\">79</a>  <strong>import</strong> org.eclipse.swt.events.SelectionAdapter;\n<a name=\"80\" href=\"#80\">80</a>  <strong>import</strong> org.eclipse.swt.events.SelectionEvent;\n<a name=\"81\" href=\"#81\">81</a>  <strong>import</strong> org.eclipse.swt.events.ShellAdapter;\n<a name=\"82\" href=\"#82\">82</a>  <strong>import</strong> org.eclipse.swt.events.ShellEvent;\n<a name=\"83\" href=\"#83\">83</a>  <strong>import</strong> org.eclipse.swt.layout.FillLayout;\n<a name=\"84\" href=\"#84\">84</a>  <strong>import</strong> org.eclipse.swt.widgets.Display;\n<a name=\"85\" href=\"#85\">85</a>  <strong>import</strong> org.eclipse.swt.widgets.Menu;\n<a name=\"86\" href=\"#86\">86</a>  <strong>import</strong> org.eclipse.swt.widgets.MenuItem;\n<a name=\"87\" href=\"#87\">87</a>  <strong>import</strong> org.eclipse.swt.widgets.Shell;\n<a name=\"88\" href=\"#88\">88</a>  <strong>import</strong> org.holongate.j2d.J2DRegistry;\n<a name=\"89\" href=\"#89\">89</a>  <strong>import</strong> org.w3c.dom.Element;\n<a name=\"90\" href=\"#90\">90</a>  <strong>import</strong> org.w3c.dom.Text;\n<a name=\"91\" href=\"#91\">91</a>  <strong>import</strong> org.w3c.dom.events.Event;\n<a name=\"92\" href=\"#92\">92</a>  <strong>import</strong> org.w3c.dom.events.EventListener;\n<a name=\"93\" href=\"#93\">93</a>  <strong>import</strong> org.w3c.dom.events.EventTarget;\n<a name=\"94\" href=\"#94\">94</a>  <strong>import</strong> org.w3c.dom.svg.SVGDocument;\n<a name=\"95\" href=\"#95\">95</a>  \n<a name=\"96\" href=\"#96\">96</a>  <strong>import</strong> edu.uci.isr.impromptu.common.MessageProcessor;\n<a name=\"97\" href=\"#97\">97</a>  <strong>import</strong> edu.uci.isr.impromptu.common.Peer;\n<a name=\"98\" href=\"#98\">98</a>  <strong>import</strong> edu.uci.isr.impromptu.common.PeerManager;\n<a name=\"99\" href=\"#99\">99</a>  <strong>import</strong> edu.uci.isr.impromptu.common.PeerOwner;\n<a name=\"100\" href=\"#100\">100</a> <strong>import</strong> edu.uci.isr.impromptu.common.Utils;\n<a name=\"101\" href=\"#101\">101</a> <strong>import</strong> edu.uci.isr.impromptu.security.ACLManager;\n<a name=\"102\" href=\"#102\">102</a> <strong>import</strong> edu.uci.isr.impromptu.security.SecurityConstants;\n<a name=\"103\" href=\"#103\">103</a> <strong>import</strong> edu.uci.isr.impromptu.security.UserManager;\n<a name=\"104\" href=\"#104\">104</a> \n<a name=\"105\" href=\"#105\">105</a> <em>/**<em>*</em></em>\n<a name=\"106\" href=\"#106\">106</a> <em> * This is the Pie client for the proxy. It connects to the Proxy,</em>\n<a name=\"107\" href=\"#107\">107</a> <em> * displays available files, using special properties (owner, level, position) it finds.</em>\n<a name=\"108\" href=\"#108\">108</a> <em> * It can also change these properties, when the user drags files.</em>\n<a name=\"109\" href=\"#109\">109</a> <em> * It allows user open files, using simple start/open command.</em>\n<a name=\"110\" href=\"#110\">110</a> <em> * The whole pie assumes a file with a certain name only belongs to one peer, so two</em>\n<a name=\"111\" href=\"#111\">111</a> <em> * peers cannot have files with the same name.  </em>\n<a name=\"112\" href=\"#112\">112</a> <em> * </em>\n<a name=\"113\" href=\"#113\">113</a> <em> * @author Jie Ren</em>\n<a name=\"114\" href=\"#114\">114</a> <em> */</em>\n<a name=\"115\" href=\"#115\">115</a> <strong>public</strong> <strong>class</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pie/Pie.html\">Pie</a> implements EventListener, <a href=\"../../../../../edu/uci/isr/impromptu/common/PeerOwner.html\">PeerOwner</a> {\n<a name=\"116\" href=\"#116\">116</a>     <strong>private</strong> <strong>static</strong> Log \t\tlog = LogFactory.getLog(Pie.<strong>class</strong>);\n<a name=\"117\" href=\"#117\">117</a> \n<a name=\"118\" href=\"#118\">118</a>     <em>/**<em>* </em></em>\n<a name=\"119\" href=\"#119\">119</a> <em>     * the namespace prefix for SVG </em>\n<a name=\"120\" href=\"#120\">120</a> <em>     */</em>\n<a name=\"121\" href=\"#121\">121</a>     <strong>public</strong> <strong>static</strong> String SVG_NS = SVGDOMImplementation.SVG_NAMESPACE_URI;\n<a name=\"122\" href=\"#122\">122</a>     <em class=\"comment\">//</em>\n<a name=\"123\" href=\"#123\">123</a>     <em class=\"comment\">// The element ids for the SVG Document </em>\n<a name=\"124\" href=\"#124\">124</a>     <em class=\"comment\">//</em>\n<a name=\"125\" href=\"#125\">125</a>     <em>/**<em>*</em></em>\n<a name=\"126\" href=\"#126\">126</a> <em>     * The text path for a peer's name </em>\n<a name=\"127\" href=\"#127\">127</a> <em>     */</em>\n<a name=\"128\" href=\"#128\">128</a>     <strong>public</strong> <strong>static</strong> <strong>final</strong> String ID_TEXT_PATH = <span class=\"string\">\"textPath\"</span>;\n<a name=\"129\" href=\"#129\">129</a>     <em>/**<em>*</em></em>\n<a name=\"130\" href=\"#130\">130</a> <em>     * The text template for a peer's name </em>\n<a name=\"131\" href=\"#131\">131</a> <em>     */</em>\n<a name=\"132\" href=\"#132\">132</a>     <strong>public</strong> <strong>static</strong> <strong>final</strong> String ID_TEXT_TEMPLATE = <span class=\"string\">\"textTemplate\"</span>;\n<a name=\"133\" href=\"#133\">133</a>     <em>/**<em>*</em></em>\n<a name=\"134\" href=\"#134\">134</a> <em>     * The private space: background</em>\n<a name=\"135\" href=\"#135\">135</a> <em>     */</em>\n<a name=\"136\" href=\"#136\">136</a>     <strong>public</strong> <strong>static</strong> <strong>final</strong> String ID_PRIVATE_SPACE = <span class=\"string\">\"privateSpace\"</span>;\n<a name=\"137\" href=\"#137\">137</a>     <em>/**<em>*</em></em>\n<a name=\"138\" href=\"#138\">138</a> <em>     * The root of all peers: rings</em>\n<a name=\"139\" href=\"#139\">139</a> <em>     */</em>\n<a name=\"140\" href=\"#140\">140</a>     <strong>private</strong> <strong>static</strong> <strong>final</strong> String ID_PEERS = <span class=\"string\">\"peersGroup\"</span>;\n<a name=\"141\" href=\"#141\">141</a>     <em>/**<em>*</em></em>\n<a name=\"142\" href=\"#142\">142</a> <em>     * The persistent space: center circle</em>\n<a name=\"143\" href=\"#143\">143</a> <em>     */</em>\n<a name=\"144\" href=\"#144\">144</a>     <strong>public</strong> <strong>static</strong> <strong>final</strong> String ID_PERSISTENT_SPACE = <span class=\"string\">\"persistentSpace\"</span>;\n<a name=\"145\" href=\"#145\">145</a>     <em>/**<em>*</em></em>\n<a name=\"146\" href=\"#146\">146</a> <em>     * The element used for shading local peer </em>\n<a name=\"147\" href=\"#147\">147</a> <em>     */</em>\n<a name=\"148\" href=\"#148\">148</a>     <strong>public</strong> <strong>static</strong> <strong>final</strong> String ID_LOCAL_MASK = <span class=\"string\">\"localMask\"</span>;\n<a name=\"149\" href=\"#149\">149</a>     <em>/**<em>*</em></em>\n<a name=\"150\" href=\"#150\">150</a> <em>     * The element used for shading local persistent </em>\n<a name=\"151\" href=\"#151\">151</a> <em>     */</em>\n<a name=\"152\" href=\"#152\">152</a>     <strong>public</strong> <strong>static</strong> <strong>final</strong> String ID_LOCAL_MASK_PERSISTENT = <span class=\"string\">\"localMaskPersistent\"</span>;\n<a name=\"153\" href=\"#153\">153</a>     <em>/**<em>*</em></em>\n<a name=\"154\" href=\"#154\">154</a> <em>     * The g element used for dragging a file dot </em>\n<a name=\"155\" href=\"#155\">155</a> <em>     */</em>\n<a name=\"156\" href=\"#156\">156</a>     <strong>public</strong> <strong>static</strong> <strong>final</strong> String ID_DRAGGING_DELEGATE = <span class=\"string\">\"draggingDelegate\"</span>;\n<a name=\"157\" href=\"#157\">157</a>     <em>/**<em>*</em></em>\n<a name=\"158\" href=\"#158\">158</a> <em>     * The circle element used for dragging a file dot </em>\n<a name=\"159\" href=\"#159\">159</a> <em>     */</em>\n<a name=\"160\" href=\"#160\">160</a>     <strong>public</strong> <strong>static</strong> <strong>final</strong> String ID_DRAGGING_CIRCLE = <span class=\"string\">\"draggingCircle\"</span>;\n<a name=\"161\" href=\"#161\">161</a>     <em>/**<em>*</em></em>\n<a name=\"162\" href=\"#162\">162</a> <em>     * The text element used for dragging a file dot </em>\n<a name=\"163\" href=\"#163\">163</a> <em>     */</em>\n<a name=\"164\" href=\"#164\">164</a>     <strong>public</strong> <strong>static</strong> <strong>final</strong> String ID_DRAGGING_TEXT = <span class=\"string\">\"draggingText\"</span>;\n<a name=\"165\" href=\"#165\">165</a>     <em>/**<em>*</em></em>\n<a name=\"166\" href=\"#166\">166</a> <em>     * File Description</em>\n<a name=\"167\" href=\"#167\">167</a> <em>     */</em>\n<a name=\"168\" href=\"#168\">168</a>     <strong>private</strong> <strong>static</strong> <strong>final</strong> String ID_FILE_DESCRIPTION = <span class=\"string\">\"fileDescription\"</span>;\n<a name=\"169\" href=\"#169\">169</a>     <em>/**<em>*</em></em>\n<a name=\"170\" href=\"#170\">170</a> <em>     * File Description: name</em>\n<a name=\"171\" href=\"#171\">171</a> <em>     */</em>\n<a name=\"172\" href=\"#172\">172</a>     <strong>private</strong> <strong>static</strong> <strong>final</strong> String ID_FILE_NAME = <span class=\"string\">\"fileName\"</span>;\n<a name=\"173\" href=\"#173\">173</a>     <em>/**<em>*</em></em>\n<a name=\"174\" href=\"#174\">174</a> <em>     * File Description: permission</em>\n<a name=\"175\" href=\"#175\">175</a> <em>     */</em>\n<a name=\"176\" href=\"#176\">176</a>     <strong>private</strong> <strong>static</strong> <strong>final</strong> String ID_FILE_PERMISSION = <span class=\"string\">\"filePermission\"</span>;\n<a name=\"177\" href=\"#177\">177</a>     <em>/**<em>*</em></em>\n<a name=\"178\" href=\"#178\">178</a> <em>     * Visible file description</em>\n<a name=\"179\" href=\"#179\">179</a> <em>     */</em>\n<a name=\"180\" href=\"#180\">180</a>     <strong>public</strong> <strong>static</strong> <strong>final</strong> String VISIBILITY_VISIBLE = <span class=\"string\">\"visibility:visible\"</span>;\n<a name=\"181\" href=\"#181\">181</a>     <em>/**<em>*</em></em>\n<a name=\"182\" href=\"#182\">182</a> <em>     * Hidden file description</em>\n<a name=\"183\" href=\"#183\">183</a> <em>     */</em>\n<a name=\"184\" href=\"#184\">184</a>     <strong>public</strong> <strong>static</strong> <strong>final</strong> String VISIBILITY_HIDDEN = <span class=\"string\">\"visibility:hidden\"</span>;\n<a name=\"185\" href=\"#185\">185</a>     <em>/**<em>*</em></em>\n<a name=\"186\" href=\"#186\">186</a> <em>     * The root of all files</em>\n<a name=\"187\" href=\"#187\">187</a> <em>     */</em>\n<a name=\"188\" href=\"#188\">188</a>     <strong>public</strong> <strong>static</strong> <strong>final</strong> String ID_FILES = <span class=\"string\">\"filesGroup\"</span>;\n<a name=\"189\" href=\"#189\">189</a> \n<a name=\"190\" href=\"#190\">190</a>     <em>/**<em>*</em></em>\n<a name=\"191\" href=\"#191\">191</a> <em>     * Our namespace URI for our properties</em>\n<a name=\"192\" href=\"#192\">192</a> <em>     */</em>\n<a name=\"193\" href=\"#193\">193</a>     <strong>public</strong> <strong>static</strong> <strong>final</strong> String NS_PREFIX = <span class=\"string\">\"I\"</span>;\n<a name=\"194\" href=\"#194\">194</a>     <strong>public</strong> <strong>static</strong> <strong>final</strong> String NS_URI = <span class=\"string\">\"http://www.isr.uci.edu/projects/swirl\"</span>;\n<a name=\"195\" href=\"#195\">195</a>     <em>/**<em>*</em></em>\n<a name=\"196\" href=\"#196\">196</a> <em>     * The owner property</em>\n<a name=\"197\" href=\"#197\">197</a> <em>     */</em>\n<a name=\"198\" href=\"#198\">198</a>     <strong>public</strong> <strong>static</strong> <strong>final</strong> String PROPERTY_OWNER = <span class=\"string\">\"owner\"</span>;\n<a name=\"199\" href=\"#199\">199</a>     <em>/**<em>*</em></em>\n<a name=\"200\" href=\"#200\">200</a> <em>     * The relative radius property</em>\n<a name=\"201\" href=\"#201\">201</a> <em>     */</em>\n<a name=\"202\" href=\"#202\">202</a>     <strong>public</strong> <strong>static</strong> <strong>final</strong> String PROPERTY_RADIUS = <span class=\"string\">\"radius\"</span>;\n<a name=\"203\" href=\"#203\">203</a>     <em>/**<em>*</em></em>\n<a name=\"204\" href=\"#204\">204</a> <em>     * The relative angle property</em>\n<a name=\"205\" href=\"#205\">205</a> <em>     */</em>\n<a name=\"206\" href=\"#206\">206</a>     <strong>public</strong> <strong>static</strong> <strong>final</strong> String PROPERTY_ANGLE = <span class=\"string\">\"angle\"</span>;\n<a name=\"207\" href=\"#207\">207</a>     \n<a name=\"208\" href=\"#208\">208</a>     <em class=\"comment\">//</em>\n<a name=\"209\" href=\"#209\">209</a>     <em class=\"comment\">// The DOM structure for the UI</em>\n<a name=\"210\" href=\"#210\">210</a>     <em class=\"comment\">//</em>\n<a name=\"211\" href=\"#211\">211</a>     <em class=\"comment\">// The document</em>\n<a name=\"212\" href=\"#212\">212</a>     <strong>private</strong> SVGDocument document;\n<a name=\"213\" href=\"#213\">213</a>     \n<a name=\"214\" href=\"#214\">214</a>     <em class=\"comment\">// Spaces</em>\n<a name=\"215\" href=\"#215\">215</a>     <em class=\"comment\">// Center: persistent</em>\n<a name=\"216\" href=\"#216\">216</a>     <strong>private</strong> Element persistentSpace;\n<a name=\"217\" href=\"#217\">217</a>     <em class=\"comment\">// Background: private</em>\n<a name=\"218\" href=\"#218\">218</a>     <strong>private</strong> Element <strong>private</strong>Space;\n<a name=\"219\" href=\"#219\">219</a> \n<a name=\"220\" href=\"#220\">220</a>     <em class=\"comment\">// Peers</em>\n<a name=\"221\" href=\"#221\">221</a>     <strong>private</strong> Element peersGroup;\n<a name=\"222\" href=\"#222\">222</a>     <em class=\"comment\">//  This may not start, if the Pie is bound with the Repository to share</em>\n<a name=\"223\" href=\"#223\">223</a>     <em class=\"comment\">//\t\tYancees. </em>\n<a name=\"224\" href=\"#224\">224</a>     <em class=\"comment\">//  When it starts, it listens to both Pie and Repository apperance. The </em>\n<a name=\"225\" href=\"#225\">225</a>     <em class=\"comment\">//\t\tRepository is not interested in Pie events. </em>\n<a name=\"226\" href=\"#226\">226</a>     <em class=\"comment\">//\tThe peers map below only contains SlicePeers: presentation vs communication</em>\n<a name=\"227\" href=\"#227\">227</a>     <strong>private</strong>\tPeerManager\t\tpm;\t\t\t\n<a name=\"228\" href=\"#228\">228</a>     <strong>private</strong> ServiceInfo \tmyServiceInfo;\n<a name=\"229\" href=\"#229\">229</a>     <strong>private</strong> Set\t\t\t\tinterestedServices = <strong>new</strong> HashSet();\n<a name=\"230\" href=\"#230\">230</a>     <em class=\"comment\">// for quick access, an aux structure </em>\n<a name=\"231\" href=\"#231\">231</a>     <em class=\"comment\">// all peers in this map are slice peer</em>\n<a name=\"232\" href=\"#232\">232</a>     <em class=\"comment\">// This probably could be merged with the peer manager's peers map,</em>\n<a name=\"233\" href=\"#233\">233</a>     <em class=\"comment\">//\t\tbut the synchronization/concurrency cost might be more than its worth</em>\n<a name=\"234\" href=\"#234\">234</a>     <strong>private</strong> SortedMap \t\tpeers = Collections.synchronizedSortedMap(<strong>new</strong> TreeMap());\n<a name=\"235\" href=\"#235\">235</a>     <em class=\"comment\">// whether the other peer has admitted this peer (to access the remote files)</em>\n<a name=\"236\" href=\"#236\">236</a>     <em class=\"comment\">// The key is the remote peer's name, the value is admitted (true) or not admitted (false)</em>\n<a name=\"237\" href=\"#237\">237</a>     <em class=\"comment\">// The key includes the userName, which should always be true</em>\n<a name=\"238\" href=\"#238\">238</a>     <strong>private</strong> SortedMap\t\tadmittedBy = Collections.synchronizedSortedMap(<strong>new</strong> TreeMap());\n<a name=\"239\" href=\"#239\">239</a>     <strong>private</strong> SlicePeer\t\tlocalPeer;\n<a name=\"240\" href=\"#240\">240</a>     <strong>private</strong> String\t\t\tuserName;\n<a name=\"241\" href=\"#241\">241</a>     <em class=\"comment\">// for shading local peer</em>\n<a name=\"242\" href=\"#242\">242</a>     <strong>private</strong> Element localMask;\n<a name=\"243\" href=\"#243\">243</a>     <em class=\"comment\">// for shading local peer perisistent</em>\n<a name=\"244\" href=\"#244\">244</a>     <strong>private</strong> Element localMaskPersistent;\n<a name=\"245\" href=\"#245\">245</a>     <em class=\"comment\">// for dragging a file dot: the g</em>\n<a name=\"246\" href=\"#246\">246</a>     <strong>private</strong> Element draggingDelegate;\n<a name=\"247\" href=\"#247\">247</a>     <em class=\"comment\">// for dragging a file dot: the name</em>\n<a name=\"248\" href=\"#248\">248</a>     <strong>private</strong> Text \tdraggingText;\n<a name=\"249\" href=\"#249\">249</a>     <em class=\"comment\">// The template text path for a peer's name</em>\n<a name=\"250\" href=\"#250\">250</a>     <strong>private</strong>\tElement textPath;\n<a name=\"251\" href=\"#251\">251</a>     <em class=\"comment\">// The template text name for a peer's name</em>\n<a name=\"252\" href=\"#252\">252</a>     <strong>private</strong> Element textTemplate;\n<a name=\"253\" href=\"#253\">253</a> \n<a name=\"254\" href=\"#254\">254</a>     <em class=\"comment\">// Files</em>\n<a name=\"255\" href=\"#255\">255</a>     <strong>private</strong> Element filesGroup;\n<a name=\"256\" href=\"#256\">256</a> \n<a name=\"257\" href=\"#257\">257</a>     <em class=\"comment\">// The tip for a file</em>\n<a name=\"258\" href=\"#258\">258</a>     <strong>private</strong> Element fileDescription;\n<a name=\"259\" href=\"#259\">259</a>     <em class=\"comment\">// The name</em>\n<a name=\"260\" href=\"#260\">260</a>     <strong>private</strong> Text \tfileName;\n<a name=\"261\" href=\"#261\">261</a>     <em class=\"comment\">// The permission</em>\n<a name=\"262\" href=\"#262\">262</a> \t<strong>private</strong> Text \tfilePermission;\n<a name=\"263\" href=\"#263\">263</a> \n<a name=\"264\" href=\"#264\">264</a> \t<em class=\"comment\">// The Batik update manager</em>\n<a name=\"265\" href=\"#265\">265</a> \t<strong>private</strong> UpdateManager\tupdater;\n<a name=\"266\" href=\"#266\">266</a> \t<em class=\"comment\">// The runnable queue for asynchronous execution</em>\n<a name=\"267\" href=\"#267\">267</a> \t<strong>private</strong> RunnableQueue\tlaterWork;\n<a name=\"268\" href=\"#268\">268</a> \t<em class=\"comment\">// The JSVGCanvas</em>\n<a name=\"269\" href=\"#269\">269</a> \t<strong>private</strong> JSVGCanvas\t\tcanvas;\n<a name=\"270\" href=\"#270\">270</a> \n<a name=\"271\" href=\"#271\">271</a> \t<em class=\"comment\">// The WebdavResource</em>\n<a name=\"272\" href=\"#272\">272</a> \t<strong>private</strong> WebdavResource \timpromptuServer;\n<a name=\"273\" href=\"#273\">273</a> \t<em class=\"comment\">// The properties that we store and retrieve: owner, radius, angle</em>\n<a name=\"274\" href=\"#274\">274</a> \t<strong>private</strong> Vector\t\t\tourProperties;\n<a name=\"275\" href=\"#275\">275</a> \t<em class=\"comment\">// The ACL manager</em>\n<a name=\"276\" href=\"#276\">276</a> \t<strong>private</strong> ACLManager\t\taclManager;\n<a name=\"277\" href=\"#277\">277</a> \t<em class=\"comment\">// The user manager</em>\n<a name=\"278\" href=\"#278\">278</a> \t<strong>private</strong> UserManager\t\tuserManager;\n<a name=\"279\" href=\"#279\">279</a> \n<a name=\"280\" href=\"#280\">280</a>     <em>/**<em>*</em></em>\n<a name=\"281\" href=\"#281\">281</a> <em>     * Create an empty instance</em>\n<a name=\"282\" href=\"#282\">282</a> <em>     * </em>\n<a name=\"283\" href=\"#283\">283</a> <em>     */</em>\n<a name=\"284\" href=\"#284\">284</a> \t<strong>public</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pie/Pie.html\">Pie</a>() {\n<a name=\"285\" href=\"#285\">285</a> \t}\n<a name=\"286\" href=\"#286\">286</a> \n<a name=\"287\" href=\"#287\">287</a> \t<em>/**<em>*</em></em>\n<a name=\"288\" href=\"#288\">288</a> <em>\t * Start peer manager</em>\n<a name=\"289\" href=\"#289\">289</a> <em>\t * </em>\n<a name=\"290\" href=\"#290\">290</a> <em>     * @param integratePie\ttrue if the pie is integrated with the repository as a peer,</em>\n<a name=\"291\" href=\"#291\">291</a> <em>     * false if the pie is running standalone</em>\n<a name=\"292\" href=\"#292\">292</a> <em>\t */</em>\n<a name=\"293\" href=\"#293\">293</a>     <strong>public</strong> <strong>void</strong> startPeerManager(<strong>boolean</strong> integratePie) {\n<a name=\"294\" href=\"#294\">294</a>         <strong>this</strong>.integratePie = integratePie;\n<a name=\"295\" href=\"#295\">295</a> \t    <strong>if</strong> (!integratePie) {\n<a name=\"296\" href=\"#296\">296</a> \t        interestedServices.add(Configuration.PIE_SERVICE_TYPE);\n<a name=\"297\" href=\"#297\">297</a> \t        interestedServices.add(edu.uci.isr.impromptu.repository.Configuration.IMPROMPTU_SERVICE_TYPE);\n<a name=\"298\" href=\"#298\">298</a> \t        myServiceInfo = <strong>new</strong> ServiceInfo(Configuration.PIE_SERVICE_TYPE, \n<a name=\"299\" href=\"#299\">299</a> \t                getName() + getCharacter(), Configuration.PIE_PORT_NONE, getName() + getCharacter());\n<a name=\"300\" href=\"#300\">300</a> \t        pm = <strong>new</strong> PeerManager(<strong>this</strong>, Configuration.YANCEES_CONFIGURATION_FILE_SECONDARY);\n<a name=\"301\" href=\"#301\">301</a> \t        pm.registerJmDNS();\n<a name=\"302\" href=\"#302\">302</a> \t        <strong>if</strong> (log==<strong>null</strong>) {\n<a name=\"303\" href=\"#303\">303</a> \t        }\n<a name=\"304\" href=\"#304\">304</a> \t    }\n<a name=\"305\" href=\"#305\">305</a>     }\n<a name=\"306\" href=\"#306\">306</a> \n<a name=\"307\" href=\"#307\">307</a>     <em class=\"comment\">// If true, then the Pie is integrated with the proxy filter</em>\n<a name=\"308\" href=\"#308\">308</a>     <strong>private</strong>\t\t<strong>boolean</strong>\tintegratePie = false;\n<a name=\"309\" href=\"#309\">309</a>     <em>/**<em>*</em></em>\n<a name=\"310\" href=\"#310\">310</a> <em>     * Set the peer manager, used when the owner does not start its own manager</em>\n<a name=\"311\" href=\"#311\">311</a> <em>     * @param pm\tthe peer manager that this owner should use</em>\n<a name=\"312\" href=\"#312\">312</a> <em>     */</em>\n<a name=\"313\" href=\"#313\">313</a>     <strong>public</strong> <strong>void</strong> \tsetPeerManager(<a href=\"../../../../../edu/uci/isr/impromptu/common/PeerManager.html\">PeerManager</a> pm) {\n<a name=\"314\" href=\"#314\">314</a> \t    <strong>if</strong> (<strong>this</strong>.pm == <strong>null</strong>) {\n<a name=\"315\" href=\"#315\">315</a> \t        <em class=\"comment\">// If we have not got one peer manager.</em>\n<a name=\"316\" href=\"#316\">316</a> \t        <em class=\"comment\">// This is used when integrated with the proxy filter, </em>\n<a name=\"317\" href=\"#317\">317</a> \t        <em class=\"comment\">// because we need this to send out messages.</em>\n<a name=\"318\" href=\"#318\">318</a> \t        <strong>this</strong>.pm = pm;\n<a name=\"319\" href=\"#319\">319</a> \t        integratePie = <strong>true</strong>;\n<a name=\"320\" href=\"#320\">320</a> \t    }\n<a name=\"321\" href=\"#321\">321</a>     }\n<a name=\"322\" href=\"#322\">322</a> \n<a name=\"323\" href=\"#323\">323</a>     <strong>private</strong>\t<strong>boolean</strong>\tleaving\t= false;\n<a name=\"324\" href=\"#324\">324</a>     <em>/**<em>*</em></em>\n<a name=\"325\" href=\"#325\">325</a> <em>     * Send out a leave notify message after the user chooses to exit the GUI</em>\n<a name=\"326\" href=\"#326\">326</a> <em>     */</em>\n<a name=\"327\" href=\"#327\">327</a>     <strong>public</strong> <strong>void</strong> leaveNotify() {\n<a name=\"328\" href=\"#328\">328</a>         <strong>if</strong> (peers.size()>1 &amp;&amp; localPeer != <strong>null</strong> &amp;&amp; localPeer.getPersistentFiles().size()>0) {\n<a name=\"329\" href=\"#329\">329</a>             <em class=\"comment\">// There are more than just us, and we have some persistent files</em>\n<a name=\"330\" href=\"#330\">330</a>             <em class=\"comment\">// We only do persistent exchanges here. The eager policy, which </em>\n<a name=\"331\" href=\"#331\">331</a>             <em class=\"comment\">// \t\tback up persistent files proactively when persistent files</em>\n<a name=\"332\" href=\"#332\">332</a>             <em class=\"comment\">//\t\tare created and modified, still needs notifications of a </em>\n<a name=\"333\" href=\"#333\">333</a>             <em class=\"comment\">//\t\tpeer's leaving. But with such notifications, it is also</em>\n<a name=\"334\" href=\"#334\">334</a>             <em class=\"comment\">//\t\tpossible to execute a lazy policy. </em>\n<a name=\"335\" href=\"#335\">335</a>             leaving = <strong>true</strong>;\n<a name=\"336\" href=\"#336\">336</a>             Map\t\tleaveNotifyEvent = <strong>new</strong> HashMap();\n<a name=\"337\" href=\"#337\">337</a>             leaveNotifyEvent.put(MessageProcessor.ATTR_PEER_NAME, \n<a name=\"338\" href=\"#338\">338</a>                     userName);\n<a name=\"339\" href=\"#339\">339</a>             leaveNotifyEvent.put(MessageProcessor.ATTR_ACTION, \n<a name=\"340\" href=\"#340\">340</a>                 MessageProcessor.ACTION_LEAVE_NOTIFY);\n<a name=\"341\" href=\"#341\">341</a>             pm.sendMessage(leaveNotifyEvent);\n<a name=\"342\" href=\"#342\">342</a>             <strong>new</strong> Thread(<span class=\"string\">\"Shutdown waiter\"</span>) {\n<a name=\"343\" href=\"#343\">343</a>                 <strong>public</strong> <strong>void</strong> run() {\n<a name=\"344\" href=\"#344\">344</a>                     <em class=\"comment\">// wait 30000 seconds, </em>\n<a name=\"345\" href=\"#345\">345</a>                     <strong>try</strong> {\n<a name=\"346\" href=\"#346\">346</a>                         Thread.sleep(30000);\n<a name=\"347\" href=\"#347\">347</a>                     }\n<a name=\"348\" href=\"#348\">348</a>                     <strong>catch</strong> (InterruptedException e) {\n<a name=\"349\" href=\"#349\">349</a>                     }\n<a name=\"350\" href=\"#350\">350</a>                     <em class=\"comment\">// then shutdown</em>\n<a name=\"351\" href=\"#351\">351</a>                     log.debug(<span class=\"string\">\"Having been waiting for too long\"</span>);\n<a name=\"352\" href=\"#352\">352</a>                     shutdown();\n<a name=\"353\" href=\"#353\">353</a>                 }\n<a name=\"354\" href=\"#354\">354</a>             }.start();\n<a name=\"355\" href=\"#355\">355</a>         }\n<a name=\"356\" href=\"#356\">356</a>         <strong>else</strong> {\n<a name=\"357\" href=\"#357\">357</a>             shutdown();\n<a name=\"358\" href=\"#358\">358</a>         }\n<a name=\"359\" href=\"#359\">359</a>     }\n<a name=\"360\" href=\"#360\">360</a> \n<a name=\"361\" href=\"#361\">361</a>     <em>/**<em>*</em></em>\n<a name=\"362\" href=\"#362\">362</a> <em>     * Whether we should take over a remote user's persistent files</em>\n<a name=\"363\" href=\"#363\">363</a> <em>     * @param remoteUserName the name of the remote user</em>\n<a name=\"364\" href=\"#364\">364</a> <em>     * @return true if we want to take over and keep servering that user's </em>\n<a name=\"365\" href=\"#365\">365</a> <em>     * persistent files, false if we do not want to do so</em>\n<a name=\"366\" href=\"#366\">366</a> <em>     */</em>\n<a name=\"367\" href=\"#367\">367</a>     <strong>public</strong> <strong>boolean</strong> takePersistent(String remoteUserName) {\n<a name=\"368\" href=\"#368\">368</a>         <strong>boolean</strong>\tresult = false;\n<a name=\"369\" href=\"#369\">369</a>         <strong>int</strong>\t\tpeersSize = peers.size();\n<a name=\"370\" href=\"#370\">370</a>         <strong>if</strong> (peersSize>1) {\n<a name=\"371\" href=\"#371\">371</a>             <em class=\"comment\">// we take over if we are right after the remoteUserName in the pie</em>\n<a name=\"372\" href=\"#372\">372</a>             <em class=\"comment\">// The second condition is for the ring case: we are first and </em>\n<a name=\"373\" href=\"#373\">373</a>             <em class=\"comment\">//\tthe remote is the last</em>\n<a name=\"374\" href=\"#374\">374</a>             <strong>int</strong>\tlocalCardinal = localPeer.getCardinal() + peersSize;\n<a name=\"375\" href=\"#375\">375</a>             <strong>int</strong>\tremoteCardinal = ((SlicePeer)peers.get(remoteUserName)).getCardinal();\n<a name=\"376\" href=\"#376\">376</a>             result = ((localCardinal - remoteCardinal) % peersSize == 1); \n<a name=\"377\" href=\"#377\">377</a>         }\n<a name=\"378\" href=\"#378\">378</a>         <strong>return</strong> result;\n<a name=\"379\" href=\"#379\">379</a>     }\n<a name=\"380\" href=\"#380\">380</a>     \n<a name=\"381\" href=\"#381\">381</a>     <em class=\"comment\">// A list of others' persistent files. Might contain more than one user's files</em>\n<a name=\"382\" href=\"#382\">382</a>     <strong>private</strong> List\tothersPersistentFiles = Collections.synchronizedList(<strong>new</strong> ArrayList());\n<a name=\"383\" href=\"#383\">383</a>     <em>/**<em>*</em></em>\n<a name=\"384\" href=\"#384\">384</a> <em>     * Copy a remote user's persistent files to our persistent directory</em>\n<a name=\"385\" href=\"#385\">385</a> <em>     * @param remoteUserName the name of the remote user</em>\n<a name=\"386\" href=\"#386\">386</a> <em>     */</em>\n<a name=\"387\" href=\"#387\">387</a>     <strong>public</strong> <strong>void</strong> savePersistent(String remoteUserName) {\n<a name=\"388\" href=\"#388\">388</a>         List\tp = ((SlicePeer)peers.get(remoteUserName)).getPersistentFiles();\n<a name=\"389\" href=\"#389\">389</a>         <strong>for</strong>(Iterator i = p.iterator(); i.hasNext();) {\n<a name=\"390\" href=\"#390\">390</a>             Dot\t\td = (Dot)i.next();\n<a name=\"391\" href=\"#391\">391</a>             <em class=\"comment\">// copy each file to our own persisten directory</em>\n<a name=\"392\" href=\"#392\">392</a>             String\tfileName = d.getFileName();\n<a name=\"393\" href=\"#393\">393</a>             Platform.exportFile(fileName, Platform.getPersistentPrefix() + fileName);\n<a name=\"394\" href=\"#394\">394</a>         }\n<a name=\"395\" href=\"#395\">395</a>         <em class=\"comment\">// Use an add method, in case we are busy serving more than one remote user</em>\n<a name=\"396\" href=\"#396\">396</a>         othersPersistentFiles.addAll(p);\n<a name=\"397\" href=\"#397\">397</a>     }\n<a name=\"398\" href=\"#398\">398</a> \n<a name=\"399\" href=\"#399\">399</a>     <em>/**<em>*</em></em>\n<a name=\"400\" href=\"#400\">400</a> <em>     * Reimport a remote user's persistent files so we are their new owner</em>\n<a name=\"401\" href=\"#401\">401</a> <em>     * @param remoteUserName the name of the remote user who has just left</em>\n<a name=\"402\" href=\"#402\">402</a> <em>     */</em>\n<a name=\"403\" href=\"#403\">403</a>     <strong>public</strong> <strong>void</strong> reimportPersistent(String remoteUserName) {\n<a name=\"404\" href=\"#404\">404</a>         <em class=\"comment\">// make a copy in case of concurrent modification</em>\n<a name=\"405\" href=\"#405\">405</a>         <strong>synchronized</strong>(othersPersistentFiles) {\n<a name=\"406\" href=\"#406\">406</a> \t        List\tp = <strong>new</strong> ArrayList();\n<a name=\"407\" href=\"#407\">407</a> \t        <strong>for</strong>(Iterator i = othersPersistentFiles.iterator(); i.hasNext();) {\n<a name=\"408\" href=\"#408\">408</a> \t            Dot\t\td = (Dot)i.next();\n<a name=\"409\" href=\"#409\">409</a> \t            <strong>if</strong> (d.getOwner().getName().equals(remoteUserName)) {\n<a name=\"410\" href=\"#410\">410</a> \t                <em class=\"comment\">// copy each file from our own persisten directory to its original place</em>\n<a name=\"411\" href=\"#411\">411</a> \t                File\tfile = <strong>new</strong> File(Platform.getPersistentPrefix() + d.getFileName());\n<a name=\"412\" href=\"#412\">412</a> \t                <strong>if</strong> (doImportFile(file)) {\n<a name=\"413\" href=\"#413\">413</a> \t                    doDrop(file, d.getLocation());\n<a name=\"414\" href=\"#414\">414</a> \t                }\n<a name=\"415\" href=\"#415\">415</a> \t                p.add(d);\n<a name=\"416\" href=\"#416\">416</a> \t            }\n<a name=\"417\" href=\"#417\">417</a> \t        }\n<a name=\"418\" href=\"#418\">418</a> \t        othersPersistentFiles.removeAll(p);\n<a name=\"419\" href=\"#419\">419</a>         }\n<a name=\"420\" href=\"#420\">420</a>     }\n<a name=\"421\" href=\"#421\">421</a>     \n<a name=\"422\" href=\"#422\">422</a>     <em>/**<em>*</em></em>\n<a name=\"423\" href=\"#423\">423</a> <em>     * Send out a shutdown message, probably after receiving the backup holder's </em>\n<a name=\"424\" href=\"#424\">424</a> <em>     * leave continue message. </em>\n<a name=\"425\" href=\"#425\">425</a> <em>     */</em>\n<a name=\"426\" href=\"#426\">426</a>     <strong>public</strong> <strong>void</strong> shutdown() {\n<a name=\"427\" href=\"#427\">427</a>         Platform.unmountDrive();\n<a name=\"428\" href=\"#428\">428</a> \n<a name=\"429\" href=\"#429\">429</a>         <strong>if</strong> (pm != <strong>null</strong>) {\n<a name=\"430\" href=\"#430\">430</a> \t        Map\t\tshutdownEvent = <strong>new</strong> HashMap();\n<a name=\"431\" href=\"#431\">431</a> \t        shutdownEvent.put(MessageProcessor.ATTR_PEER_NAME, \n<a name=\"432\" href=\"#432\">432</a> \t                userName);\n<a name=\"433\" href=\"#433\">433</a> \t        shutdownEvent.put(MessageProcessor.ATTR_ACTION, \n<a name=\"434\" href=\"#434\">434</a> \t            MessageProcessor.ACTION_SHUTDOWN);\n<a name=\"435\" href=\"#435\">435</a> \t        pm.sendMessage(shutdownEvent);\n<a name=\"436\" href=\"#436\">436</a>         }\n<a name=\"437\" href=\"#437\">437</a> \n<a name=\"438\" href=\"#438\">438</a>         <em class=\"comment\">// if we are not integrated, then exit directly</em>\n<a name=\"439\" href=\"#439\">439</a>         <strong>if</strong> (!integratePie) {\n<a name=\"440\" href=\"#440\">440</a>             <em class=\"comment\">// give some time to Yancees </em>\n<a name=\"441\" href=\"#441\">441</a>             <strong>try</strong> {\n<a name=\"442\" href=\"#442\">442</a>                 Thread.sleep(2000);\n<a name=\"443\" href=\"#443\">443</a>             }\n<a name=\"444\" href=\"#444\">444</a>             <strong>catch</strong> (InterruptedException ie) {\n<a name=\"445\" href=\"#445\">445</a>             }\n<a name=\"446\" href=\"#446\">446</a>             log.debug(<span class=\"string\">\"Exiting...\"</span>);\n<a name=\"447\" href=\"#447\">447</a>             System.exit(0);\n<a name=\"448\" href=\"#448\">448</a>         }\n<a name=\"449\" href=\"#449\">449</a>     }\n<a name=\"450\" href=\"#450\">450</a>     \n<a name=\"451\" href=\"#451\">451</a>     <em>/**<em>*</em></em>\n<a name=\"452\" href=\"#452\">452</a> <em>     * Get the ServiceInfo structure of the local peer</em>\n<a name=\"453\" href=\"#453\">453</a> <em>     * @return the ServiceInfo</em>\n<a name=\"454\" href=\"#454\">454</a> <em>     */</em>\n<a name=\"455\" href=\"#455\">455</a>     <strong>public</strong> ServiceInfo\tgetServiceInfo() {\n<a name=\"456\" href=\"#456\">456</a>         <strong>return</strong> myServiceInfo;\n<a name=\"457\" href=\"#457\">457</a>     }\n<a name=\"458\" href=\"#458\">458</a> \n<a name=\"459\" href=\"#459\">459</a>     <em>/**<em>*</em></em>\n<a name=\"460\" href=\"#460\">460</a> <em>     * Get the services that this owner is interested</em>\n<a name=\"461\" href=\"#461\">461</a> <em>     * @return a set of interested services</em>\n<a name=\"462\" href=\"#462\">462</a> <em>     */</em>\n<a name=\"463\" href=\"#463\">463</a>     <strong>public</strong> Set getInterestedServices() {\n<a name=\"464\" href=\"#464\">464</a>         <strong>return</strong> interestedServices;\n<a name=\"465\" href=\"#465\">465</a>     }\n<a name=\"466\" href=\"#466\">466</a>     \n<a name=\"467\" href=\"#467\">467</a> \t<em>/**<em>*</em></em>\n<a name=\"468\" href=\"#468\">468</a> <em>\t * Construct a pie, based on the loaded template. This is the real constructor.</em>\n<a name=\"469\" href=\"#469\">469</a> <em>\t * @param _document the template document</em>\n<a name=\"470\" href=\"#470\">470</a> <em>\t */</em>\n<a name=\"471\" href=\"#471\">471</a>     <strong>public</strong> <strong>void</strong> setDocument(SVGDocument _document) {\n<a name=\"472\" href=\"#472\">472</a>         document = _document;\n<a name=\"473\" href=\"#473\">473</a> \n<a name=\"474\" href=\"#474\">474</a>         <em class=\"comment\">// Must check the old attribute value against the new value. </em>\n<a name=\"475\" href=\"#475\">475</a>         <em class=\"comment\">// \t\tIf blindly setting the attribute with the same new value, it will trigger attribute</em>\n<a name=\"476\" href=\"#476\">476</a>         <em class=\"comment\">// \t\t\"change\" events whose handler generates null pointer exceptions</em>\n<a name=\"477\" href=\"#477\">477</a>         <em class=\"comment\">// Again, the template.svg must also be changed to reflect a new width/height</em>\n<a name=\"478\" href=\"#478\">478</a>         <em class=\"comment\">//\t\tBatik seemingly won't catch up the width/height/viewbox update at svg element</em>\n<a name=\"479\" href=\"#479\">479</a>         <em class=\"comment\">//\t\tafter a document has been loaded (from the template)</em>\n<a name=\"480\" href=\"#480\">480</a>         <em class=\"comment\">// Cannot out smart each other.</em>\n<a name=\"481\" href=\"#481\">481</a>         Element svgRoot = document.getDocumentElement();\n<a name=\"482\" href=\"#482\">482</a>         <em class=\"comment\">// width</em>\n<a name=\"483\" href=\"#483\">483</a>         String\toldAttribute = svgRoot.getAttribute(SVGConstants.SVG_WIDTH_ATTRIBUTE);\n<a name=\"484\" href=\"#484\">484</a>         String  newAttribute = String.valueOf(Configuration.SIZE_VIEW_WIDTH);\n<a name=\"485\" href=\"#485\">485</a>         <strong>if</strong> (!newAttribute.equals(oldAttribute))\n<a name=\"486\" href=\"#486\">486</a>             svgRoot.setAttributeNS(<strong>null</strong>, SVGConstants.SVG_WIDTH_ATTRIBUTE, newAttribute);\n<a name=\"487\" href=\"#487\">487</a>         <em class=\"comment\">// height</em>\n<a name=\"488\" href=\"#488\">488</a>         oldAttribute = svgRoot.getAttribute(SVGConstants.SVG_HEIGHT_ATTRIBUTE);\n<a name=\"489\" href=\"#489\">489</a>         newAttribute = String.valueOf(Configuration.SIZE_VIEW_HEIGHT);\n<a name=\"490\" href=\"#490\">490</a>         <strong>if</strong> (!newAttribute.equals(oldAttribute))\n<a name=\"491\" href=\"#491\">491</a>             svgRoot.setAttributeNS(<strong>null</strong>, SVGConstants.SVG_HEIGHT_ATTRIBUTE, newAttribute);\n<a name=\"492\" href=\"#492\">492</a>         <em class=\"comment\">// viewBox. A rather quick comparison, instead of a full analysis</em>\n<a name=\"493\" href=\"#493\">493</a>         oldAttribute = svgRoot.getAttribute(SVGConstants.SVG_VIEW_BOX_ATTRIBUTE);\n<a name=\"494\" href=\"#494\">494</a>         newAttribute = <span class=\"string\">\"0 0 \"</span> + String.valueOf(Configuration.SIZE_VIEW_WIDTH) + <span class=\"string\">\".0 \"</span> + \n<a name=\"495\" href=\"#495\">495</a> \t\t\t\t\t\tString.valueOf(Configuration.SIZE_VIEW_HEIGHT) + <span class=\"string\">\".0\"</span>;\n<a name=\"496\" href=\"#496\">496</a>         <strong>if</strong> (!newAttribute.equals(oldAttribute)) {\n<a name=\"497\" href=\"#497\">497</a>             svgRoot.setAttributeNS(<strong>null</strong>, SVGConstants.SVG_VIEW_BOX_ATTRIBUTE, newAttribute);\n<a name=\"498\" href=\"#498\">498</a>         }\n<a name=\"499\" href=\"#499\">499</a> \n<a name=\"500\" href=\"#500\">500</a>         <em class=\"comment\">// Move original long procedure into the SVG stub template (clone node), </em>\n<a name=\"501\" href=\"#501\">501</a>         <em class=\"comment\">// \t\tso this looks simple, and it becomes easy to change visual effects </em>\n<a name=\"502\" href=\"#502\">502</a>         <em class=\"comment\">// Notes</em>\n<a name=\"503\" href=\"#503\">503</a>         <em class=\"comment\">//\t\tfilter is fixed</em>\n<a name=\"504\" href=\"#504\">504</a>         <em class=\"comment\">// \t\ttooltip is template</em>\n<a name=\"505\" href=\"#505\">505</a>         <em class=\"comment\">// \t\tdot uses a template. The same template is used as a dragging template. </em>\n<a name=\"506\" href=\"#506\">506</a>         <em class=\"comment\">// \t\toriginal local mask code covers the center</em>\n<a name=\"507\" href=\"#507\">507</a>         \n<a name=\"508\" href=\"#508\">508</a>         <em class=\"comment\">// get the empty textpath reference</em>\n<a name=\"509\" href=\"#509\">509</a>         textPath = document.getElementById(ID_TEXT_PATH); \n<a name=\"510\" href=\"#510\">510</a>         <em class=\"comment\">// get the template text for name</em>\n<a name=\"511\" href=\"#511\">511</a>         textTemplate = document.getElementById(ID_TEXT_TEMPLATE); \n<a name=\"512\" href=\"#512\">512</a>         <em class=\"comment\">// get private space</em>\n<a name=\"513\" href=\"#513\">513</a>         privateSpace = document.getElementById(ID_PRIVATE_SPACE);\n<a name=\"514\" href=\"#514\">514</a>         privateSpace.setAttributeNS(<strong>null</strong>, SVGConstants.SVG_WIDTH_ATTRIBUTE, String.valueOf(Configuration.SIZE_VIEW_WIDTH));\n<a name=\"515\" href=\"#515\">515</a>         privateSpace.setAttributeNS(<strong>null</strong>, SVGConstants.SVG_HEIGHT_ATTRIBUTE, String.valueOf(Configuration.SIZE_VIEW_HEIGHT));\n<a name=\"516\" href=\"#516\">516</a>         <em class=\"comment\">// Get the peers </em>\n<a name=\"517\" href=\"#517\">517</a>         peersGroup = document.getElementById(ID_PEERS);\n<a name=\"518\" href=\"#518\">518</a>         <em class=\"comment\">// get the persistent space</em>\n<a name=\"519\" href=\"#519\">519</a>     \tpersistentSpace = document.getElementById(ID_PERSISTENT_SPACE);\n<a name=\"520\" href=\"#520\">520</a>     \tpersistentSpace.setAttributeNS(<strong>null</strong>, SVGConstants.SVG_R_ATTRIBUTE, String.valueOf(PieUtils.getRadius(SecurityConstants.LEVEL_PERSISTENT)));\n<a name=\"521\" href=\"#521\">521</a>     \tPieUtils.setTranslateCenter(persistentSpace);\n<a name=\"522\" href=\"#522\">522</a>     \t<em class=\"comment\">// get the local mask</em>\n<a name=\"523\" href=\"#523\">523</a>         localMask = document.getElementById(ID_LOCAL_MASK);\n<a name=\"524\" href=\"#524\">524</a>         <em class=\"comment\">// get the local mask persistent</em>\n<a name=\"525\" href=\"#525\">525</a>     \tlocalMaskPersistent = document.getElementById(ID_LOCAL_MASK_PERSISTENT);\n<a name=\"526\" href=\"#526\">526</a>     \tlocalMaskPersistent.setAttributeNS(<strong>null</strong>, SVGConstants.SVG_R_ATTRIBUTE, String.valueOf(PieUtils.getRadius(SecurityConstants.LEVEL_PERSISTENT)));\n<a name=\"527\" href=\"#527\">527</a>     \tPieUtils.setTranslateCenter(localMaskPersistent);\n<a name=\"528\" href=\"#528\">528</a>     \t<em class=\"comment\">// get the dragging dot</em>\n<a name=\"529\" href=\"#529\">529</a>         draggingDelegate = document.getElementById(ID_DRAGGING_DELEGATE);\n<a name=\"530\" href=\"#530\">530</a>         draggingText = (Text)document.getElementById(ID_DRAGGING_TEXT).getFirstChild();\n<a name=\"531\" href=\"#531\">531</a>   \t\t<em class=\"comment\">// Get the tool tip</em>\n<a name=\"532\" href=\"#532\">532</a>         fileDescription = document.getElementById(ID_FILE_DESCRIPTION);\n<a name=\"533\" href=\"#533\">533</a>         fileName = (Text)document.getElementById(ID_FILE_NAME).getFirstChild();\n<a name=\"534\" href=\"#534\">534</a>         filePermission = (Text)document.getElementById(ID_FILE_PERMISSION).getFirstChild();\n<a name=\"535\" href=\"#535\">535</a>         <em class=\"comment\">// get files</em>\n<a name=\"536\" href=\"#536\">536</a>         filesGroup = document.getElementById(ID_FILES);\n<a name=\"537\" href=\"#537\">537</a> \n<a name=\"538\" href=\"#538\">538</a>         <em class=\"comment\">// always listen to Esc</em>\n<a name=\"539\" href=\"#539\">539</a>         ((EventTarget)localMask).addEventListener(SVGConstants.SVG_KEYPRESS_EVENT_TYPE, Pie.<strong>this</strong>, false);\n<a name=\"540\" href=\"#540\">540</a>         ((EventTarget)privateSpace).addEventListener(SVGConstants.SVG_KEYPRESS_EVENT_TYPE, Pie.<strong>this</strong>, false);\n<a name=\"541\" href=\"#541\">541</a> \n<a name=\"542\" href=\"#542\">542</a>         ourProperties = <strong>new</strong> Vector();\n<a name=\"543\" href=\"#543\">543</a>         ourProperties.add(<strong>new</strong> PropertyName(NS_URI, PROPERTY_OWNER));\n<a name=\"544\" href=\"#544\">544</a>         ourProperties.add(<strong>new</strong> PropertyName(NS_URI, PROPERTY_RADIUS));\n<a name=\"545\" href=\"#545\">545</a>         ourProperties.add(<strong>new</strong> PropertyName(NS_URI, PROPERTY_ANGLE));\n<a name=\"546\" href=\"#546\">546</a>     }\n<a name=\"547\" href=\"#547\">547</a> \n<a name=\"548\" href=\"#548\">548</a>     <em>/**<em>*</em></em>\n<a name=\"549\" href=\"#549\">549</a> <em>     * Get the contained document</em>\n<a name=\"550\" href=\"#550\">550</a> <em>     * @return the document</em>\n<a name=\"551\" href=\"#551\">551</a> <em>     */</em>\n<a name=\"552\" href=\"#552\">552</a>     <strong>public</strong> SVGDocument getDocument() {\n<a name=\"553\" href=\"#553\">553</a>         <strong>return</strong> document;\n<a name=\"554\" href=\"#554\">554</a>     }\n<a name=\"555\" href=\"#555\">555</a>     \n<a name=\"556\" href=\"#556\">556</a>     <em>/**<em>*</em></em>\n<a name=\"557\" href=\"#557\">557</a> <em>     * Get the text path element</em>\n<a name=\"558\" href=\"#558\">558</a> <em>     * @return the text path elelment</em>\n<a name=\"559\" href=\"#559\">559</a> <em>     */</em>\n<a name=\"560\" href=\"#560\">560</a>     <strong>public</strong> Element getTextPath() {\n<a name=\"561\" href=\"#561\">561</a>         <strong>return</strong> textPath;\n<a name=\"562\" href=\"#562\">562</a>     }\n<a name=\"563\" href=\"#563\">563</a>     \n<a name=\"564\" href=\"#564\">564</a>     <em>/**<em>*</em></em>\n<a name=\"565\" href=\"#565\">565</a> <em>     * Get the text template element</em>\n<a name=\"566\" href=\"#566\">566</a> <em>     * @return the text template elelment</em>\n<a name=\"567\" href=\"#567\">567</a> <em>     */</em>\n<a name=\"568\" href=\"#568\">568</a>     <strong>public</strong> Element getTextTemplate() {\n<a name=\"569\" href=\"#569\">569</a>         <strong>return</strong> textTemplate;\n<a name=\"570\" href=\"#570\">570</a>     }\n<a name=\"571\" href=\"#571\">571</a>     \n<a name=\"572\" href=\"#572\">572</a>     <em>/**<em>*</em></em>\n<a name=\"573\" href=\"#573\">573</a> <em>     * Get the group element (g) for the peers</em>\n<a name=\"574\" href=\"#574\">574</a> <em>     * @return the group element</em>\n<a name=\"575\" href=\"#575\">575</a> <em>     */</em>\n<a name=\"576\" href=\"#576\">576</a>     <strong>public</strong> Element getPeersGroup() {\n<a name=\"577\" href=\"#577\">577</a>         <strong>return</strong> peersGroup;\n<a name=\"578\" href=\"#578\">578</a>     }\n<a name=\"579\" href=\"#579\">579</a>     \n<a name=\"580\" href=\"#580\">580</a>     <em>/**<em>*</em></em>\n<a name=\"581\" href=\"#581\">581</a> <em>     * Get the group element (g) for the files</em>\n<a name=\"582\" href=\"#582\">582</a> <em>     * @return the group element</em>\n<a name=\"583\" href=\"#583\">583</a> <em>     */</em>\n<a name=\"584\" href=\"#584\">584</a>     <strong>public</strong> Element getFilesGroup() {\n<a name=\"585\" href=\"#585\">585</a>         <strong>return</strong> filesGroup;\n<a name=\"586\" href=\"#586\">586</a>     }\n<a name=\"587\" href=\"#587\">587</a>     \n<a name=\"588\" href=\"#588\">588</a>     <em>/**<em>*</em></em>\n<a name=\"589\" href=\"#589\">589</a> <em>     * Get the element for shading the local peer</em>\n<a name=\"590\" href=\"#590\">590</a> <em>     * @return the shading element</em>\n<a name=\"591\" href=\"#591\">591</a> <em>     */</em>\n<a name=\"592\" href=\"#592\">592</a>     <strong>public</strong> Element getLocalMask() {\n<a name=\"593\" href=\"#593\">593</a>         <strong>return</strong> localMask;\n<a name=\"594\" href=\"#594\">594</a>     }\n<a name=\"595\" href=\"#595\">595</a> \n<a name=\"596\" href=\"#596\">596</a>     <em>/**<em>*</em></em>\n<a name=\"597\" href=\"#597\">597</a> <em>     * Get the element for the dragging delegate</em>\n<a name=\"598\" href=\"#598\">598</a> <em>     * @return the dragging delegate</em>\n<a name=\"599\" href=\"#599\">599</a> <em>     */</em>\n<a name=\"600\" href=\"#600\">600</a>     <strong>public</strong> Element getDraggingDelegate() {\n<a name=\"601\" href=\"#601\">601</a>         <strong>return</strong> draggingDelegate;\n<a name=\"602\" href=\"#602\">602</a>     }\n<a name=\"603\" href=\"#603\">603</a> \n<a name=\"604\" href=\"#604\">604</a>     <em>/**<em>*</em></em>\n<a name=\"605\" href=\"#605\">605</a> <em>     * whether the description window is shown</em>\n<a name=\"606\" href=\"#606\">606</a> <em>     */</em> \n<a name=\"607\" href=\"#607\">607</a>     <strong>private</strong> <strong>boolean</strong>\tenableShowDescription = <strong>true</strong>;\n<a name=\"608\" href=\"#608\">608</a>     <em>/**<em>*</em></em>\n<a name=\"609\" href=\"#609\">609</a> <em>     * Enable or disable the description window</em>\n<a name=\"610\" href=\"#610\">610</a> <em>     * @param show true to enable, false to disable</em>\n<a name=\"611\" href=\"#611\">611</a> <em>     */</em>\n<a name=\"612\" href=\"#612\">612</a>     <strong>public</strong> <strong>void</strong> setShowDescription(<strong>boolean</strong> show) {\n<a name=\"613\" href=\"#613\">613</a>         enableShowDescription = show;\n<a name=\"614\" href=\"#614\">614</a>     }\n<a name=\"615\" href=\"#615\">615</a>     <em>/**<em>*</em></em>\n<a name=\"616\" href=\"#616\">616</a> <em>     * Get whether the description window is enabled</em>\n<a name=\"617\" href=\"#617\">617</a> <em>     * @return true if enabled, false if disabled</em>\n<a name=\"618\" href=\"#618\">618</a> <em>     */</em>\n<a name=\"619\" href=\"#619\">619</a>     <strong>public</strong> <strong>boolean</strong> getShowDescription() {\n<a name=\"620\" href=\"#620\">620</a>         <strong>return</strong> enableShowDescription;\n<a name=\"621\" href=\"#621\">621</a>     }\n<a name=\"622\" href=\"#622\">622</a> \n<a name=\"623\" href=\"#623\">623</a>     <em>/**<em>*</em></em>\n<a name=\"624\" href=\"#624\">624</a> <em>     * whether the description follows dot</em>\n<a name=\"625\" href=\"#625\">625</a> <em>     */</em> \n<a name=\"626\" href=\"#626\">626</a>     <strong>private</strong> <strong>boolean</strong> followDot = <strong>true</strong>;\n<a name=\"627\" href=\"#627\">627</a>     <em>/**<em>*</em></em>\n<a name=\"628\" href=\"#628\">628</a> <em>     * Set whether the description window should follow the dot</em>\n<a name=\"629\" href=\"#629\">629</a> <em>     * @param f true to follow, false not to follow</em>\n<a name=\"630\" href=\"#630\">630</a> <em>     */</em>\n<a name=\"631\" href=\"#631\">631</a>     <strong>public</strong> <strong>void</strong> setFollowDot(<strong>boolean</strong> f) {\n<a name=\"632\" href=\"#632\">632</a>         followDot = f;\n<a name=\"633\" href=\"#633\">633</a>     }\n<a name=\"634\" href=\"#634\">634</a>     <em>/**<em>*</em></em>\n<a name=\"635\" href=\"#635\">635</a> <em>     * Get whether the description window should follow the dot</em>\n<a name=\"636\" href=\"#636\">636</a> <em>     * @return true to follow, false not to follow</em>\n<a name=\"637\" href=\"#637\">637</a> <em>     */</em>\n<a name=\"638\" href=\"#638\">638</a>     <strong>public</strong> <strong>boolean</strong> getFollowDot() {\n<a name=\"639\" href=\"#639\">639</a>         <strong>return</strong> followDot;\n<a name=\"640\" href=\"#640\">640</a>     }\n<a name=\"641\" href=\"#641\">641</a>     \n<a name=\"642\" href=\"#642\">642</a>     <em>/**<em>*</em></em>\n<a name=\"643\" href=\"#643\">643</a> <em>     * Show description for a dot</em>\n<a name=\"644\" href=\"#644\">644</a> <em>     * </em>\n<a name=\"645\" href=\"#645\">645</a> <em>     * @param d \t\t\tthe dot for a file</em>\n<a name=\"646\" href=\"#646\">646</a> <em>     */</em>\n<a name=\"647\" href=\"#647\">647</a>     <strong>public</strong> <strong>void</strong> showDescription(<a href=\"../../../../../edu/uci/isr/impromptu/pie/Dot.html\">Dot</a> d) {\n<a name=\"648\" href=\"#648\">648</a>         <strong>if</strong> (enableShowDescription &amp;&amp; d != <strong>null</strong>) {\n<a name=\"649\" href=\"#649\">649</a>             fileName.setNodeValue(d.getFileName());\n<a name=\"650\" href=\"#650\">650</a>             filePermission.setNodeValue(SecurityConstants.LEVELS_DESCRIPTION[d.getSharingLevel()]);\n<a name=\"651\" href=\"#651\">651</a>             <em class=\"comment\">// follow is true during normal operation</em>\n<a name=\"652\" href=\"#652\">652</a>             <em class=\"comment\">// it is set to false during dragging, so 1) the description would not be too annoying</em>\n<a name=\"653\" href=\"#653\">653</a>             <em class=\"comment\">// 2) if we do not track move events for fileDescription element, there is one blind spot</em>\n<a name=\"654\" href=\"#654\">654</a>             <em class=\"comment\">// 3) But if we track move events for that element, it might overlap with other non droppable area</em>\n<a name=\"655\" href=\"#655\">655</a>             <strong>if</strong> (followDot) {\n<a name=\"656\" href=\"#656\">656</a> \t            Point\tp = d.getLocation(); \n<a name=\"657\" href=\"#657\">657</a> \t    \t\tfileDescription.setAttributeNS(<strong>null</strong>, SVGConstants.SVG_TRANSFORM_ATTRIBUTE, \n<a name=\"658\" href=\"#658\">658</a> \t    \t\t        PieUtils.getTranslateString(p.getX() + d.getSize() + Configuration.CENTER_X, \n<a name=\"659\" href=\"#659\">659</a> \t    \t\t                p.getY() + d.getSize() + Configuration.CENTER_Y));\n<a name=\"660\" href=\"#660\">660</a>             }\n<a name=\"661\" href=\"#661\">661</a>             <strong>else</strong> {\n<a name=\"662\" href=\"#662\">662</a> \t    \t\tfileDescription.setAttributeNS(<strong>null</strong>, SVGConstants.SVG_TRANSFORM_ATTRIBUTE, \n<a name=\"663\" href=\"#663\">663</a> \t    \t\t        PieUtils.getTranslateString(0, 0));\n<a name=\"664\" href=\"#664\">664</a>             }\n<a name=\"665\" href=\"#665\">665</a>     \t\tfileDescription.setAttributeNS(<strong>null</strong>, SVGConstants.SVG_STYLE_ATTRIBUTE, VISIBILITY_VISIBLE);\n<a name=\"666\" href=\"#666\">666</a>         }\n<a name=\"667\" href=\"#667\">667</a>     }\n<a name=\"668\" href=\"#668\">668</a> \n<a name=\"669\" href=\"#669\">669</a>     <em>/**<em>*</em></em>\n<a name=\"670\" href=\"#670\">670</a> <em>     * Hide the description</em>\n<a name=\"671\" href=\"#671\">671</a> <em>     *</em>\n<a name=\"672\" href=\"#672\">672</a> <em>     */</em>\n<a name=\"673\" href=\"#673\">673</a>     <strong>public</strong> <strong>void</strong> hideDescription() {\n<a name=\"674\" href=\"#674\">674</a> \t\tfileDescription.setAttributeNS(<strong>null</strong>, SVGConstants.SVG_STYLE_ATTRIBUTE, VISIBILITY_HIDDEN);\n<a name=\"675\" href=\"#675\">675</a>     }\n<a name=\"676\" href=\"#676\">676</a> \n<a name=\"677\" href=\"#677\">677</a>     <em>/**<em>*</em></em>\n<a name=\"678\" href=\"#678\">678</a> <em>     * Trigger a refresh for Batik. Batik requires updating through update manager</em>\n<a name=\"679\" href=\"#679\">679</a> <em>     * This refresh sets the background of the private space and triggers a repaint</em>\n<a name=\"680\" href=\"#680\">680</a> <em>     */</em>\n<a name=\"681\" href=\"#681\">681</a>     <strong>public</strong> <strong>void</strong> repaint() {\n<a name=\"682\" href=\"#682\">682</a>         <strong>final</strong> Element\trefreshTrigger = privateSpace;\n<a name=\"683\" href=\"#683\">683</a>         laterWork.invokeLater(<strong>new</strong> Runnable() {\n<a name=\"684\" href=\"#684\">684</a>     \t\t<strong>public</strong> <strong>void</strong> run() {\n<a name=\"685\" href=\"#685\">685</a>     \t        refreshTrigger.setAttributeNS(<strong>null</strong>, SVGConstants.CSS_FILL_PROPERTY, \n<a name=\"686\" href=\"#686\">686</a>     \t\t            Configuration.COLOR_PRIVATE_SPACE);\n<a name=\"687\" href=\"#687\">687</a>     \t\t}\n<a name=\"688\" href=\"#688\">688</a>         });\n<a name=\"689\" href=\"#689\">689</a>     }\n<a name=\"690\" href=\"#690\">690</a> \n<a name=\"691\" href=\"#691\">691</a>     <em>/**<em>*</em></em>\n<a name=\"692\" href=\"#692\">692</a> <em>     * Set the update manager for this pie</em>\n<a name=\"693\" href=\"#693\">693</a> <em>     * @param _updater the update manager</em>\n<a name=\"694\" href=\"#694\">694</a> <em>     */</em>\n<a name=\"695\" href=\"#695\">695</a>     <strong>public</strong> <strong>void</strong> setUpdateManager(UpdateManager _updater) {\n<a name=\"696\" href=\"#696\">696</a>         updater = _updater;\n<a name=\"697\" href=\"#697\">697</a>         laterWork = updater.getUpdateRunnableQueue();\n<a name=\"698\" href=\"#698\">698</a>         \n<a name=\"699\" href=\"#699\">699</a>         <em class=\"comment\">// pick up any update requests that were sent before we are up</em>\n<a name=\"700\" href=\"#700\">700</a>         <strong>for</strong> (Iterator i = toUpdater.iterator(); i.hasNext(); ) {\n<a name=\"701\" href=\"#701\">701</a>             ServiceInfo si = (ServiceInfo)i.next();\n<a name=\"702\" href=\"#702\">702</a>             createAPeer(si);\n<a name=\"703\" href=\"#703\">703</a>         }\n<a name=\"704\" href=\"#704\">704</a>         toUpdater.clear();\n<a name=\"705\" href=\"#705\">705</a>         \n<a name=\"706\" href=\"#706\">706</a>         <em class=\"comment\">// Start a thread that is in charge of blinking dots</em>\n<a name=\"707\" href=\"#707\">707</a>         <strong>new</strong> Thread(<span class=\"string\">\"Dot Blinker\"</span>) {\n<a name=\"708\" href=\"#708\">708</a>             <strong>public</strong> <strong>void</strong> run() {\n<a name=\"709\" href=\"#709\">709</a>                 <strong>while</strong> (<strong>true</strong>) {\n<a name=\"710\" href=\"#710\">710</a>                     <em class=\"comment\">// blinking interval</em>\n<a name=\"711\" href=\"#711\">711</a>                     <strong>try</strong> {\n<a name=\"712\" href=\"#712\">712</a>                         Thread.sleep(500);\n<a name=\"713\" href=\"#713\">713</a>                     }\n<a name=\"714\" href=\"#714\">714</a>                     <strong>catch</strong> (InterruptedException e) {\n<a name=\"715\" href=\"#715\">715</a>                     }\n<a name=\"716\" href=\"#716\">716</a>                     <em class=\"comment\">// Remove dots that have blinked</em>\n<a name=\"717\" href=\"#717\">717</a>                     <strong>synchronized</strong>(dotsToBlink) {\n<a name=\"718\" href=\"#718\">718</a>                         List\ttoRemove = <strong>new</strong> ArrayList();\n<a name=\"719\" href=\"#719\">719</a> \t                    <strong>for</strong> (Iterator i = dotsToBlink.iterator(); i.hasNext();) {\n<a name=\"720\" href=\"#720\">720</a> \t                        Dot\td = (Dot)i.next();\n<a name=\"721\" href=\"#721\">721</a> \t                        <strong>if</strong> (d.blinked())\n<a name=\"722\" href=\"#722\">722</a> \t                            toRemove.add(d);\n<a name=\"723\" href=\"#723\">723</a> \t                    }\n<a name=\"724\" href=\"#724\">724</a> \t                    dotsToBlink.removeAll(toRemove);\n<a name=\"725\" href=\"#725\">725</a> \t                    <strong>if</strong> (!dotsToBlink.isEmpty()) {\n<a name=\"726\" href=\"#726\">726</a> \t\t                    <em class=\"comment\">// Keep blinking other dots</em>\n<a name=\"727\" href=\"#727\">727</a> \t\t                    laterWork.invokeLater(<strong>new</strong> Runnable() {\n<a name=\"728\" href=\"#728\">728</a> \t\t                        <strong>public</strong> <strong>void</strong> run() {\n<a name=\"729\" href=\"#729\">729</a> \t\t                            <strong>synchronized</strong>(dotsToBlink) {\n<a name=\"730\" href=\"#730\">730</a> \t\t\t                            <strong>for</strong> (Iterator i = dotsToBlink.iterator(); i.hasNext();) {\n<a name=\"731\" href=\"#731\">731</a> \t\t\t                                Dot\td = (Dot)i.next();\n<a name=\"732\" href=\"#732\">732</a> \t\t\t                                d.blink();\n<a name=\"733\" href=\"#733\">733</a> \t\t\t                            }\n<a name=\"734\" href=\"#734\">734</a> \t\t                            }\n<a name=\"735\" href=\"#735\">735</a> \t\t                        }\n<a name=\"736\" href=\"#736\">736</a> \t\t                    });\n<a name=\"737\" href=\"#737\">737</a> \t                    }\n<a name=\"738\" href=\"#738\">738</a>                     }\n<a name=\"739\" href=\"#739\">739</a>                 }\n<a name=\"740\" href=\"#740\">740</a>             }\n<a name=\"741\" href=\"#741\">741</a>         }.start();\n<a name=\"742\" href=\"#742\">742</a>     }\n<a name=\"743\" href=\"#743\">743</a> \n<a name=\"744\" href=\"#744\">744</a>     <em>/**<em>*</em></em>\n<a name=\"745\" href=\"#745\">745</a> <em>     * Get the udpate manager for this pie</em>\n<a name=\"746\" href=\"#746\">746</a> <em>     * @return the update manager</em>\n<a name=\"747\" href=\"#747\">747</a> <em>     */</em>\n<a name=\"748\" href=\"#748\">748</a>     <strong>public</strong> UpdateManager getUpdateManager() {\n<a name=\"749\" href=\"#749\">749</a>         <strong>return</strong> updater;\n<a name=\"750\" href=\"#750\">750</a>     }\n<a name=\"751\" href=\"#751\">751</a>     \n<a name=\"752\" href=\"#752\">752</a>     <em>/**<em>*</em></em>\n<a name=\"753\" href=\"#753\">753</a> <em>     * Set the canvas for this pie</em>\n<a name=\"754\" href=\"#754\">754</a> <em>     * This could be merged with update manager, but we might want to use SWT</em>\n<a name=\"755\" href=\"#755\">755</a> <em>     * @param _canvas the SVG canvas</em>\n<a name=\"756\" href=\"#756\">756</a> <em>     */</em>\n<a name=\"757\" href=\"#757\">757</a>     <strong>public</strong> <strong>void</strong> setJSVGCanvas(JSVGCanvas _canvas) {\n<a name=\"758\" href=\"#758\">758</a>         canvas = _canvas;\n<a name=\"759\" href=\"#759\">759</a>     }\n<a name=\"760\" href=\"#760\">760</a> \n<a name=\"761\" href=\"#761\">761</a>     <em>/**<em>*</em></em>\n<a name=\"762\" href=\"#762\">762</a> <em>     * Translate the client coordinate to the SVG coordinate</em>\n<a name=\"763\" href=\"#763\">763</a> <em>     * @param evt the event containing the client coordinate</em>\n<a name=\"764\" href=\"#764\">764</a> <em>     * @return the SVG coordinate </em>\n<a name=\"765\" href=\"#765\">765</a> <em>     */</em>\n<a name=\"766\" href=\"#766\">766</a>     <strong>private</strong> Point2D clientToSVG(DOMMouseEvent evt) { \n<a name=\"767\" href=\"#767\">767</a> \t    AffineTransform at = canvas.getViewBoxTransform();\n<a name=\"768\" href=\"#768\">768</a> \t    <strong>try</strong> {\n<a name=\"769\" href=\"#769\">769</a> \t        at = at.createInverse();\n<a name=\"770\" href=\"#770\">770</a> \t    } \n<a name=\"771\" href=\"#771\">771</a> \t    <strong>catch</strong> (NoninvertibleTransformException e) {\n<a name=\"772\" href=\"#772\">772</a> \t    }\n<a name=\"773\" href=\"#773\">773</a> \t    <strong>return</strong> at.transform(<strong>new</strong> Point2D.Float(evt.getClientX(), evt.getClientY()), <strong>null</strong>);\n<a name=\"774\" href=\"#774\">774</a>     }\n<a name=\"775\" href=\"#775\">775</a>     \n<a name=\"776\" href=\"#776\">776</a>     <em>/**<em>*</em></em>\n<a name=\"777\" href=\"#777\">777</a> <em>     * Translate the client coordinate to the SVG coordinate</em>\n<a name=\"778\" href=\"#778\">778</a> <em>     * @param p the event containing the client coordinate</em>\n<a name=\"779\" href=\"#779\">779</a> <em>     * @return the SVG coordinate </em>\n<a name=\"780\" href=\"#780\">780</a> <em>     */</em>\n<a name=\"781\" href=\"#781\">781</a>     <strong>private</strong> Point2D clientToSVG(Point p) { \n<a name=\"782\" href=\"#782\">782</a> \t    AffineTransform at = canvas.getViewBoxTransform();\n<a name=\"783\" href=\"#783\">783</a> \t    <strong>try</strong> {\n<a name=\"784\" href=\"#784\">784</a> \t        at = at.createInverse();\n<a name=\"785\" href=\"#785\">785</a> \t    } \n<a name=\"786\" href=\"#786\">786</a> \t    <strong>catch</strong> (NoninvertibleTransformException e) {\n<a name=\"787\" href=\"#787\">787</a> \t    }\n<a name=\"788\" href=\"#788\">788</a> \t    <strong>return</strong> at.transform(p, <strong>null</strong>);\n<a name=\"789\" href=\"#789\">789</a>     }\n<a name=\"790\" href=\"#790\">790</a>     \n<a name=\"791\" href=\"#791\">791</a>     <em>/**<em>*</em></em>\n<a name=\"792\" href=\"#792\">792</a> <em>     * Whether to use a delegate for dragging</em>\n<a name=\"793\" href=\"#793\">793</a> <em>     */</em>\n<a name=\"794\" href=\"#794\">794</a>     <strong>private</strong> <strong>boolean</strong> \t\t\tdragWithDelegate = false;\n<a name=\"795\" href=\"#795\">795</a> \n<a name=\"796\" href=\"#796\">796</a>     <em>/**<em>*</em></em>\n<a name=\"797\" href=\"#797\">797</a> <em>     * Set whether to use a delegate for dragging</em>\n<a name=\"798\" href=\"#798\">798</a> <em>     * @param drag true for using a delegate, false for using the dot directly</em>\n<a name=\"799\" href=\"#799\">799</a> <em>     */</em>\n<a name=\"800\" href=\"#800\">800</a>     <strong>public</strong> <strong>void</strong> setDragWithDelegate(<strong>boolean</strong> drag) {\n<a name=\"801\" href=\"#801\">801</a>         dragWithDelegate = drag;\n<a name=\"802\" href=\"#802\">802</a>     }\n<a name=\"803\" href=\"#803\">803</a> \n<a name=\"804\" href=\"#804\">804</a>     <em>/**<em>*</em></em>\n<a name=\"805\" href=\"#805\">805</a> <em>     * Get whether to use a delgate for dragging </em>\n<a name=\"806\" href=\"#806\">806</a> <em>     * @return true for using a delegate, false for using the dot directly</em>\n<a name=\"807\" href=\"#807\">807</a> <em>     */</em>\n<a name=\"808\" href=\"#808\">808</a>     <strong>public</strong> <strong>boolean</strong> getDragWithDelegate() {\n<a name=\"809\" href=\"#809\">809</a>         <strong>return</strong> dragWithDelegate;\n<a name=\"810\" href=\"#810\">810</a>     }\n<a name=\"811\" href=\"#811\">811</a>     \n<a name=\"812\" href=\"#812\">812</a>     <em>/**<em>*</em></em>\n<a name=\"813\" href=\"#813\">813</a> <em>     * The target element used in dragging. If using a delegate,</em>\n<a name=\"814\" href=\"#814\">814</a> <em>     * then this is the draggingDelegate template element. If not using a delgate,</em>\n<a name=\"815\" href=\"#815\">815</a> <em>     * then this is the real dot's group element that is being dragged </em>\n<a name=\"816\" href=\"#816\">816</a> <em>     */</em>\n<a name=\"817\" href=\"#817\">817</a>     <strong>private</strong> Element\t\t\t\tdraggingTarget;\n<a name=\"818\" href=\"#818\">818</a>     <em>/**<em>*</em></em>\n<a name=\"819\" href=\"#819\">819</a> <em>     * Are we dragging?</em>\n<a name=\"820\" href=\"#820\">820</a> <em>     */</em>\n<a name=\"821\" href=\"#821\">821</a>     <strong>private</strong>\t<strong>boolean</strong>\t\t\t\tisDragging = false;\n<a name=\"822\" href=\"#822\">822</a>     <em>/**<em>*</em></em>\n<a name=\"823\" href=\"#823\">823</a> <em>     * Which dot is selected?</em>\n<a name=\"824\" href=\"#824\">824</a> <em>     */</em>\n<a name=\"825\" href=\"#825\">825</a>     <strong>private</strong> Dot\t\t\t\t\tselectedDot;\n<a name=\"826\" href=\"#826\">826</a>     <em>/**<em>*</em></em>\n<a name=\"827\" href=\"#827\">827</a> <em>     * The old position for a dot, saved for dragging cancellation</em>\n<a name=\"828\" href=\"#828\">828</a> <em>     */</em>\n<a name=\"829\" href=\"#829\">829</a>     <strong>private</strong> Point2D\t\t\t\toldP2d;\n<a name=\"830\" href=\"#830\">830</a> \n<a name=\"831\" href=\"#831\">831</a>     <em>/**<em>*</em></em>\n<a name=\"832\" href=\"#832\">832</a> <em>     * Event handling</em>\n<a name=\"833\" href=\"#833\">833</a> <em>     */</em>\n<a name=\"834\" href=\"#834\">834</a>     <strong>public</strong> <strong>void</strong> handleEvent(Event _evt) {\n<a name=\"835\" href=\"#835\">835</a>         <strong>final</strong> Event\t\t\tkeyEvt = _evt;\n<a name=\"836\" href=\"#836\">836</a>         EventTarget \t\ttarget = _evt.getTarget();\n<a name=\"837\" href=\"#837\">837</a>         String\t\t\t\teventType = _evt.getType();\n<a name=\"838\" href=\"#838\">838</a>         DOMMouseEvent \t\tmouseHolder = <strong>null</strong>;\n<a name=\"839\" href=\"#839\">839</a>         <strong>if</strong> (_evt instanceof DOMMouseEvent)\n<a name=\"840\" href=\"#840\">840</a>             mouseHolder = (DOMMouseEvent) _evt;\n<a name=\"841\" href=\"#841\">841</a>         <strong>final</strong> DOMMouseEvent evt = mouseHolder;\n<a name=\"842\" href=\"#842\">842</a>         Element \t\t\tdotElement = (Element)((Element) target).getParentNode();\n<a name=\"843\" href=\"#843\">843</a>         Dot\t\t\t\t\tdotHolder = <strong>null</strong>;\n<a name=\"844\" href=\"#844\">844</a>         <strong>if</strong> (dotElement != <strong>null</strong>) {\n<a name=\"845\" href=\"#845\">845</a>             String\t\t\tfileName = dotElement.getAttribute(SVGConstants.SVG_ID_ATTRIBUTE);\n<a name=\"846\" href=\"#846\">846</a>             dotHolder = getFile(fileName);\n<a name=\"847\" href=\"#847\">847</a>         }\n<a name=\"848\" href=\"#848\">848</a>         <strong>final</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pie/Dot.html\">Dot</a> \t\t\tdot = dotHolder;\n<a name=\"849\" href=\"#849\">849</a> \n<a name=\"850\" href=\"#850\">850</a>         <strong>if</strong> (eventType.equals(SVGConstants.SVG_MOUSEOVER_EVENT_TYPE)) {\n<a name=\"851\" href=\"#851\">851</a>             <em class=\"comment\">// move the tip at the first mouse over</em>\n<a name=\"852\" href=\"#852\">852</a>             laterWork.invokeLater(<strong>new</strong> Runnable() {\n<a name=\"853\" href=\"#853\">853</a>                 <strong>public</strong> <strong>void</strong> run() {\n<a name=\"854\" href=\"#854\">854</a>                     showDescription(dot);\n<a name=\"855\" href=\"#855\">855</a>                     dot.handleEvent(evt);\n<a name=\"856\" href=\"#856\">856</a>                 }\n<a name=\"857\" href=\"#857\">857</a>             });\n<a name=\"858\" href=\"#858\">858</a>         } \n<a name=\"859\" href=\"#859\">859</a> \t\t<strong>else</strong> <strong>if</strong> (eventType.equals(SVGConstants.SVG_MOUSEOUT_EVENT_TYPE)) {\n<a name=\"860\" href=\"#860\">860</a>             laterWork.invokeLater(<strong>new</strong> Runnable() {\n<a name=\"861\" href=\"#861\">861</a>                 <strong>public</strong> <strong>void</strong> run() {\n<a name=\"862\" href=\"#862\">862</a>                     hideDescription();\n<a name=\"863\" href=\"#863\">863</a>                     <strong>if</strong> (dot != <strong>null</strong>)\n<a name=\"864\" href=\"#864\">864</a>                         dot.handleEvent(evt);\n<a name=\"865\" href=\"#865\">865</a>                 }\n<a name=\"866\" href=\"#866\">866</a>             });\n<a name=\"867\" href=\"#867\">867</a>         } \n<a name=\"868\" href=\"#868\">868</a> \t\t<strong>else</strong> <strong>if</strong> (eventType.equals(SVGConstants.SVG_MOUSEDOWN_EVENT_TYPE)) {\n<a name=\"869\" href=\"#869\">869</a>             laterWork.invokeLater(<strong>new</strong> Runnable() {\n<a name=\"870\" href=\"#870\">870</a>         \t\t<strong>public</strong> <strong>void</strong> run() {\n<a name=\"871\" href=\"#871\">871</a>         \t\t    <em class=\"comment\">// This is the single selection model</em>\n<a name=\"872\" href=\"#872\">872</a>         \t\t    <strong>if</strong> (selectedDot != <strong>null</strong>)\n<a name=\"873\" href=\"#873\">873</a>         \t\t        selectedDot.deselect();\n<a name=\"874\" href=\"#874\">874</a>         \t\t\tselectedDot = dot;\n<a name=\"875\" href=\"#875\">875</a>         \t\t\tselectedDot.select();\n<a name=\"876\" href=\"#876\">876</a> \n<a name=\"877\" href=\"#877\">877</a>     \t\t\t    EventTarget selectedTarget = (EventTarget)selectedDot.getGroupElement();\n<a name=\"878\" href=\"#878\">878</a>     \t\t\t    <em class=\"comment\">// track mouse up events, for pure selection</em>\n<a name=\"879\" href=\"#879\">879</a>     \t\t\t    <em class=\"comment\">// track mouse move events, for dragging, </em>\n<a name=\"880\" href=\"#880\">880</a>     \t\t\t    <em class=\"comment\">//\t\tand no need to move out of the circle to start dragging</em>\n<a name=\"881\" href=\"#881\">881</a>     \t\t\t    <em class=\"comment\">// track keypress events of (Esc) for cancelling selection or dragging</em>\n<a name=\"882\" href=\"#882\">882</a>     \t\t\t\tselectedTarget.addEventListener(SVGConstants.SVG_MOUSEUP_EVENT_TYPE, Pie.<strong>this</strong>, false);\n<a name=\"883\" href=\"#883\">883</a>         \t        <em class=\"comment\">// allow dragging only for local files</em>\n<a name=\"884\" href=\"#884\">884</a>     \t\t\t\t<strong>if</strong> (localPeer.owns(selectedDot.getFileName()))\n<a name=\"885\" href=\"#885\">885</a>     \t\t\t\t    selectedTarget.addEventListener(SVGConstants.SVG_MOUSEMOVE_EVENT_TYPE, Pie.<strong>this</strong>, false);\n<a name=\"886\" href=\"#886\">886</a>     \t\t\t\tselectedTarget.addEventListener(SVGConstants.SVG_KEYPRESS_EVENT_TYPE, Pie.<strong>this</strong>, false);\n<a name=\"887\" href=\"#887\">887</a> \n<a name=\"888\" href=\"#888\">888</a>     \t\t\t\t<em class=\"comment\">// also track these events on the local mask and private space</em>\n<a name=\"889\" href=\"#889\">889</a>     \t\t\t\tEventTarget\t\tlm = (EventTarget)localMask;\n<a name=\"890\" href=\"#890\">890</a>     \t\t\t\tEventTarget\t\tps = (EventTarget)privateSpace;\n<a name=\"891\" href=\"#891\">891</a>         \t        lm.addEventListener(SVGConstants.SVG_MOUSEUP_EVENT_TYPE, Pie.<strong>this</strong>, false);\n<a name=\"892\" href=\"#892\">892</a>         \t        ps.addEventListener(SVGConstants.SVG_MOUSEUP_EVENT_TYPE, Pie.<strong>this</strong>, false);\n<a name=\"893\" href=\"#893\">893</a>         \t        <em class=\"comment\">// allow dragging only for local files</em>\n<a name=\"894\" href=\"#894\">894</a>     \t\t\t\t<strong>if</strong> (localPeer.owns(selectedDot.getFileName())) {\n<a name=\"895\" href=\"#895\">895</a> \t        \t        lm.addEventListener(SVGConstants.SVG_MOUSEMOVE_EVENT_TYPE, Pie.<strong>this</strong>, false);\n<a name=\"896\" href=\"#896\">896</a> \t        \t        ps.addEventListener(SVGConstants.SVG_MOUSEMOVE_EVENT_TYPE, Pie.<strong>this</strong>, false);\n<a name=\"897\" href=\"#897\">897</a>     \t\t\t\t}\n<a name=\"898\" href=\"#898\">898</a>     \t\t\t\t<em class=\"comment\">// Save the old position. </em>\n<a name=\"899\" href=\"#899\">899</a>     \t\t\t\t<em class=\"comment\">// If doing this at move, then only the position after the first move is saved</em>\n<a name=\"900\" href=\"#900\">900</a>     \t\t\t\t<em class=\"comment\">// And must use the position from the dot, otherwise there is minor movement</em>\n<a name=\"901\" href=\"#901\">901</a>     \t\t\t\toldP2d = selectedDot.getLocation();\n<a name=\"902\" href=\"#902\">902</a>         \t\t}\n<a name=\"903\" href=\"#903\">903</a>             });\n<a name=\"904\" href=\"#904\">904</a>         } \n<a name=\"905\" href=\"#905\">905</a> \t\t<strong>else</strong> <strong>if</strong> (eventType.equals(SVGConstants.SVG_MOUSEMOVE_EVENT_TYPE)) {\n<a name=\"906\" href=\"#906\">906</a>             laterWork.invokeLater(<strong>new</strong> Runnable() {\n<a name=\"907\" href=\"#907\">907</a>         \t\t<strong>public</strong> <strong>void</strong> run() {\n<a name=\"908\" href=\"#908\">908</a>         \t\t    Point2D p2d = <strong>null</strong>;\n<a name=\"909\" href=\"#909\">909</a>         \t\t\t<strong>if</strong>(!isDragging &amp;&amp; evt.getButton() == 0 &amp;&amp; selectedDot != <strong>null</strong> ){\n<a name=\"910\" href=\"#910\">910</a>         \t\t\t    <em class=\"comment\">// when it just starts moving: not dragging yet, a dot is selcted,</em>\n<a name=\"911\" href=\"#911\">911</a>         \t\t\t    <em class=\"comment\">// mouse is moved, and the primary button is pressed</em>\n<a name=\"912\" href=\"#912\">912</a>         \t\t\t\tisDragging = <strong>true</strong>;\n<a name=\"913\" href=\"#913\">913</a>         \t\t\t\tp2d = clientToSVG(evt);\n<a name=\"914\" href=\"#914\">914</a> \n<a name=\"915\" href=\"#915\">915</a>         \t\t\t\t<strong>if</strong> (dragWithDelegate) {\n<a name=\"916\" href=\"#916\">916</a>             \t\t\t\t<em class=\"comment\">// show the delegate dot</em>\n<a name=\"917\" href=\"#917\">917</a>         \t\t\t\t    draggingDelegate.setAttributeNS(<strong>null</strong>, SVGConstants.SVG_STYLE_ATTRIBUTE, VISIBILITY_VISIBLE);\n<a name=\"918\" href=\"#918\">918</a>         \t\t\t\t    <em class=\"comment\">// use the delegate</em>\n<a name=\"919\" href=\"#919\">919</a>             \t\t\t    draggingTarget = draggingDelegate;\n<a name=\"920\" href=\"#920\">920</a>             \t\t\t    <em class=\"comment\">// track the delegate</em>\n<a name=\"921\" href=\"#921\">921</a>             \t\t\t    EventTarget\t\tet = (EventTarget)draggingTarget;\n<a name=\"922\" href=\"#922\">922</a>             \t\t\t\tet.addEventListener(SVGConstants.SVG_MOUSEUP_EVENT_TYPE, Pie.<strong>this</strong>, false);\n<a name=\"923\" href=\"#923\">923</a>                 \t\t\tet.addEventListener(SVGConstants.SVG_MOUSEMOVE_EVENT_TYPE, Pie.<strong>this</strong>, false);\n<a name=\"924\" href=\"#924\">924</a>             \t\t\t\tet.addEventListener(SVGConstants.SVG_KEYPRESS_EVENT_TYPE, Pie.<strong>this</strong>, false);\n<a name=\"925\" href=\"#925\">925</a>             \t\t\t}\n<a name=\"926\" href=\"#926\">926</a>             \t\t\t<strong>else</strong> { \n<a name=\"927\" href=\"#927\">927</a>             \t\t\t    draggingTarget = selectedDot.getGroupElement();\n<a name=\"928\" href=\"#928\">928</a>             \t\t\t}\n<a name=\"929\" href=\"#929\">929</a> \n<a name=\"930\" href=\"#930\">930</a>         \t\t\t\t<strong>if</strong> (selectedDot != <strong>null</strong>) {\n<a name=\"931\" href=\"#931\">931</a>         \t\t\t\t    <strong>if</strong> (dragWithDelegate) {\n<a name=\"932\" href=\"#932\">932</a>         \t        \t        draggingText.setNodeValue(selectedDot.getFileName());\n<a name=\"933\" href=\"#933\">933</a>         \t\t\t\t    }\n<a name=\"934\" href=\"#934\">934</a>         \t\t\t\t    <strong>else</strong> {\n<a name=\"935\" href=\"#935\">935</a> \t    \t        \t        ((EventTarget)draggingTarget).removeEventListener(SVGConstants.SVG_MOUSEOVER_EVENT_TYPE,\n<a name=\"936\" href=\"#936\">936</a> \t    \t        \t                Pie.<strong>this</strong>, false);\n<a name=\"937\" href=\"#937\">937</a> \t    \t        \t        ((EventTarget)draggingTarget).removeEventListener(SVGConstants.SVG_MOUSEOUT_EVENT_TYPE,\n<a name=\"938\" href=\"#938\">938</a> \t    \t        \t                Pie.<strong>this</strong>, false);\n<a name=\"939\" href=\"#939\">939</a>         \t\t\t\t    }\n<a name=\"940\" href=\"#940\">940</a>             \t        }\n<a name=\"941\" href=\"#941\">941</a>         \t\t\t}\n<a name=\"942\" href=\"#942\">942</a>         \t\t\t<strong>if</strong> (!isDragging){\n<a name=\"943\" href=\"#943\">943</a>         \t\t\t    <em class=\"comment\">// if we are not dragging, then return</em>\n<a name=\"944\" href=\"#944\">944</a>         \t\t\t    <strong>return</strong>;\n<a name=\"945\" href=\"#945\">945</a>         \t\t\t}\n<a name=\"946\" href=\"#946\">946</a>         \t\t\t\n<a name=\"947\" href=\"#947\">947</a>         \t\t\t<strong>if</strong> (evt.getButton() != 0 ) {\n<a name=\"948\" href=\"#948\">948</a>         \t\t\t    <em class=\"comment\">// if we were dragging, but the button is not pressed, </em>\n<a name=\"949\" href=\"#949\">949</a>         \t\t\t    <em class=\"comment\">//   \tthen we cancel the dragging</em>\n<a name=\"950\" href=\"#950\">950</a>         \t\t\t    <em class=\"comment\">// This happens when a mouse up happens in some other elements </em>\n<a name=\"951\" href=\"#951\">951</a>         \t\t\t    <em class=\"comment\">// \t\twhich we do not track mouse up events</em>\n<a name=\"952\" href=\"#952\">952</a>         \t\t\t    <em class=\"comment\">// Sicne there are many that we DO NOT track, this prevention </em>\n<a name=\"953\" href=\"#953\">953</a>         \t\t\t    <em class=\"comment\">//\t\tmethod, which is cheaper, is used</em>\n<a name=\"954\" href=\"#954\">954</a>         \t\t\t    endDragging();\n<a name=\"955\" href=\"#955\">955</a>         \t\t\t    <strong>return</strong>;\n<a name=\"956\" href=\"#956\">956</a>         \t\t\t}\n<a name=\"957\" href=\"#957\">957</a> \n<a name=\"958\" href=\"#958\">958</a>         \t\t\t<strong>if</strong> (p2d == <strong>null</strong>)\n<a name=\"959\" href=\"#959\">959</a>         \t\t\t    p2d = clientToSVG(evt);\n<a name=\"960\" href=\"#960\">960</a>                     <strong>if</strong> (dragWithDelegate) {\n<a name=\"961\" href=\"#961\">961</a> \t        \t    \tdraggingTarget.setAttributeNS(<strong>null</strong>, SVGConstants.SVG_TRANSFORM_ATTRIBUTE,\n<a name=\"962\" href=\"#962\">962</a> \t                            PieUtils.getTranslateString(p2d.getX(), p2d.getY()));\n<a name=\"963\" href=\"#963\">963</a>                     }\n<a name=\"964\" href=\"#964\">964</a>                     <strong>else</strong> {\n<a name=\"965\" href=\"#965\">965</a>         \t\t\t\tselectedDot.updateLocation(<strong>new</strong> Po<strong>int</strong>((<strong>int</strong>)p2d.getX() - Configuration.CENTER_X, \n<a name=\"966\" href=\"#966\">966</a>         \t\t\t\t        (<strong>int</strong>)p2d.getY() - Configuration.CENTER_Y));\n<a name=\"967\" href=\"#967\">967</a>                     }\n<a name=\"968\" href=\"#968\">968</a>         \t\t\tshowDescription(selectedDot);\n<a name=\"969\" href=\"#969\">969</a>         \t\t}\n<a name=\"970\" href=\"#970\">970</a>             });\n<a name=\"971\" href=\"#971\">971</a>         } \n<a name=\"972\" href=\"#972\">972</a> \t\t<strong>else</strong> <strong>if</strong> (eventType.equals(SVGConstants.SVG_MOUSEUP_EVENT_TYPE)) {\n<a name=\"973\" href=\"#973\">973</a>             laterWork.invokeLater(<strong>new</strong> Runnable() {\n<a name=\"974\" href=\"#974\">974</a>         \t\t<strong>public</strong> <strong>void</strong> run() {\n<a name=\"975\" href=\"#975\">975</a>         \t\t\t<strong>if</strong>(isDragging){\n<a name=\"976\" href=\"#976\">976</a>         \t\t\t\t<em class=\"comment\">// position change</em>\n<a name=\"977\" href=\"#977\">977</a>         \t\t\t    <em class=\"comment\">// The owner of ACL is set by Slide automatically</em>\n<a name=\"978\" href=\"#978\">978</a>         \t\t\t\tPoint2D p2d = clientToSVG(evt);\n<a name=\"979\" href=\"#979\">979</a>         \t\t\t\tselectedDot.updateLocation(<strong>new</strong> Po<strong>int</strong>((<strong>int</strong>)p2d.getX() - Configuration.CENTER_X, \n<a name=\"980\" href=\"#980\">980</a>         \t\t\t\t        (<strong>int</strong>)p2d.getY() - Configuration.CENTER_Y));\n<a name=\"981\" href=\"#981\">981</a>         \t\t\t\t<em class=\"comment\">// show a new tip</em>\n<a name=\"982\" href=\"#982\">982</a>         \t\t        showDescription(selectedDot);\n<a name=\"983\" href=\"#983\">983</a> \n<a name=\"984\" href=\"#984\">984</a>         \t\t        <em class=\"comment\">// This is PROPPATCH and ACL</em>\n<a name=\"985\" href=\"#985\">985</a>         \t\t\t\t<em class=\"comment\">// These two succeed because me is able </em>\n<a name=\"986\" href=\"#986\">986</a>         \t\t\t\t<em class=\"comment\">//\tto do anything, even the security setting for others </em>\n<a name=\"987\" href=\"#987\">987</a>         \t\t\t\t<em class=\"comment\">//\t(the level handler) has not been changed yet</em>\n<a name=\"988\" href=\"#988\">988</a>         \t\t        setDotProperties(selectedDot);\n<a name=\"989\" href=\"#989\">989</a> \n<a name=\"990\" href=\"#990\">990</a>         \t\t\t    <em class=\"comment\">// send out the movement</em>\n<a name=\"991\" href=\"#991\">991</a>     \t                Map\t\tmovedEvent = <strong>new</strong> HashMap();\n<a name=\"992\" href=\"#992\">992</a>     \t                movedEvent.put(MessageProcessor.ATTR_PEER_NAME, \n<a name=\"993\" href=\"#993\">993</a>     \t                        userName);\n<a name=\"994\" href=\"#994\">994</a>     \t                movedEvent.put(MessageProcessor.ATTR_FILE_NAME, \n<a name=\"995\" href=\"#995\">995</a>     \t                        selectedDot.getFileName());\n<a name=\"996\" href=\"#996\">996</a>     \t                movedEvent.put(MessageProcessor.ATTR_ACTION, \n<a name=\"997\" href=\"#997\">997</a>     \t                    MessageProcessor.ACTION_MOVE);\n<a name=\"998\" href=\"#998\">998</a>     \t                movedEvent.put(MessageProcessor.ATTR_RADIUS, \n<a name=\"999\" href=\"#999\">999</a>     \t                    String.valueOf(selectedDot.getRadius()));\n<a name=\"1000\" href=\"#1000\">1000</a>     \t                movedEvent.put(MessageProcessor.ATTR_ANGLE, \n<a name=\"1001\" href=\"#1001\">1001</a>     \t                    String.valueOf(selectedDot.getAngle()));\n<a name=\"1002\" href=\"#1002\">1002</a>     \t                movedEvent.put(MessageProcessor.ATTR_LEVEL, \n<a name=\"1003\" href=\"#1003\">1003</a>         \t                    String.valueOf(selectedDot.getSharingLevel()));\n<a name=\"1004\" href=\"#1004\">1004</a>     \t                pm.sendMessage(movedEvent);\n<a name=\"1005\" href=\"#1005\">1005</a>     \t                \n<a name=\"1006\" href=\"#1006\">1006</a>         \t\t\t\tendDragging();\n<a name=\"1007\" href=\"#1007\">1007</a>         \t\t\t}\n<a name=\"1008\" href=\"#1008\">1008</a>         \t\t\t<strong>else</strong> {\n<a name=\"1009\" href=\"#1009\">1009</a>         \t\t\t\tstopListeningAfterMouseUp();\n<a name=\"1010\" href=\"#1010\">1010</a>         \t\t\t}\n<a name=\"1011\" href=\"#1011\">1011</a>         \t\t}\n<a name=\"1012\" href=\"#1012\">1012</a>             });\n<a name=\"1013\" href=\"#1013\">1013</a>         } \n<a name=\"1014\" href=\"#1014\">1014</a> \t\t<strong>else</strong> <strong>if</strong> (eventType.equals(SVGConstants.SVG_KEYPRESS_EVENT_TYPE)) {\n<a name=\"1015\" href=\"#1015\">1015</a>             laterWork.invokeLater(<strong>new</strong> Runnable() {\n<a name=\"1016\" href=\"#1016\">1016</a>         \t\t<strong>public</strong> <strong>void</strong> run() {\n<a name=\"1017\" href=\"#1017\">1017</a> \t\t\t        <strong>if</strong> (((DOMKeyEvent)keyEvt).getCharCode() == DOMKeyEvent.DOM_VK_ESCAPE){\n<a name=\"1018\" href=\"#1018\">1018</a> \t\t\t            <strong>if</strong>(isDragging) { \n<a name=\"1019\" href=\"#1019\">1019</a> \t        \t\t\t    <em class=\"comment\">// press Esc to cancel dragging</em>\n<a name=\"1020\" href=\"#1020\">1020</a> \t        \t\t\t\tendDragging();\n<a name=\"1021\" href=\"#1021\">1021</a> \t        \t\t\t\tselectedDot.updateLocation(<strong>new</strong> Po<strong>int</strong>((<strong>int</strong>)oldP2d.getX(), \n<a name=\"1022\" href=\"#1022\">1022</a> \t        \t\t\t\t        (<strong>int</strong>)oldP2d.getY()));\n<a name=\"1023\" href=\"#1023\">1023</a> \t\t\t            }\n<a name=\"1024\" href=\"#1024\">1024</a> \t\t\t            <strong>else</strong> <strong>if</strong> (selectedDot != <strong>null</strong>) {\n<a name=\"1025\" href=\"#1025\">1025</a> \t\t\t                <em class=\"comment\">// also use Esc to cancel selection</em>\n<a name=\"1026\" href=\"#1026\">1026</a> \t\t\t                <em class=\"comment\">// tracking mouse down events for non dot elements </em>\n<a name=\"1027\" href=\"#1027\">1027</a> \t\t\t                <em class=\"comment\">//\t\tmight be expensive </em>\n<a name=\"1028\" href=\"#1028\">1028</a> \t\t\t                selectedDot.deselect();\n<a name=\"1029\" href=\"#1029\">1029</a> \t\t\t                selectedDot = <strong>null</strong>;\n<a name=\"1030\" href=\"#1030\">1030</a> \t\t\t            }\n<a name=\"1031\" href=\"#1031\">1031</a>         \t\t\t}\n<a name=\"1032\" href=\"#1032\">1032</a> \t\t\t        <strong>else</strong> <strong>if</strong> (((DOMKeyEvent)keyEvt).getCharCode() == DOMKeyEvent.DOM_VK_DELETE){\n<a name=\"1033\" href=\"#1033\">1033</a> \t\t\t            <strong>if</strong> (selectedDot != <strong>null</strong> &amp;&amp; localPeer.owns(selectedDot.getFileName())) {\n<a name=\"1034\" href=\"#1034\">1034</a> \t\t\t                deleteDot(selectedDot);\n<a name=\"1035\" href=\"#1035\">1035</a> \t\t\t            }\n<a name=\"1036\" href=\"#1036\">1036</a> \t\t\t        }\n<a name=\"1037\" href=\"#1037\">1037</a> \t\t\t        <strong>else</strong> <strong>if</strong> (((DOMKeyEvent)keyEvt).getCharCode() == DOMKeyEvent.DOM_VK_ENTER){\n<a name=\"1038\" href=\"#1038\">1038</a> \t\t\t            <strong>if</strong> (selectedDot != <strong>null</strong>) {\n<a name=\"1039\" href=\"#1039\">1039</a> \t\t\t                selectedDot.openFile();\n<a name=\"1040\" href=\"#1040\">1040</a> \t\t\t            }\n<a name=\"1041\" href=\"#1041\">1041</a> \t\t\t        }\n<a name=\"1042\" href=\"#1042\">1042</a>         \t\t}\n<a name=\"1043\" href=\"#1043\">1043</a>             });\n<a name=\"1044\" href=\"#1044\">1044</a>         } \n<a name=\"1045\" href=\"#1045\">1045</a> \t\t<strong>else</strong> <strong>if</strong> (eventType.equals(SVGConstants.SVG_CLICK_EVENT_TYPE)) {\n<a name=\"1046\" href=\"#1046\">1046</a> \t        <strong>if</strong> (evt.getDetail() == 2) {\n<a name=\"1047\" href=\"#1047\">1047</a> \t            <em class=\"comment\">// double click, open the file</em>\n<a name=\"1048\" href=\"#1048\">1048</a> \t            dot.openFile();\n<a name=\"1049\" href=\"#1049\">1049</a> \t        }\n<a name=\"1050\" href=\"#1050\">1050</a> \t        <strong>else</strong> <strong>if</strong> (evt.getButton() == 2 || (evt.getButton() == 0 &amp;&amp; evt.getCtrlKey())) {\n<a name=\"1051\" href=\"#1051\">1051</a> \t    \t\t<em class=\"comment\">// Swing dependent pop up menu, </em>\n<a name=\"1052\" href=\"#1052\">1052</a> \t            <em class=\"comment\">// On Windows, Ctrl, then Click, triggers this.</em>\n<a name=\"1053\" href=\"#1053\">1053</a> \t            <em class=\"comment\">// On Mac, Click, and press Ctrl before release, triggers this.</em>\n<a name=\"1054\" href=\"#1054\">1054</a> \t            hideDescription();\n<a name=\"1055\" href=\"#1055\">1055</a> \t    \t    JPopupMenu popup = <strong>new</strong> JPopupMenu();\n<a name=\"1056\" href=\"#1056\">1056</a> \t    \t\tAbstractAction\topenAction = <strong>new</strong> AbstractAction(<span class=\"string\">\"Open\"</span>){\n<a name=\"1057\" href=\"#1057\">1057</a> \t    \t\t    <strong>public</strong> <strong>void</strong> actionPerformed(ActionEvent ae) {\n<a name=\"1058\" href=\"#1058\">1058</a> \t    \t\t        <strong>if</strong>(ae!=<strong>null</strong>);\n<a name=\"1059\" href=\"#1059\">1059</a> \t    \t\t        dot.openFile();\n<a name=\"1060\" href=\"#1060\">1060</a> \t    \t\t    }\n<a name=\"1061\" href=\"#1061\">1061</a> \t    \t\t};\n<a name=\"1062\" href=\"#1062\">1062</a> \t    \t\topenAction.putValue(AbstractAction.MNEMONIC_KEY, <strong>new</strong> Integer(KeyEvent.VK_O));\n<a name=\"1063\" href=\"#1063\">1063</a> \t    \t    popup.add(<strong>new</strong> JMenuItem(openAction));\n<a name=\"1064\" href=\"#1064\">1064</a> \t    \t\t<strong>if</strong> (localPeer.owns(dot.getFileName())) {\n<a name=\"1065\" href=\"#1065\">1065</a> \t\t    \t\tAbstractAction\tsaveAction = <strong>new</strong> AbstractAction(<span class=\"string\">\"Save\"</span>){\n<a name=\"1066\" href=\"#1066\">1066</a> \t\t    \t\t    <strong>public</strong> <strong>void</strong> actionPerformed(ActionEvent ae) {\n<a name=\"1067\" href=\"#1067\">1067</a> \t\t    \t\t        <strong>if</strong>(ae!=<strong>null</strong>);\n<a name=\"1068\" href=\"#1068\">1068</a> \t\t    \t\t        dot.saveFile();\n<a name=\"1069\" href=\"#1069\">1069</a> \t\t    \t\t    }\n<a name=\"1070\" href=\"#1070\">1070</a> \t\t    \t\t};\n<a name=\"1071\" href=\"#1071\">1071</a> \t\t    \t\tsaveAction.putValue(AbstractAction.MNEMONIC_KEY, <strong>new</strong> Integer(KeyEvent.VK_S));\n<a name=\"1072\" href=\"#1072\">1072</a> \t\t    \t\tsaveAction.setEnabled(dot.getFileModified());\n<a name=\"1073\" href=\"#1073\">1073</a> \t\t    \t    popup.add(<strong>new</strong> JMenuItem(saveAction));\n<a name=\"1074\" href=\"#1074\">1074</a> \t    \t\t}\n<a name=\"1075\" href=\"#1075\">1075</a> \t    \t\t<strong>if</strong> (localPeer.owns(dot.getFileName())) {\n<a name=\"1076\" href=\"#1076\">1076</a> \t\t    \t\tAbstractAction\tremoveAction = <strong>new</strong> AbstractAction(<span class=\"string\">\"Delete\"</span>){\n<a name=\"1077\" href=\"#1077\">1077</a> \t\t    \t\t    <strong>public</strong> <strong>void</strong> actionPerformed(ActionEvent ae) {\n<a name=\"1078\" href=\"#1078\">1078</a> \t\t    \t\t        <strong>if</strong>(ae!=<strong>null</strong>);\n<a name=\"1079\" href=\"#1079\">1079</a> \t\t    \t\t        deleteDot(dot);\n<a name=\"1080\" href=\"#1080\">1080</a> \t\t    \t\t    }\n<a name=\"1081\" href=\"#1081\">1081</a> \t\t    \t\t};\n<a name=\"1082\" href=\"#1082\">1082</a> \t\t    \t\tremoveAction.putValue(AbstractAction.MNEMONIC_KEY, <strong>new</strong> Integer(KeyEvent.VK_D));\n<a name=\"1083\" href=\"#1083\">1083</a> \t\t    \t    popup.add(<strong>new</strong> JMenuItem(removeAction));\n<a name=\"1084\" href=\"#1084\">1084</a> \t    \t\t}\n<a name=\"1085\" href=\"#1085\">1085</a> \t    \t    popup.show(canvas, evt.getClientX(), evt.getClientY());\n<a name=\"1086\" href=\"#1086\">1086</a> \t        }\n<a name=\"1087\" href=\"#1087\">1087</a>         } \n<a name=\"1088\" href=\"#1088\">1088</a> \t}\n<a name=\"1089\" href=\"#1089\">1089</a> \n<a name=\"1090\" href=\"#1090\">1090</a>     <em>/**<em>*</em></em>\n<a name=\"1091\" href=\"#1091\">1091</a> <em>     * Delete a dot</em>\n<a name=\"1092\" href=\"#1092\">1092</a> <em>     * @param d the dot</em>\n<a name=\"1093\" href=\"#1093\">1093</a> <em>     */</em>\n<a name=\"1094\" href=\"#1094\">1094</a>     <strong>private</strong> <strong>void</strong> deleteDot(<a href=\"../../../../../edu/uci/isr/impromptu/pie/Dot.html\">Dot</a> dot) {\n<a name=\"1095\" href=\"#1095\">1095</a>         <strong>if</strong> (dot.getFileMod<strong>if</strong>ied()) {\n<a name=\"1096\" href=\"#1096\">1096</a>             <strong>if</strong>(JOptionPane.showConfirmDialog(frame, dot.getFileName() + <span class=\"string\">\" is modified. \"</span> + \n<a name=\"1097\" href=\"#1097\">1097</a>                 <span class=\"string\">\"Do you want to save it?\"</span>, <span class=\"string\">\"Save Changed Files\"</span>, JOptionPane.YES_NO_OPTION)\n<a name=\"1098\" href=\"#1098\">1098</a>                 == JOptionPane.YES_OPTION) {\n<a name=\"1099\" href=\"#1099\">1099</a>                 dot.saveFile();\n<a name=\"1100\" href=\"#1100\">1100</a>             }\n<a name=\"1101\" href=\"#1101\">1101</a>         }\n<a name=\"1102\" href=\"#1102\">1102</a>         dot.deleteFile();\n<a name=\"1103\" href=\"#1103\">1103</a>     }\n<a name=\"1104\" href=\"#1104\">1104</a>     \n<a name=\"1105\" href=\"#1105\">1105</a>     <em>/**<em>*</em></em>\n<a name=\"1106\" href=\"#1106\">1106</a> <em>     * Processing when dragging is ended, either normal end or being canceled</em>\n<a name=\"1107\" href=\"#1107\">1107</a> <em>     */</em>\n<a name=\"1108\" href=\"#1108\">1108</a>     <strong>private</strong> <strong>void</strong> endDragging() {\n<a name=\"1109\" href=\"#1109\">1109</a> \t\tstopListeningAfterMouseUp();\n<a name=\"1110\" href=\"#1110\">1110</a> \t\tisDragging = false;\n<a name=\"1111\" href=\"#1111\">1111</a> \t\t<em class=\"comment\">// hide the delegate dot</em>\n<a name=\"1112\" href=\"#1112\">1112</a> \t\t<strong>if</strong> (dragWithDelegate)\n<a name=\"1113\" href=\"#1113\">1113</a> \t\t    draggingDelegate.setAttributeNS(<strong>null</strong>, SVGConstants.SVG_STYLE_ATTRIBUTE, VISIBILITY_HIDDEN);\n<a name=\"1114\" href=\"#1114\">1114</a>     }\n<a name=\"1115\" href=\"#1115\">1115</a>     \n<a name=\"1116\" href=\"#1116\">1116</a>     <em>/**<em>*</em></em>\n<a name=\"1117\" href=\"#1117\">1117</a> <em>     * Stop listening to certain events after the mouse button is up  </em>\n<a name=\"1118\" href=\"#1118\">1118</a> <em>     */</em>\n<a name=\"1119\" href=\"#1119\">1119</a>     <strong>private</strong> <strong>void</strong> stopListeningAfterMouseUp() {\n<a name=\"1120\" href=\"#1120\">1120</a> \t\t<em class=\"comment\">// stop listening</em>\n<a name=\"1121\" href=\"#1121\">1121</a>         EventTarget\t\tlm = (EventTarget)localMask;\n<a name=\"1122\" href=\"#1122\">1122</a>         EventTarget\t\tps = (EventTarget)privateSpace;\n<a name=\"1123\" href=\"#1123\">1123</a>         lm.removeEventListener(SVGConstants.SVG_MOUSEUP_EVENT_TYPE, Pie.<strong>this</strong>, false);\n<a name=\"1124\" href=\"#1124\">1124</a>         ps.removeEventListener(SVGConstants.SVG_MOUSEUP_EVENT_TYPE, Pie.<strong>this</strong>, false);\n<a name=\"1125\" href=\"#1125\">1125</a>         lm.removeEventListener(SVGConstants.SVG_MOUSEMOVE_EVENT_TYPE, Pie.<strong>this</strong>, false);\n<a name=\"1126\" href=\"#1126\">1126</a>         ps.removeEventListener(SVGConstants.SVG_MOUSEMOVE_EVENT_TYPE, Pie.<strong>this</strong>, false);\n<a name=\"1127\" href=\"#1127\">1127</a>         <strong>if</strong> (draggingTarget != <strong>null</strong>) {\n<a name=\"1128\" href=\"#1128\">1128</a> \t        EventTarget\t\tdt = (EventTarget)draggingTarget;\n<a name=\"1129\" href=\"#1129\">1129</a> \t\t\tdt.removeEventListener(SVGConstants.SVG_MOUSEUP_EVENT_TYPE, Pie.<strong>this</strong>, false);\n<a name=\"1130\" href=\"#1130\">1130</a> \t\t\tdt.removeEventListener(SVGConstants.SVG_MOUSEMOVE_EVENT_TYPE, Pie.<strong>this</strong>, false);\n<a name=\"1131\" href=\"#1131\">1131</a> \t        <strong>if</strong> (isDragging &amp;&amp; !dragWithDelegate) {\n<a name=\"1132\" href=\"#1132\">1132</a> \t\t        dt.addEventListener(SVGConstants.SVG_MOUSEOVER_EVENT_TYPE, Pie.<strong>this</strong>, false);\n<a name=\"1133\" href=\"#1133\">1133</a> \t\t        dt.addEventListener(SVGConstants.SVG_MOUSEOUT_EVENT_TYPE, Pie.<strong>this</strong>, false);\n<a name=\"1134\" href=\"#1134\">1134</a> \t        }\n<a name=\"1135\" href=\"#1135\">1135</a>         }\n<a name=\"1136\" href=\"#1136\">1136</a>     }\n<a name=\"1137\" href=\"#1137\">1137</a> \n<a name=\"1138\" href=\"#1138\">1138</a>     <strong>private</strong> JFrame\tframe;\n<a name=\"1139\" href=\"#1139\">1139</a>     <em>/**<em>*</em></em>\n<a name=\"1140\" href=\"#1140\">1140</a> <em>     * Set the frame used by the pie so the dialogs can be shown correctly.</em>\n<a name=\"1141\" href=\"#1141\">1141</a> <em>     * @param f the frame that serves as the parent of the dialogs</em>\n<a name=\"1142\" href=\"#1142\">1142</a> <em>     */</em>\n<a name=\"1143\" href=\"#1143\">1143</a>     <strong>public</strong> <strong>void</strong> setJFrame(JFrame f) {\n<a name=\"1144\" href=\"#1144\">1144</a>         frame = f;\n<a name=\"1145\" href=\"#1145\">1145</a>     }\n<a name=\"1146\" href=\"#1146\">1146</a> \n<a name=\"1147\" href=\"#1147\">1147</a>     <strong>private</strong> List\tdotsToBlink = Collections.synchronizedList(<strong>new</strong> ArrayList());\n<a name=\"1148\" href=\"#1148\">1148</a>     \n<a name=\"1149\" href=\"#1149\">1149</a>     <em>/**<em>*</em></em>\n<a name=\"1150\" href=\"#1150\">1150</a> <em>     * Handle the drop event</em>\n<a name=\"1151\" href=\"#1151\">1151</a> <em>     * @param dtde the drop event</em>\n<a name=\"1152\" href=\"#1152\">1152</a> <em>     */</em>\n<a name=\"1153\" href=\"#1153\">1153</a>     <strong>public</strong> <strong>void</strong> drop(DropTargetDropEvent dtde) {\n<a name=\"1154\" href=\"#1154\">1154</a>         <strong>if</strong> (!dtde.isDataFlavorSupported(DataFlavor.javaFileListFlavor)) {\n<a name=\"1155\" href=\"#1155\">1155</a>             dtde.rejectDrop();\n<a name=\"1156\" href=\"#1156\">1156</a>         \t<strong>return</strong>;\n<a name=\"1157\" href=\"#1157\">1157</a>         }\n<a name=\"1158\" href=\"#1158\">1158</a> \n<a name=\"1159\" href=\"#1159\">1159</a>         <strong>final</strong> Point2D\tposition = clientToSVG(dtde.getLocation());\n<a name=\"1160\" href=\"#1160\">1160</a>         <strong>final</strong> Po<strong>int</strong>\t\tp = <strong>new</strong> Po<strong>int</strong>((<strong>int</strong>)position.getX() - Configuration.CENTER_X, \n<a name=\"1161\" href=\"#1161\">1161</a>                 (<strong>int</strong>)position.getY() - Configuration.CENTER_Y);\n<a name=\"1162\" href=\"#1162\">1162</a>         <strong>if</strong> (Coordinate.calculateRadius(p) &lt; Configuration.RADIUS &amp;&amp; \n<a name=\"1163\" href=\"#1163\">1163</a>             !localPeer.containsAngle(Coordinate.calculateTheta(p)) &amp;&amp;\n<a name=\"1164\" href=\"#1164\">1164</a>             Coordinate.calculateRadius(p) > Configuration.RADIUS * \n<a name=\"1165\" href=\"#1165\">1165</a>             edu.uci.isr.impromptu.common.Configuration.LEVEL_RADIUS[SecurityConstants.LEVEL_PERSISTENT]) {  \n<a name=\"1166\" href=\"#1166\">1166</a>             <em class=\"comment\">// reject for remote peers: within the radius but not in local</em>\n<a name=\"1167\" href=\"#1167\">1167</a>             showMessageDialog(<span class=\"string\">\"You cannot import files to others' repository.\"</span>);\n<a name=\"1168\" href=\"#1168\">1168</a>             dtde.rejectDrop();\n<a name=\"1169\" href=\"#1169\">1169</a>             <strong>return</strong>;\n<a name=\"1170\" href=\"#1170\">1170</a>         }\n<a name=\"1171\" href=\"#1171\">1171</a> \n<a name=\"1172\" href=\"#1172\">1172</a>         dtde.acceptDrop(DnDConstants.ACTION_COPY);\n<a name=\"1173\" href=\"#1173\">1173</a>         Transferable tf = dtde.getTransferable();\n<a name=\"1174\" href=\"#1174\">1174</a>         <strong>try</strong> {\n<a name=\"1175\" href=\"#1175\">1175</a> \t        List\t\tfiles = (List)tf.getTransferData(DataFlavor.javaFileListFlavor);\n<a name=\"1176\" href=\"#1176\">1176</a> \t        <strong>for</strong> (Iterator i = files.iterator(); i.hasNext(); ) {\n<a name=\"1177\" href=\"#1177\">1177</a> \t            <strong>final</strong> File\tfile = (File)i.next();\n<a name=\"1178\" href=\"#1178\">1178</a> \t            <strong>if</strong> (file.isDirectory()) {\n<a name=\"1179\" href=\"#1179\">1179</a> \t                showMessageDialog(<span class=\"string\">\"Importing directory is not supported.\\n\"</span> + \n<a name=\"1180\" href=\"#1180\">1180</a> \t                        <span class=\"string\">\"Please import the files under the directory.\"</span>);\n<a name=\"1181\" href=\"#1181\">1181</a> \t            }\n<a name=\"1182\" href=\"#1182\">1182</a> \t            <strong>else</strong> {\n<a name=\"1183\" href=\"#1183\">1183</a> \t                <strong>if</strong> (doImportFile(file)) {\n<a name=\"1184\" href=\"#1184\">1184</a> \t                    doDrop(file, p);\n<a name=\"1185\" href=\"#1185\">1185</a> \t                }\n<a name=\"1186\" href=\"#1186\">1186</a> \t            }\n<a name=\"1187\" href=\"#1187\">1187</a> \t        }\n<a name=\"1188\" href=\"#1188\">1188</a>         }\n<a name=\"1189\" href=\"#1189\">1189</a>         <strong>catch</strong> (Exception e) {\n<a name=\"1190\" href=\"#1190\">1190</a>             Utils.handleException(e);\n<a name=\"1191\" href=\"#1191\">1191</a>         }\n<a name=\"1192\" href=\"#1192\">1192</a>         dtde.dropComplete(<strong>true</strong>);\n<a name=\"1193\" href=\"#1193\">1193</a>     }\n<a name=\"1194\" href=\"#1194\">1194</a> \n<a name=\"1195\" href=\"#1195\">1195</a>     <em>/**<em>*</em></em>\n<a name=\"1196\" href=\"#1196\">1196</a> <em>     * Do the actual work of dropping a file at a point.</em>\n<a name=\"1197\" href=\"#1197\">1197</a> <em>     * </em>\n<a name=\"1198\" href=\"#1198\">1198</a> <em>     * @param file\tthe local file that is imported</em>\n<a name=\"1199\" href=\"#1199\">1199</a> <em>     * @param p\t\tthe point where the file is imported</em>\n<a name=\"1200\" href=\"#1200\">1200</a> <em>     */</em>\n<a name=\"1201\" href=\"#1201\">1201</a>     <strong>private</strong> <strong>void</strong> doDrop(<strong>final</strong> File file, <strong>final</strong> Point p) {\n<a name=\"1202\" href=\"#1202\">1202</a>         laterWork.invokeLater(<strong>new</strong> Runnable() {\n<a name=\"1203\" href=\"#1203\">1203</a>     \t\t<strong>public</strong> <strong>void</strong> run() {\n<a name=\"1204\" href=\"#1204\">1204</a>                 Dot\td = localPeer.addFile(file, p);\n<a name=\"1205\" href=\"#1205\">1205</a>                 d.setLocalPath(file.getAbsolutePath());\n<a name=\"1206\" href=\"#1206\">1206</a>                 setDotProperties(d);\n<a name=\"1207\" href=\"#1207\">1207</a> \n<a name=\"1208\" href=\"#1208\">1208</a>                 <em class=\"comment\">// send out the add event</em>\n<a name=\"1209\" href=\"#1209\">1209</a>                 Map\t\taddedEvent = <strong>new</strong> HashMap();\n<a name=\"1210\" href=\"#1210\">1210</a>                 addedEvent.put(MessageProcessor.ATTR_PEER_NAME, userName);\n<a name=\"1211\" href=\"#1211\">1211</a>                 addedEvent.put(MessageProcessor.ATTR_FILE_NAME, file.getName());\n<a name=\"1212\" href=\"#1212\">1212</a>                 addedEvent.put(MessageProcessor.ATTR_ACTION, \n<a name=\"1213\" href=\"#1213\">1213</a>                     MessageProcessor.ACTION_ADD);\n<a name=\"1214\" href=\"#1214\">1214</a>                 addedEvent.put(MessageProcessor.ATTR_RADIUS, \n<a name=\"1215\" href=\"#1215\">1215</a>                     String.valueOf(d.getRadius()));\n<a name=\"1216\" href=\"#1216\">1216</a>                 addedEvent.put(MessageProcessor.ATTR_ANGLE, \n<a name=\"1217\" href=\"#1217\">1217</a>                     String.valueOf(d.getAngle()));\n<a name=\"1218\" href=\"#1218\">1218</a>                 addedEvent.put(MessageProcessor.ATTR_LEVEL, \n<a name=\"1219\" href=\"#1219\">1219</a> \t                    String.valueOf(d.getSharingLevel()));\n<a name=\"1220\" href=\"#1220\">1220</a>                 <em class=\"comment\">// The following comments apply to the case when we announced</em>\n<a name=\"1221\" href=\"#1221\">1221</a>                 <em class=\"comment\">//\t\ta file's addition during M_PUT at repository. Now we </em>\n<a name=\"1222\" href=\"#1222\">1222</a>                 <em class=\"comment\">// \t\tare using Pie-generated PROPPATCH to ctonrol security.</em>\n<a name=\"1223\" href=\"#1223\">1223</a>                 <em class=\"comment\">// This generates a second addition event after the </em>\n<a name=\"1224\" href=\"#1224\">1224</a>                 <em class=\"comment\">//\t\tone in importFile. This continas coordinates.</em>\n<a name=\"1225\" href=\"#1225\">1225</a>                 <em class=\"comment\">// It is unlikely that this sendMessage happens </em>\n<a name=\"1226\" href=\"#1226\">1226</a>                 <em class=\"comment\">//\t\tbefore the sendMessage of the proxyFilter,</em>\n<a name=\"1227\" href=\"#1227\">1227</a>                 <em class=\"comment\">//\t\tbecause PUT (after which proxyFilter </em>\n<a name=\"1228\" href=\"#1228\">1228</a>                 <em class=\"comment\">//\t\tsends message) is not even the last method </em>\n<a name=\"1229\" href=\"#1229\">1229</a>                 <em class=\"comment\">//\t\tof copy (UNLOCK is) (after which this sendMessage</em>\n<a name=\"1230\" href=\"#1230\">1230</a>                 <em class=\"comment\">//\t\tis executed). A more defensive event-based</em>\n<a name=\"1231\" href=\"#1231\">1231</a>                 <em class=\"comment\">//\t\tprogramming is also a good solution.</em>\n<a name=\"1232\" href=\"#1232\">1232</a>                 pm.sendMessage(addedEvent);\n<a name=\"1233\" href=\"#1233\">1233</a>     \t\t}\n<a name=\"1234\" href=\"#1234\">1234</a>         });\n<a name=\"1235\" href=\"#1235\">1235</a>     }\n<a name=\"1236\" href=\"#1236\">1236</a>     \n<a name=\"1237\" href=\"#1237\">1237</a>     <em>/**<em>*</em></em>\n<a name=\"1238\" href=\"#1238\">1238</a> <em>     * Start blinking a dot</em>\n<a name=\"1239\" href=\"#1239\">1239</a> <em>     * </em>\n<a name=\"1240\" href=\"#1240\">1240</a> <em>     * @param d the dot</em>\n<a name=\"1241\" href=\"#1241\">1241</a> <em>     */</em>\n<a name=\"1242\" href=\"#1242\">1242</a>     <strong>private</strong> <strong>void</strong> blinkDot(<a href=\"../../../../../edu/uci/isr/impromptu/pie/Dot.html\">Dot</a> d) {\n<a name=\"1243\" href=\"#1243\">1243</a>         <em class=\"comment\">// If the repository is slow, the blinking might not be noticeable </em>\n<a name=\"1244\" href=\"#1244\">1244</a>         d.startBlink(10);\n<a name=\"1245\" href=\"#1245\">1245</a>         dotsToBlink.add(d);\n<a name=\"1246\" href=\"#1246\">1246</a>     }\n<a name=\"1247\" href=\"#1247\">1247</a> \n<a name=\"1248\" href=\"#1248\">1248</a>     <em>/**<em>*</em></em>\n<a name=\"1249\" href=\"#1249\">1249</a> <em>     * Store the customzied properties of a dot and also set its security level </em>\n<a name=\"1250\" href=\"#1250\">1250</a> <em>     * @param d the dot</em>\n<a name=\"1251\" href=\"#1251\">1251</a> <em>     */</em>\n<a name=\"1252\" href=\"#1252\">1252</a>     <strong>public</strong> <strong>void</strong> setDotProperties(<a href=\"../../../../../edu/uci/isr/impromptu/pie/Dot.html\">Dot</a> d) {\n<a name=\"1253\" href=\"#1253\">1253</a>         <em class=\"comment\">// This could go to the Dot class, but let's keep everything WebDAV here</em>\n<a name=\"1254\" href=\"#1254\">1254</a>         <strong>try</strong> {\n<a name=\"1255\" href=\"#1255\">1255</a>             <em class=\"comment\">// Set customized properties</em>\n<a name=\"1256\" href=\"#1256\">1256</a>             String\tpath = Utils.fileNameToURL(d.getFileName());\n<a name=\"1257\" href=\"#1257\">1257</a>             <em class=\"comment\">// use one proppatch to save three properties</em>\n<a name=\"1258\" href=\"#1258\">1258</a>             Hashtable\tproperties = <strong>new</strong> Hashtable();\n<a name=\"1259\" href=\"#1259\">1259</a>             properties.put(<strong>new</strong> PropertyName(NS_URI, PROPERTY_OWNER), \n<a name=\"1260\" href=\"#1260\">1260</a>                     d.getOwner().getName());\n<a name=\"1261\" href=\"#1261\">1261</a>             properties.put(<strong>new</strong> PropertyName(NS_URI, PROPERTY_RADIUS), \n<a name=\"1262\" href=\"#1262\">1262</a>                     String.valueOf(d.getRadius()));\n<a name=\"1263\" href=\"#1263\">1263</a>             properties.put(<strong>new</strong> PropertyName(NS_URI, PROPERTY_ANGLE), \n<a name=\"1264\" href=\"#1264\">1264</a>                     String.valueOf(d.getAngle()));\n<a name=\"1265\" href=\"#1265\">1265</a>             impromptuServer.lockMethod(path);\n<a name=\"1266\" href=\"#1266\">1266</a>             impromptuServer.proppatchMethod(path, properties, <strong>true</strong>);\n<a name=\"1267\" href=\"#1267\">1267</a>             impromptuServer.unlockMethod(path);\n<a name=\"1268\" href=\"#1268\">1268</a> \n<a name=\"1269\" href=\"#1269\">1269</a> \t\t    <em class=\"comment\">// This is ACL</em>\n<a name=\"1270\" href=\"#1270\">1270</a>             <strong>if</strong> (edu.uci.isr.impromptu.common.Configuration.ACL_AT_CLIENT) {\n<a name=\"1271\" href=\"#1271\">1271</a>                 aclManager.setSecurityLevel(d.getFileName(), \n<a name=\"1272\" href=\"#1272\">1272</a>                         SecurityConstants.OTHERS, d.getSharingLevel());\n<a name=\"1273\" href=\"#1273\">1273</a>             }\n<a name=\"1274\" href=\"#1274\">1274</a>         }\n<a name=\"1275\" href=\"#1275\">1275</a>         <strong>catch</strong> (IOException e) {\n<a name=\"1276\" href=\"#1276\">1276</a>             Utils.handleException(e);\n<a name=\"1277\" href=\"#1277\">1277</a>         }\n<a name=\"1278\" href=\"#1278\">1278</a>     }\n<a name=\"1279\" href=\"#1279\">1279</a> \n<a name=\"1280\" href=\"#1280\">1280</a>     <em>/**<em>*</em></em>\n<a name=\"1281\" href=\"#1281\">1281</a> <em>     * Process a message</em>\n<a name=\"1282\" href=\"#1282\">1282</a> <em>     * </em>\n<a name=\"1283\" href=\"#1283\">1283</a> <em>     * @param message the message with attributes and values</em>\n<a name=\"1284\" href=\"#1284\">1284</a> <em>     */</em>\n<a name=\"1285\" href=\"#1285\">1285</a>     <strong>public</strong> <strong>void</strong> processMessage(Map message) {\n<a name=\"1286\" href=\"#1286\">1286</a>         String\towner = (String)message.get(MessageProcessor.ATTR_PEER_NAME);\n<a name=\"1287\" href=\"#1287\">1287</a>         String \t\t\taction = (String) message.get(MessageProcessor.ATTR_ACTION);\n<a name=\"1288\" href=\"#1288\">1288</a>         <strong>final</strong> String \tactor = (String) message.get(MessageProcessor.ATTR_ACTOR);\n<a name=\"1289\" href=\"#1289\">1289</a>         <strong>if</strong> (owner != <strong>null</strong>) {\n<a name=\"1290\" href=\"#1290\">1290</a>             <em class=\"comment\">// This can be pm.get, but since we are using the aux peers map,</em>\n<a name=\"1291\" href=\"#1291\">1291</a>             <em class=\"comment\">//\t\twe keep this simple call</em>\n<a name=\"1292\" href=\"#1292\">1292</a>             <em class=\"comment\">// And if we use a bundle, then the pie has no peer manager, and</em>\n<a name=\"1293\" href=\"#1293\">1293</a>             <em class=\"comment\">//\t\tthe proxy's peer manager contains no slice peers </em>\n<a name=\"1294\" href=\"#1294\">1294</a>             <strong>final</strong> SlicePeer\townerPeer = (SlicePeer)peers.get(owner); \n<a name=\"1295\" href=\"#1295\">1295</a>             <strong>if</strong> (ownerPeer != <strong>null</strong>) {\n<a name=\"1296\" href=\"#1296\">1296</a>                 <strong>final</strong> String \tfileName = (String) message.get(MessageProcessor.ATTR_FILE_NAME);\n<a name=\"1297\" href=\"#1297\">1297</a> \t\t        String \t\t\tradius = (String) message.get(MessageProcessor.ATTR_RADIUS);\n<a name=\"1298\" href=\"#1298\">1298</a> \t\t        String \t\t\tangle = (String) message.get(MessageProcessor.ATTR_ANGLE);\n<a name=\"1299\" href=\"#1299\">1299</a>                 String \t\t\tlevel = (String) message.get(MessageProcessor.ATTR_LEVEL);\n<a name=\"1300\" href=\"#1300\">1300</a> \t\t        <strong>double</strong> \t\t\tr = PieUtils.getDefaultSecureRadius();\n<a name=\"1301\" href=\"#1301\">1301</a> \t\t        <strong>double</strong> \t\t\ta = Math.random();\n<a name=\"1302\" href=\"#1302\">1302</a>                 <strong>boolean</strong>\t\t\thasR = false;\n<a name=\"1303\" href=\"#1303\">1303</a>                 <strong>boolean</strong> \t\thasA = false;\n<a name=\"1304\" href=\"#1304\">1304</a>                 <strong>int</strong> \t\t\tl = SecurityConstants.LEVEL_PRIVATE;\n<a name=\"1305\" href=\"#1305\">1305</a> \t\t        <strong>try</strong> {\n<a name=\"1306\" href=\"#1306\">1306</a> \t                <em class=\"comment\">// Get radius and angle, which might not exist if the file is </em>\n<a name=\"1307\" href=\"#1307\">1307</a> \t                <em class=\"comment\">//\t\tcopied by other applications</em>\n<a name=\"1308\" href=\"#1308\">1308</a> \t\t            r = Double.parseDouble(radius);\n<a name=\"1309\" href=\"#1309\">1309</a>                     hasR = <strong>true</strong>;\n<a name=\"1310\" href=\"#1310\">1310</a> \t\t            a = Double.parseDouble(angle);\n<a name=\"1311\" href=\"#1311\">1311</a>                     hasA = <strong>true</strong>;\n<a name=\"1312\" href=\"#1312\">1312</a>                     l = Integer.parseInt(level);\n<a name=\"1313\" href=\"#1313\">1313</a> \t\t        }\n<a name=\"1314\" href=\"#1314\">1314</a> \t\t        <strong>catch</strong> (Exception e) {\n<a name=\"1315\" href=\"#1315\">1315</a> \t\t        }\n<a name=\"1316\" href=\"#1316\">1316</a> \n<a name=\"1317\" href=\"#1317\">1317</a>                 <strong>if</strong> (!ownerPeer.owns(fileName)) {\n<a name=\"1318\" href=\"#1318\">1318</a> \t                <strong>if</strong> (action.equals(MessageProcessor.ACTION_ADD) ||\n<a name=\"1319\" href=\"#1319\">1319</a> \t                    action.equals(MessageProcessor.ACTION_MOVE)) {\n<a name=\"1320\" href=\"#1320\">1320</a> \t                    <em class=\"comment\">// Add a file. </em>\n<a name=\"1321\" href=\"#1321\">1321</a> \t                    <em class=\"comment\">//\t\t1) If the file is not droped by th pie, then it </em>\n<a name=\"1322\" href=\"#1322\">1322</a> \t                    <em class=\"comment\">//\t\t\t\tappears in a random place</em>\n<a name=\"1323\" href=\"#1323\">1323</a> \t                    <em class=\"comment\">//\t\t2) do not add a private file owned by others</em>\n<a name=\"1324\" href=\"#1324\">1324</a> \t                    <em class=\"comment\">//\t\t3) once the private file becomes available through </em>\n<a name=\"1325\" href=\"#1325\">1325</a> \t                    <em class=\"comment\">//\t\t\t\tMOVE, add it.</em>\n<a name=\"1326\" href=\"#1326\">1326</a> \t                    <strong>final</strong> <strong>double</strong> rr = r;\n<a name=\"1327\" href=\"#1327\">1327</a> \t                    <strong>final</strong> <strong>double</strong> aa = a;\n<a name=\"1328\" href=\"#1328\">1328</a> \t                    <strong>if</strong> (ownerPeer.isLocal() || l>SecurityConstants.LEVEL_PRIVATE) {\n<a name=\"1329\" href=\"#1329\">1329</a> \t                        <em class=\"comment\">// This is a \"hide\" decision.</em>\n<a name=\"1330\" href=\"#1330\">1330</a> \t\t                    laterWork.invokeLater(<strong>new</strong> Runnable() {\n<a name=\"1331\" href=\"#1331\">1331</a> \t\t                        <strong>public</strong> <strong>void</strong> run() {\n<a name=\"1332\" href=\"#1332\">1332</a> \t\t                            ownerPeer.fileAdded(fileName, rr, aa);\n<a name=\"1333\" href=\"#1333\">1333</a> \t\t\t    \t                blinkDot(ownerPeer.getFile(fileName));\n<a name=\"1334\" href=\"#1334\">1334</a> \t\t                        }\n<a name=\"1335\" href=\"#1335\">1335</a> \t\t                    });\n<a name=\"1336\" href=\"#1336\">1336</a> \t                    }\n<a name=\"1337\" href=\"#1337\">1337</a> \t                }\n<a name=\"1338\" href=\"#1338\">1338</a>                 }\n<a name=\"1339\" href=\"#1339\">1339</a>                 <strong>else</strong> {\n<a name=\"1340\" href=\"#1340\">1340</a> \t                <strong>if</strong> (action.equals(MessageProcessor.ACTION_MOVE) || \n<a name=\"1341\" href=\"#1341\">1341</a> \t                    action.equals(MessageProcessor.ACTION_ADD)) {\n<a name=\"1342\" href=\"#1342\">1342</a> \t                    <em class=\"comment\">// The add is for \"moving\" an existing file</em>\n<a name=\"1343\" href=\"#1343\">1343</a> \t                    <strong>if</strong> (hasR &amp;&amp; hasA) {\n<a name=\"1344\" href=\"#1344\">1344</a> \t\t                    <strong>final</strong> <strong>double</strong> rr = r;\n<a name=\"1345\" href=\"#1345\">1345</a> \t\t                    <strong>final</strong> <strong>double</strong> aa = a;\n<a name=\"1346\" href=\"#1346\">1346</a> \t\t                    <strong>if</strong> (!ownerPeer.isLocal() &amp;&amp; l == SecurityConstants.LEVEL_PRIVATE) {\n<a name=\"1347\" href=\"#1347\">1347</a> \t\t\t                    laterWork.invokeLater(<strong>new</strong> Runnable() {\n<a name=\"1348\" href=\"#1348\">1348</a> \t\t\t                        <strong>public</strong> <strong>void</strong> run() {\n<a name=\"1349\" href=\"#1349\">1349</a> \t\t\t\t                        <em class=\"comment\">// The remote owner hides the file.</em>\n<a name=\"1350\" href=\"#1350\">1350</a> \t\t\t    \t                    ownerPeer.fileRemoved(fileName);\n<a name=\"1351\" href=\"#1351\">1351</a> \t\t\t                        }\n<a name=\"1352\" href=\"#1352\">1352</a> \t\t\t                    });\n<a name=\"1353\" href=\"#1353\">1353</a> \t\t                    }\n<a name=\"1354\" href=\"#1354\">1354</a> \t\t                    <strong>else</strong> {\n<a name=\"1355\" href=\"#1355\">1355</a> \t\t\t                    laterWork.invokeLater(<strong>new</strong> Runnable() {\n<a name=\"1356\" href=\"#1356\">1356</a> \t\t\t                        <strong>public</strong> <strong>void</strong> run() {\n<a name=\"1357\" href=\"#1357\">1357</a> \t\t\t    \t                    ownerPeer.fileMoved(fileName, rr, aa);\n<a name=\"1358\" href=\"#1358\">1358</a> \t\t\t                        }\n<a name=\"1359\" href=\"#1359\">1359</a> \t\t\t                    });\n<a name=\"1360\" href=\"#1360\">1360</a> \t\t                    }\n<a name=\"1361\" href=\"#1361\">1361</a> \t                    }\n<a name=\"1362\" href=\"#1362\">1362</a> \t                }\n<a name=\"1363\" href=\"#1363\">1363</a> \t                <strong>else</strong> <strong>if</strong> (action.equals(MessageProcessor.ACTION_REMOVE)) {\n<a name=\"1364\" href=\"#1364\">1364</a> \t                    laterWork.invokeLater(<strong>new</strong> Runnable() {\n<a name=\"1365\" href=\"#1365\">1365</a> \t                        <strong>public</strong> <strong>void</strong> run() {\n<a name=\"1366\" href=\"#1366\">1366</a> \t    \t                    ownerPeer.fileRemoved(fileName);\n<a name=\"1367\" href=\"#1367\">1367</a> \t                        }\n<a name=\"1368\" href=\"#1368\">1368</a> \t                    });\n<a name=\"1369\" href=\"#1369\">1369</a> \t                }\n<a name=\"1370\" href=\"#1370\">1370</a> \t                <strong>else</strong> <strong>if</strong> (action.equals(MessageProcessor.ACTION_WRITE)) {\n<a name=\"1371\" href=\"#1371\">1371</a> \t                    laterWork.invokeLater(<strong>new</strong> Runnable() {\n<a name=\"1372\" href=\"#1372\">1372</a> \t                        <strong>public</strong> <strong>void</strong> run() {\n<a name=\"1373\" href=\"#1373\">1373</a> \t                            Dot\t\td = ownerPeer.getFile(fileName);\n<a name=\"1374\" href=\"#1374\">1374</a> \t                            d.setFileModified();\n<a name=\"1375\" href=\"#1375\">1375</a> \t                            SlicePeer\tp = (SlicePeer)peers.get(actor);\n<a name=\"1376\" href=\"#1376\">1376</a> \t                            d.setRingColor(p.getColor());\n<a name=\"1377\" href=\"#1377\">1377</a> \t                            d.setLastAccessPeer(p);\n<a name=\"1378\" href=\"#1378\">1378</a> \t\t    \t                blinkDot(d);\n<a name=\"1379\" href=\"#1379\">1379</a> \t                        }\n<a name=\"1380\" href=\"#1380\">1380</a> \t                    });\n<a name=\"1381\" href=\"#1381\">1381</a> \t                }\n<a name=\"1382\" href=\"#1382\">1382</a> \t                <strong>else</strong> <strong>if</strong> (action.equals(MessageProcessor.ACTION_READ)) {\n<a name=\"1383\" href=\"#1383\">1383</a> \t                    laterWork.invokeLater(<strong>new</strong> Runnable() {\n<a name=\"1384\" href=\"#1384\">1384</a> \t                        <strong>public</strong> <strong>void</strong> run() {\n<a name=\"1385\" href=\"#1385\">1385</a> \t                            Dot\t\td = ownerPeer.getFile(fileName);\n<a name=\"1386\" href=\"#1386\">1386</a> \t                            SlicePeer\tp = (SlicePeer)peers.get(actor);\n<a name=\"1387\" href=\"#1387\">1387</a> \t                            d.setRingColor(p.getColor());\n<a name=\"1388\" href=\"#1388\">1388</a> \t                            d.setLastAccessPeer(p);\n<a name=\"1389\" href=\"#1389\">1389</a> \t\t    \t                blinkDot(d);\n<a name=\"1390\" href=\"#1390\">1390</a> \t                        }\n<a name=\"1391\" href=\"#1391\">1391</a> \t                    });\n<a name=\"1392\" href=\"#1392\">1392</a> \t                }\n<a name=\"1393\" href=\"#1393\">1393</a> \t                <strong>else</strong> <strong>if</strong> (action.equals(MessageProcessor.ACTION_RE_ADD)) {\n<a name=\"1394\" href=\"#1394\">1394</a> \t                    <strong>if</strong> (ownerPeer.isLocal()) {\n<a name=\"1395\" href=\"#1395\">1395</a> \t    \t\t            <em class=\"comment\">// Mac Word, when saving changes, actually creates several </em>\n<a name=\"1396\" href=\"#1396\">1396</a> \t    \t\t            <em class=\"comment\">//\t\tnew files and loses our customized properties. </em>\n<a name=\"1397\" href=\"#1397\">1397</a> \t                        <em class=\"comment\">// a local file is recreated by MOVE,</em>\n<a name=\"1398\" href=\"#1398\">1398</a> \t                        <em class=\"comment\">// reapply its properties and security settings</em>\n<a name=\"1399\" href=\"#1399\">1399</a>                             Dot\t\td = ownerPeer.getFile(fileName);\n<a name=\"1400\" href=\"#1400\">1400</a>                             setDotProperties(d);\n<a name=\"1401\" href=\"#1401\">1401</a> \t                    }\n<a name=\"1402\" href=\"#1402\">1402</a> \t                }\n<a name=\"1403\" href=\"#1403\">1403</a>                 }\n<a name=\"1404\" href=\"#1404\">1404</a>                 <strong>if</strong> (ownerPeer.isLocal() &amp;&amp; action.equals(MessageProcessor.ACTION_SHUTDOWN)) {\n<a name=\"1405\" href=\"#1405\">1405</a>                     <strong>if</strong> (!integratePie) {\n<a name=\"1406\" href=\"#1406\">1406</a>                         <em class=\"comment\">// Shutdown</em>\n<a name=\"1407\" href=\"#1407\">1407</a>                         System.exit(0);\n<a name=\"1408\" href=\"#1408\">1408</a>                     }\n<a name=\"1409\" href=\"#1409\">1409</a>                 }\n<a name=\"1410\" href=\"#1410\">1410</a>                 <strong>if</strong> (action.equals(MessageProcessor.ACTION_LEAVE_CONTINUE)) {\n<a name=\"1411\" href=\"#1411\">1411</a>                     <strong>if</strong> (leaving &amp;&amp; owner.equals(userName)) {\n<a name=\"1412\" href=\"#1412\">1412</a>                         <em class=\"comment\">// we are waiting for our backup holder's continue message</em>\n<a name=\"1413\" href=\"#1413\">1413</a>                         shutdown();\n<a name=\"1414\" href=\"#1414\">1414</a>                     }\n<a name=\"1415\" href=\"#1415\">1415</a>                 }\n<a name=\"1416\" href=\"#1416\">1416</a>                 <strong>if</strong> (action.equals(MessageProcessor.ACTION_LEAVE_NOTIFY) &amp;&amp; !leaving &amp;&amp; \n<a name=\"1417\" href=\"#1417\">1417</a>                         takePersistent(owner)) {\n<a name=\"1418\" href=\"#1418\">1418</a>                     savePersistent(owner);\n<a name=\"1419\" href=\"#1419\">1419</a>                     Map\t\tleaveContinueEvent = <strong>new</strong> HashMap();\n<a name=\"1420\" href=\"#1420\">1420</a>                     leaveContinueEvent.put(MessageProcessor.ATTR_PEER_NAME, owner);\n<a name=\"1421\" href=\"#1421\">1421</a>                     leaveContinueEvent.put(MessageProcessor.ATTR_ACTOR, userName);\n<a name=\"1422\" href=\"#1422\">1422</a>                     leaveContinueEvent.put(MessageProcessor.ATTR_ACTION, \n<a name=\"1423\" href=\"#1423\">1423</a>                         MessageProcessor.ACTION_LEAVE_CONTINUE);\n<a name=\"1424\" href=\"#1424\">1424</a>                     pm.sendMessage(leaveContinueEvent);\n<a name=\"1425\" href=\"#1425\">1425</a>                 }\n<a name=\"1426\" href=\"#1426\">1426</a>                 <strong>if</strong> (action.equals(MessageProcessor.ACTION_COLOR)) {\n<a name=\"1427\" href=\"#1427\">1427</a>                     <strong>final</strong> String\tcolor = (String)message.get(MessageProcessor.ATTR_COLOR);\n<a name=\"1428\" href=\"#1428\">1428</a>                     laterWork.invokeLater(<strong>new</strong> Runnable() {\n<a name=\"1429\" href=\"#1429\">1429</a>                         <strong>public</strong> <strong>void</strong> run() {\n<a name=\"1430\" href=\"#1430\">1430</a>                             <em class=\"comment\">//ownerPeer.setColor(Color.decode(color));  // need to notify all peers so that ring colors can also be changed</em>\n<a name=\"1431\" href=\"#1431\">1431</a>             \t            Color c = Color.decode(color);\n<a name=\"1432\" href=\"#1432\">1432</a>             \t            String ownerName = ownerPeer.getName();\n<a name=\"1433\" href=\"#1433\">1433</a>             \t            <strong>for</strong> (Iterator i = peers.values().iterator(); i.hasNext(); ) {\n<a name=\"1434\" href=\"#1434\">1434</a>                 \t            SlicePeer\tp = (SlicePeer)i.next();\n<a name=\"1435\" href=\"#1435\">1435</a>                 \t            <strong>if</strong> (ownerName.equals(p.getName())) {\n<a name=\"1436\" href=\"#1436\">1436</a>                 \t        \t\tp.setColor(c);\n<a name=\"1437\" href=\"#1437\">1437</a>                 \t            }\n<a name=\"1438\" href=\"#1438\">1438</a>                 \t            p.updateRingColor(ownerPeer, c);\n<a name=\"1439\" href=\"#1439\">1439</a>                 \t        }\n<a name=\"1440\" href=\"#1440\">1440</a>                 \t        repaint();\n<a name=\"1441\" href=\"#1441\">1441</a>                         }\n<a name=\"1442\" href=\"#1442\">1442</a>                     });\n<a name=\"1443\" href=\"#1443\">1443</a>                 }\n<a name=\"1444\" href=\"#1444\">1444</a>             }\n<a name=\"1445\" href=\"#1445\">1445</a>             <strong>if</strong> (action.equals(MessageProcessor.ACTION_ADD_PEER)) {\n<a name=\"1446\" href=\"#1446\">1446</a>                 <em class=\"comment\">// This is for admission of peers, so it should not depend on ownerPeer != null</em>\n<a name=\"1447\" href=\"#1447\">1447</a>                 <strong>if</strong> (actor.equals(userName)) {\n<a name=\"1448\" href=\"#1448\">1448</a>                     admittedBy.put(owner, <strong>new</strong> Boolean(<strong>true</strong>));\n<a name=\"1449\" href=\"#1449\">1449</a>                 }\n<a name=\"1450\" href=\"#1450\">1450</a>             }\n<a name=\"1451\" href=\"#1451\">1451</a>         }\n<a name=\"1452\" href=\"#1452\">1452</a>     }\n<a name=\"1453\" href=\"#1453\">1453</a>     \n<a name=\"1454\" href=\"#1454\">1454</a>     <em>/**<em>*</em></em>\n<a name=\"1455\" href=\"#1455\">1455</a> <em>     * The drive/mount point for the Impromptu repository</em>\n<a name=\"1456\" href=\"#1456\">1456</a> <em>     */</em>\n<a name=\"1457\" href=\"#1457\">1457</a>     <strong>private</strong>\tString\timpromptuDrive;\n<a name=\"1458\" href=\"#1458\">1458</a>     <em>/**<em>*</em></em>\n<a name=\"1459\" href=\"#1459\">1459</a> <em>     * Set the Impromptu drive</em>\n<a name=\"1460\" href=\"#1460\">1460</a> <em>     * @param _impromptuDrive a drive letter on Windows, a mount point on Mac</em>\n<a name=\"1461\" href=\"#1461\">1461</a> <em>     */</em>\n<a name=\"1462\" href=\"#1462\">1462</a>     <strong>public</strong> <strong>void</strong> setImpromptuDrive(String _impromptuDrive) {\n<a name=\"1463\" href=\"#1463\">1463</a>         impromptuDrive = _impromptuDrive;\n<a name=\"1464\" href=\"#1464\">1464</a>     }\n<a name=\"1465\" href=\"#1465\">1465</a>     <em>/**<em>*</em></em>\n<a name=\"1466\" href=\"#1466\">1466</a> <em>     * Get the Impromptu drive</em>\n<a name=\"1467\" href=\"#1467\">1467</a> <em>     * @return a drive letter on Windows, a mount point on Mac</em>\n<a name=\"1468\" href=\"#1468\">1468</a> <em>     */</em>\n<a name=\"1469\" href=\"#1469\">1469</a>     <strong>public</strong> String getImpromptuDrive() {\n<a name=\"1470\" href=\"#1470\">1470</a>         <strong>return</strong> impromptuDrive;\n<a name=\"1471\" href=\"#1471\">1471</a>     }\n<a name=\"1472\" href=\"#1472\">1472</a> \n<a name=\"1473\" href=\"#1473\">1473</a>     <em>/**<em>*</em></em>\n<a name=\"1474\" href=\"#1474\">1474</a> <em>     * The URL for the Impromptu proxy</em>\n<a name=\"1475\" href=\"#1475\">1475</a> <em>     */</em>\n<a name=\"1476\" href=\"#1476\">1476</a> \t<strong>private</strong> String\t\t\timpromptuProxy;\n<a name=\"1477\" href=\"#1477\">1477</a>     <em>/**<em>*</em></em>\n<a name=\"1478\" href=\"#1478\">1478</a> <em>     * Set the impromptu proxy this pie connects to</em>\n<a name=\"1479\" href=\"#1479\">1479</a> <em>     * @param _impromptuProxy the URL for the impromptu proxy</em>\n<a name=\"1480\" href=\"#1480\">1480</a> <em>     */</em>\n<a name=\"1481\" href=\"#1481\">1481</a>     <strong>public</strong> <strong>void</strong> setImpromptuProxy(String _impromptuProxy) {\n<a name=\"1482\" href=\"#1482\">1482</a>         impromptuProxy = _impromptuProxy;\n<a name=\"1483\" href=\"#1483\">1483</a>     }\n<a name=\"1484\" href=\"#1484\">1484</a>     <em>/**<em>*</em></em>\n<a name=\"1485\" href=\"#1485\">1485</a> <em>     * Get the impromptu proxy this pie connects to</em>\n<a name=\"1486\" href=\"#1486\">1486</a> <em>     * @return the URL for the impromptu proxy</em>\n<a name=\"1487\" href=\"#1487\">1487</a> <em>     */</em>\n<a name=\"1488\" href=\"#1488\">1488</a>     <strong>public</strong> String getImpromptuProxy() {\n<a name=\"1489\" href=\"#1489\">1489</a>         <strong>return</strong> impromptuProxy;\n<a name=\"1490\" href=\"#1490\">1490</a>     }\n<a name=\"1491\" href=\"#1491\">1491</a> \n<a name=\"1492\" href=\"#1492\">1492</a>     <em>/**<em>*</em></em>\n<a name=\"1493\" href=\"#1493\">1493</a> <em>     * The password used to connect to the Impromptu proxy</em>\n<a name=\"1494\" href=\"#1494\">1494</a> <em>     */</em>\n<a name=\"1495\" href=\"#1495\">1495</a>     <strong>private</strong>\tString\tpassword = <span class=\"string\">\"\"</span>;\n<a name=\"1496\" href=\"#1496\">1496</a>     <em>/**<em>*</em></em>\n<a name=\"1497\" href=\"#1497\">1497</a> <em>     * Set the password that the pie uses to authenticate to the proxy. </em>\n<a name=\"1498\" href=\"#1498\">1498</a> <em>     * Also connect to the proxy and mount it as a drive, since the necessary</em>\n<a name=\"1499\" href=\"#1499\">1499</a> <em>     * information is now complete.</em>\n<a name=\"1500\" href=\"#1500\">1500</a> <em>     * </em>\n<a name=\"1501\" href=\"#1501\">1501</a> <em>     * @param _password the password</em>\n<a name=\"1502\" href=\"#1502\">1502</a> <em>     */</em>\n<a name=\"1503\" href=\"#1503\">1503</a>     <strong>public</strong> <strong>void</strong> setPassword(String _password) {\n<a name=\"1504\" href=\"#1504\">1504</a>         password = _password;\n<a name=\"1505\" href=\"#1505\">1505</a> \n<a name=\"1506\" href=\"#1506\">1506</a>         <em class=\"comment\">// During startup, if we add the owner as the first peer, and then</em>\n<a name=\"1507\" href=\"#1507\">1507</a>         <em class=\"comment\">//  set the password, at that time it seems</em>\n<a name=\"1508\" href=\"#1508\">1508</a>         <em class=\"comment\">// the server is not fully ready yet, even though we have added</em>\n<a name=\"1509\" href=\"#1509\">1509</a>         <em class=\"comment\">// users and passwords. (We are in the proxy servlet's init where</em>\n<a name=\"1510\" href=\"#1510\">1510</a>         <em class=\"comment\">//  it calls proxyFilter's initAfterServlet, which means the server</em>\n<a name=\"1511\" href=\"#1511\">1511</a>         <em class=\"comment\">//  still thinks the init is not done yet. ) So connectToProxy </em>\n<a name=\"1512\" href=\"#1512\">1512</a>         <em class=\"comment\">//\tcanno be executed here.</em>\n<a name=\"1513\" href=\"#1513\">1513</a>     }\n<a name=\"1514\" href=\"#1514\">1514</a>     \n<a name=\"1515\" href=\"#1515\">1515</a>     <strong>private</strong> <strong>boolean</strong> connectingToProxy = <strong>true</strong>;\n<a name=\"1516\" href=\"#1516\">1516</a>     <em>/**<em>*</em></em>\n<a name=\"1517\" href=\"#1517\">1517</a> <em>     * Set whether the proxy should be connected</em>\n<a name=\"1518\" href=\"#1518\">1518</a> <em>     * @param connectingToProxy true if the pie should connect to proxy, </em>\n<a name=\"1519\" href=\"#1519\">1519</a> <em>     * false if the pie should be just a viewer</em>\n<a name=\"1520\" href=\"#1520\">1520</a> <em>     */</em>\n<a name=\"1521\" href=\"#1521\">1521</a>     <strong>public</strong> <strong>void</strong> setConnectToProxy(<strong>boolean</strong> connectingToProxy) {\n<a name=\"1522\" href=\"#1522\">1522</a>         <strong>this</strong>.connectingToProxy = connectingToProxy;\n<a name=\"1523\" href=\"#1523\">1523</a>     }\n<a name=\"1524\" href=\"#1524\">1524</a>     \n<a name=\"1525\" href=\"#1525\">1525</a>     <em class=\"comment\">// record whether we have tried the first connection</em>\n<a name=\"1526\" href=\"#1526\">1526</a>     <strong>private</strong> <strong>boolean</strong> connectedToProxy = false;\n<a name=\"1527\" href=\"#1527\">1527</a>     <em>/**<em>*</em></em>\n<a name=\"1528\" href=\"#1528\">1528</a> <em>     * Connect to the Impromptu proxy and mount it for file system access</em>\n<a name=\"1529\" href=\"#1529\">1529</a> <em>     */</em>\n<a name=\"1530\" href=\"#1530\">1530</a>     <strong>public</strong> <strong>void</strong> connectToProxy() {\n<a name=\"1531\" href=\"#1531\">1531</a>         <strong>try</strong> {\n<a name=\"1532\" href=\"#1532\">1532</a>             <em class=\"comment\">// here we do nothing to server,</em>\n<a name=\"1533\" href=\"#1533\">1533</a>             <em class=\"comment\">/*</em>\n<a name=\"1534\" href=\"#1534\">1534</a> <em class=\"comment\">\t        impromptuServer = new WebdavResource(new HttpURL(impromptuProxy), </em>\n<a name=\"1535\" href=\"#1535\">1535</a> <em class=\"comment\">\t                new UsernamePasswordCredentials(userName, password), </em>\n<a name=\"1536\" href=\"#1536\">1536</a> <em class=\"comment\">\t                WebdavResource.NOACTION, DepthSupport.DEPTH_0);</em>\n<a name=\"1537\" href=\"#1537\">1537</a> <em class=\"comment\">\t        */</em>\n<a name=\"1538\" href=\"#1538\">1538</a>             HttpURL\t\toriginal = <strong>new</strong> HttpURL(impromptuProxy);\n<a name=\"1539\" href=\"#1539\">1539</a>             <em class=\"comment\">// Must use this HttpURL constructor that includes user and password,</em>\n<a name=\"1540\" href=\"#1540\">1540</a>             <em class=\"comment\">// so the underlying httpclient of webdavresource can keep the context</em>\n<a name=\"1541\" href=\"#1541\">1541</a>             <em class=\"comment\">// and will not create a httpclient each time, with an preemptive auth </em>\n<a name=\"1542\" href=\"#1542\">1542</a>             impromptuServer = <strong>new</strong> WebdavResource(<strong>new</strong> HttpURL(userName, password, \n<a name=\"1543\" href=\"#1543\">1543</a>                     original.getHost(), original.getPort(), original.getPath()), \n<a name=\"1544\" href=\"#1544\">1544</a>                     WebdavResource.NOACTION, DepthSupport.DEPTH_0);\n<a name=\"1545\" href=\"#1545\">1545</a> \t        impromptuServer.setFollowRedirects(<strong>true</strong>);\n<a name=\"1546\" href=\"#1546\">1546</a> \t        <em class=\"comment\">// Here we turn off the preemptive auth, which is not possible for</em>\n<a name=\"1547\" href=\"#1547\">1547</a> \t        <em class=\"comment\">//\tdigest authentication, and actually has problem with Jetty who</em>\n<a name=\"1548\" href=\"#1548\">1548</a> \t        <em class=\"comment\">//  seemingly does not send a challenge back on a pre-authed request</em>\n<a name=\"1549\" href=\"#1549\">1549</a> \t        impromptuServer.retrieveSessionInstance().getState().\n<a name=\"1550\" href=\"#1550\">1550</a> \t        \t\tsetAuthenticationPreemptive(false);\n<a name=\"1551\" href=\"#1551\">1551</a> \t        <em class=\"comment\">// impromptuServer.setDebug(1);</em>\n<a name=\"1552\" href=\"#1552\">1552</a>             <strong>if</strong> (edu.uci.isr.impromptu.common.Configuration.ACL_AT_CLIENT) {\n<a name=\"1553\" href=\"#1553\">1553</a>                 aclManager = <strong>new</strong> <a href=\"../../../../../edu/uci/isr/impromptu/security/ACLManager.html\">ACLManager</a>(impromptuServer);\n<a name=\"1554\" href=\"#1554\">1554</a>             }\n<a name=\"1555\" href=\"#1555\">1555</a> \t        userManager = <strong>new</strong> UserManager(<strong>null</strong>, impromptuServer);\n<a name=\"1556\" href=\"#1556\">1556</a> \n<a name=\"1557\" href=\"#1557\">1557</a>             Configuration.setDestinationDrive(impromptuDrive);\n<a name=\"1558\" href=\"#1558\">1558</a> \t        <strong>final</strong> <strong>int</strong>\t\tmountResult = Platform.mountDrive(userName, password); \n<a name=\"1559\" href=\"#1559\">1559</a>         \t<strong>new</strong> Thread() {\n<a name=\"1560\" href=\"#1560\">1560</a>         \t\t<em class=\"comment\">// Use a thread so this will not block other start up functions</em>\n<a name=\"1561\" href=\"#1561\">1561</a>         \t\t<strong>public</strong> <strong>void</strong> run() {\n<a name=\"1562\" href=\"#1562\">1562</a>         \t        <strong>if</strong> ( mountResult != 0) {\n<a name=\"1563\" href=\"#1563\">1563</a> \t\t            <em class=\"comment\">// Mount unsuccessfully</em>\n<a name=\"1564\" href=\"#1564\">1564</a> \t\t            <em class=\"comment\">// On Windows the error most likely is a 1219, credential conflict.</em>\n<a name=\"1565\" href=\"#1565\">1565</a> \t\t            <em class=\"comment\">// We cannot find a solution. The only workaround is to relogin.</em>\n<a name=\"1566\" href=\"#1566\">1566</a> \t\t            <em class=\"comment\">// Sometimes even the return result is non-zero the drive is still mounted.</em>\n<a name=\"1567\" href=\"#1567\">1567</a> \t\t            showMessageDialog(<span class=\"string\">\"Cannot mount the Impromptu drive. \"</span> +\n<a name=\"1568\" href=\"#1568\">1568</a> \t\t                    <span class=\"string\">\"The error code is \"</span> + mountResult + <span class=\"string\">\".\\n\\n\"</span> +\n<a name=\"1569\" href=\"#1569\">1569</a> \t\t                    <span class=\"string\">\"Please restart the \"</span> + Configuration.TITLE + <span class=\"string\">\".\\n\"</span> +\n<a name=\"1570\" href=\"#1570\">1570</a> \t\t                    <span class=\"string\">\"If this problem persists, please log off, log on back, and try again.\"</span>, \n<a name=\"1571\" href=\"#1571\">1571</a> \t\t                    <span class=\"string\">\"Dirve mount failure\"</span>, JOptionPane.ERROR_MESSAGE);\n<a name=\"1572\" href=\"#1572\">1572</a>         \t        }\n<a name=\"1573\" href=\"#1573\">1573</a>         \t\t}\n<a name=\"1574\" href=\"#1574\">1574</a>         \t}.start();\n<a name=\"1575\" href=\"#1575\">1575</a>         }\n<a name=\"1576\" href=\"#1576\">1576</a>         <strong>catch</strong> (IOException ioe) {\n<a name=\"1577\" href=\"#1577\">1577</a>             Utils.handleException(ioe);\n<a name=\"1578\" href=\"#1578\">1578</a>         }\n<a name=\"1579\" href=\"#1579\">1579</a>         connectedToProxy = <strong>true</strong>;\n<a name=\"1580\" href=\"#1580\">1580</a>     }\n<a name=\"1581\" href=\"#1581\">1581</a>     \n<a name=\"1582\" href=\"#1582\">1582</a>     <em>/**<em>*</em></em>\n<a name=\"1583\" href=\"#1583\">1583</a> <em>     * Display the user manager</em>\n<a name=\"1584\" href=\"#1584\">1584</a> <em>     */</em>\n<a name=\"1585\" href=\"#1585\">1585</a>     <strong>public</strong> <strong>void</strong> showUserManager() {\n<a name=\"1586\" href=\"#1586\">1586</a>         userManager.show();\n<a name=\"1587\" href=\"#1587\">1587</a>     }\n<a name=\"1588\" href=\"#1588\">1588</a>     \n<a name=\"1589\" href=\"#1589\">1589</a>     <em>/**<em>*</em></em>\n<a name=\"1590\" href=\"#1590\">1590</a> <em>     * Get everything from the proxy and (re)start fresh</em>\n<a name=\"1591\" href=\"#1591\">1591</a> <em>     */</em>\n<a name=\"1592\" href=\"#1592\">1592</a>     <strong>public</strong> <strong>void</strong> refresh() {\n<a name=\"1593\" href=\"#1593\">1593</a>         <em class=\"comment\">// Clear the old peers</em>\n<a name=\"1594\" href=\"#1594\">1594</a>         <em class=\"comment\">// Need to make a copy of the keys for the iterator, since removePeer changes the keys set</em>\n<a name=\"1595\" href=\"#1595\">1595</a>         Set\t\tpeerNames = <strong>new</strong> HashSet(peers.keySet());\n<a name=\"1596\" href=\"#1596\">1596</a>         <strong>for</strong> (Iterator i = peerNames.iterator(); i.hasNext(); ) {\n<a name=\"1597\" href=\"#1597\">1597</a>             removePeer((String)i.next());\n<a name=\"1598\" href=\"#1598\">1598</a>         }\n<a name=\"1599\" href=\"#1599\">1599</a>         \n<a name=\"1600\" href=\"#1600\">1600</a>         <em class=\"comment\">// Store refreshed peers and their files</em>\n<a name=\"1601\" href=\"#1601\">1601</a>         <em class=\"comment\">// Peers are stored alphabetically</em>\n<a name=\"1602\" href=\"#1602\">1602</a>         <strong>final</strong> SortedMap\t\t<strong>new</strong>Peers = <strong>new</strong> TreeMap();\n<a name=\"1603\" href=\"#1603\">1603</a>         Set\t\t\t\t\tfilesOfAPeer = <strong>new</strong> HashSet();\n<a name=\"1604\" href=\"#1604\">1604</a>         \n<a name=\"1605\" href=\"#1605\">1605</a>         <strong>try</strong> {\n<a name=\"1606\" href=\"#1606\">1606</a>             <em class=\"comment\">// Get all files</em>\n<a name=\"1607\" href=\"#1607\">1607</a> \t        impromptuServer.setPath(Utils.fileNameToURL(\n<a name=\"1608\" href=\"#1608\">1608</a> \t                edu.uci.isr.impromptu.common.Configuration.ROOT_NAME));\n<a name=\"1609\" href=\"#1609\">1609</a> \t        String[]\tfiles = impromptuServer.list();\n<a name=\"1610\" href=\"#1610\">1610</a> \t        <strong>for</strong> (<strong>int</strong> i =0; files != <strong>null</strong> &amp;&amp; i &lt; files.length; i++) {\n<a name=\"1611\" href=\"#1611\">1611</a> \t            String path = Utils.fileNameToURL(files[i]);\n<a name=\"1612\" href=\"#1612\">1612</a> \t            Enumeration e = impromptuServer.propfindMethod(path, ourProperties);\n<a name=\"1613\" href=\"#1613\">1613</a> \t            <strong>if</strong> (e.hasMoreElements()) {\n<a name=\"1614\" href=\"#1614\">1614</a> \t\t            <em class=\"comment\">// Get properties of a file</em>\n<a name=\"1615\" href=\"#1615\">1615</a> \t\t            String owner = (String)e.nextElement();\n<a name=\"1616\" href=\"#1616\">1616</a> \t\t            <em class=\"comment\">// if no owner, local peer becomes the owner</em>\n<a name=\"1617\" href=\"#1617\">1617</a> \t\t            <em class=\"comment\">// This owner is the name we set. Slide maintains a WebDAV </em>\n<a name=\"1618\" href=\"#1618\">1618</a> \t\t            <em class=\"comment\">//\t\towner property as /users/TheUserWeCreated </em>\n<a name=\"1619\" href=\"#1619\">1619</a> \t\t            <strong>if</strong> (owner.equals(<span class=\"string\">\"\"</span>))\n<a name=\"1620\" href=\"#1620\">1620</a> \t\t                owner = userName;\n<a name=\"1621\" href=\"#1621\">1621</a> \t\t            String radius = (String)e.nextElement();\n<a name=\"1622\" href=\"#1622\">1622</a> \t\t            <em class=\"comment\">// if no radius, use a secure radius</em>\n<a name=\"1623\" href=\"#1623\">1623</a> \t\t            <strong>if</strong> (radius.equals(<span class=\"string\">\"\"</span>))\n<a name=\"1624\" href=\"#1624\">1624</a> \t\t                radius = String.valueOf(PieUtils.getDefaultSecureRadius());\n<a name=\"1625\" href=\"#1625\">1625</a> \t\t            String angle = (String)e.nextElement();\n<a name=\"1626\" href=\"#1626\">1626</a> \t\t            <em class=\"comment\">// if no angle, use a random angle</em>\n<a name=\"1627\" href=\"#1627\">1627</a> \t\t            <strong>if</strong> (angle.equals(<span class=\"string\">\"\"</span>))\n<a name=\"1628\" href=\"#1628\">1628</a> \t\t                angle = String.valueOf(Math.random());\n<a name=\"1629\" href=\"#1629\">1629</a> \t\n<a name=\"1630\" href=\"#1630\">1630</a> \t\t            <strong>if</strong> (newPeers.containsKey(owner)) {\n<a name=\"1631\" href=\"#1631\">1631</a> \t\t                <em class=\"comment\">// We have seen this peer</em>\n<a name=\"1632\" href=\"#1632\">1632</a> \t\t                filesOfAPeer = (Set) newPeers.get(owner);\n<a name=\"1633\" href=\"#1633\">1633</a> \t\t            }\n<a name=\"1634\" href=\"#1634\">1634</a> \t\t            <strong>else</strong> {\n<a name=\"1635\" href=\"#1635\">1635</a> \t\t                <em class=\"comment\">// Find a new peer</em>\n<a name=\"1636\" href=\"#1636\">1636</a> \t\t                filesOfAPeer = <strong>new</strong> HashSet();\n<a name=\"1637\" href=\"#1637\">1637</a> \t\t                newPeers.put(owner, filesOfAPeer);\n<a name=\"1638\" href=\"#1638\">1638</a> \t\t            }\n<a name=\"1639\" href=\"#1639\">1639</a> \t\t            <em class=\"comment\">// Remember this file</em>\n<a name=\"1640\" href=\"#1640\">1640</a> \t\t            filesOfAPeer.add(<strong>new</strong> DotInRepository(owner, files[i], radius, angle));\n<a name=\"1641\" href=\"#1641\">1641</a> \t            }\n<a name=\"1642\" href=\"#1642\">1642</a> \t        }\n<a name=\"1643\" href=\"#1643\">1643</a>         }\n<a name=\"1644\" href=\"#1644\">1644</a>         <strong>catch</strong> (IOException ioe) {\n<a name=\"1645\" href=\"#1645\">1645</a>             Utils.handleException(ioe);\n<a name=\"1646\" href=\"#1646\">1646</a>         }\n<a name=\"1647\" href=\"#1647\">1647</a>         \n<a name=\"1648\" href=\"#1648\">1648</a>         <strong>if</strong> (pm != <strong>null</strong>) {\n<a name=\"1649\" href=\"#1649\">1649</a>             <em class=\"comment\">// get peers that have not created any files in the proxy</em>\n<a name=\"1650\" href=\"#1650\">1650</a>             Set ps = <strong>new</strong> HashSet(pm.getPeers().keySet());\n<a name=\"1651\" href=\"#1651\">1651</a>             <strong>for</strong> (Iterator i = ps.iterator(); i.hasNext(); ) {\n<a name=\"1652\" href=\"#1652\">1652</a>                 String\tpName = pm.getPeer((String)i.next()).getName();\n<a name=\"1653\" href=\"#1653\">1653</a>                 <strong>if</strong> (!newPeers.containsKey(pName)) {\n<a name=\"1654\" href=\"#1654\">1654</a>                     <strong>new</strong>Peers.put(pName, <strong>new</strong> HashSet());\n<a name=\"1655\" href=\"#1655\">1655</a>                 }\n<a name=\"1656\" href=\"#1656\">1656</a>             }\n<a name=\"1657\" href=\"#1657\">1657</a>         }\n<a name=\"1658\" href=\"#1658\">1658</a>         \n<a name=\"1659\" href=\"#1659\">1659</a>         laterWork.invokeLater(<strong>new</strong> Runnable() {\n<a name=\"1660\" href=\"#1660\">1660</a>     \t\t<strong>public</strong> <strong>void</strong> run() {\n<a name=\"1661\" href=\"#1661\">1661</a> \t\t        <strong>int</strong>\t\tpeersCount = newPeers.size();\n<a name=\"1662\" href=\"#1662\">1662</a> \t\t        <strong>int</strong>\t\tcardinal = 1;\n<a name=\"1663\" href=\"#1663\">1663</a> \t\t        <strong>for</strong> (Iterator i = newPeers.keySet().iterator(); i.hasNext(); ) {\n<a name=\"1664\" href=\"#1664\">1664</a> \t\t            String\t\tpeerName = (String)i.next();\n<a name=\"1665\" href=\"#1665\">1665</a> \t\t            <strong>boolean</strong>\t\tisLocal = false;\n<a name=\"1666\" href=\"#1666\">1666</a> \t\t            <strong>if</strong> (peerName.equals(userName)) {\n<a name=\"1667\" href=\"#1667\">1667</a> \t\t                isLocal = <strong>true</strong>;\n<a name=\"1668\" href=\"#1668\">1668</a> \t\t            }\n<a name=\"1669\" href=\"#1669\">1669</a> \t\t\n<a name=\"1670\" href=\"#1670\">1670</a> \t\t            <em class=\"comment\">// Old service info for other slices</em>\n<a name=\"1671\" href=\"#1671\">1671</a> \t\t            <em class=\"comment\">// When running a repository and a pie separately, only the </em>\n<a name=\"1672\" href=\"#1672\">1672</a> \t\t            <em class=\"comment\">//\t\trepository is stored in the peer manager  </em>\n<a name=\"1673\" href=\"#1673\">1673</a> \t\t            ServiceInfo\tsi = pm.getPeer(peerName).getServiceInfo();\n<a name=\"1674\" href=\"#1674\">1674</a> \t\t\t        Color peerColor = acquireColor(si, isLocal, peerName, localColor);\n<a name=\"1675\" href=\"#1675\">1675</a> \t\t            <em class=\"comment\">// new peer</em>\n<a name=\"1676\" href=\"#1676\">1676</a> \t\t            SlicePeer p = <strong>new</strong> SlicePeer(peerName, Pie.<strong>this</strong>, peersCount, \n<a name=\"1677\" href=\"#1677\">1677</a> \t\t                    cardinal, isLocal, peerColor, si.getHostAddress(), si, <strong>true</strong>);\n<a name=\"1678\" href=\"#1678\">1678</a> \t\t            addPeer(p);\n<a name=\"1679\" href=\"#1679\">1679</a> \t\t            <em class=\"comment\">// add new files</em>\n<a name=\"1680\" href=\"#1680\">1680</a> \t\t            Set filesOfPeer = (Set)newPeers.get(peerName);\n<a name=\"1681\" href=\"#1681\">1681</a> \t\t            <strong>for</strong> (Iterator j = filesOfPeer.iterator(); j.hasNext(); ) {\n<a name=\"1682\" href=\"#1682\">1682</a> \t\t                DotInRepository d = (DotInRepository)j.next();\n<a name=\"1683\" href=\"#1683\">1683</a> \t\t                <strong>if</strong> (d.getOwner().equals(peerName)) {\n<a name=\"1684\" href=\"#1684\">1684</a> \t\t\t                p.addFile(d.getName(), Double.parseDouble(d.getRadius()), Double.parseDouble(d.getAngle()));\n<a name=\"1685\" href=\"#1685\">1685</a> \t\t                }\n<a name=\"1686\" href=\"#1686\">1686</a> \t\t            }\n<a name=\"1687\" href=\"#1687\">1687</a> \t\t            cardinal++;\n<a name=\"1688\" href=\"#1688\">1688</a> \t\t        }\n<a name=\"1689\" href=\"#1689\">1689</a>     \t\t}\n<a name=\"1690\" href=\"#1690\">1690</a>         });\n<a name=\"1691\" href=\"#1691\">1691</a>     }\n<a name=\"1692\" href=\"#1692\">1692</a>     \n<a name=\"1693\" href=\"#1693\">1693</a>     <em>/**<em>*</em></em>\n<a name=\"1694\" href=\"#1694\">1694</a> <em>     * Dot used to describe files in the repository. Essentially a structure</em>\n<a name=\"1695\" href=\"#1695\">1695</a> <em>     * </em>\n<a name=\"1696\" href=\"#1696\">1696</a> <em>     * @author Jie Ren</em>\n<a name=\"1697\" href=\"#1697\">1697</a> <em>     */</em>\n<a name=\"1698\" href=\"#1698\">1698</a>     <strong>private</strong> <strong>final</strong> <strong>static</strong> <strong>class</strong> DotInRepository {\n<a name=\"1699\" href=\"#1699\">1699</a>         <strong>private</strong> String\towner;\n<a name=\"1700\" href=\"#1700\">1700</a>         <strong>private</strong> String \tname;\n<a name=\"1701\" href=\"#1701\">1701</a>         <strong>private</strong> String \tradius;\n<a name=\"1702\" href=\"#1702\">1702</a>         <strong>private</strong> String\tangle;\n<a name=\"1703\" href=\"#1703\">1703</a> \n<a name=\"1704\" href=\"#1704\">1704</a>         <em>/**<em>*</em></em>\n<a name=\"1705\" href=\"#1705\">1705</a> <em>         * Create such a structure </em>\n<a name=\"1706\" href=\"#1706\">1706</a> <em>         * </em>\n<a name=\"1707\" href=\"#1707\">1707</a> <em>         * @param _owner\towner of the file</em>\n<a name=\"1708\" href=\"#1708\">1708</a> <em>         * @param _name\t\tname of the file</em>\n<a name=\"1709\" href=\"#1709\">1709</a> <em>         * @param _radius\trelative radius of the file</em>\n<a name=\"1710\" href=\"#1710\">1710</a> <em>         * @param _angle\trelative angle of the file</em>\n<a name=\"1711\" href=\"#1711\">1711</a> <em>         */</em>\n<a name=\"1712\" href=\"#1712\">1712</a>         <strong>private</strong> DotInRepository(String _owner, String _name, String _radius, String _angle) {\n<a name=\"1713\" href=\"#1713\">1713</a>             owner = _owner;\n<a name=\"1714\" href=\"#1714\">1714</a>             name = _name;\n<a name=\"1715\" href=\"#1715\">1715</a>             radius = _radius;\n<a name=\"1716\" href=\"#1716\">1716</a>             angle = _angle;\n<a name=\"1717\" href=\"#1717\">1717</a>         }\n<a name=\"1718\" href=\"#1718\">1718</a>         \n<a name=\"1719\" href=\"#1719\">1719</a>         <em>/**<em>*</em></em>\n<a name=\"1720\" href=\"#1720\">1720</a> <em>         * Get the owner of this dot</em>\n<a name=\"1721\" href=\"#1721\">1721</a> <em>         * @return the owner</em>\n<a name=\"1722\" href=\"#1722\">1722</a> <em>         */</em>\n<a name=\"1723\" href=\"#1723\">1723</a>         <strong>private</strong> String getOwner() {\n<a name=\"1724\" href=\"#1724\">1724</a>             <strong>return</strong> owner;\n<a name=\"1725\" href=\"#1725\">1725</a>         }\n<a name=\"1726\" href=\"#1726\">1726</a>         \n<a name=\"1727\" href=\"#1727\">1727</a>         <em>/**<em>*</em></em>\n<a name=\"1728\" href=\"#1728\">1728</a> <em>         * Get the name of this dot</em>\n<a name=\"1729\" href=\"#1729\">1729</a> <em>         * @return the name</em>\n<a name=\"1730\" href=\"#1730\">1730</a> <em>         */</em>\n<a name=\"1731\" href=\"#1731\">1731</a>         <strong>private</strong> String getName() {\n<a name=\"1732\" href=\"#1732\">1732</a>             <strong>return</strong> name;\n<a name=\"1733\" href=\"#1733\">1733</a>         }\n<a name=\"1734\" href=\"#1734\">1734</a>         \n<a name=\"1735\" href=\"#1735\">1735</a>         <em>/**<em>*</em></em>\n<a name=\"1736\" href=\"#1736\">1736</a> <em>         * Get the radius of this dot</em>\n<a name=\"1737\" href=\"#1737\">1737</a> <em>         * @return the radius</em>\n<a name=\"1738\" href=\"#1738\">1738</a> <em>         */</em>\n<a name=\"1739\" href=\"#1739\">1739</a>         <strong>private</strong> String getRadius() {\n<a name=\"1740\" href=\"#1740\">1740</a>             <strong>return</strong> radius;\n<a name=\"1741\" href=\"#1741\">1741</a>         }\n<a name=\"1742\" href=\"#1742\">1742</a>         \n<a name=\"1743\" href=\"#1743\">1743</a>         <em>/**<em>*</em></em>\n<a name=\"1744\" href=\"#1744\">1744</a> <em>         * Get the angle of this dot</em>\n<a name=\"1745\" href=\"#1745\">1745</a> <em>         * @return the angle</em>\n<a name=\"1746\" href=\"#1746\">1746</a> <em>         */</em>\n<a name=\"1747\" href=\"#1747\">1747</a>         <strong>private</strong> String getAngle() {\n<a name=\"1748\" href=\"#1748\">1748</a>             <strong>return</strong> angle;\n<a name=\"1749\" href=\"#1749\">1749</a>         }\n<a name=\"1750\" href=\"#1750\">1750</a>         \n<a name=\"1751\" href=\"#1751\">1751</a>     }\n<a name=\"1752\" href=\"#1752\">1752</a>     \n<a name=\"1753\" href=\"#1753\">1753</a>     <em>/**<em>*</em></em>\n<a name=\"1754\" href=\"#1754\">1754</a> <em>     * Set the local user name of this pie</em>\n<a name=\"1755\" href=\"#1755\">1755</a> <em>     * @param _userName the local user name</em>\n<a name=\"1756\" href=\"#1756\">1756</a> <em>     */</em>\n<a name=\"1757\" href=\"#1757\">1757</a>     <strong>public</strong> <strong>void</strong> setName(String _userName) {\n<a name=\"1758\" href=\"#1758\">1758</a>         userName = _userName;\n<a name=\"1759\" href=\"#1759\">1759</a>     }\n<a name=\"1760\" href=\"#1760\">1760</a>     \n<a name=\"1761\" href=\"#1761\">1761</a>     <strong>private</strong>\tString\tlocalColor;\n<a name=\"1762\" href=\"#1762\">1762</a>     <em>/**<em>*</em></em>\n<a name=\"1763\" href=\"#1763\">1763</a> <em>     * Set the color for the local peer</em>\n<a name=\"1764\" href=\"#1764\">1764</a> <em>     * </em>\n<a name=\"1765\" href=\"#1765\">1765</a> <em>     * @param _localColor\ta string for the local color</em>\n<a name=\"1766\" href=\"#1766\">1766</a> <em>     */</em>\n<a name=\"1767\" href=\"#1767\">1767</a>     <strong>public</strong> <strong>void</strong> setLocalColor(String _localColor) {\n<a name=\"1768\" href=\"#1768\">1768</a>         <em class=\"comment\">// ISSUE: protocol: should put to JmDNS so newbies can find my color</em>\n<a name=\"1769\" href=\"#1769\">1769</a>         localColor = _localColor;\n<a name=\"1770\" href=\"#1770\">1770</a>         <strong>if</strong> (localPeer != <strong>null</strong>) {\n<a name=\"1771\" href=\"#1771\">1771</a>             Map\t\tcolorEvent = <strong>new</strong> HashMap();\n<a name=\"1772\" href=\"#1772\">1772</a>             colorEvent.put(MessageProcessor.ATTR_PEER_NAME, \n<a name=\"1773\" href=\"#1773\">1773</a>                     userName);\n<a name=\"1774\" href=\"#1774\">1774</a>             colorEvent.put(MessageProcessor.ATTR_ACTION, \n<a name=\"1775\" href=\"#1775\">1775</a>                 MessageProcessor.ACTION_COLOR);\n<a name=\"1776\" href=\"#1776\">1776</a>             colorEvent.put(MessageProcessor.ATTR_COLOR, \n<a name=\"1777\" href=\"#1777\">1777</a>                     localColor);\n<a name=\"1778\" href=\"#1778\">1778</a>             pm.sendMessage(colorEvent);\n<a name=\"1779\" href=\"#1779\">1779</a>         }\n<a name=\"1780\" href=\"#1780\">1780</a>     }\n<a name=\"1781\" href=\"#1781\">1781</a>     \n<a name=\"1782\" href=\"#1782\">1782</a>     <em>/**<em>*</em></em>\n<a name=\"1783\" href=\"#1783\">1783</a> <em>     * Get the color for the local peer</em>\n<a name=\"1784\" href=\"#1784\">1784</a> <em>     * </em>\n<a name=\"1785\" href=\"#1785\">1785</a> <em>     * @return the color for the local peer</em>\n<a name=\"1786\" href=\"#1786\">1786</a> <em>     */</em>\n<a name=\"1787\" href=\"#1787\">1787</a>     <strong>public</strong> String getLocalColor() {\n<a name=\"1788\" href=\"#1788\">1788</a>         <strong>return</strong> localColor;\n<a name=\"1789\" href=\"#1789\">1789</a>     }\n<a name=\"1790\" href=\"#1790\">1790</a>    \n<a name=\"1791\" href=\"#1791\">1791</a>     <em>/**<em>*</em></em>\n<a name=\"1792\" href=\"#1792\">1792</a> <em>     * Get the local user name.   </em>\n<a name=\"1793\" href=\"#1793\">1793</a> <em>     * @return the local user name</em>\n<a name=\"1794\" href=\"#1794\">1794</a> <em>     */</em>\n<a name=\"1795\" href=\"#1795\">1795</a>     <strong>public</strong> String getName() {\n<a name=\"1796\" href=\"#1796\">1796</a>         <strong>return</strong> userName;\n<a name=\"1797\" href=\"#1797\">1797</a>     }\n<a name=\"1798\" href=\"#1798\">1798</a>     \n<a name=\"1799\" href=\"#1799\">1799</a>     <em>/**<em>*</em></em>\n<a name=\"1800\" href=\"#1800\">1800</a> <em>     * Get the character of the pie</em>\n<a name=\"1801\" href=\"#1801\">1801</a> <em>     * @return an empty string when running as part of a peer, and the </em>\n<a name=\"1802\" href=\"#1802\">1802</a> <em>     * PIE_CHARACTER string when running as an independent pie.</em>\n<a name=\"1803\" href=\"#1803\">1803</a> <em>     */</em>\n<a name=\"1804\" href=\"#1804\">1804</a>     <strong>public</strong> String getCharacter() {\n<a name=\"1805\" href=\"#1805\">1805</a>         String\tresult = <span class=\"string\">\"\"</span>;\n<a name=\"1806\" href=\"#1806\">1806</a>         <strong>if</strong> (!integratePie) {\n<a name=\"1807\" href=\"#1807\">1807</a>             result = edu.uci.isr.impromptu.common.Configuration.PIE_CHARACTER; \n<a name=\"1808\" href=\"#1808\">1808</a>         }\n<a name=\"1809\" href=\"#1809\">1809</a>         <strong>return</strong> result;\n<a name=\"1810\" href=\"#1810\">1810</a>     }\n<a name=\"1811\" href=\"#1811\">1811</a>     <em class=\"comment\">// whether to wait for admissions from others</em>\n<a name=\"1812\" href=\"#1812\">1812</a>     <strong>private</strong> <strong>boolean</strong>\twaitForAdmission = false;\n<a name=\"1813\" href=\"#1813\">1813</a>     <em class=\"comment\">// one time list, used to notify updater what it should do when it is set</em>\n<a name=\"1814\" href=\"#1814\">1814</a>     <strong>private</strong> List\ttoUpdater = <strong>new</strong> ArrayList();\n<a name=\"1815\" href=\"#1815\">1815</a>     <em>/**<em>*</em></em>\n<a name=\"1816\" href=\"#1816\">1816</a> <em>     * Create a peer when a new peer joins</em>\n<a name=\"1817\" href=\"#1817\">1817</a> <em>     * </em>\n<a name=\"1818\" href=\"#1818\">1818</a> <em>     * @param \tsi the service info of the newly appeared peer</em>\n<a name=\"1819\" href=\"#1819\">1819</a> <em>     * @return\ta newly created peer</em>\n<a name=\"1820\" href=\"#1820\">1820</a> <em>     */</em>\n<a name=\"1821\" href=\"#1821\">1821</a>     <strong>public</strong> <strong>synchronized</strong> <a href=\"../../../../../edu/uci/isr/impromptu/common/Peer.html\">Peer</a> createAPeer(<strong>final</strong> ServiceInfo si) {\n<a name=\"1822\" href=\"#1822\">1822</a>         String\tserviceType = si.getType();\n<a name=\"1823\" href=\"#1823\">1823</a>         <strong>if</strong> (!serviceType.equalsIgnoreCase(edu.uci.isr.impromptu.repository.Configuration.IMPROMPTU_SERVICE_TYPE))\n<a name=\"1824\" href=\"#1824\">1824</a>             <strong>return</strong> <strong>null</strong>;\n<a name=\"1825\" href=\"#1825\">1825</a>         \n<a name=\"1826\" href=\"#1826\">1826</a>         <em class=\"comment\">// If somebody else (the ProxyFilter) starts peer manager, </em>\n<a name=\"1827\" href=\"#1827\">1827</a>         <em class=\"comment\">// our initialization may be incomplete, so store this for updater </em>\n<a name=\"1828\" href=\"#1828\">1828</a>         <strong>if</strong> (updater==<strong>null</strong>) {\n<a name=\"1829\" href=\"#1829\">1829</a>             toUpdater.add(si);\n<a name=\"1830\" href=\"#1830\">1830</a>             <strong>return</strong> <strong>null</strong>;\n<a name=\"1831\" href=\"#1831\">1831</a>         }\n<a name=\"1832\" href=\"#1832\">1832</a>         \n<a name=\"1833\" href=\"#1833\">1833</a>         String\tpeerCharacterName = si.getName();\n<a name=\"1834\" href=\"#1834\">1834</a>         <strong>final</strong> String\tpeerName = Utils.getPeerUserName(peerCharacterName);\n<a name=\"1835\" href=\"#1835\">1835</a>         \n<a name=\"1836\" href=\"#1836\">1836</a>         Peer\tresult\t= <strong>null</strong>;\n<a name=\"1837\" href=\"#1837\">1837</a>         <strong>if</strong> (!peers.containsKey(peerName)) {\n<a name=\"1838\" href=\"#1838\">1838</a>             <em class=\"comment\">// figure out the new peers count and cardinal</em>\n<a name=\"1839\" href=\"#1839\">1839</a>             <em class=\"comment\">// so any peer created should be in the map</em>\n<a name=\"1840\" href=\"#1840\">1840</a> \t        <strong>int</strong>\t\t\tpeersCount = peers.size() + 1;\n<a name=\"1841\" href=\"#1841\">1841</a> \t        <em class=\"comment\">// used to count the final cardinal, which is requred by invokeLater</em>\n<a name=\"1842\" href=\"#1842\">1842</a> \t        <strong>int</strong>\t\t\t\t\tcardinalCalc = 1;\n<a name=\"1843\" href=\"#1843\">1843</a> \t        <strong>synchronized</strong>(peers) {\n<a name=\"1844\" href=\"#1844\">1844</a> \t\t        <strong>for</strong> (Iterator i = peers.keySet().iterator(); i.hasNext(); cardinalCalc++) {\n<a name=\"1845\" href=\"#1845\">1845</a> \t\t            String\tothersName = (String)i.next();\n<a name=\"1846\" href=\"#1846\">1846</a> \t\t            <em class=\"comment\">// the new peer will be alphabetically inserted</em>\n<a name=\"1847\" href=\"#1847\">1847</a> \t\t            <strong>if</strong> (othersName.compareToIgnoreCase(peerName)>0) \n<a name=\"1848\" href=\"#1848\">1848</a> \t\t                <strong>break</strong>;\n<a name=\"1849\" href=\"#1849\">1849</a> \t\t        }\n<a name=\"1850\" href=\"#1850\">1850</a> \t        }\n<a name=\"1851\" href=\"#1851\">1851</a> \t        <strong>final</strong>\t<strong>int</strong>\t\t\tcardinal = cardinalCalc;\n<a name=\"1852\" href=\"#1852\">1852</a> \t        <strong>final</strong> <strong>boolean</strong>\t\tisLocal = peerName.equals(userName);\n<a name=\"1853\" href=\"#1853\">1853</a> \t        <em class=\"comment\">// Get the color</em>\n<a name=\"1854\" href=\"#1854\">1854</a> \t        Color c = acquireColor(si, isLocal, peerName, localColor);\n<a name=\"1855\" href=\"#1855\">1855</a> \t        <em class=\"comment\">// construct a peer (with no svg content) so we can return</em>\n<a name=\"1856\" href=\"#1856\">1856</a> \t\t    <strong>final</strong> SlicePeer p = <strong>new</strong> SlicePeer(peerName, Pie.<strong>this</strong>, peersCount, \n<a name=\"1857\" href=\"#1857\">1857</a> \t\t            cardinal, isLocal, c, \n<a name=\"1858\" href=\"#1858\">1858</a> \t\t\t\t\tsi.getHostAddress(), si, false);\n<a name=\"1859\" href=\"#1859\">1859</a> \t        addPeer(p);\n<a name=\"1860\" href=\"#1860\">1860</a> \n<a name=\"1861\" href=\"#1861\">1861</a> \t        <em class=\"comment\">// The p is not put into peers map yet</em>\n<a name=\"1862\" href=\"#1862\">1862</a> \t\t    laterWork.invokeLater(<strong>new</strong> Runnable() {\n<a name=\"1863\" href=\"#1863\">1863</a> \t    \t\t<strong>public</strong> <strong>void</strong> run() {\n<a name=\"1864\" href=\"#1864\">1864</a> \t    \t\t    <strong>synchronized</strong>(Pie.<strong>this</strong>) {\t<em class=\"comment\">// serialize access to the pie</em>\n<a name=\"1865\" href=\"#1865\">1865</a> \t    \t\t        <em class=\"comment\">// adjust the old ones first so the display is smooth</em>\n<a name=\"1866\" href=\"#1866\">1866</a> \t    \t\t        <em class=\"comment\">// cannot use peers count above, since time flies</em>\n<a name=\"1867\" href=\"#1867\">1867</a> \t    \t\t        <strong>int</strong>\t\t\tpeersCount = peers.size();\n<a name=\"1868\" href=\"#1868\">1868</a> \t\t    \t        <strong>int</strong>\t\t\tindex = 1;\n<a name=\"1869\" href=\"#1869\">1869</a> \t\t    \t        <strong>synchronized</strong>(peers) {\n<a name=\"1870\" href=\"#1870\">1870</a> \t\t\t    \t        <strong>for</strong> (Iterator i = peers.keySet().iterator(); i.hasNext(); \n<a name=\"1871\" href=\"#1871\">1871</a> \t\t\t    \t        \t\t\t\tindex++) {\n<a name=\"1872\" href=\"#1872\">1872</a> \t\t\t    \t            String\tpeerName = (String)i.next();\n<a name=\"1873\" href=\"#1873\">1873</a> \t\t\t    \t            SlicePeer\tsp = (SlicePeer)peers.get(peerName);\n<a name=\"1874\" href=\"#1874\">1874</a> \t\t\t    \t            <em class=\"comment\">// Set position for everybody. If a slice has not been</em>\n<a name=\"1875\" href=\"#1875\">1875</a> \t\t\t    \t            <em class=\"comment\">//\tcreated in SVG, then the position will be remembered</em>\n<a name=\"1876\" href=\"#1876\">1876</a> \t\t    \t                sp.setPosition(peersCount, index);\n<a name=\"1877\" href=\"#1877\">1877</a> \t\t\t    \t        }\n<a name=\"1878\" href=\"#1878\">1878</a> \t\t    \t        }\n<a name=\"1879\" href=\"#1879\">1879</a> \t\t    \t        <em class=\"comment\">// now create the real svg content, using the final position</em>\n<a name=\"1880\" href=\"#1880\">1880</a> \t\t    \t        p.create();\n<a name=\"1881\" href=\"#1881\">1881</a> \n<a name=\"1882\" href=\"#1882\">1882</a> \t\t    \t        <strong>if</strong> (waitForAdmission) {\n<a name=\"1883\" href=\"#1883\">1883</a> \t\t\t    \t        <em class=\"comment\">// wait 10 seconds for being admitted by the other</em>\n<a name=\"1884\" href=\"#1884\">1884</a> \t\t\t    \t        Boolean\tadmitted = (Boolean)admittedBy.get(peerName);\n<a name=\"1885\" href=\"#1885\">1885</a> \t\t\t    \t        <strong>int</strong>\t\tretry = 0;\n<a name=\"1886\" href=\"#1886\">1886</a> \t\t\t    \t        <strong>int</strong>\t\tmaxRetry = 10;\n<a name=\"1887\" href=\"#1887\">1887</a> \t\t\t    \t        <strong>while</strong> ((admitted == <strong>null</strong> || admitted.booleanValue() == false) &amp;&amp;\n<a name=\"1888\" href=\"#1888\">1888</a> \t\t\t    \t                retry &lt; maxRetry) {\n<a name=\"1889\" href=\"#1889\">1889</a> \t\t\t    \t            <strong>try</strong> {\n<a name=\"1890\" href=\"#1890\">1890</a> \t\t\t    \t                Thread.sleep(1000);\n<a name=\"1891\" href=\"#1891\">1891</a> \t\t\t    \t            }\n<a name=\"1892\" href=\"#1892\">1892</a> \t\t\t    \t            <strong>catch</strong> (InterruptedException ie) {\n<a name=\"1893\" href=\"#1893\">1893</a> \t\t\t    \t            }\n<a name=\"1894\" href=\"#1894\">1894</a> \t\t\t    \t            retry++;\n<a name=\"1895\" href=\"#1895\">1895</a> \t\t\t\t    \t        admitted = (Boolean)admittedBy.get(peerName); \n<a name=\"1896\" href=\"#1896\">1896</a> \t\t\t    \t        }\n<a name=\"1897\" href=\"#1897\">1897</a> \t\t\t    \t        <strong>if</strong> (retry >= maxRetry) {\n<a name=\"1898\" href=\"#1898\">1898</a> \t\t\t    \t            <em class=\"comment\">// if not admitted, we will not try to get the files.</em>\n<a name=\"1899\" href=\"#1899\">1899</a> \t\t\t    \t            <em class=\"comment\">// Even if we do, we will not get anything back</em>\n<a name=\"1900\" href=\"#1900\">1900</a> \t\t\t    \t            <em class=\"comment\">// TODO: security: feature: to notify the status of admission</em>\n<a name=\"1901\" href=\"#1901\">1901</a> \t\t\t    \t            log.debug(peerName + <span class=\"string\">\" has not admitted \"</span> + userName);\n<a name=\"1902\" href=\"#1902\">1902</a> \t\t\t    \t            <strong>return</strong>;\n<a name=\"1903\" href=\"#1903\">1903</a> \t\t\t    \t        }\n<a name=\"1904\" href=\"#1904\">1904</a> \t\t    \t        }\n<a name=\"1905\" href=\"#1905\">1905</a> \t\t    \t        \n<a name=\"1906\" href=\"#1906\">1906</a> \t\t    \t        <em class=\"comment\">// If just as a passive viewer, then do not connect to the proxy</em>\n<a name=\"1907\" href=\"#1907\">1907</a> \t\t    \t        <strong>if</strong> (!connectingToProxy)\n<a name=\"1908\" href=\"#1908\">1908</a> \t\t    \t            <strong>return</strong>;\n<a name=\"1909\" href=\"#1909\">1909</a> \t\t    \t        \n<a name=\"1910\" href=\"#1910\">1910</a> \t\t    \t        <em class=\"comment\">// Get files for this peer</em>\n<a name=\"1911\" href=\"#1911\">1911</a> \t\t    \t        <em class=\"comment\">// Adpated from refresh()</em>\n<a name=\"1912\" href=\"#1912\">1912</a> \t\t    \t        <em class=\"comment\">// refresh probably can just call createAPeer multiple </em>\n<a name=\"1913\" href=\"#1913\">1913</a> \t\t    \t        <em class=\"comment\">//\ttimes, but this list() is expensive, and this method </em>\n<a name=\"1914\" href=\"#1914\">1914</a> \t\t    \t        <em class=\"comment\">//\tis rather dynamic because of SVG</em>\n<a name=\"1915\" href=\"#1915\">1915</a> \t\t    \t        Set\tfilesOfPeer = <strong>new</strong> HashSet();\n<a name=\"1916\" href=\"#1916\">1916</a> \t\t    \t        <strong>try</strong> {\n<a name=\"1917\" href=\"#1917\">1917</a> \t\t    \t\t        <em class=\"comment\">// new home for connectoToProxy</em>\n<a name=\"1918\" href=\"#1918\">1918</a> \t\t    \t\t        <strong>if</strong> (!connectedToProxy)\n<a name=\"1919\" href=\"#1919\">1919</a> \t\t    \t\t        \tconnectToProxy();\n<a name=\"1920\" href=\"#1920\">1920</a> \n<a name=\"1921\" href=\"#1921\">1921</a> \t\t    \t            <em class=\"comment\">// Get all files</em>\n<a name=\"1922\" href=\"#1922\">1922</a> \t\t    \t\t        impromptuServer.setPath(Utils.fileNameToURL(\n<a name=\"1923\" href=\"#1923\">1923</a> \t\t    \t\t                edu.uci.isr.impromptu.common.Configuration.ROOT_NAME));\n<a name=\"1924\" href=\"#1924\">1924</a> \t\t    \t\t        String[]\tfiles = impromptuServer.list();\n<a name=\"1925\" href=\"#1925\">1925</a> \t\t    \t\t        <strong>for</strong> (<strong>int</strong> i =0; files != <strong>null</strong> &amp;&amp; i &lt; files.length; i++) {\n<a name=\"1926\" href=\"#1926\">1926</a> \t\t    \t\t            String path = Utils.fileNameToURL(files[i]);\n<a name=\"1927\" href=\"#1927\">1927</a> \t\t    \t\t            Enumeration e = impromptuServer.propfindMethod(path, ourProperties);\n<a name=\"1928\" href=\"#1928\">1928</a> \t\t    \t\t            <strong>if</strong> (e.hasMoreElements()) {\n<a name=\"1929\" href=\"#1929\">1929</a> \t\t    \t\t\t            String owner = (String)e.nextElement();\n<a name=\"1930\" href=\"#1930\">1930</a> \t\t    \t\t\t            <strong>if</strong> (owner.equals(peerName)) {\n<a name=\"1931\" href=\"#1931\">1931</a> \t\t\t    \t\t\t            String radius = (String)e.nextElement();\n<a name=\"1932\" href=\"#1932\">1932</a> \t\t\t    \t\t\t            <em class=\"comment\">// if no radius, use a secure radius</em>\n<a name=\"1933\" href=\"#1933\">1933</a> \t\t\t    \t\t\t            <strong>if</strong> (radius.equals(<span class=\"string\">\"\"</span>))\n<a name=\"1934\" href=\"#1934\">1934</a> \t\t\t    \t\t\t                radius = String.valueOf(\n<a name=\"1935\" href=\"#1935\">1935</a> \t\t\t    \t\t\t                   PieUtils.getDefaultSecureRadius());\n<a name=\"1936\" href=\"#1936\">1936</a> \t\t\t    \t\t\t            String angle = (String)e.nextElement();\n<a name=\"1937\" href=\"#1937\">1937</a> \t\t\t    \t\t\t            <em class=\"comment\">// if no angle, use a random angle</em>\n<a name=\"1938\" href=\"#1938\">1938</a> \t\t\t    \t\t\t            <strong>if</strong> (angle.equals(<span class=\"string\">\"\"</span>))\n<a name=\"1939\" href=\"#1939\">1939</a> \t\t\t    \t\t\t                angle = String.valueOf(Math.random());\n<a name=\"1940\" href=\"#1940\">1940</a> \t\t    \t\t\n<a name=\"1941\" href=\"#1941\">1941</a> \t\t\t    \t\t\t            filesOfPeer.add(<strong>new</strong> DotInRepository\n<a name=\"1942\" href=\"#1942\">1942</a> \t\t\t    \t\t\t                    (owner, files[i], radius, angle));\n<a name=\"1943\" href=\"#1943\">1943</a> \t\t    \t\t\t            }\n<a name=\"1944\" href=\"#1944\">1944</a> \t\t    \t\t            }\n<a name=\"1945\" href=\"#1945\">1945</a> \t\t    \t\t        }\n<a name=\"1946\" href=\"#1946\">1946</a> \t\t    \t        }\n<a name=\"1947\" href=\"#1947\">1947</a> \t\t    \t        <strong>catch</strong> (IOException ioe) {\n<a name=\"1948\" href=\"#1948\">1948</a> \t\t    \t            Utils.handleException(ioe);\n<a name=\"1949\" href=\"#1949\">1949</a> \t\t    \t        }\n<a name=\"1950\" href=\"#1950\">1950</a> \t\t\t            <em class=\"comment\">// add new files</em>\n<a name=\"1951\" href=\"#1951\">1951</a> \t\t\t            <strong>for</strong> (Iterator j = filesOfPeer.iterator(); j.hasNext(); ) {\n<a name=\"1952\" href=\"#1952\">1952</a> \t\t\t                DotInRepository d = (DotInRepository)j.next();\n<a name=\"1953\" href=\"#1953\">1953</a> \t\t\t                <strong>if</strong> (d.getOwner().equals(peerName)) {\n<a name=\"1954\" href=\"#1954\">1954</a> \t\t\t\t                p.addFile(d.getName(), Double.parseDouble(d.getRadius()), Double.parseDouble(d.getAngle()));\n<a name=\"1955\" href=\"#1955\">1955</a> \t\t\t                }\n<a name=\"1956\" href=\"#1956\">1956</a> \t\t\t            }\n<a name=\"1957\" href=\"#1957\">1957</a> \t    \t\t    }\n<a name=\"1958\" href=\"#1958\">1958</a> \t    \t\t}\n<a name=\"1959\" href=\"#1959\">1959</a> \t        });\n<a name=\"1960\" href=\"#1960\">1960</a> \t        result = p;\n<a name=\"1961\" href=\"#1961\">1961</a>         }\n<a name=\"1962\" href=\"#1962\">1962</a>         <strong>else</strong> {\n<a name=\"1963\" href=\"#1963\">1963</a>             <em class=\"comment\">// Should not get here</em>\n<a name=\"1964\" href=\"#1964\">1964</a>         }\n<a name=\"1965\" href=\"#1965\">1965</a>         <strong>return</strong> \t\tresult;\n<a name=\"1966\" href=\"#1966\">1966</a>     }\n<a name=\"1967\" href=\"#1967\">1967</a> \n<a name=\"1968\" href=\"#1968\">1968</a>     <em class=\"comment\">// accquire a color from different sources</em>\n<a name=\"1969\" href=\"#1969\">1969</a>     <strong>private</strong> <strong>static</strong> Color acquireColor(ServiceInfo si, <strong>boolean</strong> isLocal, String peerName, String localColor) {\n<a name=\"1970\" href=\"#1970\">1970</a>         Color\tc = PieUtils.getColorFromServiceInfo(si);\n<a name=\"1971\" href=\"#1971\">1971</a>         <strong>if</strong> (c == <strong>null</strong>) {\n<a name=\"1972\" href=\"#1972\">1972</a>             <em class=\"comment\">// Nothing from JmDNS</em>\n<a name=\"1973\" href=\"#1973\">1973</a> \t        c = PieUtils.getColorForName(peerName);\n<a name=\"1974\" href=\"#1974\">1974</a> \t        <strong>if</strong> (isLocal &amp;&amp; !Configuration.PIE_COLOR_DEFAULT.equals(localColor)) {\n<a name=\"1975\" href=\"#1975\">1975</a> \t            Color lc = PieUtils.getColorFromString(localColor);\n<a name=\"1976\" href=\"#1976\">1976</a> \t            <strong>if</strong> (lc!=<strong>null</strong>)\n<a name=\"1977\" href=\"#1977\">1977</a> \t                c = lc;\n<a name=\"1978\" href=\"#1978\">1978</a> \t        }\n<a name=\"1979\" href=\"#1979\">1979</a>         }\n<a name=\"1980\" href=\"#1980\">1980</a>         <strong>return</strong> c;\n<a name=\"1981\" href=\"#1981\">1981</a>     }\n<a name=\"1982\" href=\"#1982\">1982</a>     \n<a name=\"1983\" href=\"#1983\">1983</a>     <em>/**<em>*</em></em>\n<a name=\"1984\" href=\"#1984\">1984</a> <em>     * Perform further initialization after the peer is created and added to </em>\n<a name=\"1985\" href=\"#1985\">1985</a> <em>     * the peer manager</em>\n<a name=\"1986\" href=\"#1986\">1986</a> <em>     * </em>\n<a name=\"1987\" href=\"#1987\">1987</a> <em>     * @param si the service info of the newly appeared peer</em>\n<a name=\"1988\" href=\"#1988\">1988</a> <em>     */</em>\n<a name=\"1989\" href=\"#1989\">1989</a>     <strong>public</strong> <strong>void</strong>\t\t\t\tafterCreateAPeer(ServiceInfo si){\n<a name=\"1990\" href=\"#1990\">1990</a>         <strong>if</strong>(si!=<strong>null</strong>);\n<a name=\"1991\" href=\"#1991\">1991</a>     }\n<a name=\"1992\" href=\"#1992\">1992</a>     \n<a name=\"1993\" href=\"#1993\">1993</a>     <em>/**<em>*</em></em>\n<a name=\"1994\" href=\"#1994\">1994</a> <em>     * Destroy a peer when an old peer leaves</em>\n<a name=\"1995\" href=\"#1995\">1995</a> <em>     * </em>\n<a name=\"1996\" href=\"#1996\">1996</a> <em>     * @param peerName the name of the left peer</em>\n<a name=\"1997\" href=\"#1997\">1997</a> <em>     * @return\tthe old peer </em>\n<a name=\"1998\" href=\"#1998\">1998</a> <em>     */</em>\n<a name=\"1999\" href=\"#1999\">1999</a>     <strong>public</strong> <strong>synchronized</strong> <a href=\"../../../../../edu/uci/isr/impromptu/common/Peer.html\">Peer</a> destroyAPeer(<strong>final</strong> String peerName) {\n<a name=\"2000\" href=\"#2000\">2000</a>         <em class=\"comment\">// ISSUE: security: naming: now if somebody spoofs us by using the same name, </em>\n<a name=\"2001\" href=\"#2001\">2001</a>         <em class=\"comment\">//\tthen we are in trouble</em>\n<a name=\"2002\" href=\"#2002\">2002</a>         <a href=\"../../../../../edu/uci/isr/impromptu/pie/SlicePeer.html\">SlicePeer</a> existingPeer = (SlicePeer)peers.get(peerName);\n<a name=\"2003\" href=\"#2003\">2003</a>         laterWork.invokeLater(<strong>new</strong> Runnable() {\n<a name=\"2004\" href=\"#2004\">2004</a>     \t\t<strong>public</strong> <strong>void</strong> run() {\n<a name=\"2005\" href=\"#2005\">2005</a>     \t\t    <strong>synchronized</strong>(Pie.<strong>this</strong>) {\t<em class=\"comment\">// serialize access to the pie</em>\n<a name=\"2006\" href=\"#2006\">2006</a>     \t\t        removePeer(peerName);\n<a name=\"2007\" href=\"#2007\">2007</a>     \t\t        <strong>if</strong> (!peerName.equals(userName)) {\n<a name=\"2008\" href=\"#2008\">2008</a>     \t\t            reimportPersistent(peerName);\n<a name=\"2009\" href=\"#2009\">2009</a>         \t\t\t}\n<a name=\"2010\" href=\"#2010\">2010</a>     \t\t    }\n<a name=\"2011\" href=\"#2011\">2011</a>     \t\t}\n<a name=\"2012\" href=\"#2012\">2012</a>         });\n<a name=\"2013\" href=\"#2013\">2013</a>         <strong>return</strong> existingPeer;\n<a name=\"2014\" href=\"#2014\">2014</a>     }\n<a name=\"2015\" href=\"#2015\">2015</a>     \n<a name=\"2016\" href=\"#2016\">2016</a>     <em>/**<em>*</em></em>\n<a name=\"2017\" href=\"#2017\">2017</a> <em>     * Add a new peer</em>\n<a name=\"2018\" href=\"#2018\">2018</a> <em>     * Let the pie control the addition, and not to use the constructor of slice,</em>\n<a name=\"2019\" href=\"#2019\">2019</a> <em>     * because the pie knows the context and concurrency</em>\n<a name=\"2020\" href=\"#2020\">2020</a> <em>     * @param newPeer\tthe new peer</em>\n<a name=\"2021\" href=\"#2021\">2021</a> <em>     */</em>\n<a name=\"2022\" href=\"#2022\">2022</a>     <strong>public</strong> <strong>void</strong> addPeer(<a href=\"../../../../../edu/uci/isr/impromptu/pie/SlicePeer.html\">SlicePeer</a> newPeer) {\n<a name=\"2023\" href=\"#2023\">2023</a>         String\t\tname = newPeer.getName();\n<a name=\"2024\" href=\"#2024\">2024</a>         <strong>if</strong> (!peers.containsKey(name)) {\n<a name=\"2025\" href=\"#2025\">2025</a>             peers.put(name, newPeer);\n<a name=\"2026\" href=\"#2026\">2026</a>             <strong>if</strong> (newPeer.isLocal()) {\n<a name=\"2027\" href=\"#2027\">2027</a>                 localPeer = newPeer;\n<a name=\"2028\" href=\"#2028\">2028</a>                 admittedBy.put(name, <strong>new</strong> Boolean(<strong>true</strong>));\n<a name=\"2029\" href=\"#2029\">2029</a>             }\n<a name=\"2030\" href=\"#2030\">2030</a>         }\n<a name=\"2031\" href=\"#2031\">2031</a>     }\n<a name=\"2032\" href=\"#2032\">2032</a>     \n<a name=\"2033\" href=\"#2033\">2033</a>     <em>/**<em>*</em></em>\n<a name=\"2034\" href=\"#2034\">2034</a> <em>     * Remove an existing  peer </em>\n<a name=\"2035\" href=\"#2035\">2035</a> <em>     * @param name\tthe name of the existing peer</em>\n<a name=\"2036\" href=\"#2036\">2036</a> <em>     */</em>\n<a name=\"2037\" href=\"#2037\">2037</a>     <strong>public</strong> <strong>void</strong> removePeer(String name) {\n<a name=\"2038\" href=\"#2038\">2038</a>         <strong>if</strong> (peers.containsKey(name)) {\n<a name=\"2039\" href=\"#2039\">2039</a>             <a href=\"../../../../../edu/uci/isr/impromptu/pie/SlicePeer.html\">SlicePeer</a> existingPeer = (SlicePeer)peers.get(name);\n<a name=\"2040\" href=\"#2040\">2040</a>             existingPeer.clear();\n<a name=\"2041\" href=\"#2041\">2041</a>             peers.remove(name);\n<a name=\"2042\" href=\"#2042\">2042</a>             \n<a name=\"2043\" href=\"#2043\">2043</a>             <em class=\"comment\">// reset peers' position</em>\n<a name=\"2044\" href=\"#2044\">2044</a>             <strong>int</strong> \t\tpeersCount = peers.size();\n<a name=\"2045\" href=\"#2045\">2045</a> \t        <strong>int</strong>\t\t\tindex = 1;\n<a name=\"2046\" href=\"#2046\">2046</a> \t        <strong>synchronized</strong>(peers) {\n<a name=\"2047\" href=\"#2047\">2047</a> \t\t        <strong>for</strong> (Iterator i = peers.keySet().iterator(); i.hasNext();index++) {\n<a name=\"2048\" href=\"#2048\">2048</a> \t\t            String\tothersName = (String)i.next();\n<a name=\"2049\" href=\"#2049\">2049</a> \t                <em class=\"comment\">// adjust other peers</em>\n<a name=\"2050\" href=\"#2050\">2050</a> \t\t            SlicePeer\tsp = (SlicePeer)peers.get(othersName);\n<a name=\"2051\" href=\"#2051\">2051</a> \t                sp.setPosition(peersCount, index);\n<a name=\"2052\" href=\"#2052\">2052</a> \t\t        }\n<a name=\"2053\" href=\"#2053\">2053</a> \t        }\n<a name=\"2054\" href=\"#2054\">2054</a>         }\n<a name=\"2055\" href=\"#2055\">2055</a>     }\n<a name=\"2056\" href=\"#2056\">2056</a>     \n<a name=\"2057\" href=\"#2057\">2057</a>     <em>/**<em>*</em></em>\n<a name=\"2058\" href=\"#2058\">2058</a> <em>     * Get a Dot based on the name of a file</em>\n<a name=\"2059\" href=\"#2059\">2059</a> <em>     * If Dot is a DOM element, then it can use DOM cast to get the Dot</em>\n<a name=\"2060\" href=\"#2060\">2060</a> <em>     *</em>\n<a name=\"2061\" href=\"#2061\">2061</a> <em>     * @param fileName the name of the file</em>\n<a name=\"2062\" href=\"#2062\">2062</a> <em>     * @return a Dot that corresponds to the file name. null if there is none</em>\n<a name=\"2063\" href=\"#2063\">2063</a> <em>     */</em>\n<a name=\"2064\" href=\"#2064\">2064</a>     <strong>public</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pie/Dot.html\">Dot</a> getFile(String fileName) {\n<a name=\"2065\" href=\"#2065\">2065</a>         <strong>synchronized</strong>(peers) {\n<a name=\"2066\" href=\"#2066\">2066</a> \t        Iterator i = peers.values().iterator();\n<a name=\"2067\" href=\"#2067\">2067</a> \t        <strong>while</strong> (i.hasNext()) {\n<a name=\"2068\" href=\"#2068\">2068</a> \t            SlicePeer\tp = (SlicePeer)i.next();\n<a name=\"2069\" href=\"#2069\">2069</a> \t            Dot\t\td = p.getFile(fileName); \n<a name=\"2070\" href=\"#2070\">2070</a> \t            <strong>if</strong> (d != <strong>null</strong>)\n<a name=\"2071\" href=\"#2071\">2071</a> \t                <strong>return</strong> d;\n<a name=\"2072\" href=\"#2072\">2072</a> \t        }\n<a name=\"2073\" href=\"#2073\">2073</a>         }\n<a name=\"2074\" href=\"#2074\">2074</a>         <strong>return</strong> <strong>null</strong>;\n<a name=\"2075\" href=\"#2075\">2075</a>     }\n<a name=\"2076\" href=\"#2076\">2076</a> \n<a name=\"2077\" href=\"#2077\">2077</a>     <em>/**<em>*</em></em>\n<a name=\"2078\" href=\"#2078\">2078</a> <em>     * Import a file</em>\n<a name=\"2079\" href=\"#2079\">2079</a> <em>     * @param file the file to be imported\t</em>\n<a name=\"2080\" href=\"#2080\">2080</a> <em>     * @return true if the file is imported successfully, false if there already</em>\n<a name=\"2081\" href=\"#2081\">2081</a> <em>     * is a file with the same name.</em>\n<a name=\"2082\" href=\"#2082\">2082</a> <em>     */</em>\n<a name=\"2083\" href=\"#2083\">2083</a>     <strong>private</strong> <strong>boolean</strong> doImportFile(File file) {\n<a name=\"2084\" href=\"#2084\">2084</a>         <strong>boolean</strong>\tresult = <strong>true</strong>;\n<a name=\"2085\" href=\"#2085\">2085</a>         <strong>if</strong> (getFile(file.getName()) == <strong>null</strong>) {\n<a name=\"2086\" href=\"#2086\">2086</a>             <em class=\"comment\">// Copy the file, use OS copy command</em>\n<a name=\"2087\" href=\"#2087\">2087</a>             <strong>if</strong> (Platform.importFile(file) != 0) {\n<a name=\"2088\" href=\"#2088\">2088</a>                 result = false;\n<a name=\"2089\" href=\"#2089\">2089</a>                 showMessageDialog(<span class=\"string\">\"Cannot share \"</span> + file.getName() + <span class=\"string\">\" .\\n\\n\"</span> +\n<a name=\"2090\" href=\"#2090\">2090</a>                         <span class=\"string\">\"Try rename your file and share it again.\"</span>, \n<a name=\"2091\" href=\"#2091\">2091</a>                         <span class=\"string\">\"Share file failure\"</span>, JOptionPane.ERROR_MESSAGE);\n<a name=\"2092\" href=\"#2092\">2092</a>             }\n<a name=\"2093\" href=\"#2093\">2093</a>         }\n<a name=\"2094\" href=\"#2094\">2094</a>         <strong>else</strong> {\n<a name=\"2095\" href=\"#2095\">2095</a>             <em class=\"comment\">// duplicate file</em>\n<a name=\"2096\" href=\"#2096\">2096</a>             result = false;\n<a name=\"2097\" href=\"#2097\">2097</a>             showMessageDialog(file.getName() + <span class=\"string\">\" already exists.\\n\\n\"</span> +\n<a name=\"2098\" href=\"#2098\">2098</a>                     <span class=\"string\">\"You can rename your file and share it again.\"</span>, \n<a name=\"2099\" href=\"#2099\">2099</a>                     <span class=\"string\">\"Duplicate file name\"</span>, JOptionPane.ERROR_MESSAGE);\n<a name=\"2100\" href=\"#2100\">2100</a>         }\n<a name=\"2101\" href=\"#2101\">2101</a>         <strong>return</strong> result;\n<a name=\"2102\" href=\"#2102\">2102</a>     }\n<a name=\"2103\" href=\"#2103\">2103</a>     \n<a name=\"2104\" href=\"#2104\">2104</a>     <em>/**<em>*</em></em>\n<a name=\"2105\" href=\"#2105\">2105</a> <em>     * Import a file as a see only file and put it at a random position in the private space</em>\n<a name=\"2106\" href=\"#2106\">2106</a> <em>     * @param file the newly imported file</em>\n<a name=\"2107\" href=\"#2107\">2107</a> <em>     */</em>\n<a name=\"2108\" href=\"#2108\">2108</a>     <strong>public</strong> <strong>void</strong> importFile(<strong>final</strong> File file) {\n<a name=\"2109\" href=\"#2109\">2109</a>         <strong>if</strong> (doImportFile(file)) {\n<a name=\"2110\" href=\"#2110\">2110</a> \t\t    <strong>final</strong> Point  p = Coordinate.calculatePoint(PieUtils.getDefaultSecureRadius() * \n<a name=\"2111\" href=\"#2111\">2111</a> \t\t            Configuration.RADIUS, Math.random() * Configuration.CIRCLE);\n<a name=\"2112\" href=\"#2112\">2112</a> \t\t    <em class=\"comment\">// do a pseudo drop at a random private position</em>\n<a name=\"2113\" href=\"#2113\">2113</a> \t\t    doDrop(file, p);\n<a name=\"2114\" href=\"#2114\">2114</a>         }\n<a name=\"2115\" href=\"#2115\">2115</a>     }\n<a name=\"2116\" href=\"#2116\">2116</a>     \n<a name=\"2117\" href=\"#2117\">2117</a>     <em>/**<em>*</em></em>\n<a name=\"2118\" href=\"#2118\">2118</a> <em>     * Export modified files that the user wants to save</em>\n<a name=\"2119\" href=\"#2119\">2119</a> <em>     *</em>\n<a name=\"2120\" href=\"#2120\">2120</a> <em>     */</em>\n<a name=\"2121\" href=\"#2121\">2121</a>     <strong>public</strong> <strong>void</strong> exportFile() {\n<a name=\"2122\" href=\"#2122\">2122</a>         <strong>if</strong> (localPeer != <strong>null</strong>) {\n<a name=\"2123\" href=\"#2123\">2123</a> \t        List\tmodifiedFiles = localPeer.getChangedFiles();\n<a name=\"2124\" href=\"#2124\">2124</a> \t        <strong>for</strong> (Iterator i = modifiedFiles.iterator(); i.hasNext(); ) {\n<a name=\"2125\" href=\"#2125\">2125</a> \t            Dot\t\td = (Dot)i.next();\n<a name=\"2126\" href=\"#2126\">2126</a> \t            <strong>if</strong> (JOptionPane.showConfirmDialog(frame, d.getFileName() + <span class=\"string\">\" is modified. \"</span> + \n<a name=\"2127\" href=\"#2127\">2127</a> \t                    <span class=\"string\">\"Do you want to save it?\"</span>, <span class=\"string\">\"Save Changed Files\"</span>, JOptionPane.YES_NO_OPTION)\n<a name=\"2128\" href=\"#2128\">2128</a> \t                    == JOptionPane.YES_OPTION) {\n<a name=\"2129\" href=\"#2129\">2129</a> \t                d.saveFile();\n<a name=\"2130\" href=\"#2130\">2130</a> \t            }\n<a name=\"2131\" href=\"#2131\">2131</a> \t        }\n<a name=\"2132\" href=\"#2132\">2132</a>         }\n<a name=\"2133\" href=\"#2133\">2133</a>     }\n<a name=\"2134\" href=\"#2134\">2134</a> \n<a name=\"2135\" href=\"#2135\">2135</a>     <em>/**<em>*</em></em>\n<a name=\"2136\" href=\"#2136\">2136</a> <em>     * Change the dots' size</em>\n<a name=\"2137\" href=\"#2137\">2137</a> <em>     * @param shrink if true, reduce the size (by 10%). if false, enlarge the size (by 10%)</em>\n<a name=\"2138\" href=\"#2138\">2138</a> <em>     */</em>\n<a name=\"2139\" href=\"#2139\">2139</a>     <strong>public</strong> <strong>void</strong> changeDotSize(<strong>boolean</strong> shrink) {\n<a name=\"2140\" href=\"#2140\">2140</a>         <strong>synchronized</strong>(peers) {\n<a name=\"2141\" href=\"#2141\">2141</a> \t        <strong>for</strong> (Iterator i = peers.values().iterator(); i.hasNext(); ) {\n<a name=\"2142\" href=\"#2142\">2142</a> \t            SlicePeer\tp = (SlicePeer)i.next();\n<a name=\"2143\" href=\"#2143\">2143</a> \t            p.changeDotSize(shrink);\n<a name=\"2144\" href=\"#2144\">2144</a> \t        }\n<a name=\"2145\" href=\"#2145\">2145</a>         }\n<a name=\"2146\" href=\"#2146\">2146</a>         repaint();\n<a name=\"2147\" href=\"#2147\">2147</a>     }\n<a name=\"2148\" href=\"#2148\">2148</a>     \n<a name=\"2149\" href=\"#2149\">2149</a>     <em class=\"comment\">// The main funciton. </em>\n<a name=\"2150\" href=\"#2150\">2150</a>     <em class=\"comment\">// Platform independent SVG-related logic should be put above.</em>\n<a name=\"2151\" href=\"#2151\">2151</a>     <em class=\"comment\">// Platform specific (Swing vs SWT) logic should be put below.</em>\n<a name=\"2152\" href=\"#2152\">2152</a>     <em class=\"comment\">// ISSUE: SWT: maybe refactor this to InteractiveSVGCanvas</em>\n<a name=\"2153\" href=\"#2153\">2153</a>     <strong>public</strong> <strong>static</strong> <strong>void</strong> mainSWT(String args[]) {\n<a name=\"2154\" href=\"#2154\">2154</a>         <em class=\"comment\">// Set the nice Java 2D registry</em>\n<a name=\"2155\" href=\"#2155\">2155</a>         HashMap hints = <strong>new</strong> HashMap(1);\n<a name=\"2156\" href=\"#2156\">2156</a>         hints.put(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);\n<a name=\"2157\" href=\"#2157\">2157</a>         J2DRegistry.setHints(hints);\n<a name=\"2158\" href=\"#2158\">2158</a> \n<a name=\"2159\" href=\"#2159\">2159</a>         <em class=\"comment\">// create the shell</em>\n<a name=\"2160\" href=\"#2160\">2160</a>         <strong>final</strong> Shell shell = <strong>new</strong> Shell();\n<a name=\"2161\" href=\"#2161\">2161</a>         Display display = shell.getDisplay();\n<a name=\"2162\" href=\"#2162\">2162</a>         shell.setLayout(<strong>new</strong> FillLayout());\n<a name=\"2163\" href=\"#2163\">2163</a>         shell.setText(Configuration.TITLE);\n<a name=\"2164\" href=\"#2164\">2164</a> \n<a name=\"2165\" href=\"#2165\">2165</a> \t\t<strong>boolean</strong> integratePie = (args.length == 0);\n<a name=\"2166\" href=\"#2166\">2166</a>         <em class=\"comment\">// create the pie based on the template</em>\n<a name=\"2167\" href=\"#2167\">2167</a>         <strong>final</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pie/InteractiveSVGCanvas.html\">InteractiveSVGCanvas</a> canvas = <strong>new</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pie/InteractiveSVGCanvas.html\">InteractiveSVGCanvas</a>(shell, \n<a name=\"2168\" href=\"#2168\">2168</a>                 <span class=\"string\">\"file://localhost/\"</span> + System.getProperty(<span class=\"string\">\"user.dir\"</span>) + <span class=\"string\">\"/template.svg\"</span>);\n<a name=\"2169\" href=\"#2169\">2169</a>         canvas.setBackground(display.getSystemColor(SWT.COLOR_GRAY));\n<a name=\"2170\" href=\"#2170\">2170</a>         canvas.setSize((<strong>int</strong>)Configuration.getSize().getWidth(), \n<a name=\"2171\" href=\"#2171\">2171</a>                 (<strong>int</strong>)Configuration.getSize().getWidth());\n<a name=\"2172\" href=\"#2172\">2172</a>         <strong>final</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pie/Pie.html\">Pie</a> p = <strong>new</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pie/Pie.html\">Pie</a>();\n<a name=\"2173\" href=\"#2173\">2173</a>         p.setDocument(canvas.getDocument());\n<a name=\"2174\" href=\"#2174\">2174</a>         p.setName(Utils.getImpromptuName());\n<a name=\"2175\" href=\"#2175\">2175</a>         p.setLocalColor(Configuration.getPieColor());\n<a name=\"2176\" href=\"#2176\">2176</a>         p.setImpromptuProxy(Configuration.getImpromptuProxy());\n<a name=\"2177\" href=\"#2177\">2177</a>         p.setImpromptuDrive(Configuration.getDestinationDrive());\n<a name=\"2178\" href=\"#2178\">2178</a>         p.setUpdateManager(canvas.getUpdateManager());\n<a name=\"2179\" href=\"#2179\">2179</a> \t\t<em class=\"comment\">// do not connect to proxy. Just as a viewer</em>\n<a name=\"2180\" href=\"#2180\">2180</a> \t\tp.setConnectToProxy(false);\n<a name=\"2181\" href=\"#2181\">2181</a>         <em class=\"comment\">// connect pie and canvas</em>\n<a name=\"2182\" href=\"#2182\">2182</a>         p.setDocument(canvas.getDocument());\n<a name=\"2183\" href=\"#2183\">2183</a> \t\tp.setUpdateManager(canvas.getUpdateManager());\n<a name=\"2184\" href=\"#2184\">2184</a>         p.startPeerManager(integratePie);\n<a name=\"2185\" href=\"#2185\">2185</a>         p.repaint();\n<a name=\"2186\" href=\"#2186\">2186</a> \t\tthePie = p;\n<a name=\"2187\" href=\"#2187\">2187</a> \n<a name=\"2188\" href=\"#2188\">2188</a>         <em class=\"comment\">// Create menu bar </em>\n<a name=\"2189\" href=\"#2189\">2189</a>         Menu menuBar = <strong>new</strong> Menu(shell, SWT.BAR);\n<a name=\"2190\" href=\"#2190\">2190</a>         shell.setMenuBar(menuBar);\n<a name=\"2191\" href=\"#2191\">2191</a>         <em class=\"comment\">// Create File menu </em>\n<a name=\"2192\" href=\"#2192\">2192</a>         MenuItem fileItem = <strong>new</strong> MenuItem(menuBar, SWT.CASCADE); \n<a name=\"2193\" href=\"#2193\">2193</a>         fileItem.setText(<span class=\"string\">\"File\"</span>); \n<a name=\"2194\" href=\"#2194\">2194</a>         Menu fileMenu = <strong>new</strong> Menu(shell, SWT.DROP_DOWN); \n<a name=\"2195\" href=\"#2195\">2195</a>         fileItem.setMenu(fileMenu); \n<a name=\"2196\" href=\"#2196\">2196</a>         <em class=\"comment\">// Create File -> Write menu item </em>\n<a name=\"2197\" href=\"#2197\">2197</a>         MenuItem writeItem = <strong>new</strong> MenuItem(fileMenu, SWT.NULL); \n<a name=\"2198\" href=\"#2198\">2198</a>         writeItem.setText(<span class=\"string\">\"Write\"</span>); \n<a name=\"2199\" href=\"#2199\">2199</a>         <em class=\"comment\">// handle writing the pie svg</em>\n<a name=\"2200\" href=\"#2200\">2200</a>         writeItem.addSelectionListener(<strong>new</strong> SelectionAdapter() {\n<a name=\"2201\" href=\"#2201\">2201</a> \t        <strong>public</strong> <strong>void</strong> widgetSelected(SelectionEvent event) {\n<a name=\"2202\" href=\"#2202\">2202</a> \t\t        <strong>if</strong>(event!=<strong>null</strong>);\n<a name=\"2203\" href=\"#2203\">2203</a> \t            <strong>try</strong> {\n<a name=\"2204\" href=\"#2204\">2204</a> \t                PieUtils.writeXMLDocumentTo(canvas.getDocument(), \n<a name=\"2205\" href=\"#2205\">2205</a> \t                        <strong>new</strong> FileOutputStream(<span class=\"string\">\"pie.xml\"</span>));\n<a name=\"2206\" href=\"#2206\">2206</a>                 } \n<a name=\"2207\" href=\"#2207\">2207</a> \t            <strong>catch</strong> (FileNotFoundException e) {\n<a name=\"2208\" href=\"#2208\">2208</a>                     e.printStackTrace();\n<a name=\"2209\" href=\"#2209\">2209</a>                 }\n<a name=\"2210\" href=\"#2210\">2210</a> \t        }\n<a name=\"2211\" href=\"#2211\">2211</a>         });\n<a name=\"2212\" href=\"#2212\">2212</a>         <em class=\"comment\">// Create File -> Exit menu item and add selection listener </em>\n<a name=\"2213\" href=\"#2213\">2213</a>         MenuItem exitItem = <strong>new</strong> MenuItem(fileMenu, SWT.NULL); \n<a name=\"2214\" href=\"#2214\">2214</a>         exitItem.setText(<span class=\"string\">\"Exit\"</span>); \n<a name=\"2215\" href=\"#2215\">2215</a>         exitItem.addSelectionListener(<strong>new</strong> SelectionAdapter() {\n<a name=\"2216\" href=\"#2216\">2216</a> \t        <strong>public</strong> <strong>void</strong> widgetSelected(SelectionEvent event) {\n<a name=\"2217\" href=\"#2217\">2217</a> \t\t        <strong>if</strong>(event!=<strong>null</strong>);\n<a name=\"2218\" href=\"#2218\">2218</a>                 shell.close();\n<a name=\"2219\" href=\"#2219\">2219</a> \t        }\n<a name=\"2220\" href=\"#2220\">2220</a>         });\n<a name=\"2221\" href=\"#2221\">2221</a>         <em class=\"comment\">// Create View menu </em>\n<a name=\"2222\" href=\"#2222\">2222</a>         MenuItem viewItem = <strong>new</strong> MenuItem(menuBar, SWT.CASCADE); \n<a name=\"2223\" href=\"#2223\">2223</a>         viewItem.setText(<span class=\"string\">\"View\"</span>); \n<a name=\"2224\" href=\"#2224\">2224</a>         Menu viewMenu = <strong>new</strong> Menu(shell, SWT.DROP_DOWN); \n<a name=\"2225\" href=\"#2225\">2225</a>         viewItem.setMenu(viewMenu); \n<a name=\"2226\" href=\"#2226\">2226</a>         <em class=\"comment\">// Create File -> Refresh menu item </em>\n<a name=\"2227\" href=\"#2227\">2227</a>         MenuItem refreshItem = <strong>new</strong> MenuItem(viewMenu, SWT.NULL); \n<a name=\"2228\" href=\"#2228\">2228</a>         refreshItem.setText(<span class=\"string\">\"Refresh\"</span>); \n<a name=\"2229\" href=\"#2229\">2229</a>         <em class=\"comment\">// handle refresh</em>\n<a name=\"2230\" href=\"#2230\">2230</a>         refreshItem.addSelectionListener(<strong>new</strong> SelectionAdapter() {\n<a name=\"2231\" href=\"#2231\">2231</a> \t        <strong>public</strong> <strong>void</strong> widgetSelected(SelectionEvent event) {\n<a name=\"2232\" href=\"#2232\">2232</a> \t\t        <strong>if</strong>(event!=<strong>null</strong>);\n<a name=\"2233\" href=\"#2233\">2233</a> \t\t        p.refresh();\n<a name=\"2234\" href=\"#2234\">2234</a> \t        }\n<a name=\"2235\" href=\"#2235\">2235</a>         });\n<a name=\"2236\" href=\"#2236\">2236</a>         shell.addShellListener(<strong>new</strong> ShellAdapter() {\n<a name=\"2237\" href=\"#2237\">2237</a>             <strong>public</strong> <strong>void</strong> shellClosed(ShellEvent event) {\n<a name=\"2238\" href=\"#2238\">2238</a> \t\t        <strong>if</strong>(event!=<strong>null</strong>);\n<a name=\"2239\" href=\"#2239\">2239</a> \t\t        exitSWT(shell, canvas, p);\n<a name=\"2240\" href=\"#2240\">2240</a>             }\n<a name=\"2241\" href=\"#2241\">2241</a>         });\n<a name=\"2242\" href=\"#2242\">2242</a> \n<a name=\"2243\" href=\"#2243\">2243</a>         <em class=\"comment\">// Set the correct scale of SVG canvas</em>\n<a name=\"2244\" href=\"#2244\">2244</a>         <strong>double</strong> sx = Configuration.getSize().getWidth() / Configuration.SIZE_VIEW_WIDTH;\n<a name=\"2245\" href=\"#2245\">2245</a>         <strong>double</strong> sy = Configuration.getSize().getHeight() / Configuration.SIZE_VIEW_HEIGHT;\n<a name=\"2246\" href=\"#2246\">2246</a>         <strong>double</strong> s = sx &lt;sy ? sx : sy;\n<a name=\"2247\" href=\"#2247\">2247</a>         canvas.getPaintableManager().setScale(s);\n<a name=\"2248\" href=\"#2248\">2248</a> \n<a name=\"2249\" href=\"#2249\">2249</a>         <em class=\"comment\">// Set the shell size and resize</em>\n<a name=\"2250\" href=\"#2250\">2250</a>         <strong>final</strong> <strong>int</strong>\t\tmarginx = 5;\n<a name=\"2251\" href=\"#2251\">2251</a>         <strong>final</strong> <strong>int</strong>\t\tmarginy = 65;\n<a name=\"2252\" href=\"#2252\">2252</a>         shell.setSize(canvas.getSize().x + marginx, canvas.getSize().y + marginy);\n<a name=\"2253\" href=\"#2253\">2253</a>         shell.addControlListener(<strong>new</strong> ControlAdapter() {\n<a name=\"2254\" href=\"#2254\">2254</a>             <strong>public</strong> <strong>void</strong> controlResized(ControlEvent event) {\n<a name=\"2255\" href=\"#2255\">2255</a>                 Shell c = (Shell)event.widget;\n<a name=\"2256\" href=\"#2256\">2256</a>                 <strong>double</strong> width = c.getSize().x - marginx;\n<a name=\"2257\" href=\"#2257\">2257</a>                 <strong>double</strong> height = c.getSize().y - marginy; \n<a name=\"2258\" href=\"#2258\">2258</a>                 canvas.setSize((<strong>int</strong>)width, (<strong>int</strong>)height);\n<a name=\"2259\" href=\"#2259\">2259</a>                 <strong>double</strong> sx = width / Configuration.SIZE_VIEW_WIDTH;\n<a name=\"2260\" href=\"#2260\">2260</a>                 <strong>double</strong> sy = height / Configuration.SIZE_VIEW_HEIGHT;\n<a name=\"2261\" href=\"#2261\">2261</a>                 <strong>double</strong> s = sx &lt;sy ? sx : sy;\n<a name=\"2262\" href=\"#2262\">2262</a>                 canvas.getPaintableManager().setScale(s);\n<a name=\"2263\" href=\"#2263\">2263</a>             }\n<a name=\"2264\" href=\"#2264\">2264</a>         });\n<a name=\"2265\" href=\"#2265\">2265</a> \n<a name=\"2266\" href=\"#2266\">2266</a>         \n<a name=\"2267\" href=\"#2267\">2267</a>         <em class=\"comment\">// The standard SWT event loop</em>\n<a name=\"2268\" href=\"#2268\">2268</a>         shell.open();\n<a name=\"2269\" href=\"#2269\">2269</a>         <strong>while</strong>(!shell.isDisposed()) \n<a name=\"2270\" href=\"#2270\">2270</a>             <strong>if</strong>(!display.readAndDispatch())\n<a name=\"2271\" href=\"#2271\">2271</a>                 display.sleep();\n<a name=\"2272\" href=\"#2272\">2272</a>         display.dispose();\n<a name=\"2273\" href=\"#2273\">2273</a>     }\n<a name=\"2274\" href=\"#2274\">2274</a> \n<a name=\"2275\" href=\"#2275\">2275</a>     <em>/**<em>*</em></em>\n<a name=\"2276\" href=\"#2276\">2276</a> <em>     * Display a system specifc message dialog</em>\n<a name=\"2277\" href=\"#2277\">2277</a> <em>     * @param message\t\tthe message</em>\n<a name=\"2278\" href=\"#2278\">2278</a> <em>     * @param title\t\t\tthe title</em>\n<a name=\"2279\" href=\"#2279\">2279</a> <em>     * @param messageType\tthe type of message</em>\n<a name=\"2280\" href=\"#2280\">2280</a> <em>     */</em>\n<a name=\"2281\" href=\"#2281\">2281</a>     <strong>public</strong> <strong>void</strong> showMessageDialog(<strong>final</strong> String message, <strong>final</strong> String title, <strong>final</strong> <strong>int</strong> messageType) {\n<a name=\"2282\" href=\"#2282\">2282</a>         <strong>if</strong> (!Platform.isMac()) {\n<a name=\"2283\" href=\"#2283\">2283</a>             JOptionPane.showMessageDialog(frame, message, title, messageType);\n<a name=\"2284\" href=\"#2284\">2284</a>         }\n<a name=\"2285\" href=\"#2285\">2285</a>         <strong>else</strong> {\n<a name=\"2286\" href=\"#2286\">2286</a>             <em class=\"comment\">// Mac needs a different thread to show the dialogs.</em>\n<a name=\"2287\" href=\"#2287\">2287</a>             <strong>new</strong> Thread() {\n<a name=\"2288\" href=\"#2288\">2288</a>                 <strong>public</strong> <strong>void</strong> run() {\n<a name=\"2289\" href=\"#2289\">2289</a>                     JOptionPane.showMessageDialog(frame, message, title, messageType);\n<a name=\"2290\" href=\"#2290\">2290</a>                 }\n<a name=\"2291\" href=\"#2291\">2291</a>             }.start();\n<a name=\"2292\" href=\"#2292\">2292</a>         }\n<a name=\"2293\" href=\"#2293\">2293</a>     }\n<a name=\"2294\" href=\"#2294\">2294</a>     \n<a name=\"2295\" href=\"#2295\">2295</a>     <em>/**<em>*</em></em>\n<a name=\"2296\" href=\"#2296\">2296</a> <em>     * Display a system specifc message dialog</em>\n<a name=\"2297\" href=\"#2297\">2297</a> <em>     * @param message\t\tthe message</em>\n<a name=\"2298\" href=\"#2298\">2298</a> <em>     */</em>\n<a name=\"2299\" href=\"#2299\">2299</a>     <strong>public</strong> <strong>void</strong> showMessageDialog(String message) {\n<a name=\"2300\" href=\"#2300\">2300</a>         showMessageDialog(message, <span class=\"string\">\"Information\"</span>, JOptionPane.INFORMATION_MESSAGE);\n<a name=\"2301\" href=\"#2301\">2301</a>     }\n<a name=\"2302\" href=\"#2302\">2302</a>     \n<a name=\"2303\" href=\"#2303\">2303</a>     <em class=\"comment\">// this is to interface with the proxy filter to accommdate Yancees  </em>\n<a name=\"2304\" href=\"#2304\">2304</a>     <strong>public</strong> <strong>static</strong> Pie\tthePie = <strong>null</strong>;\n<a name=\"2305\" href=\"#2305\">2305</a>     <strong>public</strong> <strong>static</strong> <strong>void</strong> mainSwing(String args[]) {\n<a name=\"2306\" href=\"#2306\">2306</a>         <em class=\"comment\">// Get the JSVGCanvas</em>\n<a name=\"2307\" href=\"#2307\">2307</a>         <strong>final</strong> JSVGCanvas canvas = <strong>new</strong> JSVGCanvas();\n<a name=\"2308\" href=\"#2308\">2308</a> \t\tcanvas.setDocumentState(JSVGCanvas.ALWAYS_DYNAMIC);\n<a name=\"2309\" href=\"#2309\">2309</a> \t\tcanvas.setBackground(Color.LIGHT_GRAY);\n<a name=\"2310\" href=\"#2310\">2310</a>         canvas.setPreferredSize(Configuration.getSize());\n<a name=\"2311\" href=\"#2311\">2311</a>         <em class=\"comment\">// Load the template</em>\n<a name=\"2312\" href=\"#2312\">2312</a>         canvas.loadSVGDocument(<span class=\"string\">\"file://localhost/\"</span> + System.getProperty(<span class=\"string\">\"user.dir\"</span>) + <span class=\"string\">\"/template.svg\"</span>);\n<a name=\"2313\" href=\"#2313\">2313</a> \n<a name=\"2314\" href=\"#2314\">2314</a> \t\t<strong>final</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pie/Pie.html\">Pie</a> p = <strong>new</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pie/Pie.html\">Pie</a>();\n<a name=\"2315\" href=\"#2315\">2315</a> \t\t<em class=\"comment\">// get the user name </em>\n<a name=\"2316\" href=\"#2316\">2316</a>         p.setName(Utils.getImpromptuName());\n<a name=\"2317\" href=\"#2317\">2317</a>         p.setLocalColor(Configuration.getPieColor());\n<a name=\"2318\" href=\"#2318\">2318</a>         p.setImpromptuProxy(Configuration.getImpromptuProxy());\n<a name=\"2319\" href=\"#2319\">2319</a>         p.setImpromptuDrive(Configuration.getDestinationDrive());\n<a name=\"2320\" href=\"#2320\">2320</a> \t\tthePie = p;\n<a name=\"2321\" href=\"#2321\">2321</a> \t\t<strong>final</strong> <strong>boolean</strong> integratePie = (args.length == 0);\n<a name=\"2322\" href=\"#2322\">2322</a> \n<a name=\"2323\" href=\"#2323\">2323</a> \t\t<em class=\"comment\">// Create a JFrame</em>\n<a name=\"2324\" href=\"#2324\">2324</a>         <strong>final</strong> JFrame f = <strong>new</strong> JFrame(Configuration.TITLE);\n<a name=\"2325\" href=\"#2325\">2325</a>         p.setJFrame(f);\n<a name=\"2326\" href=\"#2326\">2326</a>         f.setIconImage(<strong>new</strong> ImageIcon(<span class=\"string\">\"classes/swirllogo.gif\"</span>).getImage());\n<a name=\"2327\" href=\"#2327\">2327</a>         \n<a name=\"2328\" href=\"#2328\">2328</a>         <strong>final</strong> Container\t\tc = f.getContentPane();\n<a name=\"2329\" href=\"#2329\">2329</a> \n<a name=\"2330\" href=\"#2330\">2330</a>         <em class=\"comment\">// Create the menubar</em>\n<a name=\"2331\" href=\"#2331\">2331</a> \t\tJMenuBar\tjmb = <strong>new</strong> JMenuBar();\n<a name=\"2332\" href=\"#2332\">2332</a> \t\tJMenu\t\tmenuFile = <strong>new</strong> JMenu(<span class=\"string\">\"File\"</span>);\n<a name=\"2333\" href=\"#2333\">2333</a> \t\tmenuFile.setMnemonic(KeyEvent.VK_F);\n<a name=\"2334\" href=\"#2334\">2334</a> \t\tJMenu\t\tmenuView = <strong>new</strong> JMenu(<span class=\"string\">\"View\"</span>);\n<a name=\"2335\" href=\"#2335\">2335</a> \t\tmenuView.setMnemonic(KeyEvent.VK_V);\n<a name=\"2336\" href=\"#2336\">2336</a> \t\tJMenu\t\tmenuOptions = <strong>new</strong> JMenu(<span class=\"string\">\"Options\"</span>);\n<a name=\"2337\" href=\"#2337\">2337</a> \t\tmenuOptions.setMnemonic(KeyEvent.VK_O);\n<a name=\"2338\" href=\"#2338\">2338</a> \t\tJMenu\t\tmenuSecurity = <strong>new</strong> JMenu(<span class=\"string\">\"Security\"</span>);\n<a name=\"2339\" href=\"#2339\">2339</a> \t\tmenuSecurity.setMnemonic(KeyEvent.VK_S);\n<a name=\"2340\" href=\"#2340\">2340</a> \t\tJMenu\t\tmenuHelp = <strong>new</strong> JMenu(<span class=\"string\">\"Help\"</span>);\n<a name=\"2341\" href=\"#2341\">2341</a> \t\tmenuHelp.setMnemonic(KeyEvent.VK_H);\n<a name=\"2342\" href=\"#2342\">2342</a> \n<a name=\"2343\" href=\"#2343\">2343</a> \t\t<em class=\"comment\">// Create a tool bar</em>\n<a name=\"2344\" href=\"#2344\">2344</a> \t\t<strong>final</strong> JToolBar\ttoolBar = <strong>new</strong> JToolBar(<span class=\"string\">\"Toolbar\"</span>);\n<a name=\"2345\" href=\"#2345\">2345</a> \n<a name=\"2346\" href=\"#2346\">2346</a> \t\t<em class=\"comment\">// Import</em>\n<a name=\"2347\" href=\"#2347\">2347</a> \t\tAbstractAction\timportAction = <strong>new</strong> AbstractAction(<span class=\"string\">\"Import Files to Workspace...\"</span>){\n<a name=\"2348\" href=\"#2348\">2348</a> \t\t    <strong>public</strong> <strong>void</strong> actionPerformed(ActionEvent ae) {\n<a name=\"2349\" href=\"#2349\">2349</a> \t\t        <strong>if</strong>(ae!=<strong>null</strong>);\n<a name=\"2350\" href=\"#2350\">2350</a> \t\t\t\t<em class=\"comment\">// only multiple files</em>\n<a name=\"2351\" href=\"#2351\">2351</a> \t\t        <strong>final</strong> JFileChooser fc = <strong>new</strong> JFileChooser();\n<a name=\"2352\" href=\"#2352\">2352</a> \t\t        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);\n<a name=\"2353\" href=\"#2353\">2353</a> \t\t        fc.setMultiSelectionEnabled(<strong>true</strong>);\n<a name=\"2354\" href=\"#2354\">2354</a> \t            <strong>int</strong> returnVal = fc.showOpenDialog(f);\n<a name=\"2355\" href=\"#2355\">2355</a> \t            <strong>if</strong> (returnVal == JFileChooser.APPROVE_OPTION) {\n<a name=\"2356\" href=\"#2356\">2356</a> \t                File[] files = fc.getSelectedFiles();\n<a name=\"2357\" href=\"#2357\">2357</a> \t                <strong>for</strong> (<strong>int</strong> i = 0; i&lt;files.length; i++) {\n<a name=\"2358\" href=\"#2358\">2358</a> \t                    p.importFile(files[i]);\n<a name=\"2359\" href=\"#2359\">2359</a> \t                }\n<a name=\"2360\" href=\"#2360\">2360</a> \t            } \n<a name=\"2361\" href=\"#2361\">2361</a> \t            <strong>else</strong> {\n<a name=\"2362\" href=\"#2362\">2362</a> \t            }\n<a name=\"2363\" href=\"#2363\">2363</a> \t\t    }\n<a name=\"2364\" href=\"#2364\">2364</a> \t\t};\n<a name=\"2365\" href=\"#2365\">2365</a> \t\timportAction.putValue(AbstractAction.MNEMONIC_KEY, <strong>new</strong> Integer(KeyEvent.VK_I));\n<a name=\"2366\" href=\"#2366\">2366</a> \t\timportAction.putValue(AbstractAction.SHORT_DESCRIPTION, <span class=\"string\">\"Import local files into the shared workspace\"</span>);\n<a name=\"2367\" href=\"#2367\">2367</a> \t\tmenuFile.add(<strong>new</strong> JMenuItem(importAction));\n<a name=\"2368\" href=\"#2368\">2368</a> \t\t<em class=\"comment\">// Export</em>\n<a name=\"2369\" href=\"#2369\">2369</a> \t\tAbstractAction\texportAction = <strong>new</strong> AbstractAction(<span class=\"string\">\"Save My Changed Files...\"</span>){\n<a name=\"2370\" href=\"#2370\">2370</a> \t\t    <strong>public</strong> <strong>void</strong> actionPerformed(ActionEvent ae) {\n<a name=\"2371\" href=\"#2371\">2371</a> \t\t        <strong>if</strong>(ae!=<strong>null</strong>);\n<a name=\"2372\" href=\"#2372\">2372</a> \t\t        p.exportFile();\n<a name=\"2373\" href=\"#2373\">2373</a> \t\t    }\n<a name=\"2374\" href=\"#2374\">2374</a> \t\t};\n<a name=\"2375\" href=\"#2375\">2375</a> \t\texportAction.putValue(AbstractAction.MNEMONIC_KEY, <strong>new</strong> Integer(KeyEvent.VK_S));\n<a name=\"2376\" href=\"#2376\">2376</a> \t\texportAction.putValue(AbstractAction.SHORT_DESCRIPTION, <span class=\"string\">\"Export modified files to hard drive\"</span>);\n<a name=\"2377\" href=\"#2377\">2377</a> \t\tmenuFile.add(<strong>new</strong> JMenuItem(exportAction));\n<a name=\"2378\" href=\"#2378\">2378</a> \t\tmenuFile.addSeparator();\n<a name=\"2379\" href=\"#2379\">2379</a> \t\t<em class=\"comment\">// Exit</em>\n<a name=\"2380\" href=\"#2380\">2380</a> \t\tAbstractAction\texitAction = <strong>new</strong> AbstractAction(<span class=\"string\">\"Quit\"</span>){\n<a name=\"2381\" href=\"#2381\">2381</a> \t\t    <strong>public</strong> <strong>void</strong> actionPerformed(ActionEvent ae) {\n<a name=\"2382\" href=\"#2382\">2382</a> \t\t        <strong>if</strong>(ae!=<strong>null</strong>);\n<a name=\"2383\" href=\"#2383\">2383</a> \t\t        exitSwing(f, canvas, p);\n<a name=\"2384\" href=\"#2384\">2384</a> \t\t    }\n<a name=\"2385\" href=\"#2385\">2385</a> \t\t};\n<a name=\"2386\" href=\"#2386\">2386</a> \t\texitAction.putValue(AbstractAction.MNEMONIC_KEY, <strong>new</strong> Integer(KeyEvent.VK_Q));\n<a name=\"2387\" href=\"#2387\">2387</a> \t\texitAction.putValue(AbstractAction.SHORT_DESCRIPTION, <span class=\"string\">\"Quit the application\"</span>);\n<a name=\"2388\" href=\"#2388\">2388</a> \t\tmenuFile.add(<strong>new</strong> JMenuItem(exitAction));\n<a name=\"2389\" href=\"#2389\">2389</a> \n<a name=\"2390\" href=\"#2390\">2390</a> \t\t<em class=\"comment\">// Zoom in</em>\n<a name=\"2391\" href=\"#2391\">2391</a> \t\tAbstractAction\tzoomInAction = (AbstractAction)canvas.getActionMap().\n<a name=\"2392\" href=\"#2392\">2392</a> \t\t\t\t\t\t\t\t\tget(JSVGCanvas.ZOOM_IN_ACTION);\n<a name=\"2393\" href=\"#2393\">2393</a> \t\tzoomInAction.putValue(Action.NAME, <span class=\"string\">\"Zoom In\"</span>);\n<a name=\"2394\" href=\"#2394\">2394</a> \t\tzoomInAction.putValue(AbstractAction.MNEMONIC_KEY, <strong>new</strong> Integer(KeyEvent.VK_I));\n<a name=\"2395\" href=\"#2395\">2395</a> \t\tzoomInAction.putValue(AbstractAction.SHORT_DESCRIPTION, <span class=\"string\">\"Zoom In\"</span>);\n<a name=\"2396\" href=\"#2396\">2396</a> \t\tzoomInAction.putValue(AbstractAction.SMALL_ICON, <strong>new</strong> ImageIcon(<span class=\"string\">\"classes/zoomin.gif\"</span>));\t\t\n<a name=\"2397\" href=\"#2397\">2397</a> \t\tmenuView.add(<strong>new</strong> JMenuItem(zoomInAction));\n<a name=\"2398\" href=\"#2398\">2398</a> \t\t<em class=\"comment\">// Zoom out</em>\n<a name=\"2399\" href=\"#2399\">2399</a> \t\tAbstractAction\tzoomOutAction = (AbstractAction)canvas.getActionMap().\n<a name=\"2400\" href=\"#2400\">2400</a> \t\t\t\t\t\t\t\t\tget(JSVGCanvas.ZOOM_OUT_ACTION); \n<a name=\"2401\" href=\"#2401\">2401</a> \t\tzoomOutAction.putValue(Action.NAME, <span class=\"string\">\"Zoom Out\"</span>);\n<a name=\"2402\" href=\"#2402\">2402</a> \t\tzoomOutAction.putValue(AbstractAction.MNEMONIC_KEY, <strong>new</strong> Integer(KeyEvent.VK_O));\n<a name=\"2403\" href=\"#2403\">2403</a> \t\tzoomOutAction.putValue(AbstractAction.SHORT_DESCRIPTION, <span class=\"string\">\"Zoom out\"</span>);\n<a name=\"2404\" href=\"#2404\">2404</a> \t\tzoomOutAction.putValue(AbstractAction.SMALL_ICON, <strong>new</strong> ImageIcon(<span class=\"string\">\"classes/zoomout.gif\"</span>));\t\t\n<a name=\"2405\" href=\"#2405\">2405</a> \t\tmenuView.add(<strong>new</strong> JMenuItem(zoomOutAction));\n<a name=\"2406\" href=\"#2406\">2406</a> \t\tmenuView.addSeparator();\n<a name=\"2407\" href=\"#2407\">2407</a> \t\t<em class=\"comment\">// Enlarge dot</em>\n<a name=\"2408\" href=\"#2408\">2408</a> \t\tAbstractAction\tincreaseAction = <strong>new</strong> AbstractAction(<span class=\"string\">\"Increase Dot Size\"</span>){\n<a name=\"2409\" href=\"#2409\">2409</a> \t\t    <strong>public</strong> <strong>void</strong> actionPerformed(ActionEvent ae) {\n<a name=\"2410\" href=\"#2410\">2410</a> \t\t        <strong>if</strong>(ae!=<strong>null</strong>);\n<a name=\"2411\" href=\"#2411\">2411</a> \t\t        p.changeDotSize(false);\n<a name=\"2412\" href=\"#2412\">2412</a> \t\t    }\n<a name=\"2413\" href=\"#2413\">2413</a> \t\t};\n<a name=\"2414\" href=\"#2414\">2414</a> \t\tincreaseAction.putValue(AbstractAction.MNEMONIC_KEY, <strong>new</strong> Integer(KeyEvent.VK_S));\n<a name=\"2415\" href=\"#2415\">2415</a> \t\tincreaseAction.putValue(AbstractAction.SHORT_DESCRIPTION, <span class=\"string\">\"Increase the dot size\"</span>);\n<a name=\"2416\" href=\"#2416\">2416</a> \t\tincreaseAction.putValue(AbstractAction.SMALL_ICON, <strong>new</strong> ImageIcon(<span class=\"string\">\"classes/increasedot.gif\"</span>));\t\t\n<a name=\"2417\" href=\"#2417\">2417</a> \t\tmenuView.add(<strong>new</strong> JMenuItem(increaseAction));\n<a name=\"2418\" href=\"#2418\">2418</a> \t\t<em class=\"comment\">// Shrink dot</em>\n<a name=\"2419\" href=\"#2419\">2419</a> \t\tAbstractAction\tdecreaseAction = <strong>new</strong> AbstractAction(<span class=\"string\">\"Decrease Dot Size\"</span>){\n<a name=\"2420\" href=\"#2420\">2420</a> \t\t    <strong>public</strong> <strong>void</strong> actionPerformed(ActionEvent ae) {\n<a name=\"2421\" href=\"#2421\">2421</a> \t\t        <strong>if</strong>(ae!=<strong>null</strong>);\n<a name=\"2422\" href=\"#2422\">2422</a> \t\t        p.changeDotSize(<strong>true</strong>);\n<a name=\"2423\" href=\"#2423\">2423</a> \t\t    }\n<a name=\"2424\" href=\"#2424\">2424</a> \t\t};\n<a name=\"2425\" href=\"#2425\">2425</a> \t\tdecreaseAction.putValue(AbstractAction.MNEMONIC_KEY, <strong>new</strong> Integer(KeyEvent.VK_D));\n<a name=\"2426\" href=\"#2426\">2426</a> \t\tdecreaseAction.putValue(AbstractAction.SHORT_DESCRIPTION, <span class=\"string\">\"Decrease the dot size\"</span>);\n<a name=\"2427\" href=\"#2427\">2427</a> \t\tdecreaseAction.putValue(AbstractAction.SMALL_ICON, <strong>new</strong> ImageIcon(<span class=\"string\">\"classes/decreasedot.gif\"</span>));\t\t\n<a name=\"2428\" href=\"#2428\">2428</a> \t\tmenuView.add(<strong>new</strong> JMenuItem(decreaseAction));\n<a name=\"2429\" href=\"#2429\">2429</a> \t\tmenuView.addSeparator();\n<a name=\"2430\" href=\"#2430\">2430</a> \t\t<em class=\"comment\">// Tip</em>\n<a name=\"2431\" href=\"#2431\">2431</a> \t\tAbstractAction\ttipAction = <strong>new</strong> AbstractAction(<span class=\"string\">\"Show Tip Message\"</span>){\n<a name=\"2432\" href=\"#2432\">2432</a> \t\t    <strong>public</strong> <strong>void</strong> actionPerformed(ActionEvent ae) {\n<a name=\"2433\" href=\"#2433\">2433</a> \t\t        JCheckBoxMenuItem j = (JCheckBoxMenuItem)ae.getSource();\n<a name=\"2434\" href=\"#2434\">2434</a> \t\t        p.setShowDescription(j.getState());\n<a name=\"2435\" href=\"#2435\">2435</a> \t\t    }\n<a name=\"2436\" href=\"#2436\">2436</a> \t\t};\n<a name=\"2437\" href=\"#2437\">2437</a> \t\ttipAction.putValue(AbstractAction.MNEMONIC_KEY, <strong>new</strong> Integer(KeyEvent.VK_T));\n<a name=\"2438\" href=\"#2438\">2438</a> \t\ttipAction.putValue(AbstractAction.SHORT_DESCRIPTION, <span class=\"string\">\"Toggle showing the floating tip window\"</span>);\n<a name=\"2439\" href=\"#2439\">2439</a> \t\tJCheckBoxMenuItem itemTip = <strong>new</strong> JCheckBoxMenuItem(tipAction);\n<a name=\"2440\" href=\"#2440\">2440</a> \t\titemTip.setState(p.getShowDescription());\n<a name=\"2441\" href=\"#2441\">2441</a> \t\tmenuView.add(itemTip);\n<a name=\"2442\" href=\"#2442\">2442</a> \t\t<em class=\"comment\">// Change the local peer color</em>\n<a name=\"2443\" href=\"#2443\">2443</a> \t\tAbstractAction\tcolorAction = <strong>new</strong> AbstractAction(<span class=\"string\">\"Change color...\"</span>){\n<a name=\"2444\" href=\"#2444\">2444</a> \t\t    <strong>public</strong> <strong>void</strong> actionPerformed(ActionEvent ae) {\n<a name=\"2445\" href=\"#2445\">2445</a> \t\t        <strong>if</strong>(ae!=<strong>null</strong>);\n<a name=\"2446\" href=\"#2446\">2446</a> \t\t        Color\tc = PieUtils.getColorFromString(p.getLocalColor());\n<a name=\"2447\" href=\"#2447\">2447</a> \t\t        <strong>if</strong> (c == <strong>null</strong>)\n<a name=\"2448\" href=\"#2448\">2448</a> \t\t            c = Color.BLACK;\n<a name=\"2449\" href=\"#2449\">2449</a> \t\t        Color nc = JColorChooser.showDialog(f, <span class=\"string\">\"Choose Peer Color\"</span>, c);\n<a name=\"2450\" href=\"#2450\">2450</a> \t\t        <strong>if</strong> (nc != <strong>null</strong>) {\n<a name=\"2451\" href=\"#2451\">2451</a> \t\t            p.setLocalColor(<span class=\"string\">\"#\"</span> + PieUtils.toHexString(nc.getRed()) + \n<a name=\"2452\" href=\"#2452\">2452</a> \t\t                PieUtils.toHexString(nc.getGreen()) + PieUtils.toHexString(nc.getBlue()));\n<a name=\"2453\" href=\"#2453\">2453</a> \t\t        }\n<a name=\"2454\" href=\"#2454\">2454</a> \t\t    }\n<a name=\"2455\" href=\"#2455\">2455</a> \t\t};\n<a name=\"2456\" href=\"#2456\">2456</a> \t\tcolorAction.putValue(AbstractAction.MNEMONIC_KEY, <strong>new</strong> Integer(KeyEvent.VK_C));\n<a name=\"2457\" href=\"#2457\">2457</a> \t\tcolorAction.putValue(AbstractAction.SHORT_DESCRIPTION, <span class=\"string\">\"Change the color of the local peer\"</span>);\n<a name=\"2458\" href=\"#2458\">2458</a> \t\tmenuView.add(<strong>new</strong> JMenuItem(colorAction));\n<a name=\"2459\" href=\"#2459\">2459</a> \t\t<em class=\"comment\">// Refresh</em>\n<a name=\"2460\" href=\"#2460\">2460</a> \t\tAbstractAction\treloadAction = <strong>new</strong> AbstractAction(<span class=\"string\">\"Refresh\"</span>){\n<a name=\"2461\" href=\"#2461\">2461</a> \t\t    <strong>public</strong> <strong>void</strong> actionPerformed(ActionEvent ae) {\n<a name=\"2462\" href=\"#2462\">2462</a> \t\t        <strong>if</strong>(ae!=<strong>null</strong>);\n<a name=\"2463\" href=\"#2463\">2463</a> \t\t        p.refresh();\n<a name=\"2464\" href=\"#2464\">2464</a> \t\t    }\n<a name=\"2465\" href=\"#2465\">2465</a> \t\t};\n<a name=\"2466\" href=\"#2466\">2466</a> \t\treloadAction.putValue(AbstractAction.MNEMONIC_KEY, <strong>new</strong> Integer(KeyEvent.VK_R));\n<a name=\"2467\" href=\"#2467\">2467</a> \t\treloadAction.putValue(AbstractAction.SHORT_DESCRIPTION, <span class=\"string\">\"Refresh the view\"</span>);\n<a name=\"2468\" href=\"#2468\">2468</a> \t\t<em class=\"comment\">// Turn off toolbar, so we can save space on PDA. Making this a savable option would complicate code</em>\n<a name=\"2469\" href=\"#2469\">2469</a> \t\tAbstractAction\ttoolbarAction = <strong>new</strong> AbstractAction(<span class=\"string\">\"Show Toolbar\"</span>){\n<a name=\"2470\" href=\"#2470\">2470</a> \t\t    <strong>public</strong> <strong>void</strong> actionPerformed(ActionEvent ae) {\n<a name=\"2471\" href=\"#2471\">2471</a> \t\t        JCheckBoxMenuItem j = (JCheckBoxMenuItem)ae.getSource();\n<a name=\"2472\" href=\"#2472\">2472</a> \t\t        toolBar.setVisible(j.getState());\n<a name=\"2473\" href=\"#2473\">2473</a> \t\t        c.doLayout();\n<a name=\"2474\" href=\"#2474\">2474</a> \t\t    }\n<a name=\"2475\" href=\"#2475\">2475</a> \t\t};\n<a name=\"2476\" href=\"#2476\">2476</a> \t\ttoolbarAction.putValue(AbstractAction.MNEMONIC_KEY, <strong>new</strong> Integer(KeyEvent.VK_T));\n<a name=\"2477\" href=\"#2477\">2477</a> \t\ttoolbarAction.putValue(AbstractAction.SHORT_DESCRIPTION, <span class=\"string\">\"Toggle showing toolbar\"</span>);\n<a name=\"2478\" href=\"#2478\">2478</a> \t\tJCheckBoxMenuItem itemToolbar = <strong>new</strong> JCheckBoxMenuItem(toolbarAction);\n<a name=\"2479\" href=\"#2479\">2479</a> \t\titemToolbar.setState(<strong>true</strong>);\n<a name=\"2480\" href=\"#2480\">2480</a> \t\t<em class=\"comment\">// Save SVG</em>\n<a name=\"2481\" href=\"#2481\">2481</a> \t\tAbstractAction\twriteAction = <strong>new</strong> AbstractAction(<span class=\"string\">\"Save SVG...\"</span>){\n<a name=\"2482\" href=\"#2482\">2482</a> \t\t    <strong>public</strong> <strong>void</strong> actionPerformed(ActionEvent ae) {\n<a name=\"2483\" href=\"#2483\">2483</a> \t\t        <strong>if</strong>(ae!=<strong>null</strong>);\n<a name=\"2484\" href=\"#2484\">2484</a> \t\t        <strong>try</strong> {\n<a name=\"2485\" href=\"#2485\">2485</a> \t\t\t        <strong>final</strong> JFileChooser fc = <strong>new</strong> JFileChooser();\n<a name=\"2486\" href=\"#2486\">2486</a> \t\t\t        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);\n<a name=\"2487\" href=\"#2487\">2487</a> \t\t\t        fc.setMultiSelectionEnabled(false);\n<a name=\"2488\" href=\"#2488\">2488</a> \t\t            <strong>int</strong> returnVal = fc.showSaveDialog(f);\n<a name=\"2489\" href=\"#2489\">2489</a> \t\t            <strong>if</strong> (returnVal == JFileChooser.APPROVE_OPTION) {\n<a name=\"2490\" href=\"#2490\">2490</a> \t\t                PieUtils.writeXMLDocumentTo(canvas.getSVGDocument(), \n<a name=\"2491\" href=\"#2491\">2491</a> \t\t                        <strong>new</strong> FileOutputStream(fc.getSelectedFile()));\n<a name=\"2492\" href=\"#2492\">2492</a> \t\t            }\n<a name=\"2493\" href=\"#2493\">2493</a> \t\t        }\n<a name=\"2494\" href=\"#2494\">2494</a> \t\t        <strong>catch</strong> (FileNotFoundException fnf) {\n<a name=\"2495\" href=\"#2495\">2495</a> \t\t        }\n<a name=\"2496\" href=\"#2496\">2496</a> \t\t    }\n<a name=\"2497\" href=\"#2497\">2497</a> \t\t};\n<a name=\"2498\" href=\"#2498\">2498</a> \t\twriteAction.putValue(AbstractAction.MNEMONIC_KEY, <strong>new</strong> Integer(KeyEvent.VK_G));\n<a name=\"2499\" href=\"#2499\">2499</a> \t\twriteAction.putValue(AbstractAction.SHORT_DESCRIPTION, <span class=\"string\">\"Save the SVG content\"</span>);\n<a name=\"2500\" href=\"#2500\">2500</a> \n<a name=\"2501\" href=\"#2501\">2501</a> \t\t<strong>if</strong> (Configuration.showExtraMenus()) {\n<a name=\"2502\" href=\"#2502\">2502</a> \t\t    menuView.addSeparator();\n<a name=\"2503\" href=\"#2503\">2503</a> \t\t\tmenuView.add(itemToolbar);\n<a name=\"2504\" href=\"#2504\">2504</a> \t\t    menuView.addSeparator();\n<a name=\"2505\" href=\"#2505\">2505</a> \t\t\tmenuView.add(<strong>new</strong> JMenuItem(reloadAction));\n<a name=\"2506\" href=\"#2506\">2506</a> \t\t\tmenuView.add(<strong>new</strong> JMenuItem(writeAction));\n<a name=\"2507\" href=\"#2507\">2507</a> \t\t}\n<a name=\"2508\" href=\"#2508\">2508</a> \n<a name=\"2509\" href=\"#2509\">2509</a> \t\t<em class=\"comment\">// Get saved options </em>\n<a name=\"2510\" href=\"#2510\">2510</a> \t\tp.setShowDescription(Configuration.getShowDescription());\n<a name=\"2511\" href=\"#2511\">2511</a> \t\tp.setFollowDot(Configuration.getFollowDot());\n<a name=\"2512\" href=\"#2512\">2512</a> \t\tp.setDragWithDelegate(Configuration.getDragWithDelegate());\n<a name=\"2513\" href=\"#2513\">2513</a> \t\t<em class=\"comment\">// Delegate</em>\n<a name=\"2514\" href=\"#2514\">2514</a> \t\tAbstractAction\tdelegateAction = <strong>new</strong> AbstractAction(<span class=\"string\">\"Drag with Delegate\"</span>){\n<a name=\"2515\" href=\"#2515\">2515</a> \t\t    <strong>public</strong> <strong>void</strong> actionPerformed(ActionEvent ae) {\n<a name=\"2516\" href=\"#2516\">2516</a> \t\t        JCheckBoxMenuItem j = (JCheckBoxMenuItem)ae.getSource();\n<a name=\"2517\" href=\"#2517\">2517</a> \t\t        p.setDragWithDelegate(j.getState());\n<a name=\"2518\" href=\"#2518\">2518</a> \t\t    }\n<a name=\"2519\" href=\"#2519\">2519</a> \t\t};\n<a name=\"2520\" href=\"#2520\">2520</a> \t\tdelegateAction.putValue(AbstractAction.MNEMONIC_KEY, <strong>new</strong> Integer(KeyEvent.VK_D));\n<a name=\"2521\" href=\"#2521\">2521</a> \t\tdelegateAction.putValue(AbstractAction.SHORT_DESCRIPTION, <span class=\"string\">\"Toggle dragging with delegate\"</span>);\n<a name=\"2522\" href=\"#2522\">2522</a> \t\tJCheckBoxMenuItem itemDelegate = <strong>new</strong> JCheckBoxMenuItem(delegateAction);\n<a name=\"2523\" href=\"#2523\">2523</a> \t\titemDelegate.setState(p.getDragWithDelegate());\n<a name=\"2524\" href=\"#2524\">2524</a> \t\tmenuOptions.add(itemDelegate);\n<a name=\"2525\" href=\"#2525\">2525</a> \t\t<em class=\"comment\">// Follow</em>\n<a name=\"2526\" href=\"#2526\">2526</a> \t\tAbstractAction\tfollowAction = <strong>new</strong> AbstractAction(<span class=\"string\">\"Description Follows Dot\"</span>){\n<a name=\"2527\" href=\"#2527\">2527</a> \t\t    <strong>public</strong> <strong>void</strong> actionPerformed(ActionEvent ae) {\n<a name=\"2528\" href=\"#2528\">2528</a> \t\t        JCheckBoxMenuItem j = (JCheckBoxMenuItem)ae.getSource();\n<a name=\"2529\" href=\"#2529\">2529</a> \t\t        p.setFollowDot(j.getState());\n<a name=\"2530\" href=\"#2530\">2530</a> \t\t    }\n<a name=\"2531\" href=\"#2531\">2531</a> \t\t};\n<a name=\"2532\" href=\"#2532\">2532</a> \t\tfollowAction.putValue(AbstractAction.MNEMONIC_KEY, <strong>new</strong> Integer(KeyEvent.VK_N));\n<a name=\"2533\" href=\"#2533\">2533</a> \t\tfollowAction.putValue(AbstractAction.SHORT_DESCRIPTION, <span class=\"string\">\"Toggle following dot with description\"</span>);\n<a name=\"2534\" href=\"#2534\">2534</a> \t\tJCheckBoxMenuItem itemFollow = <strong>new</strong> JCheckBoxMenuItem(followAction);\n<a name=\"2535\" href=\"#2535\">2535</a> \t\titemFollow.setState(p.getFollowDot());\n<a name=\"2536\" href=\"#2536\">2536</a> \t\tmenuOptions.add(itemFollow);\n<a name=\"2537\" href=\"#2537\">2537</a> \n<a name=\"2538\" href=\"#2538\">2538</a> \t\t<em class=\"comment\">// About</em>\n<a name=\"2539\" href=\"#2539\">2539</a> \t\tAbstractAction\taboutAction = <strong>new</strong> AbstractAction(<span class=\"string\">\"About\"</span>){\n<a name=\"2540\" href=\"#2540\">2540</a> \t\t    <strong>public</strong> <strong>void</strong> actionPerformed(ActionEvent ae) {\n<a name=\"2541\" href=\"#2541\">2541</a> \t\t        <strong>if</strong>(ae!=<strong>null</strong>);\n<a name=\"2542\" href=\"#2542\">2542</a> \t\t        String\ttitle = <span class=\"string\">\"About Impromptu\"</span>;\n<a name=\"2543\" href=\"#2543\">2543</a> \t\t        String  copyright = <span class=\"string\">\"Impromptu \"</span> + \n<a name=\"2544\" href=\"#2544\">2544</a> \t\t        \tedu.uci.isr.impromptu.common.Configuration.VERSION + <span class=\"string\">\"\\n\\n\"</span> +\n<a name=\"2545\" href=\"#2545\">2545</a> \t\t        \t<span class=\"string\">\"(C) 2004-2005, University of California, Irvine\"</span>;\n<a name=\"2546\" href=\"#2546\">2546</a> \t\t        p.showMessageDialog(copyright, title, \n<a name=\"2547\" href=\"#2547\">2547</a> \t\t                JOptionPane.INFORMATION_MESSAGE);\n<a name=\"2548\" href=\"#2548\">2548</a> \t\t    }\n<a name=\"2549\" href=\"#2549\">2549</a> \t\t};\n<a name=\"2550\" href=\"#2550\">2550</a> \t\taboutAction.putValue(AbstractAction.MNEMONIC_KEY, <strong>new</strong> Integer(KeyEvent.VK_A));\n<a name=\"2551\" href=\"#2551\">2551</a> \t\taboutAction.putValue(AbstractAction.SHORT_DESCRIPTION, <span class=\"string\">\"Show the version information\"</span>);\n<a name=\"2552\" href=\"#2552\">2552</a> \t\tmenuHelp.add(<strong>new</strong> JMenuItem(aboutAction));\n<a name=\"2553\" href=\"#2553\">2553</a> \n<a name=\"2554\" href=\"#2554\">2554</a> \t\t<em class=\"comment\">// User Manager</em>\n<a name=\"2555\" href=\"#2555\">2555</a> \t\tAbstractAction\tuserAction = <strong>new</strong> AbstractAction(<span class=\"string\">\"User Manager\"</span>){\n<a name=\"2556\" href=\"#2556\">2556</a> \t\t    <strong>public</strong> <strong>void</strong> actionPerformed(ActionEvent ae) {\n<a name=\"2557\" href=\"#2557\">2557</a> \t\t        <strong>if</strong>(ae!=<strong>null</strong>);\n<a name=\"2558\" href=\"#2558\">2558</a> \t\t        p.showUserManager();\n<a name=\"2559\" href=\"#2559\">2559</a> \t\t    }\n<a name=\"2560\" href=\"#2560\">2560</a> \t\t};\n<a name=\"2561\" href=\"#2561\">2561</a> \t\tuserAction.putValue(AbstractAction.MNEMONIC_KEY, <strong>new</strong> Integer(KeyEvent.VK_U));\n<a name=\"2562\" href=\"#2562\">2562</a> \t\tuserAction.putValue(AbstractAction.SHORT_DESCRIPTION, <span class=\"string\">\"Display user manager\"</span>);\n<a name=\"2563\" href=\"#2563\">2563</a> \t\tmenuSecurity.add(<strong>new</strong> JMenuItem(userAction));\n<a name=\"2564\" href=\"#2564\">2564</a> \t\tmenuSecurity.addSeparator();\n<a name=\"2565\" href=\"#2565\">2565</a> \t\t<em class=\"comment\">// Change proxy</em>\n<a name=\"2566\" href=\"#2566\">2566</a> \t\tAbstractAction\tproxyAction = <strong>new</strong> AbstractAction(<span class=\"string\">\"Impromptu URL...\"</span>){\n<a name=\"2567\" href=\"#2567\">2567</a> \t\t    <strong>public</strong> <strong>void</strong> actionPerformed(ActionEvent ae) {\n<a name=\"2568\" href=\"#2568\">2568</a> \t\t        <strong>if</strong>(ae!=<strong>null</strong>);\n<a name=\"2569\" href=\"#2569\">2569</a> \t\t        String\toldProxy = p.getImpromptuProxy(); \n<a name=\"2570\" href=\"#2570\">2570</a> \t\t        String \tnewProxy = JOptionPane.showInputDialog(f, \n<a name=\"2571\" href=\"#2571\">2571</a> \t\t                \t\t<span class=\"string\">\"Input the new Impromptu URL\"</span>, oldProxy);\n<a name=\"2572\" href=\"#2572\">2572</a> \t\t        <strong>if</strong> (newProxy != <strong>null</strong> &amp;&amp; !newProxy.equals(oldProxy))\n<a name=\"2573\" href=\"#2573\">2573</a> \t\t            p.setImpromptuProxy(newProxy);\n<a name=\"2574\" href=\"#2574\">2574</a> \t\t    }\n<a name=\"2575\" href=\"#2575\">2575</a> \t\t};\n<a name=\"2576\" href=\"#2576\">2576</a> \t\tproxyAction.putValue(AbstractAction.MNEMONIC_KEY, <strong>new</strong> Integer(KeyEvent.VK_L));\n<a name=\"2577\" href=\"#2577\">2577</a> \t\tproxyAction.putValue(AbstractAction.SHORT_DESCRIPTION, <span class=\"string\">\"Change Impromptu URL\"</span>);\n<a name=\"2578\" href=\"#2578\">2578</a> \t\tmenuSecurity.add(<strong>new</strong> JMenuItem(proxyAction));\n<a name=\"2579\" href=\"#2579\">2579</a> \t\t<em class=\"comment\">// Change drive</em>\n<a name=\"2580\" href=\"#2580\">2580</a> \t\tAbstractAction\tdriveAction = <strong>new</strong> AbstractAction(<span class=\"string\">\"Impromptu Drive...\"</span>){\n<a name=\"2581\" href=\"#2581\">2581</a> \t\t    <strong>public</strong> <strong>void</strong> actionPerformed(ActionEvent ae) {\n<a name=\"2582\" href=\"#2582\">2582</a> \t\t        <strong>if</strong>(ae!=<strong>null</strong>);\n<a name=\"2583\" href=\"#2583\">2583</a> \t\t        String\toldDrive = p.getImpromptuDrive(); \n<a name=\"2584\" href=\"#2584\">2584</a> \t\t        String \tnewDrive = JOptionPane.showInputDialog(f, \n<a name=\"2585\" href=\"#2585\">2585</a> \t\t                \t\t<span class=\"string\">\"Input the new Impromptu drive\"</span>, oldDrive);\n<a name=\"2586\" href=\"#2586\">2586</a> \t\t        <strong>if</strong> (newDrive != <strong>null</strong> &amp;&amp; !newDrive.equals(oldDrive))\n<a name=\"2587\" href=\"#2587\">2587</a> \t\t            p.setImpromptuDrive(newDrive);\n<a name=\"2588\" href=\"#2588\">2588</a> \t\t    }\n<a name=\"2589\" href=\"#2589\">2589</a> \t\t};\n<a name=\"2590\" href=\"#2590\">2590</a> \t\tdriveAction.putValue(AbstractAction.MNEMONIC_KEY, <strong>new</strong> Integer(KeyEvent.VK_D));\n<a name=\"2591\" href=\"#2591\">2591</a> \t\tdriveAction.putValue(AbstractAction.SHORT_DESCRIPTION, <span class=\"string\">\"Change Impromptu drive\"</span>);\n<a name=\"2592\" href=\"#2592\">2592</a> \t\tmenuSecurity.add(<strong>new</strong> JMenuItem(driveAction));\n<a name=\"2593\" href=\"#2593\">2593</a> \t\t<em class=\"comment\">// Change Password</em>\n<a name=\"2594\" href=\"#2594\">2594</a> \t\t<strong>if</strong> (args.length == 1)\n<a name=\"2595\" href=\"#2595\">2595</a> \t\t    p.setPassword(args[0]);\n<a name=\"2596\" href=\"#2596\">2596</a> \t\tAbstractAction\tpasswordAction = <strong>new</strong> AbstractAction(<span class=\"string\">\"Impromptu Password\"</span>){\n<a name=\"2597\" href=\"#2597\">2597</a> \t\t    <strong>public</strong> <strong>void</strong> actionPerformed(ActionEvent ae) {\n<a name=\"2598\" href=\"#2598\">2598</a> \t\t        <strong>if</strong>(ae!=<strong>null</strong>);\n<a name=\"2599\" href=\"#2599\">2599</a> \t\t        String \tpassword = JOptionPane.showInputDialog(f, \n<a name=\"2600\" href=\"#2600\">2600</a> \t\t                \t\t<span class=\"string\">\"Input the new password\"</span>);\n<a name=\"2601\" href=\"#2601\">2601</a> \t\t        p.setPassword(password);\n<a name=\"2602\" href=\"#2602\">2602</a> \t\t    }\n<a name=\"2603\" href=\"#2603\">2603</a> \t\t};\n<a name=\"2604\" href=\"#2604\">2604</a> \t\tpasswordAction.putValue(AbstractAction.MNEMONIC_KEY, <strong>new</strong> Integer(KeyEvent.VK_A));\n<a name=\"2605\" href=\"#2605\">2605</a> \t\tpasswordAction.putValue(AbstractAction.SHORT_DESCRIPTION, <span class=\"string\">\"Set the password for Impromptu proxy\"</span>);\n<a name=\"2606\" href=\"#2606\">2606</a> \t\tmenuSecurity.add(<strong>new</strong> JMenuItem(passwordAction));\n<a name=\"2607\" href=\"#2607\">2607</a> \t\t<em class=\"comment\">// Reconnect</em>\n<a name=\"2608\" href=\"#2608\">2608</a> \t\tAbstractAction\tconnectAction = <strong>new</strong> AbstractAction(<span class=\"string\">\"Reconnect to Impromptu\"</span>){\n<a name=\"2609\" href=\"#2609\">2609</a> \t\t    <strong>public</strong> <strong>void</strong> actionPerformed(ActionEvent ae) {\n<a name=\"2610\" href=\"#2610\">2610</a> \t\t        <strong>if</strong>(ae!=<strong>null</strong>);\n<a name=\"2611\" href=\"#2611\">2611</a> \t\t        p.connectToProxy();\n<a name=\"2612\" href=\"#2612\">2612</a> \t\t    }\n<a name=\"2613\" href=\"#2613\">2613</a> \t\t};\n<a name=\"2614\" href=\"#2614\">2614</a> \t\tconnectAction.putValue(AbstractAction.MNEMONIC_KEY, <strong>new</strong> Integer(KeyEvent.VK_R));\n<a name=\"2615\" href=\"#2615\">2615</a> \t\tconnectAction.putValue(AbstractAction.SHORT_DESCRIPTION, <span class=\"string\">\"Reconnect to Impromptu\"</span>);\n<a name=\"2616\" href=\"#2616\">2616</a> \t\tmenuSecurity.add(<strong>new</strong> JMenuItem(connectAction));\n<a name=\"2617\" href=\"#2617\">2617</a> \n<a name=\"2618\" href=\"#2618\">2618</a> \t\tjmb.add(menuFile);\n<a name=\"2619\" href=\"#2619\">2619</a> \t\tjmb.add(menuView);\n<a name=\"2620\" href=\"#2620\">2620</a> \t\t<strong>if</strong> (Configuration.showExtraMenus()) {\n<a name=\"2621\" href=\"#2621\">2621</a> \t\t\tjmb.add(menuOptions);\n<a name=\"2622\" href=\"#2622\">2622</a> \t\t\tjmb.add(menuSecurity);\n<a name=\"2623\" href=\"#2623\">2623</a> \t\t}\n<a name=\"2624\" href=\"#2624\">2624</a> \t\tjmb.add(menuHelp);\n<a name=\"2625\" href=\"#2625\">2625</a> \n<a name=\"2626\" href=\"#2626\">2626</a> \t\ttoolBar.setRollover(<strong>true</strong>);\n<a name=\"2627\" href=\"#2627\">2627</a> \t\tJButton\t\tbuttonColor = <strong>new</strong> JButton(colorAction);\n<a name=\"2628\" href=\"#2628\">2628</a> \t\tJButton\t\tbuttonReload = <strong>new</strong> JButton(reloadAction);\n<a name=\"2629\" href=\"#2629\">2629</a> \t\tJButton\t\tbuttonZoomIn = <strong>new</strong> JButton(zoomInAction);\n<a name=\"2630\" href=\"#2630\">2630</a> \t\tJButton\t\tbuttonZoomOut = <strong>new</strong> JButton(zoomOutAction);\n<a name=\"2631\" href=\"#2631\">2631</a> \t\tJButton\t\tbuttonIncrease = <strong>new</strong> JButton(increaseAction);\n<a name=\"2632\" href=\"#2632\">2632</a> \t\tbuttonIncrease.setText(<span class=\"string\">\"\"</span>);\n<a name=\"2633\" href=\"#2633\">2633</a> \t\tJButton\t\tbuttonDecrease = <strong>new</strong> JButton(decreaseAction);\n<a name=\"2634\" href=\"#2634\">2634</a> \t\tbuttonDecrease.setText(<span class=\"string\">\"\"</span>);\n<a name=\"2635\" href=\"#2635\">2635</a> \t\tJButton\t\tbuttonWrite = <strong>new</strong> JButton(writeAction);\n<a name=\"2636\" href=\"#2636\">2636</a> \t\t\n<a name=\"2637\" href=\"#2637\">2637</a> \t\ttoolBar.add(buttonZoomIn);\n<a name=\"2638\" href=\"#2638\">2638</a> \t\ttoolBar.add(buttonZoomOut);\n<a name=\"2639\" href=\"#2639\">2639</a> \t\ttoolBar.add(buttonIncrease);\n<a name=\"2640\" href=\"#2640\">2640</a> \t\ttoolBar.add(buttonDecrease);\n<a name=\"2641\" href=\"#2641\">2641</a> \t\t<strong>if</strong> (Configuration.showExtraMenus()) {\n<a name=\"2642\" href=\"#2642\">2642</a> \t\t\ttoolBar.addSeparator();\n<a name=\"2643\" href=\"#2643\">2643</a> \t\t\ttoolBar.add(buttonReload);\n<a name=\"2644\" href=\"#2644\">2644</a> \t\t\ttoolBar.add(buttonColor);\n<a name=\"2645\" href=\"#2645\">2645</a> \t\t\ttoolBar.add(buttonWrite);\n<a name=\"2646\" href=\"#2646\">2646</a> \t\t}\n<a name=\"2647\" href=\"#2647\">2647</a> \n<a name=\"2648\" href=\"#2648\">2648</a> \t\t<em class=\"comment\">// Create a status bar</em>\n<a name=\"2649\" href=\"#2649\">2649</a> \t\tJLabel\t\tstatusBar = <strong>new</strong> JLabel(<span class=\"string\">\"Drop files to the outside of the pie or your slice of the pie\"</span>);\n<a name=\"2650\" href=\"#2650\">2650</a> \t\tstatusBar.setBorder(BorderFactory.createLoweredBevelBorder());\n<a name=\"2651\" href=\"#2651\">2651</a> \t\t\n<a name=\"2652\" href=\"#2652\">2652</a>         c.setLayout(<strong>new</strong> BorderLayout());\n<a name=\"2653\" href=\"#2653\">2653</a>         c.add(toolBar, BorderLayout.NORTH);\n<a name=\"2654\" href=\"#2654\">2654</a> \t\tc.add(canvas, BorderLayout.CENTER);\n<a name=\"2655\" href=\"#2655\">2655</a> \t\t<strong>if</strong> (Configuration.showExtraMenus())\n<a name=\"2656\" href=\"#2656\">2656</a> \t\t    c.add(statusBar, BorderLayout.SOUTH);\n<a name=\"2657\" href=\"#2657\">2657</a> \t\tf.addWindowListener(<strong>new</strong> WindowAdapter() {\n<a name=\"2658\" href=\"#2658\">2658</a> \t\t    <strong>public</strong> <strong>void</strong> windowClosing(WindowEvent evt) {\n<a name=\"2659\" href=\"#2659\">2659</a> \t\t        <strong>if</strong>(evt!=<strong>null</strong>);\n<a name=\"2660\" href=\"#2660\">2660</a> \t\t        exitSwing(f, canvas, p);\n<a name=\"2661\" href=\"#2661\">2661</a> \t\t    } \n<a name=\"2662\" href=\"#2662\">2662</a> \t\t});\n<a name=\"2663\" href=\"#2663\">2663</a> \t\t\n<a name=\"2664\" href=\"#2664\">2664</a> \t\tf.setLocation(Configuration.getPosition());\n<a name=\"2665\" href=\"#2665\">2665</a> \t\tf.setJMenuBar(jmb);\n<a name=\"2666\" href=\"#2666\">2666</a> \n<a name=\"2667\" href=\"#2667\">2667</a> \t\tf.pack();\n<a name=\"2668\" href=\"#2668\">2668</a>         <em class=\"comment\">// f.setVisible(true);</em>\n<a name=\"2669\" href=\"#2669\">2669</a> \t\tcanvas.addGVTTreeRendererListener(<strong>new</strong> GVTTreeRendererAdapter() {\n<a name=\"2670\" href=\"#2670\">2670</a> \t\t\t<strong>public</strong> <strong>void</strong> gvtRenderingCompleted(GVTTreeRendererEvent  e) {\n<a name=\"2671\" href=\"#2671\">2671</a> \t\t        <strong>if</strong>(e!=<strong>null</strong>);\n<a name=\"2672\" href=\"#2672\">2672</a> \t\t\t    <em class=\"comment\">// when this happens, we have both a document and an update manager</em>\n<a name=\"2673\" href=\"#2673\">2673</a> \t\t\t    <em class=\"comment\">// so we can move on to create our stuff</em>\n<a name=\"2674\" href=\"#2674\">2674</a> \t\t        p.setDocument(canvas.getSVGDocument());\n<a name=\"2675\" href=\"#2675\">2675</a> \t\t        p.setJSVGCanvas(canvas);\n<a name=\"2676\" href=\"#2676\">2676</a> \t\t\t\tp.setUpdateManager(canvas.getUpdateManager());\n<a name=\"2677\" href=\"#2677\">2677</a> \n<a name=\"2678\" href=\"#2678\">2678</a> \t\t        <em class=\"comment\">// set up dropping for pie</em>\n<a name=\"2679\" href=\"#2679\">2679</a> \t\t        <strong>new</strong> DropTarget(canvas, DnDConstants.ACTION_COPY,\n<a name=\"2680\" href=\"#2680\">2680</a> \t\t                <strong>new</strong> DropTargetAdapter(){\n<a name=\"2681\" href=\"#2681\">2681</a> \t\t            <strong>public</strong> <strong>void</strong> drop(DropTargetDropEvent dtde) {\n<a name=\"2682\" href=\"#2682\">2682</a> \t\t                p.drop(dtde);\n<a name=\"2683\" href=\"#2683\">2683</a> \t\t            }\n<a name=\"2684\" href=\"#2684\">2684</a> \t\t        });\n<a name=\"2685\" href=\"#2685\">2685</a> \t\t        p.startPeerManager(integratePie);\n<a name=\"2686\" href=\"#2686\">2686</a> \t\t        \n<a name=\"2687\" href=\"#2687\">2687</a> \t\t        f.setVisible(<strong>true</strong>);\n<a name=\"2688\" href=\"#2688\">2688</a> \t\t        p.repaint();\n<a name=\"2689\" href=\"#2689\">2689</a> \t\t        <em class=\"comment\">// now initialization is done, no interest in rendering events</em>\n<a name=\"2690\" href=\"#2690\">2690</a> \t\t        canvas.removeGVTTreeRendererListener(<strong>this</strong>);\n<a name=\"2691\" href=\"#2691\">2691</a> \t\t\t}\n<a name=\"2692\" href=\"#2692\">2692</a> \t\t});\n<a name=\"2693\" href=\"#2693\">2693</a>     }\n<a name=\"2694\" href=\"#2694\">2694</a>     \n<a name=\"2695\" href=\"#2695\">2695</a>     <em>/**<em>*</em></em>\n<a name=\"2696\" href=\"#2696\">2696</a> <em>     * Handle exiting</em>\n<a name=\"2697\" href=\"#2697\">2697</a> <em>     * @param f the JFrame</em>\n<a name=\"2698\" href=\"#2698\">2698</a> <em>     * @param canvas the JSVGCanvas contained in the JFrame</em>\n<a name=\"2699\" href=\"#2699\">2699</a> <em>     * @param p the Pie</em>\n<a name=\"2700\" href=\"#2700\">2700</a> <em>     */</em>\n<a name=\"2701\" href=\"#2701\">2701</a>     <strong>private</strong> <strong>static</strong> <strong>void</strong> exitSwing(JFrame f, JSVGCanvas canvas, <a href=\"../../../../../edu/uci/isr/impromptu/pie/Pie.html\">Pie</a> p) {\n<a name=\"2702\" href=\"#2702\">2702</a>         Configuration.saveSwing(f, canvas, p);\n<a name=\"2703\" href=\"#2703\">2703</a>         p.exportFile();\n<a name=\"2704\" href=\"#2704\">2704</a>         <em class=\"comment\">// the persistent files will be the changed copy, not necessarily the original copy</em>\n<a name=\"2705\" href=\"#2705\">2705</a>         p.leaveNotify();\n<a name=\"2706\" href=\"#2706\">2706</a>     }\n<a name=\"2707\" href=\"#2707\">2707</a>     \n<a name=\"2708\" href=\"#2708\">2708</a>     <em>/**<em>*</em></em>\n<a name=\"2709\" href=\"#2709\">2709</a> <em>     * Handle exiting</em>\n<a name=\"2710\" href=\"#2710\">2710</a> <em>     * @param f the SWT Shell</em>\n<a name=\"2711\" href=\"#2711\">2711</a> <em>     * @param canvas the SVG canvas</em>\n<a name=\"2712\" href=\"#2712\">2712</a> <em>     * @param p the Pie</em>\n<a name=\"2713\" href=\"#2713\">2713</a> <em>     */</em>\n<a name=\"2714\" href=\"#2714\">2714</a>     <strong>private</strong> <strong>static</strong> <strong>void</strong> exitSWT(Shell f, <a href=\"../../../../../edu/uci/isr/impromptu/pie/InteractiveSVGCanvas.html\">InteractiveSVGCanvas</a> canvas, <a href=\"../../../../../edu/uci/isr/impromptu/pie/Pie.html\">Pie</a> p) {\n<a name=\"2715\" href=\"#2715\">2715</a>         Configuration.saveSWT(f, canvas, p);\n<a name=\"2716\" href=\"#2716\">2716</a>         p.exportFile();\n<a name=\"2717\" href=\"#2717\">2717</a>         <em class=\"comment\">// the persistent files will be the changed copy, not necessarily the original copy</em>\n<a name=\"2718\" href=\"#2718\">2718</a>         p.leaveNotify();\n<a name=\"2719\" href=\"#2719\">2719</a>     }\n<a name=\"2720\" href=\"#2720\">2720</a>     \n<a name=\"2721\" href=\"#2721\">2721</a> \t<em class=\"comment\">// The main function dispatches to either SWT or Swing</em>\n<a name=\"2722\" href=\"#2722\">2722</a>     <em class=\"comment\">// Swing takes too much space for Pocket PC</em>\n<a name=\"2723\" href=\"#2723\">2723</a>     <em class=\"comment\">// SWT is used to make a viewer on Pocket PC</em>\n<a name=\"2724\" href=\"#2724\">2724</a>     <strong>public</strong> <strong>static</strong> <strong>void</strong> main(String args[]) {\n<a name=\"2725\" href=\"#2725\">2725</a>         <strong>if</strong> (args.length &lt;= 1) {\n<a name=\"2726\" href=\"#2726\">2726</a>             mainSwing(args);\n<a name=\"2727\" href=\"#2727\">2727</a>         }\n<a name=\"2728\" href=\"#2728\">2728</a>         <strong>else</strong> {\n<a name=\"2729\" href=\"#2729\">2729</a>             mainSWT(args);\n<a name=\"2730\" href=\"#2730\">2730</a>         }\n<a name=\"2731\" href=\"#2731\">2731</a>     }\n<a name=\"2732\" href=\"#2732\">2732</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 34289.0}