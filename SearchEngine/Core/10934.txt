{"text": "Syllabus ICS 33 Introduction to Programming Introduction This page contains material that will be important and useful throughout the entire quarter I consider it a contract with my students Please read it once now and keep it handy for future reference You can search this page in your browser for specific information by typing Ctrl F on most browsers and then entering the text that you want to locate Many questions that you might have about this course during the quarter are already answered inside this document so become familiar with its contents and how to search it It also contains lots of good advice on getting the most out of this course Catalog Description Intermediate level language features and programming concepts for larger more complex higher quality software Functional programming name spaces modules class protocols inheritance iterators generators operator overloading reflection Analysis of time and space efficiency Course Philosophy My goal in ICS 33 is for students to solidify their basic understanding of Python and to extend their knowledge of Python and their ability to use the language to solve problems We will explore new Python language features and re examine old ones in light of what we learn The material we cover needs to be understood thoroughly so that we can apply it in complex and novel situations not just memorized by mastering the tool that is Python we can build all sorts of useful software with it We will also cover some Computer Science topics that are closely related to programming In addition students will be introduced to some new tools modules regular expressions unnit tests and software Eclipse Integrated Developement Environment and its Debugger Perspective The intellectual content of this course can be roughly categorized into three main areas although some topics bridge multiple areas Classes Functions and Computer Science Classes operator overloading iterator protocols inheritance and self referential classes Functions lambdas generators recursion and functional programming Computer Science EBNF regular expressions decorators analysis of algorithms unit testing and Java and static typing Here is a quick overview of the three programming class in UCI s three quarter Introduction to Programming sequence All are taught in Python and the combined time on task studying and programming with this language should make students proficient at using it ICS 31 Introduction to Programming This course introduces the basics of the Python programming language and how to develop programs in an Integrated Development Environment Eclipse or IDLE using Python ICS 32 Programming With Software Libraries This course increases students abilities to write more complicated programs it focuses on students learning how to read understand and employ modules and classes from Python s library ICS 33 Intermediate Programming This course examines Python more carefully giving students a more unified look at the language and discussing some of its powerful features that make sophisticated programming easier It also covers some programming related Computer Science topics A quick way to analogize these courses is 31 learning to drive 32 road trips 33 car mechanics Although we will mostly study programming in the small we will concentrate on the technical and lingual issues of building large reliable programmed systems that are constructed from standard components Expect to cover most relevant Python language features thoroughly but also to spend much time discussing less concrete but ultimately more general and important aspects of computer programming Programming style is a particularly important topic to understand programming we really need to develop appropriate aesthetics that allow us to separate elegant programs from hacks As in any writing activity we must also learn to be self critical of our own creations so that we can continually improve them this skill is difficult to acquire and its importance extends well beyond the domain of programming Finally to become an expert in any discipline we must master its terminology Fluency with technical terms allows us to communicate and even to think more accurately and concisely Therefore the materials in this course will define illustrate and repeatedly use many important technical terms concerning programming Take the time required to master them An old Chinese proverb says The first step towards wisdom is calling things by their right names Textbooks The primary sources for ICS 33 will come from materials that I have written and am continually updating These materials include readings problem sets quizzes and programming assignments and a bunch of infrastructure material like this syllabus Typically these materials will be shorter than chapters in a textbook but they are more densely packed with information thus you will still spend about the same amount of time studying my note as you would reading a textbook Recently ICS 31 and ICS 32 classes taught by other instructors have used the following book Perkovic Introduction to Computing Using Python An Application Development Focus Wiley 2 11 Copies should be available at the bookstore or online at Amazon Here are two Python books that are great resources for programmers I have required the following textbook for ICS 33 which is a huge extensive but cheap introduction to Python for those who already understand programming a category you should be in It is a great reference book with many small examples I frequently find myself looking up the details of topics in my copy Lutz Learning Python Fifth Edition O Reilly 2 13 Copies should be available at the bookstore or online at Amazon There is a companion book to this one that discusses and explores many of Python s standard library modules We will not use this book in this class but it is another excellent book to have on your shelf Lutz Programming Python Fourth Edition O Reilly 2 11 Copies should be available at the bookstore or online at Amazon These books are Computing Platforms and Programming Environments The standard computing platforms for this course are PCs running the Windows 7 8 or a similar Operating System OS Macintosh PCs running the OS X operating system Either PC running Linux We expect that ICS 33 students will use their own computers to complete their programming assignments sometimes working in groups of two pair programming All the software used in ICS 33 is available for free on the web see below for details The programming environment that we will use is Eclipse it is an Integrated Development Environment IDE including a project manager editor interpreter and debugger We will write all our programs in the Python programming language To run Eclipse with Python you must first install Java to run Eclipse and then Python and then Eclipse itself This software and others useful for the course are available through the Course Software link see the heading Main Software near the top You should try to follow these instructions and download and install this software yourself if you are having difficulty please bring your computer to lab and ask our staff to help you with the installation Typically it takes only a few days before everyone has correctly downloaded and installed the necessary software and has started to learn how to use it properly Using this software is integral to every programming assignment during the quarter so it is best to be aggressive and download install and start mastering this software quickly ICS Computer Labs We expect students to do much but not all of their programming assignments during their labs which are scheduled for 4 hours per week These labs are staffed by TAs and Lab Tutors I encourage all students to ask them questions on a regular basis and generally engage them in a dialog about programming learning to talk about programming is an explicit goal of this course While most students will do their coursework in labs on their own machines the ICS Labs also provide machines with the correct software loaded You should follow these Activation Instructions for your ICS Lab Account early in the quarter Some students will use their own machines to run Eclipse and the lab machines to read online Python documentation Whether or not you plan on doing your homework in a lab you must activate your ICS account and know how to use it for in lab programming exams During in lab programming exams you must write your programs on the PCs in our labs so you should learn to use these machines even if you use your own machine for all other coursework Once you start Eclipse what computer you are on makes little difference PCs Macs and Linux systems operate similarly Although the machines in the ICS labs also provide some external storage space the H drive on a Unix system it is an excellent idea to backup your work either electronically or using USB memory whether you are using your own computer or the computers in our lab Finally the ICS 364 lab is a general purpose lab in which no courses are scheduled It is open to students on weekdays and weekends MTuWThF 8 am 1 pm F 8 am 8 pm and SaSu 12 noon 6 pm Here is the most up to date Lab Schedule for all these labs InstructorOffice Hours I welcome students individually programming partners or small groups to come by and talk with me during my Office Hours If we need to talk but you cannot come during my office hours please email me so that we can arrange an alternative time to meet or better yet maybe we even can resolve the entire issue over email or using the MessageBoard Forums discussed below where other students can benefit from questions and answers I will be glad to talk with you about any of the ICS 31 32 33 courses Computer Science UCI or whatever else you want to discuss Although UCI is a large school ICS is a smaller school within it and ICS promotes opportunities for close faculty student interaction especially with instructors who are lecturers Unfortunately in my opinion not enough students take advantage of this opportunity at UCI I especially encourage students who are having problems in the course to visit me immediately I know that this is asking a lot but the payoff for recognizing the situation and acting on it immediately is tremendous The primary reason that students fail to thrive in programming courses is that they fall behind in their work often because of what is initially a small misunderstanding but because of the cumulative nature of this course even a small misunderstanding can quickly grow into a big one Often I can quickly diagnose and rectify such a problem one on one Getting help fast can critically affect your overall performance in this course many times I ve seen students start performing one grade level higher after coming in to get help during my office hours Unfortunately I teach hundreds of students during a typical quarter so my time is a bit limited But generally I have time during office hours to talk with all the students who visit So please come if you need help so we can try to work out your issues problems Of course you can also talk to your TA and Lab Tutors during your labs where resources and time are not so tight InstructorOnline Hours I hold online hours every weekday evening before class lab meets Monday Tuesday Wednesday and Thursday evenings from 9 pm 1 pm I will be logged onto AIM AOL Instant Messenger as richardepattis during these times If you are not already a member of AIM or a similar service that can message AIM users Sign Up for this service it is free Using this system you will be able to Instant Message me You can IM me with questions you can also cut paste code snippets into your message Please be aware that I may be having multiple conversations and therefore react more slowly than you might expect Instructor Course EMail If you have a small question one requiring little back and forth discussion and cannot directly contact me or any of staff please ask it by sending me email pattis ics uci edu It has been my experience that the act of writing a detailed description of a problem detailed enough so that someone not physically present can understand it often leads a student to his her own solution of the problem Frequently before I even get a chance to read my email I receive a second message saying Please ignore my earlier message I solved the problem myself I believe that the seeds of the solution are sown in the act of carefully composing the first email message Here is quote on my website about this phenomenon Another effective debugging technique is to explain your code to someone else This will often cause you to explain the bug to yourself Sometimes it takes no more than a few sentences followed by an embarrassed Never mind I see what s wrong Sorry to bother you This works remarkably well you can even use non programmers as listeners One university computer center kept a teddy bear near the help desk Students with mysterious bugs were required to explain them to the bear before they could speak to a human counselor B Kernighan D Pike in The Practice of Programming pp 123 Talking about programming is important One of the reasons that we program in pairs is to always have someone who you can to talk to about your code unlike the teddy bear someone who has an interest in getting your code to work and who might supply relevant feedback I try to answer email every few hours during the day I normally will not answer email sent after about 1 pm until early the next morning but I ll typically answer it by the next morning If you have problems late at night that you cannot resolve please send me email or post on the relevant MessageBoard Forum summarizing your problems and then go to work on something else or if it is really late go to sleep By planning to finish assignments early you can protect yourself against a big problem that arises at night and cannot be fixed until the next day you really don t want to have to fix such a problem the night that an assignment is due For most problems ones that are of general interest to the class I would prefer that you ask the question using a MessageBoard Forum see below In this way everyone in the class can see the question and its answer which I might provide or a a TA Lab Tutor or another student One of the few advantages of a big class is having lots of student activity on such forums leading to peer instruction Finally the Electronic Educational Environment EEE at UCI creates and maintains course wide mailing lists I have created a merged mailing list for all my ICS 33 students which also includes those students signed up for CSE 43 both in the Sammueli School of Engineering and the Donald Bren School of Information and Computer Science All members of our course staff and students can use this mailing list whose email address is ics33 W15 classes uci edu All messages sent via this discussion list are archived click here or see the Email Archive link on the course website Mostly student initiated questions discussions should use the forums mentioned below but sometimes students can use this email list to inform the instructor staff and other students about some timely issue e g the Checkmate Homework Dropoff system not responding to program submissions MessageBoard Forums If you have a question of general interest of interest to many students in the course not just you then you should post the question on one of the Forums on the EEE MessageBoard These forums allow students to ask questions or start discussions easily as well as supply answers or participate in the discsussion further For example if a lecture note programming assignment etc contains unclear or even contradictory information post a note about it to the appropriate forum asking for a clarification I or someone from my staff will read and reply to whatever questions are asked In fact if you read a question on a forum and know the answer or generally have something to contribute to the topic I encourage you to to post a reply to help resolve the problem even sooner Thus you can use the forums to discuss any course materials out of class Again forums are appropriate for questions relevant to most students in the course directly email me see above for questions of a more individualistic nature Obviously students should not use these forums to solicit nor post answers to take home quizzes programming assignments or anything else that would be interpreted as academic misconduct which is discussed in greater detail below But general informational questions and answers are fine I often find that students send me individual email when they should be posting on a forum think before you decide which to do It is an excellent idea to check these forums frequently to keep up to date on any coursewide discussions You can configure the forums to send you an email digest daily which contains links to new updated postings I received such a digest and typically review and answer all outstanding questions early each morning Staff TAs Lab Tutors I will have various UCI graduate and undergraduate staff members to assist me in running this course TAs will supervise the labs and be assisted by Lab Tutors In labs the Staff s primary responsibilities are to help you write and debug your programs backfilling Python material that you might need to know or understand better You can certainly discus programming and Python in general with these staff members TAs will also be responsible for grading programming assignments if you have a question about how your programs are graded please see the TA first and then come to see me if any issues remain TAs will also grade the weekly quizzes and in lab midterm and final exams While in lab the TAs and Tutors will help you diagnose any computer programming problems that you have and guide you toward a solution They will help you learn how to program by answering your questions but do not expect them to write your programs for you You should approach them with a well thought out question and expect to answer questions from them about your state of understanding the issues surrounding the question Sometimes when you come to the staff with a specific question they will show you how to solve a more general problem Be patient the staff are just trying to teach you how to recognize and solve these problems by yourself Classroom Information Before After Class I expect students to read the assigned lecture materials either before class as a way to preview the lecture or after class where the lecture previews the reading to get the most out of both cover the material twice Try to work out solutions to the assigned problems to prove that you have understood the material you can often test verify explore your solutions on the computer Here understanding means be able to use the information operationally to write programs If you have difficulty with a problem it indicates that you should probably go back over the related reading or certainly ask a question about it on the Forum One of the few advantages of a big class like this is the potental for peer teaching Because these problems are not graded feel free to discuss them but don t give away the answers for those still working on them working on exercises like these builds your programming muscles Students will be required to solve similar problems on almost weekly take home quizzes on which collaboration is NOT allowed Don t cheat yourself in this aspect of the course During Class I expect students to attend class daily During the 35 years that I have been teaching I have observed a strong correlation between attending class and understanding the material which ultimately improves student grades Having all the course materials online is a great resource but just as important is coming to class and paying attention once you are there and participating by volunteering information when you know it and asking questions when you are confused I will lecture during class but I prefer discussing the material and answering questions asking you questions about the material and amplifying on those topics that need further discussion I expect most lectures to be interactive with students participating I encourage you to participate by raising your hand sometimes I may finish the point I m making before calling on you but please keep your hand up if you want to speak If you have a question about the material it typically means that I have explained something incorrectly poorly or incompletely and that other students have or will soon have maybe right after they leave the classroom the same question So it would be best for all of us to correct the problem immediately in class by someone bringing it to my attention If you cannot ask in class post a question later on a MessageBoard Forum In summary this class runs on the Dershowitz principle Question authority but raise your hand first Class Decorum I expect students to attend class daily arriving on time The announcements made at the start of class are often very important On Wednesdays I will collect quizzes at the start of class I expect students to neither carry on private conversations nor distract other students by using their computers to answer email surf the web day trade stocks or perform any other activities unrelated to this course Ringing cell phones disrupt my lectures Unless you are responsible for someone s life your cell phone should be turned off Otherwise you should set it to operate in some silent mode as mine will be set if it rings silently please leave the class with a minimum of disruption to the rest of the students to answer it If your cell phone rings audibly in class you will be asked to leave class for that day Finally if you know that you must leave early please sit near a door so that you can exit quietly and without disturbing the class Overall please strive to be a considerate class member both to me and to your fellow students Testing Instruments and Grades Quizzes I will assign eight take home Quizzes to ensure that everyone is keeping pace learning the course material and is able to express themselves on technical matters both in English and Python Each will have problems similar to those assigned daily in class and similar to those on upcomming written exams working these quizzes is a major way to study for these exams These quizzes will be a take home instrument most will be distributed at the end of class on Friday and collected at the start of class on the following Wednesday During the weekend you will have as much time as you need to work on the quizzes The quizzes are open book you will be able to use any class materials or any other materials from the web to answer its questions But you may not communicate with anyone about these quizzes nor their solutions nor should you search for look at solutions to these specific problems on the web nor post problems or solutions on websites The quizzes are also open computer by that I mean that you may use a computer to check your work Programming Assignments I will assign five full programming assignments and one shorter one to ensure that everyone is getting the necessary hands on programming experience While working on these programs you will acquire a solid and fine tuned understanding of the course material as well as gain important process of programming skills Programs will typically be started in Lab on Tuesday and be due submitted electronically two weeks later on Tuesday evening at 11 3 pm Students will often be required to work in groups of two on programming assignments Such an approach is called Pair Programming On student from each pair submit all parts of the programming assignment with both their names on it in the code files Apart from your pair you can get general help from anyone Instructor TA Lab Tutors friends etc on programs But the best kind of help to get is oral where you describe the problem possibly showing your code briefly and then get an oral answer that you understand and translate into code In such instances you are learning You may neither copy nor transcribe written or orally any parts of another student s program nor have another student sit down and systematically correct your program When you submit your programs for grading you are expected to understand all parts of them and have improved your process of programming skills while writing and debugging them Students who complete their programs in this way will be well prepared for the In Lab Programming Exams students who get too much help on purpose or accidentally from their programming partners or others will have a more difficult time on these exams which can severely impact their grade You will submit your solutions to programming assignments through Checkmate special softare that records the time they are submitted You can resbumit your programs as many times as you want We will grade only the final submission You can read about Submitting Homework using Checkmate and practice using it in Program To promote good time management skills if you submit a program at least 24 hours before it is due you will receive 1 point of extra credit If you submit a program 48 hours early you will receive 2 points You can gain no more than 2 points of extra credit by early submission For a 6 point assignment this extra credit is equivalent to almost half a letter grade improvement I know from long teaching experience that students who work ahead of the deadlines learn more in a less stressed envrionment students working right up to a deadline are more concerned with getting the right answer and less concerned with learning anything On the other side of this coin I will not accept any late programs So you must turn in your work on time if you turn in a partially working program on time it will receive partial credit if you do not turn in anything on time then I must assume you did no work on the program and you will receive no credit Therefore always turn in whatever work you have finished by the official due time Written Exams I will assign one Midterm Written Exam and one Final Written Exam to ensure that everyone is successfully integrating all the material being taught Its problems will be similar to those assigned on homework and especially on weekly quizzes These written exams are closed book you will not be able use any notes nor class materials while taking these exams The best way to study for these exams is to do all the homework and quizzes and programs sometimes material from programming assignments appear on these exams and review these quizzes and programs Cramming will be of little help we will cover too much material during the quarter Students are expected to be able to do these problems both quickly and accurately The Final Written Exam is comprehensive it will cover material from the entire quarter but will concentrate on the material presented after the Midterm Written Exam which builds on the prior material In LabProgramming Exams I will assign two In Lab Programming Exams taken during labs to ensure that everyone can write and debug their own programs The first exam will focus on using iteration and Python s major data types the second on classes overloaded operators writing iterators and linked lists Of course you will have to know lots of general material about programming in Python to solve all these problems effectively as well as how to use the Eclipse IDE The programming exams themselves will be closed book but you will be able to access a copy of the standard Python library documentation I will grade these programs 9 on correctness inapropriate use of Python e g overly complicated or inefficient programs will be penalized at most 1 Solutions andReturned Graded Work I will create a EEE Drop Box for my solutions to all quizzes programming assignments and written programming exams soon after they are due which is another reason why I accept no late work I expect that students will carefully examine my solutions for immediate feedback Note that the best time for you to study my solution is the day that I distribute it having just spent a good amount of time working on your own solution The sooner you examine my solutions the more receptive you will be to learning something Finally my solutions sometimes contain mistakes if you are the first person to post a correction on a MessageBoard forum I will award you extra credit points the same number that I would take off for the mistake I will return graded quizzes with two class meetings after they are turned in since they are typically turned in on Monday I will typically return them on Friday I will return graded programs on the Monday following their submission do not submit a new programming assignments until you have received feedback on your previous submission Finally I will return written programming exams within a week of when they are given If you believe that I have graded any of your work incorrectly I encourage you to see me immediately about the discrepancy in the case of programming assignments see your TA first Such a discussion can have only positive outcomes either I will agree with you that you deserve more credit and I do want you to receive all the credit that you are due or you will come to understand the question program or solution better This is certainly a win win situation In any case carefully examine my solution before you come to see me Final Grades Your final grade is computed from your quizzes programming assignments written programming exams as follows Instrument Points EachPoints Total of Grade Quizzes8252 2 Programming Assignments1 51 3 5 5 28 28 In Lab Programming Exams21 2 2 Midterm Written Exam112 12 12 Final Exam12 2 2 Of these instruments the highest percentage of points is allocated to all the programming assignments 28 these are worth a bit less than the midterm and final exams combined 32 Note that about half the grade is based on written work 52 and half is based on programs 48 looked at another way about half of the grade is based on work done supervised in class 52 and half is based on work done in an unsupervised take home environment 48 Based on your percentage your final grade is computed as follows PercentageGradeGradiations9 1 AA 93 8 89 BB 83 or B 87 7 79 CC 73 or C 77 6 69 DD 63 or D 67 59 F Technically I round your score to an integer and then apply these rules So if your percentage is 86 7 it is rounded to 87 and therefore results in a grade of B This is straight calculation not based on a curve I tend to grade programming assignments liberally but quizzes and written exams conservatively As a rule of thumb I expect about 25 of the student to earn As about 25 to earn Bs about 25 to earn Cs and about 25 to earn Ds or Fs This course is NOT graded on a curve so these are only expectations from past course performance not mandated numbers your numbers can be higher or lower FYI last quarter the actual breakdown was better 3 As 27 Bs 18 Cs 25 Ds or Fs overall there were more As and more Bs so that there were still the expected number of 5 As and Bs actually 57 but fewer Cs as a result and the expected numbers of Ds or Fs Only after finishing 4 quizzes 2 programming assignments one in class programming exam and the midterm will you have a reasonable indication of your final course grade which of course will still heavily depend on the grades you earn afterward Academic Integrity No one comes into a class expecting to cheat but I would suggest that you become familiar Bren School of Information and Computer Sciences Academic Honesty policy which is just one of many of the many Undergraduate Policies with which you should become familiar The following information is my own restatement of this policy as it applies in my courses You will also be asked to read and sign a handout to acknowledge that you understand the Academic Integrity Contract that applies for this course Policy The decision as to whether a student has cheated depends on the intent of an assignment the ground rules specified by the instructor and the behavior of the student The following two guidelines help an instructor decide whether plagiarism has occurred in programming assignment which is the fuzziest area Plagiarism will be suspected if an assignment that calls for independent development and implementation of a program results in two or more solutions so similar that one solution can be converted to the other s by a series of simple transformations Plagiarism will be suspected if a student who completed an assignment cannot explain both the intricacies of the solution and the techniques used to generate that solution It is unreasonable to expect a complete definition of cheating that would cover all cases because each situation is important enough to merit careful individual scrutiny however it is helpful to have guidelines and precedents Here are some examples that are clearly cheating and clearly not cheating Examples of CHEATING Turning in someone else s work in whole or in part as your own with or without his her knowledge without it including a statement of collaboration in the solution Allowing another student to turn in your work in whole or in part as his her own without it including a statement of collaboration in the solution Turning in duplicate solution Even if all the comments are changed all the variables names are changed all the whitespace is changed and the code appears in a different order it is still the same program Several students pairs writing one assignment and turning in multiple copies all represented implicitly or explicitly as an individual student s pair s work without it including a statement of collaboration in the solution After receiving graded written work returning written work for regrading which has been altered Finding a solution to the same problem on the web and submitting it without explicit attribution in the solution note that you may not post problems on the web seeking a solution Stealing an examination or solution from the instructor Generally you should NOT EXAMINE by reading hardcopy or by copying a file the program of any other student nor should you let anyone examine or make a copy of your files Doing so can easily lead to an intended or unintended academic violation If you ever feel that after talking to someone about a program which is legal your solution will be very similar to theirs cite the consultation in the header comment in your program Doing so protects you from University disciplinary action although the instructor is free to grade the material as he she sees fit Examples of NOT CHEATING Turning in work done alone or with the help of the course s staff Submitting one assignment for a group of students if group work is explicitly permitted or required as in pair programming Getting or giving help about using the computers Discussing assignments to better understand them High level discussions of course material to better understand them Getting or giving help about correcting simple programming errors Again the key here is not studying verbatim someone else s code and then reproducing it as your own work It is too easy to copy such code without really understanding it Technically for programming assignments even understanding the resulting code is not enough if someone else wrote it you should also play an active role in synthesizing and debugging it The course is as much about skills as about knowledge Automatic Detection of Cheating Recently various cheating detection software systems have become widely available Some use search engines to compare selected portions of submitted papers to content on the web In the context of programming they compare each student s program to those submitted by his her classmates for this quarter and any previous quarters if the assignment has been repeated This software does not compare programs exactly it ignores format changes variable name changes and a variety of well know transformations that change the look of code but not its underlying logic Many courses in ICS use this software to spot potential cheating cases Once it identifies suspicious behavior instructors carefully examine the flagged code to make a final determination as to whether students will be prosecuted for cheating Often instructors can find additional evidence of cheating once this software points them to the simlar code Consequences ICS will not condone cheating by students in its classes When cheating is suspected instructors will take reasonable action to establish whether or not it has actually occurred If in the instructor s opinion it has the instructor will apply appropriate disciplinary policy In my courses for a typical case of cheating the student will be awarded negative credit for the assignment under the precept that not doing an assignment and receiving no points is better than cheating on it For particular egregious forms of cheating e g cheating on exams stealing another student s work so he she cannot submit it for credit harsher consequences may apply from loss of a full letter grade through immediate failure of the course up through suspension or expulsion from UCI Instructors must contact the student shortly after investigating evidence of academic dishonesty and evaluating the relevant work Notice of any action taken by an instructor must also be forwarded to the Associate Dean of Student Affairs ADSA in ICS and the ADSA of the student s home school if different These offices act as a repository for such information in case the student commits multiple infractions While the first infraction often results in just a grading penalty a second infraction typically results in suspension for one or more quarters Student Rights Please refer to The UCI Academic Senate Policies on Academic Honesty for all the details Final Words A Personal Statement Cheating undermines the fabric of education The atmosphere at UCI contrary to whatever opinions prejudices or superstitions you hold is one of fostering cooperation between faculty and students in the pursuit of learning knowledge and wisdom This course for example is graded on an absolute scale not a curve so helping other students when appropriate doesn t affect your grade And if a student cheats for a higher grade other students do not receive lower grades as a result Although it is embarrassing to fail an assignment getting caught cheating is much worse and some students get caught cheating for very few points I know though that students rarely think about getting caught But think about it I often see students break down and cry when they get caught cheating and only then start to realize the consequences of their actions Their stress level goes through the roof and it immediately affects both the academic and social aspects of their lives The process is distressing for me too although I must confess that I have been hardened by the number of times that I have had to go through it typically multiple times each quarter Pursuing these cases at the University level takes a lot of my time and reduces the time that I can spend on more important matters relating to my course and my students It is definitely a lose lose situation The 1 excuse that I hear for cheating is I was pressed for time so I cheated By carefully managing your time you can avoid this problem If you start working early enough and run into problems and you should expect to run into problems you will have time for the course staff to help you learn to solve them Also I understand that some students take this course only because it is a requirement for their major and that they have little intrinsic interest in the subject area this is not a valid excuse for cheating either I have seen too many instances recently where student A asks a friend student B for help specifically A asks to see B s quiz or code on paper or in a computer file Often A copies B s code with or without B s knowledge I understand that B feels pressure to give A help But B is doing A no favor if A s cheating is discovered B has made a bad situation A would receive no credit worse A receives negative credit and is reported to the Dean of Student Affairs And according to UCI s rules B is violating the Academic Integrity policy by these actions too I have seen friendships shattered because A copies B s code without telling B what was done and then both get prosecuted under UCI s rules A similar situation arises with cheating on quiz questions I have seen too many students cheat on one question on a quiz and receive a negative score for the whole quiz and letter to the Dean of Student Student Affairs when leaving the question blank would result in a small point deduction and no university action In my final statement here I ask you to pause and reflect on the consequences of choosing to cheat at UCI this includes the impacts that it will have on you your parents your siblings your friends and your fellow classmates at UCI Cheating is invariably the wrong decision Exceptions to Policies I have strict policies regarding attending classes taking quizzes submitting programs and taking in class exams but there are exceptions Exceptions to these policies include valid medical excuses if documented by your Doctor or Health Care Provider or any other officially excusable absence emergencies family problems religious observances job interviews or sports related trips etc if documented by the Office of the Dean in your College a Coach etc If you need such an exception bring a copy of the required documentation to me as soon as possible do it beforehand if you know about the problem in advance if you do not have advance warning do it on the next day that you are able to attend class or during my office hours I will need to keep the copy for my records of all excused absences Again if you have advance notice of a problem please notify me by email beforehand to discuss any ramifications ", "_id": "http://www.ics.uci.edu/~pattis/ICS-33/handouts/syllabus/syllabus.html", "title": "syllabus", "html": "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML//EN\">\r\n<html>\r\n<head>\r\n  <title>Syllabus</title>\r\n</head>\r\n\r\n<body BGCOLOR=\"white\">\r\n\r\n<center>\r\n<h1>Syllabus</h1>\r\n<p>\r\n<h2>ICS-33: Introduction to Programming\r\n<p>\r\n</center>\r\n\r\n\r\n\r\n<!-- Introduction -->\r\n\r\n<a name=\"Introduction\">\r\n<hr align=\"left\" width=\"33%\">\r\n<table cellspacing=\"0\" cellpadding=\"5\" border=\"0\" rules=\"none\" width=\"100%\">\r\n<tbody>\r\n<tr valign=\"top\">\r\n<td width =\"20%\"><b>Introduction</b></td>\r\n<td width =\"80%\">\r\nThis page contains material that will be important and useful throughout \r\n  the entire quarter.\r\nI consider it a contract with my students.\r\nPlease read it once now, and keep it handy for future reference.\r\nYou can search this page in your browser for specific information by \r\n  typing <b>Ctrl F</b> (on most browsers) and then entering the text that you\r\n  want to locate.\r\nMany questions that you might have about this course during the quarter are\r\n  already answered inside this document (so become familiar with its contents\r\n  and how to search it).\r\nIt also contains lots of good advice on getting the most out of this course.\r\n</td>\r\n</tbody>\r\n</table>\r\n\r\n\r\n\r\n<!-- Catalog Description -->\r\n\r\n<a name=\"Catalog\">\r\n<hr align=\"left\" width=\"33%\">\r\n<table cellspacing=\"0\" cellpadding=\"5\" border=\"0\" rules=\"none\" width=\"100%\">\r\n<tbody>\r\n<tr valign=\"top\">\r\n<td width =\"20%\"><b>Catalog Description</b></td>\r\n<td width =\"80%\">\r\n<i>\r\n\"Intermediate-level language features and programming concepts for larger, more\r\n complex, higher-quality software.\r\nFunctional programming, name spaces, modules, class protocols, inheritance,\r\n  iterators, generators, operator overloading, reflection. Analysis of time\r\n  and space efficiency.\"\r\n</i>\r\n<p>\r\n</td>\r\n</tbody>\r\n</table>\r\n\r\n\r\n\r\n<!-- Philosophy -->\r\n\r\n<a name=\"Philosophy\">\r\n<hr align=\"left\" width=\"33%\">\r\n<table cellspacing=\"0\" cellpadding=\"5\" border=\"0\" rules=\"none\" width=\"100%\">\r\n<tbody>\r\n<tr valign=\"top\">\r\n<td width =\"20%\"><b>Course Philosophy</b></td>\r\n<td width =\"80%\">\r\nMy goal in ICS-33 is for students to solidify their basic understanding of\r\n  Python and to extend their knowledge of Python and their ability to use the\r\n  language to solve problems.\r\nWe will explore new Python language features and re-examine old ones, in light\r\n  of what we learn.\r\nThe material we cover needs to be understood thoroughly, so that we can apply\r\n  it in complex and novel situations, not just memorized; by mastering the tool\r\n  that is Python, we can build all sorts of useful software with it.\r\n<p>\r\nWe will also cover some Computer Science topics that are closely related to\r\n  programming.\r\nIn addition, students will be introduced to some new tools:\r\n  modules (regular expressions, unnit tests) and software \r\n (Eclipse Integrated Developement Environment and its Debugger Perspective).\r\n<p>\r\nThe intellectual content of this course can be roughly categorized into three \r\n  main areas (although some topics bridge multiple areas):\r\n  Classes, Functions, and Computer Science.\r\n  <ul>\r\n    <li>Classes: operator overloading, (iterator) protocols, inheritance, and\r\n          self-referential classes.\r\n    <li>Functions: lambdas, generators, recursion, and functional programming.\r\n     <li>Computer Science: EBNF/regular expressions, decorators, analysis of\r\n           algorithms, unit-testing, and (Java and) static typing.\r\n   </ul>  \r\n<p>\r\nHere is a quick overview of the three programming class in UCI's three quarter\r\n  Introduction to Programming sequence.\r\nAll are taught in Python, and the combined time-on-task studying and\r\n  programming with this language should make students proficient at using it.\r\n<ol>\r\n<li>ICS-31: Introduction to Programming.\r\n    This course introduces the basics of the Python programming language and\r\n      how to develop programs in an Integrated Development Environment (Eclipse\r\n      or IDLE) using Python.\r\n<li>ICS-32: Programming With Software Libraries.\r\n    This course increases students' abilities to write more complicated\r\n      programs; it focuses on students learning how to read, understand, and\r\n      employ modules (and classes) from Python's library.\r\n<li>ICS-33: Intermediate Programming.\r\n    This course examines Python more carefully, giving students a more unified\r\n      look at the language and discussing some of its powerful features that\r\n      make sophisticated programming easier.\r\n    It also covers some programming-related Computer Science topics.\r\n</ol>\r\nA quick way to analogize these courses is: 31: learning to drive; 32: road\r\n  trips; 33: car mechanics.\r\n<p>\r\nAlthough we will mostly study <i>programming-in-the-small</i>, we will\r\n  concentrate on the technical and lingual issues of building large,\r\n  reliable programmed systems that are constructed from standard components.\r\nExpect to cover most relevant Python language features thoroughly, but also\r\n  to spend much time discussing less concrete -but ultimately more general and\r\n  important- aspects of computer programming.\r\nProgramming style is a particularly important topic: to understand\r\n  programming, we really need to develop appropriate aesthetics that allow\r\n  us to separate \"elegant\" programs from \"hacks\".\r\nAs in any writing activity, we must also learn to be self-critical of our own\r\n  creations, so that we can continually improve them; this skill is difficult\r\n  to acquire, and its importance extends well beyond the domain of\r\n  programming.\r\n<p>\r\nFinally, to become an expert in any discipline, we must master its\r\n   terminology.\r\nFluency with technical terms allows us to communicate -and even to think-\r\n   more accurately and concisely.\r\nTherefore, the materials in this course will define, illustrate, and\r\n   repeatedly use many important technical terms concerning programming.\r\nTake the time required to master them. An old Chinese proverb says,\r\n     \"The first step towards wisdom is calling things by their right names.\" \r\n</td>\r\n</tbody>\r\n</table>\r\n\r\n\r\n\r\n<!-- Textbook -->\r\n\r\n<a name=\"Textbook\">\r\n<hr align=\"left\" width=\"33%\">\r\n<table cellspacing=\"0\" cellpadding=\"5\" border=\"0\" rules=\"none\" width=\"100%\">\r\n<tbody>. \r\n<tr valign=\"top\">\r\n<td width =\"20%\"><b>Textbooks</b></td>\r\n<td width =\"80%\">\r\nThe primary sources for ICS-33 will come from materials that I have\r\n  written (and am continually updating).\r\nThese materials include readings, problem sets, quizzes, and programming\r\n  assignments (and a bunch of infrastructure material, like this syllabus).\r\nTypically, these materials will be shorter than chapters in a textbook, but\r\n  they are more densely packed with information; thus, you will still spend\r\n  about the same amount of time studying my note as you would reading a\r\n  textbook.\r\n<p>\r\nRecently ICS-31 and ICS-32 classes taught by other instructors have used the\r\n  following book: <b>Perkovic</b>, <i>Introduction to Computing Using Python: An\r\n  Application Development Focus</i>, Wiley, 2011.\r\nCopies should be available at the bookstore or online at\r\n<a href=\"http://www.amazon.com/Introduction-Computing-Using-Python-Application/dp/0470618469/ref=sr_1_1?ie=UTF8&qid=1363875463&sr=8-1&keywords=perkovic\">\r\nAmazon</a>,\r\n<p>\r\nHere are two Python books that are great resources for programmers.\r\n<ul>\r\n<li>I have required the following textbook for ICS-33, which is a huge,\r\n  extensive, but cheap introduction to Python for those who already understand\r\n  programming (a category you should be in).\r\nIt is a great reference book with many small examples; I frequently find myself\r\n  looking up the details of topics in my copy.\r\n<p>\r\n<b>Lutz</b>, <i>Learning Python (Fifth Edition)</i>, O'Reilly, 2013.\r\nCopies should be available at the bookstore or online at\r\n<a href=\"http://www.amazon.com/Learning-Python-Mark-Lutz/dp/1449355730/ref=sr_1_1?s=books&ie=UTF8&qid=1374505545&sr=1-1\" target=\"_blank\">\r\nAmazon</a>,\r\n<li>There is a companion book to this one that discusses and explores many of\r\n   Python's standard library modules.\r\n We will not use this book in this class, but it is another excellent book to\r\n   have on your shelf.\r\n<p>\r\n<b>Lutz</b>, <i>Programming Python (Fourth Edition)</i>, O'Reilly, 2011.\r\nCopies should be available at the bookstore or online at\r\n<a href=\"http://www.amazon.com/Programming-Python-Mark-Lutz/dp/0596158106/ref=la_B000APH2C4_1_1?ie=UTF8&qid=1363875708&sr=1-1\" target=\"_blank\">\r\nAmazon</a>,\r\n</ul>\r\nThese books are <!-also-> available new and used on the internet.\r\nSee <a href=\"http://www.directtextbook.com/\" target=\"_blank\">\r\n  DirectTextbook</a>, which crawls the web for cheap prices.\r\nDon't forget to account for shipping costs and delivery time if you don't\r\n  buy from the UCI bookstore.\r\n<p>\r\nFinally, there are many Python resources on the internet.\r\nOne goal of this class is to get you closer towards being able to find and\r\n  use relevant online information based on questions you have about Python.\r\n</td>\r\n</tbody>\r\n</table>\r\n\r\n\r\n\r\n<!-- Computing Platforms and Programming Environments -->\r\n\r\n<a name=\"ComputingPlatform\">\r\n<hr align=\"left\" width=\"33%\">\r\n<table cellspacing=\"0\" cellpadding=\"5\" border=\"0\" rules=\"none\" width=\"100%\">\r\n<tbody>\r\n<tr valign=\"top\">\r\n<td width =\"20%\"><b>Computing Platforms and Programming Environments</b></td>\r\n<td width =\"80%\">\r\nThe standard computing platforms for this course are\r\n  <ul>\r\n    <li>PCs running the Windows (7, 8, or a similar) Operating System (OS).\r\n    <li>Macintosh PCs running the OS X operating system\r\n    <li>Either PC running Linux.\r\n  </ul>\r\n\r\n<p>\r\nWe expect that ICS-33 students will use their own computers to complete their\r\n  programming assignments (sometimes working in groups of two: pair\r\n  programming).\r\nAll the software used in ICS-33 is available, for free, on the web: see below\r\n  for details.\r\n<p>\r\nThe programming environment that we will use is Eclipse: it is an Integrated\r\n  Development Environment (IDE),  including a project manager, editor,\r\n  interpreter, and debugger.\r\nWe will write all our programs in the Python programming language.\r\nTo run Eclipse with Python, you must first install Java (to run Eclipse), and\r\n  then Python, and then Eclipse itself.\r\nThis software, and others useful for the course, are available through the\r\n  <a href=\"../../../common/online.html\">Course Software</a>\r\n  link (see the heading <b>Main Software</b>, near the top).\r\nYou should try to follow these instructions, and download and install this\r\n  software yourself; if you are having difficulty, please bring your computer\r\n  to lab and ask our staff to help you with the installation.\r\n<p>\r\nTypically it takes only a few days before everyone has correctly downloaded and\r\n  installed the necessary software, and has started to learn how to use it\r\n  properly.\r\nUsing this software is integral to every programming assignment during the\r\n  quarter, so it is best to be aggressive and download, install, and start\r\n  mastering this software quickly.\r\n</td>\r\n</tbody>\r\n</table>\r\n\r\n\r\n\r\n<!-- Computers -->\r\n\r\n<a name=\"Computers\">\r\n<hr align=\"left\" width=\"33%\">\r\n<table cellspacing=\"0\" cellpadding=\"5\" border=\"0\" rules=\"none\" width=\"100%\">\r\n<tbody>\r\n<tr valign=\"top\">\r\n<td width =\"20%\"><b>ICS Computer Labs</b></td>\r\n<td width =\"80%\">\r\nWe expect students to do much (but not all) of their programming assignments\r\n  during their labs, which are scheduled for 4 hours per week.\r\nThese labs are staffed by TAs and Lab Tutors.\r\nI encourage all students to ask them questions on a regular basis and generally\r\n  engage them in a dialog about programming: learning to talk about programming\r\n  is an explicit goal of this course.\r\n<p>\r\nWhile most students will do their coursework in labs on their own machines,\r\n  the <a href=\"http://www.ics.uci.edu/~lab\">ICS Labs</a> also provide machines\r\n  with the correct software loaded.\r\nYou should follow these\r\n  <a href=\"http://www.ics.uci.edu/~lab/students/acct_activate.php\">\r\n  Activation Instructions</a> for your ICS Lab Account early in the quarter.\r\nSome students will use their own machines to run Eclipse and the lab machines\r\n  to read online Python documentation.\r\n<p>\r\nWhether or not you plan on doing your homework in a lab, you must activate your\r\n  ICS account and know how to use it for in-lab programming exams.\r\nDuring in-lab programming exams, you must write your programs on the PCs in our\r\n  labs, so you should learn to use these machines, even if you use your own\r\n  machine for all other coursework.\r\nOnce you start Eclipse, what computer you are on makes little difference:\r\n   PCs, Macs, and Linux systems operate similarly.\r\n<p>\r\nAlthough the machines in the ICS labs also provide some external storage space\r\n  (the <b>H</b> drive on a Unix system), it is an excellent idea to backup your\r\n  work either electronically or using USB memory, whether you are using your\r\n  own computer or the computers in our lab.\r\n<p>\r\nFinally, the <b>ICS 364</b> lab is a general purpose lab in which no courses\r\n  are scheduled.\r\nIt is open to students on weekdays and weekends:\r\n   MTuWThF 8:00am - 10:00pm,\r\n   F 8:00am - 8:00pm,\r\n   and SaSu 12:00noon - 6:00pm.\r\nHere is the most up to date\r\n  <a href=\"http://www.ics.uci.edu/~lab/lab_schedule/index.php\">\r\n  Lab Schedule</a> for all these labs.\r\n</td>\r\n</tbody>\r\n</table>\r\n\r\n\r\n<!-- Office Hours -->\r\n\r\n<a name=\"OfficeHours\">\r\n<hr align=\"left\" width=\"33%\">\r\n<table cellspacing=\"0\" cellpadding=\"5\" border=\"0\" rules=\"none\" width=\"100%\">\r\n<tbody>\r\n<tr valign=\"top\">\r\n<td width =\"20%\"><b>Instructor<br>Office Hours</b></td>\r\n<td width =\"80%\">\r\nI welcome students (individually, programming partners, or small groups), to\r\n  come by and talk with me during my Office Hours.\r\nIf we need to talk, but you cannot come during my office hours, please email\r\n  me so that we can arrange an alternative time to meet; or better yet, maybe\r\n  we even can resolve the entire issue over email (or using the MessageBoard\r\n  Forums, discussed below, where other students can benefit from questions and\r\n  answers).\r\n<p>\r\nI will be glad to talk with you about any of the ICS-31/-32/-33 courses, \r\n   Computer Science, UCI, or whatever else you want to discuss.\r\nAlthough UCI is a large school, ICS is a smaller school within it, and ICS\r\n  promotes opportunities for close faculty-student interaction, especially\r\n  with instructors who are lecturers.\r\nUnfortunately, in my opinion, not enough students take advantage of this\r\n  opportunity at UCI.\r\n<p>\r\nI especially encourage students who are having problems in the course to visit\r\n  me immediately; I know that this is asking a lot, but the payoff for\r\n  recognizing the situation and acting on it immediately is tremendous.\r\nThe primary reason that students fail to thrive in programming courses is that\r\n  they fall behind in their work -often because of what is initially a small\r\n  misunderstanding; but, because of the cumulative nature of this course,\r\n  even a small misunderstanding can quickly grow into a big one.\r\nOften, I can quickly diagnose and rectify such a problem one-on-one.\r\nGetting help fast can critically affect your overall performance in\r\n  this course: many times I've seen students start performing one grade\r\n  level higher after coming in to get help during my office hours.\r\n<p>\r\nUnfortunately, I teach hundreds of students during a typical quarter, so my\r\n  time is a bit limited.\r\nBut, generally I have time during office hours to talk with all the students\r\n  who visit.\r\nSo, please come if you need help so we can try to work out your issues/problems.\r\nOf course, you can also talk to your TA and Lab Tutors during your labs, where\r\n  resources and time are not so tight.\r\n</td>\r\n</tbody>\r\n</table>\r\n\r\n\r\n<!-- Online Hours -->\r\n\r\n<a name=\"OnlineHours\">\r\n<hr align=\"left\" width=\"33%\">\r\n<table cellspacing=\"0\" cellpadding=\"5\" border=\"0\" rules=\"none\" width=\"100%\">\r\n<tbody>\r\n<tr valign=\"top\">\r\n<td width =\"20%\"><b>Instructor<br>Online Hours</b></td>\r\n<td width =\"80%\">\r\nI hold online hours every weekday evening before class/lab meets: Monday,\r\n  Tuesday, Wednesday and Thursday  evenings from 9:00pm-10:00pm.\r\nI will be logged  onto AIM (AOL Instant Messenger) as <b>richardepattis</b>\r\n  during these times.\r\n<p>\r\nIf you are not already a member of AIM (or a similar service that can message\r\n  AIM users)  <a href=\"http://www.aim.com/\" target=\"_blank\">Sign Up</a> for\r\n  this service (it is free).\r\nUsing this system, you will be able to Instant Message me.\r\n<!---, as well as use\r\n   an audio (voice) connection if you have a headset with a microphone.\r\n-->\r\nYou can IM me with questions; you can also cut/paste code snippets into your\r\n  message.\r\nPlease be aware that I may be having multiple conversations, and therefore\r\n  react more slowly than you might expect.\r\n</td>\r\n</tbody>\r\n</table>\r\n\r\n\r\n<!-- EMail -->\r\n\r\n<a name=\"Email\">\r\n<hr align=\"left\" width=\"33%\">\r\n<table cellspacing=\"0\" cellpadding=\"5\" border=\"0\" rules=\"none\" width=\"100%\">\r\n<tbody>\r\n<tr valign=\"top\">\r\n<td width =\"20%\"><b>Instructor/Course<br> EMail</b></td>\r\n<td width =\"80%\">\r\nIf you have a small question (one requiring little back-and-forth discussion),\r\n  and cannot directly contact me or any of staff, please ask it by sending me\r\n  email (<a href=\"mailto:pattis@ics.uci.edu\">pattis@ics.uci.edu</a>).\r\nIt has been my experience that the act of writing a detailed description of a\r\n  problem (detailed enough so that someone not physically present can\r\n  understand it) often leads a student to his/her own solution of the problem.\r\nFrequently, before I even get a chance to read my email, I receive a second\r\n  message saying,  \"Please ignore my earlier message, I solved the problem\r\n   myself.\"\r\nI believe that the seeds of the solution are sown in the act of carefully\r\n  composing the first email message.\r\nHere is quote on my website about this phenomenon\r\n<p>\r\n<table width =\"100%\" cellspacing=\"0\" cellpadding=\"1\" border=\"1\" rules=\"all\">\r\n<tr><td align=\"left\" valign=\"top\">\r\nAnother effective [debugging] technique is to explain your code to someone\r\n  else.\r\nThis will often cause you to explain the bug to yourself.\r\nSometimes it takes no more than a few sentences, followed by an embarrassed\r\n  \"Never mind, I see what's wrong. Sorry to bother you.\"\r\nThis works remarkably well; you can even use non-programmers as listeners.\r\nOne university computer center kept a teddy bear near the help desk.\r\nStudents with mysterious bugs were required to explain them to the bear before\r\n  they could speak to a human counselor. \r\n<p align=\"right\"><i>- B. Kernighan & D. Pike\r\n  (in \"The Practice of Programming\" pp. 123)</i></p></td></tr>\r\n</table>\r\n<p>\r\nTalking about programming is important.\r\nOne of the reasons that we program in pairs is to always have someone who you\r\n  can to talk to about your code; unlike the teddy bear, someone who has an\r\n  interest in getting your code to work, and who might supply relevant feedback.\r\n<p>\r\nI try to answer email every few hours during the day.\r\nI normally will not answer email sent after about 10:00pm until early the next\r\n  morning (but I'll typically answer it by the next morning).\r\nIf you have problems late at night that you cannot resolve, please send me\r\n  email (or post on the relevant MessageBoard Forum) summarizing your problems,\r\n  and then go to work on something else (or if it is really late, go to sleep).\r\nBy planning to finish assignments early, you can protect yourself against a big\r\n  problem that arises at night and cannot be fixed until the next day: you\r\n  really don't want to have to fix such a problem the night that an assignment\r\n  is due.\r\n<p>\r\nFor most problems -ones that are of general interest to the class- I would\r\n  prefer that you ask the question using a MessageBoard Forum (see below).\r\nIn this way, everyone in the class can see the question and its answer\r\n  (which I might provide, or a a TA/Lab Tutor, or another student).\r\nOne of the few advantages of a big class is having lots of student activity on\r\n  such forums, leading to peer-instruction.\r\n<p>\r\nFinally, the Electronic Educational Environment (EEE) at UCI creates and\r\n  maintains course-wide mailing lists.\r\nI have created a \"merged\" mailing list for all my ICS-33 students (which also\r\n  includes those students signed up for CSE 43, both in the Sammueli School of\r\n  Engineering and the Donald Bren School of Information and Computer Science).\r\nAll members of our course (staff and students) can use this mailing list, whose\r\n  email address is <b>ics33-W15@classes.uci.edu</b>\r\nAll messages sent via this discussion list are archived: click\r\n  <a href=\"https://eee.uci.edu/classmail/w15/36640/\" target=\"_blank\">\r\n    here</a> or see the <b>Email Archive</b> link on the course website.\r\nMostly student-initiated questions/discussions should use the forums mentioned\r\n  below, but sometimes students can use this email list to inform the\r\n  instructor, staff, and other students about some timely issue: e.g., the\r\n  Checkmate Homework Dropoff system not responding to program submissions.\r\n</td>\r\n</tbody>\r\n</table>\r\n\r\n\r\n<!-- Bboard -->\r\n\r\n<a name=\"Bboard\">\r\n<hr align=\"left\" width=\"33%\">\r\n<table cellspacing=\"0\" cellpadding=\"5\" border=\"0\" rules=\"none\" width=\"100%\">\r\n<tbody>\r\n<tr valign=\"top\">\r\n<td width =\"20%\"><b>MessageBoard Forums</b></td>\r\n<td width =\"80%\">\r\n<p>\r\nIf you have a question of general interest (of interest to many students in the\r\n  course, not just you), then you should post the question on one of the\r\n  <a href=\"https://eee.uci.edu/toolbox/messageboard/m16275/\" target=\"_blank\">\r\n Forums</a> on the EEE MessageBoard.\r\nThese forums allow students to ask questions (or start discussions) easily, as\r\n  well as supply answers (or participate in the discsussion further).\r\nFor example, if a lecture note, programming assignment, etc. contains unclear\r\n  (or even contradictory) information, post a note about it to the appropriate\r\n  forum, asking for a clarification.\r\nI, or someone from my staff will read and reply to whatever questions are\r\n  asked.\r\nIn fact, if you read a question on a forum, and know the answer -or generally\r\n  have something to contribute to the topic- I encourage you to to post a reply\r\n  to help resolve the problem even sooner.\r\nThus, you can use the forums to discuss any course materials out-of-class.\r\n<p>\r\nAgain, forums are appropriate for questions relevant to most students in the\r\n  course; directly email me (see above) for questions of a more\r\n  individualistic nature.\r\nObviously students should not use these forums to solicit nor post answers to\r\n  take-home quizzes, programming assignments, or anything else that would be\r\n  interpreted as academic misconduct (which is discussed in greater detail\r\n  below).\r\nBut general informational questions and answers are fine.\r\nI often find that students send me individual email when they should be\r\n  posting on a forum; think before you decide which to do.\r\n<p>\r\nIt is an excellent idea to check these forums frequently, to keep up to date\r\n  on any coursewide discussions.\r\nYou can configure the forums to send you an email digest daily, which contains\r\n  links to new/updated postings.\r\nI received such a digest, and typically review and answer all outstanding\r\n  questions early each morning.\r\n</td>\r\n</tbody>\r\n</table>\r\n\r\n\r\n\r\n<!-- Staff -->\r\n\r\n<a name=\"CAs\">\r\n<hr align=\"left\" width=\"33%\">\r\n<table cellspacing=\"0\" cellpadding=\"5\" border=\"0\" rules=\"none\" width=\"100%\">\r\n<tbody>\r\n<tr valign=\"top\">\r\n<td width =\"20%\"><b>Staff: TAs, <!--Reader,--> Lab Tutors</b></td>\r\n<td width =\"80%\">\r\nI will have various UCI graduate and undergraduate staff members to assist me \r\n in running this course.\r\n<b>TA</b>s will supervise the labs and be assisted by <b>Lab Tutors</b>.\r\nIn labs, the Staff's primary responsibilities are to help you write and debug\r\n  your programs, backfilling Python material that you might need to know or\r\n  understand better.\r\nYou can certainly discus programming and Python in general with these staff\r\n  members.\r\nTAs will also be responsible for grading programming assignments; if you have\r\n  a question about how your programs are graded, please see the TA first,\r\n  and then come to see me if any issues remain.\r\nTAs will also grade the weekly quizzes and in-lab, midterm, and final exams.\r\n<p>\r\nWhile in lab, the TAs and Tutors will help you diagnose any\r\n  computer/programming problems that you have and guide you toward a solution.\r\nThey will help you learn how to program by answering your questions; but, do\r\n  not expect them to write your programs for you.\r\nYou should approach them with a well thought-out question, and expect to answer\r\n  questions from them about your state of understanding the issues surrounding\r\n  the question.\r\nSometimes when you come to the staff with a specific question, they will show\r\n  you how to solve a more general problem.\r\nBe patient; the staff are just trying to teach you how to recognize and solve\r\n  these problems by yourself.\r\n<p>\r\n</td>\r\n</tbody>\r\n</table>\r\n\r\n\r\n\r\n<!-- Classroom Information-->\r\n\r\n<a name = \"ClassroomInformation\">\r\n<hr align=\"left\" width=\"33%\">\r\n<h3>Classroom Information</h3>\r\n<table cellspacing=\"0\" cellpadding=\"5\" border=\"0\" rules=\"none\" width=\"100%\">\r\n<tbody>\r\n<tr valign=\"top\">\r\n<td width =\"20%\"><a name=\"Before\"><b>Before/After Class</b></td>\r\n<td width =\"80%\">\r\n\r\nI expect students to read the assigned lecture materials, either before class\r\n  (as a way to preview the lecture) or after class (where the lecture previews\r\n  the reading), to get the most out of both: cover the material twice.\r\nTry to work out solutions to the assigned problems, to prove that you have\r\n  understood the material; you can often test/verify/explore your solutions on\r\n  the computer.\r\nHere <b>understanding</b> means \"be able to use the information operationally\r\n  to write programs\".\r\nIf you have difficulty with a problem, it indicates that you should probably\r\n  go back over the related reading -or certainly ask a question about it on the\r\n  Forum.\r\nOne of the few advantages of a big class like this is the potental for\r\n   peer-teaching.\r\n<p>\r\nBecause these problems are not graded, feel free to discuss them, but don't\r\n  give away the answers for those still working on them: working on exercises\r\n  like these builds your programming muscles.\r\nStudents will be required to solve similar problems on (almost) weekly\r\n  take-home quizzes, on which collaboration is NOT allowed.\r\nDon't cheat yourself in this aspect of the course.\r\n</td>\r\n</tbody>\r\n</table>\r\n<p>\r\n\r\n<table cellspacing=\"0\" cellpadding=\"5\" border=\"0\" rules=\"none\" width=\"100%\">\r\n<tbody>\r\n<tr valign=\"top\">\r\n<td width =\"20%\"><a name=\"During\"><b>During Class</b></td>\r\n<td width =\"80%\">\r\nI expect students to attend class daily.\r\nDuring the 35+ years that I have been teaching, I have observed a strong\r\n  correlation between attending class and understanding the material (which \r\n  ultimately improves student grades).\r\nHaving all the course materials online is a great resource, but just as\r\n  important is coming to class -and paying attention, once you are there-\r\n  and participating by volunteering information when you know it and asking\r\n  questions when you are confused.\r\n<p>\r\nI will lecture during class, but I prefer discussing the material and answering\r\n  questions; asking you questions about the material, and amplifying on those\r\n  topics that need further discussion.\r\nI expect most \"lectures\" to be interactive, with students participating.\r\n<p>\r\nI encourage you to participate by raising your hand; sometimes I may finish\r\n  the point I'm making before calling on you, but please keep your hand up if\r\n  you want to speak.\r\nIf you have a question about the material, it typically means that I have\r\n  explained something incorrectly, poorly, or incompletely, and that other\r\n  students have (or will soon have, maybe right after they leave the classroom)\r\n  the same question.\r\nSo, it would be best for all of us to correct the problem immediately in class\r\n  by someone bringing it to my attention.\r\nIf you cannot ask in class, post a question later on a MessageBoard Forum.\r\nIn summary, this class runs on the Dershowitz principle:\r\n  \"Question authority; but raise your hand first\".\r\n</td>\r\n</tbody>\r\n</table>\r\n<p>\r\n\r\n\r\n<table cellspacing=\"0\" cellpadding=\"5\" border=\"0\" rules=\"none\" width=\"100%\">\r\n<tbody>\r\n<tr valign=\"top\">\r\n<td width =\"20%\"><a name=\"Decorum\"><b>Class Decorum</b></td>\r\n<td width =\"80%\">\r\nI expect students to attend class daily, arriving on time.\r\nThe announcements made at the start of class are often very important.\r\nOn Wednesdays I will collect quizzes at the start of class.\r\nI expect students to neither carry on private conversations, nor distract\r\n  other students by using their computers to answer email, surf the web, day\r\n  trade stocks, or perform any other activities unrelated to this course.\r\n<p>\r\nRinging cell phones disrupt my lectures.\r\nUnless you are responsible for someone's life, your cell phone should be\r\n  turned off.\r\nOtherwise, you should set it to operate in some silent mode (as mine will be\r\n  set); if it rings silently, please leave the class, with a minimum of\r\n  disruption to the rest of the students, to answer it.\r\nIf your cell phone rings audibly in class, you will be asked to leave class\r\n  for that day.\r\nFinally, if you know that you must leave early, please sit near a door,\r\n  so that you can exit quietly and without disturbing the class.\r\n<p>\r\nOverall, please strive to be a considerate class member, both to me and to\r\n  your fellow students.\r\n</td>\r\n</tbody>\r\n</table>\r\n<p>\r\n\r\n<!-- Grades-->\r\n\r\n<a name = \"Grades\">\r\n<hr align=\"left\" width=\"33%\">\r\n<h3>Testing Instruments and Grades</h3>\r\n<table cellspacing=\"0\" cellpadding=\"5\" border=\"0\" rules=\"none\" width=\"100%\">\r\n<tbody>\r\n<tr valign=\"top\">\r\n<td width =\"20%\"><a name=\"Quizzes\"><b>Quizzes</b></td>\r\n<td width =\"80%\">\r\nI will assign eight take-home Quizzes to ensure that everyone is keeping pace\r\n learning the course material and is able to express themselves on technical\r\n  matters both in English and Python.\r\nEach will have problems similar to those assigned daily in class (and similar\r\n  to those on upcomming written exams; working these quizzes is a major way to\r\n  \"study\" for these exams).\r\nThese quizzes will be a take-home instrument: most will be distributed at the\r\n  end of class on Friday and collected at the start of class on the following\r\n  Wednesday.\r\nDuring the weekend, you will have as much time as you need to work on the\r\n  quizzes.\r\n<p>\r\nThe quizzes are open-book: you will be able to use any class materials, or any\r\n  other materials from the web, to answer its questions.\r\nBut, you may not communicate with anyone about these quizzes nor their\r\n  solutions; nor should you search for/look at solutions to these specific\r\n  problems on the web (nor post problems or solutions on websites).\r\nThe quizzes are also open-computer: by that I mean that you may use a computer\r\n  to check your work.\r\n</td>\r\n</tbody>\r\n</table>\r\n<p>\r\n\r\n\r\n<table cellspacing=\"0\" cellpadding=\"5\" border=\"0\" rules=\"none\" width=\"100%\">\r\n<tbody>\r\n<tr valign=\"top\">\r\n<td width =\"20%\"><a name=\"ProgrammingAssignments\"><b>Programming Assignments</b></td>\r\n<td width =\"80%\">\r\nI will assign five full programming assignments (and one shorter one) to ensure\r\n  that everyone is getting the necessary hands-on programming experience.\r\nWhile working on these programs, you will acquire a solid and fine-tuned\r\n  understanding of the course material as well as gain important\r\n  <i>process of programming</i> skills.\r\nPrograms will typically be started in Lab on Tuesday, and be due (submitted\r\n  electronically) two weeks later, on Tuesday evening at 11:30pm.\r\n<p>\r\nStudents will often be required to work in groups of two on programming\r\n  assignments.\r\nSuch an approach is called\r\n  <a href=\"../../../common/handouts/pairprogramming.html\" target =\"_top\">\r\n  Pair Programming</a>.\r\nOn student from each pair submit all parts of the programming assignment\r\n  with both their names on it (in the code files).\r\nApart from your pair, you can get <b>general</b> help from anyone (Instructor,\r\n  TA, Lab Tutors, friends, etc.) on programs.\r\nBut, the best kind of help to get is oral: where you describe the problem,\r\n  possibly showing your code briefly, and then get an oral answer that you\r\n  understand and translate into code.\r\nIn such instances, you are learning. \r\n<p>\r\n<b>You may neither copy nor transcribe (written or orally) any parts of another\r\n    student's program, nor have another student sit down and systematically\r\n    correct your program.</b> \r\n<p>\r\nWhen you submit your programs for grading, you are expected to understand all\r\n  parts of them and have improved your <i>process of programming</i> skills\r\n  while writing and debugging them.\r\nStudents who complete their programs in this way will be well prepared for\r\n  the In-Lab Programming Exams; students who get too much help (on purpose,\r\n  or accidentally) from their programming partners or others will have a more\r\n   difficult time on these exams, which can severely impact their grade.    \r\n<p>\r\nYou will submit your solutions to programming assignments through Checkmate, \r\n  special softare that records the time they are submitted.\r\nYou can resbumit your programs as many times as you want.\r\nWe will grade only the final submission.\r\nYou can read about\r\n  <a href=\"../../../common/handouts/checkmate/index.html\" target =\"main\">\r\n  Submitting Homework using Checkmate</a> and practice using it in Program #0.\r\n<p>\r\nTo promote good time management skills, if you submit a program at least 24\r\n  hours  before it is due, you will receive 1 point of extra credit.\r\nIf you submit a program 48 hours early, you will receive 2 points.\r\nYou can gain no more than 2 points of extra credit by early submission.\r\nFor a 60 point assignment, this extra credit is equivalent to almost half a\r\n  letter grade improvement.\r\n<p>\r\nI know from long teaching experience that students who work ahead of the\r\n  deadlines learn more, in a less stressed envrionment: students working right\r\n  up to a deadline are more concerned with getting the right answer and less\r\n  concerned with learning anything.\r\nOn the other side of this coin, I will not accept any late programs.\r\nSo, you must turn in your work on time: if you turn in a partially working\r\n  program on time, it will receive partial credit; if you do not turn in\r\n  anything on time, then I must assume you did no work on the program, and you\r\n  will receive no credit.\r\nTherefore, always turn in whatever work you have finished by the official due\r\n  time.\r\n</td>\r\n</tbody>\r\n</table>\r\n<p>\r\n\r\n\r\n<table cellspacing=\"0\" cellpadding=\"5\" border=\"0\" rules=\"none\" width=\"100%\">\r\n<tbody>\r\n<tr valign=\"top\">\r\n<td width =\"20%\"><a name=\"WrittenExams\"><b>Written Exams</b></td>\r\n<td width =\"80%\">\r\nI will assign one Midterm Written Exam and one Final Written Exam to\r\n  ensure that everyone is successfully integrating all the material being\r\n  taught.\r\nIts problems will be similar to those assigned on homework, and especially on\r\n  weekly quizzes.\r\nThese written exams are closed-book: you will not be able use any notes nor\r\n  class materials while taking these exams.\r\n<p>\r\nThe best way to study for these exams is to do all the homework and quizzes \r\n  (and programs -sometimes material from programming assignments appear on\r\n  these exams) and review these quizzes (and programs).\r\nCramming will be of little help: we will cover too much material during\r\n  the quarter.\r\nStudents are expected to be able to do these problems both quickly and\r\n  accurately.\r\n<p>\r\nThe Final Written Exam is comprehensive: it will cover material from the entire\r\n  quarter (but will concentrate on the material presented after the Midterm\r\n  Written Exam, which builds on the prior material).\r\n</td>\r\n</tbody>\r\n</table>\r\n<p>\r\n\r\n<table cellspacing=\"0\" cellpadding=\"5\" border=\"0\" rules=\"none\" width=\"100%\">\r\n<tbody>\r\n<tr valign=\"top\">\r\n<td width =\"20%\"><a name=\"ProgrammingExams\"><b>In-Lab<br>Programming Exams</b></td>\r\n<td width =\"80%\">\r\nI will assign two In-Lab Programming Exams (taken during labs) to ensure that\r\n  everyone can write (and debug) their own programs.\r\nThe first exam will focus on using iteration and Python's major data types; the\r\n  second on classes, overloaded operators, writing iterators, and linked lists.\r\nOf course, you will have to know lots of general material about programming\r\n  in Python to solve all these problems effectively (as well as how to use the\r\n  Eclipse IDE).\r\n<p>\r\nThe programming exams themselves will be closed-book; but, you will be able\r\n  to access a copy of the standard Python library documentation.\r\nI will grade these programs 90% on correctness: inapropriate use of Python\r\n  -e.g., overly complicated or inefficient programs- will be penalized at most\r\n 10%.\r\n</td>\r\n</tbody>\r\n</table>\r\n<p>\r\n\r\n<table cellspacing=\"0\" cellpadding=\"5\" border=\"0\" rules=\"none\" width=\"100%\">\r\n<tbody>\r\n<tr valign=\"top\">\r\n<td width =\"20%\"><a name=\"SolutionsReturnedWork\"><b>Solutions and<br>Returned (Graded) Work</b></td>\r\n<td width =\"80%\">\r\nI will create a \r\n\r\n  <a href=\"https://eee.uci.edu/toolbox/dropbox/index.php?op=openfolder&folder=390632\" target=\"_blank\">EEE Drop Box</a> for my solutions to all quizzes,\r\n  programming assignments and written/programming exams soon after they are due\r\n  (which is another reason why I accept no late work).\r\nI expect that students will carefully examine my solutions for immediate\r\n  feedback.\r\nNote that the best time for you to study my solution is the day that I\r\n  distribute it, having just spent a good amount of time working on your own\r\n  solution.\r\nThe sooner you examine my solutions, the more receptive you will be to learning\r\n  something.\r\nFinally, my solutions sometimes contain mistakes: if you are the first person\r\n  to post a correction on a MessageBoard forum, I will award you extra credit \r\n points: the same number that I would take off for the mistake.\r\n<p>\r\nI will return graded quizzes with two class meetings after they are turned in;\r\n  since they are typically turned in on Monday, I will typically return them on\r\n  Friday.\r\nI will return graded programs on the Monday following their submission; do not\r\n  submit a new programming assignments until you have received feedback on your\r\n  previous submission.\r\nFinally, I will return written/programming exams within a week of when they\r\n  are given.\r\n<p>\r\nIf you believe that I have graded any of your work incorrectly, I encourage you\r\n  to see me immediately about the discrepancy (in the case of programming\r\n  assignments, see your TA first).\r\nSuch a discussion can have only positive outcomes: either I will agree with you\r\n that you deserve more credit (and, I do want you to receive all the credit\r\n that you are due), or you will come to understand the question, program, or\r\n  solution better.\r\nThis is certainly a win-win situation.\r\nIn any case, carefully examine my solution before you come to see me.\r\n</td>\r\n</tbody>\r\n</table>\r\n<p>\r\n\r\n\r\n<table cellspacing=\"0\" cellpadding=\"5\" border=\"0\" rules=\"none\" width=\"100%\">\r\n<tbody>\r\n<tr valign=\"top\">\r\n<td width =\"20%\"><a name=\"FinalGrades\"><b>Final Grades</b></td>\r\n<td width =\"80%\">\r\nYour final grade is computed from your <!-- in-class participation,-->\r\n  quizzes, programming assignments, written/programming exams as follows.\r\n<p>\r\n<table cellspacing=\"0\" cellpadding=\"5\" border=\"1\" rules=\"all\">\r\n<thead>\r\n<tr><th>Instrument</th><th>#</th><th>Points Each</th><th>Points Total</th><th>% of Grade</th>\r\n</thead>\r\n<tbody>\r\n\r\n<tr align=\"right\"><td align=\"left\">\r\nQuizzes</td><td>8</td><td>25</td><td>200</td><td>20%</td>\r\n\r\n<tr align=\"right\"><td align=\"left\">\r\nProgramming Assignments</td><td>1 + 5</td><td>1@30+5@50</td><td>280</td><td>28%</td>\r\n\r\n<tr align=\"right\"><td align=\"left\">\r\nIn-Lab Programming Exams</td><td>2</td><td>100</td><td>200</td><td>20%</td>\r\n\r\n<tr align=\"right\"><td align=\"left\">\r\nMidterm Written Exam</td><td>1</td><td>120</td><td>120</td><td>12%</td>\r\n\r\n<tr align=\"right\"><td align=\"left\">\r\nFinal Exam</td><td>1</td><td>200</td><td>200</td><td>20%</td>\r\n</tbody>\r\n</table>\r\n<p>\r\nOf these instruments, the highest percentage of points is allocated to all the\r\n  programming assignments: 28%; these are worth a bit less than the midterm\r\n  and final exams combined: 32%.\r\nNote that about half the grade is based on written work (52%) and half is based\r\n  on programs (48%); looked at another way, about half of the grade is based on\r\n  work done supervised in class (52%) and half is based on work done in an\r\n  unsupervised (take-home) environment (48%).\r\n<p>\r\nBased on your percentage, your final grade is computed as follows.\r\n<p>\r\n<table cellspacing=\"0\" cellpadding=\"5\" border=\"1\" rules=\"all\">\r\n<thead>\r\n<tr><th>Percentage</th><th>Grade</th><th>Gradiations</th>\r\n</thead>\r\n<tbody>\r\n<tr align=\"right\"><td>90%-100%</td><td>A</td><td>A- (&lt;93)</td>\r\n<tr align=\"right\"><td>80%-&nbsp 89%</td><td>B</td>\r\n  <td>B-(&lt;83)&nbsp; or &nbsp; B+(&ge;87)</td>\r\n<tr align=\"right\"><td>70%-&nbsp 79%</td><td>C</td>\r\n  <td>C-(&lt;73)&nbsp; or &nbsp; C+(&ge;77)</td>\r\n<tr align=\"right\"><td>60%-&nbsp 69%</td><td>D</td>\r\n  <td>D-(&lt;63)&nbsp; or &nbsp; D+(&ge;67)</td>\r\n<tr align=\"right\"><td>&nbsp 0%-&nbsp 59%</td><td>F</td><td></td>\r\n</tbody>\r\n</table>\r\n<p>\r\nTechnically, I round your score to an integer and then apply these rules.\r\nSo, if your percentage is 86.7%, it is rounded to 87% and therefore results\r\n  in a grade of B+.\r\n<p>\r\nThis is straight calculation, not based on a curve.\r\nI tend to grade programming assignments liberally, but quizzes and\r\n  written exams conservatively.\r\nAs a rule of thumb, I expect about 25% of the student to earn As, about 25% to\r\n  earn Bs, about 25% to earn Cs, and about 25% to earn Ds or Fs.\r\nThis course is NOT graded on a curve, so these are only expectations from\r\n  past course performance, not mandated numbers; your numbers can \r\n  be higher or lower.\r\nFYI: last quarter the actual breakdown was better: 30% As, 27% Bs, 18% Cs,\r\n  25% Ds or Fs; overall there were more As and more Bs, so that there were\r\n  still the expected number of 50% As and Bs (actually 57%), but fewer Cs as\r\n  a result, and the expected numbers of Ds or Fs.\r\n<p>\r\nOnly after finishing 4 quizzes, 2 programming assignments, one in-class\r\n  programming exam, and the midterm will you have a reasonable indication of\r\n  your final course grade (which, of course, will still heavily depend on the\r\n  grades you earn afterward).\r\n</tbody>\r\n</table>\r\n<p>\r\n\r\n\r\n<!-- Cheating -->\r\n\r\n<a name = \"Cheating\">\r\n<hr align=\"left\" width=\"33%\">\r\n<table cellspacing=\"0\" cellpadding=\"5\" border=\"0\" rules=\"none\" width=\"100%\">\r\n<tbody>\r\n<tr valign=\"top\">\r\n<td width =\"20%\"><b><h3>Academic Integrity</b></td>\r\n<td width =\"80%\">\r\nNo one comes into a class expecting to cheat, but I would suggest that you\r\n  become familiar Bren School of Information and Computer Sciences\r\n  <a href=\"http://www.ics.uci.edu/ugrad/policies/index.php#academic_honesty\" target=\"main\">\r\n  Academic Honesty</a> policy, which is just one of many of the many\r\n  <a href=\"http://www.ics.uci.edu/ugrad/policies/\", target=\"main\">\r\n  Undergraduate Policies</a> with which you should become familiar.\r\n<p>\r\nThe following information is my own restatement of this policy, as it\r\n  applies in my courses.\r\nYou will also be asked to read and sign a handout to acknowledge that you\r\n  understand the\r\n  <a href=\"../academicintegrity.pdf\", target=\"main\">\r\n  Academic Integrity Contract</a> that applies for this course.\r\n</td>\r\n</tbody>\r\n</table>\r\n\r\n\r\n\r\n<table cellspacing=\"0\" cellpadding=\"5\" border=\"0\" rules=\"none\" width=\"100%\">\r\n<tbody>\r\n<tr valign=\"top\">\r\n<td width =\"20%\"><a name=\"Policy\"><b>Policy</b></td>\r\n<td width =\"80%\">\r\nThe decision as to whether a student has cheated depends on the intent of an\r\n  assignment, the ground rules specified by the instructor, and the behavior of\r\n  the student. \r\nThe following two guidelines help an instructor decide whether plagiarism has\r\n   occurred in programming assignment, which is the fuzziest area:\r\n<ul>\r\n  <li> Plagiarism will be suspected if an assignment that calls for independent\r\n         development and implementation of a program results in two or more \r\n         solutions so similar that one solution can be converted to the\r\n         other(s) by a series of simple transformations.\r\n  <li> Plagiarism will be suspected if a student who completed an assignment \r\n         cannot explain both the intricacies of the solution and \r\n         the techniques used to generate that solution.\r\n</ul>\r\nIt is unreasonable to expect a complete definition of cheating that would cover\r\n  all cases, because each situation is important enough to merit careful,\r\n  individual scrutiny; however, it is helpful to have guidelines and\r\n   precedents.\r\n<p>\r\nHere are some examples that are clearly cheating and clearly not cheating.\r\n<p>\r\n<b>Examples of CHEATING</b>:\r\n<ul>\r\n  <li>Turning in someone else's work, in whole or in part, as your own (with or\r\n        without his/her knowledge), without it including a statement of\r\n        collaboration in the solution.\r\n  <li>Allowing another student to turn in your work, in whole or in part, as\r\n        his/her own, without it including a statement of collaboration in the\r\n        solution.\r\n  <li>Turning in duplicate solution.\r\n      Even if all the comments are changed, all the variables names are\r\n        changed, all the whitespace is changed, and the code appears in a\r\n        different order: it is still the same program.\r\n  <li>Several students/pairs writing one assignment and turning in multiple\r\n        copies, all represented (implicitly or explicitly) as an individual\r\n        student's/pair's work, without it including a statement of\r\n        collaboration in the solution.\r\n  <li>After receiving graded written work, returning written work, for\r\n        regrading, which has been altered.\r\n  <li>Finding a solution to the same problem on the web and submitting it\r\n        without explicit attribution in the solution; note that you may\r\n        not post problems on the web, seeking a solution.\r\n  <li>Stealing an examination or solution from the instructor.\r\n</ul>\r\nGenerally, you should NOT EXAMINE, by reading hardcopy or by copying a file,\r\n  the program of any other student (nor should you let anyone examine or make\r\n  a copy of your files).\r\nDoing so can easily lead to an intended or unintended academic violation.\r\n<p>\r\nIf you ever feel that after talking to someone about a program, which is legal,\r\n  your solution will be very similar to theirs, cite the consultation in the\r\n  header comment in your program.\r\nDoing so protects you from University disciplinary action (although the\r\n  instructor is free to grade the material as he/she sees fit).\r\n<p>\r\n<b>Examples of NOT CHEATING</b>:\r\n<ul>\r\n  <li>Turning in work done alone or with the help of the course's staff.\r\n  <li>Submitting one assignment for a group of students if group work is \r\n        explicitly permitted (or required, as in pair-programming).\r\n  <li>Getting or giving help about using the computers.\r\n  <li>Discussing assignments to better understand them.\r\n  <li>High level discussions of course material to better understand them.\r\n  <li>Getting or giving help about correcting simple programming errors.\r\n</ul>\r\nAgain, the key here is not studying, verbatim, someone else's code, and then\r\n  reproducing it as your own work.\r\nIt is too easy to copy such code without really understanding it.\r\nTechnically, for programming assignments, even understanding the resulting code\r\n  is not enough (if someone else wrote it): you should also play an active role\r\n  in synthesizing and debugging it.\r\nThe course is as much about skills as about knowledge.\r\n</td>\r\n</tbody>\r\n</table>\r\n\r\n<table cellspacing=\"0\" cellpadding=\"5\" border=\"0\" rules=\"none\" width=\"100%\">\r\n<tbody>\r\n<tr valign=\"top\">\r\n<td width =\"20%\"><a name=\"AutomaticDetection\"><b>Automatic Detection of Cheating</b></td>\r\n<td width =\"80%\">\r\nRecently, various cheating-detection software systems have become widely\r\n  available.\r\nSome use search engines to compare selected portions of submitted papers to\r\n  content on the web.\r\nIn the context of programming, they compare each student's program to those\r\n  submitted by his/her classmates (for this quarter, and any previous\r\n  quarters if the assignment has been repeated).\r\nThis software does not compare programs exactly: it ignores format changes,\r\n  variable name changes, and a variety of well-know transformations that\r\n  change the look of code but not its underlying logic.\r\n<p>\r\nMany courses in ICS use this software to spot potential cheating cases.\r\nOnce it identifies suspicious behavior, instructors carefully examine the\r\n  flagged code to make a final determination as to whether students will be\r\n  prosecuted for cheating.\r\nOften instructors can find additional evidence of cheating, once this\r\n  software points them to the simlar code.\r\n</td>\r\n</tbody>\r\n</table>\r\n\r\n\r\n<table cellspacing=\"0\" cellpadding=\"5\" border=\"0\" rules=\"none\" width=\"100%\">\r\n<tbody>\r\n<tr valign=\"top\">\r\n<td width =\"20%\"><a name=\"Penalties\"><b>Consequences</b></td>\r\n<td width =\"80%\">\r\nICS will not condone cheating by students in its classes.\r\nWhen cheating is suspected, instructors will take reasonable action to\r\n  establish whether or not it has actually occurred.\r\nIf, in the instructor's opinion it has, the instructor will apply appropriate\r\n  disciplinary policy.\r\nIn my courses, for a typical case of cheating, the student will be awarded\r\n  negative credit for the assignment (under the precept that not doing an\r\n  assignment, and receiving no points, is better than cheating on it).\r\nFor particular egregious forms of cheating (e.g., cheating on exams, stealing\r\n  another student's work so he/she cannot submit it for credit), harsher\r\n  consequences may apply (from loss of a full letter grade, through immediate\r\n  failure of the course, up through suspension or expulsion from UCI).\r\n<p>\r\nInstructors must contact the student shortly after investigating evidence of\r\n  academic dishonesty and evaluating the relevant work.\r\nNotice of any action taken by an instructor must also be forwarded to the\r\n  Associate Dean of Student Affairs (ADSA) in ICS and the ADSA of the student's\r\n  home school (if different).\r\nThese offices act as a repository for such information, in case the student\r\n  commits multiple infractions.\r\nWhile the first infraction often results in just a grading penalty, a second\r\n  infraction typically results in suspension for one or more quarters.\r\n</td>\r\n</tbody>\r\n</table>\r\n\r\n<table cellspacing=\"0\" cellpadding=\"5\" border=\"0\" rules=\"none\" width=\"100%\">\r\n<tbody>\r\n<tr valign=\"top\">\r\n<td width =\"20%\"><a name=\"Rights\"><b>Student Rights</b></td>\r\n<td width =\"80%\">\r\nPlease refer to \r\n  <a href=\"http://www.editor.uci.edu/catalogue/appx/appx.2.htm#academic\" target =\"main\">\r\n  The UCI Academic Senate Policies on Academic Honesty</a> for all the details.\r\n</td>\r\n</tr>\r\n</table>\r\n\r\n<table cellspacing=\"0\" cellpadding=\"5\" border=\"0\" rules=\"none\" width=\"100%\">\r\n<tbody>\r\n<tr valign=\"top\">\r\n<td width =\"20%\"><a name=\"FinalWords\"><b>Final Words:<br>A Personal Statement</b></td>\r\n<td width =\"80%\">\r\nCheating undermines the fabric of education.\r\nThe atmosphere at UCI (contrary to whatever opinions, prejudices, or\r\n  superstitions you hold) is one of fostering cooperation between faculty and\r\n  students in the pursuit of learning, knowledge, and wisdom.\r\nThis course, for example, is graded on an absolute scale, not a curve;\r\n  so, helping other students when appropriate doesn't affect your grade.\r\nAnd, if a student cheats for a higher grade, other students do not receive\r\n  lower grades as a result.\r\n<p>\r\nAlthough it is embarrassing to fail an assignment, getting caught cheating is\r\n  much worse (and some students get caught cheating for very few points).\r\nI know, though, that students rarely think about getting caught.\r\nBut think about it: I often see students break down and cry when they get\r\n  caught cheating and only then start to realize the consequences of their\r\n  actions.\r\nTheir stress level goes through the roof and it immediately affects both the\r\n  academic and social aspects of their lives.\r\nThe process is distressing for me too, although I must confess that I have been\r\n  hardened by the number of times that I have had to go through it (typically\r\n  multiple times each quarter).\r\nPursuing these cases at the University level takes a lot of my time, and\r\n  reduces the time that I can spend on more important matters relating to my\r\n  course and my students.\r\nIt is definitely a lose-lose situation.\r\n<p>\r\nThe #1 excuse that I hear for cheating is, \"I was pressed for time, so I\r\n  cheated.\"\r\nBy carefully managing your time, you can avoid this problem.\r\nIf you start working early enough, and run into problems (and you should expect\r\n  to run into problems), you will have time for the course staff to help you\r\n  learn to solve them.\r\nAlso, I understand that some students take this course only because it is a\r\n  requirement for their major, and that they have little intrinsic interest in\r\n  the subject area; this is not a valid excuse for cheating either.\r\n<p>\r\nI have seen too many instances recently where student A asks a friend, student\r\n  B, for help; specifically, A asks to see B's quiz or code (on paper or in a\r\n  computer file).\r\nOften, A copies B's code (with or without B's knowledge).\r\nI understand that B feels pressure to give A help.\r\nBut, B is doing A no favor if A's cheating is discovered; B has made a bad \r\n situation (A would receive no credit) worse (A receives negative credit and is\r\n  reported to the Dean of Student Affairs).\r\nAnd, according to UCI's rules, B is violating the Academic Integrity policy\r\n  by these actions too.\r\nI have seen friendships shattered because A copies B's code without telling B\r\n  what was done, and then both get prosecuted under UCI's rules.\r\n<p>\r\nA similar situation arises with cheating on quiz questions.\r\nI have seen too many students cheat on one question on a quiz and receive a\r\n  negative score for the whole quiz (and letter to the Dean of Student\r\n  Student Affairs), when leaving the question blank would result in a small\r\n  point deduction and no university action.\r\n<p>\r\nIn my final statement here, I ask you to pause and reflect on the consequences\r\n  of choosing to cheat at UCI: this includes the impacts that it will have on\r\n  you, your parents, your siblings, your friends, and your fellow classmates\r\n  at UCI.\r\nCheating is invariably the wrong decision.\r\n</td>\r\n</tr>\r\n</table>\r\n\r\n\r\n\r\n<!-- Policy Exceptions -->\r\n\r\n<a name=\"PolicyExceptions\">\r\n<hr align=\"left\" width=\"33%\">\r\n<table cellspacing=\"0\" cellpadding=\"5\" border=\"0\" rules=\"none\" width=\"100%\">\r\n<tbody>\r\n<tr valign=\"top\">\r\n<td width =\"20%\"><b>Exceptions to Policies</b></td>\r\n<td width =\"80%\">\r\nI have strict policies regarding attending classes, taking quizzes, submitting\r\n  programs, and taking in-class exams; but, there are exceptions.\r\nExceptions to these policies include valid medical excuses (if documented by\r\n  your Doctor or Health Care Provider), or any other officially excusable\r\n  absence: emergencies, family problems, religious observances, job interviews\r\n   or sports-related trips, etc. (if documented by the Office of the Dean in \r\n   your College, a Coach, etc).\r\n<p>\r\nIf you need such an exception, bring a copy of the required documentation to me\r\n  as soon as possible: do it beforehand, if you know about the problem in\r\n  advance; if you do not have advance warning do it on the next day that you\r\n  are able to attend class (or during my office hours) .\r\nI will need to keep the copy for my records of all excused absences.\r\nAgain, if you have advance notice of a problem, please notify me by email\r\n  beforehand to discuss any ramifications.\r\n</td>\r\n</tbody>\r\n</table>\r\n\r\n</body>\r\n</html>\r\n", "id": 10934.0}