{"text": "The Sourcerer Project SourcererDB SourcererDB is a relational database containing entity relationship models of the projects from the Sourcerer Java Repository These models are automatically generated by the extractor tool and then imported into a MySQL database Schema The SourcererDB schema is a direct manifestation of the metamodel used by the extractor At its core the metamodel represents entities in the code such as classes methods and fields and the relations between these entities such as containment and invocation In addition to the entities and relations SourcererDB contains tables for the projects files and comments Each table will now be discussed in detail Projects Table This table contains a listing of all the projects in the repository NameTypeNullable Indexed Descriptionproject idSERIALNoYesA unique id assigned by the database project typeENUM values NoYesThe type of the project nameVARCHAR 1 24 NoYesThe name of the project in the originating repository descriptionVARCHAR 4 96 YesNoOptional project description versionVARCHAR 1 24 YesNoProject version number Only used for MAVEN projects groopVARCHAR 1 24 YesYesProject s Maven group Only used for MAVEN projects pathVARCHAR 1 24 YesNoThe relative path of the project within the repository Only used for JAVA LIBRARY and CRAWLED projects sourceVARCHAR 1 24 YesYesThe original source of the project hashVARCHAR 32 YesYesThe md5 hash of the project Only used for JAR and MAVEN projects has sourceBOOLEANNoYesDoes the project have source code Will be false for some jar files There are five different type of projects represented in this table SYSTEM These are two special projects not corresponding directly to anything from the repository The first system project contains the primitive types provided by the Java language The second system project contains all the unknown entities which are the result of unresolved references JAVA LIBRARY These projects are the jar files included with distributions of Java The largest is rt jar which contains the classes most associate with the Java Standard Library CRAWLED These are the projects aggregated from online repositories JAR Each unique jar file from the CRAWLED projects is considered a project in its own right MAVEN Each MAVEN project is a jar file downloaded from the Maven2 Central Repository Files Table This table contains a listing of the files in the projects NameTypeNullable Indexed Descriptionfile idSERIALNoYesA unique id assigned by the database file typeENUM valus NoYesThe type of the file nameVARCHAR 1 24 NoYesThe name of the file pathVARCHAR 1 24 YesNoThe relative path of the file within the project Only used for SOURCE and CLASS files hashVARCHAR 32 YesYesThe md5 hash of the file Only used for JAR files project idBIGINT UNSIGNEDNoYesThe id of the project containing this file There are three types of files represented in this table SOURCE These are files for which there was source code Any project type except SYSTEM can contain SOURCE files CLASS These are files for which there was only byte code Any project type except SYSTEM and CRAWLED can contain CLASS files Any class files from CRAWLED projects not packaged into a jar file are ignored by the extractor JAR These are the jar files contained within CRAWLED projects To find the details of what is inside each jar file simply find the JAR project with the matching md5 hash JAR files from different projects may be copies and hence have the same md5 hash while each JAR project is unique Entities Table This table contains a listing of the entities extracted from the files NameTypeNullable Indexed Descriptionentity idSERIALNoYesA unique id assigned by the database entity typeENUM values NoYesThe type of the entity modifiersSET values YesNoJava modifiers associated with the entity Only valid for entity types that can have modifiers fqnVARCHAR 8192 YesYesThe fully qualified name FQN of the entity paramsVARCHAR 8192 YesYesThe method parameters raw paramsVARCHAR 8192 YesYesThe raw method parameters after type erasure multiINT UNSIGNEDYesNoA multi purpose column for storing additional information Used by certain entity types project idBIGINT UNSIGNEDNoYesThe id of the project that contains this entity file idBIGINT UNSIGNEDYesYesThe id of the file that contains this entity Some entities are not associated with specific files offsetINT UNSIGNEDYesNoThe offset to the start of the entity in its originating file lengthINT UNSIGNEDYesNoThe length of the entity in its originating file There are twenty one different types of entities represented in this table Each entity type unless otherwise specified may have a location associated with it If it has a location then the file id offset and length will all be non null Any entity derived from a CLASS file will not have a location TypeDescriptionPACKAGEA Java package Has no location or modifiers CLASSA Java class declaration INTERFACEA Java interface declaration ENUMA Java enum declaration ANNOTATIONA Java annotation type declaration INITIALIZERA Java initializer declaration both instance and static FIELDA Java field declaration ENUM CONSTANTA Java enum constant declaration CONSTRUCTORA Java constructor declaration METHODA Java method declaration ANNOTATION ELEMENTA Java method annotation type element declaration PARAMETERA Java formal parameter declaration LOCAL VARIABLEA Java local variable declaration The FQN of a LOCAL VARIABLE is just its name PRIMIVITEA Java primitive type Only contained in the primitives SYSTEM project Has no modifiers or location ARRAYA Java array type Has no modifiers or location TYPE VARIABLEA Java type variable Has no modifiers or location WILDCARDA Java type wildcard Has no modifiers or location PARAMETRIZED TYPEA Java parametrized type Has no modifiers or location DUPLICATEAn entity created when it is unclear exactly which type was referenced by a relation Has no modifiers or location VIRTUAL DUPLICATEAn entity created when it is unclear exactly which interface method was referenced by a virtual method call Has no modifiers or location UNKNOWNAn entity created when the type referenced by a relation is unknown Has no modifiers or location Relations Table This table contains a listing of the relations extracted from the files and linking the entities NameTypeNullable Indexed Descriptionrelation idSERIALNoYesA unique id assigned by the database relation typeENUM values NoYesThe type of the relation relation classENUM values NoNoThe class of the relation lhs eidBIGINT UNSIGNEDNoYesThe id of the source entity of the relation rhs eidBIGINT UNSIGNEDNoYesThe id of the target entity of the relation project idBIGINT UNSIGNEDNoYesThe id of the project containing the relation file idBIGINT UNSIGNEDYesYesThe id of the file containing the relation Some relations are not associated with specific files offsetINT UNSIGNEDYesYesThe offset to the start of the relation in its originating file lengthINT UNSIGNEDYesYesThe length of the relation in its originating file There are twenty two different types of relations represented in this table Each relation type unless otherwise specified may have a location associated with it If it has a location then the file id offset and length will all be non null Any entity derived from a CLASS file with not have a location TypeDescriptionCONTAINSPhysical containment For example a CLASS CONTAINS a METHOD EXTENDSClass extension For example a CLASS EXTENDS a CLASS IMPLEMENTSInterface implementation and extension For example a CLASS IMPLEMENTS an INTERFACE or an INTERFACE IMPLEMENTS an INTERFACE HOLDSType of a field For example a FIELD HOLDS a CLASS RETURNSThe return type of a method For example a METHOD RETURNS a CLASS READSA field being read For example a METHOD READS a FIELD WRITESA field being written For example a METHOD WRITES a FIELD CALLSMethod invocation For example a METHOD CALLS a METHOD INSANTIATESConstructor invocation For example a METHOD INSTANTIATES a CONSTRUCTOR THROWSA throws clause For example a METHOD THROWS a CLASS CASTSA cast expression For example a METHOD CASTS a CLASS CHECKSAn instanceof expression For example a METHOD CHECKS a CLASS ANNOTATED BYA type is annotated For example a METHOD is ANNOTATED BY a CLASS USESA type is referenced For example a METHOD USES a CLASS HAS ELEMENTS OFThe element type of an array For example an ARRAY HAS ELEMENTS OF a CLASS PARAMETRIZED BYA type has type parameters For example a METHOD is PARAMETRIZED BY a TYPE VARIABLE HAS BASE TYPEThe base type of a parametrized type For example a PARAMETRIZED TYPE HAS BASE TYPE of a CLASS HAS TYPE ARGUMENTA type parameter is bound to a specific type For example a PARAMETRIZED TYPE HAS TYPE ARGUMENT of a CLASS HAS UPPER BOUNDThe upper bound of a wildcard For example a WILDCARD HAS UPPER BOUND of a CLASS HAS LOWER BOUNDThe lower bound of a wildcard For example a WILDCARD HAS LOWER BOUND of a CLASS OVERRIDESA method overrides a method For example a METHOD OVERRIDES a METHOD MATCHESA duplicate type matches a number of types For example a DUPLICATE MATCHES a CLASS There are five different relation classes A relation s class tries to capture the relationship between the source and the target of the relation JAVA LIBRARY The relation s target is an entity from a JAVA LIBRARY project INTERNAL The relation s target is an entity from the same project EXTERNAL The relation s target is an entity in some external project UNKNOWN It is unknown where the relation s target is NOT APPLICABLE It does not make sense to classify this relation type as internal or external Comments Table This table contains a listing of the comments extracted from the files NameTypeNullable Indexed Descriptioncomment idSERIALNoYesA uniqueid assigned by the database comment typeENUM values NoNoThe type of the comment Problems Table Overview Core Infrastructure Repository SourcererDB Services Code Search Engine Tutorial People Publications", "_id": "http://sourcerer.ics.uci.edu/sourcerer-db.html", "title": "sourcerer project: sourcerer-db", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n\n<head>\n<title>Sourcerer Project: Sourcerer-DB</title>\n<link rel=\"stylesheet\" href=\"css/sourcerer.css\" type=\"text/css\" />\n</head>\n\n<body>\n<div id=\"container\">\n<div id=\"header\">\n<div id=\"a1\"></div>\n<div id=\"a2\"></div>\n<div id=\"a3\"></div>\n<div id=\"a4\"></div>\n<div id=\"a5\"></div>\nThe Sourcerer Project\n</div>\n<div id=\"content\">\n<div id=\"main\">\n<h1>SourcererDB</h1>\n<p>SourcererDB is a relational database containing entity/relationship models of\nthe projects from the Sourcerer Java Repository. These models are automatically\ngenerated by the extractor tool and then imported into a MySQL database.</p>\n\n<h2>Schema</h2>\n<p>The SourcererDB schema is a direct manifestation of the metamodel used by the\nextractor. At its core, the metamodel represents entities in the code (such as\nclasses, methods and fields) and the relations between these entities (such\nas containment and invocation). In addition to the entities and relations,\nSourcererDB contains tables for the projects, files and comments. Each\ntable will now be discussed in detail.</p>\n\n<h3>Projects Table</h3>\n<p>This table contains a listing of all the projects in the repository.</p>\n<table cellspacing=\"0\">\n<tr>\n  <th>Name</th>\n  <th>Type</th>\n  <th>Nullable?</th>\n  <th>Indexed?</th>\n  <th>Description</th>\n</tr>\n<tr class=\"bga\">\n  <td class=\"fixed bold\">project_id</td>\n  <td class=\"fixed\">SERIAL</td>\n  <td class=\"cent\">No</td>\n  <td class=\"cent\">Yes</td>\n  <td>A unique id assigned by the database.</td>\n</tr>\n<tr class=\"bgb\">\n  <td class=\"fixed bold\">project_type</td>\n  <td class=\"fixed\">ENUM(values)</td>\n  <td class=\"cent\">No</td>\n  <td class=\"cent\">Yes</td>\n  <td>The type of the project.</td>\n</tr>\n<tr class=\"bga\">\n  <td class=\"fixed bold\">name</td>\n  <td class=\"fixed\">VARCHAR(1024)</td>\n  <td class=\"cent\">No</td>\n  <td class=\"cent\">Yes</td>\n  <td>The name of the project in the originating repository.</td>\n</tr>\n<tr class=\"bgb\">\n  <td class=\"fixed bold\">description</td>\n  <td class=\"fixed\">VARCHAR(4096)</td>\n  <td class=\"cent\">Yes</td>\n  <td class=\"cent\">No</td>\n  <td>Optional project description.</td>\n</tr>\n<tr class=\"bga\">\n  <td class=\"fixed bold\">version</td>\n  <td class=\"fixed\">VARCHAR(1024)</td>\n  <td class=\"cent\">Yes</td>\n  <td class=\"cent\">No</td>\n  <td>Project version number. Only used for MAVEN projects.</td>\n</tr>\n<tr class=\"bgb\">\n  <td class=\"fixed bold\">groop</td>\n  <td class=\"fixed\">VARCHAR(1024)</td>\n  <td class=\"cent\">Yes</td>\n  <td class=\"cent\">Yes</td>\n  <td>Project's Maven group. Only used for MAVEN projects.</td>\n</tr>\n<tr class=\"bga\">\n  <td class=\"fixed bold\">path</td>\n  <td class=\"fixed\">VARCHAR(1024)</td>\n  <td class=\"cent\">Yes</td>\n  <td class=\"cent\">No</td>\n  <td>The relative path of the project within the repository. Only used for JAVA_LIBRARY and CRAWLED projects.</td>\n</tr>\n<tr class=\"bgb\">\n  <td class=\"fixed bold\">source</td>\n  <td class=\"fixed\">VARCHAR(1024)</td>\n  <td class=\"cent\">Yes</td>\n  <td class=\"cent\">Yes</td>\n  <td>The original source of the project.</td>\n</tr>\n<tr class=\"bga\">\n  <td class=\"fixed bold\">hash</td>\n  <td class=\"fixed\">VARCHAR(32)</td>\n  <td class=\"cent\">Yes</td>\n  <td class=\"cent\">Yes</td>\n  <td>The md5 hash of the project. Only used for JAR and MAVEN projects.</td>\n</tr>\n<tr class=\"bgb\">\n  <td class=\"fixed bold\">has_source</td>\n  <td class=\"fixed\">BOOLEAN</td>\n  <td class=\"cent\">No</td>\n  <td class=\"cent\">Yes</td>\n  <td>Does the project have source code? Will be false for some jar files.</td>\n</tr>\n</table>\n<p>There are five different type of projects represented in this table:</p>\n<div class=\"list\">\n<h4 class=\"fixed\">SYSTEM</h4>\n<p>These are two special projects not corresponding directly to anything from the repository. \nThe first system project contains the primitive types provided by the Java language. The second\nsystem project contains all the unknown entities, which are the result of unresolved references.</p>\n<h4 class=\"fixed\">JAVA_LIBRARY</h4>\n<p>These projects are the jar files included with distributions of Java. The largest is \n<span class=\"fixed\">rt.jar</span>, which contains the classes most associate with the Java Standard Library</p>\n<h4 class=\"fixed\">CRAWLED</h4>\n<p>These are the projects aggregated from online repositories.</p>\n<h4 class=\"fixed\">JAR</h4>\n<p>Each unique jar file from the CRAWLED projects is considered a project in its own right.</p>\n<h4 class=\"fixed\">MAVEN</h4>\n<p>Each MAVEN project is a jar file downloaded from the <a href=\"http://repo1.maven.org/maven2/\">Maven2 Central Repository</a>.</p>\n</div>\n<h3>Files Table</h3>\n<p>This table contains a listing of the files in the projects.</p>\n<table cellspacing=\"0\">\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Nullable?</th>\n<th>Indexed?</th>\n<th>Description</th>\n</tr>\n<tr class=\"bga\">\n  <td class=\"fixed bold\">file_id</td>\n  <td class=\"fixed\">SERIAL</td>\n  <td class=\"cent\">No</td>\n  <td class=\"cent\">Yes</td>\n  <td>A unique id assigned by the database.</td>\n</tr>\n<tr class=\"bgb\">\n  <td class=\"fixed bold\">file_type</td>\n  <td class=\"fixed\">ENUM(valus)</td>\n  <td class=\"cent\">No</td>\n  <td class=\"cent\">Yes</td>\n  <td>The type of the file.</td>\n</tr>\n<tr class=\"bga\">\n  <td class=\"fixed bold\">name</td>\n  <td class=\"fixed\">VARCHAR(1024)</td>\n  <td class=\"cent\">No</td>\n  <td class=\"cent\">Yes</td>\n  <td>The name of the file.</td>\n</tr>\n<tr class=\"bgb\">\n  <td class=\"fixed bold\">path</td>\n  <td class=\"fixed\">VARCHAR(1024)</td>\n  <td class=\"cent\">Yes</td>\n  <td class=\"cent\">No</td>\n  <td>The relative path of the file within the project. Only used for SOURCE and CLASS files.</td>\n</tr>\n<tr class=\"bga\">\n  <td class=\"fixed bold\">hash</td>\n  <td class=\"fixed\">VARCHAR(32)</td>\n  <td class=\"cent\">Yes</td>\n  <td class=\"cent\">Yes</td>\n  <td>The md5 hash of the file. Only used for JAR files.</td>\n<tr class=\"bgb\">\n  <td class=\"fixed bold\">project_id</td>\n  <td class=\"fixed\">BIGINT UNSIGNED</td>\n  <td class=\"cent\">No</td>\n  <td class=\"cent\">Yes</td>\n  <td>The id of the project containing this file.</td>\n</tr>\n</table>\n<p>There are three types of files represented in this table:</p>\n<div class=\"list\">\n<h4 class=\"fixed\">SOURCE</h4>\n<p>These are files for which there was source code. Any project type,\nexcept SYSTEM, can contain SOURCE files.</p>\n<h4 class=\"fixed\">CLASS</h4>\n<p>These are files for which there was only byte code. Any project type,\nexcept SYSTEM and CRAWLED, can contain CLASS files. Any <span class=\"fixed\">.class</span>\nfiles from CRAWLED projects not packaged into a jar file are ignored by the extractor.\n<h4 class=\"fixed\">JAR</h4>\n<p>These are the jar files contained within CRAWLED projects. To find the details\nof what is inside each jar file, simply find the JAR project with the matching md5\nhash. JAR files from different projects may be copies (and hence have the same \nmd5 hash), while each JAR project is unique.</p>\n</div>\n<h3>Entities Table</h3>\n<p>This table contains a listing of the entities extracted from the files.\n<table cellspacing=\"0\">\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Nullable?</th>\n<th>Indexed?</th>\n<th>Description</th>\n</tr>\n<tr class=\"bga\">\n  <td class=\"fixed bold\">entity_id</td>\n  <td class=\"fixed\">SERIAL</td>\n  <td class=\"cent\">No</td>\n  <td class=\"cent\">Yes</td>\n  <td>A unique id assigned by the database.</td>\n</tr>\n<tr class=\"bgb\">\n  <td class=\"fixed bold\">entity_type</td>\n  <td class=\"fixed\">ENUM(values)</td>\n  <td class=\"cent\">No</td>\n  <td class=\"cent\">Yes</td>\n  <td>The type of the entity.</td>\n</tr>\n<tr class=\"bga\">\n  <td class=\"fixed bold\">modifiers</td>\n  <td class=\"fixed\">SET(values)</td>\n  <td class=\"cent\">Yes</td>\n  <td class=\"cent\">No</td>\n  <td>Java modifiers associated with the entity. Only valid for entity types that can have modifiers.</td>\n</tr>\n<tr class=\"bgb\">\n  <td class=\"fixed bold\">fqn</td>\n  <td class=\"fixed\">VARCHAR(8192)</td>\n  <td class=\"cent\">Yes</td>\n  <td class=\"cent\">Yes</td>\n  <td>The fully-qualified name (FQN) of the entity.</td>\n</tr>\n<tr class=\"bga\">\n  <td class=\"fixed bold\">params</td>\n  <td class=\"fixed\">VARCHAR(8192)</td>\n  <td class=\"cent\">Yes</td>\n  <td class=\"cent\">Yes</td>\n  <td>The method parameters.</td>\n</tr>\n<tr class=\"bgb\">\n  <td class=\"fixed bold\">raw_params</td>\n  <td class=\"fixed\">VARCHAR(8192)</td>\n  <td class=\"cent\">Yes</td>\n  <td class=\"cent\">Yes</td>\n  <td>The raw method parameters (after type erasure).</td>\n</tr>\n<tr class=\"bga\">\n  <td class=\"fixed bold\">multi</td>\n  <td class=\"fixed\">INT UNSIGNED</td>\n  <td class=\"cent\">Yes</td>\n  <td class=\"cent\">No</td>\n  <td>A multi-purpose column for storing additional information. Used by certain entity types.</td>\n</tr>\n<tr class=\"bgb\">\n  <td class=\"fixed bold\">project_id</td>\n  <td class=\"fixed\">BIGINT UNSIGNED</td>\n  <td class=\"cent\">No</td>\n  <td class=\"cent\">Yes</td>\n  <td>The id of the project that contains this entity.</td>\n</tr>\n<tr class=\"bga\">\n  <td class=\"fixed bold\">file_id</td>\n  <td class=\"fixed\">BIGINT UNSIGNED</td>\n  <td class=\"cent\">Yes</td>\n  <td class=\"cent\">Yes</td>\n  <td>The id of the file that contains this entity. Some entities are not associated with specific files.</td>\n</tr>\n<tr class=\"bgb\">\n  <td class=\"fixed bold\">offset</td>\n  <td class=\"fixed\">INT UNSIGNED</td>\n  <td class=\"cent\">Yes</td>\n  <td class=\"cent\">No</td>\n  <td>The offset to the start of the entity in its originating file.</td>\n</tr>\n<tr class=\"bgb\">\n  <td class=\"fixed bold\">length</td>\n  <td class=\"fixed\">INT UNSIGNED</td>\n  <td class=\"cent\">Yes</td>\n  <td class=\"cent\">No</td>\n  <td>The length of the entity in its originating file.</td>\n</tr>\n</table>\n<p>There are twenty one different types of entities represented in this table. Each entity\ntype, unless otherwise specified, may have a location associated with it. If it has a \nlocation, then the file_id, offset and length will all be non-null. Any entity \nderived from a CLASS file will not have a location.</p>\n<table cellspacing=\"0\">\n<tr>\n<th>Type</th>\n<th>Description</th>\n</tr>\n<tr class=\"bga\">\n<td class=\"fixed\">PACKAGE</td>\n<td>A Java <a href=\"http://java.sun.com/docs/books/jls/third_edition/html/packages.html\">package</a>. Has no location or modifiers.</td>\n</tr>\n<tr class=\"bgb\">\n<td class=\"fixed\">CLASS</td>\n<td>A Java <a href=\"http://java.sun.com/docs/books/jls/third_edition/html/classes.html\">class</a> declaration.</td>\n</tr>\n<tr class=\"bga\">\n<td class=\"fixed\">INTERFACE</td>\n<td>A Java <a href=\"http://java.sun.com/docs/books/jls/third_edition/html/interfaces.html\">interface</a> declaration.</td>\n</tr>\n<tr class=\"bgb\">\n<td class=\"fixed\">ENUM</td>\n<td>A Java <a href=\"http://java.sun.com/docs/books/jls/third_edition/html/classes.html#8.9\">enum</a> declaration.</td>\n</tr>\n<tr class=\"bga\">\n<td class=\"fixed\">ANNOTATION</td>\n<td>A Java <a href=\"http://java.sun.com/docs/books/jls/third_edition/html/interfaces.html#9.6\">annotation</a> type declaration.</td>\n</tr>\n<tr class=\"bgb\">\n<td class=\"fixed\">INITIALIZER</td>\n<td>A Java <a href=\"http://java.sun.com/docs/books/jls/third_edition/html/classes.html#8.6\">initializer</a> declaration, both instance and static.</td>\n</tr>\n<tr class=\"bga\">\n<td class=\"fixed\">FIELD</td>\n<td>A Java <a href=\"http://java.sun.com/docs/books/jls/third_edition/html/classes.html#8.3\">field</a> declaration.</td>\n</tr>\n<tr class=\"bgb\">\n<td class=\"fixed\">ENUM_CONSTANT</td>\n<td>A Java <a href=\"http://java.sun.com/docs/books/jls/third_edition/html/classes.html#8.9\">enum constant</a> declaration.</td>\n</tr>\n<tr class=\"bga\">\n<td class=\"fixed\">CONSTRUCTOR</td>\n<td>A Java <a href=\"http://java.sun.com/docs/books/jls/third_edition/html/classes.html#8.8\">constructor</a> declaration.</td>\n</tr>\n<tr class=\"bgb\">\n<td class=\"fixed\">METHOD</td>\n<td>A Java <a href=\"http://java.sun.com/docs/books/jls/third_edition/html/classes.html#8.4\">method</a> declaration.</td>\n</tr>\n<tr class=\"bga\">\n<td class=\"fixed\">ANNOTATION_ELEMENT</td>\n<td>A Java method <a href=\"http://java.sun.com/docs/books/jls/third_edition/html/interfaces.html#9.6\">annotation type element</a> declaration.</td>\n</tr>\n<tr class=\"bgb\">\n<td class=\"fixed\">PARAMETER</td>\n<td>A Java <a href=\"http://java.sun.com/docs/books/jls/third_edition/html/classes.html#8.4.1\">formal parameter</a> declaration.</td>\n</tr>\n<tr class=\"bga\">\n<td class=\"fixed\">LOCAL_VARIABLE</td>\n<td>A Java <a href=\"http://java.sun.com/docs/books/jls/third_edition/html/statements.html#14.4\">local variable</a> declaration. The FQN of a LOCAL_VARIABLE is just its name.</td>\n</tr>\n<tr class=\"bgb\">\n<td class=\"fixed\">PRIMIVITE</td>\n<td>A Java <a href=\"http://java.sun.com/docs/books/jls/third_edition/html/typesValues.html#4.2\">primitive type</a>. Only contained in the primitives SYSTEM project. Has no modifiers or location.</td>\n</tr>\n<tr class=\"bga\">\n<td class=\"fixed\">ARRAY</td>\n<td>A Java <a href=\"http://java.sun.com/docs/books/jls/third_edition/html/arrays.html#10.1\">array type</a>. Has no modifiers or location.</td>\n</tr>\n<tr class=\"bgb\">\n<td class=\"fixed\">TYPE_VARIABLE</td>\n<td>A Java <a href=\"http://java.sun.com/docs/books/jls/third_edition/html/typesValues.html#4.4\">type variable</a>. Has no modifiers or location.</td>\n</tr>\n<tr class=\"bga\">\n<td class=\"fixed\">WILDCARD</td>\n<td>A Java type <a href=\"http://java.sun.com/docs/books/jls/third_edition/html/typesValues.html#4.5.1\">wildcard</a>. Has no modifiers or location.</td>\n</tr>\n<tr class=\"bgb\">\n<td class=\"fixed\">PARAMETRIZED_TYPE</td>\n<td>A Java <a href=\"http://java.sun.com/docs/books/jls/third_edition/html/typesValues.html#4.5\">parametrized type</a>. Has no modifiers or location.</td>\n</tr>\n<tr class=\"bga\">\n  <td class=\"fixed\">DUPLICATE</td>\n  <td>An entity created when it is unclear exactly which type was referenced by a relation. Has no modifiers or location.</td>\n</tr>\n<tr class=\"bgb\">\n  <td class=\"fixed\">VIRTUAL_DUPLICATE</td>\n  <td>An entity created when it is unclear exactly which interface method was referenced by a virtual method call. Has no modifiers or location.</td>\n</tr>\n<tr class=\"bga\">\n  <td class=\"fixed\">UNKNOWN</td>\n  <td>An entity created when the type referenced by a relation is unknown. Has no modifiers or location.</td>\n</tr>\n</table>\n<h3>Relations Table</h3>\n<p>This table contains a listing of the relations extracted from the files and linking the entities.</p>\n<table cellspacing=\"0\">\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Nullable?</th>\n<th>Indexed?</th>\n<th>Description</th>\n</tr>\n<tr class=\"bga\">\n  <td class=\"fixed bold\">relation_id</td>\n  <td class=\"fixed\">SERIAL</td>\n  <td class=\"cent\">No</td>\n  <td class=\"cent\">Yes</td>\n  <td>A unique id assigned by the database.</td>\n</tr>\n<tr class=\"bgb\">\n  <td class=\"fixed bold\">relation_type</td>\n  <td class=\"fixed\">ENUM(values)</td>\n  <td class=\"cent\">No</td>\n  <td class=\"cent\">Yes</td>\n  <td>The type of the relation.</td>\n</tr>\n<tr class=\"bga\">\n  <td class=\"fixed bold\">relation_class</td>\n  <td class=\"fixed\">ENUM(values)</td>\n  <td class=\"cent\">No</td>\n  <td class=\"cent\">No</td>\n  <td>The class of the relation.</td>\n</tr>\n<tr class=\"bgb\">\n  <td class=\"fixed bold\">lhs_eid</td>\n  <td class=\"fixed\">BIGINT UNSIGNED</td>\n  <td class=\"cent\">No</td>\n  <td class=\"cent\">Yes</td>\n  <td>The id of the source entity of the relation.</td>\n</tr>\n<tr class=\"bga\">\n  <td class=\"fixed bold\">rhs_eid</td>\n  <td class=\"fixed\">BIGINT UNSIGNED</td>\n  <td class=\"cent\">No</td>\n  <td class=\"cent\">Yes</td>\n  <td>The id of the target entity of the relation.</td>\n</tr>\n<tr class=\"bgb\">\n  <td class=\"fixed bold\">project_id</td>\n  <td class=\"fixed\">BIGINT UNSIGNED</td>\n  <td class=\"cent\">No</td>\n  <td class=\"cent\">Yes</td>\n  <td>The id of the project containing the relation.</td>\n</tr>\n<tr class=\"bga\">\n  <td class=\"fixed bold\">file_id</td>\n  <td class=\"fixed\">BIGINT UNSIGNED</td>\n  <td class=\"cent\">Yes</td>\n  <td class=\"cent\">Yes</td>\n  <td>The id of the file containing the relation. Some relations are not associated with specific files.</td>\n</tr>\n<tr class=\"bgb\">\n  <td class=\"fixed bold\">offset</td>\n  <td class=\"fixed\">INT UNSIGNED</td>\n  <td class=\"cent\">Yes</td>\n  <td class=\"cent\">Yes</td>\n  <td>The offset to the start of the relation in its originating file.</td>\n</tr>\n<tr class=\"bga\">\n  <td class=\"fixed bold\">length</td>\n  <td class=\"fixed\">INT UNSIGNED</td>\n  <td class=\"cent\">Yes</td>\n  <td class=\"cent\">Yes</td>\n  <td>The length of the relation in its originating file.</td>\n</tr>\n</table>\n<p>There are twenty-two different types of relations represented in this table. Each\nrelation type, unless otherwise specified, may have a location associated with it. If it\nhas a location, then the file_id, offset and length will all be non-null. Any entity\nderived from a CLASS file with not have a location.</p>\n<table cellspacing=\"0\">\n<tr>\n<th>Type</th>\n<th>Description</th>\n</tr>\n<tr class=\"bga\">\n<td class=\"fixed\">CONTAINS</td>\n<td>Physical containment. For example, a CLASS CONTAINS a METHOD.</td>\n</tr>\n<tr class=\"bgb\">\n<td class=\"fixed\">EXTENDS</td>\n<td>Class extension. For example, a CLASS EXTENDS a CLASS.</td>\n</tr>\n<tr class=\"bga\">\n<td class=\"fixed\">IMPLEMENTS</td>\n<td>Interface implementation and extension. For example, a CLASS IMPLEMENTS an INTERFACE or an INTERFACE IMPLEMENTS an INTERFACE.</td>\n</tr>\n<tr class=\"bgb\">\n<td class=\"fixed\">HOLDS</td>\n<td>Type of a field. For example, a FIELD HOLDS a CLASS.</td>\n</tr>\n<tr class=\"bga\">\n<td class=\"fixed\">RETURNS</td>\n<td>The return type of a method. For example, a METHOD RETURNS a CLASS.</td>\n</tr>\n<tr class=\"bgb\">\n<td class=\"fixed\">READS</td>\n<td>A field being read. For example, a METHOD READS a FIELD.</td>\n</tr>\n<tr class=\"bga\">\n<td class=\"fixed\">WRITES</td>\n<td>A field being written. For example, a METHOD WRITES a FIELD.</td>\n</tr>\n<tr class=\"bgb\">\n<td class=\"fixed\">CALLS</td>\n<td>Method invocation. For example, a METHOD CALLS a METHOD.</td>\n</tr>\n<tr class=\"bga\">\n<td class=\"fixed\">INSANTIATES</td>\n<td>Constructor invocation. For example, a METHOD INSTANTIATES a CONSTRUCTOR.</td>\n</tr>\n<tr class=\"bgb\">\n<td class=\"fixed\">THROWS</td>\n<td>A throws clause. For example, a METHOD THROWS a CLASS.</td>\n</tr>\n<tr class=\"bga\">\n<td class=\"fixed\">CASTS</td>\n<td>A cast expression. For example, a METHOD CASTS a CLASS.</td>\n</tr>\n<tr class=\"bgb\">\n<td class=\"fixed\">CHECKS</td>\n<td>An instanceof expression. For example, a METHOD CHECKS a CLASS.</td>\n</tr>\n<tr class=\"bga\">\n<td class=\"fixed\">ANNOTATED_BY</td>\n<td>A type is annotated. For example, a METHOD is ANNOTATED_BY a CLASS.</td>\n</tr>\n<tr class=\"bgb\">\n<td class=\"fixed\">USES</td>\n<td>A type is referenced. For example, a METHOD USES a CLASS.</td>\n</tr>\n<tr class=\"bga\">\n<td class=\"fixed\">HAS_ELEMENTS_OF</td>\n<td>The element type of an array. For example, an ARRAY HAS_ELEMENTS_OF a CLASS.</td>\n</tr>\n<tr class=\"bgb\">\n<td class=\"fixed\">PARAMETRIZED_BY</td>\n<td>A type has type parameters. For example, a METHOD is PARAMETRIZED_BY a TYPE_VARIABLE.</td>\n</tr>\n<tr class=\"bga\">\n<td class=\"fixed\">HAS_BASE_TYPE</td>\n<td>The base type of a parametrized type. For example, a PARAMETRIZED_TYPE HAS_BASE_TYPE of a CLASS.</td>\n</tr>\n<tr class=\"bgb\">\n<td class=\"fixed\">HAS_TYPE_ARGUMENT</td>\n<td>A type parameter is bound to a specific type. For example, a PARAMETRIZED_TYPE HAS_TYPE_ARGUMENT of a CLASS.</td>\n</tr>\n<tr class=\"bga\">\n<td class=\"fixed\">HAS_UPPER_BOUND</td>\n<td>The upper bound of a wildcard. For example, a WILDCARD HAS_UPPER_BOUND of a CLASS.</td>\n</tr>\n<tr class=\"bgb\">\n<td class=\"fixed\">HAS_LOWER_BOUND</td>\n<td>The lower bound of a wildcard. For example, a WILDCARD HAS_LOWER_BOUND of a CLASS.</td>\n</tr>\n<tr class=\"bga\">\n<td class=\"fixed\">OVERRIDES</td>\n<td>A method overrides a method. For example, a METHOD OVERRIDES a METHOD.</td>\n</tr>\n<tr class=\"bgb\">\n<td class=\"fixed\">MATCHES</td>\n<td>A duplicate type matches a number of types. For example, a DUPLICATE MATCHES a CLASS.</td>\n</tr>\n</table>\n<p>There are five different relation classes. A relation's class tries to capture\nthe relationship between the source and the target of the relation.</p>\n<div class=\"list\">\n<h4 class=\"fixed\">JAVA_LIBRARY</h4>\n<p>The relation's target is an entity from a JAVA_LIBRARY project.</p>\n<h4 class=\"fixed\">INTERNAL</h4>\n<p>The relation's target is an entity from the same project.</p>\n<h4 class=\"fixed\">EXTERNAL</h4>\n<p>The relation's target is an entity in some external project.</p>\n<h4 class=\"fixed\">UNKNOWN</h4>\n<p>It is unknown where the relation's target is.</p>\n<h4 class=\"fixed\">NOT_APPLICABLE</h4>\n<p>It does not make sense to classify this relation type as internal or external.</p>\n</div>\n<h3>Comments Table</h3>\n<p>This table contains a listing of the comments extracted from the files.</p>\n<table cellspacing=\"0\">\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Nullable?</th>\n<th>Indexed?</th>\n<th>Description</th>\n</tr>\n<tr class=\"bga\">\n<td class=\"fixed bold\">comment_id</td>\n<td class=\"fixed\">SERIAL</td>\n<td class=\"cent\">No</td>\n<td class=\"cent\">Yes</td>\n<td>A uniqueid assigned by the database.</td>\n</tr>\n<tr class=\"bgb\">\n<td class=\"fixed bold\">comment_type</td>\n<td class=\"fixed\">ENUM(values)</td>\n<td class=\"cent\">No</td>\n<td class=\"cent\">No</td>\n<td>The type of the comment.</td>\n</tr>\n</table>\n<h3>Problems Table</h3>\n</div>\n</div>\n<div id=\"navbar\">\n  <div><a href=\"index.html\">Overview</a></div>\n  <div><a href=\"infrastructure.html\">Core Infrastructure</a></div>\n  <div><a href=\"repository.html\">Repository</a></div>\n  <div><a class=\"sel\" href=\"sourcerer-db.html\">SourcererDB</a></div>\n  <div><a href=\"services.html\">Services</a></div>\n  <div><a href=\"code-search-engine.html\">Code Search Engine</a></div>\n  <!--<div><a href=\"code-genie.html\">CodeGenie</a></div> -->\n  <div><a href=\"tutorial.html\">Tutorial</a></div>\n  <div><a href=\"people.html\">People</a></div>\n  <div><a href=\"publications.html\">Publications</a></div>\n</div>\n</div>\n</body>\n</html>\n", "id": 16524.0}