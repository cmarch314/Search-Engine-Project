{"text": "OverviewDownloadPerformanceNewsPublicationsTalksTeamSponsorsContact Here are our steps to run GraphX 1 Get the Spark from the official site We are using the Spark 9 1 2 Configure the Spark cluster The configuration step is very simple The slave file is the same as the Hadoop s conf slaves The conf spark env sh is as below SPARK WORKER DIR scratch jianfenj spark SPARK MASTER IP sensorium 1 The other part is left empty to use the all the resources by default Start the spark cluster use the sbin start all sh 3 Write the GraphX code All the code actually reuses the existed GraphX functions It can be found here For example the pagerank task will load the graph and call the existed graph staticPageRank function def loadWebmap VD ClassTag ED ClassTag sc SparkContext path String defaultEdgeAttr ED defaultVetexAttr VD Graph VD ED val startTime System currentTimeMillis var textRDD sc textFile path var edge textRDD flatMap line var numbers line split var srcId VertexId numbers trim toLong numbers slice 2 numbers size map num Edge srcId num trim toLong defaultEdgeAttr Graph fromEdges VD ED edge defaultVetexAttr def pageRank sc SparkContext inputPath String maxIterations Int Graph Double Double var graph loadWebmap sc inputPath 1 1 graph staticPageRank maxIterations 4 Compile We use SBT to build and run the scala code SBT version 13 1 Scala Version 2 1 4 The build config file is here 5 Run We still use SBT to run the jar file The script is here Take the pagerank task for example the cmd will be like this fullcmd sbt path sbt run sparkserver jar jar c core m mem cmd PageRank input output folder eval fullcmd 2 1 tee logfile core slaves 4 each machine have 4 cores mem 68 m for one worker These arguments will be process by SparkContext inside the Driver scala conf setJars jars conf set spark executor memory memory mem conf set spark cores max cores toString core pregelix ics uci edu 2 14 Design by Free CSS Templates", "_id": "http://pregelix.ics.uci.edu/graphx.html", "title": "pregelix", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n<title>Pregelix</title>\n<meta property=\"og:image\" content=\"images/pregelix.png\"/>\n<link rel=\"stylesheet\" href=\"css/styles.css\" type=\"text/css\" />\n<script src=\"js/jquery.min.js\"></script>\n<script>\n$(document).ready(function(){\n    $(\"#index\").addClass(\"selected\");\n});\n</script>\n\n</head>\n\n<body>\n<div id=\"container\">\n    <script>\n  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\n  ga('create', 'UA-50915345-1', 'uci.edu');\n  ga('send', 'pageview');\n\n</script>\n\n<!-- Facebook Like button script -->\n<div id=\"fb-root\"></div>\n<script>(function(d, s, id) {\n  var js, fjs = d.getElementsByTagName(s)[0];\n  if (d.getElementById(id)) return;\n  js = d.createElement(s); js.id = id;\n  js.src = \"//connect.facebook.net/en_US/all.js#xfbml=1\";\n  fjs.parentNode.insertBefore(js, fjs);\n}(document, 'script', 'facebook-jssdk'));</script>\n\n<div id=\"header\">\n    <table>\n        <tr>\n            <td align=\"left\">\n                <a href=\"\"><img src=\"logo.svg\" width=\"300\"></img></a>\n            </td>\n\t    <td align=\"left\">\n                <a href=\"\"><img src=\"images/lead.png\" width=\"300\"></img></a>\n            </td>\n            <td align=\"right\" valign=\"bottom\">\n\t\t\t\t<table style=\"text-align:right;\">\n\t\t\t\t<tr>\n\t\t\t\t\t<td style=\"padding-bottom:5px;\">\n\t\t\t\t\t\t<div style=\"float: right\">\n\t\t\t\t\t\t\t<g:plusone size=\"medium\" align=\"right\" href=\"http://pregelix.ics.uci.edu/\"></g:plusone>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<!--<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<div class=\"fb-like\" data-href=\"http://pregelix.ics.uci.edu\" data-send=\"false\" data-layout=\"button_count\" data-width=\"450\" data-show-faces=\"false\" data-font=\"arial\"></div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr style=\"float:right;\">\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<a target=\"_blank\" href=\"https://twitter.com/ASTERIXUCI\"><img src=\"images/twitter.png\" title=\"AsterixDB Twitter\"></img></a>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<a target=\"_blank\" href=\"https://www.facebook.com/AsterixDB\"><img src=\"images/facebook.png\" title=\"AsterixDB Facebook\"></img></a>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t-->\n\t\t\t\t</table>\n            </td>\n\t<td>\n\t</td>\n        </tr>   \n    </table>\n</div>  \n\n<!-- Google+ +1 button script -->\n<script type=\"text/javascript\">\n  (function() {\n    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;\n    po.src = 'https://apis.google.com/js/plusone.js';\n    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);\n  })();\n</script>\n\n<div id=\"navigation\">\n    <ul>\n        <li id=\"index\"><a href=\"index.html\">Overview</a></li>\n        <!--<li id=\"ecosystem\"><a href=\"ecosystem.html\">Ecosystem</a></li> -->\n        <li id=\"download\"><a href=\"download.html\">Download</a></li>\n\t<li id=\"pubs\"><a href=\"performance.html\">Performance</a></li>\n        <!--<li><a href=\"./documentation/index.html\" target=\"_blank\">Documentation</a></li>-->\n        <li id=\"news\"><a href=\"news.html\">News</a></li>\n        <li id=\"pubs\"><a href=\"publications.html\">Publications</a></li>\n\t<li id=\"talks\"><a href=\"talks.html\">Talks</a></li>     \n        <li id=\"team\"><a href=\"team.html\">Team</a></li>\n        <li id=\"sponsors\"><a href=\"sponsors.html\">Sponsors</a></li>\n        <li id=\"contact\"><a href=\"contact.html\">Contact</a></li>\n    </ul>\n</div>\n\n    <div id=\"body\">\n        <div id=\"content\">\n\n<p>Here are our steps to run GraphX:\n</p>\n\n<p>\n1. Get the Spark from the official <a href=\"http://spark.apache.org/downloads.html\">site</a>.\n   </br>\n   We are using the Spark 0.9.1.\n</p>\n\n<p>\n2. Configure the Spark cluster</br>\n   The configuration step is very simple. The slave file is the same as the Hadoop's conf/slaves. </br>\n   The conf/spark-env.sh is as below.\n\n   <pre class=\"prettyprint lang-sh\">   \n   SPARK_WORKER_DIR=/scratch/jianfenj/spark\n   SPARK_MASTER_IP=sensorium-1\n   </pre>\n   </br>\n\n   The other part is left empty to use the all the resources by default. </br> \n   Start the spark cluster use the sbin/start-all.sh\n</p>   \n\n<p>\n3. Write the GraphX code</br>\n   All the code actually reuses the existed GraphX functions. It can be found <a href=\"https://github.com/JavierJia/graph-system-comparison/blob/master/compare-graphx/src/main/scala/edu/uci/ics/pregelix/compare/graphx/Driver.scala\">here</a>.</br>\n   For example, the pagerank task will load the graph and call the existed graph.staticPageRank function.\n\n   <pre class=\"prettyprint lang-scala\">\n  def loadWebmap[VD: ClassTag, ED: ClassTag](sc: SparkContext, path: String, defaultEdgeAttr: \n                  ED, defaultVetexAttr: VD): Graph[VD, ED] =\n  {\n     val startTime = System.currentTimeMillis\n     var textRDD = sc.textFile(path);\n     var edge = textRDD.flatMap(\n     line => {\n          var numbers = line.split(\" \");\n          var srcId: VertexId = numbers(0).trim.toLong;\n          numbers.slice(2, numbers.size).map(num => Edge(srcId, num.trim.toLong, defaultEdgeAttr))\n        })\n     Graph.fromEdges[VD, ED](edge, defaultVetexAttr);\n    }\n    \n   def pageRank(sc: SparkContext, inputPath: String, maxIterations: Int): Graph[Double, Double] = {\n      var graph = loadWebmap(sc, inputPath, 1.0, 1.0)\n      graph.staticPageRank(maxIterations)\n  }\n  </pre>\n  </br>\n</p>\n\n<p>4. Compile</br>\n   We use SBT to build and run the scala code. SBT version 0.13.1. Scala Version 2.10.4.</br>\n   The build config file is <a href=\"https://github.com/JavierJia/graph-system-comparison/blob/master/compare-graphx/build.sbt\">here</a>\n</p>\n    \n<p>  \n5. Run</br>\n   We still use SBT to run the jar file. The script is <a href=\"https://github.com/JavierJia/graph-system-comparison/blob/master/compare-graphx/run.sh\">here</a> </br>\n   Take the pagerank task for example, the cmd will be like this:\n\n   <pre class=\"prettyprint lang-sh\">\n   fullcmd=\"$sbt_path/sbt 'run $sparkserver jar $jar -c $core -m $mem\n         \tcmd PageRank $input ${output_folder}' \"         \n   eval $fullcmd 2>&1 | tee $logfile\n   core=$(( $slaves * 4 ))  # each machine have 4 cores.\n   mem=\"6800m\"    # for one worker!\n   </pre>   \n   </br>\n\n   These arguments will be process by SparkContext inside the Driver.scala:\n   </br>\n   <pre class=\"prettyprint\" lang-sh> \n    conf.setJars(jars)\n    conf.set(\"spark.executor.memory\", memory)   # == $mem\n    conf.set(\"spark.cores.max\", cores.toString) # == $core\n   </pre>\n</p>\n \n</div>\n\n        <div class=\"clear\"></div> </div> <div id=\"footer\">\n    <table>\n    <tr>\n    <td align=\"left\" width=\"220\">\n        <a href=\"http://www.isg.ics.uci.edu\" target=\"_blank\"><img src=\"images/isg.png\" height=\"75\" width=\"75\" align=\"left\" style=\"background-color : #fff;\"></img></a>\n    </td>\n    <td align=\"center\">\n        <p>&copy; pregelix.ics.uci.edu 2014.</br><font style=\"font-size:xx-small;\">Design by <a href=\"http://www.spyka.net\">Free CSS Templates</a></font></p>\n    </td>\n    <td align=\"right\" width=\"220\">\n        <a href=\"http://www.uci.edu\" target=\"_blank\"><img src=\"images/uci_white.png\" height=\"75\" width=\"75\"></img></a>\n        <a href=\"http://www.ucla.edu\" target=\"_blank\"><img src=\"images/ucla_black.gif\" height=\"75\" width=\"75\"></img></a>\n    </td>\n    </tr>\n    </table>\n</div>\n\n\n</div>\n</body>\n</html>\n", "id": 2852.0}