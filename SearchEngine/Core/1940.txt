{"text": "ICS 125 Project in Software System Design Fall Quarter 1999 Requirements Due Date As described on the course syllabus This document must be signed by your customer This will help ensure that he has agreed that you have met all his needs This is after all a contract with your customer Overview After completing your prospectus your team must develop a software requirements document that satisfies the needs of your customer This document will consist of two primary components a requirements specification and a system test plan Your design must also include a glossary or data dictionary which defines all terms used that are specific to the application you are developing Other accompanying documentation may be included as well In conjunction with this requirements specification your team must develop an acceptance statement and an initial system test plan covering the requirements The system test plan must cover all basic software capabilities to be provided by the system by applying functional test heuristics black box to each capability described in the requirements specification and developing a test case for each interaction between capabilities As has been discussed in class you have substantial flexibility in choosing the specific form for the various sections of your deliverables You ve done these before in ICS 52 and ICS 121 so you have plenty of model documents to draw from to help you determine how to structure this statement A list of the standard items that must be turned in with each ICS 125 assignment and posted on the team s web site are in the course syllabus Required sections of this document are described below Deliverable Objectives Requirements Qualities Keep in mind that key objectives of a requirements document are to Document the customer s needs Identify functional capabilities to be provided Identify non functional and environmental constraints that must be satisfied Provide a definitive basis for testing and verification Identify lifecycle considerations such as incremental sub system development Provide a reference tool readable by customer developer and maintainer Serve as a contract between customer and developer In addition keep in mind that a requirements document should possess the following qualities Complete everything that is essential is described Understandable the customer can read it and be convinced that all his objectives and needs are adequately and accurately described Utility the information in the document can be used effectively to help in the design phase e g an OO requirements analysis can aid in development of an OO design Unambiguous every reader will come away with the same understanding Consistent no contradictions Abstract one model many realizations and no implementation details Feasible the requirements can be satisfied within resource constraints Even the entire document is at same level of detail Effectively modifiable this is a living document Concise and appropriate no extraneous details and not more than required Verifiable and testable you can tell when you ve met the requirements Required Document Contents Introduction Provide an introduction that discusses the scope and purpose of this document as well as your specific approaches related to the requirements of the system This introduction should also discuss the organization of this document and guide the reader Understanding Expand the understanding section of your original document prospectus Make sure to add descriptions of what steps or actions you took to understand each technology or software during this phase If you make changes to this section add text describing why the change was necessary and why it more accurately reflects your new understanding This section need not be different if your understanding hasn t changed Project Plan This will be an iterative expansion of your previous submission Expand your project plan to represent how you have accomplished the work so far Reassess the project risks Expand your task network or work breakdown structure to include the effort expended to complete this task Based on the work you have done revise your estimates on how much your team can accomplish and deliver If you make changes add text describing why the change was necessary or why it will improve the ability of your team to accomplish the work you have proposed Requirements Specification You must of course provide a requirements specification Use diagrams to help give appropriate overviews and understanding Note that pictures may well be an essential element of the complete description of any graphical interface Some suggested contents follow Overview of System RequirementsProvides a brief discussion of basic needs and proposed usage Environment CharacteristicsDescribes hardware software and users of the system Fixed InterfacesDocuments any interfaces to the environment that are fixed and hence not part of the design of the system e g an external database Software CapabilitiesSpecifies functionality in groups of related capabilities A diagram is helpful to show the relationship between capability groups For each capability at least the following should be specified Description functionality of the capability group Input Output Persistent Data that lasts from one invocation of the system to the next Considerations specific to the application domain and other relevant fields may be provided too Sample I O or ScenarioProvides a sample input output stream describing user interaction with the system or similar usage scenario NOTE if useful the streams can be grouped with the capability group to which they apply ConstraintsNon functional constraints including safety and security constraints Quantifiable constraints e g timing and precision GoalsDocuments any guidance for evaluating alternatives Lifecycle Considerations Discusses capability subsets and or product families for the purposes of incremental development and potential changes Acceptance Requirements Describes minimal requirements for system acceptance by the client such as the minimum capabilities that must be provided in the delivered system System Test Plan Include a test plan capable of demonstrating minimal functionality of all system elements test cases should be specified for each software capability specified NOTE if desired the test cases can be grouped with the capability group to which they apply otherwise a cross reference listing of some sort should be provided For each test case Test Case ID Purpose of test case Item s being tested Input specification Output specification Expected Results or Test Oracle Mechanism Test environmental needs or special test procedures Glossary Defines all non obvious terms used in the specifications above May include a detailed data dictionary Documentation This section is reserved for any documentation you may have developed during this phase of the project Specifically if during the course of developing the your understanding of the various technologies involved in the project you discovered items that were not documented but which were important then you should include that here Additionally you should list here the major background sources of information that you used during this phase or any that you plan to use during the remainder of the project This would include references to similar systems and or procedures Requirements Presentations Reviews See the syllabus for dates Each team should prepare a 15 minute presentation after which we will allow up to 5 minutes of questions Your customer should be present Prepare your presentation appropriately Your presentation should include the following Overview of your system Current state of your project plan Environment and interfaces Highlights of your requirements specification including Summary of required capabilities with a diagram if available one or more detailed requirements for the most important capabilities pick the key issues to discuss in detail Lifecycle considerations how you intend to develop the system throughout the lifecycle System test planhow you intend to both demonstrate that the system should be accepted as well as how you intend to convince yourselves that it is more than acceptable Be sure to focus your presentation on the key issues Don t spend time with the obvious things If there s something in your presentation that you find boring so will your audience Don t gloss over problems Your customer wants you to succeed your instructors want you to succeed They can t help you unless you tell them where you think the problems are or are likely to be You should also ask your customer what he would like to see presented ", "_id": "http://www.ics.uci.edu/~taylor/ICS125_FQ04/requirements.html", "title": "deliverable 2: requirements", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\r<HTML>\r<HEAD>\r   <META HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=iso-8859-1\">\r   <META NAME=\"GENERATOR\" CONTENT=\"Mozilla/4.07 (Macintosh; I; PPC) [Netscape]\">\r   <TITLE>Deliverable 2: Requirements</TITLE>\r</HEAD>\r<BODY BGCOLOR=\"#FFFFF0\">\r\r<CENTER>\r<H2>\rICS 125:<BR>\rProject in Software System Design</H2></CENTER>\r\r<CENTER>\r<H3>\rFall Quarter 1999</H3></CENTER>\r\r<CENTER>\r<H1>\rRequirements</H1></CENTER>\r\r<H3>\rDue Date</H3>\r\rAs described  on the course syllabus.\r\r<P><B>This document must be signed by your customer.&nbsp; </B>This will\rhelp ensure that he has agreed that you have met all his needs.&nbsp;\rThis is, after all, a contract with your customer.\r<P>\r<HR>\r<h3> Overview </h3>\r\r<P>After completing your prospectus, your team must develop a software\rrequirements document that satisfies the needs of your customer.  This\rdocument will consist of two primary components: a requirements\rspecification and a system test plan.  Your design must also include a\rglossary, or data dictionary, which defines all terms used that are\rspecific to the application you are developing.  Other accompanying\rdocumentation may be included as well.\r\r<P>In conjunction with this requirements specification, your team must\rdevelop an acceptance statement and an initial system test plan covering the\rrequirements. The system test plan must cover all basic software capabilities\rto be provided by the system by applying functional test heuristics (black\rbox) to each capability described in the requirements specification and\rdeveloping a test case for each interaction between capabilities.\r\r<P>As has been discussed in class, you have substantial flexibility in\rchoosing the specific form for the various sections of your deliverables. You've\rdone these before, in ICS 52 and ICS 121, so you have plenty of \"model\rdocuments\" to draw from, to help you determine how to structure this statement.\r\r<P>A list of the standard items that must be turned in with <em> each </em>\rICS 125 assignment and posted on the team's web site are in the course syllabus.\rRequired sections of this document are described below.\r\r<HR>\r<H3>\rDeliverable Objectives/Requirements Qualities</H3>\rKeep in mind that key objectives of a requirements document are to:\r<UL>\r<LI> Document the customer's needs</LI>\r<LI> Identify functional capabilities to be provided</LI>\r<LI> Identify non-functional and environmental constraints that must be \rsatisfied</LI>\r<LI> Provide a definitive basis for testing and verification</LI>\r<LI> Identify lifecycle considerations such as incremental sub-system \rdevelopment</LI>\r<LI> Provide a reference tool readable by customer, developer, and \rmaintainer</LI>\r<LI> Serve as a contract between customer and developer</LI>\r</UL>\r\rIn addition, keep in mind that a requirements document should possess the\rfollowing qualities:\r<UL>\r<LI> Complete: everything that is essential is described</LI>\r<LI> Understandable:  the \"customer\" can read it and be convinced that all his\robjectives and needs are adequately and accurately described</LI>\r<LI> Utility: the information in the document can be used effectively to help\rin the design phase (e.g., an OO requirements analysis can aid in development\rof an OO design)</LI>\r<LI> Unambiguous: every reader will come away with the same understanding</LI>\r<LI> Consistent: no contradictions</LI>\r<LI> Abstract: one model, many realizations, and no implementation details</LI>\r<LI> Feasible: the requirements can be satisfied within resource constraints</LI>\r<LI> Even: the entire document is at same level of detail</LI>\r<LI> Effectively modifiable: this is a living document</LI>\r<LI> Concise and appropriate: no extraneous details and not more than required</LI>\r<LI> Verifiable and testable: you can tell when you've met the requirements</LI>\r</UL>\r\r<HR>\r<H3> Required Document Contents</H3>\r\r<H4> Introduction</H4>\rProvide an introduction that discusses the scope and purpose of this document\ras well as your specific approaches related to the requirements of the\rsystem. This introduction should also discuss the organization of\rthis document and guide the reader.\r\r<H4> Understanding</H4>\rExpand the understanding section of your original document\r(prospectus).  Make sure to add descriptions of what steps or actions\ryou took to understand each technology or software during this phase.\rIf you make changes to this section, add text describing why the change\rwas necessary, and why it more accurately reflects your new\runderstanding. This section need not be different if your understanding\rhasn't changed.\r\r<H4> Project Plan</H4>\rThis will be an iterative expansion of your previous submission. Expand\ryour project plan to represent how you have accomplished the work so far.\rReassess the project risks. Expand your task network or work breakdown\rstructure to include the effort expended to complete this task. Based on\rthe work you have done, revise your estimates on how much your team can\raccomplish and deliver.\r\r<P>If you make changes, add text describing why the change was necessary\ror why it will improve the ability of your team to accomplish the work\ryou have proposed.\r\r<H4> Requirements Specification</H4>\rYou must, of course, provide a requirements specification. \rUse diagrams to help give appropriate overviews and understanding.\rNote that pictures may well be an <I>essential </I> element of the\rcomplete description of any graphical interface.\rSome suggested contents follow.\r\r<UL>\r<LI> Overview of System Requirements</LI>\r<BR>Provides a brief discussion of basic needs and proposed usage. \r\r<LI> Environment Characteristics</LI>\r<BR>Describes hardware, software, and users of the system.\r\r<LI> Fixed Interfaces</LI>\r<BR>Documents any interfaces to the environment that are fixed and hence\rnot part of the design of the system (e.g. an external database).\r\r<LI> Software Capabilities</LI>\r<BR>Specifies functionality in groups of related capabilities.\rA diagram is helpful to show the relationship between capability groups.\r<BR>For each capability, at least the following should be\rspecified:  Description (functionality of the capability group), Input, Output, \rPersistent Data (that lasts from one invocation of the system to the\rnext). Considerations specific to the application domain and other relevant\rfields may be provided too.\r\r<LI> Sample I/O or Scenario</LI>\r<BR>Provides a sample input/output stream describing user interaction with\rthe system, or similar usage scenario.\r<BR>NOTE: if useful, the streams can be grouped with the capability group\rto which they apply.\r\r<LI> Constraints</LI>\r<BR>Non-functional constraints, including safety and security\rconstraints.\r<BR>Quantifiable constraints (e.g., timing and precision).\r\r<LI> Goals</LI>\r<BR>Documents any guidance for evaluating alternatives.\r\r</UL>\r\r<h4> Lifecycle Considerations</h4>\r\rDiscusses capability subsets and/or product families for the purposes of\rincremental development and potential changes.\r\r<h4> Acceptance Requirements</h4>\r\rDescribes minimal requirements for system acceptance by the client, such\ras the minimum capabilities that must be provided in the delivered system.\r\r<h4> System Test Plan</h4>\r<P>Include a test plan capable of demonstrating minimal functionality\rof all system elements:\rtest cases should be specified for each software capability specified.\r\r<P>NOTE: if desired, the test cases can be grouped with the capability\rgroup to which they apply, otherwise a cross reference listing of some\rsort should be provided.\r\r<UL>\r<LI> For each test case</LI>\r   <UL>\r   <LI> Test Case ID</LI>\r   <LI> Purpose of test case</LI>\r   <LI> Item(s) being tested</LI>\r   <LI> Input specification</LI>\r   <LI> Output specification</LI>\r      <UL>\r      <LI> Expected Results or Test Oracle Mechanism</LI>\r      </UL>\r   <LI> Test environmental needs or special test procedures</LI>\r   </UL>\r</UL>\r\r<h4> Glossary</h4>\rDefines all non-obvious terms used in the specifications above.\rMay include a detailed data dictionary.\r\r<h4> Documentation</h4>\r\rThis section is reserved for any documentation you may have developed during\rthis phase of the project. Specifically, if during the course of developing\rthe your understanding of the various technologies involved in the project,\ryou discovered items that were not documented, but which were important,\rthen you should include that here.\r\r<P>Additionally you should list here the major background sources of information\rthat you used during this phase or any that you plan to use during the\rremainder of the project. This would include references to similar systems\rand/or procedures.\r\r<hr>\r<h3>Requirements Presentations/Reviews.</h3>\rSee the syllabus for dates.\r\r<P>Each team should prepare a 15 minute presentation, after which we will\rallow up to 5 minutes of questions. Your customer should be present.&nbsp;\r\r<p>\rPrepare your presentation appropriately. Your presentation should include\rthe following:\r<UL>\r<LI> Overview of your system;</LI>\r<LI> Current state of your project plan;</LI>\r<LI> Environment and interfaces;</LI>\r<LI> Highlights of your requirements specification including</LI>\r   <UL>\r   <LI> Summary of required capabilities, with a diagram if available;</LI>\r      <BR>one or more detailed requirements for the most important capabilities\r      <BR>(pick the key issues to discuss in detail);\r   </UL>\r<LI> Lifecycle considerations</LI>\r<BR>(how you intend to develop the system throughout the lifecycle);\r<LI> System test plan</LI>\r<BR>how you intend to both demonstrate that the system should be accepted\ras well as how you intend to convince yourselves that it is more than acceptable!).\r</UL>\r\r<p>  Be <em> sure </em> to focus your presentation on the key issues.  Don't\rspend time with the obvious things.  If there's something in your presentation\rthat you find boring, so will your audience.  Don't gloss over problems. Your\rcustomer wants you to succeed, your instructors want you to succeed.   They can't\rhelp you unless you tell them where you think the problems are, or are likely to\rbe.\r\r<p>\rYou should also ask your customer what he would like to see presented.\r\r\r</BODY>\r</HTML>\r", "id": 1940.0}