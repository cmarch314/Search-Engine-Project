{"text": "Access control Access control User problemProvide granular permissions read edit turn off revisions print etc to different users SolutionUsername based permissions listWeb considerationsSecurity and server support Previous slide Next slide Back to the first slide View Graphic Version Notes Access control is something that Word Pro gives far greater control to than Word In Word you have document read and write permissions based on passwords and then a document can be protected to only allow revisions or annotations also based on a password In Word Pro 96 you can specify quite precisely every role that every possible user has This is all based on a set of permissions lists These are stored right there in the binary file format Naturally this would take some adapting if for instance you wanted it to work with HTML documents Obviously you can t just store the permissions lists right there in unencrypted ASCII text It would require considerable server side support and if you wanted to implement it to the degree that Lotus does authoring environment support So for instance if I call up an access controlled file the server would hand my editor a file with instructions about what I m allowed to do and not to do If my editor cheats and lets me do things locally the server of course still won t let me do those nasty things to the server copy So it s not trivial to say the least ", "_id": "http://www.ics.uci.edu/~ejw/authoring/sanmateo/fein_slides/tsld011.htm", "title": "access control", "html": "<HTML>\n<HEAD>\n <TITLE>Access control</TITLE> \n</HEAD>\n<BODY>\n <H1>Access control</H1> \n <P><H2>Access control</H2>\n\n</P>\n\n<P><UL><LI>User problem<UL><LI>Provide granular permissions (read, edit, turn off revisions, print, etc.) to different users </UL><LI>Solution<UL><LI>Username-based permissions list</UL><LI>Web considerations<UL><LI>Security and server support</UL></UL></P>\n\n<P></P> \n<P>\n<TABLE>\n<TD HEIGHT=100 WIDTH=100>\n\n<A HREF = \"tsld010.htm\">Previous slide </A> </TD>\n<TD HEIGHT=100 WIDTH=100>\n\n<A HREF = \"tsld012.htm\">Next slide </A>  </TD>\n<TD HEIGHT=100 WIDTH=150>\n\n<A HREF = \"index.htm\">Back to the first slide </A>  </TD>\n<TD HEIGHT=100 WIDTH=150>\n\n<A HREF = \"sld011.htm\">View Graphic Version </A>  </TD>\n</TABLE>\n<BR>\n</p>\n\n<FONT size=4><STRONG> Notes: </FONT></STRONG>\n<HR SIZE=3>\n<P> </P>\n\n<P>Access control is something that Word Pro gives far greater control to than Word. In Word, you have document read and write permissions based on passwords, and then a document can be protected to only allow revisions or annotations, also based on a password. In Word Pro 96, you can specify quite precisely every role that every possible user has. </P>\n\n<P></P>\n\n<P>This is all based on a set of permissions lists. These are stored right there in the binary file format.</P>\n\n<P></P>\n\n<P>Naturally this would take some adapting if, for instance, you wanted it to work with HTML documents. Obviously you can\ufffdt just store the permissions lists right there in unencrypted ASCII text. It would require considerable server-side support, and, if you wanted to implement it to the degree that Lotus does, authoring environment support. So for instance, if I call up an access-controlled file, the server would hand my editor a file, with instructions about what I\ufffdm allowed to do and not to do. If my editor cheats and lets me do things locally, the server of course still won\ufffdt let me do those nasty things to the server copy. So it\ufffds not trivial, to say the least.</P>\n\n<P> </P> \n</Body>\n</HTML>", "id": 35977.0}