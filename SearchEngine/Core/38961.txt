{"text": "Navigation Up Table of Contents Bibliography Index Title Page CGAL Quotient NT DefinitionAn object of the class Quotient NT is an element of the field of quotients of the integral domain type NT If NT behaves like an integer Quotient NT behaves like a rational number LEDA s class rational see Section has been the basis for Quotient NT A Quotient NT q is represented as a pair of NTs representing numerator and denominator include CGAL Quotient h Is Model for the ConceptFieldNumberType Creation Quotient NT q introduces an uninitialized variable q template class T Quotient NT q T t introduces the quotient t 1 NT needs to have a constructor from T Quotient NT q NT n NT d introduces the quotient n d Operations There are two access functions namely to the numerator and the denominator of a quotient Note that these values are not uniquely defined It is guaranteed that q numerator and q denominator return values nt num and nt den such that q nt num nt den only if q numerator and q denominator are called consecutively wrt q i e q is not involved in any other operation between these calls NT q numerator returns a numerator of q NT q denominator returns a denominator of q The stream operations are available as well They assume that corresponding stream operators for type NT exist std ostream std ostream out q writes q to ostream out in format n d where n q numerator and d q denominator std istream std istream in q reads q from istream in Expected format is n d where n and d are of type NT A single n which is not followed by a is also accepted and interpreted as n 1 The following functions are added to fulfill the CGAL requirements on number types double to double q returns some double approximation to q bool is valid q returns true if numerator and denominator are valid bool is finite q returns true if numerator and denominator are finite Quotient NT sqrt q returns the square root of q This is supported if and only if NT supports the square root as well Next Rational traits NT Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/NumberTypeSupport_ref/Class_Quotient.html", "title": "quotient&lt;nt&gt;", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './NumberTypeSupport_ref/Quotient.tex' -->\n<html> <head>  \n<title>Quotient&lt;NT&gt;</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_1403\"></A>\n\n<A NAME=\"Cross_link_anchor_1404\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_1407\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Class.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_CGAL::Quotient<NT>\"></A>\n<h2><I>CGAL::Quotient&lt;NT&gt;</I></h2>\n\n\n<A NAME=\"Quotient\"></A>\n<P>\n\n<H3>Definition</H3>An object of the class <I><A HREF=\"Class_Quotient.html#Cross_link_anchor_1404\">Quotient</A>&lt;NT&gt;</I> is an element of the \nfield of quotients of the integral domain type <I>NT</I>.\nIf <I>NT</I> behaves like an integer, <I><A HREF=\"Class_Quotient.html#Cross_link_anchor_1404\">Quotient</A>&lt;NT&gt;</I>\nbehaves like a rational number. \nL<SMALL>EDA</SMALL>'s class <I>rational</I> (see Section&nbsp;<A HREF=\"../NumberTypeSupport/Chapter_main.html#leda-nt\"><IMG SRC=\"cc_ref_up_arrow.gif\" ALT=\"reference\" WIDTH=\"10\" HEIGHT=\"10\"></A>)\nhas been the basis for <I><A HREF=\"Class_Quotient.html#Cross_link_anchor_1404\">Quotient</A>&lt;NT&gt;</I>.\nA <I><A HREF=\"Class_Quotient.html#Cross_link_anchor_1404\">Quotient</A>&lt;NT&gt;</I> <I>q</I> is represented as a pair of \n<I>NT</I>s, representing numerator and denominator.\n<P>\n\n<I>#include &lt;<A HREF=\"../../../include/CGAL/Quotient.h\">CGAL/Quotient.h</A>&gt;</I>\n<P>\n\n<H3>Is Model for the Concept</H3><A HREF=\"../Kernel_23_ref/Concept_FieldNumberType.html#Cross_link_anchor_2\">FieldNumberType</A>\n<P>\n\n<H3>Creation</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Quotient.html#Cross_link_anchor_1404\">Quotient</A>&lt;NT&gt; q;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    introduces an uninitialized variable <I>q</I>.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    template &lt;class T&gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Quotient.html#Cross_link_anchor_1404\">Quotient</A>&lt;NT&gt; q (  T t);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    introduces the quotient <I>t/1</I>. NT needs to have a constructor from T.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Quotient.html#Cross_link_anchor_1404\">Quotient</A>&lt;NT&gt; q (  NT n,  NT d);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    introduces the quotient <I>n/d</I>.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Operations</H3>\n<P>\n\nThere are two access functions, namely to the\nnumerator and the denominator of a quotient.\nNote that these values are not uniquely defined. \nIt is guaranteed that <I>q.numerator()</I> and \n<I>q.denominator()</I> return values <I>nt_num</I> and\n<I>nt_den</I> such that <I>q = nt_num/nt_den</I>, only\nif  <I>q.numerator()</I> and <I>q.denominator()</I> are called\nconsecutively wrt <I>q</I>, i.e.&nbsp;<I>q</I> is not involved in \nany other operation between these calls.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_NT_numerator69_const;\"></A>\nNT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    q.numerator ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns a numerator of <I>q</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_NT_denominator69_const;\"></A>\nNT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    q.denominator ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns a denominator of <I>q</I>.\n        </TD></TR>\n        </TABLE>\n<P>\n\nThe stream operations are available as well. \nThey assume that corresponding stream operators for type <I>NT</I> exist.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    std::ostream&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n     std::ostream&amp; out &lt;&lt;  q<A NAME=\"Function_std::ostream__operator666std::ostream__out+_const_Quotient6NT9__q9;\"></A>\n\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    writes <I>q</I> to ostream <I>out</I> in format ``<TT>n/d</TT>'', where\n       <TT>n</TT><MATH><I>==</I></MATH><I>q.numerator()</I> and <TT>d</TT><MATH><I>==</I></MATH><I>q.denominator()</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    std::istream&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n     std::istream&amp; in &gt;&gt;  &amp; q<A NAME=\"Function_std::istream__operator996std::istream__in+_Quotient6NT9__q9;\"></A>\n\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    reads <I>q</I> from istream <I>in</I>. Expected format is\n        ``<TT>n/d</TT>'', where <TT>n</TT> and <TT>d</TT> are of type <I>NT</I>.\n        A single <TT>n</TT> which is not followed by a <TT>/</TT>  is also\n        accepted and interpreted as <TT>n/1</TT>.\n        </TD></TR>\n        </TABLE>\n<P>\n\nThe following functions are added to fulfill the C<SMALL>GAL</SMALL> requirements\non number types.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_double_to_double6const_Quotient6NT9__q9;\"></A>\ndouble\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    to_double (  q)\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns some double approximation to <I>q</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_is_valid6const_Quotient6NT9__q9;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    is_valid (  q)\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns true, if numerator and denominator are valid.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_is_finite6const_Quotient6NT9__q9;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    is_finite (  q)\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns true, if numerator and denominator are finite.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Quotient6NT9_sqrt6const_Quotient6NT9__q9;\"></A>\n<A HREF=\"Class_Quotient.html#Cross_link_anchor_1404\">Quotient</A>&lt;NT&gt;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Function_sqrt.html#Cross_link_anchor_1414\">sqrt</A> (  q)\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the <A HREF=\"Function_square.html#Cross_link_anchor_1418\">square</A> root of <I>q</I>.  This is supported if and only if\n        <I>NT</I> supports the <A HREF=\"Function_square.html#Cross_link_anchor_1418\">square</A> root as well.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Class_Rational_traits.html\"><I>Rational_traits&lt;NT&gt;</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_2!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 38961.0}