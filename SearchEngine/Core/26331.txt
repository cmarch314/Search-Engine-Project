{"text": "Project 3a Basic Rigging Goal To learn basic rigging techniques such as connections and Set Driven Keys Prerequisite Exercises Hierarchy The assignment will walk you through rigging an object using basic rigging techniques The goal of rigging is to provide animators with useful tools to animate with In general rigging deals with characters but for simplicity we will start by rigging an inanimate object We will be using the Pirate Ship file for this assignment as well as the Animation menu set Your first task is to change the pivot points for the flaps and rudder of the ship into something more useful Snap the pivot of each flap to the top outer edge Snap the pivot of the rudder to the center of the back of it Snap the pivot of each cannon to the back of it We will only be rigging the right side of the ship so don t bother with anything on the left side If you open the Outliner you will notice that everything is named reasonably well but lacks organization We will fix this Group all of the left and right cannons into the left cannons and right cannons groups respectively Similarly group all of the left and right flaps into the groups left flaps and right flaps Place all of the sails masts and beams under the sails group Finally group all of these groups and the remaining objects into the ship geo group Now we will start to create the controls to be used by the animators Use Create NURBS Primitives Circle to create three circles Place two of them encircling the bottom of the ship and one over the wheel Name the circle over the wheel wheel anim the outer circle top con anim and the inner circle ship anim Instead of interacting with the geometry animators will use these curves to animate the ship You might be wondering why the ship has two anims The top con is there to place the ship in its initial position in the animation The ship anim is there to let the animator move the ship relative to its initial position This way if we ever need to move the ship to its starting point we can simply zero out the ship anim As a rule of thumb you should never animate the top con since this will make it harder to move your animation to a different scene Finally we will create the control for the cannons Switch to the side view Go to Create EP Curve Tool Options and change the Curve degree to 1 Linear Use the tool and grid snapping to create a box around the cannons From another view move the box to the side of the ship and name it right cannon anim Now we will tell Maya to use the current position as the defaults for the anims Select all of the anims you just created and go to Modify Freeze Transformations Notice in the Channel Box that the Translate and Rotate for the anims is now and the Scale is 1 Freeze Transformations keeps an object s current position but sets it to be the new default position of the object This is useful for animators since it allows them to quickly return to the default position by zeroing out the Channel Box Transformations have already been frozen on each piece of ship geometry We created a few more objects in the last step so we must clean up the Outliner again Place the wheel anim right cannon anim and ship geo under the ship anim Place the ship anim under the top con anim Now we have single top node again Rigging is a process of giving animators control over an object but is also seeks to hide details from the animator that they shouldn t be concerned with The primary method for accomplishing this is restricting the channels such as translate and rotate that animators are able to key To effectively remove an channel from the Channel box select it then Right click it and select Lock and Hide Selected from the menu If you accidently hid the wrong channel you may be wonder where these channels went You can find a list of all available channels by navigating to the Channel Box menu set and going to Edit Channel Control The channels you hid should be listed under Nonkeyable Hidden Select them and move them to Keyable to unhide them Lock and Hide the following channels for each of the anims top con anim Scale channelsship anim Scale and Visibility channelsright cannon anim All channelswheel anim All channels Now that we have locked away all the channels on the wheel anim we will add our own custom attribute Select the wheel anim In the Channel Box menu go to Edit Add Attribute Set Long name to Turn Data Type to Float Minimum to 9 and Maximum to 9 Click OK to add the attribute Notice the new channel in the Channel Box Although we have added a new attribute to the wheel anim at the moment it does nothing We will fix this momentarily using the Hypergraph The Hypergraph represents the scene as a set of boxes which represent objects These boxes can be connected which allows the attributes of one object to control the attributes of another We will use the Hypergraph to make the Turn channel on the wheel anim affect the rotation of the wheel and rudder First go to Window Hypergraph Connections Select the wheel anim wheel and rudder In the Hypergraph go to Graph Input Connections This should display the nodes for the selected objects as well as their shape nodes which you can ignore Using Left click you can arrange the boxes as you please To connect two nodes Middle click and drag on the right side of the output node and release on the input node You can either choose a connection from the suggestions that appear or choose a specific one by selecting Other from the bottom of the menu Do this from the wheel anim to the rudder We want a very specific connection so select Other from the menu that appears This will bring up the Connection Editor Select Turn from the list on the left and select rotateY on the right This can be found under rotate click the small to expand Now Turn and rotateY should be highlighted and in italics The Turn attribute now controls the Rotate Y of the rudder Repeat the same process for wheel anim and wheel except connect Turn to rotateZ Try changing the value of Turn on the wheel anim The wheel and rudder should rotate as you change the value Unfortunately there is one problem with the current configuration The wheel should be rotating in the opposite direction Luckily this can be fixed relatively easily by using a Multiply Divide node In the Hypergraph menu go to Rendering Create Render Node From the list select Multiply Divide The node should appear somewhere in the graph If you don t see it try zooming out Connect the wheel anim s Turn attribute to the Multiply Divide node s input1X attribute note that the use of X in this case is arbitrary and doesn t necessarily correspond to axes Next select the Multiply Divide node and in the Channel Box change the value of Input 2X to 1 This essentially takes the two input values Turn and 1 multiplies them and outputs the result via the nodes s outputX attribute The final step is to connect the outputX of the Multiply Divide node into the rotateZ of the wheel This will replace the previous connection between the wheel anim and wheel Changing the value of Turn should now yield the correct results We need to add controls so we can bring the cannons out and the flaps up Select the right cannon anim and add two new attributes Call them cannons out and flaps up Both their Data Types should be Float the Minimum and the Default For cannons out set Maximum to 1 For flaps up set Maximum to 1 We want to have the flaps come up when we change flaps up but if use a direct connection like we used with the wheel anim then all the flaps will rotate the exact same amount We want a little more variation and so we will use Set Driven Keys instead The general idea is that all the flaps will be down when flaps up is and they will all be up in different ways when flaps up is 1 Go to Animate Set Driven Key Set This will open the Set Driven Key dialog Select the right cannon anim and click Load Driver Select all of the right flap objects and then click Load Driven Now that everything is loaded we can specify what attributes are driving what In the Set Driven Key dialog select right cannon anim and flaps up for the Driver Select all of the flaps and then select rotateX rotateY and rotateZ Hit the Key button Keying the value tells Maya that a flaps up value of means that all the flaps should be down Now we want to specify what it should be at 1 Set flap up to be 1 in the Channel Box Rotate all of the flaps so that they are up and still reasonably connected to the ship Hit Key again in Set Driven Key dialog and then close it Try changing the flaps up channel now The flaps should go up and down as you change it from to 1 To bring the cannons out we will use simple connections In the Hypergraph connect the cannons out attribute of the right cannon anim to the translateX of each cannon Changing cannons out to 1 should cause all the cannons to move outward Your final task is to organize your rig into layers These layers will prevent the animator from touching things they shouldn t and give them visual hints of what they are looking at Create four new layers by clicking the Create Layer button in the Layer Editor Double click a layer to edit it Name and color the layers like this center anims red left anims blue right anims green geometry none You can add objects to a layer by selecting them and then Right clicking a layer and selecting Add Selected Objects from the menu Add the top con anim ship anim and wheel anim to the center anims layer Add the right cannon anim to the right anims layer Add ship geo to the geometry layer The two boxes to the left of the layer s color indicate the current visibility and display type You can click these boxes to toggle the current setting For the geometry layer set the display type to Reference indicated by an R This will prevent the animator from accidentally selecting the geometry With everything in its proper place you should be finished Turn In You will be graded on the following Following instructionsWorking boat rigCorrect anims Frozen transforms correct locked and hidden channelsClean OutlinerExtra Credit Rig the cannons and flaps on the left side Hint A Multiply Divide node may come in handy at some point Turn in the following A Maya file containing the rigged boat with the following name convention lastname firstname project3a ma Credits This homework assignment was prepared by Barbara Mones ", "_id": "http://www.ics.uci.edu/~dramanan/teaching/ics162_fall12/hw/hw3a/", "title": "project 3a", "html": "<html>\n<head>\n\t<title>Project 3a</title>\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"../../style.css\" />\n</head>\n\n<body>\n<div class=\"bodyDiv\">\n\n<center><h1>Project 3a: Basic Rigging</h1></center>\n\n<fieldset>\n<legend><strong>Goal</strong></legend>\nTo learn basic rigging techniques such as connections and Set Driven Keys.\n</fieldset>\n\n<fieldset>\n<legend><strong>Prerequisite Exercises</strong></legend>\n<ul>\n\t<li><a href=\"../../exercises/hierarchy_exercise.html\">Hierarchy</a></li>\n</ul>\n</fieldset>\n\n<p>\nThe assignment will walk you through rigging an object using basic rigging techniques. The goal of rigging is to provide animators with useful tools to animate with. In general, rigging deals with characters, but for simplicity we will start by rigging an inanimate object. We will be using the <a href=\"../../maya_files/pirate_ship.mb\">Pirate Ship</a> file for this assignment as well as the Animation menu set.\n</p>\n\n<ol>\n\n<li class=\"step\">\nYour first task is to change the pivot points for the flaps and rudder of the ship into something more useful. \n<ul>\n  <li>Snap the pivot of each flap to the top, outer edge.</li> \n  <li>Snap the pivot of the rudder to the center of the back of it.</li> \n  <li>Snap the pivot of each cannon to the back of it.</li>\n</ul> \nWe will only be rigging the right side of the ship, so don't bother with anything on the left side.</li>\n\n<center>\n<img class=\"tiny\" src=\"images/flap_snap.jpg\" />\n<img class=\"tiny\" src=\"images/rudder_snap.jpg\" />\n<img class=\"tiny\" src=\"images/cannon_snap.jpg\" />\n</center>\n\n<li class=\"step\">\nIf you open the Outliner, you will notice that everything is named reasonably well, but lacks organization. We will fix this. \n<ul>\n  <li>Group all of the left and right cannons into the <strong>left_cannons</strong> and <strong>right_cannons</strong> groups respectively.</li> \n  <li>Similarly, group all of the left and right flaps into the groups <strong>left_flaps</strong> and <strong>right_flaps</strong>.</li> \n  <li>Place all of the sails, masts, and beams under the <strong>sails</strong> group.</li> \n  <li>Finally, group all of these groups and the remaining objects into the <strong>ship_geo</strong> group.</li>\n</ul>\n</li>\n\n<img class=\"thumb\" src=\"images/grouped.png\" />\n\n<li class=\"step\">\n Now we will start to create the controls to be used by the animators.\n<ul>\n  <li>Use <strong>Create &rarr; NURBS Primitives &rarr; Circle</strong> to create three circles. </li> \n  <li>Place two of them encircling the bottom of the ship and one over the wheel. </li> \n  <li>Name the circle over the wheel <strong>wheel_anim</strong>, the outer circle <strong>top_con_anim</strong>, and the inner circle <strong>ship_anim</strong>. </li> \n</ul>\n\nInstead of interacting with the geometry, animators will use these curves to animate the ship.\n\n<p>\nYou might be wondering why the ship has two anims. The top con is there to place the ship in its initial position in the animation. The ship anim is there to let the animator move the ship relative to its initial position. This way if we ever need to move the ship to its starting point we can simply zero out the ship_anim. As a rule of thumb, you should never animate the top con since this will make it harder to move your animation to a different scene.</p>\n\n Finally we will create the control for the cannons.\n\n<ul>\n  <li>Switch to the side view.  </li> \n  <li>Go to <strong>Create &rarr; EP Curve Tool (Options)</strong> and change the Curve degree to <strong>1 Linear</strong>. </li> \n  <li>Use the tool and grid snapping to create a box around the cannons. </li> \n  <li>From another view, move the box to the side of the ship and name it <strong>right_cannon_anim</strong>.</li> \n</ul>\n\n</li>\n\n<center>\n<img class=\"small\" src=\"images/anims.jpg\" />\n<img class=\"small\" src=\"images/cannon_anim.jpg\" />\n</center>\n\n<li class=\"step\">\n Now we will tell Maya to use the current position as the defaults for the anims.\n<ul>\n  <li>Select all of the anims you just created and go to <strong>Modify &rarr; Freeze Transformations</strong>. </li> \n</ul>\nNotice in the Channel Box that the Translate and Rotate for the anims is now 0 and the Scale is 1. Freeze Transformations keeps an object's current position, but sets it to be the new default position of the object. This is useful for animators since it allows them to quickly return to the default position by zeroing out the Channel Box. (Transformations have already been frozen on each piece of ship geometry.)\n\n<br><br>\nWe created a few more objects in the last step so we must clean up the Outliner again. \n<ul>\n  <li>Place the wheel_anim, right_cannon_anim, and ship_geo under the ship_anim. </li> \n  <li>Place the ship_anim under the top_con_anim. </li> \n</ul>\nNow we have single top node again.\n</li>\n\n<img class=\"thumb\" src=\"images/anim_groups.png\" />\n<li class=\"step\">\n<p>\nRigging is a process of giving animators control over an object, but is also seeks to hide details from the animator that they shouldn't be concerned with. The primary method for accomplishing this is restricting the channels, such as translate and rotate, that animators are able to key. To effectively remove an channel from the Channel box, select it then Right-click it and select <strong>Lock and Hide Selected</strong> from the menu.\n<p>\n<p>\nIf you accidently hid the wrong channel, you may be wonder where these channels went. You can find a list of all available channels by navigating to the Channel Box menu set and going to <strong>Edit &rarr; Channel Control</strong>. The channels you hid should be listed under Nonkeyable Hidden. Select them and move them to Keyable to unhide them.</p>\n\n<p>\nLock and Hide the following channels for each of the anims:</p>\n\n<ul>\n\t<li><strong>top_con_anim</strong>: Scale channels</li>\n\t<li><strong>ship_anim</strong>: Scale and Visibility channels</li>\n\t<li><strong>right_cannon_anim</strong>: All channels</li>\n\t<li><strong>wheel_anim</strong>: All channels</li>\n</ul>\n</li>\n\n<img class=\"thumb\" src=\"images/hidden.png\" />\n\n<li class=\"step\">\nNow that we have locked away all the channels on the wheel_anim we will add our own custom attribute. \n<ul>\n    <li>Select the wheel_anim.</li>\n\t<li>In the Channel Box menu go to <strong>Edit &rarr; Add Attribute</strong>. </li>\n\t<li>Set Long name to <strong>Turn</strong>, Data Type to <strong>Float</strong>, Minimum to <strong>-90</strong>, and Maximum to <strong>90</strong>. </li>\n\t<li>Click OK to add the attribute. Notice the new channel in the Channel Box.</li>\n</ul>\n</li>\n\n<img class=\"thumb\" src=\"images/turn.png\" />\n\n<li class=\"step\">\n<p>\nAlthough we have added a new attribute to the wheel_anim, at the moment it does nothing. We will fix this momentarily using the Hypergraph. The Hypergraph represents the scene as a set of boxes, which represent objects. These boxes can be connected, which allows the attributes of one object to control the attributes of another. We will use the Hypergraph to make the Turn channel on the wheel_anim affect the rotation of the wheel and rudder.</p>\n\n<p>\n<ul>\n\t<li> First, go to <strong>Window &rarr; Hypergraph: Connections</strong>.</li>\n\t<li>Select the wheel_anim, wheel, and rudder. </li>\n\t<li>In the Hypergraph, go to <strong>Graph &rarr; Input Connections</strong>. This should display the nodes for the selected objects as well as their shape nodes, which you can ignore. Using Left-click you can arrange the boxes as you please.</li>\n</ul>\n</p>\n\n<p>\nTo connect two nodes, Middle-click and drag on the right side of the output node and release on the input node. You can either choose a connection from the suggestions that appear, or choose a specific one by selecting <strong>Other...</strong> from the bottom of the menu.\n<ul>\n\t<li>Do this from the wheel_anim to the rudder. We want a very specific connection, so select <strong>Other...</strong> from the menu that appears. This will bring up the Connection Editor. </li>\n\t<li>Select Turn from the list on the left and select rotateY on the right (This can be found under rotate, click the small + to expand). Now, Turn and rotateY should be highlighted and in italics.  The Turn attribute now controls the Rotate Y of the rudder.  </li>\n\t<li>Repeat the same process for wheel_anim and wheel, except connect Turn to rotateZ.</li>\n</ul></p>\n\n<center>\n<img class=\"small\" src=\"images/nodes.png\" />\n<img class=\"small\" src=\"images/connected_nodes.png\" />\n</center>\n\n<p>Try changing the value of Turn on the wheel_anim. The wheel and rudder should rotate as you change the value. Unfortunately, there is one problem with the current configuration. The wheel should be rotating in the opposite direction.</p>\n\n<p>\nLuckily this can be fixed relatively easily by using a Multiply Divide node. \n<ul>\n\t<li>In the Hypergraph menu go to <strong>Rendering &rarr; Create Render Node...</strong>. </li>\n\t<li>From the list select Multiply Divide. The node should appear somewhere in the graph. If you don't see it, try zooming out. </li>\n\t<li>Connect the wheel_anim's Turn attribute to the Multiply Divide node's input1X attribute (note that the use of X in this case is arbitrary and doesn't necessarily correspond to axes). </li>\n\t<li>Next, select the Multiply Divide node and in the Channel Box change the value of Input 2X  to <strong>-1</strong>. This essentially takes the two input values (Turn and -1), multiplies them, and outputs the result via the nodes's outputX attribute. </li>\n\t<li>The final step is to connect the outputX of the Multiply Divide node into the rotateZ of the wheel. This will replace the previous connection between the wheel_anim and wheel.</li>\n</ul></p>\n\n<p>\nChanging the value of Turn should now yield the correct results.\n</p>\n\n</li>\n\n<img class=\"thumb\" src=\"images/final_nodes.png\" />\n\n<li class=\"step\">\nWe need to add controls so we can bring the cannons out and the flaps up. \n<ul>\n\t<li>Select the right_cannon_anim and add two new attributes. Call them <strong>cannons_out</strong> and <strong>flaps_up</strong>.</li>\n\t<li>Both their Data Types should be <strong>Float</strong>, the Minimum <strong>0</strong>, and the Default <strong>0</strong>.</li>\n\t<li> For cannons_out, set Maximum to <strong>1</strong>. For flaps_up, set Maximum to <strong>10</strong>.</li>\n</ul></li>\n\n<img class=\"thumb\" src=\"images/cannon_channels.png\" />\n\n<li class=\"step\">\n<p>\nWe want to have the flaps come up when we change flaps_up, but if use a direct connection like we used with the wheel_anim, then all the flaps will rotate the exact same amount. We want a little more variation and so we will use Set Driven Keys instead. The general idea is that all the flaps will be down when flaps_up is 0 and they will all be up, in different ways, when flaps_up is 10.</p>\n\n<p>\n<ul>\n\t<li>Go to <strong>Animate &rarr; Set Driven Key &rarr; Set...</strong>. This will open the Set Driven Key dialog. </li>\n\t<li>Select the right_cannon_anim and click Load Driver. </li>\n\t<li>Select all of the right flap objects and then click Load Driven. Now that everything is loaded, we can specify what attributes are driving what. </li>\n\t<li>In the Set Driven Key dialog, select right_cannon_anim and flaps_up for the Driver. </li>\n\t<li>Select all of the flaps and then select rotateX, rotateY, and rotateZ. </li>\n\t<li>Hit the Key button.</li>\n</ul></p>\n\n<p>\nKeying the value tells Maya that a flaps_up value of 0 means that all the flaps should be down. Now we want to specify what it should be at 10.\n<ul>\n\t<li>Set flap_up to be 10 in the Channel Box. </li>\n\t<li>Rotate all of the flaps so that they are up and still reasonably connected to the ship. </li>\n\t<li>Hit Key again in Set Driven Key dialog and then close it. </li>\n</ul>\n\t\n\tTry changing the flaps_up channel now. The flaps should go up and down as you change it from 0 to 10.</p>\n</li>\n\n<center>\n<img class=\"small\" style=\"vertical-align:middle;\" src=\"images/set_driven.png\" />\n<img class=\"small\" style=\"vertical-align:middle;\" src=\"images/flaps_up.jpg\" />\n</center>\n\n<li class=\"step\">\nTo bring the cannons out we will use simple connections. \n<ul>\n\t<li>In the Hypergraph, connect the cannons_out attribute of the right_cannon_anim to the translateX of each cannon.</li>\n</ul>\n Changing cannons_out to 1 should cause all the cannons to move outward.</li>\n\n<center>\n<img class=\"small\" style=\"vertical-align:middle;\" src=\"images/cannon_connections.png\" />\n<img class=\"small\" style=\"vertical-align:middle;\" src=\"images/cannons_out.jpg\" />\n</center>\n\n<li class=\"step\">\n<p>\nYour final task is to organize your rig into layers. These layers will prevent the animator from touching things they shouldn't and give them visual hints of what they are looking at. \n<ul>\n\t<li>Create four new layers by clicking the Create Layer button (<img style=\"vertical-align:middle;\" src=\"images/new_layer.png\" />) in the Layer Editor. </li>\n\t<li>Double-click a layer to edit it. Name and color the layers like this:\n\t<ul>\n\t\t<li>center_anims - red </li>\n\t\t<li>left_anims - blue </li>\n\t\t<li>right_anims - green </li>\n\t\t<li>geometry - none</li>\n\t</ul>\n</ul></p>\n\n<p>\nYou can add objects to a layer by selecting them and then Right-clicking a layer and selecting <strong>Add Selected Objects</strong> from the menu. \n<ul>\n\t<li>Add the top_con_anim, ship_anim, and wheel_anim to the center_anims layer.</li>\n\t<li> Add the right_cannon_anim to the right_anims layer.</li>\n\t<li> Add ship_geo to the geometry layer.</li>\n</ul>\n</p>\n\n<p>\nThe two boxes to the left of the layer's color indicate the current visibility and display type. You can click these boxes to toggle the current setting.\n<ul>\n\t<li>For the geometry layer, set the display type to Reference (indicated by an &quot;R&quot;). This will prevent the animator from accidentally selecting the geometry.</li>\n</ul>\n</p>\n\n<p>\nWith everything in its proper place, you should be finished.</p>\n</li>\n\n<img class=\"thumb\" src=\"images/layers.png\" />\n</ol>\n\n<fieldset>\n<legend><strong>Turn In</strong></legend>\nYou will be graded on the following:\n<ul>\n\t<li>Following instructions</li>\n\t<li>Working boat rig</li>\n\t<li>Correct anims: Frozen transforms, correct locked and hidden channels</li>\n\t<li>Clean Outliner</li>\n\t<li><strong>Extra Credit:</strong> Rig the cannons and flaps on the left side. (Hint: A Multiply Divide node may come in handy at some point.)\n</ul>\n\nTurn in the following:\n<ul>\n\t<li>A Maya file containing the rigged boat with the following name convention: <strong>lastname_firstname_project3a.ma</strong></li>\n</ul>\n</fieldset>\n\n<h2>Credits</h2>\nThis homework assignment was prepared by <a\nhref=\"http://www.cs.washington.edu/education/courses/cse458/11au/\">Barbara\nMones</a>.\n\n</div>\n</body>\n</html>\n", "id": 26331.0}