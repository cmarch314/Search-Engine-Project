{"text": "Navigation Up Table of Contents Bibliography Index Title Page CGAL Real timer Definition include CGAL Real timer h The class Real timer is a timer class for measuring real time A timer t of type Real timer is an object with a state It is either running or it is stopped The state is controlled with t start and t stop The timer counts the time elapsed since its creation or last reset It counts only the time where it is in the running state The time information is given in seconds The timer counts also the number of intervals it was running i e it counts the number of calls of the start member function since the last reset If the reset occures while the timer is running it counts as the first interval Creation Real timer t state is stopped Operations void t start Precondition state is stopped void t stop Precondition state is running void t reset reset timer to zero The state is unaffected bool t is running true if the current state is running double t time real time in seconds or if the underlying system call failed int t intervals number of start stop intervals since the last reset double t precision smallest possible time step in seconds or 1 if the system call failed double t max maximal representable time in seconds Implementation The timer class is based in the C function gettimeofday on POSIX systems the C function ftime on MS Visual C the C function ftime on Borland C and time on Metrowerks Codewarrior The system calls to these timers might fail in which case a warning message will be issued through the CGAL error handler and the functions return with the error codes indicated above The precision method computes the precision dynamically at runtime at its first invocation Next Timer Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Timer_ref/Class_Real_timer.html", "title": "real_timer", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Timer_ref/Real_timer.tex' -->\n<html> <head>  \n<title>Real_timer</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"../Miscellany_ref/Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_1717\"></A>\n\n<A NAME=\"Cross_link_anchor_1718\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_1568\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Class.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_CGAL::Real_timer\"></A>\n<h2><I>CGAL::Real_timer</I></h2>\n<P>\n\n<H3>Definition</H3>\n<P>\n\n<I>#include &lt;<A HREF=\"../../../include/CGAL/Real_timer.h\">CGAL/Real_timer.h</A>&gt;</I>\n<P>\n\nThe class <I><A HREF=\"Class_Real_timer.html#Cross_link_anchor_1718\">Real_timer</A></I> is a timer class for measuring real time.\nA timer <I>t</I> of type <I><A HREF=\"Class_Real_timer.html#Cross_link_anchor_1718\">Real_timer</A></I> is an object with a state. It is\neither <I>running</I> or it is <I>stopped</I>. The state is controlled\nwith <I>t.start()</I> and <I>t.stop()</I>. The timer counts the\ntime elapsed since its creation or last reset. It counts only the time\nwhere it is in the running state. The time information is given in seconds.\nThe timer counts also the number of intervals it was running, i.e. it \ncounts the number of calls of the <I>start()</I> member function since the \nlast reset. If the reset occures while the timer is running it counts as the\nfirst interval.\n<P>\n\n<H3>Creation</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Real_timer.html#Cross_link_anchor_1718\">Real_timer</A> t;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    state is <I>stopped.</I>\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Operations</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_start69;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    t.start ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%><BR>\n\n<EM>Precondition: </EM>state is <I>stopped</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_stop_69;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    t.stop ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%><BR>\n\n<EM>Precondition: </EM>state is <I>running</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_reset69;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    t.reset ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    reset timer to zero. The state is unaffected.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_is_running69;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    t.is_running ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    <I>true</I> if the current state is running.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_double_time69;\"></A>\ndouble\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    t.time ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    real time in seconds, or 0 if the \n                            underlying system call failed.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_int_intervals69;\"></A>\nint\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    t.intervals ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    number of start/stop-intervals since\n                                 the last reset.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_double_precision69;\"></A>\ndouble\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    t.precision ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    smallest possible time step in seconds,\n                                 or -1 if the system call failed.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_double_max69;\"></A>\ndouble\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    t.<A HREF=\"../NumberTypeSupport_ref/Function_max.html#Cross_link_anchor_1392\">max</A> ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    maximal representable time in seconds.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Implementation</H3>\n<P>\n\nThe timer class is based in the C function <I>gettimeofday()</I> on\nPOSIX systems, the C function <I>_ftime()</I> on MS Visual C++,\nthe C function <I>ftime()</I> on Borland C++, and <I>time()</I>\non Metrowerks Codewarrior. The system calls to these\ntimers might fail, in which case a warning message will be issued\nthrough the C<SMALL>GAL</SMALL> error handler and the functions return with the\nerror codes indicated above.  The <I>precision</I> method computes the\nprecision dynamically at runtime at its first invocation.\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Class_Timer.html\"><I>Timer</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_9!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 37723.0}