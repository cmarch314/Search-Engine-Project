{"text": " Home Trees Indices Help Package CHEM Package Kernel Module ContactHistogramKernel Class ContactHistogramKernel hide private frames no frames Class ContactHistogramKernel BaseKernel BaseKernel ContactHistogramKernel Calculates a similarity score for molecules by comparing histograms of their contact lengths Similar to BondHistogramKernel except that rather than only tracking lengths between bonded atoms this considers the full contact map of distances between every pair of atoms bonded or not The histogram is a count of all atom pairs with distance fitting in the next binWidth For example with a binWidth of 1 counts up all pairs with distancein 1 then all those with length in 1 2 then 2 3 etc until all pairs are accounted for This yields a vector histogram of counts A dot product can then be computed across these vectors from two molecules to essentially count up the number of common pair distances in the two Rather than a dot product the similarity can instead be taken from the vectors by calculating the similarity as e d T where d is the Euclidean distance RMSD from between the two vectors to compare and T is some temperature scaling factor If T is not specified then it defaults to the largest d value found among the data set Note that such a feature vector histogram would be very sparse mostly counts of so a dictionary is built of only the non zero count values instead Only heavy non hydrogen atoms will be considered Atom pairs will be considered different by their atom types For example a CO pair is considered different than a CN bond though the same as an OC pair Conceptually you can think of a separate histogram being generated for every different possible atom pair type An atom cannot pair with itself otherwise the score will just be dominated by a bunch of distance pairs Each pair should only be counted once the mirror case does not count For example count pair a b once but pair b a should not count a second time Instance Methods hide private init self binWidth comparisonMode Const EUCLIDEAN normalize False setScalingFactor self scalingFactor Set the scaling factor used for Euclidean distance measures getScalingFactor self If self scalingFactor is defined not null then just return it setAtomPairWeight self atomSymbol1 atomSymbol2 weight When counting up the atom pair distances for the histograms this method allows for different atom pair types to contribute different weights in the count parseAtomPairWeightSpecification self specString Given a specification string for the atom pair weightings parse out the actual values and set them to the object s atomPairWeightDict similarity self obj1 obj2 Primary abstract method where given two objects should return an appropriate non negative similarity score between the two buildFeatureDictionary self mol Given an OEMolBase molecule object calculate the contact distance between every atom pair acceptedAtomPair self atom1 atom2 Screen out atom pairs not desired for calculation buildFeatureKey self mol atom1 atom2 Create a unique key based on the atom types and the distance between them atomDistance self mol atom1 atom2 Returns the distance between two atoms Inherited from BaseKernel BaseKernel dictionaryDotProduct dictionaryEuclideanDistanceSquared ensureListCapacity getFeatureDictionary normalizeFeatureDictionary outputMatrix prepareFeatureDictionaryList Class Variables hide private binWidth 1 Whether to normalize the feature dictionaries normalize False Comparison mode comparisonMode CHEM DB rdb search NameRxnPatternMatchingMod Scaling factor used to modify EUCLIDEAN distance measure scalingFactor CHEM DB rdb search NameRxnPatternMatchingMode Dictionary whose items are keyed by an object representing a pair of atom types atomPairWeightDict CHEM DB rdb search NameRxnPatternMatchin Inherited from BaseKernel BaseKernel featureDictList objIndex1 objIndex2 Method Details hide private setScalingFactor self scalingFactor Set the scaling factor used for Euclidean distance measures If no value is set will default to a calculation of the largest distance value in the data set getScalingFactor self If self scalingFactor is defined not null then just return it If not then calculate the Euclidean distance for every pair of feature dictionaries in self featureDictList and take the largest one If the self featureDictList is None or has 2 items then just use a value of 1 setAtomPairWeight self atomSymbol1 atomSymbol2 weight When counting up the atom pair distances for the histograms this method allows for different atom pair types to contribute different weights in the count atomSymbol1 is the string for the atomic symbol of one atom of the pair e g C for carbon Cl for chlorine atomSymbol2 is the atomic symbol for the other atom of the pair weight Weight to multiply the histogram counts for any atom pairs encountered whose types match the two symbols specified Any atom pairs encountered that are not specified with some special weight via this method will be assumed to be weighted by 1 unweighted parseAtomPairWeightSpecification self specString Given a specification string for the atom pair weightings parse out the actual values and set them to the object s atomPairWeightDict Specification string is expected to be in the form atomSymbol1 atomSymbol2 weight For example to specify carbon carbon pairs as having half the default weight of 1 and carbon oxygen pairs as having twice the default weight provide a specification string of C C 5 C O 2 similarity self obj1 obj2 Primary abstract method where given two objects should return an appropriate non negative similarity score between the two Up to the implementing class to define what this is Overrides BaseKernel BaseKernel similarity inherited documentation buildFeatureDictionary self mol Given an OEMolBase molecule object calculate the contact distance between every atom pair Create a dictionary keyed by the atom pair type just based on the combination of atoms and the histogram bin index that the found pairs should be placed in The dictionary will have values equal to the number of pairs with a distance that fits into that bin The bin index is just the number of times the binWidth can be wholly divided into the bond length For example if binWidth 1 then a CO atom pair at a distance of 1 32 will be placed under the CO bin index 13 Alternatively you could say that bin index 13 of the CO histogram contains a count for all CO pairs with distance in 1 3 1 4 Finally normalize the feature dictionary as a vector to have a length of 1 by dividing all elements by the magnitude of the vector dictionary Overrides BaseKernel BaseKernel buildFeatureDictionary acceptedAtomPair self atom1 atom2 Screen out atom pairs not desired for calculation Presently just exclude hydrogen non heavy atoms buildFeatureKey self mol atom1 atom2 Create a unique key based on the atom types and the distance between them Importantl that the order that the atoms appear in should not matter For example a CO pair should be the same as an OC pair atomDistance self mol atom1 atom2 Returns the distance between two atoms Requires a reference to the parent molecule to access coordinates Class Variable Details hide private normalize Comparison mode Choose from options in Const module Value False comparisonMode Scaling factor used to modify EUCLIDEAN distance measure Value None scalingFactor Dictionary whose items are keyed by an object representing a pair of atom types Tuple containing the atomic numbers of two atoms For example 6 17 to represent the atom pair of Carbon and Chlorine See setAtomPairWeight for more information Value None atomPairWeightDict Value None Home Trees Indices Help Generated by Epydoc 3 beta1 on Thu Nov 8 17 49 31 2 7 http epydoc sourceforge net", "_id": "http://www.ics.uci.edu/~dock/CHEM_docs/CHEM.Kernel.ContactHistogramKernel.ContactHistogramKernel-class.html", "title": "chem.kernel.contacthistogramkernel.contacthistogramkernel", "html": "<?xml version=\"1.0\" encoding=\"ascii\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n          \"DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n  <title>CHEM.Kernel.ContactHistogramKernel.ContactHistogramKernel</title>\n  <link rel=\"stylesheet\" href=\"epydoc.css\" type=\"text/css\" />\n  <script type=\"text/javascript\" src=\"epydoc.js\"></script>\n</head>\n\n<body bgcolor=\"white\" text=\"black\" link=\"blue\" vlink=\"#204080\"\n      alink=\"#204080\">\n<!-- ==================== NAVIGATION BAR ==================== -->\n<table class=\"navbar\" border=\"0\" width=\"100%\" cellpadding=\"0\"\n       bgcolor=\"#a0c0ff\" cellspacing=\"0\">\n  <tr valign=\"middle\">\n  <!-- Home link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"CHEM-module.html\">Home</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Tree link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"module-tree.html\">Trees</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Index link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"identifier-index.html\">Indices</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Help link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"help.html\">Help</a>&nbsp;&nbsp;&nbsp;</th>\n\n      <th class=\"navbar\" width=\"100%\"></th>\n  </tr>\n</table>\n<table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n  <tr valign=\"top\">\n    <td width=\"100%\">\n      <span class=\"breadcrumbs\">\n        <a href=\"CHEM-module.html\">Package&nbsp;CHEM</a> ::\n        <a href=\"CHEM.Kernel-module.html\">Package&nbsp;Kernel</a> ::\n        <a href=\"CHEM.Kernel.ContactHistogramKernel-module.html\">Module&nbsp;ContactHistogramKernel</a> ::\n        Class&nbsp;ContactHistogramKernel\n      </span>\n    </td>\n    <td>\n      <table cellpadding=\"0\" cellspacing=\"0\">\n        <!-- hide/show private -->\n        <tr><td align=\"right\"><span class=\"options\">[<a href=\"javascript:void(0);\" class=\"privatelink\"\n    onclick=\"toggle_private();\">hide&nbsp;private</a>]</span></td></tr>\n        <tr><td align=\"right\"><span class=\"options\"\n            >[<a href=\"frames.html\" target=\"_top\">frames</a\n            >]&nbsp;|&nbsp;<a href=\"CHEM.Kernel.ContactHistogramKernel.ContactHistogramKernel-class.html\"\n            target=\"_top\">no&nbsp;frames</a>]</span></td></tr>\n      </table>\n    </td>\n  </tr>\n</table>\n<!-- ==================== CLASS DESCRIPTION ==================== -->\n<h1 class=\"epydoc\">Class ContactHistogramKernel</h1><br /><br />\n<pre class=\"base-tree\">\nBaseKernel.BaseKernel --+\n                        |\n                       <strong class=\"uidshort\">ContactHistogramKernel</strong>\n</pre>\n\n<hr />\n<p>Calculates a similarity score for molecules by comparing histograms of\n  their contact lengths.  Similar to BondHistogramKernel, except that \n  rather than only tracking lengths between bonded atoms, this considers \n  the full contact map of distances between every pair of atoms, bonded or \n  not.</p>\n  <p>The histogram is a count of all atom pairs with distance fitting in \n  the next &quot;binWidth.&quot;  For example, with a binWidth of 0.1, \n  counts up all pairs with distancein [0.0,0.1) then all those with length \n  in [0.1,0.2) then [0.2,0.3), etc. until all pairs are accounted for.  \n  This yields a vector / histogram of counts.  A dot product can then be \n  computed across these vectors from two molecules to essentially count up \n  the number of common pair distances in the two.</p>\n  <p>Rather than a dot product, the similarity can instead be taken from \n  the vectors by calculating the similarity as e^(-d/T) where d is the \n  Euclidean distance (= RMSD from 0.0) between the two vectors to compare \n  and T is some temperature scaling factor. If T is not specified, then it \n  defaults to the largest d value found among the data set.</p>\n  <p>Note that such a feature vector / histogram would be very sparse, \n  mostly counts of 0, so a dictionary is built of only the non-zero count \n  values instead.</p>\n  <p>Only heavy (non-hydrogen) atoms will be considered.  Atom pairs will \n  be considered different by their atom types.  For example, a CO pair is \n  considered different than a CN bond (though the same as an OC pair).  \n  Conceptually, you can think of a separate histogram being generated for \n  every different possible atom pair type.</p>\n  An atom cannot pair with itself, otherwise the score will just be \n  dominated by a bunch of 0 distance pairs. Each pair should only be \n  counted once, the mirror case does not count.  For example, count pair \n  (a,b) once, but pair (b,a) should not count a second time.<br /><br />\n\n<!-- ==================== INSTANCE METHODS ==================== -->\n<a name=\"section-InstanceMethods\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Instance Methods</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-InstanceMethods\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"__init__\"></a><span class=\"summary-sig-name\">__init__</span>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">binWidth</span>,\n        <span class=\"summary-sig-arg\">comparisonMode</span>=<span class=\"summary-sig-default\">Const.EUCLIDEAN</span>,\n        <span class=\"summary-sig-arg\">normalize</span>=<span class=\"summary-sig-default\">False</span>)</span></td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Kernel.ContactHistogramKernel.ContactHistogramKernel-class.html#setScalingFactor\" class=\"summary-sig-name\">setScalingFactor</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">scalingFactor</span>)</span><br />\n      Set the scaling factor used for Euclidean distance measures.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Kernel.ContactHistogramKernel.ContactHistogramKernel-class.html#getScalingFactor\" class=\"summary-sig-name\">getScalingFactor</a>(<span class=\"summary-sig-arg\">self</span>)</span><br />\n      If self.scalingFactor is defined (not null) then just return \n      it.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Kernel.ContactHistogramKernel.ContactHistogramKernel-class.html#setAtomPairWeight\" class=\"summary-sig-name\">setAtomPairWeight</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">atomSymbol1</span>,\n        <span class=\"summary-sig-arg\">atomSymbol2</span>,\n        <span class=\"summary-sig-arg\">weight</span>)</span><br />\n      When counting up the atom pair distances for the\nhistograms this method allows for different atom pair \ntypes to contribute different weights in the count.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Kernel.ContactHistogramKernel.ContactHistogramKernel-class.html#parseAtomPairWeightSpecification\" class=\"summary-sig-name\">parseAtomPairWeightSpecification</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">specString</span>)</span><br />\n      Given a specification string for the atom pair weightings, parse \n      out the actual values and set them to the object's \n      atomPairWeightDict.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Kernel.ContactHistogramKernel.ContactHistogramKernel-class.html#similarity\" class=\"summary-sig-name\">similarity</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">obj1</span>,\n        <span class=\"summary-sig-arg\">obj2</span>)</span><br />\n      Primary abstract method where, given two objects, should return an\n      appropriate, non-negative, similarity score between the two.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Kernel.ContactHistogramKernel.ContactHistogramKernel-class.html#buildFeatureDictionary\" class=\"summary-sig-name\">buildFeatureDictionary</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">mol</span>)</span><br />\n      Given an OEMolBase molecule object, calculate the (contact) \n      distance between every atom pair.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Kernel.ContactHistogramKernel.ContactHistogramKernel-class.html#acceptedAtomPair\" class=\"summary-sig-name\">acceptedAtomPair</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">atom1</span>,\n        <span class=\"summary-sig-arg\">atom2</span>)</span><br />\n      Screen out atom pairs not desired for calculation.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Kernel.ContactHistogramKernel.ContactHistogramKernel-class.html#buildFeatureKey\" class=\"summary-sig-name\">buildFeatureKey</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">mol</span>,\n        <span class=\"summary-sig-arg\">atom1</span>,\n        <span class=\"summary-sig-arg\">atom2</span>)</span><br />\n      Create a unique key based on the atom types and the distance \n      between them.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Kernel.ContactHistogramKernel.ContactHistogramKernel-class.html#atomDistance\" class=\"summary-sig-name\">atomDistance</a>(<span class=\"summary-sig-arg\">self</span>,\n        <span class=\"summary-sig-arg\">mol</span>,\n        <span class=\"summary-sig-arg\">atom1</span>,\n        <span class=\"summary-sig-arg\">atom2</span>)</span><br />\n      Returns the distance between two atoms.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n  <tr>\n    <td colspan=\"2\" class=\"summary\">\n    <p class=\"indent-wrapped-lines\"><b>Inherited from <code>BaseKernel.BaseKernel</code></b>:\n      <code>dictionaryDotProduct</code>,\n      <code>dictionaryEuclideanDistanceSquared</code>,\n      <code>ensureListCapacity</code>,\n      <code>getFeatureDictionary</code>,\n      <code>normalizeFeatureDictionary</code>,\n      <code>outputMatrix</code>,\n      <code>prepareFeatureDictionaryList</code>\n      </p>\n    </td>\n  </tr>\n</table>\n<!-- ==================== CLASS VARIABLES ==================== -->\n<a name=\"section-ClassVariables\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Class Variables</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-ClassVariables\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a name=\"binWidth\"></a><span class=\"summary-name\">binWidth</span> = <code title=\"-1.0\">-1.0</code><br />\n      Whether to normalize the feature dictionaries\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a href=\"CHEM.Kernel.ContactHistogramKernel.ContactHistogramKernel-class.html#normalize\" class=\"summary-name\">normalize</a> = <code title=\"False\">False</code><br />\n      Comparison mode.\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a href=\"CHEM.Kernel.ContactHistogramKernel.ContactHistogramKernel-class.html#comparisonMode\" class=\"summary-name\">comparisonMode</a> = <code title=\"None\">&lt;CHEM.DB.rdb.search.NameRxnPatternMatchingMod<code class=\"variable-ellipsis\">...</code></code><br />\n      Scaling factor used to modify EUCLIDEAN distance measure\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a href=\"CHEM.Kernel.ContactHistogramKernel.ContactHistogramKernel-class.html#scalingFactor\" class=\"summary-name\">scalingFactor</a> = <code title=\"None\">&lt;CHEM.DB.rdb.search.NameRxnPatternMatchingMode<code class=\"variable-ellipsis\">...</code></code><br />\n      Dictionary whose items are keyed by an object representing a pair \n      of atom types.\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a href=\"CHEM.Kernel.ContactHistogramKernel.ContactHistogramKernel-class.html#atomPairWeightDict\" class=\"summary-name\">atomPairWeightDict</a> = <code title=\"None\">&lt;CHEM.DB.rdb.search.NameRxnPatternMatchin<code class=\"variable-ellipsis\">...</code></code>\n    </td>\n  </tr>\n  <tr>\n    <td colspan=\"2\" class=\"summary\">\n    <p class=\"indent-wrapped-lines\"><b>Inherited from <code>BaseKernel.BaseKernel</code></b>:\n      <code>featureDictList</code>,\n      <code>objIndex1</code>,\n      <code>objIndex2</code>\n      </p>\n    </td>\n  </tr>\n</table>\n<!-- ==================== METHOD DETAILS ==================== -->\n<a name=\"section-MethodDetails\"></a>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Method Details</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-MethodDetails\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n</table>\n<a name=\"setScalingFactor\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">setScalingFactor</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">scalingFactor</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Set the scaling factor used for Euclidean distance measures. If no \n  value is set, will default to a calculation of the largest distance value\n  in the data set.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"getScalingFactor\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">getScalingFactor</span>(<span class=\"sig-arg\">self</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  If self.scalingFactor is defined (not null) then just return it. If \n  not, then calculate the Euclidean distance for every pair of feature \n  dictionaries in self.featureDictList and take the largest one. If the \n  self.featureDictList is None or has &lt; 2 items, then just use a value \n  of 1.0.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"setAtomPairWeight\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">setAtomPairWeight</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">atomSymbol1</span>,\n        <span class=\"sig-arg\">atomSymbol2</span>,\n        <span class=\"sig-arg\">weight</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <pre class=\"literalblock\">\nWhen counting up the atom pair distances for the\nhistograms this method allows for different atom pair \ntypes to contribute different weights in the count.\n\natomSymbol1 is the string for the atomic symbol of one atom \n            of the pair (e.g. &quot;C&quot; for carbon, &quot;Cl&quot; for chlorine)\natomSymbol2 is the atomic symbol for the other atom of the pair\nweight      Weight to multiply the histogram counts for any\n            atom pairs encountered whose types match the\n            two symbols specified.\n\nAny atom pairs encountered that are not specified with some\nspecial weight via this method will be assumed\nto be weighted by 1.0 (unweighted).\n\n</pre>\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"parseAtomPairWeightSpecification\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">parseAtomPairWeightSpecification</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">specString</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <p>Given a specification string for the atom pair weightings, parse out \n  the actual values and set them to the object's atomPairWeightDict.</p>\n  Specification string is expected to be in the form \n  'atomSymbol1:atomSymbol2:weight,'.  For example, to specify carbon-carbon\n  pairs as having half the default weight of 1.0 and carbon-oxygen pairs as\n  having twice the default weight, provide a specification string of \n  'C:C:0.5,C:O:2.0'\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"similarity\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">similarity</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">obj1</span>,\n        <span class=\"sig-arg\">obj2</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Primary abstract method where, given two objects, should return an \n  appropriate, non-negative, similarity score between the two.  Up to the \n  implementing class to define what this is.\n  <dl class=\"fields\">\n    <dt>Overrides:\n      <a href=\"CHEM.Kernel.BaseKernel.BaseKernel-class.html#similarity\">BaseKernel.BaseKernel.similarity</a>\n        <dd><em class=\"note\">(inherited documentation)</em></dd>\n    </dt>\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"buildFeatureDictionary\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">buildFeatureDictionary</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">mol</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <p>Given an OEMolBase molecule object, calculate the (contact) distance \n  between every atom pair.</p>\n  <p>Create a dictionary keyed by the atom pair type (just based on the \n  combination of atoms) and the histogram bin index that the found pairs \n  should be placed in. The dictionary will have values equal to the number \n  of pairs with a distance that fits into that bin. The bin index is just \n  the number of times the binWidth can be wholly divided into the bond \n  length.</p>\n  <p>For example, if binWidth = 0.1 then a CO atom pair at a distance of \n  1.32 will be placed under the CO bin index 13. Alternatively, you could \n  say that bin index 13 of the CO histogram contains a count for all CO \n  pairs with distance in [1.3,1.4).</p>\n  Finally, normalize the feature dictionary as a vector to have a \n  &quot;length&quot; of 1.0, by dividing all elements by the magnitude of \n  the vector / dictionary.\n  <dl class=\"fields\">\n    <dt>Overrides:\n      <a href=\"CHEM.Kernel.BaseKernel.BaseKernel-class.html#buildFeatureDictionary\">BaseKernel.BaseKernel.buildFeatureDictionary</a>\n    </dt>\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"acceptedAtomPair\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">acceptedAtomPair</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">atom1</span>,\n        <span class=\"sig-arg\">atom2</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Screen out atom pairs not desired for calculation. Presently just \n  exclude hydrogen (non-heavy) atoms.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"buildFeatureKey\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">buildFeatureKey</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">mol</span>,\n        <span class=\"sig-arg\">atom1</span>,\n        <span class=\"sig-arg\">atom2</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Create a unique key based on the atom types and the distance between \n  them.  Importantl that the order that the atoms appear in should not \n  matter.  For example, a CO pair should be the same as an OC pair.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"atomDistance\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">atomDistance</span>(<span class=\"sig-arg\">self</span>,\n        <span class=\"sig-arg\">mol</span>,\n        <span class=\"sig-arg\">atom1</span>,\n        <span class=\"sig-arg\">atom2</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Returns the distance between two atoms. Requires a reference to the \n  parent molecule to access coordinates.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<br />\n<!-- ==================== CLASS VARIABLE DETAILS ==================== -->\n<a name=\"section-ClassVariableDetails\"></a>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Class Variable Details</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-ClassVariableDetails\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n</table>\n<a name=\"normalize\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <h3 class=\"epydoc\">normalize</h3>\n  Comparison mode.  Choose from options in Const module\n  <dl class=\"fields\">\n  </dl>\n  <dl class=\"fields\">\n    <dt>Value:</dt>\n      <dd><table><tr><td><pre class=\"variable\">\nFalse\n</pre></td></tr></table>\n</dd>\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"comparisonMode\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <h3 class=\"epydoc\">comparisonMode</h3>\n  Scaling factor used to modify EUCLIDEAN distance measure\n  <dl class=\"fields\">\n  </dl>\n  <dl class=\"fields\">\n    <dt>Value:</dt>\n      <dd><table><tr><td><pre class=\"variable\">\nNone\n</pre></td></tr></table>\n</dd>\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"scalingFactor\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <h3 class=\"epydoc\">scalingFactor</h3>\n  Dictionary whose items are keyed by an object representing a pair of \n  atom types.  (Tuple containing the atomic numbers of two atoms.  For \n  example, (6,17) to represent the atom pair of Carbon and Chlorine). See \n  setAtomPairWeight(...) for more information.\n  <dl class=\"fields\">\n  </dl>\n  <dl class=\"fields\">\n    <dt>Value:</dt>\n      <dd><table><tr><td><pre class=\"variable\">\nNone\n</pre></td></tr></table>\n</dd>\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"atomPairWeightDict\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <h3 class=\"epydoc\">atomPairWeightDict</h3>\n  \n  <dl class=\"fields\">\n  </dl>\n  <dl class=\"fields\">\n    <dt>Value:</dt>\n      <dd><table><tr><td><pre class=\"variable\">\nNone\n</pre></td></tr></table>\n</dd>\n  </dl>\n</td></tr></table>\n</div>\n<br />\n<!-- ==================== NAVIGATION BAR ==================== -->\n<table class=\"navbar\" border=\"0\" width=\"100%\" cellpadding=\"0\"\n       bgcolor=\"#a0c0ff\" cellspacing=\"0\">\n  <tr valign=\"middle\">\n  <!-- Home link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"CHEM-module.html\">Home</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Tree link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"module-tree.html\">Trees</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Index link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"identifier-index.html\">Indices</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Help link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"help.html\">Help</a>&nbsp;&nbsp;&nbsp;</th>\n\n      <th class=\"navbar\" width=\"100%\"></th>\n  </tr>\n</table>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%%\">\n  <tr>\n    <td align=\"left\" class=\"footer\">\n    Generated by Epydoc 3.0beta1 on Thu Nov  8 17:49:31 2007\n    </td>\n    <td align=\"right\" class=\"footer\">\n      <a href=\"http://epydoc.sourceforge.net\">http://epydoc.sourceforge.net</a>\n    </td>\n  </tr>\n</table>\n\n<script type=\"text/javascript\">\n  <!--\n  // Private objects are initially displayed (because if\n  // javascript is turned off then we want them to be\n  // visible); but by default, we want to hide them.  So hide\n  // them unless we have a cookie that says to show them.\n  checkCookie()\n  // -->\n</script>\n  \n</body>\n</html>\n", "id": 41185.0}