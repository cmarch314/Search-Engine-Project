{"text": "Last Published 2 14 7 14Version 8 6 Documentation Home Documentation Installing and Managing AsterixDB using Managix AsterixDB 1 1 An ADM and AQL Primer AsterixDB Javascript SDK Asterix Data Model ADM Asterix Query Language AQL AQL Functions AQL Allen s Relations Functions AQL Support of Similarity Queries Accessing External Data REST API to AsterixDB AsterixDB Temporal Functions Allen s Relations Table of Contents About Allen s RelationsAllen s Relations Functions About Allen s Relations Back to TOC AsterixDB supports Allen s relations over interval types Allen s relations are also called Allen s interval algebra There are totally 13 base relations described by this algebra and all of them are supported in AsterixDB note that interval equals is supported by the comparison symbol so there is no extra function for it A detailed description of Allen s relations can be found from its wikipedia entry Allen s Relations Functions Back to TOC interval before interval after Syntax interval before interval1 interval2 interval after interval1 interval2 These two functions check whether an interval happens before after another interval Arguments interval1 interval2 two intervals to be compared Return Value A boolean value Specifically interval before interval1 interval2 is true if and only if interval1 end interval2 start and interval after interval1 interval2 is true if and only if interval1 start interval2 end If any of the two inputs is null null is returned Examples let itv1 interval from date 2 1 1 2 5 1 1 let itv2 interval from date 2 5 5 1 2 12 9 9 return interval before interval before itv1 itv2 interval after interval after itv2 itv1 The expected result is interval before true interval after true interval meets interval met by Syntax interval meets interval1 interval2 interval met by interval1 interval2 These two functions check whether an interval meets with another interval Arguments interval1 interval2 two intervals to be compared Return Value A boolean value Specifically interval meets interval1 interval2 is true if and only if interval1 end interval2 start and interval met by interval1 interval2 is true if and only if interval1 start interval2 end If any of the two inputs is null null is returned Examples let itv1 interval from date 2 1 1 2 5 1 1 let itv2 interval from date 2 5 1 1 2 12 9 9 let itv3 interval from date 2 6 8 1 2 7 3 1 let itv4 interval from date 2 4 9 1 2 6 8 1 return meets interval meets itv1 itv2 metby interval met by itv3 itv4 The expected result is meets true metby true interval overlaps interval overlapped by overlap Syntax interval overlaps interval1 interval2 interval overlapped by interval1 interval2 overlap interval1 interval2 These functions check whether two intervals overlap with each other Arguments interval1 interval2 two intervals to be compared Return Value A boolean value Specifically interval overlaps interval1 interval2 is true if and only if interval1 start interval2 start AND interval2 end interval1 end AND interval1 end interval2 start interval overlapped by interval1 interval2 is true if and only if interval2 start interval1 start AND interval1 end interval2 end AND interval2 end interval1 start overlap interval1 interval2 is true if interval2 start interval1 start AND interval2 start interval1 end OR interval2 end interval1 start AND interval2 end interval end For all these functions if any of the two inputs is null null is returned Note that interval overlaps and interval overlapped by are following the Allen s relations on the definition of overlap overlap is a syntactic sugar for the case that the intersect of two intervals is not empty Examples let itv1 interval from date 2 1 1 2 5 1 1 let itv2 interval from date 2 4 5 1 2 12 9 9 let itv3 interval from date 2 6 8 1 2 7 3 1 let itv4 interval from date 2 4 9 1 2 6 12 31 return overlaps interval overlaps itv1 itv2 overlapped by interval overlapped by itv3 itv4 overlapping1 overlap itv1 itv2 overlapping2 overlap itv3 itv4 The expected result is overlaps true overlapped by true overlapping1 true overlapping2 true interval starts interval started by Syntax interval starts interval1 interval2 interval started by interval1 interval2 These two functions check whether one interval starts with the other interval Arguments interval1 interval2 two intervals to be compared Return Value A boolean value Specifically interval starts interval1 interval2 returns true if and only if interval1 start interval2 start AND interval1 end interval2 end interval started by interval1 interval2 returns true if and only if interval1 start interval2 start AND interval2 end interval1 end For both functions if any of the two inputs is null null is returned Examples let itv1 interval from date 2 1 1 2 5 1 1 let itv2 interval from date 2 1 1 2 12 9 9 let itv3 interval from date 2 6 8 1 2 7 3 1 let itv4 interval from date 2 6 8 1 2 6 8 1 return interval starts interval starts itv1 itv2 interval started by interval started by itv3 itv4 The expected result is interval starts true interval started by true interval covers interval covered by Syntax interval covers interval1 interval2 interval covered by interval1 interval2 These two functions check whether one interval covers the other interval Arguments interval1 interval2 two intervals to be compared Return Value A boolean value Specifically interval covers interval1 interval2 is true if and only if interval1 start interval2 start AND interval2 end interval1 end interval covered by interval1 interval2 is true if and only if interval2 start interval1 start AND interval1 end interval2 end For both functions if any of the two inputs is null null is returned Examples let itv1 interval from date 2 1 1 2 5 1 1 let itv2 interval from date 2 3 1 2 4 9 9 let itv3 interval from date 2 6 8 1 2 7 3 1 let itv4 interval from date 2 4 9 1 2 12 8 1 return interval covers interval covers itv1 itv2 interval covered by interval covered by itv3 itv4 The expected result is interval covers true interval covered by true interval ends interval ended by Syntax interval ends interval1 interval2 interval ended by interval1 interval2 These two functions check whether one interval ends with the other interval Arguments interval1 interval2 two intervals to be compared Return Value A boolean value Specifically interval ends interval1 interval2 returns true if and only if interval1 end interval2 end AND interval1 start interval2 start interval ended by interval1 interval2 returns true if and only if interval2 end interval1 end AND interval2 start interval1 start For both functions if any of the two inputs is null null is returned Examples let itv1 interval from date 2 1 1 2 5 1 1 let itv2 interval from date 1998 1 1 2 5 1 1 let itv3 interval from date 2 6 8 1 2 7 3 1 let itv4 interval from date 2 6 9 1 2 7 3 1 return interval ends interval ends itv1 itv2 interval ended by interval ended by itv3 itv4 The expected result is interval ends true interval ended by true Copyright 2 14 All Rights Reserved ", "_id": "http://asterix.ics.uci.edu/documentation/aql/allens.html", "title": "asterixdb - ", "html": "<!DOCTYPE html>\n<!--\n | Generated by Apache Maven Doxia at 2014-07-14\n | Rendered using Apache Maven Fluido Skin 1.3.0\n-->\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <meta name=\"Date-Revision-yyyymmdd\" content=\"20140714\" />\n    <meta http-equiv=\"Content-Language\" content=\"en\" />\n    <title>AsterixDB - </title>\n    <link rel=\"stylesheet\" href=\"../css/apache-maven-fluido-1.3.0.min.css\" />\n    <link rel=\"stylesheet\" href=\"../css/site.css\" />\n    <link rel=\"stylesheet\" href=\"../css/print.css\" media=\"print\" />\n\n      \n    <script type=\"text/javascript\" src=\"../js/apache-maven-fluido-1.3.0.min.js\"></script>\n\n                          \n        \n<script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\n        ga('create', 'UA-41536543-1', 'uci.edu');\n        ga('send', 'pageview');</script>\n          \n            </head>\n        <body class=\"topBarDisabled\">\n          \n                \n                    \n    \n        <div class=\"container-fluid\">\n          <div id=\"banner\">\n        <div class=\"pull-left\">\n                                    <a href=\"http://asterixdb.ics.uci.edu/\" id=\"bannerLeft\">\n                                                                                                <img src=\"../images/asterixlogo.png\"  alt=\"AsterixDB\"/>\n                </a>\n                      </div>\n        <div class=\"pull-right\">  </div>\n        <div class=\"clear\"><hr/></div>\n      </div>\n\n      <div id=\"breadcrumbs\">\n        <ul class=\"breadcrumb\">\n                \n                    \n                  <li id=\"publishDate\">Last Published: 2014-07-14</li>\n                      \n                \n                    \n                 <li id=\"projectVersion\" class=\"pull-right\">Version: 0.8.6</li>\n      \n                                            <li class=\"divider pull-right\">|</li>\n                        \n    <li class=\"pull-right\">              <a href=\"../index.html\" title=\"Documentation Home\">\n        Documentation Home</a>\n  </li>\n\n                        </ul>\n      </div>\n\n            \n      <div class=\"row-fluid\">\n        <div id=\"leftColumn\" class=\"span3\">\n          <div class=\"well sidebar-nav\">\n                \n                    \n                <ul class=\"nav nav-list\">\n                    <li class=\"nav-header\">Documentation</li>\n                                \n      <li>\n    \n                          <a href=\"../install.html\" title=\"Installing and Managing AsterixDB using Managix\">\n          <i class=\"none\"></i>\n        Installing and Managing AsterixDB using Managix</a>\n            </li>\n                  \n      <li>\n    \n                          <a href=\"../aql/primer.html\" title=\"AsterixDB 101: An ADM and AQL Primer\">\n          <i class=\"none\"></i>\n        AsterixDB 101: An ADM and AQL Primer</a>\n            </li>\n                  \n      <li>\n    \n                          <a href=\"../aql/js-sdk.html\" title=\"AsterixDB Javascript SDK\">\n          <i class=\"none\"></i>\n        AsterixDB Javascript SDK</a>\n            </li>\n                  \n      <li>\n    \n                          <a href=\"../aql/datamodel.html\" title=\"Asterix Data Model (ADM)\">\n          <i class=\"none\"></i>\n        Asterix Data Model (ADM)</a>\n            </li>\n                  \n      <li>\n    \n                          <a href=\"../aql/manual.html\" title=\"Asterix Query Language (AQL)\">\n          <i class=\"none\"></i>\n        Asterix Query Language (AQL)</a>\n            </li>\n                  \n      <li>\n    \n                          <a href=\"../aql/functions.html\" title=\"AQL Functions\">\n          <i class=\"none\"></i>\n        AQL Functions</a>\n            </li>\n                  \n      <li class=\"active\">\n    \n            <a href=\"#\"><i class=\"none\"></i>AQL Allen's Relations Functions</a>\n          </li>\n                  \n      <li>\n    \n                          <a href=\"../aql/similarity.html\" title=\"AQL Support of Similarity Queries\">\n          <i class=\"none\"></i>\n        AQL Support of Similarity Queries</a>\n            </li>\n                  \n      <li>\n    \n                          <a href=\"../aql/externaldata.html\" title=\"Accessing External Data\">\n          <i class=\"none\"></i>\n        Accessing External Data</a>\n            </li>\n                  \n      <li>\n    \n                          <a href=\"../api.html\" title=\"REST API to AsterixDB\">\n          <i class=\"none\"></i>\n        REST API to AsterixDB</a>\n            </li>\n            </ul>\n                \n                    \n                \n          <hr class=\"divider\" />\n\n           <div id=\"poweredBy\">\n                            <div class=\"clear\"></div>\n                            <div class=\"clear\"></div>\n                            <div class=\"clear\"></div>\n                                                                                                                         <a href=\"https://code.google.com/p/hyracks/\" title=\"Hyracks\" class=\"builtBy\">\n        <img class=\"builtBy\"  alt=\"Hyracks\" src=\"../images/hyrax_ts.png\"    />\n      </a>\n                      </div>\n          </div>\n        </div>\n        \n                \n        <div id=\"bodyColumn\"  class=\"span9\" >\n                                  \n            <h1>AsterixDB Temporal Functions: Allen&#x2019;s Relations</h1>\n<div class=\"section\">\n<h2><a name=\"toc\" id=\"toc\">Table of Contents</a><a name=\"Table_of_Contents\"></a></h2>\n\n<ul>\n  \n<li><a href=\"#AboutAllensRelations\">About Allen&#x2019;s Relations</a></li>\n  \n<li><a href=\"#AllensRelatonsFunctions\">Allen&#x2019;s Relations Functions</a></li>\n</ul></div>\n<div class=\"section\">\n<h2><a name=\"AboutAllensRelations\" id=\"AboutAllensRelations\">About Allen&#x2019;s Relations</a> <font size=\"4\"><a href=\"#toc\">[Back to TOC]</a></font><a name=\"About_Allens_Relations_Back_to_TOC\"></a></h2>\n<p>AsterixDB supports Allen&#x2019;s relations over interval types. Allen&#x2019;s relations are also called Allen&#x2019;s interval algebra. There are totally 13 base relations described by this algebra, and all of them are supported in AsterixDB (note that <tt>interval-equals</tt> is supported by the <tt>=</tt> comparison symbol so there is no extra function for it). </p>\n<p>A detailed description of Allen&#x2019;s relations can be found from its <a class=\"externalLink\" href=\"http://en.wikipedia.org/wiki/Allen&apos;s_interval_algebra\">wikipedia entry</a>. </p></div>\n<div class=\"section\">\n<h2><a name=\"AllensRelatonsFunctions\" id=\"AllensRelatonsFunctions\">Allen&#x2019;s Relations Functions</a> <font size=\"4\"><a href=\"#toc\">[Back to TOC]</a></font><a name=\"Allens_Relations_Functions_Back_to_TOC\"></a></h2>\n<div class=\"section\">\n<h3>interval-before, interval-after<a name=\"interval-before_interval-after\"></a></h3>\n\n<ul>\n  \n<li>\n<p>Syntax:</p>\n  \n<div class=\"source\">\n<pre>interval-before(interval1, interval2)\ninterval-after(interval1, interval2)\n</pre></div></li>\n  \n<li>\n<p>These two functions check whether an interval happens before/after another interval. </p></li>\n  \n<li>Arguments:\n  \n<ul>\n    \n<li><tt>interval1</tt>, <tt>interval2</tt>: two intervals to be compared</li>\n  </ul></li>\n  \n<li>\n<p>Return Value:</p>\n<p>A <tt>boolean</tt> value. Specifically, <tt>interval-before(interval1, interval2)</tt> is true if and only if <tt>interval1.end &lt; interval2.start</tt>, and <tt>interval-after(interval1, interval2)</tt> is true if and only if <tt>interval1.start &gt; interval2.end</tt>. If any of the two inputs is <tt>null</tt>, <tt>null</tt> is returned.</p></li>\n  \n<li>\n<p>Examples:</p>\n  \n<div class=\"source\">\n<pre>let $itv1 := interval-from-date(&quot;2000-01-01&quot;, &quot;2005-01-01&quot;)\nlet $itv2 := interval-from-date(&quot;2005-05-01&quot;, &quot;2012-09-09&quot;)\nreturn {&quot;interval-before&quot;: interval-before($itv1, $itv2), &quot;interval-after&quot;: interval-after($itv2, $itv1)}\n</pre></div></li>\n  \n<li>\n<p>The expected result is:</p>\n  \n<div class=\"source\">\n<pre>{ &quot;interval-before&quot;: true, &quot;interval-after&quot;: true }\n</pre></div></li>\n</ul></div>\n<div class=\"section\">\n<h3>interval-meets, interval-met-by<a name=\"interval-meets_interval-met-by\"></a></h3>\n\n<ul>\n  \n<li>\n<p>Syntax:</p>\n  \n<div class=\"source\">\n<pre>interval-meets(interval1, interval2)\ninterval-met-by(interval1, interval2)\n</pre></div></li>\n  \n<li>\n<p>These two functions check whether an interval meets with another interval. </p></li>\n  \n<li>Arguments:\n  \n<ul>\n    \n<li><tt>interval1</tt>, <tt>interval2</tt>: two intervals to be compared</li>\n  </ul></li>\n  \n<li>\n<p>Return Value:</p>\n<p>A <tt>boolean</tt> value. Specifically, <tt>interval-meets(interval1, interval2)</tt> is true if and only if <tt>interval1.end = interval2.start</tt>, and <tt>interval-met-by(interval1, interval2)</tt> is true if and only if <tt>interval1.start = interval2.end</tt>. If any of the two inputs is <tt>null</tt>, <tt>null</tt> is returned.</p></li>\n  \n<li>\n<p>Examples:</p>\n  \n<div class=\"source\">\n<pre>let $itv1 := interval-from-date(&quot;2000-01-01&quot;, &quot;2005-01-01&quot;)\nlet $itv2 := interval-from-date(&quot;2005-01-01&quot;, &quot;2012-09-09&quot;)\nlet $itv3 := interval-from-date(&quot;2006-08-01&quot;, &quot;2007-03-01&quot;)\nlet $itv4 := interval-from-date(&quot;2004-09-10&quot;, &quot;2006-08-01&quot;)\nreturn {&quot;meets&quot;: interval-meets($itv1, $itv2), &quot;metby&quot;: interval-met-by($itv3, $itv4)}\n</pre></div></li>\n  \n<li>\n<p>The expected result is:</p>\n  \n<div class=\"source\">\n<pre>{ &quot;meets&quot;: true, &quot;metby&quot;: true }\n</pre></div></li>\n</ul></div>\n<div class=\"section\">\n<h3>interval-overlaps, interval-overlapped-by, overlap<a name=\"interval-overlaps_interval-overlapped-by_overlap\"></a></h3>\n\n<ul>\n  \n<li>\n<p>Syntax:</p>\n  \n<div class=\"source\">\n<pre>interval-overlaps(interval1, interval2)\ninterval-overlapped-by(interval1, interval2)\noverlap(interval1, interval2)\n</pre></div></li>\n  \n<li>\n<p>These functions check whether two intervals overlap with each other.</p></li>\n  \n<li>Arguments:\n  \n<ul>\n    \n<li><tt>interval1</tt>, <tt>interval2</tt>: two intervals to be compared</li>\n  </ul></li>\n  \n<li>\n<p>Return Value:</p>\n<p>A <tt>boolean</tt> value. Specifically, <tt>interval-overlaps(interval1, interval2)</tt> is true if and only if</p>\n  \n<div class=\"source\">\n<pre>interval1.start &lt; interval2.start\nAND interval2.end &gt; interval1.end\nAND interval1.end &gt; interval2.start\n</pre></div>\n<p><tt>interval-overlapped-by(interval1, interval2)</tt> is true if and only if</p>\n  \n<div class=\"source\">\n<pre>interval2.start &lt; interval1.start\nAND interval1.end &gt; interval2.end\nAND interval2.end &gt; interval1.start\n</pre></div>\n<p><tt>overlap(interval1, interval2)</tt> is true if</p>\n  \n<div class=\"source\">\n<pre>(interval2.start &gt;= interval1.start\nAND interval2.start &lt; interval1.end)\nOR\n(interval2.end &gt; interval1.start\nAND interval2.end &lt;= interval.end)\n</pre></div>\n<p>For all these functions, if any of the two inputs is <tt>null</tt>, <tt>null</tt> is returned.</p>\n<p>Note that <tt>interval-overlaps</tt> and <tt>interval-overlapped-by</tt> are following the Allen&#x2019;s relations on the definition of overlap. <tt>overlap</tt> is a syntactic sugar for the case that the intersect of two intervals is not empty.</p></li>\n  \n<li>\n<p>Examples:</p>\n  \n<div class=\"source\">\n<pre>let $itv1 := interval-from-date(&quot;2000-01-01&quot;, &quot;2005-01-01&quot;)\nlet $itv2 := interval-from-date(&quot;2004-05-01&quot;, &quot;2012-09-09&quot;)\nlet $itv3 := interval-from-date(&quot;2006-08-01&quot;, &quot;2007-03-01&quot;)\nlet $itv4 := interval-from-date(&quot;2004-09-10&quot;, &quot;2006-12-31&quot;)\nreturn {&quot;overlaps&quot;: interval-overlaps($itv1, $itv2), \n        &quot;overlapped-by&quot;: interval-overlapped-by($itv3, $itv4), \n        &quot;overlapping1&quot;: overlap($itv1, $itv2), \n        &quot;overlapping2&quot;: overlap($itv3, $itv4)}\n</pre></div></li>\n  \n<li>\n<p>The expected result is:</p>\n  \n<div class=\"source\">\n<pre>{ &quot;overlaps&quot;: true, &quot;overlapped-by&quot;: true, &quot;overlapping1&quot;: true, &quot;overlapping2&quot;: true }\n</pre></div></li>\n</ul></div>\n<div class=\"section\">\n<h3>interval-starts, interval-started-by<a name=\"interval-starts_interval-started-by\"></a></h3>\n\n<ul>\n  \n<li>\n<p>Syntax:</p>\n  \n<div class=\"source\">\n<pre>interval-starts(interval1, interval2)\ninterval-started-by(interval1, interval2)\n</pre></div></li>\n  \n<li>\n<p>These two functions check whether one interval starts with the other interval.</p></li>\n  \n<li>Arguments:\n  \n<ul>\n    \n<li><tt>interval1</tt>, <tt>interval2</tt>: two intervals to be compared</li>\n  </ul></li>\n  \n<li>\n<p>Return Value:</p>\n<p>A <tt>boolean</tt> value. Specifically, <tt>interval-starts(interval1, interval2)</tt> returns true if and only if</p>\n  \n<div class=\"source\">\n<pre>interval1.start = interval2.start\nAND interval1.end &lt;= interval2.end\n</pre></div>\n<p><tt>interval-started-by(interval1, interval2)</tt> returns true if and only if</p>\n  \n<div class=\"source\">\n<pre>interval1.start = interval2.start\nAND interval2.end &lt;= interval1.end\n</pre></div>\n<p>For both functions, if any of the two inputs is <tt>null</tt>, <tt>null</tt> is returned.</p></li>\n  \n<li>\n<p>Examples:</p>\n  \n<div class=\"source\">\n<pre>let $itv1 := interval-from-date(&quot;2000-01-01&quot;, &quot;2005-01-01&quot;)\nlet $itv2 := interval-from-date(&quot;2000-01-01&quot;, &quot;2012-09-09&quot;)\nlet $itv3 := interval-from-date(&quot;2006-08-01&quot;, &quot;2007-03-01&quot;)\nlet $itv4 := interval-from-date(&quot;2006-08-01&quot;, &quot;2006-08-01&quot;)\nreturn {&quot;interval-starts&quot;: interval-starts($itv1, $itv2), &quot;interval-started-by&quot;: interval-started-by($itv3, $itv4)}\n</pre></div></li>\n  \n<li>\n<p>The expected result is:</p>\n  \n<div class=\"source\">\n<pre>{ &quot;interval-starts&quot;: true, &quot;interval-started-by&quot;: true }\n</pre></div></li>\n</ul></div>\n<div class=\"section\">\n<h3>interval-covers, interval-covered-by<a name=\"interval-covers_interval-covered-by\"></a></h3>\n\n<ul>\n  \n<li>\n<p>Syntax:</p>\n  \n<div class=\"source\">\n<pre>interval-covers(interval1, interval2)\ninterval-covered-by(interval1, interval2)\n</pre></div></li>\n  \n<li>\n<p>These two functions check whether one interval covers the other interval.</p></li>\n  \n<li>Arguments:\n  \n<ul>\n    \n<li><tt>interval1</tt>, <tt>interval2</tt>: two intervals to be compared</li>\n  </ul></li>\n  \n<li>\n<p>Return Value:</p>\n<p>A <tt>boolean</tt> value. Specifically, <tt>interval-covers(interval1, interval2)</tt> is true if and only if</p>\n  \n<div class=\"source\">\n<pre>interval1.start &lt;= interval2.start\nAND interval2.end &gt;= interval1.end\n</pre></div>\n<p><tt>interval-covered-by(interval1, interval2)</tt> is true if and only if</p>\n  \n<div class=\"source\">\n<pre>interval2.start &lt;= interval1.start\nAND interval1.end &gt;= interval2.end\n</pre></div>\n<p>For both functions, if any of the two inputs is <tt>null</tt>, <tt>null</tt> is returned.</p></li>\n  \n<li>\n<p>Examples:</p>\n  \n<div class=\"source\">\n<pre>let $itv1 := interval-from-date(&quot;2000-01-01&quot;, &quot;2005-01-01&quot;)\nlet $itv2 := interval-from-date(&quot;2000-03-01&quot;, &quot;2004-09-09&quot;)\nlet $itv3 := interval-from-date(&quot;2006-08-01&quot;, &quot;2007-03-01&quot;)\nlet $itv4 := interval-from-date(&quot;2004-09-10&quot;, &quot;2012-08-01&quot;)\nreturn {&quot;interval-covers&quot;: interval-covers($itv1, $itv2), &quot;interval-covered-by&quot;: interval-covered-by($itv3, $itv4)}\n</pre></div></li>\n  \n<li>\n<p>The expected result is:</p>\n  \n<div class=\"source\">\n<pre>{ &quot;interval-covers&quot;: true, &quot;interval-covered-by&quot;: true }\n</pre></div></li>\n</ul></div>\n<div class=\"section\">\n<h3>interval-ends, interval-ended-by<a name=\"interval-ends_interval-ended-by\"></a></h3>\n\n<ul>\n  \n<li>\n<p>Syntax:</p>\n  \n<div class=\"source\">\n<pre>interval-ends(interval1, interval2)\ninterval-ended-by(interval1, interval2)\n</pre></div></li>\n  \n<li>\n<p>These two functions check whether one interval ends with the other interval.</p></li>\n  \n<li>Arguments:\n  \n<ul>\n    \n<li><tt>interval1</tt>, <tt>interval2</tt>: two intervals to be compared</li>\n  </ul></li>\n  \n<li>\n<p>Return Value:</p>\n<p>A <tt>boolean</tt> value. Specifically, <tt>interval-ends(interval1, interval2)</tt> returns true if and only if</p>\n  \n<div class=\"source\">\n<pre>interval1.end = interval2.end\nAND interval1.start &gt;= interval2.start\n</pre></div>\n<p><tt>interval-ended-by(interval1, interval2)</tt> returns true if and only if</p>\n  \n<div class=\"source\">\n<pre>interval2.end = interval1.end\nAND interval2.start &gt;= interval1.start\n</pre></div>\n<p>For both functions, if any of the two inputs is <tt>null</tt>, <tt>null</tt> is returned.</p></li>\n  \n<li>\n<p>Examples:</p>\n  \n<div class=\"source\">\n<pre>let $itv1 := interval-from-date(&quot;2000-01-01&quot;, &quot;2005-01-01&quot;)\nlet $itv2 := interval-from-date(&quot;1998-01-01&quot;, &quot;2005-01-01&quot;)\nlet $itv3 := interval-from-date(&quot;2006-08-01&quot;, &quot;2007-03-01&quot;)\nlet $itv4 := interval-from-date(&quot;2006-09-10&quot;, &quot;2007-03-01&quot;)\nreturn {&quot;interval-ends&quot;: interval-ends($itv1, $itv2), &quot;interval-ended-by&quot;: interval-ended-by($itv3, $itv4) }\n</pre></div></li>\n  \n<li>\n<p>The expected result is:</p>\n  \n<div class=\"source\">\n<pre>{ &quot;interval-ends&quot;: true, &quot;interval-ended-by&quot;: true }\n</pre></div></li>\n</ul></div></div>\n                  </div>\n            </div>\n          </div>\n\n    <hr/>\n\n    <footer>\n            <div class=\"container-fluid\">\n              <div class=\"row span12\">Copyright &copy;                   2014.\n          All Rights Reserved.      \n                    \n      </div>\n\n                          \n        \n                </div>\n    </footer>\n  </body>\n</html>\n", "id": 16454.0}