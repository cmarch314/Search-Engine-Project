{"text": " Home Trees Indices Help Package CHEM Package Common Module MolExt hide private frames no frames Module MolExt Extensions for molecule object descriptors Classes hide private Orbital Functions hide private nStdValenceElectrons atomicNum Return the standard number of valence electrons for an atom type specified by atomic number atomIonizationEnergy atom formalCharge None Return a reference value for the atom s ionization energy kcal mol atomElectronAffinity atom formalCharge None Return a reference value for the atom s electron affinity kcal mol atomElectronegativity atom formalCharge None Return a reference value for the electronegativity of a given atom stableValenceShell atomicNum How many electrons should be in the outer shell for this atom type to be stable Most commonly should just be 8 to make the octet rule except for hydrogen orbitalInfo atom Returns various statistics related to the atom s non bonded orbitals atomHybridization atom visitedAtomIndexes None OEChem has OEGetHybridization method and this works similarly orbitalIter atom Iterate over all of the apparent orbitals in the current atom resonanceStructureIter mol observedSmilesSet None depth For the given molecule or intermediate enumerate all of the reasonable resonance structures by shifting electrons around available p atomic orbitals and pi molecular orbitals uniqueAtomResonanceStructureIter mol undoLabels True Simple wrapper around resonance structureIter method labelUniqueAtomMaps mol undoDict None Helper to label the atom map attribute of all of the atoms of the molecule equal to their index position in the molecule which ensures they will all receive a unique value undoLabelUniqueAtomMaps mol undoDict None Undo the effects of the labelUniqueAtomMaps function rearrangeOrbitalElectrons mol bond beginPOrbs endPOrbs Given just the p and pi orbitals for the given bond enumerate each natural way of rearranging the electrons within them rearrangeOrbitalElectronsAllowDoubleCharges mol bond beginPOrbs endPOrbs The real implementation method grossFormalCharges mol Figure out the total gross positive and negative charge on the molecule which may be non zero even if the net charge on the molecule is zero screenResonanceStruct mol The molecule should represent a proposed resonance structure moveOrbitalElectrons orb1 orb2 electronCount 2 Most general half reaction movement of electrons from one molecular orbital to another undoMoveOrbitalElectrons orb1 orb2 electronCount 2 Assume the moveOrbitalElectrons function was just called for orb1 and orb2 moveAtomElectrons atom1 atom2 electronCount 2 halfBondIndexes None Move electrons from atom1 to atom2 moveBondElectrons bond atom electronCount 2 pivotAtom None halfBondIndexes None Move electrons from the bond to the target atom atomsAltered mol1 mol2 Given 2 molecules that should be based on a common one determine how many atoms in the molecule have been altered by electron rearrangement atomIsChiral atom Extension of OpenEye OEAtomBase IsChiral method bondIsChiral bond Extension of OpenEye OEBondBase IsChiral method createStandardMol mol Reparse the molecule SMILES string to ensure any unusual properties are cleared out enumerateRacemicMixture mol unspecifiedAtoms None unspecifiedBonds None allCisTrans False Assume the molecule object represents a racemic mixture of otherwise identical isomers clearAtomStereo atom clearBondStereo bond enumerateRacemicMixtureList molList currStereoList None Given a list of molecule objects call enumerateRacemicMixture on each to yield a list of all possible isomer combinations of the molecules neighborTreeWeight atom visitedAtomIndexes Determine the molecular weight of all atoms connected up to the atom that are not counted in the visitedAtomIndexes molSkeleton mol clearChiralFlags True copyMol True carbonSkeleton False Reduces the molecule down to just it s carbon skeleton clearMol mol Delete all of the atoms in the molecule Variables hide private ORBITAL TYPES Set sigma pi s sp sp sp1 BOND ORBITAL TYPES Set sigma pi Function Details hide private nStdValenceElectrons atomicNum Return the standard number of valence electrons for an atom type specified by atomic number Based on lookup table for now can come up with more generalized scheme later atomIonizationEnergy atom formalCharge None Return a reference value for the atom s ionization energy kcal mol If the atom has a formal charge should return an adjusted value to estimate 2nd ionization energies etc If a formal charge parameter is specified use that value instead of any set on the actual atom object atomElectronAffinity atom formalCharge None Return a reference value for the atom s electron affinity kcal mol If the atom has a formal charge should return an adjusted value to estimate 2nd electron affinities etc If a formal charge parameter is specified use that value instead of any set on the actual atom object atomElectronegativity atom formalCharge None Return a reference value for the electronegativity of a given atom This uses a general Mulliken scale where EN IE EA 2 IE Ionization Energy EA Electron Affinity which can in turn be found by standard values and inferred for charged atoms stableValenceShell atomicNum How many electrons should be in the outer shell for this atom type to be stable Most commonly should just be 8 to make the octet rule except for hydrogen Note also that essentially any can be come stable with zero outer shell electrons since that just means the next complete inner shell becomes the outer shell orbitalInfo atom Returns various statistics related to the atom s non bonded orbitals This is a dictionary with keys nUnbondedElectrons nLonePairs nRadicals nEmptyOrbitals Given an atom object figure out how many electrons are in its outer valence shell that are NOT part of a bond Based on standard valence electron number atomHybridization atom visitedAtomIndexes None OEChem has OEGetHybridization method and this works similarly Return value is the p character of the hybridization for example 2 for sp2 Simple rule based now that should work for atoms up to the second row at least Easy to tell if this atom has more than one pi bond Otherwise assume is sp3 unless have an empty orbital then assume is sp2 Or if have a lone pair in an aromatic system must be sp2 In cases like oxygen of C CO is probably somewhere in between Hydrogen is special case orbitalIter atom Iterate over all of the apparent orbitals in the current atom These will include sigma and pi molecular orbitals or possible sp or p atomic orbitals For each will have a bond associated with it or a certain number of lone electrons resonanceStructureIter mol observedSmilesSet None depth For the given molecule or intermediate enumerate all of the reasonable resonance structures by shifting electrons around available p atomic orbitals and pi molecular orbitals For efficiency will always be the same molecule object yielded just modified Caller must make sure that it comes back in the same state Strategy Look for any 2 adjacent atoms hybridized with p or pi orbitals and rearrange electrons in a chemically natural manner After any case recursively look for more possibilities Use observedSmilesSet to avoid recursion loops uniqueAtomResonanceStructureIter mol undoLabels True Simple wrapper around resonance structureIter method Before generating the resonance structures however will give a unique atom map label to every atom in the molecule with the effect that symmetric resonance structures will each be counted individually instead of being skipped over as if identical undoLabels Specifies whether to clear out these fake labels before each result is yielded labelUniqueAtomMaps mol undoDict None Helper to label the atom map attribute of all of the atoms of the molecule equal to their index position in the molecule which ensures they will all receive a unique value If undoDict provided then store the original values of the atom map indexes so they can later be restored by the undoLabelUniqueAtomMaps function undoLabelUniqueAtomMaps mol undoDict None Undo the effects of the labelUniqueAtomMaps function If no specific undoDict is provided then just reset all of the atom map indexes to indicating standard values Otherwise use the specific values stored in the undoDict rearrangeOrbitalElectrons mol bond beginPOrbs endPOrbs Given just the p and pi orbitals for the given bond enumerate each natural way of rearranging the electrons within them Don t have to consider mirror cases leave that as caller s responsibility by calling this function twice but swapping the begin and end atoms and pOrbs Cases of interest not counting radicals for now Both atoms share a pi molecular orbital That is the bond includes a pi bond Separate the pi molecular orbitals into one empty orbital charge and one lone pair orbital charge Then caller can recurse on this intermediate which should fit the above rules One atom has lone pair other has empty p orbital artificial case representing charge separation modeling Move lone pair to empty p orbital to form new pi bond here One atom has pi molecular orbital other has empty p orbital Move the pi electrons to form a new pi bond here One atom has a lone pair in p orbital other has a pi molecular orbital Move the lone pair into a new pi bond Move the pi electrons to a lone pair over the far 3rd atom Additional case where atoms each have a pi molecular orbital but not the same one like the central bond in C C C C Do nothing here let another case separate the pi orbital of one of the adjacent double bonds and then it will look like a case we can work with lone pair or empty orbital next to pi orbital Note that this keeps yielding the same but modified molecule object Thus in implementing after each yield usage the atom and bond states must be returned to how they were rearrangeOrbitalElectronsAllowDoubleCharges mol bond beginPOrbs endPOrbs The real implementation method Interface method is just a wrapper on this one with a filter to eliminate overcharged resonance structure proposals Can almost just use the moveOrbitalElectrons functions from every beginPOrb to every endPOrb and let that sort out the details This would work except that we need to undo the changes at each step to revert the molecule to its original state which is hard to do if we don t know the specific steps grossFormalCharges mol Figure out the total gross positive and negative charge on the molecule which may be non zero even if the net charge on the molecule is zero For example from CHEM Common Util import molBySmiles print grossFormalCharges molBySmiles CC O Cl print grossFormalCharges molBySmiles OH3 1 print grossFormalCharges molBySmiles CC N O O 1 1 print grossFormalCharges molBySmiles N N N 1 2 screenResonanceStruct mol The molecule should represent a proposed resonance structure Decide whether it should be accepted as a valid meaningful one For example Don t accept charge separated structures if it leaves an empty orbital incomplete octet on the formal positive atom It s okay if the formal positive atom has a complete octet like the nitrogen on nitro and azide groups Also okay if lone positive charge like carbocation with no anion available to fill in the empty orbital moveOrbitalElectrons orb1 orb2 electronCount 2 Most general half reaction movement of electrons from one molecular orbital to another Function should figure out all of the substeps necessary to properly represent the change including consideration for whether the orbitals are atomic non bond or molecular bond Assume this is called in a sensible manner however Cannot use any arbitary orbitals as the arguments The source orbital orb1 must contain electrons to move no empty orbitals allowed The target orbital orb2 must have space for electrons to move in In general this means it is either an empty orbital or a bond orbital which can displace the existing bond electrons to the neighbor atom No lone pairs allowed Returns a 2 ple consisting of the bond just created or added to by the move and a string representing the respective arrow pushing diagram undoMoveOrbitalElectrons orb1 orb2 electronCount 2 Assume the moveOrbitalElectrons function was just called for orb1 and orb2 Revert the molecule state to where it was before then based on the info in the orbitals moveAtomElectrons atom1 atom2 electronCount 2 halfBondIndexes None Move electrons from atom1 to atom2 If these are bonded already just change the bond order and adjust the formal charges If they are not already bonded then create a new bond and adjust the formal charges If moving single electrons radical reactions better provide halfBonds list Used to keep track of which bonds have only been half formed by a radical movement and are waiting for a complementary one to complete or eliminate the bond Note that the bond could be 1 1 2 or 2 1 2 The point is that it s just not a whole number bond yet Return 2 ple with reference to new bond object if it was created and the arrow code string representing the electron movement moveBondElectrons bond atom electronCount 2 pivotAtom None halfBondIndexes None Move electrons from the bond to the target atom If the atom is already part of the bond then just down shift the bond order maybe deleting the bond altogether and adjust atom formal charges Otherwise down shift this bond order and create a new one to the atom again adjusting atom formal charges Note that this only works if the pivotAtom is specified That is the atom which appears in both the source and the target bond Otherwise without the polarity of the source bond specified can t tell which end to remain connected to Return the arrow code string representing the electron movement atomsAltered mol1 mol2 Given 2 molecules that should be based on a common one determine how many atoms in the molecule have been altered by electron rearrangement One of the molecules should probably have been a copy of the other because this method depends on the mol GetAtoms iterator returning the atoms in the same order If that s the case will go through each matching pair of atoms and check whether they share the same bond orders and formal charge If not assume the electron arrangement has changed atomIsChiral atom Extension of OpenEye OEAtomBase IsChiral method Manual corrections for Organometallics do not have configurationally stable stereochemistry bondIsChiral bond Extension of OpenEye OEBondBase IsChiral method Manual corrections for Vinylic carbocations should not have stereochemistry should be linear sp hybridized createStandardMol mol Reparse the molecule SMILES string to ensure any unusual properties are cleared out Happens often when doing direct molecule graph manipulations or reaction processing In addition check molecule bonds and atoms and clear out any bogus stereoassignments enumerateRacemicMixture mol unspecifiedAtoms None unspecifiedBonds None allCisTrans False Assume the molecule object represents a racemic mixture of otherwise identical isomers Go through every unassigned stereocenter and generate all possible specific isomers by assiging all possible stereo configurations allCisTrans If true will enumerate all cis trans isomers for unspecified chiral bonds Otherwise will only generate one with the bulkiest largest by molecular weight groups trans to each other enumerateRacemicMixtureList molList currStereoList None Given a list of molecule objects call enumerateRacemicMixture on each to yield a list of all possible isomer combinations of the molecules currStereoList is the current list of fully stereospecified molecules One it reaches the same length of the original molList one complete set of stereoisomers has been produced and can be returned Use to track depth in recursion neighborTreeWeight atom visitedAtomIndexes Determine the molecular weight of all atoms connected up to the atom that are not counted in the visitedAtomIndexes Ignore implicit hydrogens which should be fine for relative comparisons as long as they are consistently ignored throughout the molecule molSkeleton mol clearChiralFlags True copyMol True carbonSkeleton False Reduces the molecule down to just it s carbon skeleton All implicit and explicit hydrogen atoms are removed All bond orders are set to 1 All formal charges are neutralized All isotopes are reset All atom mapping indexes are reset If carbonSkeleton is True All non carbon atoms that are not within a ring or chain are removed clearMol mol Delete all of the atoms in the molecule Don t just use mol Clear if want to retain other information such as SD tagged or other name value pair data Variables Details hide private ORBITAL TYPES Value Set sigma pi s sp sp sp1 sp2 sp3 p Home Trees Indices Help Generated by Epydoc 3 beta1 on Thu Nov 8 17 49 22 2 7 http epydoc sourceforge net", "_id": "http://www.ics.uci.edu/~dock/CHEM_docs/CHEM.Common.MolExt-module.html", "title": "chem.common.molext", "html": "<?xml version=\"1.0\" encoding=\"ascii\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n          \"DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n  <title>CHEM.Common.MolExt</title>\n  <link rel=\"stylesheet\" href=\"epydoc.css\" type=\"text/css\" />\n  <script type=\"text/javascript\" src=\"epydoc.js\"></script>\n</head>\n\n<body bgcolor=\"white\" text=\"black\" link=\"blue\" vlink=\"#204080\"\n      alink=\"#204080\">\n<!-- ==================== NAVIGATION BAR ==================== -->\n<table class=\"navbar\" border=\"0\" width=\"100%\" cellpadding=\"0\"\n       bgcolor=\"#a0c0ff\" cellspacing=\"0\">\n  <tr valign=\"middle\">\n  <!-- Home link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"CHEM-module.html\">Home</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Tree link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"module-tree.html\">Trees</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Index link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"identifier-index.html\">Indices</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Help link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"help.html\">Help</a>&nbsp;&nbsp;&nbsp;</th>\n\n      <th class=\"navbar\" width=\"100%\"></th>\n  </tr>\n</table>\n<table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n  <tr valign=\"top\">\n    <td width=\"100%\">\n      <span class=\"breadcrumbs\">\n        <a href=\"CHEM-module.html\">Package&nbsp;CHEM</a> ::\n        <a href=\"CHEM.Common-module.html\">Package&nbsp;Common</a> ::\n        Module&nbsp;MolExt\n      </span>\n    </td>\n    <td>\n      <table cellpadding=\"0\" cellspacing=\"0\">\n        <!-- hide/show private -->\n        <tr><td align=\"right\"><span class=\"options\">[<a href=\"javascript:void(0);\" class=\"privatelink\"\n    onclick=\"toggle_private();\">hide&nbsp;private</a>]</span></td></tr>\n        <tr><td align=\"right\"><span class=\"options\"\n            >[<a href=\"frames.html\" target=\"_top\">frames</a\n            >]&nbsp;|&nbsp;<a href=\"CHEM.Common.MolExt-module.html\"\n            target=\"_top\">no&nbsp;frames</a>]</span></td></tr>\n      </table>\n    </td>\n  </tr>\n</table>\n<!-- ==================== MODULE DESCRIPTION ==================== -->\n<h1 class=\"epydoc\">Module MolExt</h1><br /><br />\nExtensions for molecule object descriptors<br /><br />\n\n<!-- ==================== CLASSES ==================== -->\n<a name=\"section-Classes\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Classes</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-Classes\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a href=\"CHEM.Common.MolExt.Orbital-class.html\" class=\"summary-name\">Orbital</a>\n    </td>\n  </tr>\n</table>\n<!-- ==================== FUNCTIONS ==================== -->\n<a name=\"section-Functions\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Functions</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-Functions\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.MolExt-module.html#nStdValenceElectrons\" class=\"summary-sig-name\">nStdValenceElectrons</a>(<span class=\"summary-sig-arg\">atomicNum</span>)</span><br />\n      Return the standard number of valence electrons for an atom type \n      specified by atomic number.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.MolExt-module.html#atomIonizationEnergy\" class=\"summary-sig-name\">atomIonizationEnergy</a>(<span class=\"summary-sig-arg\">atom</span>,\n        <span class=\"summary-sig-arg\">formalCharge</span>=<span class=\"summary-sig-default\">None</span>)</span><br />\n      Return a reference value for the atom's ionization energy \n      (kcal/mol).</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.MolExt-module.html#atomElectronAffinity\" class=\"summary-sig-name\">atomElectronAffinity</a>(<span class=\"summary-sig-arg\">atom</span>,\n        <span class=\"summary-sig-arg\">formalCharge</span>=<span class=\"summary-sig-default\">None</span>)</span><br />\n      Return a reference value for the atom's electron affinity \n      (kcal/mol).</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.MolExt-module.html#atomElectronegativity\" class=\"summary-sig-name\">atomElectronegativity</a>(<span class=\"summary-sig-arg\">atom</span>,\n        <span class=\"summary-sig-arg\">formalCharge</span>=<span class=\"summary-sig-default\">None</span>)</span><br />\n      Return a reference value for the electronegativity of a given \n      atom.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.MolExt-module.html#stableValenceShell\" class=\"summary-sig-name\">stableValenceShell</a>(<span class=\"summary-sig-arg\">atomicNum</span>)</span><br />\n      How many electrons should be in the outer shell for this atom type\n      to be stable? Most commonly should just be 8 to make the octet rule, \n      except for hydrogen.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.MolExt-module.html#orbitalInfo\" class=\"summary-sig-name\">orbitalInfo</a>(<span class=\"summary-sig-arg\">atom</span>)</span><br />\n      Returns various statistics related to the atom's non-bonded \n      orbitals.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.MolExt-module.html#atomHybridization\" class=\"summary-sig-name\">atomHybridization</a>(<span class=\"summary-sig-arg\">atom</span>,\n        <span class=\"summary-sig-arg\">visitedAtomIndexes</span>=<span class=\"summary-sig-default\">None</span>)</span><br />\n      OEChem has OEGetHybridization method, and this works \n      similarly.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.MolExt-module.html#orbitalIter\" class=\"summary-sig-name\">orbitalIter</a>(<span class=\"summary-sig-arg\">atom</span>)</span><br />\n      Iterate over all of the apparent orbitals in the current atom.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.MolExt-module.html#resonanceStructureIter\" class=\"summary-sig-name\">resonanceStructureIter</a>(<span class=\"summary-sig-arg\">mol</span>,\n        <span class=\"summary-sig-arg\">observedSmilesSet</span>=<span class=\"summary-sig-default\">None</span>,\n        <span class=\"summary-sig-arg\">depth</span>=<span class=\"summary-sig-default\">0</span>)</span><br />\n      For the given molecule or intermediate, enumerate all of the \n      reasonable resonance structures by shifting electrons around \n      available p atomic orbitals and pi molecular orbitals.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.MolExt-module.html#uniqueAtomResonanceStructureIter\" class=\"summary-sig-name\">uniqueAtomResonanceStructureIter</a>(<span class=\"summary-sig-arg\">mol</span>,\n        <span class=\"summary-sig-arg\">undoLabels</span>=<span class=\"summary-sig-default\">True</span>)</span><br />\n      Simple wrapper around resonance structureIter method.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.MolExt-module.html#labelUniqueAtomMaps\" class=\"summary-sig-name\">labelUniqueAtomMaps</a>(<span class=\"summary-sig-arg\">mol</span>,\n        <span class=\"summary-sig-arg\">undoDict</span>=<span class=\"summary-sig-default\">None</span>)</span><br />\n      Helper to label the atom map attribute of all of the atoms of the \n      molecule equal to their index position in the molecule, which ensures\n      they will all receive a unique value.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.MolExt-module.html#undoLabelUniqueAtomMaps\" class=\"summary-sig-name\">undoLabelUniqueAtomMaps</a>(<span class=\"summary-sig-arg\">mol</span>,\n        <span class=\"summary-sig-arg\">undoDict</span>=<span class=\"summary-sig-default\">None</span>)</span><br />\n      Undo the effects of the labelUniqueAtomMaps function.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.MolExt-module.html#rearrangeOrbitalElectrons\" class=\"summary-sig-name\">rearrangeOrbitalElectrons</a>(<span class=\"summary-sig-arg\">mol</span>,\n        <span class=\"summary-sig-arg\">bond</span>,\n        <span class=\"summary-sig-arg\">beginPOrbs</span>,\n        <span class=\"summary-sig-arg\">endPOrbs</span>)</span><br />\n      Given just the p and pi orbitals for the given bond,\nenumerate each natural way of rearranging the electrons within them.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.MolExt-module.html#rearrangeOrbitalElectronsAllowDoubleCharges\" class=\"summary-sig-name\">rearrangeOrbitalElectronsAllowDoubleCharges</a>(<span class=\"summary-sig-arg\">mol</span>,\n        <span class=\"summary-sig-arg\">bond</span>,\n        <span class=\"summary-sig-arg\">beginPOrbs</span>,\n        <span class=\"summary-sig-arg\">endPOrbs</span>)</span><br />\n      The real implementation method.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.MolExt-module.html#grossFormalCharges\" class=\"summary-sig-name\">grossFormalCharges</a>(<span class=\"summary-sig-arg\">mol</span>)</span><br />\n      Figure out the total gross positive and negative charge on the \n      molecule, which may be non-zero even if the net charge on the \n      molecule is zero.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.MolExt-module.html#screenResonanceStruct\" class=\"summary-sig-name\">screenResonanceStruct</a>(<span class=\"summary-sig-arg\">mol</span>)</span><br />\n      The molecule should represent a proposed resonance structure.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.MolExt-module.html#moveOrbitalElectrons\" class=\"summary-sig-name\">moveOrbitalElectrons</a>(<span class=\"summary-sig-arg\">orb1</span>,\n        <span class=\"summary-sig-arg\">orb2</span>,\n        <span class=\"summary-sig-arg\">electronCount</span>=<span class=\"summary-sig-default\">2</span>)</span><br />\n      Most general half-reaction, movement of electrons from one \n      molecular orbital to another.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.MolExt-module.html#undoMoveOrbitalElectrons\" class=\"summary-sig-name\">undoMoveOrbitalElectrons</a>(<span class=\"summary-sig-arg\">orb1</span>,\n        <span class=\"summary-sig-arg\">orb2</span>,\n        <span class=\"summary-sig-arg\">electronCount</span>=<span class=\"summary-sig-default\">2</span>)</span><br />\n      Assume the moveOrbitalElectrons function was just called for orb1 \n      and orb2.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.MolExt-module.html#moveAtomElectrons\" class=\"summary-sig-name\">moveAtomElectrons</a>(<span class=\"summary-sig-arg\">atom1</span>,\n        <span class=\"summary-sig-arg\">atom2</span>,\n        <span class=\"summary-sig-arg\">electronCount</span>=<span class=\"summary-sig-default\">2</span>,\n        <span class=\"summary-sig-arg\">halfBondIndexes</span>=<span class=\"summary-sig-default\">None</span>)</span><br />\n      Move electrons from atom1 to atom2.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.MolExt-module.html#moveBondElectrons\" class=\"summary-sig-name\">moveBondElectrons</a>(<span class=\"summary-sig-arg\">bond</span>,\n        <span class=\"summary-sig-arg\">atom</span>,\n        <span class=\"summary-sig-arg\">electronCount</span>=<span class=\"summary-sig-default\">2</span>,\n        <span class=\"summary-sig-arg\">pivotAtom</span>=<span class=\"summary-sig-default\">None</span>,\n        <span class=\"summary-sig-arg\">halfBondIndexes</span>=<span class=\"summary-sig-default\">None</span>)</span><br />\n      Move electrons from the bond to the target atom.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.MolExt-module.html#atomsAltered\" class=\"summary-sig-name\">atomsAltered</a>(<span class=\"summary-sig-arg\">mol1</span>,\n        <span class=\"summary-sig-arg\">mol2</span>)</span><br />\n      Given 2 molecules, that should be based on a common one, determine\n      how many atoms in the molecule have been altered by electron \n      rearrangement.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.MolExt-module.html#atomIsChiral\" class=\"summary-sig-name\">atomIsChiral</a>(<span class=\"summary-sig-arg\">atom</span>)</span><br />\n      Extension of OpenEye OEAtomBase.IsChiral method.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.MolExt-module.html#bondIsChiral\" class=\"summary-sig-name\">bondIsChiral</a>(<span class=\"summary-sig-arg\">bond</span>)</span><br />\n      Extension of OpenEye OEBondBase.IsChiral method.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.MolExt-module.html#createStandardMol\" class=\"summary-sig-name\">createStandardMol</a>(<span class=\"summary-sig-arg\">mol</span>)</span><br />\n      Reparse the molecule SMILES string to ensure any unusual \n      properties are cleared out.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.MolExt-module.html#enumerateRacemicMixture\" class=\"summary-sig-name\">enumerateRacemicMixture</a>(<span class=\"summary-sig-arg\">mol</span>,\n        <span class=\"summary-sig-arg\">unspecifiedAtoms</span>=<span class=\"summary-sig-default\">None</span>,\n        <span class=\"summary-sig-arg\">unspecifiedBonds</span>=<span class=\"summary-sig-default\">None</span>,\n        <span class=\"summary-sig-arg\">allCisTrans</span>=<span class=\"summary-sig-default\">False</span>)</span><br />\n      Assume the molecule object represents a racemic mixture of otherwise identical isomers.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"clearAtomStereo\"></a><span class=\"summary-sig-name\">clearAtomStereo</span>(<span class=\"summary-sig-arg\">atom</span>)</span></td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a name=\"clearBondStereo\"></a><span class=\"summary-sig-name\">clearBondStereo</span>(<span class=\"summary-sig-arg\">bond</span>)</span></td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.MolExt-module.html#enumerateRacemicMixtureList\" class=\"summary-sig-name\">enumerateRacemicMixtureList</a>(<span class=\"summary-sig-arg\">molList</span>,\n        <span class=\"summary-sig-arg\">currStereoList</span>=<span class=\"summary-sig-default\">None</span>)</span><br />\n      Given a list of molecule objects, call enumerateRacemicMixture on \n      each to yield a list of all possible isomer combinations of the \n      molecules.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.MolExt-module.html#neighborTreeWeight\" class=\"summary-sig-name\">neighborTreeWeight</a>(<span class=\"summary-sig-arg\">atom</span>,\n        <span class=\"summary-sig-arg\">visitedAtomIndexes</span>)</span><br />\n      Determine the molecular weight of all atoms connected up to the \n      atom, that are not counted in the visitedAtomIndexes.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.MolExt-module.html#molSkeleton\" class=\"summary-sig-name\">molSkeleton</a>(<span class=\"summary-sig-arg\">mol</span>,\n        <span class=\"summary-sig-arg\">clearChiralFlags</span>=<span class=\"summary-sig-default\">True</span>,\n        <span class=\"summary-sig-arg\">copyMol</span>=<span class=\"summary-sig-default\">True</span>,\n        <span class=\"summary-sig-arg\">carbonSkeleton</span>=<span class=\"summary-sig-default\">False</span>)</span><br />\n      Reduces the molecule down to just it's (carbon) skeleton.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td><span class=\"summary-sig\"><a href=\"CHEM.Common.MolExt-module.html#clearMol\" class=\"summary-sig-name\">clearMol</a>(<span class=\"summary-sig-arg\">mol</span>)</span><br />\n      Delete all of the atoms in the molecule.</td>\n          <td align=\"right\" valign=\"top\">\n            \n            \n          </td>\n        </tr>\n      </table>\n      \n    </td>\n  </tr>\n</table>\n<!-- ==================== VARIABLES ==================== -->\n<a name=\"section-Variables\"></a>\n<table class=\"summary\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Variables</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-Variables\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a href=\"CHEM.Common.MolExt-module.html#ORBITAL_TYPES\" class=\"summary-name\">ORBITAL_TYPES</a> = <code title=\"Set([&quot;sigma&quot;, &quot;pi&quot;, &quot;s&quot;, &quot;sp0&quot;, &quot;sp&quot;, &quot;sp1&quot;, &quot;sp2&quot;, &quot;sp3&quot;, &quot;p&quot;])\">Set([&quot;sigma&quot;, &quot;pi&quot;, &quot;s&quot;, &quot;sp0&quot;, &quot;sp&quot;, &quot;sp1&quot;, &quot;<code class=\"variable-ellipsis\">...</code></code>\n    </td>\n  </tr>\n<tr>\n    <td width=\"15%\" align=\"right\" valign=\"top\" class=\"summary\">\n      <span class=\"summary-type\">&nbsp;</span>\n    </td><td class=\"summary\">\n        <a name=\"BOND_ORBITAL_TYPES\"></a><span class=\"summary-name\">BOND_ORBITAL_TYPES</span> = <code title=\"Set([&quot;sigma&quot;, &quot;pi&quot;])\">Set([&quot;sigma&quot;, &quot;pi&quot;])</code>\n    </td>\n  </tr>\n</table>\n<!-- ==================== FUNCTION DETAILS ==================== -->\n<a name=\"section-FunctionDetails\"></a>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Function Details</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-FunctionDetails\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n</table>\n<a name=\"nStdValenceElectrons\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">nStdValenceElectrons</span>(<span class=\"sig-arg\">atomicNum</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Return the standard number of valence electrons for an atom type \n  specified by atomic number. Based on lookup table for now, can come up \n  with more generalized scheme later.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"atomIonizationEnergy\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">atomIonizationEnergy</span>(<span class=\"sig-arg\">atom</span>,\n        <span class=\"sig-arg\">formalCharge</span>=<span class=\"sig-default\">None</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Return a reference value for the atom's ionization energy (kcal/mol). \n  If the atom has a formal charge, should return an adjusted value to \n  estimate 2nd ionization energies, etc. If a formal charge parameter is \n  specified use that value instead of any set on the actual atom \n  object.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"atomElectronAffinity\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">atomElectronAffinity</span>(<span class=\"sig-arg\">atom</span>,\n        <span class=\"sig-arg\">formalCharge</span>=<span class=\"sig-default\">None</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Return a reference value for the atom's electron affinity (kcal/mol). \n  If the atom has a formal charge, should return an adjusted value to \n  estimate 2nd electron affinities, etc. If a formal charge parameter is \n  specified use that value instead of any set on the actual atom \n  object.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"atomElectronegativity\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">atomElectronegativity</span>(<span class=\"sig-arg\">atom</span>,\n        <span class=\"sig-arg\">formalCharge</span>=<span class=\"sig-default\">None</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Return a reference value for the electronegativity of a given atom.  \n  This uses a general Mulliken scale where EN = (IE - EA) / 2, (IE = \n  Ionization Energy, EA = Electron Affinity) which can in turn be found by \n  standard values and inferred for charged atoms.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"stableValenceShell\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">stableValenceShell</span>(<span class=\"sig-arg\">atomicNum</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  How many electrons should be in the outer shell for this atom type to \n  be stable? Most commonly should just be 8 to make the octet rule, except \n  for hydrogen. Note also that essentially any can be come stable with \n  &quot;zero&quot; outer shell electrons, since that just means the next \n  complete inner shell becomes the outer shell.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"orbitalInfo\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">orbitalInfo</span>(<span class=\"sig-arg\">atom</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Returns various statistics related to the atom's non-bonded orbitals. \n  This is a dictionary with keys:\n  <ul>\n    <li>\n      nUnbondedElectrons\n    </li>\n    <li>\n      nLonePairs\n    </li>\n    <li>\n      nRadicals\n    </li>\n    <li>\n      nEmptyOrbitals\n    </li>\n  </ul>\n  Given an atom object, figure out how many electrons are in its outer \n  valence shell that are NOT part of a bond.  Based on standard valence \n  electron number.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"atomHybridization\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">atomHybridization</span>(<span class=\"sig-arg\">atom</span>,\n        <span class=\"sig-arg\">visitedAtomIndexes</span>=<span class=\"sig-default\">None</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <p>OEChem has OEGetHybridization method, and this works similarly.</p>\n  <p>Return value is the p character of the hybridization, for example 2 \n  for sp2</p>\n  <p>Simple rule based now, that should work for atoms up to the second row\n  at least. Easy to tell if this atom has more than one pi bond.  \n  Otherwise, assume is sp3 unless have an empty orbital then assume is sp2.\n  Or, if have a lone pair in an aromatic system, must be sp2.  In cases \n  like oxygen of C=CO, is probably somewhere in between.</p>\n  Hydrogen is special case.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"orbitalIter\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">orbitalIter</span>(<span class=\"sig-arg\">atom</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Iterate over all of the apparent orbitals in the current atom. These \n  will include sigma and pi molecular orbitals or possible sp or p atomic \n  orbitals. For each, will have a bond associated with it, or a certain \n  number of lone electrons.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"resonanceStructureIter\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">resonanceStructureIter</span>(<span class=\"sig-arg\">mol</span>,\n        <span class=\"sig-arg\">observedSmilesSet</span>=<span class=\"sig-default\">None</span>,\n        <span class=\"sig-arg\">depth</span>=<span class=\"sig-default\">0</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <p>For the given molecule or intermediate, enumerate all of the \n  reasonable resonance structures by shifting electrons around available p \n  atomic orbitals and pi molecular orbitals.  For efficiency, will always \n  be the same molecule object yielded, just modified.  Caller must make \n  sure that it comes back in the same state.</p>\n  <p>Strategy: Look for any 2 adjacent atoms hybridized with p or pi \n  orbitals and rearrange electrons in a chemically natural manner.</p>\n  After any case, recursively look for more possibilities.  Use \n  observedSmilesSet to avoid recursion loops\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"uniqueAtomResonanceStructureIter\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">uniqueAtomResonanceStructureIter</span>(<span class=\"sig-arg\">mol</span>,\n        <span class=\"sig-arg\">undoLabels</span>=<span class=\"sig-default\">True</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <pre class=\"literalblock\">\nSimple wrapper around resonance structureIter method.  Before generating\nthe resonance structures however, will give a unique atom map label to\nevery atom in the molecule with the effect that symmetric resonance structures\nwill each be counted individually, instead of being skipped over as if identical.\n\nundoLabels: Specifies whether to clear out these fake labels before\n                each result is yielded\n\n</pre>\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"labelUniqueAtomMaps\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">labelUniqueAtomMaps</span>(<span class=\"sig-arg\">mol</span>,\n        <span class=\"sig-arg\">undoDict</span>=<span class=\"sig-default\">None</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <p>Helper to label the atom map attribute of all of the atoms of the \n  molecule equal to their index position in the molecule, which ensures \n  they will all receive a unique value.</p>\n  If undoDict provided, then store the original values of the atom map \n  indexes so they can later be restored by the undoLabelUniqueAtomMaps \n  function.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"undoLabelUniqueAtomMaps\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">undoLabelUniqueAtomMaps</span>(<span class=\"sig-arg\">mol</span>,\n        <span class=\"sig-arg\">undoDict</span>=<span class=\"sig-default\">None</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Undo the effects of the labelUniqueAtomMaps function.  If no specific \n  undoDict is provided, then just reset all of the atom map indexes to \n  &quot;0&quot; indicating standard values. Otherwise, use the specific \n  values stored in the undoDict.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"rearrangeOrbitalElectrons\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">rearrangeOrbitalElectrons</span>(<span class=\"sig-arg\">mol</span>,\n        <span class=\"sig-arg\">bond</span>,\n        <span class=\"sig-arg\">beginPOrbs</span>,\n        <span class=\"sig-arg\">endPOrbs</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <pre class=\"literalblock\">\nGiven just the p and pi orbitals for the given bond,\nenumerate each natural way of rearranging the electrons within them.\nDon't have to consider mirror cases, leave that as caller's responsibility\nby calling this function twice, but swapping the begin and end atoms and pOrbs.\n\nCases of interest (not counting radicals for now):\n    - Both atoms share a pi molecular orbital.  That is, the bond includes a pi bond.\n        . Separate the pi molecular orbitals into one empty orbital (+ charge) and \n            one lone pair orbital (- charge).\n            Then caller can recurse on this intermediate which should fit the above rules.\n    - One atom has lone pair, other has empty p orbital (artificial case representing charge separation modeling)\n        . Move lone pair to empty p orbital to form new pi bond here\n    - One atom has pi molecular orbital other has empty p orbital\n        . Move the pi electrons to form a new pi bond here\n    - One atom has a lone pair in p orbital, other has a pi molecular orbital\n        . Move the lone pair into a new pi bond\n        . Move the pi electrons to a lone pair over the far (3rd) atom\n\nAdditional case where atoms each have a pi molecular orbital, but not the same one,\nlike the central bond in C=C-C=C.  Do nothing here, let another case separate\nthe pi orbital of one of the adjacent double bonds, and then it will look like\na case we can work with (lone pair or empty orbital next to pi orbital).\n\nNote that this keeps yielding the same (but modified) molecule object.\nThus, in implementing, after each yield usage, the atom and bond states must \nbe returned to how they were.\n\n</pre>\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"rearrangeOrbitalElectronsAllowDoubleCharges\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">rearrangeOrbitalElectronsAllowDoubleCharges</span>(<span class=\"sig-arg\">mol</span>,\n        <span class=\"sig-arg\">bond</span>,\n        <span class=\"sig-arg\">beginPOrbs</span>,\n        <span class=\"sig-arg\">endPOrbs</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <p>The real implementation method.  Interface method is just a wrapper on\n  this one with a filter to eliminate overcharged resonance structure \n  proposals.</p>\n  Can almost just use the moveOrbitalElectrons functions from every \n  beginPOrb to every endPOrb and let that sort out the details.  This would\n  work, except that we need to undo the changes at each step to revert the \n  molecule to its original state, which is hard to do if we don't know the \n  specific steps.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"grossFormalCharges\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">grossFormalCharges</span>(<span class=\"sig-arg\">mol</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <p>Figure out the total gross positive and negative charge on the \n  molecule, which may be non-zero even if the net charge on the molecule is\n  zero.</p>\n  For example: &gt;&gt;&gt; from CHEM.Common.Util import molBySmiles; \n  &gt;&gt;&gt; print grossFormalCharges(molBySmiles( &quot;CC(=O)Cl&quot; \n  )); (0, 0) &gt;&gt;&gt; print grossFormalCharges(molBySmiles( \n  &quot;[OH3+]&quot; )); (1, 0) &gt;&gt;&gt; print \n  grossFormalCharges(molBySmiles( &quot;CC[N+](=O)[O-]&quot; )); (1, -1) \n  &gt;&gt;&gt; print grossFormalCharges(molBySmiles( \n  &quot;[N-]=[N+]=[N-]&quot; )); (1, -2)\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"screenResonanceStruct\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">screenResonanceStruct</span>(<span class=\"sig-arg\">mol</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <pre class=\"literalblock\">\nThe molecule should represent a proposed resonance structure.\nDecide whether it should be accepted as a valid / meaningful one.\n\nFor example:\n    Don't accept charge separated structures if it leaves an empty orbital \n    (incomplete octet) on the formal positive atom.\n    It's okay if the formal positive atom has a complete octet, like\n    the nitrogen on nitro and azide groups.\n    Also okay if lone positive charge, like carbocation with no anion available\n    to &quot;fill-in&quot; the empty orbital.\n\n</pre>\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"moveOrbitalElectrons\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">moveOrbitalElectrons</span>(<span class=\"sig-arg\">orb1</span>,\n        <span class=\"sig-arg\">orb2</span>,\n        <span class=\"sig-arg\">electronCount</span>=<span class=\"sig-default\">2</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <p>Most general half-reaction, movement of electrons from one molecular \n  orbital to another.  Function should figure out all of the substeps \n  necessary to properly represent the change, including consideration for \n  whether the orbitals are atomic (non-bond) or molecular (bond).</p>\n  <p>Assume this is called in a sensible manner however. Cannot use any \n  arbitary orbitals as the arguments. The source orbital (orb1) must \n  contain electrons to move, no empty orbitals allowed. The target orbital \n  (orb2) must have space for electrons to move in. In general this means it\n  is either an empty orbital or a bond orbital which can displace the \n  existing bond electrons to the neighbor atom.  No lone pairs allowed.</p>\n  Returns a 2-ple consisting of the bond just created or added to by the\n  move and a string representing the respective &quot;arrow-pushing&quot; \n  diagram.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"undoMoveOrbitalElectrons\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">undoMoveOrbitalElectrons</span>(<span class=\"sig-arg\">orb1</span>,\n        <span class=\"sig-arg\">orb2</span>,\n        <span class=\"sig-arg\">electronCount</span>=<span class=\"sig-default\">2</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Assume the moveOrbitalElectrons function was just called for orb1 and \n  orb2. Revert the molecule state to where it was before then based on the \n  info in the orbitals.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"moveAtomElectrons\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">moveAtomElectrons</span>(<span class=\"sig-arg\">atom1</span>,\n        <span class=\"sig-arg\">atom2</span>,\n        <span class=\"sig-arg\">electronCount</span>=<span class=\"sig-default\">2</span>,\n        <span class=\"sig-arg\">halfBondIndexes</span>=<span class=\"sig-default\">None</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <p>Move electrons from atom1 to atom2.  If these are bonded already, just\n  change the bond order and adjust the formal charges. If they are not \n  already bonded, then create a new bond and adjust the formal charges.</p>\n  <p>If moving single electrons (radical reactions) better provide \n  halfBonds list. Used to keep track of which bonds have only been \n  &quot;half-formed&quot; by a radical movement, and are waiting for a \n  complementary one to complete or eliminate the bond. Note that the bond \n  could be &quot;1 1/2&quot; or &quot;2 1/2.&quot;  The point is that it's \n  just not a whole number bond yet.</p>\n  Return 2-ple with reference to new bond object if it was created and \n  the arrow code string representing the electron movement.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"moveBondElectrons\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">moveBondElectrons</span>(<span class=\"sig-arg\">bond</span>,\n        <span class=\"sig-arg\">atom</span>,\n        <span class=\"sig-arg\">electronCount</span>=<span class=\"sig-default\">2</span>,\n        <span class=\"sig-arg\">pivotAtom</span>=<span class=\"sig-default\">None</span>,\n        <span class=\"sig-arg\">halfBondIndexes</span>=<span class=\"sig-default\">None</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <p>Move electrons from the bond to the target atom. If the atom is \n  already part of the bond, then just down shift the bond order (maybe \n  deleting the bond altogether) and adjust atom formal charges.</p>\n  <p>Otherwise, down shift this bond order and create a new one to the \n  atom, again adjusting atom formal charges.  Note that this only works if \n  the &quot;pivotAtom&quot; is specified.  That is, the atom which appears \n  in both the source and the target bond.  Otherwise, without the polarity \n  of the source bond specified, can't tell which end to remain connected \n  to.</p>\n  Return the arrow code string representing the electron movement.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"atomsAltered\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">atomsAltered</span>(<span class=\"sig-arg\">mol1</span>,\n        <span class=\"sig-arg\">mol2</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <p>Given 2 molecules, that should be based on a common one, determine how\n  many atoms in the molecule have been altered by electron rearrangement.  \n  One of the molecules should probably have been a copy of the other, \n  because this method depends on the mol.GetAtoms iterator returning the \n  atoms in the same order.</p>\n  If that's the case, will go through each matching pair of atoms and \n  check whether they share the same bond orders and formal charge.  If not,\n  assume the electron arrangement has changed.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"atomIsChiral\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">atomIsChiral</span>(<span class=\"sig-arg\">atom</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Extension of OpenEye OEAtomBase.IsChiral method. Manual corrections \n  for\n  <ul>\n    <li>\n      Organometallics do not have configurationally stable \n      stereochemistry\n    </li>\n  </ul>\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"bondIsChiral\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">bondIsChiral</span>(<span class=\"sig-arg\">bond</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Extension of OpenEye OEBondBase.IsChiral method. Manual corrections \n  for\n  <ul>\n    <li>\n      Vinylic carbocations should not have stereochemistry, should be \n      linear, sp hybridized\n    </li>\n  </ul>\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"createStandardMol\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">createStandardMol</span>(<span class=\"sig-arg\">mol</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <p>Reparse the molecule SMILES string to ensure any unusual properties \n  are cleared out. Happens often when doing direct molecule graph \n  manipulations or reaction processing.</p>\n  In addition, check molecule bonds and atoms and clear out any bogus \n  stereoassignments.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"enumerateRacemicMixture\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">enumerateRacemicMixture</span>(<span class=\"sig-arg\">mol</span>,\n        <span class=\"sig-arg\">unspecifiedAtoms</span>=<span class=\"sig-default\">None</span>,\n        <span class=\"sig-arg\">unspecifiedBonds</span>=<span class=\"sig-default\">None</span>,\n        <span class=\"sig-arg\">allCisTrans</span>=<span class=\"sig-default\">False</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <pre class=\"literalblock\">\nAssume the molecule object represents a racemic mixture of otherwise identical isomers.  \nGo through every unassigned stereocenter and generate all possible specific isomers\nby assiging all possible stereo configurations.\n\nallCisTrans: If true, will enumerate all cis-trans isomers for unspecified chiral bonds.\n    Otherwise, will only generate one with the bulkiest (largest by molecular weight)\n    groups trans to each other\n\n</pre>\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"enumerateRacemicMixtureList\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">enumerateRacemicMixtureList</span>(<span class=\"sig-arg\">molList</span>,\n        <span class=\"sig-arg\">currStereoList</span>=<span class=\"sig-default\">None</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  <p>Given a list of molecule objects, call enumerateRacemicMixture on each\n  to yield a list of all possible isomer combinations of the molecules.</p>\n  currStereoList is the current list of fully-stereospecified molecules.\n  One it reaches the same length of the original molList, one complete set \n  of stereoisomers has been produced and can be returned.  Use to track \n  depth in recursion\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"neighborTreeWeight\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">neighborTreeWeight</span>(<span class=\"sig-arg\">atom</span>,\n        <span class=\"sig-arg\">visitedAtomIndexes</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Determine the molecular weight of all atoms connected up to the atom, \n  that are not counted in the visitedAtomIndexes.  Ignore implicit \n  hydrogens, which should be fine for relative comparisons as long as they \n  are consistently ignored throughout the molecule.\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"molSkeleton\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">molSkeleton</span>(<span class=\"sig-arg\">mol</span>,\n        <span class=\"sig-arg\">clearChiralFlags</span>=<span class=\"sig-default\">True</span>,\n        <span class=\"sig-arg\">copyMol</span>=<span class=\"sig-default\">True</span>,\n        <span class=\"sig-arg\">carbonSkeleton</span>=<span class=\"sig-default\">False</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Reduces the molecule down to just it's (carbon) skeleton.\n  <ul>\n    <li>\n      All implicit and explicit hydrogen atoms are removed\n    </li>\n    <li>\n      All bond orders are set to 1\n    </li>\n    <li>\n      All formal charges are neutralized\n    </li>\n    <li>\n      All isotopes are reset\n    </li>\n    <li>\n      <p>All atom mapping indexes are reset</p>\n      If carbonSkeleton is True\n      <ul>\n        <li>\n          All non-carbon atoms that are not within a ring or chain are \n          removed\n        </li>\n      </ul>\n    </li>\n  </ul>\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<a name=\"clearMol\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n  <tr valign=\"top\"><td>\n  <h3 class=\"epydoc\"><span class=\"sig\"><span class=\"sig-name\">clearMol</span>(<span class=\"sig-arg\">mol</span>)</span>\n  </h3>\n  </td><td align=\"right\" valign=\"top\"\n    >&nbsp;\n    </td>\n  </table>\n  \n  Delete all of the atoms in the molecule.  Don't just use mol.Clear(), \n  if want to retain other information, such as SD tagged or other \n  name-value pair data\n  <dl class=\"fields\">\n  </dl>\n</td></tr></table>\n</div>\n<br />\n<!-- ==================== VARIABLES DETAILS ==================== -->\n<a name=\"section-VariablesDetails\"></a>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr bgcolor=\"#70b0f0\" class=\"table-header\">\n  <td colspan=\"2\" class=\"table-header\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">\n      <tr valign=\"top\">\n        <td align=\"left\"><span class=\"table-header\">Variables Details</span></td>\n        <td align=\"right\" valign=\"top\"\n         ><span class=\"options\">[<a href=\"#section-VariablesDetails\"\n         class=\"privatelink\" onclick=\"toggle_private();\"\n         >hide private</a>]</span></td>\n      </tr>\n    </table>\n  </td>\n</tr>\n</table>\n<a name=\"ORBITAL_TYPES\"></a>\n<div>\n<table class=\"details\" border=\"1\" cellpadding=\"3\"\n       cellspacing=\"0\" width=\"100%\" bgcolor=\"white\">\n<tr><td>\n  <h3 class=\"epydoc\">ORBITAL_TYPES</h3>\n  \n  <dl class=\"fields\">\n  </dl>\n  <dl class=\"fields\">\n    <dt>Value:</dt>\n      <dd><table><tr><td><pre class=\"variable\">\nSet([&quot;sigma&quot;, &quot;pi&quot;, &quot;s&quot;, &quot;sp0&quot;, &quot;sp&quot;, &quot;sp1&quot;, &quot;sp2&quot;, &quot;sp3&quot;, &quot;p&quot;])\n</pre></td></tr></table>\n</dd>\n  </dl>\n</td></tr></table>\n</div>\n<br />\n<!-- ==================== NAVIGATION BAR ==================== -->\n<table class=\"navbar\" border=\"0\" width=\"100%\" cellpadding=\"0\"\n       bgcolor=\"#a0c0ff\" cellspacing=\"0\">\n  <tr valign=\"middle\">\n  <!-- Home link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"CHEM-module.html\">Home</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Tree link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"module-tree.html\">Trees</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Index link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"identifier-index.html\">Indices</a>&nbsp;&nbsp;&nbsp;</th>\n\n  <!-- Help link -->\n      <th>&nbsp;&nbsp;&nbsp;<a\n        href=\"help.html\">Help</a>&nbsp;&nbsp;&nbsp;</th>\n\n      <th class=\"navbar\" width=\"100%\"></th>\n  </tr>\n</table>\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%%\">\n  <tr>\n    <td align=\"left\" class=\"footer\">\n    Generated by Epydoc 3.0beta1 on Thu Nov  8 17:49:22 2007\n    </td>\n    <td align=\"right\" class=\"footer\">\n      <a href=\"http://epydoc.sourceforge.net\">http://epydoc.sourceforge.net</a>\n    </td>\n  </tr>\n</table>\n\n<script type=\"text/javascript\">\n  <!--\n  // Private objects are initially displayed (because if\n  // javascript is turned off then we want them to be\n  // visible); but by default, we want to hide them.  So hide\n  // them unless we have a cookie that says to show them.\n  checkCookie()\n  // -->\n</script>\n  \n</body>\n</html>\n", "id": 40230.0}