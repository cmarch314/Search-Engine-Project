{"text": "1 package swirl workspace security 2 3 import java lang reflect InvocationHandler 4 import java lang reflect InvocationTargetException 5 import java lang reflect Proxy 6 import java util Collection 7 import java util Vector 8 9 import junit framework Test 1 import junit framework TestCase 11 import junit framework TestSuite 12 13 14 author bpillet 15 16 public class ProxyTest extends TestCase 17 18 public void testHandler throws IllegalArgumentException SecurityException InstantiationException IllegalAccessException InvocationTargetException NoSuchMethodException 19 2 Vector v new Vector 21 22 InvocationHandler handler new ReflectionInvocationHandler v 23 Class proxyClass Proxy getProxyClass 24 Collection class getClassLoader new Class Collection class 25 26 Collection c Collection proxyClass 27 getConstructor new Class InvocationHandler class 28 newInstance new Object handler 29 3 assertNotNull c 31 assertEquals c size 32 33 c add hi 34 assertTrue c contains hi 35 c remove hi 36 assertFalse c contains hi 37 38 39 public static Test suite 4 41 return new TestSuite ProxyTest class 42 43 44 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.20/xref-test/swirl/workspace/security/ProxyTest.html", "title": "proxytest xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>ProxyTest xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../../stylesheet.css\" />\n</head>\n<body>\n<pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <strong>package</strong> <a href=\"../../../swirl/workspace/security/package-summary.html\">swirl.workspace.security</a>;\n<a name=\"2\" href=\"#2\">2</a>   \n<a name=\"3\" href=\"#3\">3</a>   <strong>import</strong> java.lang.reflect.InvocationHandler;\n<a name=\"4\" href=\"#4\">4</a>   <strong>import</strong> java.lang.reflect.InvocationTargetException;\n<a name=\"5\" href=\"#5\">5</a>   <strong>import</strong> java.lang.reflect.Proxy;\n<a name=\"6\" href=\"#6\">6</a>   <strong>import</strong> java.util.Collection;\n<a name=\"7\" href=\"#7\">7</a>   <strong>import</strong> java.util.Vector;\n<a name=\"8\" href=\"#8\">8</a>   \n<a name=\"9\" href=\"#9\">9</a>   <strong>import</strong> junit.framework.Test;\n<a name=\"10\" href=\"#10\">10</a>  <strong>import</strong> junit.framework.TestCase;\n<a name=\"11\" href=\"#11\">11</a>  <strong>import</strong> junit.framework.TestSuite;\n<a name=\"12\" href=\"#12\">12</a>  \n<a name=\"13\" href=\"#13\">13</a>  <em>/**<em>*</em></em>\n<a name=\"14\" href=\"#14\">14</a>  <em> * @author bpillet</em>\n<a name=\"15\" href=\"#15\">15</a>  <em> */</em>\n<a name=\"16\" href=\"#16\">16</a>  <strong>public</strong> <strong>class</strong> <a href=\"../../../swirl/workspace/security/ProxyTest.html\">ProxyTest</a> <strong>extends</strong> TestCase\n<a name=\"17\" href=\"#17\">17</a>  {\n<a name=\"18\" href=\"#18\">18</a>  \t<strong>public</strong> <strong>void</strong> testHandler() throws IllegalArgumentException, SecurityException, InstantiationException, IllegalAccessException, InvocationTargetException, NoSuchMethodException\n<a name=\"19\" href=\"#19\">19</a>  \t{\n<a name=\"20\" href=\"#20\">20</a>  \t\tVector v = <strong>new</strong> Vector();\n<a name=\"21\" href=\"#21\">21</a>  \t\t\n<a name=\"22\" href=\"#22\">22</a>  \t\tInvocationHandler handler = <strong>new</strong> ReflectionInvocationHandler(v);\n<a name=\"23\" href=\"#23\">23</a>  \t\tClass proxyClass = Proxy.getProxyClass(\n<a name=\"24\" href=\"#24\">24</a>  \t\t         Collection.<strong>class</strong>.getClassLoader(), <strong>new</strong> Class[] { Collection.<strong>class</strong> });\n<a name=\"25\" href=\"#25\">25</a>  \t\t\n<a name=\"26\" href=\"#26\">26</a>  \t\tCollection c = (Collection) proxyClass.\n<a name=\"27\" href=\"#27\">27</a>          getConstructor(<strong>new</strong> Class[] { InvocationHandler.<strong>class</strong> }).\n<a name=\"28\" href=\"#28\">28</a>          <strong>new</strong>Instance(<strong>new</strong> Object[] { handler });\n<a name=\"29\" href=\"#29\">29</a>  \t\t\n<a name=\"30\" href=\"#30\">30</a>  \t\tassertNotNull(c);\n<a name=\"31\" href=\"#31\">31</a>  \t\tassertEquals(0, c.size());\n<a name=\"32\" href=\"#32\">32</a>  \n<a name=\"33\" href=\"#33\">33</a>  \t\tc.add(<span class=\"string\">\"hi\"</span>);\n<a name=\"34\" href=\"#34\">34</a>  \t\tassertTrue(c.contains(<span class=\"string\">\"hi\"</span>));\n<a name=\"35\" href=\"#35\">35</a>  \t\tc.remove(<span class=\"string\">\"hi\"</span>);\n<a name=\"36\" href=\"#36\">36</a>  \t\tassertFalse(c.contains(<span class=\"string\">\"hi\"</span>));\n<a name=\"37\" href=\"#37\">37</a>  \t}\n<a name=\"38\" href=\"#38\">38</a>  \t\n<a name=\"39\" href=\"#39\">39</a>      <strong>public</strong> <strong>static</strong> Test suite()\n<a name=\"40\" href=\"#40\">40</a>      {\n<a name=\"41\" href=\"#41\">41</a>          <strong>return</strong> <strong>new</strong> TestSuite(ProxyTest.<strong>class</strong>);\n<a name=\"42\" href=\"#42\">42</a>      }\n<a name=\"43\" href=\"#43\">43</a>  \n<a name=\"44\" href=\"#44\">44</a>  }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 34433.0}