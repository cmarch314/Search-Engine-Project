{"text": "Main Page Modules Data Structures File List Data Fields Globals Related Pages Graph LegendThis page explains how to interpret the graphs that are generated by doxygen Consider the following example Invisible class because of truncation class Invisible Truncated class inheritance relation is hidden class Truncated public Invisible Class not documented with doxygen comments class Undocumented Class that is inherited using public inheritance class PublicBase public Truncated A template class template class T class Templ Class that is inherited using protected inheritance class ProtectedBase Class that is inherited using private inheritance class PrivateBase Class that is used by the Inherited class class Used Super class that inherits a number of other classes class Inherited public PublicBase protected ProtectedBase private PrivateBase public Undocumented public Templ int private Used m usedClass If the MAX DOT GRAPH HEIGHT tag in the configuration file is set to 24 this will result in the following graph The boxes in the above graph have the following meaning A filled black box represents the struct or class for which the graph is generated A box with a black border denotes a documented struct or class A box with a grey border denotes an undocumented struct or class A box with a red border denotes a documented struct or class forwhich not all inheritance containment relations are shown A graph is truncated if it does not fit within the specified boundaries The arrows have the following meaning A dark blue arrow is used to visualize a public inheritance relation between two classes A dark green arrow is used for protected inheritance A dark red arrow is used for private inheritance A purple dashed arrow is used if a class is contained or used by another class The arrow is labeled with the variable s through which the pointed class or struct is accessible A yellow dashed arrow denotes a relation between a template instance and the template class it was instantiated from The arrow is labeled with the template parameters of the instance Generated on Tue Dec 6 1 6 2 5 for APBS by 1 3 5", "_id": "http://www.ics.uci.edu/~dock/manuals/apbs/html/programmer/graph_legend.html", "title": "apbs: graph legend", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=iso-8859-1\">\n<title>APBS: Graph Legend</title>\n<link href=\"apbs.css\" rel=\"stylesheet\" type=\"text/css\">\n</head><body>\n<!-- Generated by Doxygen 1.3.5 -->\n<div class=\"qindex\"><a class=\"qindex\" href=\"index.html\">Main&nbsp;Page</a> | <a class=\"qindex\" href=\"modules.html\">Modules</a> | <a class=\"qindex\" href=\"annotated.html\">Data&nbsp;Structures</a> | <a class=\"qindex\" href=\"files.html\">File&nbsp;List</a> | <a class=\"qindex\" href=\"functions.html\">Data&nbsp;Fields</a> | <a class=\"qindex\" href=\"globals.html\">Globals</a> | <a class=\"qindex\" href=\"pages.html\">Related&nbsp;Pages</a></div>\n<h1>Graph Legend</h1>This page explains how to interpret the graphs that are generated by doxygen.<p>\nConsider the following example: <div class=\"fragment\"><pre><span class=\"comment\">/*! Invisible class because of truncation */</span>\n<span class=\"keyword\">class </span>Invisible { };\n<span class=\"comment\"></span>\n<span class=\"comment\">/*! Truncated class, inheritance relation is hidden */</span>\n<span class=\"keyword\">class </span>Truncated : <span class=\"keyword\">public</span> Invisible { };\n\n<span class=\"comment\">/* Class not documented with doxygen comments */</span>\n<span class=\"keyword\">class </span>Undocumented { };\n<span class=\"comment\"></span>\n<span class=\"comment\">/*! Class that is inherited using public inheritance */</span>\n<span class=\"keyword\">class </span>PublicBase : <span class=\"keyword\">public</span> Truncated { };\n<span class=\"comment\"></span>\n<span class=\"comment\">/*! A template class */</span>\n<span class=\"keyword\">template</span>&lt;<span class=\"keyword\">class</span> T&gt; <span class=\"keyword\">class </span>Templ { };\n<span class=\"comment\"></span>\n<span class=\"comment\">/*! Class that is inherited using protected inheritance */</span>\n<span class=\"keyword\">class </span>ProtectedBase { };\n<span class=\"comment\"></span>\n<span class=\"comment\">/*! Class that is inherited using private inheritance */</span>\n<span class=\"keyword\">class </span>PrivateBase { };\n<span class=\"comment\"></span>\n<span class=\"comment\">/*! Class that is used by the Inherited class */</span>\n<span class=\"keyword\">class </span>Used { };\n<span class=\"comment\"></span>\n<span class=\"comment\">/*! Super class that inherits a number of other classes */</span>\n<span class=\"keyword\">class </span>Inherited : <span class=\"keyword\">public</span> PublicBase,\n                  <span class=\"keyword\">protected</span> ProtectedBase,\n                  <span class=\"keyword\">private</span> PrivateBase,\n                  <span class=\"keyword\">public</span> Undocumented\n                  <span class=\"keyword\">public</span> Templ&lt;int&gt;\n{\n  <span class=\"keyword\">private</span>:\n    Used *m_usedClass;\n};\n</pre></div>If the <code>MAX_DOT_GRAPH_HEIGHT</code> tag in the configuration file is set to 240 this will result in the following graph:<p>\n<center><div align=\"center\">\n<img src=\"graph_legend.png\" alt=\"graph_legend.png\">\n</div>\n</center> <p>\nThe boxes in the above graph have the following meaning: <ul>\n<li>\nA filled black box represents the struct or class for which the graph is generated. </li>\n<li>\nA box with a black border denotes a documented struct or class. </li>\n<li>\nA box with a grey border denotes an undocumented struct or class. </li>\n<li>\nA box with a red border denotes a documented struct or class forwhich not all inheritance/containment relations are shown. A graph is truncated if it does not fit within the specified boundaries. </li>\n</ul>\nThe arrows have the following meaning: <ul>\n<li>\nA dark blue arrow is used to visualize a public inheritance relation between two classes. </li>\n<li>\nA dark green arrow is used for protected inheritance. </li>\n<li>\nA dark red arrow is used for private inheritance. </li>\n<li>\nA purple dashed arrow is used if a class is contained or used by another class. The arrow is labeled with the variable(s) through which the pointed class or struct is accessible. </li>\n<li>\nA yellow dashed arrow denotes a relation between a template instance and the template class it was instantiated from. The arrow is labeled with the template parameters of the instance. </li>\n</ul>\n<hr size=\"1\"><address style=\"align: right;\"><small>Generated on Tue Dec 6 10:06:00 2005 for APBS by\n<a href=\"http://www.doxygen.org/index.html\">\n<img src=\"doxygen.png\" alt=\"doxygen\" align=\"middle\" border=0 > \n</a>1.3.5 </small></address>\n</body>\n</html>\n", "id": 42371.0}