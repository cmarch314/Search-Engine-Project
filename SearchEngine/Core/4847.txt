{"text": "R24 On Improving Connectionist Energy Minimization Gadi Pinkas Rina Dechter dechter ics uci edu Abstract Symmetric networks designed for energy minimization such as Boltzman machines and Hopfield nets are used frequently for optimization constraint satisfaction and approximation of NP hard problems Nevertheless finding a global solution i e a global minimum for the energy function is not guaranteed and even a local solution may take an exponential number of steps We propose an improvement to the standard local activation function used for such networks The improved algorithm guarantees that a global minimum is found in linear time for tree like subnetworks The algorithm is uniform and does not assume that the network is tree like It can identify tree like subnetworks even in cyclic topologies arbitrary networks and avoid local minima along these trees For acyclic networks the algorithm is guaranteed to converge to a global minimum from any initial state of the system selfstabilization and remains correct under various types of schedulers For general cyclic topologies we show how our tree like algorithm can be extended using the cycle cutset idea The general algorithm optimizes tree like subnetworks and has some performance guarantees that are related to the size of the network s cycle cutset In any case the algorithm performs no worse than the standard algorithms On the negative side we show that in the presence of cycles no uniform algorithm exists that guarantees optimality even under a sequential synchronous scheduler In addition no uniform algorithm exists to optimize even acyclic networks when the scheduler is asynchronous ps pdf ", "_id": "http://www.ics.uci.edu/~dechter/publications/r24.html", "title": "\r\n        dr. rina dechter @ uci\r\n      ", "html": "<html>\r\n    <head>\r\n      <title>\r\n        Dr. Rina Dechter @ UCI\r\n      </title>\r\n      <LINK REL=\"Stylesheet\" HREF=\"/~dechter/basic.css\">\t\t\r\n    </HEAD>\r\n  \r\n  <BODY bgcolor=\"#ffffff\" alink=\"00aaaa\" link=\"008080\" vlink=\"008080\">\r\n  \r\n<!-- Begin Header -->\r\n\r\n  <!--#include virtual=\"/~dechter/header.html\" -->\r\n\r\n  <!-- End Header -->\r\n  \r\n  <!-- Begin Body -->\r\n  \r\n  <!--#include file=\"pubs-nav.html\"--> \r\n\r\n<center>\r\n<table width=\"80%\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\r\n<tr valign=top>\r\n<td><b>R24</td>\r\n | \r\n<br></td>\r\n</tr>\r\n\r\n<tr>\r\n<td colspan=2><div class=title>On Improving Connectionist Energy Minimization</div>\r\n<tt>\r\nGadi Pinkas &\r\nRina Dechter (<A href=\"mailto:dechter@ics.uci.edu\">dechter@ics.uci.edu</A>)\r\n</tt></td></tr>\r\n</table>\r\n\r\n<table width=\"80%\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\r\n<tr><td>\r\n<br><div class=abstract>\r\n<b>Abstract</b><BR>\r\nSymmetric networks designed for energy minimization such as Boltzman \r\nmachines and Hopfield nets are used frequently for optimization,\r\nconstraint satisfaction and approximation of NP-hard problems. Nevertheless, \r\nfinding a global solution (i.e., a global minimum for the energy function) \r\nis not guaranteed and even a local solution may take an exponential number \r\nof steps. We propose an improvement to the standard \r\nlocal activation function used for such networks. The improved\r\nalgorithm guarantees that a global minimum is found in linear time\r\nfor tree-like subnetworks. The algorithm is uniform and does not assume \r\nthat the network is tree-like. It can identify tree-like subnetworks\r\neven in cyclic topologies (arbitrary networks) and avoid local minima\r\nalong these trees. For acyclic networks, the algorithm is guaranteed to\r\nconverge to a global minimum from any initial state of the system \r\n(selfstabilization) and remains correct under various types of schedulers.\r\nFor general (cyclic) topologies, we show how our tree-like algorithm can\r\nbe extended using the cycle-cutset idea. The general algorithm optimizes \r\ntree-like subnetworks and has some performance guarantees that\r\nare related to the size of the network's cycle-cutset. In any case, the\r\nalgorithm performs no worse than the standard algorithms. On the negative \r\nside, we show that in the presence of cycles, no uniform algorithm\r\nexists that guarantees optimality even under a sequential synchronous\r\nscheduler. In addition, no uniform algorithm exists to optimize even\r\nacyclic networks when the scheduler is asynchronous.\r\n</div><br>\r\n\r\n<A href=\"r24.ps\">\r\n<img align=left border=\"0\" src=\"/~dechter/images/down.gif\">&nbsp;&nbsp;<b>[ps] </b></a>\r\n<A target=blank href=\"r24.pdf\">\r\n<b>[pdf]</b></a>\r\n</td></tr></table></center><br>\r\n\r\n<!-- End Body-->\r\n\r\n<!--- Begin Footer -->\r\n     <!--#include virtual=\"/~dechter/footer.html\" -->\r\n<!--- End Footer -->\r\n\r\n</body>\r\n<html>\r\n", "id": 4847.0}