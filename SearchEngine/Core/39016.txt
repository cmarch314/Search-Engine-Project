{"text": "Navigation Up Table of Contents Bibliography Index Title Page CGAL Lazy exact nt NT DefinitionAn object of the class Lazy exact nt NT is able to represent any number which NT is able to represent The arithmetic operations it can do are those NT can do limited to the 4 basic operations the square root and the comparisons The idea is that Lazy exact nt NT works exactly like NT except that it is faster because it tries to only compute an approximation of the value and only refers to NT when needed The goal is to speed up exact computations done by any exact but slow number type NT In addition to the filtering at each arithmetic operation the predicates are overloaded in the same way as for Filtered exact so you get the additional speed up without requiring to encapsulate Lazy exact nt NT into Filtered exact include CGAL Lazy exact nt h Is Model for the ConceptFieldNumberType Creation Lazy exact nt NT m introduces an uninitialized variable m Lazy exact nt NT m int i introduces the integral value i Lazy exact nt NT m double d introduces the floating point value d works only if NT has a constructor from a double too Lazy exact nt NT m NT n introduces the value n template class NT1 Lazy exact nt NT m Lazy exact nt NT1 n introduces the value n NT1 needs to be convertible to NT and this conversion will only be done if necessary Operations NT m exact returns the corresponding NT value Interval nt true m approx returns an interval containing the exact value Interval nt false m interval returns an interval containing the exact value static void m set relative precision of to double double d specifies the relative precision that to double has to fulfill The default value is 1 5 Precondition d and d 1 static double m get relative precision of to double returns the relative precision that to double currently fulfills std ostream std ostream out m writes m to ostream out in an interval format std istream std istream in m reads a NT from in then converts it to a Lazy exact nt NT Example include CGAL Cartesian h include CGAL MP Float h include CGAL Lazy exact nt h include CGAL Quotient h typedef CGAL Lazy exact nt CGAL Quotient CGAL MP Float NT typedef CGAL Cartesian NT K Next leda bigfloat Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/NumberTypeSupport_ref/Class_Lazy_exact_nt.html", "title": "lazy_exact_nt&lt;nt&gt;", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './NumberTypeSupport_ref/Lazy_exact_nt.tex' -->\n<html> <head>  \n<title>Lazy_exact_nt&lt;NT&gt;</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_1385\"></A>\n\n<A NAME=\"Cross_link_anchor_1386\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_1396\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Class.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_CGAL::Lazy_exact_nt<NT>\"></A>\n<h2><I>CGAL::Lazy_exact_nt&lt;NT&gt;</I></h2>\n\n\n<A NAME=\"lazy_exact_nt\"></A>\n<P>\n\n<H3>Definition</H3>An object of the class <I><A HREF=\"Class_Lazy_exact_nt.html#Cross_link_anchor_1386\">Lazy_exact_nt</A>&lt;NT&gt;</I> is able to represent any number\nwhich <I>NT</I> is able to represent.  The arithmetic operations it can do are\nthose <I>NT</I> can do, limited to the 4 basic operations, the <A HREF=\"Function_square.html#Cross_link_anchor_1418\">square</A> root and\nthe comparisons.\nThe idea is that <I><A HREF=\"Class_Lazy_exact_nt.html#Cross_link_anchor_1386\">Lazy_exact_nt</A>&lt;NT&gt;</I> works exactly like <I>NT</I>, except\nthat it is faster because it tries to only compute an approximation of the\nvalue, and only refers to <I>NT</I> when needed.  The goal is to speed up exact\ncomputations done by any exact but slow number type <I>NT</I>.\n<P>\n\nIn addition to the filtering at each arithmetic operation, the predicates\nare overloaded in the same way as for <I><A HREF=\"Class_Filtered_exact.html#Cross_link_anchor_1352\">Filtered_exact</A></I>, so you get the\nadditional speed up without requiring to encapsulate <I><A HREF=\"Class_Lazy_exact_nt.html#Cross_link_anchor_1386\">Lazy_exact_nt</A>&lt;NT&gt;</I>\ninto <I><A HREF=\"Class_Filtered_exact.html#Cross_link_anchor_1352\">Filtered_exact</A></I>.\n<P>\n\n<I>#include &lt;<A HREF=\"../../../include/CGAL/Lazy_exact_nt.h\">CGAL/Lazy_exact_nt.h</A>&gt;</I>\n<P>\n\n<H3>Is Model for the Concept</H3><A HREF=\"../Kernel_23_ref/Concept_FieldNumberType.html#Cross_link_anchor_2\">FieldNumberType</A>\n<P>\n\n<H3>Creation</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Lazy_exact_nt.html#Cross_link_anchor_1386\">Lazy_exact_nt</A>&lt;NT&gt; m;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    introduces an uninitialized variable <I>m</I>.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Lazy_exact_nt.html#Cross_link_anchor_1386\">Lazy_exact_nt</A>&lt;NT&gt; m ( int i);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    introduces the integral value <I>i</I>.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Lazy_exact_nt.html#Cross_link_anchor_1386\">Lazy_exact_nt</A>&lt;NT&gt; m ( double d);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    introduces the floating point value <I>d</I> (works only if <I>NT</I> has a\nconstructor from a double too).\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Lazy_exact_nt.html#Cross_link_anchor_1386\">Lazy_exact_nt</A>&lt;NT&gt; m ( NT n);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    introduces the value <I>n</I>.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    template &lt;class NT1&gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Lazy_exact_nt.html#Cross_link_anchor_1386\">Lazy_exact_nt</A>&lt;NT&gt; m ( <A HREF=\"Class_Lazy_exact_nt.html#Cross_link_anchor_1386\">Lazy_exact_nt</A>&lt;NT1&gt; n);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    introduces the value <I>n</I>. <I>NT1</I> needs to be convertible to <I>NT</I>\n(and this conversion will only be done if necessary).\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Operations</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_NT_exact69;\"></A>\nNT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    m.exact ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the corresponding NT value.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Interval_nt6true9_approx69;\"></A>\n<A HREF=\"Class_Interval_nt.html#Cross_link_anchor_1366\">Interval_nt</A>&lt;true&gt;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    m.approx ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns an interval containing the\nexact value.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Interval_nt6false9_interval69;\"></A>\n<A HREF=\"Class_Interval_nt.html#Cross_link_anchor_1366\">Interval_nt</A>&lt;false&gt;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    m.interval ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns an interval containing the \nexact value.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_static_void_set_relative_precision_of_to_double6double_d9;\"></A>\nstatic void\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    m.set_relative_precision_of_to_double ( double d)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    specifies the relative precision that <I>to_double()</I> has to fulfill.\nThe default value is <MATH><I>10<SUP>-5</SUP></I></MATH>.<BR>\n\n<EM>Precondition: </EM>d&gt;0 and d&lt;1.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_static_double_get_relative_precision_of_to_double69;\"></A>\nstatic double\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    m.get_relative_precision_of_to_double ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the relative precision that <I>to_double()</I> currently fulfills.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    std::ostream&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n     std::ostream&amp; out &lt;&lt;  m<A NAME=\"Function_std::ostream__operator666std::ostream__out+_const_Lazy_exact_nt6NT9__m9;\"></A>\n\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    writes <I>m</I> to ostream <I>out</I> in an interval format.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    std::istream&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n     std::istream&amp; in &gt;&gt;  &amp; m<A NAME=\"Function_std::istream__operator996std::istream__in+_Lazy_exact_nt6NT9__m9;\"></A>\n\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    reads a <I>NT</I> from <I>in</I>, then converts it to a <I><A HREF=\"Class_Lazy_exact_nt.html#Cross_link_anchor_1386\">Lazy_exact_nt</A>&lt;NT&gt;</I>.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Example</H3>\n<P>\n\n<pre class=\"Verbatim\">\n#include &lt;CGAL/<A HREF=\"../Kernel_23_ref/Class_Cartesian.html#Cross_link_anchor_6\">Cartesian</A>.h&gt;\n#include &lt;CGAL/<A HREF=\"Class_MP_Float.html#Cross_link_anchor_1400\">MP_Float</A>.h&gt;\n#include &lt;CGAL/<A HREF=\"Class_Lazy_exact_nt.html#Cross_link_anchor_1386\">Lazy_exact_nt</A>.h&gt;\n#include &lt;CGAL/<A HREF=\"Class_Quotient.html#Cross_link_anchor_1404\">Quotient</A>.h&gt;\n\ntypedef <A HREF=\"Class_Lazy_exact_nt.html#Cross_link_anchor_1385\">CGAL::Lazy_exact_nt</A>&lt;<A HREF=\"Class_Quotient.html#Cross_link_anchor_1403\">CGAL::Quotient</A>&lt;<A HREF=\"Class_MP_Float.html#Cross_link_anchor_1399\">CGAL::MP_Float</A>&gt; &gt; NT;\ntypedef <A HREF=\"../Kernel_23_ref/Class_Cartesian.html#Cross_link_anchor_5\">CGAL::Cartesian</A>&lt;NT&gt; K;\n</pre>\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Class_leda_bigfloat.html\"><I>leda_bigfloat</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_2!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 39016.0}