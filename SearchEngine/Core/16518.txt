{"text": "ICS 32 Winter 2 15 News Course Reference Schedule Project Guide Code Examples About Alex ICS 32 Winter 2 15 Project 3 Ride Across the River Due date and time Wednesday February 18 11 59pm This project is to be done individually Background We saw in the previous project that our Python programs are capable of connecting to the outside world around them to other programs running on the same machine or even to other programs running on different machines in faraway places This is a powerful thing for a program to be able to do because it is no longer limited to taking its input from a user or from a file stored locally its input is now potentially anything that s accessible via the Internet making it possible to solve a vast array of new problems and process a much broader collection of information Once you have the ability to connect your programs to others a whole new world opens up suddenly the idea that you should be able to write a program that combines say Google search queries the Internet Movie Database and your favorite social network to find people who like movies similar to the ones you like doesn t seem so far fetched But we also saw that getting programs to share information is tricky for at least two reasons Firstly there s a software engineering problem a protocol has to be designed that both programs can use to have their conversation Secondly there s a social problem if the same person or group of people isn t writing both programs it s necessary for them to agree on the protocol ahead of time then to implement it This second problem has a potentially catastrophic effect on our ability to make things work how could you ever convince Google to agree to use your protocol just to communicate with you In practice both of these problems are largely solved by the presence of standards such as those defined by the World Wide Web Consortium Standards help by providing detailed communication protocols whose details have already been hammered out with the intention of handling the most common set of needs that will arise in programs This eliminates the need to design one s own protocol where the standard protocols will suffice which is more often than you might think and allows programs to be combined in arbitrary ways as long as they support the protocol they ve taken a big step toward being able to interoperate with each other What s more standard protocols often have standard implementations so that you won t have to code up the details yourself as you did in the previous project For example Python has built in support for a number of standard Internet protocols including HTTP HyperText Transfer Protocol the protocol that your browser uses to download web pages among others At first blush HTTP doesn t seem all that important it appears to be a protocol that will allow you to write programs that download web pages i e that allow you to write programs that play the same role that web browsers do But it turns out that HTTP is a lot more important than that since it is the protocol that underlies a much wider variety of traffic on the Internet than you might first imagine This is not limited only to the conversation that your browser has with a web server in order to download a web page though that conversation most often uses HTTP or its more secure variant HTTPS HTTP also underlies a growing variety of program to program communications using web protocols where web sites or other software systems communicate directly with what are broadly called web services fetching data and affecting change This is precisely why you can post tweets to Twitter using either their web site a client application on your laptop or a smartphone app all of these applications use the same protocol to communicate with the Twitter service differing only in the form of user interface they provide Fortunately since HTTP support is built directly into Python we can write programs that use these web services without having to handle low level details of the protocol though there are some details that you ll need to be familiar with if you want to use the provided implementation effectively We ll be discussing some of these details in lecture soon and these will be accompanied by a code example which will give you some background in the tools you ll need to solve these kinds of problems in Python This project gives you the opportunity to explore a small part of the vast sea of possibilities presented by web APIs and web services You ll likely find that you spend a lot of your time in this project understanding the web API you ll need being able to navigate technical documentation and gradually build an understanding of another system is a vital skill in building real software and that the amount of code you need isn t nearly what you might expect when you first read the project write up As always work incrementally rather than trying to work on the entire project all at once When you re done you ll have taken a valuable step toward being able to build Python programs that interact with web services which opens up your ability to write programs for yourself that are real and useful Additionally you ll get what might be your first experience with writing classes in Python which will broaden your ability to write clean expressive Python programs Reminder Do not select a partner Unlike the previous projects which required that you use the pair programming technique this project requires that you work individually So you will not be selecting a partner and you will not be doing pair programming this time each student is responsible for his or her own submission for this project While we do believe that pair programming offers a lot of benefits you ll also need to build your skills at working on your own as future coursework and possibly future employment will depend on them The problem in general In your work on this project you ll write a program that is capable of displaying information about a trip from one location to another e g driving directions between two street addresses For example you might display turn by turn directions an estimate of how long it might take to get from one location to another and so on You ll use real world map data real cities real streets to solve your problem So when you re done your program will be a very simple navigation system not entirely unlike the ones you see on some smartphones or in some cars If you want to know how to drive from Bren Hall at UCI to Staples Center in Los Angeles your program will be able to tell you That may sound like something that is well beyond your current skill level and or time you have available that you re being asked to build a complete professional system that would ordinarily be written by a large team of people over a period of months And indeed if you had to write the entire system from scratch that would certainly be true it would take even a seasoned professional a lot longer than the time allotted to complete a task like that and would require skills well beyond what s been taught in your coursework to date But there is good news here we operate in an interconnected world where information of all kinds is available to us in web browsers smartphone applications and so on And we re fortunate that a lot of that information is available for free not just in a way that lets us view it in a web browser but in a way that makes it available to the programs we write Provided that we can find an online service that provides the information we need and provided that we are licensed to use it either because it s free and we meet the terms of use or because we re willing to pay for the privilege we can use it to solve our problem As it turns out the information we need to solve this particular problem is available online in a form that can be consumed by a Python program and licensed in a way that lets us use it because it is free for non commercial use The only trick is figuring out how to get the information into our program Luckily for us the service that provides this information uses standard protocols and formats that are common on the Internet even better all of these protocols and formats are implemented already in Python s standard library so the low level details will not be our concern The MapQuest Open Directions API MapQuest is a company that is in the business of providing online services for displaying maps providing directions reporting on current traffic conditions and other related services While they re a for profit company some of their services are provided free of charge for non commercial use As long as you re not building a product from which you ll be trying to make money you can use MapQuest s free services with the one additional caveat that you have to follow the rules laid out in their license These kinds of license restrictions are no joke so we ll spend a little time to be sure we re taking them seriously For our work on this project you ll be concerned with the MapQuest Open Directions API which is a web based API similar to the one we used in the code example in which we downloaded and displayed information about YouTube videos Like YouTube s API the MapQuest Open Directions API uses HTTP with queries described using a URL and with responses returned in JSON format Fortunately all of these technologies are supported in Python s standard library so most of the details are things that will be handled for us automatically but as we saw in the YouTube example there are some things we need to get right and not all of the details wil be the same in the MapQuest example as they were in the YouTube example so it ll be vital for you to understand why we did the things we did in the code example so you can know whether and where the same techniques apply The MapQuest Open Directions API is described in detail at the link below You certainly won t need to read all of the documentation but you ll want to take a look around and familiarize yourself with what the API can do because part of your goal in this project is to decide what parts of the API you ll need to solve your problem MapQuest Open Directions API documentation Creating an account and getting an AppKey Like YouTube s API that we saw in class MapQuest s API requires an AppKey which links your usage of the API to an account and authorizes you to use the API Before you can make use of the API you ll need to obtain your own AppKey and due to usage restrictions we won t all be able to share the same key so each of you will need to take this step Do not share your AppKey with other students You ll only need to do this once and you ll be able to use your AppKey for all of your work on this project once it s been created Open the MapQuest Open Directions API documentation Near the top of the page you ll see a green button that says Get MapQuest AppKey Click that button A dialog titled Create Account should pop up Fill in your name email address and choose a password for your account then fill in the Text in Image box and click the Create Account button Skip the Would you like to create an AppKey part we ll do that later Having created an account they will likely send you an email for verification purposes so you ll have to have used a valid email address in the previous step you ll be able to log in by clicking the Sign In link near the top of any MapQuest page Once signed in open the MapQuest Open Directions API documentation again You should now see a green button that says Manage AppKeys Click that button Now click the Create AppKey button A dialog titled Create Application Key should pop up Under App Name use a short name with no spaces or special characters in it if you re not sure what to put here say ics32 Click the checkbox saying that you agree to the terms of use then click Create After you ve completed this process your MapQuest AppKey will have been created but my experience is that they aren t kidding when they say it ll take about an hour for the AppKey to become active But an hour or so later you ll be able to use your AppKey to make requests to MapQuest s API Testing your AppKey Wait at least an hour after creating your AppKey then it s time to test that it s working Open your favorite web browser enter a URL in the following format into the browser s address bar and press Enter replacing APPKEY with the AppKey you created in the previous step http open mapquestapi com directions v2 route key APPKEY from Irvine CA to Los Angeles CA If successful you should receive a result that looks roughly like this though you ll get a lot more output than this route hasTollRoad false computedWaypoints fuelUsed 1 93 hasUnpaved false hasHighway true realTime 1 boundingBox ul lng 118 244476 lat 34 57 94 lr lng 117 794593 lat 33 6847 distance 4 675 time 2518 locationSequence 1 hasSeasonalClosure false sessionId 545ca8d 3c3 1e 2b7 7cb8 163edfa317 locations latLng lng 117 825982 lat 33 685697 adminArea4 Orange County adminArea5Type City adminArea4Type County adminArea5 Irvine street adminArea1 US adminArea3 CA type s displayLatLng lng 117 825981 lat 33 685695 linkId 44589954 postalCode sideOfStreet N dragPoint false adminArea1Type Country geocodeQuality CITY geocodeQualityCode A5XCX adminArea3Type State You may recognize that this format is JSON JavaScript Object Notation which is a common format of information returned from web APIs like this one Unfortunately it s not presented in a way that s particularly readable for us though in general that s not a problem for our program because our program doesn t have the same aesthetic needs that we do To take your first look at what s being returned you might find it useful to copy all of the text returned to you then visit jsonprettyprint com and paste the text and ask for it to be pretty printed You ll now see the same text but spaced in a way that will make its structure more obvious to a human reader Once it s pretty printed take a look through MapQuest s response don t worry if you don t understand every detail but start to get a rough sense of what kind of information is available and how it s organized When you want to know the details the MapQuest Open Directions API documentation will explain everything you need But allow yourself to build an understanding gradually this is not something you ll necessarily be able to figure out right away but a lot of the information won t turn out to be relevant in this project anyway One characteristic that distinguishes real world work from the often sanitized kinds of projects you do in courses like this is the need to find small nuggets of information you need amongst large amounts of documentation I want you to start building those skills and alleviate your fears about this kind of thing now so you can start working on your own programs that are more real and thus more exciting Respecting MapQuest s license Being the owner of the service MapQuest has a license that describes the conditions under which you re permitted to use it For the curious the license a Terms of Use document for MapQuest s open platform the parts it doesn t sell is available at the link below If you ve never looked at the license for a software product take a minute or two to see what one looks like when you build software that depends on other software what you can and can t do with the other software will generally be described in a license like this one MapQuest Terms of Use Don t feel like you need to read the whole thing in detail but at least spend a little time getting familiar with what a license like this looks like if you want to work in technology it won t be the last one of these you ll see I m certainly not a lawyer but I do know how to skim through a license to see whether there are obvious red flags that suggest that I won t be able to use a product in the way I plan to And for the parts I m less sure about I can seek legal counsel and sometimes my employers will require and provide legal oversight but it helps if I understand the basics of the license first In general what we care about in MapQuest s license are a few things You can t disrupt their services intentionally flooding it with requests for example You can t use their services in a commercial application Since you won t be selling your project this is no problem You can t make more than 5 requests to MapQuest s API using your AppKey on any single day This is not likely to impact your work but it is worth being aware of this restriction Note that this is one of the reasons why sharing your AppKey with other students can be problematic If multiple students use the same AppKey there exists the very real possibility that this limit will be reached while you work or while we grade the projects even though 5 requests per day is plenty for one person As stated elsewhere in their documentation we ll be required to print a brief copyright notice in the output of our program attributing MapQuest as the source of our data The program in detail Your program will describe a trip taken between a sequence of locations the goal being to travel from the first location to the second then from the second location to the third and so on until reaching the last location Based on the user s input it will show different information about the trip such as turn by turn directions distances and times etc The input Your program will take input in the following format It should not prompt the user in any way it should simply read whatever input is typed into the console and you should assume that your user knows the precise input format An integer whose value is at least 2 alone on a line that specifies how many locations the trip will consist of If there are n locations the next n lines of input will each describe one location Each location can be a city such as Irvine CA an address such as 4545 Campus Dr Irvine CA or anything that the MapQuest API will accept as a location The details of what is acceptable as a location is described here A positive integer i e whose value is at least 1 alone on a line that specifies how many outputs will need to be generated If there are m outputs the next m lines of input will each describe one output Each output can be one of the following STEPS for step by step directions meaning a brief description of each manuever e g a turn entering or exiting a freeway etc you would have to make to drive from one location to anotherTOTALDISTANCE for the total distance traveled if completing the entire tripTOTALTIME for the total estimated time to complete the entire tripLATLONG for the latitude and longitude of each of the locations specified in the input You can feel free to assume that the input will match the format described above we will not be testing cases where it doesn t so you can do anything you d like up to and including crashing in such cases The output After reading the input and processing it downloading information from the MapQuest API etc your program will generate the specified outputs in the forms described below Each output should be preceded by a blank line to set each one off from the others The STEPS output should begin with the word DIRECTIONS alone on a line followed by one line of output for each manuever that needs to be made along the path from the first location to the last The TOTALDISTANCE output should be the words Total Distance followed by a colon and a space followed by the total distance in an integer number of miles rounded to the nearest mile for the entire trip The TOTALTIME output should be the words Total Time followed by a colon and a space followed by the total time in an integer number of minutes rounded to the nearest minute that would be required to take the entire trip The LATLONG output should be a latitude and longitude one of each per line for each of the locations specified in the input in the order specified in the input The latitude should come first followed by a space followed by the longitude The latitude s format is a number of degrees formatted to two decimal places followed by either N for north or S for south The longitude s format is a number of degrees formatted to two decimal places followed by either W for west or E for east After the last output print the following copyright statement alone on a line Directions Courtesy of MapQuest Map Data Copyright OpenStreetMap Contributors An example of the program s execution The following is an example of the program s execution as it should be Boldfaced italicized text indicates input while normal text indicates output Note that the map data the manuevers latitudes and longitudes etc are hypothetical I haven t taken them directly from MapQuest since the goal of this example is to demonstrate the format 3 4533 Campus Dr Irvine CA 1111 Figueroa St Los Angeles CA 3799 S Las Vegas Blvd Las Vegas NV 4 STEPS TOTALDISTANCE TOTALTIME LATLONG DIRECTIONS West on Campus Dr Right on Bristol CA 73 North Transition to I 4 5 North Transition to I 11 North Exit 9th Street South on S Figueroa St Left on W 18th St Enter I 1 East from W 18th St Transition to I 15 North Exit S Las Vegas Blvd Total Distance 365 miles Total Time 317 minutes 33 68N 117 77W 34 2N 118 41W 36 11N 115 17W Directions Courtesy of MapQuest Map Data Copyright OpenStreetMap Contributors An example implementation If you d like to experiment with a previously implemented example of this program which demonstrates the output you should generate based on the input your program receives a version is available at the link below which you can run directly within your browser MapQuest API Example Note that you ll need your MapQuest AppKey before you can experiment with the example implementation so if you haven t created that yet do that before proceeding Design requirements and advice As with the previous project you ll be required to write your program using multiple Python modules i e multiple py files each encapsulating a different major part of the program The following modules would be a good way to break this problem down into component parts A module that interacts with the MapQuest Open Directions API This is where you should do things like building a URL making the HTTP request and parsing the JSON response A module that implements the various outputs Each kind of output that can be generated by the program must be implemented as a separate class see below A module that reads the input and constructs the objects that will generate the program s output This is the only module that should have an if name main block to make it executable you would execute this module to run your program Output generators as classes Each of the different kinds of outputs that your program can generate is required to be implemented as a Python class which contains attributes that configure it and a generate method that generates the output given the response from the MapQuest API All of these classes must have a generate method with the same signature i e the same name the same parameteers and the same type of return value so that your main module can create a list of output generators of various types then generate all of its output by simply looping through them and asking each to generate its output This is one key benefit in using classes in Python we can treat different kinds of objects with similar capabilities the same way which avoids us having to use if statements to differentiate We ll see an example of this technique which is sometimes called duck typing in lecture Where should I start There are lots of ways to start this project but your goal as always is to find stable ground as early and often as possible One problem you know you ll need to solve is reading the input I d consider starting with that even if all you do is read the input and print something back to the console that demonstrates that you read it correctly You can test this from the Python interpreter before proceeding and then you re on stable ground After that choose another slice of functionality something small that you understand and work on that For example you might write a function that builds the URLs that you ll use to call into the MapQuest API Call that function from the Python interpreter then take its output and try to use a web browser to open the URL if you get back a JSON response that tells you that you re on the right track and you re on stable ground again Continue in this fashion choosing some small problem to work on Don t worry if you sometimes go down a dark path that turns out to be a dead end you won t always make the right decision every time But you ll gradually build confidence and you ll gradually build your understanding of the problem you re working on Maintaining forward momentum is the key to avoiding the feeling of being overwhelmed by a problem that seems larger than you re used to If you work incrementally and gradually you ll find yourself completing this project and will hopefully be excited by the outcome Even if maps and directions aren t things that interest you there s a good chance you can find a web API that serves up information that you are excited about and that you might be able to write an interesting program around A word about the use of outside resources Because the MapQuest Open Directions API is a fairly well known online service it is entirely possible that you would find Python modules online that have already been written and that know how to communicate with it However you are not permitted to download these and submit them as your own in whole or in part and you are not permitted to use them as any kind of basis for your own work While you can use the Python standard library you otherwise are expected to write this program entirely on your own Deliverables Put your name and student ID in a comment at the top of each of your py files then submit all of the files to Checkmate Take a moment to be sure that you ve submitted all of your files Follow this link for a discussion of how to submit your project via Checkmate Be aware that I ll be holding you to all of the rules specified in that document including the one that says that you re responsible for submitting the version of the project that you want graded We won t regrade a project simply because you submitted the wrong version accidentally Can I submit after the deadline Yes it is possible subject to the late work policy for this course which is described in the section titled Late work at this link Multiple tweaks and clarifications along with an example web based implementation added by Alex Thornton Winter 2 15 Originally written by Alex Thornton Fall 2 14 ", "_id": "http://www.ics.uci.edu/~thornton/ics32/ProjectGuide/Project3/", "title": "ics 32 winter 2015, project #3: ride across the river", "html": "<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\r\n<!DOCTYPE html PUBLIC\r\n \"-//W3C//DTD XHTML 1.1//EN\"\r\n \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">\r\n\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\">\r\n\r\n<head>\r\n<meta http-equiv=\"content-type\" content=\"text/html; charset=iso-8859-1\" />\r\n<link rel=\"stylesheet\" href=\"../../course.css\" type=\"text/css\" />\r\n\r\n<title>ICS 32 Winter 2015, Project #3: Ride Across the River</title>\r\n</head>\r\n\r\n<body>\r\n\r\n<div class=\"navbar\">\r\n\r\n<p>\r\nICS 32 Winter 2015 |\r\n<a href=\"../../index.html\">News</a> |\r\n<a href=\"../../CourseReference.html\">Course Reference</a> |\r\n<a href=\"../../Schedule.html\">Schedule</a> |\r\n<a href=\"../../ProjectGuide\">Project Guide</a> |\r\n<a href=\"../../CodeExamples\">Code Examples</a> |\r\n<a href=\"http://www.ics.uci.edu/~thornton/\">About Alex</a>\r\n</p>\r\n\r\n<hr />\r\n\r\n</div>\r\n\r\n<div class=\"header\">\r\n\r\n<p>ICS 32 Winter 2015<br />\r\n   Project #3: <i>Ride Across the River</i></p>\r\n\r\n</div>\r\n\r\n<div class=\"section\">\r\n\r\n<p class=\"center\"><b>Due date and time:</b> <i>Wednesday, February 18, 11:59pm</i></p>\r\n\r\n<p class=\"center\"><i>This project is to be done individually</i></p>\r\n\r\n</div>\r\n\r\n<div class=\"section\">\r\n\r\n<hr />\r\n\r\n<p class=\"title\">Background</p>\r\n\r\n<p>We saw in the previous project that our Python programs are capable of connecting to the \"outside world\" around them &mdash; to other programs running on the same machine, or even to other programs running on different machines in faraway places.  This is a powerful thing for a program to be able to do, because it is no longer limited to taking its input from a user or from a file stored locally; its input is now potentially anything that's accessible via the Internet, making it possible to solve a vast array of new problems and process a much broader collection of information.  Once you have the ability to connect your programs to others, a whole new world opens up: suddenly, the idea that you should be able to write a program that combines, say, Google search queries, the Internet Movie Database, and your favorite social network to find people who like movies similar to the ones you like doesn't seem so far-fetched.</p>\r\n\r\n<p>But we also saw that getting programs to share information is tricky, for (at least) two reasons.  Firstly, there's a software engineering problem: a protocol has to be designed that both programs can use to have their conversation.  Secondly, there's a social problem: if the same person (or group of people) isn't writing both programs, it's necessary for them to agree on the protocol ahead of time, then to implement it.  This second problem has a potentially catastrophic effect on our ability to make things work &mdash; how could you ever convince Google to agree to use your protocol just to communicate with you?</p>\r\n\r\n<p>In practice, both of these problems are largely solved by the presence of <i>standards</i>, such as those defined by the <a href=\"http://www.w3.org/\">World Wide Web Consortium</a>.  Standards help by providing detailed communication protocols whose details have already been hammered out, with the intention of handling the most common set of needs that will arise in programs.  This eliminates the need to design one's own protocol (where the standard protocols will suffice, which is more often than you might think) and allows programs to be combined in arbitrary ways; as long as they support the protocol, they've taken a big step toward being able to interoperate with each other.  What's more, standard protocols often have standard implementations, so that you won't have to code up the details yourself as you did in the previous project.  For example, Python has built-in support for a number of standard Internet protocols, including HTTP (HyperText Transfer Protocol, the protocol that your browser uses to download web pages) among others.</p>\r\n\r\n<p>At first blush, HTTP doesn't seem all that important: it appears to be a protocol that will allow you to write programs that download web pages (i.e., that allow you to write programs that play the same role that web browsers do).  But it turns out that HTTP is a lot more important than that, since it is the protocol that underlies a much wider variety of traffic on the Internet than you might first imagine.  This is not limited only to the conversation that your browser has with a web server in order to download a web page, though that conversation most often uses HTTP (or its more secure variant, HTTPS).  HTTP also underlies a growing variety of program-to-program communications using web protocols, where web sites or other software systems communicate directly with what are broadly called <i>web services</i>, fetching data and affecting change.  This is precisely why you can post tweets to Twitter using either their web site, a client application on your laptop, or a smartphone app; all of these applications use the same protocol to communicate with the Twitter service, differing only in the form of user interface they provide.</p>\r\n\r\n<p>Fortunately, since HTTP support is built directly into Python, we can write \r\nprograms that use these web services without having to handle low-level details \r\nof the protocol, though there are some details that you'll need to be familiar \r\nwith if you want to use the provided implementation effectively.  We'll be \r\ndiscussing some of these details in lecture soon, and these will be accompanied \r\nby a <a href=\"../../CodeExamples\">code example</a>, which will give you some background \r\nin the tools you'll need to solve these kinds of problems in Python.</p>\r\n\r\n<p>This project gives you the opportunity to explore a small part of the vast sea of possibilities presented by web APIs and web services.  You'll likely find that you spend a lot of your time in this project understanding the web API you'll need &mdash; being able to navigate technical documentation and gradually build an understanding of another system is a vital skill in building real software &mdash; and that the amount of code you need isn't nearly what you might expect when you first read the project write-up.  As always, work incrementally rather than trying to work on the entire project all at once.  When you're done, you'll have taken a valuable step toward being able to build Python programs that interact with web services, which opens up your ability to write programs for yourself that are real and useful.</p>\r\n\r\n<p>Additionally, you'll get what might be your first experience with writing classes in Python, which will broaden your ability to write clean, expressive Python programs.</p>\r\n\r\n</div>\r\n\r\n<div class=\"section\">\r\n\r\n<hr />\r\n\r\n<p class=\"title\">Reminder: Do not select a partner</p>\r\n\r\n<p>Unlike the previous projects, which required that you use the pair programming technique, this project <i>requires that you work individually</i>.  So you will not be selecting a partner and you will not be doing pair programming this time; each student is responsible for his or her own submission for this project.  While we do believe that pair programming offers a lot of benefits, you'll also need to build your skills at working on your own, as future coursework (and possibly future employment) will depend on them.</p>\r\n\r\n</div>\r\n\r\n<div class=\"section\">\r\n\r\n<hr />\r\n\r\n<p class=\"title\">The problem, in general</p>\r\n\r\n<p>In your work on this project, you'll write a program that is capable of displaying information about a trip from one location to another (e.g., driving directions between two street addresses).  For example, you might display turn-by-turn directions, an estimate of how long it might take to get from one location to another, and so on.  You'll use real-world map data &mdash; real cities, real streets &mdash; to solve your problem.  So, when you're done, your program will be a very simple navigation system, not entirely unlike the ones you see on some smartphones or in some cars.  If you want to know how to drive from Bren Hall at UCI to Staples Center in Los Angeles, your program will be able to tell you.</p>\r\n\r\n<p>That may sound like something that is well beyond your current skill level and/or time you have available, that you're being asked to build a complete, professional system that would ordinarily be written by a large team of people over a period of months.  And, indeed, if you had to write the entire system from scratch, that would certainly be true; it would take even a seasoned professional a lot longer than the time allotted to complete a task like that, and would require skills well beyond what's been taught in your coursework to date.</p>\r\n\r\n<p>But there is good news here: we operate in an interconnected world, where information of all kinds is available to us in web browsers, smartphone applications, and so on.  And we're fortunate that a lot of that information is available for free, not just in a way that lets us view it in a web browser, but in a way that makes it available to the programs we write.  Provided that we can find an online service that provides the information we need, and provided that we are licensed to use it &mdash; either because it's free and we meet the terms of use, or because we're willing to pay for the privilege &mdash; we can use it to solve our problem.</p>\r\n\r\n<p>As it turns out, the information we need to solve this particular problem is available online, in a form that can be consumed by a Python program, and licensed in a way that lets us use it (because it is free for non-commercial use).  The only trick is figuring out how to get the information into our program.  Luckily for us, the service that provides this information uses standard protocols and formats that are common on the Internet; even better, all of these protocols and formats are implemented already in Python's standard library, so the low-level details will not be our concern!</p>\r\n\r\n</div>\r\n\r\n<div class=\"section\">\r\n\r\n<hr />\r\n\r\n<p class=\"title\">The MapQuest Open Directions API</p>\r\n\r\n<p>MapQuest is a company that is in the business of providing online services for displaying maps, providing directions, reporting on current traffic conditions, and other related services.  While they're a for-profit company, some of their services are provided free of charge for non-commercial use.  As long as you're not building a product from which you'll be trying to make money, you can use MapQuest's free services, with the one additional caveat that you have to follow the rules laid out in their license.  These kinds of license restrictions are no joke, so we'll spend a little time to be sure we're taking them seriously.</p>\r\n\r\n<p>For our work on this project, you'll be concerned with the MapQuest Open Directions API, which is a web-based API, similar to the one we used in the <a href=\"../../CodeExamples\">code example</a> in which we downloaded and displayed information about YouTube videos.  Like YouTube's API, the MapQuest Open Directions API uses HTTP, with queries described using a URL, and with responses returned in JSON format.  Fortunately, all of these technologies are supported in Python's standard library, so most of the details are things that will be handled for us automatically, but, as we saw in the YouTube example, there are some things we need to get right, and not all of the details wil be the same in the MapQuest example as they were in the YouTube example, so it'll be vital for you to understand <i>why</i> we did the things we did in the <a href=\"../../CodeExamples\">code example</a>, so you can know whether and where the same techniques apply.</p>\r\n\r\n<p>The MapQuest Open Directions API is described in detail at the link below.  You certainly won't need to read all of the documentation, but you'll want to take a look around and familiarize yourself with what the API can do, because part of your goal in this project is to decide what parts of the API you'll need to solve your problem.</p>\r\n\r\n<ul>\r\n  <li><a href=\"http://developer.mapquest.com/web/products/open/directions-service\">MapQuest Open Directions API documentation</a></li>\r\n</ul>\r\n\r\n<p class=\"subtitle\">Creating an account and getting an AppKey</p>\r\n\r\n<p>Like YouTube's API that we saw in class, MapQuest's API requires an <i>AppKey</i>, which links your usage of the API to an account and authorizes you to use the API.  Before you can make use of the API, you'll need to obtain your own AppKey &mdash; and due to usage restrictions, we won't all be able to share the same key, so each of you will need to take this step.  <i>Do not share your AppKey with other students!</i>  You'll only need to do this once, and you'll be able to use your AppKey for all of your work on this project once it's been created.</p>\r\n\r\n<ul>\r\n  <li>Open the <a href=\"http://developer.mapquest.com/web/products/open/directions-service\">MapQuest Open Directions API documentation</a>.</li>\r\n  <li>Near the top of the page, you'll see a green button that says <b>Get MapQuest AppKey</b>.  Click that button.</li>\r\n  <li>A dialog titled <b>Create Account</b> should pop up.  Fill in your name, email address, and choose a password for your account, then fill in the <b>Text in Image</b> box and click the <b>Create Account</b> button.  (Skip the <i>Would you like to create an AppKey?</i> part; we'll do that later.)</li>  \r\n  <li>Having created an account &mdash; they will likely send you an email for verification purposes, so you'll have to have used a valid email address in the previous step &mdash; you'll be able to log in by clicking the <b>Sign In</b> link near the top of any MapQuest page.</li>\r\n  <li>Once signed in, open the <a href=\"http://developer.mapquest.com/web/products/open/directions-service\">MapQuest Open Directions API documentation</a> again.  You should now see a green button that says <b>Manage AppKeys</b>.  Click that button.</li>\r\n  <li>Now click the <b>Create AppKey</b> button.</li>\r\n  <li>A dialog titled <b>Create Application Key</b> should pop up.  Under <b>App Name</b>, use a short name with no spaces or special characters in it &mdash; if you're not sure what to put here, say <b>ics32</b>.  Click the checkbox saying that you agree to the terms of use, then click <b>Create</b>.</li>\r\n</ul>\r\n\r\n<p>After you've completed this process, your MapQuest AppKey will have been created, but my experience is that they aren't kidding when they say it'll take about an hour for the AppKey to become active.  But an hour or so later, you'll be able to use your AppKey to make requests to MapQuest's API.</p>\r\n\r\n<p class=\"subtitle\">Testing your AppKey</p>\r\n\r\n<p>Wait at least an hour after creating your AppKey, then it's time to test that it's working.  Open your favorite web browser; enter a URL in the following format into the browser's address bar and press Enter, replacing <b><i>APPKEY</i></b> with the AppKey you created in the previous step.</p>\r\n\r\n<blockquote><pre>\r\nhttp://open.mapquestapi.com/directions/v2/route?key=<b><i>APPKEY</i></b>&from=Irvine,CA&to=Los+Angeles,CA\r\n</pre></blockquote>\r\n\r\n<p>If successful, you should receive a result that looks roughly like this (though you'll get a lot more output than this):</p>\r\n\r\n<blockquote><pre>\r\n{\"route\":{\"hasTollRoad\":false,\"computedWaypoints\":[],\"fuelUsed\":1.93,\"hasUnpaved\":false,\"hasHighway\":true,\"realTime\":-1,\r\n\"boundingBox\":{\"ul\":{\"lng\":-118.244476,\"lat\":34.057094},\"lr\":{\"lng\":-117.794593,\"lat\":33.6847}},\"distance\":40.675,\"time\":2518,\r\n\"locationSequence\":[0,1],\"hasSeasonalClosure\":false,\"sessionId\":\"545ca8d0-03c3-001e-02b7-7cb8-00163edfa317\",\r\n\"locations\":[{\"latLng\":{\"lng\":-117.825982,\"lat\":33.685697},\"adminArea4\":\"Orange County\",\"adminArea5Type\":\"City\",\r\n\"adminArea4Type\":\"County\",\"adminArea5\":\"Irvine\",\"street\":\"\",\"adminArea1\":\"US\",\"adminArea3\":\"CA\",\"type\":\"s\",\r\n\"displayLatLng\":{\"lng\":-117.825981,\"lat\":33.685695},\"linkId\":44589954,\"postalCode\":\"\",\"sideOfStreet\":\"N\",\r\n\"dragPoint\":false,\"adminArea1Type\":\"Country\",\"geocodeQuality\":\"CITY\",\"geocodeQualityCode\":\"A5XCX\",\"adminArea3Type\":\"State\"},\r\n\r\n...\r\n</pre></blockquote>\r\n\r\n<p>You may recognize that this format is JSON (JavaScript Object Notation), which is a common format of information returned from web APIs like this one.  Unfortunately, it's not presented in a way that's particularly readable for us &mdash; though, in general, that's not a problem for our program, because our program doesn't have the same aesthetic needs that we do.  To take your first look at what's being returned, you might find it useful to copy all of the text returned to you, then visit <a href=\"http://jsonprettyprint.com/\">jsonprettyprint.com</a> and paste the text and ask for it to be \"pretty-printed\".  You'll now see the same text, but spaced in a way that will make its structure more obvious to a human reader.</p>\r\n\r\n<p>Once it's \"pretty-printed,\" take a look through MapQuest's response &mdash; don't worry if you don't understand every detail, but start to get a rough sense of what kind of information is available and how it's organized.  When you want to know the details, the <a href=\"http://developer.mapquest.com/web/products/open/directions-service\">MapQuest Open Directions API documentation</a> will explain everything you need.  But allow yourself to build an understanding gradually; this is not something you'll necessarily be able to figure out right away, but a lot of the information won't turn out to be relevant in this project, anyway.  One characteristic that distinguishes real-world work from the often-sanitized kinds of projects you do in courses like this is the need to find small nuggets of information you need amongst large amounts of documentation; I want you to start building those skills (and alleviate your fears about this kind of thing) now, so you can start working on your own programs that are more \"real\" and, thus, more exciting.</p>\r\n\r\n<p class=\"subtitle\">Respecting MapQuest's license</p>\r\n\r\n<p>Being the owner of the service, MapQuest has a license that describes the conditions under which you're permitted to use it.  For the curious, the license (a \"Terms of Use\" document) for MapQuest's \"open\" platform (the parts it doesn't sell) is available at the link below.  If you've never looked at the license for a software product, take a minute or two to see what one looks like; when you build software that depends on other software, what you can and can't do with the other software will generally be described in a license like this one.\r\n\r\n<ul>\r\n  <li><a href=\"http://developer.mapquest.com/web/info/terms-of-use\">MapQuest Terms of Use</a></li>\r\n</ul>\r\n\r\n<p>Don't feel like you need to read the whole thing in detail, but at least spend a little time getting familiar with what a license like this looks like; if you want to work in technology, it won't be the last one of these you'll see.  I'm certainly not a lawyer, but I do know how to skim through a license to see whether there are obvious red flags that suggest that I won't be able to use a product in the way I plan to.  And for the parts I'm less sure about, I can seek legal counsel &mdash; and sometimes my employers will require (and provide) legal oversight, but it helps if I understand the basics of the license first.</p>\r\n\r\n<p>In general, what we care about in MapQuest's license are a few things:</p>\r\n\r\n<ul>\r\n  <li>You can't disrupt their services &mdash; intentionally flooding it with requests, for example.</li>\r\n  <li>You can't use their services in a commercial application.  Since you won't be selling your project, this is no problem.</li>\r\n  <li>You can't make more than 5,000 requests to MapQuest's API using your AppKey on any single day.  This is not likely to impact your work, but it is worth being aware of this restriction.  Note that this is one of the reasons why sharing your AppKey with other students can be problematic.  If multiple students use the same AppKey, there exists the very real possibility that this limit will be reached while you work &mdash; or while we grade the projects! &mdash; even though 5,000 requests per day is plenty for one person.</li>\r\n  <li>As stated elsewhere in their documentation, we'll be required to print a brief copyright notice in the output of our program, attributing MapQuest as the source of our data.</li>\r\n</ul>\r\n\r\n</div>\r\n\r\n<div class=\"section\">\r\n\r\n<hr />\r\n\r\n<p class=\"title\">The program, in detail</p>\r\n\r\n<p>Your program will describe a trip taken between a sequence of locations, the goal being to travel from the first location to the second, then from the second location to the third, and so on, until reaching the last location.  Based on the user's input, it will show different information about the trip, such as turn-by-turn directions, distances and times, etc.</p>\r\n\r\n<p class=\"subtitle\">The input</p>\r\n\r\n<p>Your program will take input in the following format.  It should not prompt the user in any way; it should simply read whatever input is typed into the console, and you should assume that your user knows the precise input format.</p>\r\n\r\n<ul>\r\n  <li>An integer whose value is at least 2, alone on a line, that specifies how many <i>locations</i> the trip will consist of.</li>\r\n  <li>If there are <i>n</i> locations, the next <i>n</i> lines of input will each describe one location.  Each location can be a city such as <b>Irvine, CA</b>, an address such as <b>4545 Campus Dr, Irvine, CA</b>, or anything that the MapQuest API will accept as a location.  (The details of what is acceptable as a location is described <a href=\"http://open.mapquestapi.com/common/locations.html\">here</a>.)</li>\r\n  <li>A positive integer (i.e., whose value is at least 1), alone on a line, that specifies how many <i>outputs</i> will need to be generated.</li>\r\n  <li>If there are <i>m</i> outputs, the next <i>m</i> lines of input will each describe one output.  Each output can be one of the following:\r\n    <ul>\r\n      <li><b>STEPS</b> for step-by-step directions, meaning a brief description of each manuever (e.g., a turn, entering or exiting a freeway, etc.) you would have to make to drive from one location to another</li>\r\n      <li><b>TOTALDISTANCE</b> for the total distance traveled if completing the entire trip</li>\r\n      <li><b>TOTALTIME</b> for the total estimated time to complete the entire trip</li>\r\n      <li><b>LATLONG</b> for the latitude and longitude of each of the locations specified in the input</li>\r\n    </ul>\r\n  </li>\r\n</ul>\r\n\r\n<p>You can feel free to assume that the input will match the format described above; we will not be testing cases where it doesn't, so you can do anything you'd like &mdash; up to and including crashing &mdash; in such cases.</p>\r\n\r\n<p class=\"subtitle\">The output</p>\r\n\r\n<p>After reading the input and processing it &mdash; downloading information from the MapQuest API, etc. &mdash; your program will generate the specified outputs in the forms described below.  Each output should be preceded by a blank line, to set each one off from the others.</p>\r\n\r\n<ul>\r\n  <li>The <b>STEPS</b> output should begin with the word <b>DIRECTIONS</b> alone on a line, followed by one line of output for each manuever that needs to be made along the path from the first location to the last.</li>\r\n  <li>The <b>TOTALDISTANCE</b> output should be the words <b>Total Distance</b>, followed by a colon and a space, followed by the total distance (in an integer number of miles, rounded to the nearest mile) for the entire trip.</li>\r\n  <li>The <b>TOTALTIME</b> output should be the words <b>Total Time</b>, followed by a colon and a space, followed by the total time (in an integer number of minutes, rounded to the nearest minute) that would be required to take the entire trip.</li>\r\n  <li>The <b>LATLONG</b> output should be a latitude and longitude, one of each per line, for each of the locations specified in the input, in the order specified in the input.  The latitude should come first, followed by a space, followed by the longitude.\r\n    <ul>\r\n      <li>The latitude's format is a number of degrees (formatted to two decimal places) followed by either <b>N</b> for north or <b>S</b> for south.</li>\r\n      <li>The longitude's format is a number of degrees (formatted to two decimal places) followed by either <b>W</b> for west or <b>E</b> for east.</li>\r\n    </ul>\r\n  </li>\r\n</ul>\r\n\r\n<p>After the last output, print the following copyright statement, alone on a line: <b>Directions Courtesy of MapQuest; Map Data Copyright OpenStreetMap Contributors</b>.</p>\r\n\r\n<p class=\"subtitle\">An example of the program's execution</p>\r\n\r\n<p>The following is an example of the program's execution, as it should be.  Boldfaced, italicized text indicates input, while normal text indicates output.  Note that the map data (the manuevers, latitudes and longitudes, etc.) are hypothetical; I haven't taken them directly from MapQuest, since the goal of this example is to demonstrate the format.</p>\r\n\r\n<blockquote><pre>\r\n<b><i>3\r\n4533 Campus Dr, Irvine, CA\r\n1111 Figueroa St, Los Angeles, CA\r\n3799 S Las Vegas Blvd, Las Vegas, NV\r\n4\r\nSTEPS\r\nTOTALDISTANCE\r\nTOTALTIME\r\nLATLONG</i></b>\r\n\r\nDIRECTIONS\r\nWest on Campus Dr.\r\nRight on Bristol\r\nCA-73 North\r\nTransition to I-405 North\r\nTransition to I-110 North\r\nExit 9th Street\r\nSouth on S Figueroa St.\r\nLeft on W 18th St.\r\nEnter I-10 East from W 18th St.\r\nTransition to I-15 North\r\nExit S Las Vegas Blvd.\r\n\r\nTotal Distance: 365 miles\r\n\r\nTotal Time: 317 minutes\r\n\r\n33.68N 117.77W\r\n34.02N 118.41W\r\n36.11N 115.17W\r\n\r\nDirections Courtesy of MapQuest; Map Data Copyright OpenStreetMap Contributors\r\n</pre></blockquote>\r\n\r\n</div>\r\n\r\n<!--\r\n<div class=\"section\">\r\n\r\n<hr />\r\n\r\n<p class=\"title\">Wait... what kind of crazy user interface is this?</p>\r\n\r\n<p>Unlike programs you may have written in the past, this program has no graphical user interface, or even an attempt at a \"user-friendly\" console interface.  There are no prompts asking for particular input; we just assume that the program's user knows precisely what to do.  It's a fair question to wonder why there isn't any kind of user interface.  Not all programs require the user-friendly interfaces that are important in application software like Microsoft Word or iTunes, for the simple reason that humans aren't the primary users of all software.  Just as MapQuest's API responds only to properly-formatted HTTP requests &mdash; with no prompting that asks a human user for input and a relatively unfriendly approach to dealing with incorrect input &mdash; your program will similarly presume that its input will be given in the format required.</p>\r\n\r\n<p>Now consider again the requirements of the program you're being asked to write for this project.  It waits for requests to be sent in via the console &mdash; though they could almost as easily be sent across the Internet, if we preferred &mdash; in a predefined format, then responds using another predefined format.  Our program, in essence, can be thought of in the same way as a web server; it's the engine on top of which lots of other interesting software could be built.  When an attempt in being made to charge to a card, that could be coming from a web form filled out by a user.  When a card's balance is queried, that could be a result of a user logging into the card issuer's web site and asking for it, or dialing into a phone-based system instead.</p>\r\n\r\n<p>While we won't be building these other interesting parts, suffice it to say that there's a place for software with no meaningful user interface; it can serve as the foundation upon which other software can be built.  You can think of your program as that foundation.</p>\r\n\r\n<p>Additionally, we're using a strategy like this one to assist us in automating the grading of the correctness of your project.  Since everyone's input and output have to be formatted in the same way, we will be able to grade your output without manually looking at every line.</p>\r\n\r\n</div>\r\n-->\r\n\r\n<div class=\"section\">\r\n\r\n<hr />\r\n\r\n<p class=\"title\">An example implementation</p>\r\n\r\n<p>If you'd like to experiment with a previously-implemented example of this program, which demonstrates the output you should generate based on the input your program receives, a version is available at the link below, which you can run directly within your browser.</p>\r\n\r\n<ul>\r\n  <li><a href=\"MapQuestAPIExample.html\">MapQuest API Example</a></li>\r\n</ul>\r\n\r\n<p>Note that you'll need your MapQuest AppKey before you can experiment with the example implementation, so if you haven't created that yet, do that before proceeding.</p>\r\n\r\n</div>\r\n\r\n<div class=\"section\">\r\n\r\n<hr />\r\n\r\n<p class=\"title\">Design requirements and advice</p>\r\n\r\n<p>As with the previous project, you'll be required to write your program using multiple Python modules (i.e., multiple <b>.py</b> files), each encapsulating a different major part of the program.  The following modules would be a good way to break this problem down into component parts:</p>\r\n\r\n<ul>\r\n  <li>A module that interacts with the MapQuest Open Directions API.  This is where you should do things like building a URL, making the HTTP request, and parsing the JSON response.</li>\r\n  <li>A module that implements the various outputs.  Each kind of output that can be generated by the program must be implemented as a separate <i>class</i>; see below.</li> \r\n  <li>A module that reads the input and constructs the objects that will generate the program's output.  This is the only module that should have an <b>if __name__ == '__main__'</b> block to make it executable; you would execute this module to run your program.</li>\r\n</ul>\r\n\r\n<p class=\"subtitle\">Output generators as classes</p>\r\n\r\n<p>Each of the different kinds of outputs that your program can generate is required to be implemented as a Python <i>class</i>, which contains attributes that configure it and a <b>generate</b> method that generates the output given the response from the MapQuest API.</p>\r\n\r\n<p>All of these classes must have a <b>generate</b> method with the same signature (i.e., the same name, the same parameteers, and the same type of return value), so that your main module can create a list of output generators of various types, then generate all of its output by simply looping through them and asking each to generate its output.</p>\r\n\r\n<p>(This is one key benefit in using classes in Python; we can treat different kinds of objects with similar capabilities the same way, which avoids us having to use <b>if</b> statements to differentiate.  We'll see an example of this technique, which is sometimes called <i>duck typing</i>, in lecture.)</p>\r\n\r\n<p class=\"subtitle\">Where should I start?</p>\r\n\r\n<p>There are lots of ways to start this project, but your goal, as always, is to find stable ground as early and often as possible.  One problem you know you'll need to solve is reading the input; I'd consider starting with that, even if all you do is read the input and print something back to the console that demonstrates that you read it correctly.  You can test this from the Python interpreter before proceeding, and then you're on stable ground.</p>\r\n\r\n<p>After that, choose another slice of functionality &mdash; something small that you understand &mdash; and work on that.  For example, you might write a function that builds the URLs that you'll use to call into the MapQuest API.  Call that function from the Python interpreter, then take its output and try to use a web browser to open the URL; if you get back a JSON response, that tells you that you're on the right track, and you're on stable ground again.</p>\r\n\r\n<p>Continue in this fashion, choosing some small problem to work on.  Don't worry if you sometimes go down a dark path that turns out to be a dead end; you won't always make the right decision every time.  But you'll gradually build confidence and you'll gradually build your understanding of the problem you're working on.  Maintaining forward momentum is the key to avoiding the feeling of being overwhelmed by a problem that seems larger than you're used to.</p>\r\n\r\n<p>If you work incrementally and gradually, you'll find yourself completing this project, and will hopefully be excited by the outcome.  Even if maps and directions aren't things that interest you, there's a good chance you can find a web API that serves up information that you are excited about, and that you might be able to write an interesting program around.</p>\r\n\r\n</div>\r\n\r\n<div class=\"section\">\r\n\r\n<hr />\r\n\r\n<p class=\"title\">A word about the use of outside resources</p>\r\n\r\n<p>Because the MapQuest Open Directions API is a fairly well-known online service, it is entirely possible that you would find Python modules online that have already been written and that know how to communicate with it.  However, you are not permitted to download these and submit them as your own, in whole or in part, and you are not permitted to use them as any kind of basis for your own work.  While you can use the Python standard library, you otherwise are expected to write this program entirely on your own.</p>\r\n\r\n</div>\r\n\r\n<div class=\"section\">\r\n\r\n<hr />\r\n\r\n<p class=\"title\">Deliverables</p>\r\n\r\n<p>Put your name and student ID in a comment at the top of each of your <b>.py</b> files, then submit all of the files to Checkmate.  Take a moment to be sure that you've submitted all of your files.</p>\r\n\r\n<p>Follow <a href=\"../SubmittingProjects.html\">this link</a> for a discussion of how to submit your project via Checkmate.  Be aware that I'll be holding you to all of the rules specified in that document, including the one that says that you're responsible for submitting the version of the project that you want graded.  We won't regrade a project simply because you submitted the wrong version accidentally.</p>\r\n\r\n<p class=\"subtitle\">Can I submit after the deadline?</p>\r\n\r\n<p>Yes, it is possible, subject to the late work policy for this course, which is described in the section titled <i>Late work</i> at <a href=\"../index.html\">this link</a>.</p>\r\n\r\n</div>\r\n\r\n<div class=\"history\">\r\n\r\n<hr />\r\n\r\n<ul class=\"nomarker\">\r\n  <li>Multiple tweaks and clarifications, along with an example web-based implementation, added by Alex Thornton, Winter 2015.</li>\r\n  <li>Originally written by Alex Thornton, Fall 2014.</li>\r\n</ul>\r\n\r\n</div>\r\n\r\n</body>\r\n</html>\r\n", "id": 16518.0}