{"text": "View Javadoc 1 package swirl workspace 2 3 import java io FileNotFoundException 4 import java io IOException 5 import java io InputStream 6 import java util Enumeration 7 import java util LinkedList 8 import java util Properties 9 1 import org apache commons logging Log 11 import org apache commons logging LogFactory 12 import org picocontainer MutablePicoContainer 13 import org picocontainer Parameter 14 import org picocontainer defaults ComponentParameter 15 import org picocontainer defaults ConstantParameter 16 import org picocontainer defaults DefaultPicoContainer 17 18 19 DOCUMENT ME 2 21 author bpillet 22 23 public class PropertiesContainerBuilder 24 25 the resource that the container is based on 26 private InputStream resource 27 28 the logger for this class 29 private Log log LogFactory getLog this getClass 3 31 the container that is created build 32 private MutablePicoContainer pico 33 34 35 Populate the container based on a specific resource property file 36 37 param resourceName the name of the property file 38 param parent the parent container for this container 39 4 return the populated container 41 42 public MutablePicoContainer buildContainer final String resourceName 43 final MutablePicoContainer parent 44 45 setResource resourceName 46 pico new DefaultPicoContainer parent 47 parent registerComponentInstance pico 48 49 return buildContainer 5 51 52 53 Populate the container based on a specific resource property file 54 55 param resourceName the name of the property file 56 57 return the populated container 58 59 public MutablePicoContainer buildContainer final String resourceName 6 61 setResource resourceName 62 pico new DefaultPicoContainer 63 64 return buildContainer 65 66 67 68 Populate the container based on each property in the properties file 69 7 return the populated container 71 72 public MutablePicoContainer buildContainer 73 74 try 75 76 Properties guiProps new Properties 77 78 guiProps load resource 79 8 for Enumeration components guiProps propertyNames 81 components hasMoreElements 82 83 String component String components nextElement 84 String parameters guiProps getProperty component 85 86 if log isDebugEnabled 87 88 log debug component component params 89 parameters 9 91 92 try 93 94 Class componentClass Class forName component 95 Parameter params parseParameters parameters 96 97 if params length 98 99 pico registerComponentImplementation componentClass 1 componentClass 1 1 params 1 2 1 3 else 1 4 1 5 pico registerComponentImplementation componentClass 1 6 1 7 1 8 catch ClassNotFoundException ex 1 9 11 log error Could not find component component ex 111 112 113 114 catch FileNotFoundException ex 115 116 log error Problem finding gui ex 117 118 catch IOException ex 119 12 log error Problem loading gui ex 121 122 123 return pico 124 125 126 127 Convenience method to get the resource based on the classpath 128 129 param resourceName the name of the resource 13 131 private void setResource final String resourceName 132 133 if log isDebugEnabled 134 135 log debug resourceName resourceName 136 137 138 resource this getClass getClassLoader getResourceAsStream resourceName 139 14 if log isDebugEnabled 141 142 log debug resource resource 143 144 145 146 147 Extracts the parameters from a string of the format br 148 component lt class gt constant lt string gt 149 15 param params the string to parse 151 152 return the Parameter objects that were extracted 153 154 private Parameter parseParameters final String params 155 156 LinkedList parameters new LinkedList 157 158 if params equals 159 16 String paramSplit params split 161 162 if log isDebugEnabled 163 164 log debug length paramSplit length 165 166 167 for int i i paramSplit length i 2 168 169 String type paramSplit i 17 String value paramSplit i 1 171 172 if log isDebugEnabled 173 174 log debug type type value value 175 176 177 if type equals constant 178 179 parameters add new ConstantParameter value 18 181 else if type equals component 182 183 try 184 185 Class val Class forName value 186 187 parameters add new ComponentParameter val 188 189 catch Exception ex 19 191 log error trouble setting parameter value 192 193 194 195 196 197 return Parameter parameters toArray new Parameter 198 199 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.20/xref/swirl/workspace/PropertiesContainerBuilder.html", "title": "propertiescontainerbuilder xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>PropertiesContainerBuilder xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../stylesheet.css\" />\n</head>\n<body>\n<div id=\"overview\"><a href=\"../../../apidocs/swirl/workspace/PropertiesContainerBuilder.html\">View Javadoc</a></div><pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <strong>package</strong> <a href=\"../../swirl/workspace/package-summary.html\">swirl.workspace</a>;\n<a name=\"2\" href=\"#2\">2</a>   \n<a name=\"3\" href=\"#3\">3</a>   <strong>import</strong> java.io.FileNotFoundException;\n<a name=\"4\" href=\"#4\">4</a>   <strong>import</strong> java.io.IOException;\n<a name=\"5\" href=\"#5\">5</a>   <strong>import</strong> java.io.InputStream;\n<a name=\"6\" href=\"#6\">6</a>   <strong>import</strong> java.util.Enumeration;\n<a name=\"7\" href=\"#7\">7</a>   <strong>import</strong> java.util.LinkedList;\n<a name=\"8\" href=\"#8\">8</a>   <strong>import</strong> java.util.Properties;\n<a name=\"9\" href=\"#9\">9</a>   \n<a name=\"10\" href=\"#10\">10</a>  <strong>import</strong> org.apache.commons.logging.Log;\n<a name=\"11\" href=\"#11\">11</a>  <strong>import</strong> org.apache.commons.logging.LogFactory;\n<a name=\"12\" href=\"#12\">12</a>  <strong>import</strong> org.picocontainer.MutablePicoContainer;\n<a name=\"13\" href=\"#13\">13</a>  <strong>import</strong> org.picocontainer.Parameter;\n<a name=\"14\" href=\"#14\">14</a>  <strong>import</strong> org.picocontainer.defaults.ComponentParameter;\n<a name=\"15\" href=\"#15\">15</a>  <strong>import</strong> org.picocontainer.defaults.ConstantParameter;\n<a name=\"16\" href=\"#16\">16</a>  <strong>import</strong> org.picocontainer.defaults.DefaultPicoContainer;\n<a name=\"17\" href=\"#17\">17</a>  \n<a name=\"18\" href=\"#18\">18</a>  <em>/**<em>*</em></em>\n<a name=\"19\" href=\"#19\">19</a>  <em> * DOCUMENT ME!</em>\n<a name=\"20\" href=\"#20\">20</a>  <em> *</em>\n<a name=\"21\" href=\"#21\">21</a>  <em> * @author bpillet</em>\n<a name=\"22\" href=\"#22\">22</a>  <em> */</em>\n<a name=\"23\" href=\"#23\">23</a>  <strong>public</strong> <strong>class</strong> <a href=\"../../swirl/workspace/PropertiesContainerBuilder.html\">PropertiesContainerBuilder</a>\n<a name=\"24\" href=\"#24\">24</a>  {\n<a name=\"25\" href=\"#25\">25</a>      <em>/**<em>* the resource that the container is based on */</em></em>\n<a name=\"26\" href=\"#26\">26</a>      <strong>private</strong> InputStream resource;\n<a name=\"27\" href=\"#27\">27</a>  \n<a name=\"28\" href=\"#28\">28</a>      <em>/**<em>* the logger for this class */</em></em>\n<a name=\"29\" href=\"#29\">29</a>      <strong>private</strong> Log log = LogFactory.getLog(<strong>this</strong>.getClass());\n<a name=\"30\" href=\"#30\">30</a>  \n<a name=\"31\" href=\"#31\">31</a>      <em>/**<em>* the container that is created/build */</em></em>\n<a name=\"32\" href=\"#32\">32</a>      <strong>private</strong> MutablePicoContainer pico;\n<a name=\"33\" href=\"#33\">33</a>  \n<a name=\"34\" href=\"#34\">34</a>      <em>/**<em>*</em></em>\n<a name=\"35\" href=\"#35\">35</a>  <em>     * Populate the container based on a specific resource property file</em>\n<a name=\"36\" href=\"#36\">36</a>  <em>     *</em>\n<a name=\"37\" href=\"#37\">37</a>  <em>     * @param resourceName the name of the property file</em>\n<a name=\"38\" href=\"#38\">38</a>  <em>     * @param parent the parent container for this container</em>\n<a name=\"39\" href=\"#39\">39</a>  <em>     *</em>\n<a name=\"40\" href=\"#40\">40</a>  <em>     * @return the populated container</em>\n<a name=\"41\" href=\"#41\">41</a>  <em>     */</em>\n<a name=\"42\" href=\"#42\">42</a>      <strong>public</strong> MutablePicoContainer buildContainer(<strong>final</strong> String resourceName,\n<a name=\"43\" href=\"#43\">43</a>                                                 <strong>final</strong> MutablePicoContainer parent)\n<a name=\"44\" href=\"#44\">44</a>      {\n<a name=\"45\" href=\"#45\">45</a>          setResource(resourceName);\n<a name=\"46\" href=\"#46\">46</a>          pico = <strong>new</strong> DefaultPicoContainer(parent);\n<a name=\"47\" href=\"#47\">47</a>          parent.registerComponentInstance(pico);\n<a name=\"48\" href=\"#48\">48</a>  \n<a name=\"49\" href=\"#49\">49</a>          <strong>return</strong> buildContainer();\n<a name=\"50\" href=\"#50\">50</a>      }\n<a name=\"51\" href=\"#51\">51</a>  \n<a name=\"52\" href=\"#52\">52</a>      <em>/**<em>*</em></em>\n<a name=\"53\" href=\"#53\">53</a>  <em>     * Populate the container based on a specific resource property file</em>\n<a name=\"54\" href=\"#54\">54</a>  <em>     *</em>\n<a name=\"55\" href=\"#55\">55</a>  <em>     * @param resourceName the name of the property file</em>\n<a name=\"56\" href=\"#56\">56</a>  <em>     *</em>\n<a name=\"57\" href=\"#57\">57</a>  <em>     * @return the populated container</em>\n<a name=\"58\" href=\"#58\">58</a>  <em>     */</em>\n<a name=\"59\" href=\"#59\">59</a>      <strong>public</strong> MutablePicoContainer buildContainer(<strong>final</strong> String resourceName)\n<a name=\"60\" href=\"#60\">60</a>      {\n<a name=\"61\" href=\"#61\">61</a>          setResource(resourceName);\n<a name=\"62\" href=\"#62\">62</a>          pico = <strong>new</strong> DefaultPicoContainer();\n<a name=\"63\" href=\"#63\">63</a>  \n<a name=\"64\" href=\"#64\">64</a>          <strong>return</strong> buildContainer();\n<a name=\"65\" href=\"#65\">65</a>      }\n<a name=\"66\" href=\"#66\">66</a>  \n<a name=\"67\" href=\"#67\">67</a>      <em>/**<em>*</em></em>\n<a name=\"68\" href=\"#68\">68</a>  <em>     * Populate the container based on each property in the properties file</em>\n<a name=\"69\" href=\"#69\">69</a>  <em>     *</em>\n<a name=\"70\" href=\"#70\">70</a>  <em>     * @return the populated container</em>\n<a name=\"71\" href=\"#71\">71</a>  <em>     */</em>\n<a name=\"72\" href=\"#72\">72</a>      <strong>public</strong> MutablePicoContainer buildContainer()\n<a name=\"73\" href=\"#73\">73</a>      {\n<a name=\"74\" href=\"#74\">74</a>          <strong>try</strong>\n<a name=\"75\" href=\"#75\">75</a>          {\n<a name=\"76\" href=\"#76\">76</a>              Properties guiProps = <strong>new</strong> Properties();\n<a name=\"77\" href=\"#77\">77</a>  \n<a name=\"78\" href=\"#78\">78</a>              guiProps.load(resource);\n<a name=\"79\" href=\"#79\">79</a>  \n<a name=\"80\" href=\"#80\">80</a>              <strong>for</strong>(Enumeration components = guiProps.propertyNames();\n<a name=\"81\" href=\"#81\">81</a>                  components.hasMoreElements();)\n<a name=\"82\" href=\"#82\">82</a>              {\n<a name=\"83\" href=\"#83\">83</a>                  String component = (String)components.nextElement();\n<a name=\"84\" href=\"#84\">84</a>                  String parameters = guiProps.getProperty(component);\n<a name=\"85\" href=\"#85\">85</a>  \n<a name=\"86\" href=\"#86\">86</a>                  <strong>if</strong>(log.isDebugEnabled())\n<a name=\"87\" href=\"#87\">87</a>                  {\n<a name=\"88\" href=\"#88\">88</a>                      log.debug(<span class=\"string\">\"component: \"</span> + component + <span class=\"string\">\" params: \"</span>\n<a name=\"89\" href=\"#89\">89</a>                                + parameters);\n<a name=\"90\" href=\"#90\">90</a>                  }\n<a name=\"91\" href=\"#91\">91</a>  \n<a name=\"92\" href=\"#92\">92</a>                  <strong>try</strong>\n<a name=\"93\" href=\"#93\">93</a>                  {\n<a name=\"94\" href=\"#94\">94</a>                      Class componentClass = Class.forName(component);\n<a name=\"95\" href=\"#95\">95</a>                      Parameter[] params = parseParameters(parameters);\n<a name=\"96\" href=\"#96\">96</a>  \n<a name=\"97\" href=\"#97\">97</a>                      <strong>if</strong>(params.length > 0)\n<a name=\"98\" href=\"#98\">98</a>                      {\n<a name=\"99\" href=\"#99\">99</a>                          pico.registerComponentImplementation(componentClass,\n<a name=\"100\" href=\"#100\">100</a>                                                              componentClass,\n<a name=\"101\" href=\"#101\">101</a>                                                              params);\n<a name=\"102\" href=\"#102\">102</a>                     }\n<a name=\"103\" href=\"#103\">103</a>                     <strong>else</strong>\n<a name=\"104\" href=\"#104\">104</a>                     {\n<a name=\"105\" href=\"#105\">105</a>                         pico.registerComponentImplementation(componentClass);\n<a name=\"106\" href=\"#106\">106</a>                     }\n<a name=\"107\" href=\"#107\">107</a>                 }\n<a name=\"108\" href=\"#108\">108</a>                 <strong>catch</strong>(ClassNotFoundException ex)\n<a name=\"109\" href=\"#109\">109</a>                 {\n<a name=\"110\" href=\"#110\">110</a>                     log.error(<span class=\"string\">\"Could not find component \"</span> + component, ex);\n<a name=\"111\" href=\"#111\">111</a>                 }\n<a name=\"112\" href=\"#112\">112</a>             }\n<a name=\"113\" href=\"#113\">113</a>         }\n<a name=\"114\" href=\"#114\">114</a>         <strong>catch</strong>(FileNotFoundException ex)\n<a name=\"115\" href=\"#115\">115</a>         {\n<a name=\"116\" href=\"#116\">116</a>             log.error(<span class=\"string\">\"Problem finding gui\"</span>, ex);\n<a name=\"117\" href=\"#117\">117</a>         }\n<a name=\"118\" href=\"#118\">118</a>         <strong>catch</strong>(IOException ex)\n<a name=\"119\" href=\"#119\">119</a>         {\n<a name=\"120\" href=\"#120\">120</a>             log.error(<span class=\"string\">\"Problem loading gui\"</span>, ex);\n<a name=\"121\" href=\"#121\">121</a>         }\n<a name=\"122\" href=\"#122\">122</a> \n<a name=\"123\" href=\"#123\">123</a>         <strong>return</strong> pico;\n<a name=\"124\" href=\"#124\">124</a>     }\n<a name=\"125\" href=\"#125\">125</a> \n<a name=\"126\" href=\"#126\">126</a>     <em>/**<em>*</em></em>\n<a name=\"127\" href=\"#127\">127</a> <em>     * Convenience method to get the resource based on the classpath</em>\n<a name=\"128\" href=\"#128\">128</a> <em>     *</em>\n<a name=\"129\" href=\"#129\">129</a> <em>     * @param resourceName the name of the resource</em>\n<a name=\"130\" href=\"#130\">130</a> <em>     */</em>\n<a name=\"131\" href=\"#131\">131</a>     <strong>private</strong> <strong>void</strong> setResource(<strong>final</strong> String resourceName)\n<a name=\"132\" href=\"#132\">132</a>     {\n<a name=\"133\" href=\"#133\">133</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"134\" href=\"#134\">134</a>         {\n<a name=\"135\" href=\"#135\">135</a>             log.debug(<span class=\"string\">\"resourceName: \"</span> + resourceName);\n<a name=\"136\" href=\"#136\">136</a>         }\n<a name=\"137\" href=\"#137\">137</a> \n<a name=\"138\" href=\"#138\">138</a>         resource = <strong>this</strong>.getClass().getClassLoader().getResourceAsStream(resourceName);\n<a name=\"139\" href=\"#139\">139</a> \n<a name=\"140\" href=\"#140\">140</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"141\" href=\"#141\">141</a>         {\n<a name=\"142\" href=\"#142\">142</a>             log.debug(<span class=\"string\">\"resource: \"</span> + resource);\n<a name=\"143\" href=\"#143\">143</a>         }\n<a name=\"144\" href=\"#144\">144</a>     }\n<a name=\"145\" href=\"#145\">145</a> \n<a name=\"146\" href=\"#146\">146</a>     <em>/**<em>*</em></em>\n<a name=\"147\" href=\"#147\">147</a> <em>     * Extracts the parameters from a string of the format&lt;br></em>\n<a name=\"148\" href=\"#148\">148</a> <em>     * ([component:&amp;lt;class&amp;gt;|constant:&amp;lt;string&amp;gt;],)</em>\n<a name=\"149\" href=\"#149\">149</a> <em>     *</em>\n<a name=\"150\" href=\"#150\">150</a> <em>     * @param params the string to parse</em>\n<a name=\"151\" href=\"#151\">151</a> <em>     *</em>\n<a name=\"152\" href=\"#152\">152</a> <em>     * @return the Parameter objects that were extracted</em>\n<a name=\"153\" href=\"#153\">153</a> <em>     */</em>\n<a name=\"154\" href=\"#154\">154</a>     <strong>private</strong> Parameter[] parseParameters(<strong>final</strong> String params)\n<a name=\"155\" href=\"#155\">155</a>     {\n<a name=\"156\" href=\"#156\">156</a>         LinkedList parameters = <strong>new</strong> LinkedList();\n<a name=\"157\" href=\"#157\">157</a> \n<a name=\"158\" href=\"#158\">158</a>         <strong>if</strong>(!params.equals(<span class=\"string\">\"\"</span>))\n<a name=\"159\" href=\"#159\">159</a>         {\n<a name=\"160\" href=\"#160\">160</a>             String[] paramSplit = params.split(<span class=\"string\">\":|,\"</span>, 0);\n<a name=\"161\" href=\"#161\">161</a> \n<a name=\"162\" href=\"#162\">162</a>             <strong>if</strong>(log.isDebugEnabled())\n<a name=\"163\" href=\"#163\">163</a> \t        {\n<a name=\"164\" href=\"#164\">164</a>             \tlog.debug(<span class=\"string\">\"length: \"</span> + paramSplit.length);\n<a name=\"165\" href=\"#165\">165</a> \t        }\n<a name=\"166\" href=\"#166\">166</a> \n<a name=\"167\" href=\"#167\">167</a>             <strong>for</strong>(<strong>int</strong> i = 0; i &lt; paramSplit.length; i += 2)\n<a name=\"168\" href=\"#168\">168</a>             {\n<a name=\"169\" href=\"#169\">169</a>                 String type = paramSplit[i];\n<a name=\"170\" href=\"#170\">170</a>                 String value = paramSplit[i + 1];\n<a name=\"171\" href=\"#171\">171</a> \n<a name=\"172\" href=\"#172\">172</a>                 <strong>if</strong>(log.isDebugEnabled())\n<a name=\"173\" href=\"#173\">173</a>                 {\n<a name=\"174\" href=\"#174\">174</a>                     log.debug(<span class=\"string\">\"type: \"</span> + type + <span class=\"string\">\" value: \"</span> + value);\n<a name=\"175\" href=\"#175\">175</a>                 }\n<a name=\"176\" href=\"#176\">176</a> \n<a name=\"177\" href=\"#177\">177</a>                 <strong>if</strong>(type.equals(<span class=\"string\">\"constant\"</span>))\n<a name=\"178\" href=\"#178\">178</a>                 {\n<a name=\"179\" href=\"#179\">179</a>                     parameters.add(<strong>new</strong> ConstantParameter(value));\n<a name=\"180\" href=\"#180\">180</a>                 }\n<a name=\"181\" href=\"#181\">181</a>                 <strong>else</strong> <strong>if</strong>(type.equals(<span class=\"string\">\"component\"</span>))\n<a name=\"182\" href=\"#182\">182</a>                 {\n<a name=\"183\" href=\"#183\">183</a>                     <strong>try</strong>\n<a name=\"184\" href=\"#184\">184</a>                     {\n<a name=\"185\" href=\"#185\">185</a>                         Class val = Class.forName(value);\n<a name=\"186\" href=\"#186\">186</a> \n<a name=\"187\" href=\"#187\">187</a>                         parameters.add(<strong>new</strong> ComponentParameter(val));\n<a name=\"188\" href=\"#188\">188</a>                     }\n<a name=\"189\" href=\"#189\">189</a>                     <strong>catch</strong>(Exception ex)\n<a name=\"190\" href=\"#190\">190</a>                     {\n<a name=\"191\" href=\"#191\">191</a>                         log.error(<span class=\"string\">\"trouble setting parameter \"</span> + value);\n<a name=\"192\" href=\"#192\">192</a>                     }\n<a name=\"193\" href=\"#193\">193</a>                 }\n<a name=\"194\" href=\"#194\">194</a>             }\n<a name=\"195\" href=\"#195\">195</a>         }\n<a name=\"196\" href=\"#196\">196</a> \n<a name=\"197\" href=\"#197\">197</a>         <strong>return</strong> (Parameter[])parameters.toArray(<strong>new</strong> Parameter[]{});\n<a name=\"198\" href=\"#198\">198</a>     }\n<a name=\"199\" href=\"#199\">199</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 32777.0}