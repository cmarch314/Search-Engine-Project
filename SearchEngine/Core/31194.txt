{"text": "This document is adapted from the paper Cost based Modeling and Evaluation for Data Mining With Application to Fraud and Intrusion Detection Results from the JAM Project by Salvatore J Stolfo Wei Fan Wenke Lee Andreas Prodromidis and Philip K Chan INTRUSION DETECTOR LEARNING Software to detect network intrusions protects a computer network from unauthorized users including perhaps insiders The intrusion detector learning task is to build a predictive model i e a classifier capable of distinguishing between bad connections called intrusions or attacks and good normal connections The 1998 DARPA Intrusion Detection Evaluation Program was prepared and managed by MIT Lincoln Labs The objective was to survey and evaluate research in intrusion detection A standard set of data to be audited which includes a wide variety of intrusions simulated in a military network environment was provided The 1999 KDD intrusion detection contest uses a version of this dataset Lincoln Labs set up an environment to acquire nine weeks of raw TCP dump data for a local area network LAN simulating a typical U S Air Force LAN They operated the LAN as if it were a true Air Force environment but peppered it with multiple attacks The raw training data was about four gigabytes of compressed binary TCP dump data from seven weeks of network traffic This was processed into about five million connection records Similarly the two weeks of test data yielded around two million connection records A connection is a sequence of TCP packets starting and ending at some well defined times between which data flows to and from a source IP address to a target IP address under some well defined protocol Each connection is labeled as either normal or as an attack with exactly one specific attack type Each connection record consists of about 1 bytes Attacks fall into four main categories DOS denial of service e g syn flood R2L unauthorized access from a remote machine e g guessing password U2R unauthorized access to local superuser root privileges e g various buffer overflow attacks probing surveillance and other probing e g port scanning It is important to note that the test data is not from the same probability distribution as the training data and it includes specific attack types not in the training data This makes the task more realistic Some intrusion experts believe that most novel attacks are variants of known attacks and the signature of known attacks can be sufficient to catch novel variants The datasets contain a total of 24 training attack types with an additional 14 types in the test data only DERIVED FEATURES Stolfo et al defined higher level features that help in distinguishing normal connections from attacks There are several categories of derived features The same host features examine only the connections in the past two seconds that have the same destination host as the current connection and calculate statistics related to protocol behavior service etc The similar same service features examine only the connections in the past two seconds that have the same service as the current connection Same host and same service features are together called time based traffic features of the connection records Some probing attacks scan the hosts or ports using a much larger time interval than two seconds for example once per minute Therefore connection records were also sorted by destination host and features were constructed using a window of 1 connections to the same host instead of a time window This yields a set of so called host based traffic features Unlike most of the DOS and probing attacks there appear to be no sequential patterns that are frequent in records of R2L and U2R attacks This is because the DOS and probing attacks involve many connections to some host s in a very short period of time but the R2L and U2R attacks are embedded in the data portions of packets and normally involve only a single connection Useful algorithms for mining the unstructured data portions of packets automatically are an open research question Stolfo et al used domain knowledge to add features that look for suspicious behavior in the data portions such as the number of failed login attempts These features are called content features A complete listing of the set of features defined for the connection records is given in the three tables below The data schema of the contest dataset is available in machine readable form feature namedescription typeduration length number of seconds of the connection continuousprotocol type type of the protocol e g tcp udp etc discreteservice network service on the destination e g http telnet etc discretesrc bytes number of data bytes from source to destination continuousdst bytes number of data bytes from destination to source continuousflag normal or error status of the connection discrete land 1 if connection is from to the same host port otherwise discretewrong fragment number of wrong fragments continuousurgent number of urgent packets continuous Table 1 Basic features of individual TCP connections feature namedescription typehot number of hot indicatorscontinuousnum failed logins number of failed login attempts continuouslogged in 1 if successfully logged in otherwise discretenum compromised number of compromised conditions continuousroot shell 1 if root shell is obtained otherwise discretesu attempted 1 if su root command attempted otherwise discretenum root number of root accesses continuousnum file creations number of file creation operations continuousnum shells number of shell prompts continuousnum access files number of operations on access control files continuousnum outbound cmdsnumber of outbound commands in an ftp session continuousis hot login 1 if the login belongs to the hot list otherwise discreteis guest login 1 if the login is a guest login otherwise discrete Table 2 Content features within a connection suggested by domain knowledge feature namedescription typecount number of connections to the same host as the current connection in the past two seconds continuousNote The following features refer to these same host connections serror rate of connections that have SYN errors continuousrerror rate of connections that have REJ errors continuoussame srv rate of connections to the same service continuousdiff srv rate of connections to different services continuoussrv count number of connections to the same service as the current connection in the past two seconds continuousNote The following features refer to these same service connections srv serror rate of connections that have SYN errors continuoussrv rerror rate of connections that have REJ errors continuoussrv diff host rate of connections to different hosts continuous Table 3 Traffic features computed using a two second time window ", "_id": "http://kdd.ics.uci.edu/databases/kddcup99/task.html", "title": "kdd-cup-99 task description ", "html": "<html>\n\n\n<head>\n<title>KDD-CUP-99 Task Description </title>\r\n</head>\r\n\n<body>\r\n\n<p>This document is adapted\r\nfrom the paper <I>Cost-based Modeling and Evaluation for Data Mining</I>\r\n<I>With Application to Fraud and Intrusion Detection: Results from the\r\nJAM Project</I> by Salvatore J. Stolfo, Wei Fan, Wenke Lee, Andreas Prodromidis,\r\nand Philip K. Chan.\r\n<BR>&nbsp;\r\n<BR>&nbsp;\r\n<H4>\r\nINTRUSION DETECTOR LEARNING</H4>\r\nSoftware to detect network intrusions protects a computer network from\r\nunauthorized users, including perhaps insiders.&nbsp; The intrusion detector\r\nlearning task is to build a predictive model (i.e. a classifier) capable\r\nof distinguishing between ``bad'' connections, called intrusions or attacks,\r\nand ``good'' normal connections.\r\n\r\n<P>The 1998 DARPA Intrusion Detection Evaluation Program was prepared and\r\nmanaged by MIT Lincoln Labs. The objective was to survey and evaluate research\r\nin intrusion detection.&nbsp; A standard set of data to be audited, which\r\nincludes a wide variety of intrusions simulated in a military network environment,\r\nwas provided.&nbsp; The 1999 KDD intrusion detection contest uses a version\r\nof this dataset.\r\n\r\n<P>Lincoln Labs set up an environment to acquire nine weeks of raw TCP\r\ndump data for a local-area network (LAN) simulating a typical U.S. Air\r\nForce LAN.&nbsp; They operated the LAN as if it were a true Air Force environment,\r\nbut peppered it with multiple attacks.\r\n\r\n<P>The raw training data was about four gigabytes of compressed binary\r\nTCP dump data from seven weeks of network traffic.&nbsp; This was processed\r\ninto about five million connection records.&nbsp; Similarly, the two weeks\r\nof test data yielded around two million connection records.\r\n\r\n<P>A connection is a sequence of TCP packets starting and ending at some\r\nwell defined times, between which data flows to and from a source IP address\r\nto a target IP address under some well defined protocol.&nbsp; Each connection\r\nis labeled as either normal, or as an attack, with exactly one specific\r\nattack type.&nbsp; Each connection record consists of about 100 bytes.\r\n\r\n<P>Attacks fall into four main categories:\r\n<UL>\r\n<LI>\r\nDOS: denial-of-service, e.g. syn flood;</LI>\r\n\r\n<LI>\r\nR2L: unauthorized access from a remote machine, e.g. guessing password;</LI>\r\n\r\n<LI>\r\nU2R:&nbsp; unauthorized access to local superuser (root) privileges, e.g.,\r\nvarious ``buffer overflow'' attacks;</LI>\r\n\r\n<LI>\r\nprobing: surveillance and other probing, e.g., port scanning.</LI>\r\n</UL>\r\nIt is important to note that the test data is not from the same probability\r\ndistribution as the training data, and it includes specific attack types\r\nnot in the training data.&nbsp; This makes the task more realistic.&nbsp;\r\nSome intrusion experts believe that most novel attacks are variants of\r\nknown attacks and the \"signature\" of known attacks can be sufficient to\r\ncatch novel variants.&nbsp; The datasets contain a total of 24 <A HREF=\"training_attack_types\">training\r\nattack types</A>, with an additional 14 types in the test data only.\r\n<BR>&nbsp;\r\n<BR>&nbsp;\r\n<H4>\r\nDERIVED FEATURES</H4>\r\nStolfo et al. defined higher-level features that help in distinguishing\r\nnormal connections from attacks.&nbsp; There are several categories of\r\nderived features.\r\n\r\n<P>The ``same host'' features examine only the connections in the past\r\ntwo seconds that have the same destination host as the current connection,\r\nand calculate statistics related to protocol behavior, service, etc.\r\n\r\n<P>The similar ``same service'' features examine only the connections in\r\nthe past two seconds that have the same service as the current connection.\r\n\r\n<P>\"Same host\" and \"same service\" features are together called&nbsp; time-based\r\ntraffic features of the connection records.\r\n\r\n<P>Some probing attacks scan the hosts (or ports) using a much larger time\r\ninterval than two seconds, for example once per minute.&nbsp; Therefore,\r\nconnection records were also sorted by destination host, and features were\r\nconstructed using a window of 100 connections to the same host instead\r\nof a time window.&nbsp; This yields a set of so-called host-based traffic\r\nfeatures.\r\n\r\n<P>Unlike most of the DOS and probing attacks, there appear to be no sequential\r\npatterns that are frequent in records of R2L and U2R attacks. This is because\r\nthe DOS and probing attacks involve many connections to some host(s) in\r\na very short period of time, but the R2L and U2R attacks are embedded in\r\nthe data portions\r\n<BR>of packets, and normally involve only a single connection.\r\n\r\n<P>Useful algorithms for mining the unstructured data portions of packets\r\nautomatically are an open research question.&nbsp; Stolfo et al. used domain\r\nknowledge to add features that look for suspicious behavior in the data\r\nportions, such as the number of failed login attempts.&nbsp; These features\r\nare called ``content'' features.\r\n\r\n<P>A complete listing of the set of features defined for the connection\r\nrecords is given in the three tables below.&nbsp; The data schema of the\r\ncontest dataset is available in <A HREF=\"kddcup.names\">machine-readable\r\nform</A> .\r\n<BR>&nbsp;\r\n<BR>&nbsp;\r\n<CENTER><TABLE BORDER WIDTH=\"80%\" NOSAVE >\r\n<TR NOSAVE>\r\n<TD><I>feature name</I></TD>\r\n\r\n<TD NOSAVE><I>description&nbsp;</I></TD>\r\n\r\n<TD><I>type</I></TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>duration&nbsp;</TD>\r\n\r\n<TD>length (number of seconds) of the connection&nbsp;</TD>\r\n\r\n<TD>continuous</TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>protocol_type&nbsp;</TD>\r\n\r\n<TD>type of the protocol, e.g. tcp, udp, etc.&nbsp;</TD>\r\n\r\n<TD>discrete</TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>service&nbsp;</TD>\r\n\r\n<TD>network service on the destination, e.g., http, telnet, etc.&nbsp;</TD>\r\n\r\n<TD>discrete</TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>src_bytes&nbsp;</TD>\r\n\r\n<TD>number of data bytes from source to destination&nbsp;</TD>\r\n\r\n<TD>continuous</TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>dst_bytes&nbsp;</TD>\r\n\r\n<TD>number of data bytes from destination to source&nbsp;</TD>\r\n\r\n<TD>continuous</TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>flag&nbsp;</TD>\r\n\r\n<TD>normal or error status of the connection&nbsp;</TD>\r\n\r\n<TD>discrete&nbsp;</TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>land&nbsp;</TD>\r\n\r\n<TD>1 if connection is from/to the same host/port; 0 otherwise&nbsp;</TD>\r\n\r\n<TD>discrete</TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>wrong_fragment&nbsp;</TD>\r\n\r\n<TD>number of ``wrong'' fragments&nbsp;</TD>\r\n\r\n<TD>continuous</TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>urgent&nbsp;</TD>\r\n\r\n<TD>number of urgent packets&nbsp;</TD>\r\n\r\n<TD>continuous</TD>\r\n</TR>\r\n\r\n<CAPTION ALIGN=BOTTOM>&nbsp;\r\n<BR>Table 1: Basic features of individual TCP connections.</CAPTION>\r\n</TABLE></CENTER>\r\n&nbsp;\r\n<CENTER><TABLE BORDER WIDTH=\"80%\" NOSAVE >\r\n<TR>\r\n<TD><I>feature name</I></TD>\r\n\r\n<TD><I>description&nbsp;</I></TD>\r\n\r\n<TD><I>type</I></TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>hot&nbsp;</TD>\r\n\r\n<TD>number of ``hot'' indicators</TD>\r\n\r\n<TD>continuous</TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>num_failed_logins&nbsp;</TD>\r\n\r\n<TD>number of failed login attempts&nbsp;</TD>\r\n\r\n<TD>continuous</TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>logged_in&nbsp;</TD>\r\n\r\n<TD>1 if successfully logged in; 0 otherwise&nbsp;</TD>\r\n\r\n<TD>discrete</TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>num_compromised&nbsp;</TD>\r\n\r\n<TD>number of ``compromised'' conditions&nbsp;</TD>\r\n\r\n<TD>continuous</TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>root_shell&nbsp;</TD>\r\n\r\n<TD>1 if root shell is obtained; 0 otherwise&nbsp;</TD>\r\n\r\n<TD>discrete</TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>su_attempted&nbsp;</TD>\r\n\r\n<TD>1 if ``su root'' command attempted; 0 otherwise&nbsp;</TD>\r\n\r\n<TD>discrete</TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>num_root&nbsp;</TD>\r\n\r\n<TD>number of ``root'' accesses&nbsp;</TD>\r\n\r\n<TD>continuous</TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>num_file_creations&nbsp;</TD>\r\n\r\n<TD>number of file creation operations&nbsp;</TD>\r\n\r\n<TD>continuous</TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>num_shells&nbsp;</TD>\r\n\r\n<TD>number of shell prompts&nbsp;</TD>\r\n\r\n<TD>continuous</TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>num_access_files&nbsp;</TD>\r\n\r\n<TD>number of operations on access control files&nbsp;</TD>\r\n\r\n<TD>continuous</TD>\r\n</TR>\r\n\r\n<TR NOSAVE>\r\n<TD>num_outbound_cmds</TD>\r\n\r\n<TD NOSAVE>number of outbound commands in an ftp session&nbsp;</TD>\r\n\r\n<TD>continuous</TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>is_hot_login&nbsp;</TD>\r\n\r\n<TD>1 if the login belongs to the ``hot'' list; 0 otherwise&nbsp;</TD>\r\n\r\n<TD>discrete</TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>is_guest_login&nbsp;</TD>\r\n\r\n<TD>1 if the login is a ``guest''login; 0 otherwise&nbsp;</TD>\r\n\r\n<TD>discrete</TD>\r\n</TR>\r\n\r\n<CAPTION ALIGN=BOTTOM>&nbsp;\r\n<BR>Table 2: Content features within a connection suggested by domain knowledge.</CAPTION>\r\n</TABLE></CENTER>\r\n&nbsp;\r\n<CENTER><TABLE BORDER WIDTH=\"80%\" NOSAVE >\r\n<TR>\r\n<TD><I>feature name</I></TD>\r\n\r\n<TD><I>description&nbsp;</I></TD>\r\n\r\n<TD><I>type</I></TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>count&nbsp;</TD>\r\n\r\n<TD>number of connections to the same host as the current connection in\r\nthe past two seconds&nbsp;</TD>\r\n\r\n<TD>continuous</TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD></TD>\r\n\r\n<TD><I>Note: The following&nbsp; features refer to these same-host connections.</I></TD>\r\n\r\n<TD></TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>serror_rate&nbsp;</TD>\r\n\r\n<TD>% of connections that have ``SYN'' errors&nbsp;</TD>\r\n\r\n<TD>continuous</TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>rerror_rate&nbsp;</TD>\r\n\r\n<TD>% of connections that have ``REJ'' errors&nbsp;</TD>\r\n\r\n<TD>continuous</TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>same_srv_rate&nbsp;</TD>\r\n\r\n<TD>% of connections to the same service&nbsp;</TD>\r\n\r\n<TD>continuous</TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>diff_srv_rate&nbsp;</TD>\r\n\r\n<TD>% of connections to different services&nbsp;</TD>\r\n\r\n<TD>continuous</TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>srv_count&nbsp;</TD>\r\n\r\n<TD>number of connections to the same service as the current connection\r\nin the past two seconds&nbsp;</TD>\r\n\r\n<TD>continuous</TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD></TD>\r\n\r\n<TD><I>Note: The following features refer to these same-service connections.</I></TD>\r\n\r\n<TD></TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>srv_serror_rate&nbsp;</TD>\r\n\r\n<TD>% of connections that have ``SYN'' errors&nbsp;</TD>\r\n\r\n<TD>continuous</TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>srv_rerror_rate&nbsp;</TD>\r\n\r\n<TD>% of connections that have ``REJ'' errors&nbsp;</TD>\r\n\r\n<TD>continuous</TD>\r\n</TR>\r\n\r\n<TR>\r\n<TD>srv_diff_host_rate&nbsp;</TD>\r\n\r\n<TD>% of connections to different hosts&nbsp;</TD>\r\n\r\n<TD>continuous&nbsp;</TD>\r\n</TR>\r\n\r\n<CAPTION ALIGN=BOTTOM>&nbsp;\r\n<BR>Table 3: Traffic features computed using a two-second time window.</CAPTION>\r\n</TABLE></CENTER>\r\n&nbsp;\n\n\n</body>\r\n</html>\r\n", "id": 31194.0}