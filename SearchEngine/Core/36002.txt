{"text": "View Javadoc 1 2 Created on Mar 12 2 5 3 4 5 package edu uci isr impromptu pie 6 7 import java awt Color 8 import java awt Dimension 9 import java awt Point 1 import java io FileOutputStream 11 import java io IOException 12 import java io InputStream 13 import java util Properties 14 15 import javax swing JFrame 16 17 import org apache batik swing JSVGCanvas 18 import org apache commons httpclient HttpURL 19 import org eclipse swt widgets Shell 2 21 import edu uci isr impromptu common Utils 22 23 24 User changable configuration 25 26 author Jie Ren 27 28 public class Configuration 29 3 The title of the client application 31 32 public static final String TITLE Impromptu Shared Workspace 33 34 Degrees for a full circle 35 36 public static final double CIRCLE 36 37 38 Degrees for a full circle almost so some math calculation will produce visible results 39 4 public static final double CIRCLE ALMOST CIRCLE 1 41 42 Degress for a semisphere 43 44 public static final double SEMI CIRCLE CIRCLE 2 45 46 47 Attribute values 48 49 The color for filling 5 51 public static final String COLOR FILL grey 52 53 The color for drawing lines 54 55 public static final String COLOR STROKE lightgrey 56 57 The color for background private space 58 59 public static final String COLOR PRIVATE SPACE lightgrey 6 61 The color for selected dot 62 63 public static final String COLOR SELECTED blue 64 65 66 The Pie 67 1 Should be large so a scaled down display can let a user feel 68 smooth during mouse dragging 69 2 should make full use of the screen real estate and leave margin 7 in only one configurable side right bottom 71 72 73 The width of the view 74 75 public static final int SIZE VIEW WIDTH 9 76 77 The height of the view 78 79 public static final int SIZE VIEW HEIGHT 9 8 81 The center of the view X in the shorter half of width and height 82 83 public static final int CENTER X SIZE VIEW WIDTH SIZE VIEW HEIGHT 84 SIZE VIEW WIDTH SIZE VIEW HEIGHT 2 85 86 The center of the view Y the same as X 87 88 public static final int CENTER Y CENTER X 89 9 The size of a dot 91 92 public static final int SIZE DOT 12 93 94 The font size for the peer name 95 96 public static final int SIZE FONT PEER 12 97 98 The font size for the desciption window 99 1 public static final int SIZE FONT DESCRIPTION 12 1 1 1 2 The font size for the file name 1 3 1 4 public static final int SIZE FONT DOT 12 1 5 1 6 The size of the outer stroke of the dot 1 7 1 8 public static final String SIZE STROKE WIDTH 1 9 11 Pixels between the outer of the pie and the names of peers 111 This number pixels should be based on SIZE FONT PEER points 112 113 public static final int SIZE MARGIN PEER 2 114 115 Outside which ring the name of the peer should be put 116 is outside the pie 1 is inside the colorful marker 117 Tweak SIZE RING PEER and SIZE MARGIN PEER to increase coverage of eatable pie 118 119 public static final int SIZE RING PEER 12 121 Radius of the pie the shorter half of width and height minus peer name 122 Probably should convert font size in point to pixels 123 124 public static final double RADIUS CENTER X SIZE MARGIN PEER 125 126 Magic number used in calculating the relative radius for each ring 127 128 public static final double SEG FACTOR 27 129 13 131 The JmDNS service type of Impromptu Pie 132 133 public static final String PIE SERVICE TYPE impromptu pie tcp local 134 135 The Pie does not really have a port 136 137 public static final int PIE PORT NONE 1 138 139 The secondary yancees configuration file when we want to run the server and the client separately 14 This is for the Pie client since the Server Peer is the normal way to start Impromptu and uses YANCEES CONFIGURATION FILE 141 142 public static final String YANCEES CONFIGURATION FILE SECONDARY simpleLocalSienaConfigurationSecondary xml 143 144 145 The default size of the pie As large as the SVG view size 146 147 private static Dimension sizePieDefault new Dimension SIZE VIEW WIDTH SIZE VIEW HEIGHT 148 149 The size of the pie 15 151 private static Dimension sizePie 152 153 Get the size of the pie Default to view size if user has not changed it 154 155 return the size of the pie 156 157 public static Dimension getSize 158 return sizePie 159 16 161 162 The default position of the pie the upper left corner of the screen 163 164 private static Point positionPieDefault new Point 165 166 The upper left position of the pie 167 168 private static Point positionPie 169 17 Get the position of the pie Default to the upper left corner if a 171 user has not changed it 172 173 return the position of the pie 174 175 public static Point getPosition 176 return positionPie 177 178 179 18 The color for the local peer 181 182 public static final String PIE COLOR DEFAULT 183 private static String pieColor PIE COLOR DEFAULT 184 185 Get the color for the local peer 186 187 return the color for the local peer 188 189 public static String getPieColor 19 return pieColor 191 192 193 Get the rgb bytes for the color for the local peer 194 195 return null if there is no color a three byte array of rr gg bb if there is one 196 197 public static byte getPieColorBytes 198 byte result null 199 if PIE COLOR DEFAULT equals pieColor 2 Color c PieUtils getColorFromString pieColor 2 1 if c null 2 2 result new byte byte c getRed byte c getGreen byte c getBlue 2 3 2 4 2 5 return result 2 6 2 7 2 8 2 9 Outside which ring the name of the peer should be put 21 211 private static int sizeRingPeer SIZE RING PEER 212 213 Get outside which ring the name of the peer should be put 214 215 return if the name is outside the pie 1 if the name is inside the 216 colorful marker 217 218 public static int getSizeRingPeer 219 return sizeRingPeer 22 221 222 The following three properties are just to uniformally save pie s properties 223 So any changable UI settings are saved 224 private static boolean showDescriptionDefault true 225 private static boolean showDescription showDescriptionDefault 226 227 Get whether the description window is enabled 228 229 return true if enabled false if disabled 23 231 public static boolean getShowDescription 232 return showDescription 233 234 235 private static boolean followDotDefault true 236 private static boolean followDot followDotDefault 237 238 Get whether the description window should follow the dot 239 24 return true to follow false not to follow 241 242 public static boolean getFollowDot 243 return followDot 244 245 246 private static boolean dragWithDelegateDefault false 247 private static boolean dragWithDelegate dragWithDelegateDefault 248 249 Get whether to use a delgate for dragging 25 251 return true for using a delegate false for using the dot directly 252 253 public static boolean getDragWithDelegate 254 return dragWithDelegate 255 256 257 private static String destinationDrive Platform getDestinationDriveDefault 258 259 Get the drive letter or the mount point 26 261 return the drive letter or the mount point 262 263 public static String getDestinationDrive 264 return destinationDrive 265 266 267 Set the drive letter or the mount point 268 269 param newDestinationDrive the new drive letter or the mount point 27 271 public static void setDestinationDrive String newDestinationDrive 272 destinationDrive newDestinationDrive 273 274 275 276 The impromptu context 277 278 private static String impromptuContext 279 edu uci isr impromptu common Configuration CONTEXT PATH 28 public static String getImpromptuContext 281 if impromptuProxy is set this will be derived from it 282 return impromptuContext 283 284 285 286 The URL used to connect the pie to the proxy 287 288 private static String impromptuProxyDefault http localhost 289 edu uci isr impromptu common Configuration CONTEXT PATH 29 static 291 if System getProperty os name indexOf Mac 1 292 impromptuProxyDefault http localhost 8 8 293 edu uci isr impromptu common Configuration CONTEXT PATH 294 295 296 private static String impromptuProxy impromptuProxyDefault 297 298 Get the URL for the impromptu proxy 299 3 return the URL for the impromptu proxy 3 1 3 2 public static String getImpromptuProxy 3 3 return impromptuProxy 3 4 3 5 3 6 private static boolean showExtraMenusDefault true 3 7 private static boolean showExtraMenus showExtraMenusDefault 3 8 3 9 Get whether to show extra menus 31 311 return true for showing extra menus false for hiding 312 313 public static boolean showExtraMenus 314 only to be set from properties not to be set and saved from UI 315 return showExtraMenus 316 317 318 Names of properties 319 32 The attribute to save the width of the pie 321 322 private static String ATTR WINDOW WIDTH impromptu pie width 323 324 The attribute to save the height of the pie 325 326 private static String ATTR WINDOW HEIGHT impromptu pie height 327 328 The attribute to save the x position of of the pie 329 33 private static String ATTR WINDOW X impromptu pie x 331 332 The attribute to save the y position of the pie 333 334 private static String ATTR WINDOW Y impromptu pie y 335 336 The attribute to save the color of the local peer 337 338 public static String ATTR PIE COLOR impromptu pie color 339 34 The attribute to save the name position relative to the ring 341 342 private static String ATTR RING impromptu pie nameOutsideRing 343 344 The attribute to save whether showing the description window 345 346 private static String ATTR SHOW DESCRIPTION impromptu pie showDescriptionWindow 347 348 The attribute to save whether the description should follow a dot 349 35 private static String ATTR FOLLOW DOT impromptu pie followDot 351 352 The attribute to save whether to drag with delegate 353 354 private static String ATTR DRAG DELEGATE impromptu pie dragWithDelegate 355 356 The attribute to save whether to show extra menus 357 358 private static String ATTR SHOW EXTRA impromptu pie showExtraMenus 359 36 The attribute to save the URL of the Impromptu proxy 361 362 private static String ATTR IMPROMPTU PROXY impromptu pie proxy 363 364 The attribute to save the Impromptu drive or mount point 365 366 private static String ATTR IMPROMPTU DRIVE impromptu pie drive 367 368 save the loaded properties 369 private static Properties impromptuProperties new Properties 37 static 371 try 372 InputStream is Configuration class getClassLoader getResourceAsStream 373 edu uci isr impromptu common Configuration PROPERTY FILE 374 if is null 375 impromptuProperties load is 376 377 try 378 get pie window size 379 String sizeWidth impromptuProperties getProperty ATTR WINDOW WIDTH 38 String valueOf SIZE VIEW WIDTH 381 String sizeHeight impromptuProperties getProperty ATTR WINDOW HEIGHT 382 String valueOf SIZE VIEW HEIGHT 383 int width Integer parseInt sizeWidth 384 int height Integer parseInt sizeHeight 385 sizePie new Dimension width height 386 387 catch NumberFormatException nfe 388 sizePie sizePieDefault 389 39 391 try 392 get pie window position 393 String sX impromptuProperties getProperty ATTR WINDOW X 394 String sY impromptuProperties getProperty ATTR WINDOW Y 395 int x Integer parseInt sX 396 int y Integer parseInt sY 397 positionPie new Point x y 398 399 catch NumberFormatException nfe 4 positionPie positionPieDefault 4 1 4 2 4 3 get the pie color 4 4 pieColor impromptuProperties getProperty ATTR PIE COLOR 4 5 PIE COLOR DEFAULT 4 6 4 7 try 4 8 get the name ring 4 9 String ring impromptuProperties getProperty ATTR RING 41 String valueOf SIZE RING PEER 411 sizeRingPeer Integer parseInt ring 412 413 catch NumberFormatException nfe 414 sizeRingPeer SIZE RING PEER 415 416 417 get showing description window 418 String show impromptuProperties getProperty ATTR SHOW DESCRIPTION 419 String valueOf showDescriptionDefault 42 showDescription Boolean valueOf show booleanValue 421 get following dot 422 String follow impromptuProperties getProperty ATTR FOLLOW DOT 423 String valueOf followDotDefault 424 followDot Boolean valueOf follow booleanValue 425 get dragging with delegate 426 String drag impromptuProperties getProperty ATTR DRAG DELEGATE 427 String valueOf dragWithDelegateDefault 428 dragWithDelegate Boolean valueOf drag booleanValue 429 get showing extra menus 43 String extra impromptuProperties getProperty ATTR SHOW EXTRA 431 String valueOf showExtraMenusDefault 432 showExtraMenus Boolean valueOf extra booleanValue 433 434 get the Impromptu proxy 435 impromptuProxy impromptuProperties getProperty ATTR IMPROMPTU PROXY 436 impromptuProxyDefault 437 438 get the Impromptu context if the proxy is set 439 if impromptuProxy equals impromptuProxyDefault 44 assume an http host context format 441 HttpURL proxy new HttpURL impromptuProxy 442 if proxy getPath null equals proxy getPath 443 impromptuContext proxy getPath 444 445 446 get the Impromptu drive 447 destinationDrive impromptuProperties getProperty ATTR IMPROMPTU DRIVE 448 Platform getDestinationDriveDefault 449 45 451 catch IOException e 452 Utils handleException e 453 454 455 456 457 Save the pie window size and position 458 param f the frame of the pie 459 param canvas the canvas for the pie 46 param p the pie 461 462 public static void saveSwing JFrame f JSVGCanvas canvas Pie p 463 try 464 we can get the property with getResourceAsStream but we need a file name to save it 465 FileOutputStream out new FileOutputStream etc System getProperty file separator 466 edu uci isr impromptu common Configuration PROPERTY FILE 467 keep other loaded properties only change what we control 468 impromptuProperties put ATTR WINDOW WIDTH String valueOf canvas getWidth 469 impromptuProperties put ATTR WINDOW HEIGHT String valueOf canvas getHeight 47 impromptuProperties put ATTR WINDOW X String valueOf f getX 471 impromptuProperties put ATTR WINDOW Y String valueOf f getY 472 impromptuProperties put ATTR PIE COLOR p getLocalColor 473 impromptuProperties put ATTR SHOW DESCRIPTION String valueOf p getShowDescription 474 impromptuProperties put ATTR FOLLOW DOT String valueOf p getFollowDot 475 impromptuProperties put ATTR DRAG DELEGATE String valueOf p getDragWithDelegate 476 impromptuProperties put ATTR IMPROMPTU PROXY p getImpromptuProxy 477 impromptuProperties put ATTR IMPROMPTU DRIVE p getImpromptuDrive 478 impromptuProperties store out Impromptu Properties 479 out close 48 481 catch IOException e 482 Utils handleException e 483 484 485 486 487 Save the pie window size and position 488 param f the frame of the pie 489 param canvas the canvas for the pie 49 param p the pie 491 492 public static void saveSWT Shell f InteractiveSVGCanvas canvas Pie p 493 try 494 we can get the property with getResourceAsStream but we need a file name to save it 495 FileOutputStream out new FileOutputStream etc System getProperty file separator 496 edu uci isr impromptu common Configuration PROPERTY FILE 497 keep other loaded properties only change what we control 498 impromptuProperties put ATTR WINDOW WIDTH String valueOf canvas getSize x 499 impromptuProperties put ATTR WINDOW HEIGHT String valueOf canvas getSize y 5 impromptuProperties put ATTR WINDOW X String valueOf f getLocation x 5 1 impromptuProperties put ATTR WINDOW Y String valueOf f getLocation y 5 2 impromptuProperties put ATTR PIE COLOR p getLocalColor 5 3 impromptuProperties put ATTR SHOW DESCRIPTION String valueOf p getShowDescription 5 4 impromptuProperties put ATTR FOLLOW DOT String valueOf p getFollowDot 5 5 impromptuProperties put ATTR DRAG DELEGATE String valueOf p getDragWithDelegate 5 6 impromptuProperties put ATTR IMPROMPTU PROXY p getImpromptuProxy 5 7 impromptuProperties put ATTR IMPROMPTU DRIVE p getImpromptuDrive 5 8 impromptuProperties store out Impromptu Properties 5 9 out close 51 511 catch IOException e 512 Utils handleException e 513 514 515 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.30/xref/edu/uci/isr/impromptu/pie/Configuration.html", "title": "configuration xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>Configuration xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../../../../stylesheet.css\" />\n</head>\n<body>\n<div id=\"overview\"><a href=\"../../../../../../apidocs/edu/uci/isr/impromptu/pie/Configuration.html\">View Javadoc</a></div><pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <em class=\"comment\">/*</em>\n<a name=\"2\" href=\"#2\">2</a>   <em class=\"comment\"> * Created on Mar 12, 2005</em>\n<a name=\"3\" href=\"#3\">3</a>   <em class=\"comment\"> *</em>\n<a name=\"4\" href=\"#4\">4</a>   <em class=\"comment\"> */</em>\n<a name=\"5\" href=\"#5\">5</a>   <strong>package</strong> <a href=\"../../../../../edu/uci/isr/impromptu/pie/package-summary.html\">edu.uci.isr.impromptu.pie</a>;\n<a name=\"6\" href=\"#6\">6</a>   \n<a name=\"7\" href=\"#7\">7</a>   <strong>import</strong> java.awt.Color;\n<a name=\"8\" href=\"#8\">8</a>   <strong>import</strong> java.awt.Dimension;\n<a name=\"9\" href=\"#9\">9</a>   <strong>import</strong> java.awt.Point;\n<a name=\"10\" href=\"#10\">10</a>  <strong>import</strong> java.io.FileOutputStream;\n<a name=\"11\" href=\"#11\">11</a>  <strong>import</strong> java.io.IOException;\n<a name=\"12\" href=\"#12\">12</a>  <strong>import</strong> java.io.InputStream;\n<a name=\"13\" href=\"#13\">13</a>  <strong>import</strong> java.util.Properties;\n<a name=\"14\" href=\"#14\">14</a>  \n<a name=\"15\" href=\"#15\">15</a>  <strong>import</strong> javax.swing.JFrame;\n<a name=\"16\" href=\"#16\">16</a>  \n<a name=\"17\" href=\"#17\">17</a>  <strong>import</strong> org.apache.batik.swing.JSVGCanvas;\n<a name=\"18\" href=\"#18\">18</a>  <strong>import</strong> org.apache.commons.httpclient.HttpURL;\n<a name=\"19\" href=\"#19\">19</a>  <strong>import</strong> org.eclipse.swt.widgets.Shell;\n<a name=\"20\" href=\"#20\">20</a>  \n<a name=\"21\" href=\"#21\">21</a>  <strong>import</strong> edu.uci.isr.impromptu.common.Utils;\n<a name=\"22\" href=\"#22\">22</a>  \n<a name=\"23\" href=\"#23\">23</a>  <em>/**<em>*</em></em>\n<a name=\"24\" href=\"#24\">24</a>  <em> * User changable configuration</em>\n<a name=\"25\" href=\"#25\">25</a>  <em> * </em>\n<a name=\"26\" href=\"#26\">26</a>  <em> * @author Jie Ren</em>\n<a name=\"27\" href=\"#27\">27</a>  <em> */</em>\n<a name=\"28\" href=\"#28\">28</a>  <strong>public</strong> <strong>class</strong> <a href=\"../../../../../edu/uci/isr/impromptu/common/Configuration.html\">Configuration</a> {\n<a name=\"29\" href=\"#29\">29</a>  \t<em>/**<em>*</em></em>\n<a name=\"30\" href=\"#30\">30</a>  <em>\t * The title of the client application</em>\n<a name=\"31\" href=\"#31\">31</a>  <em>\t */</em>\n<a name=\"32\" href=\"#32\">32</a>  \t<strong>public</strong> <strong>static</strong> <strong>final</strong> String TITLE = <span class=\"string\">\"Impromptu Shared Workspace\"</span>;\n<a name=\"33\" href=\"#33\">33</a>      <em>/**<em>*</em></em>\n<a name=\"34\" href=\"#34\">34</a>  <em>     * Degrees for a full circle</em>\n<a name=\"35\" href=\"#35\">35</a>  <em>     */</em>\n<a name=\"36\" href=\"#36\">36</a>      <strong>public</strong> <strong>static</strong> <strong>final</strong> <strong>double</strong> CIRCLE = 360;\n<a name=\"37\" href=\"#37\">37</a>      <em>/**<em>*</em></em>\n<a name=\"38\" href=\"#38\">38</a>  <em>     * Degrees for a full circle, almost, so some math calculation will produce visible results</em>\n<a name=\"39\" href=\"#39\">39</a>  <em>     */</em>\n<a name=\"40\" href=\"#40\">40</a>      <strong>public</strong> <strong>static</strong> <strong>final</strong> <strong>double</strong> CIRCLE_ALMOST = CIRCLE - 0.001;\n<a name=\"41\" href=\"#41\">41</a>      <em>/**<em>*</em></em>\n<a name=\"42\" href=\"#42\">42</a>  <em>     * Degress for a semisphere</em>\n<a name=\"43\" href=\"#43\">43</a>  <em>     */</em>\n<a name=\"44\" href=\"#44\">44</a>      <strong>public</strong> <strong>static</strong> <strong>final</strong> <strong>double</strong> SEMI_CIRCLE = CIRCLE / 2;\n<a name=\"45\" href=\"#45\">45</a>  \n<a name=\"46\" href=\"#46\">46</a>      <em class=\"comment\">//</em>\n<a name=\"47\" href=\"#47\">47</a>      <em class=\"comment\">// Attribute values</em>\n<a name=\"48\" href=\"#48\">48</a>      <em>/**<em>*</em></em>\n<a name=\"49\" href=\"#49\">49</a>  <em>     * The color for filling</em>\n<a name=\"50\" href=\"#50\">50</a>  <em>     */</em>\n<a name=\"51\" href=\"#51\">51</a>      <strong>public</strong> <strong>static</strong> <strong>final</strong> String COLOR_FILL = <span class=\"string\">\"grey\"</span>;\n<a name=\"52\" href=\"#52\">52</a>      <em>/**<em>*</em></em>\n<a name=\"53\" href=\"#53\">53</a>  <em>     * The color for drawing lines</em>\n<a name=\"54\" href=\"#54\">54</a>  <em>     */</em>\n<a name=\"55\" href=\"#55\">55</a>      <strong>public</strong> <strong>static</strong> <strong>final</strong> String COLOR_STROKE = <span class=\"string\">\"lightgrey\"</span>;\n<a name=\"56\" href=\"#56\">56</a>      <em>/**<em>*</em></em>\n<a name=\"57\" href=\"#57\">57</a>  <em>     * The color for background private space</em>\n<a name=\"58\" href=\"#58\">58</a>  <em>     */</em>\n<a name=\"59\" href=\"#59\">59</a>      <strong>public</strong> <strong>static</strong> <strong>final</strong> String COLOR_PRIVATE_SPACE = <span class=\"string\">\"lightgrey\"</span>;\n<a name=\"60\" href=\"#60\">60</a>      <em>/**<em>*</em></em>\n<a name=\"61\" href=\"#61\">61</a>  <em>     * The color for selected dot: </em>\n<a name=\"62\" href=\"#62\">62</a>  <em>     */</em>\n<a name=\"63\" href=\"#63\">63</a>      <strong>public</strong> <strong>static</strong> <strong>final</strong> String COLOR_SELECTED = <span class=\"string\">\"blue\"</span>;\n<a name=\"64\" href=\"#64\">64</a>  \n<a name=\"65\" href=\"#65\">65</a>      <em>/**<em>*</em></em>\n<a name=\"66\" href=\"#66\">66</a>  <em>     * The Pie:</em>\n<a name=\"67\" href=\"#67\">67</a>  <em>     * \t\t1) Should be large, so a scaled down display can let a user feel </em>\n<a name=\"68\" href=\"#68\">68</a>  <em>     * \t\t\tsmooth during mouse dragging</em>\n<a name=\"69\" href=\"#69\">69</a>  <em>     * \t\t2) should make full use of the screen real estate, and leave margin </em>\n<a name=\"70\" href=\"#70\">70</a>  <em>     * \t\t\tin only one (configurable) side: right, bottom </em>\n<a name=\"71\" href=\"#71\">71</a>  <em>     */</em>\n<a name=\"72\" href=\"#72\">72</a>      <em>/**<em>*</em></em>\n<a name=\"73\" href=\"#73\">73</a>  <em>     * The width of the view</em>\n<a name=\"74\" href=\"#74\">74</a>  <em>     */</em>\n<a name=\"75\" href=\"#75\">75</a>      <strong>public</strong> <strong>static</strong> <strong>final</strong> <strong>int</strong> SIZE_VIEW_WIDTH = 900;\n<a name=\"76\" href=\"#76\">76</a>      <em>/**<em>*</em></em>\n<a name=\"77\" href=\"#77\">77</a>  <em>     * The height of the view</em>\n<a name=\"78\" href=\"#78\">78</a>  <em>     */</em>\n<a name=\"79\" href=\"#79\">79</a>      <strong>public</strong> <strong>static</strong> <strong>final</strong> <strong>int</strong> SIZE_VIEW_HEIGHT = 900;\n<a name=\"80\" href=\"#80\">80</a>      <em>/**<em>*</em></em>\n<a name=\"81\" href=\"#81\">81</a>  <em>     * The center of the view: X, in the shorter half of width and height</em>\n<a name=\"82\" href=\"#82\">82</a>  <em>     */</em>\n<a name=\"83\" href=\"#83\">83</a>      <strong>public</strong> <strong>static</strong> <strong>final</strong> <strong>int</strong>\tCENTER_X = (SIZE_VIEW_WIDTH &lt; SIZE_VIEW_HEIGHT ?\n<a name=\"84\" href=\"#84\">84</a>              SIZE_VIEW_WIDTH : SIZE_VIEW_HEIGHT ) / 2;\n<a name=\"85\" href=\"#85\">85</a>      <em>/**<em>*</em></em>\n<a name=\"86\" href=\"#86\">86</a>  <em>     * The center of the view: Y, the same as X</em>\n<a name=\"87\" href=\"#87\">87</a>  <em>     */</em>\n<a name=\"88\" href=\"#88\">88</a>      <strong>public</strong> <strong>static</strong> <strong>final</strong> <strong>int</strong> CENTER_Y = CENTER_X;\n<a name=\"89\" href=\"#89\">89</a>      <em>/**<em>*</em></em>\n<a name=\"90\" href=\"#90\">90</a>  <em>     * The size of a dot</em>\n<a name=\"91\" href=\"#91\">91</a>  <em>     */</em>\n<a name=\"92\" href=\"#92\">92</a>  \t<em class=\"comment\">//public static final int SIZE_DOT = 12;</em>\n<a name=\"93\" href=\"#93\">93</a>  \t<em>/**<em>*</em></em>\n<a name=\"94\" href=\"#94\">94</a>  <em>\t * The font size for the peer name</em>\n<a name=\"95\" href=\"#95\">95</a>  <em>\t */</em>\n<a name=\"96\" href=\"#96\">96</a>  \t<strong>public</strong> <strong>static</strong> <strong>final</strong> <strong>int</strong> SIZE_FONT_PEER = 12;\n<a name=\"97\" href=\"#97\">97</a>  \t<em>/**<em>*</em></em>\n<a name=\"98\" href=\"#98\">98</a>  <em>\t * The font size for the desciption window</em>\n<a name=\"99\" href=\"#99\">99</a>  <em>\t */</em>\n<a name=\"100\" href=\"#100\">100</a> \t<strong>public</strong> <strong>static</strong> <strong>final</strong> <strong>int</strong> SIZE_FONT_DESCRIPTION = 12;\n<a name=\"101\" href=\"#101\">101</a> \t<em>/**<em>*</em></em>\n<a name=\"102\" href=\"#102\">102</a> <em>\t * The font size for the file name</em>\n<a name=\"103\" href=\"#103\">103</a> <em>\t */</em>\n<a name=\"104\" href=\"#104\">104</a> \t<strong>public</strong> <strong>static</strong> <strong>final</strong> <strong>int</strong> SIZE_FONT_DOT = 12;\n<a name=\"105\" href=\"#105\">105</a> \t<em>/**<em>*</em></em>\n<a name=\"106\" href=\"#106\">106</a> <em>\t * The size of the outer stroke of the dot</em>\n<a name=\"107\" href=\"#107\">107</a> <em>\t */</em>\n<a name=\"108\" href=\"#108\">108</a> \t<strong>public</strong> <strong>static</strong> <strong>final</strong> String SIZE_STROKE_WIDTH = <span class=\"string\">\"0\"</span>;\n<a name=\"109\" href=\"#109\">109</a>     <em>/**<em>*</em></em>\n<a name=\"110\" href=\"#110\">110</a> <em>     * Pixels between the outer of the pie and the names of peers</em>\n<a name=\"111\" href=\"#111\">111</a> <em>\t * This number (pixels) should be based on SIZE_FONT_PEER (points)  </em>\n<a name=\"112\" href=\"#112\">112</a> <em>     */</em>\n<a name=\"113\" href=\"#113\">113</a>     <strong>public</strong> <strong>static</strong> <strong>final</strong> <strong>int</strong> SIZE_MARGIN_PEER = 20;\n<a name=\"114\" href=\"#114\">114</a>     <em>/**<em>*</em></em>\n<a name=\"115\" href=\"#115\">115</a> <em>     * Outside which ring the name of the peer should be put</em>\n<a name=\"116\" href=\"#116\">116</a> <em>\t * 0 is outside the pie, 1 is inside the colorful marker</em>\n<a name=\"117\" href=\"#117\">117</a> <em>\t * Tweak SIZE_RING_PEER and SIZE_MARGIN_PEER to increase coverage of eatable pie   </em>\n<a name=\"118\" href=\"#118\">118</a> <em>     */</em>\n<a name=\"119\" href=\"#119\">119</a>     <strong>public</strong> <strong>static</strong> <strong>final</strong> <strong>int</strong> SIZE_RING_PEER = 0;\n<a name=\"120\" href=\"#120\">120</a> \t<em>/**<em>*</em></em>\n<a name=\"121\" href=\"#121\">121</a> <em>\t * Radius of the pie, the shorter half of width and height, minus peer name</em>\n<a name=\"122\" href=\"#122\">122</a> <em>\t * Probably should convert font size (in point) to pixels </em>\n<a name=\"123\" href=\"#123\">123</a> <em>\t */</em>\n<a name=\"124\" href=\"#124\">124</a>     <strong>public</strong> <strong>static</strong> <strong>final</strong> <strong>double</strong> RADIUS = CENTER_X - SIZE_MARGIN_PEER;\n<a name=\"125\" href=\"#125\">125</a>     <em>/**<em>*</em></em>\n<a name=\"126\" href=\"#126\">126</a> <em>     * Magic number used in calculating the relative radius for each ring</em>\n<a name=\"127\" href=\"#127\">127</a> <em>     */</em>\n<a name=\"128\" href=\"#128\">128</a>     <strong>public</strong> <strong>static</strong> <strong>final</strong> <strong>double</strong> \t\tSEG_FACTOR = 27.0;\n<a name=\"129\" href=\"#129\">129</a> \n<a name=\"130\" href=\"#130\">130</a>     <em>/**<em>*</em></em>\n<a name=\"131\" href=\"#131\">131</a> <em>     * The JmDNS service type of Impromptu Pie</em>\n<a name=\"132\" href=\"#132\">132</a> <em>     */</em>\n<a name=\"133\" href=\"#133\">133</a>     <strong>public</strong> <strong>static</strong> <strong>final</strong> String \tPIE_SERVICE_TYPE = <span class=\"string\">\"_impromptu_pie._tcp.local.\"</span>;\n<a name=\"134\" href=\"#134\">134</a>     <em>/**<em>*</em></em>\n<a name=\"135\" href=\"#135\">135</a> <em>     * The Pie does not really have a port</em>\n<a name=\"136\" href=\"#136\">136</a> <em>     */</em>\n<a name=\"137\" href=\"#137\">137</a>     <strong>public</strong> <strong>static</strong> <strong>final</strong> <strong>int</strong> \tPIE_PORT_NONE = 10000;\n<a name=\"138\" href=\"#138\">138</a>     <em>/**<em>*</em></em>\n<a name=\"139\" href=\"#139\">139</a> <em>     * The secondary yancees configuration file, when we want to run the server and the client separately.</em>\n<a name=\"140\" href=\"#140\">140</a> <em>     * This is for the Pie client, since the Server/Peer is the normal way to start Impromptu and uses YANCEES_CONFIGURATION_FILE. </em>\n<a name=\"141\" href=\"#141\">141</a> <em>     */</em>\n<a name=\"142\" href=\"#142\">142</a>     <strong>public</strong> <strong>static</strong> <strong>final</strong> String YANCEES_CONFIGURATION_FILE_SECONDARY = <span class=\"string\">\"simpleLocalSienaConfigurationSecondary.xml\"</span>;\n<a name=\"143\" href=\"#143\">143</a>     \n<a name=\"144\" href=\"#144\">144</a>     <em>/**<em>*</em></em>\n<a name=\"145\" href=\"#145\">145</a> <em>     * The default size of the pie. As large as the SVG view size.</em>\n<a name=\"146\" href=\"#146\">146</a> <em>     */</em>\n<a name=\"147\" href=\"#147\">147</a>     <strong>private</strong> <strong>static</strong> Dimension \tsizePieDefault = <strong>new</strong> Dimension(SIZE_VIEW_WIDTH, SIZE_VIEW_HEIGHT);\n<a name=\"148\" href=\"#148\">148</a>     <em>/**<em>*</em></em>\n<a name=\"149\" href=\"#149\">149</a> <em>     * The size of the pie.</em>\n<a name=\"150\" href=\"#150\">150</a> <em>     */</em>\n<a name=\"151\" href=\"#151\">151</a>     <strong>private</strong> <strong>static</strong> Dimension\tsizePie;\n<a name=\"152\" href=\"#152\">152</a>     <em>/**<em>*</em></em>\n<a name=\"153\" href=\"#153\">153</a> <em>     * Get the size of the pie. Default to view size if user has not changed it.</em>\n<a name=\"154\" href=\"#154\">154</a> <em>     * </em>\n<a name=\"155\" href=\"#155\">155</a> <em>     * @return the size of the pie</em>\n<a name=\"156\" href=\"#156\">156</a> <em>     */</em>\n<a name=\"157\" href=\"#157\">157</a>     <strong>public</strong> <strong>static</strong> Dimension \tgetSize() {\n<a name=\"158\" href=\"#158\">158</a>         <strong>return</strong> sizePie;\n<a name=\"159\" href=\"#159\">159</a>     }\n<a name=\"160\" href=\"#160\">160</a> \n<a name=\"161\" href=\"#161\">161</a>     <em>/**<em>*</em></em>\n<a name=\"162\" href=\"#162\">162</a> <em>     * The default position of the pie: the upper left corner of the screen</em>\n<a name=\"163\" href=\"#163\">163</a> <em>     */</em>\n<a name=\"164\" href=\"#164\">164</a>     <strong>private</strong> <strong>static</strong> Point \t\tpositionPieDefault = <strong>new</strong> Point(0, 0);\n<a name=\"165\" href=\"#165\">165</a>     <em>/**<em>*</em></em>\n<a name=\"166\" href=\"#166\">166</a> <em>     * The upper left position of the pie.</em>\n<a name=\"167\" href=\"#167\">167</a> <em>     */</em>\n<a name=\"168\" href=\"#168\">168</a>     <strong>private</strong> <strong>static</strong> Point\t\tpositionPie;\n<a name=\"169\" href=\"#169\">169</a>     <em>/**<em>*</em></em>\n<a name=\"170\" href=\"#170\">170</a> <em>     * Get the position of the pie. Default to the upper left corner if a </em>\n<a name=\"171\" href=\"#171\">171</a> <em>     * \tuser has not changed it.</em>\n<a name=\"172\" href=\"#172\">172</a> <em>     * </em>\n<a name=\"173\" href=\"#173\">173</a> <em>     * @return the position of the pie</em>\n<a name=\"174\" href=\"#174\">174</a> <em>     */</em>\n<a name=\"175\" href=\"#175\">175</a>     <strong>public</strong> <strong>static</strong> Point \t\tgetPosition() {\n<a name=\"176\" href=\"#176\">176</a>         <strong>return</strong> positionPie;\n<a name=\"177\" href=\"#177\">177</a>     }\n<a name=\"178\" href=\"#178\">178</a> \n<a name=\"179\" href=\"#179\">179</a>     <em>/**<em>*</em></em>\n<a name=\"180\" href=\"#180\">180</a> <em>     * The color for the local peer </em>\n<a name=\"181\" href=\"#181\">181</a> <em>     */</em>\n<a name=\"182\" href=\"#182\">182</a>     <strong>public</strong>  <strong>static</strong> <strong>final</strong> String PIE_COLOR_DEFAULT = <span class=\"string\">\"\"</span>;\n<a name=\"183\" href=\"#183\">183</a>     <strong>private</strong> <strong>static</strong> String pieColor = PIE_COLOR_DEFAULT;\n<a name=\"184\" href=\"#184\">184</a>     <em>/**<em>*</em></em>\n<a name=\"185\" href=\"#185\">185</a> <em>     * Get the color for the local peer</em>\n<a name=\"186\" href=\"#186\">186</a> <em>     *  </em>\n<a name=\"187\" href=\"#187\">187</a> <em>     * @return the color for the local peer. </em>\n<a name=\"188\" href=\"#188\">188</a> <em>     */</em>\n<a name=\"189\" href=\"#189\">189</a>     <strong>public</strong> <strong>static</strong> String getPieColor() {\n<a name=\"190\" href=\"#190\">190</a> \t    <strong>return</strong> pieColor;\n<a name=\"191\" href=\"#191\">191</a>     }\n<a name=\"192\" href=\"#192\">192</a>     <em>/**<em>*</em></em>\n<a name=\"193\" href=\"#193\">193</a> <em>     * Get the rgb bytes for the color for the local peer</em>\n<a name=\"194\" href=\"#194\">194</a> <em>     *  </em>\n<a name=\"195\" href=\"#195\">195</a> <em>     * @return null if there is no color, a three byte array of [rr][gg][bb] if there is one. </em>\n<a name=\"196\" href=\"#196\">196</a> <em>     */</em>\n<a name=\"197\" href=\"#197\">197</a>     <strong>public</strong> <strong>static</strong> byte[] getPieColorBytes() {\n<a name=\"198\" href=\"#198\">198</a>         byte[]\tresult = <strong>null</strong>;\n<a name=\"199\" href=\"#199\">199</a> \t    <strong>if</strong>(!PIE_COLOR_DEFAULT.equals(pieColor)) {\n<a name=\"200\" href=\"#200\">200</a> \t        Color\tc = PieUtils.getColorFromString(pieColor);\n<a name=\"201\" href=\"#201\">201</a> \t        <strong>if</strong> (c != <strong>null</strong>) {\n<a name=\"202\" href=\"#202\">202</a> \t            result = <strong>new</strong> byte[] { (byte)c.getRed(), (byte)c.getGreen(), (byte)c.getBlue()};\n<a name=\"203\" href=\"#203\">203</a> \t        }\n<a name=\"204\" href=\"#204\">204</a> \t    }\n<a name=\"205\" href=\"#205\">205</a> \t    <strong>return</strong> result;\n<a name=\"206\" href=\"#206\">206</a>     }\n<a name=\"207\" href=\"#207\">207</a>     \n<a name=\"208\" href=\"#208\">208</a>     <em>/**<em>*</em></em>\n<a name=\"209\" href=\"#209\">209</a> <em>     * Outside which ring the name of the peer should be put</em>\n<a name=\"210\" href=\"#210\">210</a> <em>     */</em>\n<a name=\"211\" href=\"#211\">211</a>     <strong>private</strong> <strong>static</strong> <strong>int</strong>\t\tsizeRingPeer = SIZE_RING_PEER;\n<a name=\"212\" href=\"#212\">212</a>     <em>/**<em>*</em></em>\n<a name=\"213\" href=\"#213\">213</a> <em>     * Get outside which ring the name of the peer should be put</em>\n<a name=\"214\" href=\"#214\">214</a> <em>     * </em>\n<a name=\"215\" href=\"#215\">215</a> <em>     * @return 0 if the name is outside the pie, 1 if the name is inside the </em>\n<a name=\"216\" href=\"#216\">216</a> <em>     * colorful marker</em>\n<a name=\"217\" href=\"#217\">217</a> <em>     */</em>\n<a name=\"218\" href=\"#218\">218</a>     <strong>public</strong> <strong>static</strong> <strong>int</strong> \t\tgetSizeRingPeer() {\n<a name=\"219\" href=\"#219\">219</a>         <strong>return</strong> sizeRingPeer;\n<a name=\"220\" href=\"#220\">220</a>     }\n<a name=\"221\" href=\"#221\">221</a> \n<a name=\"222\" href=\"#222\">222</a>     <em class=\"comment\">// The following three properties are just to uniformally save pie's properties</em>\n<a name=\"223\" href=\"#223\">223</a>     <em class=\"comment\">// So any changable UI settings are saved </em>\n<a name=\"224\" href=\"#224\">224</a>     <strong>private</strong> <strong>static</strong> <strong>boolean</strong>  showDescriptionDefault = <strong>true</strong>;\n<a name=\"225\" href=\"#225\">225</a>     <strong>private</strong> <strong>static</strong> <strong>boolean</strong>\tshowDescription = showDescriptionDefault;\n<a name=\"226\" href=\"#226\">226</a>     <em>/**<em>*</em></em>\n<a name=\"227\" href=\"#227\">227</a> <em>     * Get whether the description window is enabled</em>\n<a name=\"228\" href=\"#228\">228</a> <em>     * </em>\n<a name=\"229\" href=\"#229\">229</a> <em>     * @return true if enabled, false if disabled</em>\n<a name=\"230\" href=\"#230\">230</a> <em>     */</em>\n<a name=\"231\" href=\"#231\">231</a>     <strong>public</strong> <strong>static</strong> <strong>boolean</strong> getShowDescription() {\n<a name=\"232\" href=\"#232\">232</a>         <strong>return</strong> showDescription;\n<a name=\"233\" href=\"#233\">233</a>     }\n<a name=\"234\" href=\"#234\">234</a>     \n<a name=\"235\" href=\"#235\">235</a>     <strong>private</strong> <strong>static</strong> <strong>boolean</strong> followDotDefault = <strong>true</strong>;\n<a name=\"236\" href=\"#236\">236</a>     <strong>private</strong> <strong>static</strong> <strong>boolean</strong> followDot = followDotDefault;\n<a name=\"237\" href=\"#237\">237</a>     <em>/**<em>*</em></em>\n<a name=\"238\" href=\"#238\">238</a> <em>     * Get whether the description window should follow the dot</em>\n<a name=\"239\" href=\"#239\">239</a> <em>     * </em>\n<a name=\"240\" href=\"#240\">240</a> <em>     * @return true to follow, false not to follow</em>\n<a name=\"241\" href=\"#241\">241</a> <em>     */</em>\n<a name=\"242\" href=\"#242\">242</a>     <strong>public</strong> <strong>static</strong> <strong>boolean</strong> getFollowDot() {\n<a name=\"243\" href=\"#243\">243</a>         <strong>return</strong> followDot;\n<a name=\"244\" href=\"#244\">244</a>     }\n<a name=\"245\" href=\"#245\">245</a> \n<a name=\"246\" href=\"#246\">246</a>     <strong>private</strong> <strong>static</strong> <strong>boolean</strong> dragWithDelegateDefault = false;\n<a name=\"247\" href=\"#247\">247</a>     <strong>private</strong> <strong>static</strong> <strong>boolean</strong> dragWithDelegate = dragWithDelegateDefault;\n<a name=\"248\" href=\"#248\">248</a>     <em>/**<em>*</em></em>\n<a name=\"249\" href=\"#249\">249</a> <em>     * Get whether to use a delgate for dragging</em>\n<a name=\"250\" href=\"#250\">250</a> <em>     *  </em>\n<a name=\"251\" href=\"#251\">251</a> <em>     * @return true for using a delegate, false for using the dot directly</em>\n<a name=\"252\" href=\"#252\">252</a> <em>     */</em>\n<a name=\"253\" href=\"#253\">253</a>     <strong>public</strong> <strong>static</strong> <strong>boolean</strong> getDragWithDelegate() {\n<a name=\"254\" href=\"#254\">254</a>         <strong>return</strong> dragWithDelegate;\n<a name=\"255\" href=\"#255\">255</a>     }\n<a name=\"256\" href=\"#256\">256</a> \n<a name=\"257\" href=\"#257\">257</a>     <strong>private</strong> <strong>static</strong> String \tdestinationDrive = Platform.getDestinationDriveDefault();\n<a name=\"258\" href=\"#258\">258</a>     <em>/**<em>*</em></em>\n<a name=\"259\" href=\"#259\">259</a> <em>     * Get the drive letter or the mount point</em>\n<a name=\"260\" href=\"#260\">260</a> <em>     *  </em>\n<a name=\"261\" href=\"#261\">261</a> <em>     * @return the drive letter or the mount point </em>\n<a name=\"262\" href=\"#262\">262</a> <em>     */</em>\n<a name=\"263\" href=\"#263\">263</a>     <strong>public</strong> <strong>static</strong> String \tgetDestinationDrive() {\n<a name=\"264\" href=\"#264\">264</a> \t    <strong>return</strong> destinationDrive;\n<a name=\"265\" href=\"#265\">265</a>     }\n<a name=\"266\" href=\"#266\">266</a>     <em>/**<em>*</em></em>\n<a name=\"267\" href=\"#267\">267</a> <em>     * Set the drive letter or the mount point</em>\n<a name=\"268\" href=\"#268\">268</a> <em>     *  </em>\n<a name=\"269\" href=\"#269\">269</a> <em>     * @param newDestinationDrive the new drive letter or the mount point </em>\n<a name=\"270\" href=\"#270\">270</a> <em>     */</em>\n<a name=\"271\" href=\"#271\">271</a>     <strong>public</strong> <strong>static</strong> <strong>void</strong> \tsetDestinationDrive(String newDestinationDrive) {\n<a name=\"272\" href=\"#272\">272</a> \t    destinationDrive = newDestinationDrive;\n<a name=\"273\" href=\"#273\">273</a>     }\n<a name=\"274\" href=\"#274\">274</a>     \n<a name=\"275\" href=\"#275\">275</a>     <em>/**<em>*</em></em>\n<a name=\"276\" href=\"#276\">276</a> <em>     * The impromptu context</em>\n<a name=\"277\" href=\"#277\">277</a> <em>     */</em>\n<a name=\"278\" href=\"#278\">278</a>     <strong>private</strong> <strong>static</strong> String impromptuContext = \n<a name=\"279\" href=\"#279\">279</a>         edu.uci.isr.impromptu.common.Configuration.CONTEXT_PATH;\n<a name=\"280\" href=\"#280\">280</a>     <strong>public</strong> <strong>static</strong> String getImpromptuContext() {\n<a name=\"281\" href=\"#281\">281</a>         <em class=\"comment\">// if impromptuProxy is set, this will be derived from it</em>\n<a name=\"282\" href=\"#282\">282</a>         <strong>return</strong> impromptuContext;\n<a name=\"283\" href=\"#283\">283</a>     }\n<a name=\"284\" href=\"#284\">284</a>     \n<a name=\"285\" href=\"#285\">285</a>     <em>/**<em>*</em></em>\n<a name=\"286\" href=\"#286\">286</a> <em>     * The URL used to connect the pie to the proxy </em>\n<a name=\"287\" href=\"#287\">287</a> <em>     */</em>\n<a name=\"288\" href=\"#288\">288</a>     <strong>private</strong> <strong>static</strong> String impromptuProxyDefault = <span class=\"string\">\"http://localhost\"</span> + \n<a name=\"289\" href=\"#289\">289</a>     \t\tedu.uci.isr.impromptu.common.Configuration.CONTEXT_PATH;\n<a name=\"290\" href=\"#290\">290</a>     <strong>static</strong> {\n<a name=\"291\" href=\"#291\">291</a> \t    <strong>if</strong>(System.getProperty(<span class=\"string\">\"os.name\"</span>).indexOf(<span class=\"string\">\"Mac\"</span>) != -1) {\n<a name=\"292\" href=\"#292\">292</a> \t        impromptuProxyDefault = <span class=\"string\">\"http://localhost:8080\"</span> + \n<a name=\"293\" href=\"#293\">293</a> \t                edu.uci.isr.impromptu.common.Configuration.CONTEXT_PATH;\n<a name=\"294\" href=\"#294\">294</a> \t    }\n<a name=\"295\" href=\"#295\">295</a>     }\n<a name=\"296\" href=\"#296\">296</a>     <strong>private</strong> <strong>static</strong> String impromptuProxy = impromptuProxyDefault;\n<a name=\"297\" href=\"#297\">297</a>     <em>/**<em>*</em></em>\n<a name=\"298\" href=\"#298\">298</a> <em>     * Get the URL for the impromptu proxy</em>\n<a name=\"299\" href=\"#299\">299</a> <em>     *  </em>\n<a name=\"300\" href=\"#300\">300</a> <em>     * @return the URL for the impromptu proxy. </em>\n<a name=\"301\" href=\"#301\">301</a> <em>     */</em>\n<a name=\"302\" href=\"#302\">302</a>     <strong>public</strong> <strong>static</strong> String getImpromptuProxy() {\n<a name=\"303\" href=\"#303\">303</a> \t    <strong>return</strong> impromptuProxy;\n<a name=\"304\" href=\"#304\">304</a>     }\n<a name=\"305\" href=\"#305\">305</a>     \n<a name=\"306\" href=\"#306\">306</a>     <strong>private</strong> <strong>static</strong> <strong>boolean</strong> showExtraMenusDefault = <strong>true</strong>;\n<a name=\"307\" href=\"#307\">307</a>     <strong>private</strong> <strong>static</strong> <strong>boolean</strong> showExtraMenus = showExtraMenusDefault;\n<a name=\"308\" href=\"#308\">308</a>     <em>/**<em>*</em></em>\n<a name=\"309\" href=\"#309\">309</a> <em>     * Get whether to show extra menus</em>\n<a name=\"310\" href=\"#310\">310</a> <em>     *  </em>\n<a name=\"311\" href=\"#311\">311</a> <em>     * @return true for showing extra menus, false for hiding</em>\n<a name=\"312\" href=\"#312\">312</a> <em>     */</em>\n<a name=\"313\" href=\"#313\">313</a>     <strong>public</strong> <strong>static</strong> <strong>boolean</strong> showExtraMenus() {\n<a name=\"314\" href=\"#314\">314</a>         <em class=\"comment\">// only to be set from .properties, not to be set and saved from UI</em>\n<a name=\"315\" href=\"#315\">315</a>         <strong>return</strong> showExtraMenus;\n<a name=\"316\" href=\"#316\">316</a>     }\n<a name=\"317\" href=\"#317\">317</a>     \n<a name=\"318\" href=\"#318\">318</a>     <em class=\"comment\">// Names of properties</em>\n<a name=\"319\" href=\"#319\">319</a>     <em>/**<em>*</em></em>\n<a name=\"320\" href=\"#320\">320</a> <em>     * The attribute to save the width of the pie </em>\n<a name=\"321\" href=\"#321\">321</a> <em>     */</em>\n<a name=\"322\" href=\"#322\">322</a>     <strong>private</strong> <strong>static</strong> String\t\tATTR_WINDOW_WIDTH = <span class=\"string\">\"impromptu.pie.width\"</span>;\n<a name=\"323\" href=\"#323\">323</a>     <em>/**<em>*</em></em>\n<a name=\"324\" href=\"#324\">324</a> <em>     * The attribute to save the height of the pie </em>\n<a name=\"325\" href=\"#325\">325</a> <em>     */</em>\n<a name=\"326\" href=\"#326\">326</a>     <strong>private</strong> <strong>static</strong> String\t\tATTR_WINDOW_HEIGHT = <span class=\"string\">\"impromptu.pie.height\"</span>;\n<a name=\"327\" href=\"#327\">327</a>     <em>/**<em>*</em></em>\n<a name=\"328\" href=\"#328\">328</a> <em>     * The attribute to save the x position of of the pie </em>\n<a name=\"329\" href=\"#329\">329</a> <em>     */</em>\n<a name=\"330\" href=\"#330\">330</a>     <strong>private</strong> <strong>static</strong> String\t\tATTR_WINDOW_X = <span class=\"string\">\"impromptu.pie.x\"</span>;\n<a name=\"331\" href=\"#331\">331</a>     <em>/**<em>*</em></em>\n<a name=\"332\" href=\"#332\">332</a> <em>     * The attribute to save the y position of the pie </em>\n<a name=\"333\" href=\"#333\">333</a> <em>     */</em>\n<a name=\"334\" href=\"#334\">334</a>     <strong>private</strong> <strong>static</strong> String\t\tATTR_WINDOW_Y = <span class=\"string\">\"impromptu.pie.y\"</span>;\n<a name=\"335\" href=\"#335\">335</a>     <em>/**<em>*</em></em>\n<a name=\"336\" href=\"#336\">336</a> <em>     * The attribute to save the color of the local peer</em>\n<a name=\"337\" href=\"#337\">337</a> <em>     */</em>\n<a name=\"338\" href=\"#338\">338</a>     <strong>public</strong> <strong>static</strong> String\t\tATTR_PIE_COLOR = <span class=\"string\">\"impromptu.pie.color\"</span>;\n<a name=\"339\" href=\"#339\">339</a>     <em>/**<em>*</em></em>\n<a name=\"340\" href=\"#340\">340</a> <em>     * The attribute to save the name position relative to the ring </em>\n<a name=\"341\" href=\"#341\">341</a> <em>     */</em>\n<a name=\"342\" href=\"#342\">342</a>     <strong>private</strong> <strong>static</strong> String\t\tATTR_RING = <span class=\"string\">\"impromptu.pie.nameOutsideRing\"</span>;\n<a name=\"343\" href=\"#343\">343</a>     <em>/**<em>*</em></em>\n<a name=\"344\" href=\"#344\">344</a> <em>     * The attribute to save whether showing the description window </em>\n<a name=\"345\" href=\"#345\">345</a> <em>     */</em>\n<a name=\"346\" href=\"#346\">346</a>     <strong>private</strong> <strong>static</strong> String\t\tATTR_SHOW_DESCRIPTION = <span class=\"string\">\"impromptu.pie.showDescriptionWindow\"</span>;\n<a name=\"347\" href=\"#347\">347</a>     <em>/**<em>*</em></em>\n<a name=\"348\" href=\"#348\">348</a> <em>     * The attribute to save whether the description should follow a dot </em>\n<a name=\"349\" href=\"#349\">349</a> <em>     */</em>\n<a name=\"350\" href=\"#350\">350</a>     <strong>private</strong> <strong>static</strong> String\t\tATTR_FOLLOW_DOT = <span class=\"string\">\"impromptu.pie.followDot\"</span>;\n<a name=\"351\" href=\"#351\">351</a>     <em>/**<em>*</em></em>\n<a name=\"352\" href=\"#352\">352</a> <em>     * The attribute to save whether to drag with delegate </em>\n<a name=\"353\" href=\"#353\">353</a> <em>     */</em>\n<a name=\"354\" href=\"#354\">354</a>     <strong>private</strong> <strong>static</strong> String\t\tATTR_DRAG_DELEGATE = <span class=\"string\">\"impromptu.pie.dragWithDelegate\"</span>;\n<a name=\"355\" href=\"#355\">355</a>     <em>/**<em>*</em></em>\n<a name=\"356\" href=\"#356\">356</a> <em>     * The attribute to save whether to show extra menus </em>\n<a name=\"357\" href=\"#357\">357</a> <em>     */</em>\n<a name=\"358\" href=\"#358\">358</a>     <strong>private</strong> <strong>static</strong> String\t\tATTR_SHOW_EXTRA = <span class=\"string\">\"impromptu.pie.showExtraMenus\"</span>;\n<a name=\"359\" href=\"#359\">359</a>     <em>/**<em>*</em></em>\n<a name=\"360\" href=\"#360\">360</a> <em>     * The attribute to save the URL of the Impromptu proxy </em>\n<a name=\"361\" href=\"#361\">361</a> <em>     */</em>\n<a name=\"362\" href=\"#362\">362</a>     <strong>private</strong> <strong>static</strong> String\t\tATTR_IMPROMPTU_PROXY = <span class=\"string\">\"impromptu.pie.proxy\"</span>;\n<a name=\"363\" href=\"#363\">363</a>     <em>/**<em>*</em></em>\n<a name=\"364\" href=\"#364\">364</a> <em>     * The attribute to save the Impromptu drive or mount point</em>\n<a name=\"365\" href=\"#365\">365</a> <em>     */</em>\n<a name=\"366\" href=\"#366\">366</a>     <strong>private</strong> <strong>static</strong> String\t\tATTR_IMPROMPTU_DRIVE = <span class=\"string\">\"impromptu.pie.drive\"</span>;\n<a name=\"367\" href=\"#367\">367</a> \n<a name=\"368\" href=\"#368\">368</a>     <em class=\"comment\">// save the loaded properties</em>\n<a name=\"369\" href=\"#369\">369</a>     <strong>private</strong> <strong>static</strong> Properties\timpromptuProperties = <strong>new</strong> Properties();\n<a name=\"370\" href=\"#370\">370</a>     <strong>static</strong> {\n<a name=\"371\" href=\"#371\">371</a>         <strong>try</strong> {\n<a name=\"372\" href=\"#372\">372</a>             InputStream is = Configuration.<strong>class</strong>.getClassLoader().getResourceAsStream(\n<a name=\"373\" href=\"#373\">373</a>                     edu.uci.isr.impromptu.common.Configuration.PROPERTY_FILE);\n<a name=\"374\" href=\"#374\">374</a>             <strong>if</strong> (is != <strong>null</strong>) {\n<a name=\"375\" href=\"#375\">375</a> \t            impromptuProperties.load(is);\n<a name=\"376\" href=\"#376\">376</a> \t            \n<a name=\"377\" href=\"#377\">377</a> \t            <strong>try</strong> {\n<a name=\"378\" href=\"#378\">378</a> \t\t            <em class=\"comment\">// get pie window size</em>\n<a name=\"379\" href=\"#379\">379</a> \t\t            String sizeWidth = impromptuProperties.getProperty(ATTR_WINDOW_WIDTH, \n<a name=\"380\" href=\"#380\">380</a> \t\t            \t\tString.valueOf(SIZE_VIEW_WIDTH));\n<a name=\"381\" href=\"#381\">381</a> \t\t            String\tsizeHeight = impromptuProperties.getProperty(ATTR_WINDOW_HEIGHT, \n<a name=\"382\" href=\"#382\">382</a> \t            \t\t\tString.valueOf(SIZE_VIEW_HEIGHT));\n<a name=\"383\" href=\"#383\">383</a> \t\t            <strong>int</strong>\t\twidth = Integer.parseInt(sizeWidth);\n<a name=\"384\" href=\"#384\">384</a> \t\t            <strong>int</strong>\t\theight = Integer.parseInt(sizeHeight);\n<a name=\"385\" href=\"#385\">385</a> \t\t            sizePie = <strong>new</strong> Dimension(width, height);\n<a name=\"386\" href=\"#386\">386</a> \t            }\n<a name=\"387\" href=\"#387\">387</a> \t            <strong>catch</strong> (NumberFormatException nfe) {\n<a name=\"388\" href=\"#388\">388</a> \t                sizePie = sizePieDefault;\n<a name=\"389\" href=\"#389\">389</a> \t            }\n<a name=\"390\" href=\"#390\">390</a> \n<a name=\"391\" href=\"#391\">391</a> \t            <strong>try</strong> {\n<a name=\"392\" href=\"#392\">392</a> \t\t            <em class=\"comment\">// get pie window position</em>\n<a name=\"393\" href=\"#393\">393</a> \t\t            String sX = impromptuProperties.getProperty(ATTR_WINDOW_X, <span class=\"string\">\"0\"</span>); \n<a name=\"394\" href=\"#394\">394</a> \t\t            String\tsY = impromptuProperties.getProperty(ATTR_WINDOW_Y, <span class=\"string\">\"0\"</span>); \n<a name=\"395\" href=\"#395\">395</a> \t\t            <strong>int</strong>\t\tx = Integer.parseInt(sX);\n<a name=\"396\" href=\"#396\">396</a> \t\t            <strong>int</strong>\t\ty = Integer.parseInt(sY);\n<a name=\"397\" href=\"#397\">397</a> \t\t            positionPie = <strong>new</strong> Point(x, y);\n<a name=\"398\" href=\"#398\">398</a> \t            }\n<a name=\"399\" href=\"#399\">399</a> \t            <strong>catch</strong> (NumberFormatException nfe) {\n<a name=\"400\" href=\"#400\">400</a> \t                positionPie = positionPieDefault;\n<a name=\"401\" href=\"#401\">401</a> \t            }\n<a name=\"402\" href=\"#402\">402</a> \n<a name=\"403\" href=\"#403\">403</a> \t            <em class=\"comment\">// get the pie color</em>\n<a name=\"404\" href=\"#404\">404</a> \t            pieColor = impromptuProperties.getProperty(ATTR_PIE_COLOR, \n<a name=\"405\" href=\"#405\">405</a> \t                    PIE_COLOR_DEFAULT); \n<a name=\"406\" href=\"#406\">406</a> \n<a name=\"407\" href=\"#407\">407</a> \t            <strong>try</strong> {\n<a name=\"408\" href=\"#408\">408</a> \t\t            <em class=\"comment\">// get the name ring</em>\n<a name=\"409\" href=\"#409\">409</a> \t\t            String ring = impromptuProperties.getProperty(ATTR_RING, \n<a name=\"410\" href=\"#410\">410</a> \t\t                    String.valueOf(SIZE_RING_PEER)); \n<a name=\"411\" href=\"#411\">411</a> \t\t            sizeRingPeer = Integer.parseInt(ring);\n<a name=\"412\" href=\"#412\">412</a> \t            }\n<a name=\"413\" href=\"#413\">413</a> \t            <strong>catch</strong> (NumberFormatException nfe) {\n<a name=\"414\" href=\"#414\">414</a> \t                sizeRingPeer = SIZE_RING_PEER;\n<a name=\"415\" href=\"#415\">415</a> \t            }\n<a name=\"416\" href=\"#416\">416</a> \n<a name=\"417\" href=\"#417\">417</a> \t            <em class=\"comment\">// get showing description window</em>\n<a name=\"418\" href=\"#418\">418</a> \t            String show = impromptuProperties.getProperty(ATTR_SHOW_DESCRIPTION, \n<a name=\"419\" href=\"#419\">419</a> \t                    String.valueOf(showDescriptionDefault)); \n<a name=\"420\" href=\"#420\">420</a> \t            showDescription = Boolean.valueOf(show).booleanValue();\n<a name=\"421\" href=\"#421\">421</a> \t            <em class=\"comment\">// get following dot</em>\n<a name=\"422\" href=\"#422\">422</a> \t            String follow = impromptuProperties.getProperty(ATTR_FOLLOW_DOT, \n<a name=\"423\" href=\"#423\">423</a> \t                    String.valueOf(followDotDefault)); \n<a name=\"424\" href=\"#424\">424</a> \t            followDot = Boolean.valueOf(follow).booleanValue();\n<a name=\"425\" href=\"#425\">425</a> \t            <em class=\"comment\">// get dragging with delegate</em>\n<a name=\"426\" href=\"#426\">426</a> \t            String drag = impromptuProperties.getProperty(ATTR_DRAG_DELEGATE, \n<a name=\"427\" href=\"#427\">427</a> \t                    String.valueOf(dragWithDelegateDefault)); \n<a name=\"428\" href=\"#428\">428</a> \t            dragWithDelegate = Boolean.valueOf(drag).booleanValue();\n<a name=\"429\" href=\"#429\">429</a> \t            <em class=\"comment\">// get showing extra menus</em>\n<a name=\"430\" href=\"#430\">430</a> \t            String extra = impromptuProperties.getProperty(ATTR_SHOW_EXTRA, \n<a name=\"431\" href=\"#431\">431</a> \t                    String.valueOf(showExtraMenusDefault)); \n<a name=\"432\" href=\"#432\">432</a> \t            showExtraMenus = Boolean.valueOf(extra).booleanValue();\n<a name=\"433\" href=\"#433\">433</a> \n<a name=\"434\" href=\"#434\">434</a> \t            <em class=\"comment\">// get the Impromptu proxy</em>\n<a name=\"435\" href=\"#435\">435</a>                 impromptuProxy = impromptuProperties.getProperty(ATTR_IMPROMPTU_PROXY, \n<a name=\"436\" href=\"#436\">436</a>                     impromptuProxyDefault);\n<a name=\"437\" href=\"#437\">437</a> \n<a name=\"438\" href=\"#438\">438</a> \t            <em class=\"comment\">// get the Impromptu context, if the proxy is set</em>\n<a name=\"439\" href=\"#439\">439</a> \t            <strong>if</strong> (!impromptuProxy.equals(impromptuProxyDefault)) {\n<a name=\"440\" href=\"#440\">440</a> \t                <em class=\"comment\">// assume an http://host/context format</em>\n<a name=\"441\" href=\"#441\">441</a> \t                HttpURL\t\tproxy = <strong>new</strong> HttpURL(impromptuProxy);\n<a name=\"442\" href=\"#442\">442</a> \t                <strong>if</strong> (proxy.getPath() != <strong>null</strong> &amp;&amp; !<span class=\"string\">\"/\"</span>.equals(proxy.getPath()))\n<a name=\"443\" href=\"#443\">443</a> \t                    impromptuContext = proxy.getPath();\n<a name=\"444\" href=\"#444\">444</a> \t            }\n<a name=\"445\" href=\"#445\">445</a> \n<a name=\"446\" href=\"#446\">446</a> \t            <em class=\"comment\">// get the Impromptu drive</em>\n<a name=\"447\" href=\"#447\">447</a> \t            destinationDrive = impromptuProperties.getProperty(ATTR_IMPROMPTU_DRIVE, \n<a name=\"448\" href=\"#448\">448</a> \t                    Platform.getDestinationDriveDefault()); \n<a name=\"449\" href=\"#449\">449</a>             }\n<a name=\"450\" href=\"#450\">450</a>         }\n<a name=\"451\" href=\"#451\">451</a>         <strong>catch</strong> (IOException e) {\n<a name=\"452\" href=\"#452\">452</a>             Utils.handleException(e);\n<a name=\"453\" href=\"#453\">453</a>         }\n<a name=\"454\" href=\"#454\">454</a>     }\n<a name=\"455\" href=\"#455\">455</a> \n<a name=\"456\" href=\"#456\">456</a>     <em>/**<em>*</em></em>\n<a name=\"457\" href=\"#457\">457</a> <em>     * Save the pie window size and position</em>\n<a name=\"458\" href=\"#458\">458</a> <em>     * @param\tf\tthe frame of the pie</em>\n<a name=\"459\" href=\"#459\">459</a> <em>     * @param   canvas the canvas for the pie</em>\n<a name=\"460\" href=\"#460\">460</a> <em>     * @param \tp   the pie</em>\n<a name=\"461\" href=\"#461\">461</a> <em>     */</em>\n<a name=\"462\" href=\"#462\">462</a>     <strong>public</strong> <strong>static</strong> <strong>void</strong> saveSwing(JFrame f, JSVGCanvas canvas, <a href=\"../../../../../edu/uci/isr/impromptu/pie/Pie.html\">Pie</a> p) {\n<a name=\"463\" href=\"#463\">463</a>         <strong>try</strong> {\n<a name=\"464\" href=\"#464\">464</a>             <em class=\"comment\">// we can get the property with getResourceAsStream, but we need a file name to save it</em>\n<a name=\"465\" href=\"#465\">465</a> \t        FileOutputStream out = <strong>new</strong> FileOutputStream(<span class=\"string\">\"etc\"</span> + System.getProperty(<span class=\"string\">\"file.separator\"</span>) +\n<a name=\"466\" href=\"#466\">466</a> \t                edu.uci.isr.impromptu.common.Configuration.PROPERTY_FILE);\n<a name=\"467\" href=\"#467\">467</a> \t        <em class=\"comment\">// keep other loaded properties, only change what we control</em>\n<a name=\"468\" href=\"#468\">468</a> \t        impromptuProperties.put(ATTR_WINDOW_WIDTH, String.valueOf(canvas.getWidth()));\n<a name=\"469\" href=\"#469\">469</a> \t        impromptuProperties.put(ATTR_WINDOW_HEIGHT, String.valueOf(canvas.getHeight()));\n<a name=\"470\" href=\"#470\">470</a> \t        impromptuProperties.put(ATTR_WINDOW_X, String.valueOf(f.getX()));\n<a name=\"471\" href=\"#471\">471</a> \t        impromptuProperties.put(ATTR_WINDOW_Y, String.valueOf(f.getY()));\n<a name=\"472\" href=\"#472\">472</a> \t        impromptuProperties.put(ATTR_PIE_COLOR, p.getLocalColor());\n<a name=\"473\" href=\"#473\">473</a> \t        impromptuProperties.put(ATTR_SHOW_DESCRIPTION, String.valueOf(p.getShowDescription()));\n<a name=\"474\" href=\"#474\">474</a> \t        impromptuProperties.put(ATTR_FOLLOW_DOT, String.valueOf(p.getFollowDot()));\n<a name=\"475\" href=\"#475\">475</a> \t        impromptuProperties.put(ATTR_DRAG_DELEGATE, String.valueOf(p.getDragWithDelegate()));\n<a name=\"476\" href=\"#476\">476</a> \t        impromptuProperties.put(ATTR_IMPROMPTU_PROXY, p.getImpromptuProxy());\n<a name=\"477\" href=\"#477\">477</a> \t        impromptuProperties.put(ATTR_IMPROMPTU_DRIVE, p.getImpromptuDrive());\n<a name=\"478\" href=\"#478\">478</a> \t        impromptuProperties.store(out, <span class=\"string\">\"Impromptu Properties\"</span>);\n<a name=\"479\" href=\"#479\">479</a> \t        out.close();\n<a name=\"480\" href=\"#480\">480</a> \t\t}\n<a name=\"481\" href=\"#481\">481</a> \t\t<strong>catch</strong> (IOException e) {\n<a name=\"482\" href=\"#482\">482</a> \t\t    Utils.handleException(e);\n<a name=\"483\" href=\"#483\">483</a> \t\t}\n<a name=\"484\" href=\"#484\">484</a>     }\n<a name=\"485\" href=\"#485\">485</a> \n<a name=\"486\" href=\"#486\">486</a>     <em>/**<em>*</em></em>\n<a name=\"487\" href=\"#487\">487</a> <em>     * Save the pie window size and position</em>\n<a name=\"488\" href=\"#488\">488</a> <em>     * @param\tf\tthe frame of the pie</em>\n<a name=\"489\" href=\"#489\">489</a> <em>     * @param   canvas the canvas for the pie</em>\n<a name=\"490\" href=\"#490\">490</a> <em>     * @param \tp   the pie</em>\n<a name=\"491\" href=\"#491\">491</a> <em>     */</em>\n<a name=\"492\" href=\"#492\">492</a>     <strong>public</strong> <strong>static</strong> <strong>void</strong> saveSWT(Shell f, <a href=\"../../../../../edu/uci/isr/impromptu/pie/InteractiveSVGCanvas.html\">InteractiveSVGCanvas</a> canvas, <a href=\"../../../../../edu/uci/isr/impromptu/pie/Pie.html\">Pie</a> p) {\n<a name=\"493\" href=\"#493\">493</a>         <strong>try</strong> {\n<a name=\"494\" href=\"#494\">494</a>             <em class=\"comment\">// we can get the property with getResourceAsStream, but we need a file name to save it</em>\n<a name=\"495\" href=\"#495\">495</a> \t        FileOutputStream out = <strong>new</strong> FileOutputStream(<span class=\"string\">\"etc\"</span> + System.getProperty(<span class=\"string\">\"file.separator\"</span>) +\n<a name=\"496\" href=\"#496\">496</a> \t                edu.uci.isr.impromptu.common.Configuration.PROPERTY_FILE);\n<a name=\"497\" href=\"#497\">497</a> \t        <em class=\"comment\">// keep other loaded properties, only change what we control</em>\n<a name=\"498\" href=\"#498\">498</a> \t        impromptuProperties.put(ATTR_WINDOW_WIDTH, String.valueOf(canvas.getSize().x));\n<a name=\"499\" href=\"#499\">499</a> \t        impromptuProperties.put(ATTR_WINDOW_HEIGHT, String.valueOf(canvas.getSize().y));\n<a name=\"500\" href=\"#500\">500</a> \t        impromptuProperties.put(ATTR_WINDOW_X, String.valueOf(f.getLocation().x));\n<a name=\"501\" href=\"#501\">501</a> \t        impromptuProperties.put(ATTR_WINDOW_Y, String.valueOf(f.getLocation().y));\n<a name=\"502\" href=\"#502\">502</a> \t        impromptuProperties.put(ATTR_PIE_COLOR, p.getLocalColor());\n<a name=\"503\" href=\"#503\">503</a> \t        impromptuProperties.put(ATTR_SHOW_DESCRIPTION, String.valueOf(p.getShowDescription()));\n<a name=\"504\" href=\"#504\">504</a> \t        impromptuProperties.put(ATTR_FOLLOW_DOT, String.valueOf(p.getFollowDot()));\n<a name=\"505\" href=\"#505\">505</a> \t        impromptuProperties.put(ATTR_DRAG_DELEGATE, String.valueOf(p.getDragWithDelegate()));\n<a name=\"506\" href=\"#506\">506</a> \t        impromptuProperties.put(ATTR_IMPROMPTU_PROXY, p.getImpromptuProxy());\n<a name=\"507\" href=\"#507\">507</a> \t        impromptuProperties.put(ATTR_IMPROMPTU_DRIVE, p.getImpromptuDrive());\n<a name=\"508\" href=\"#508\">508</a> \t        impromptuProperties.store(out, <span class=\"string\">\"Impromptu Properties\"</span>);\n<a name=\"509\" href=\"#509\">509</a> \t        out.close();\n<a name=\"510\" href=\"#510\">510</a> \t\t}\n<a name=\"511\" href=\"#511\">511</a> \t\t<strong>catch</strong> (IOException e) {\n<a name=\"512\" href=\"#512\">512</a> \t\t    Utils.handleException(e);\n<a name=\"513\" href=\"#513\">513</a> \t\t}\n<a name=\"514\" href=\"#514\">514</a>     }\n<a name=\"515\" href=\"#515\">515</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 36002.0}