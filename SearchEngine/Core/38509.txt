{"text": "Navigation Up Table of Contents Bibliography Index Title Page CGAL Window stream include CGAL IO Window stream h Definition The functionality described in this section is provided through LEDA or the CGAL port of the LEDA window lib The CGAL port has an interface close to the LEDA window but operations using LEDA geometry classes were removed and the names of the used types and enums were changed from leda name to CGAL name leda string was replaced by std string and leda list was replaced by std list If the window port is used the macro CGAL USE CGAL WINDOW is defined The header file CGAL IO cgal window redefine h offers redefinitions of the LEDA names If you use this file you should include it after the inclusion of your other CGAL headers The CGAL port of the LEDA window lib can be downloaded for various platforms from the CGAL web page Note that Algorithmic Solutions Software GmbH has offered us the possibility to provide the ported version of the LEDA window An instance of type Window stream is a two dimensional window for graphical IO The input and output operations perform a mapping from object coordinates to window coordinates Actually Window stream is identical to the LEDA class leda window if LEDA is used and to the ported version of the LEDA window class if LEDA is not used Therefore the rich functionality of leda window is available on Window stream as well for example panels In addition the class Window stream provides input and output operators for the classes which are defined in the CGAL kernel Instances of Window stream should be initialized with a coordinate frame by calling member function init and must be displayed by calling member function display before drawing For further information on leda window we refer to the LEDA manual Creation Window stream W creates a squared window with maximal possible edge length minimum of width and height of the display Window stream W const char label creates a maximal squared window with frame label label Window stream W float width float height creates a window W of physical size width height pixels Window stream W float width float height const char label creates a window W of physical size width height pixels and frame label label In addition instances of type Window stream can be created by the functions Window stream create demo window creates a window of 512 512 pixels sets the window label to CGAL and initializes the object space that is mapped to the physical window to 1 1 1 1 Returns a pointer to the window created Window stream create and display demo window creates a window of 512 512 pixels sets the window label to CGAL initializes the object space that is mapped to the physical window to 1 1 1 1 and displays it at default position on the display Returns a pointer to the window created Window stream create demo window float width float height const char str double x extension creates a window of width height pixels sets the window label to str and initializes the x range in object space that is mapped to the physical window by x extension x extension The y range is initialized such that the origin is at the center of the window Returns a pointer to the window created Window stream create and display demo window float width float height const char str double x extension creates a window of width height pixels sets the window label to str and initializes the x range in object space that is mapped to the physical window by x extension x extension The y range is initialized such that the origin is at the center of the window The window is displayed at default position on the display Returns a pointer to the window created OperationsA window is initialized by a part of the object space by void W init double x double x1 double y initializes the part of the object space that is mapped to the physical window to x x1 y y height x1 x width where width and height are the width and the height of the window in pixels To display a window the following functions can be used Note that W display has to be called before all drawing operations on W and that all operations adding panel items to W have to be called before the first call of W display void W display opens W and displays it at the default position i e with its right upper corner in the upper right corner of the screen void W display int x int y opens W and displays it with its left upper corner at position x y void W display Window stream W int x int y void W display int x int y Window stream W opens W and displays it with its left upper corner at position x y relative to the upper left corner of window W See the LEDA Manual MNSU for further operations on leda window Output Operators The output operator is defined for all geometric classes in the CGAL kernel Window stream Window stream W Class c inserts object c into the stream W Window stream Window stream W Color c changes the foreground color for the next objects that will be inserted into W Note that CGAL points are drawn using LEDA functions for drawing nodes of a graph Before drawing points the size for drawing nodes should be adjusted either by calling member function set node width int or by void cgalize Window stream w sets a few default values for drawing in window w In particular node width is set to 3 and line width to 2 Input Operators The input operator is defined for all geometric classes in the CGAL kernel The coordinates of the geometric objects are in object space Data are entered with the left mouse button Window stream Window stream W Class c extracts object c from the stream W 3D Objects with Window Stream 3D objects can be used with Window stream The stream output operator projects them to the xy plane The stream input operator sets the z coordinate to zero include CGAL IO window stream xy 3 h Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Colors_and_windows_ref/Class_Window_stream.html", "title": "window_stream", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Colors_and_windows_ref/Window_stream.tex' -->\n<html> <head>  \n<title>Window_stream</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_1757\"></A>\n\n<A NAME=\"Cross_link_anchor_1758\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_1589\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Class.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_CGAL::Window_stream\"></A>\n<h2><I>CGAL::Window_stream</I></h2>\n<P>\n\n<I>#include &lt;<A HREF=\"../../../include/CGAL/IO/Window_stream.h\">CGAL/IO/Window_stream.h</A>&gt;</I>\n<P>\n\n<H3>Definition</H3>\n<P>\n\nThe functionality described in this section is provided through L<SMALL>EDA</SMALL> or\nthe C<SMALL>GAL</SMALL> port of the L<SMALL>EDA</SMALL> window lib. The C<SMALL>GAL</SMALL> port has an interface\nclose to the L<SMALL>EDA</SMALL> window, but operations using L<SMALL>EDA</SMALL> geometry classes\nwere removed and the names of the used types and enums were changed from\n<I>leda_name</I> to <I>CGAL::name</I>, <I>leda_string</I>\nwas replaced by <I>std::string</I> and <I>leda_list</I> was replaced\nby <I>std::list</I>.\nIf the window port is used, the macro <I>CGAL_USE_CGAL_WINDOW</I> is \ndefined. The header file <I>&lt;CGAL/IO/cgal_window_redefine.h&gt;</I> offers\nredefinitions of the L<SMALL>EDA</SMALL> names. If you use this file you should include\nit after the inclusion of your other C<SMALL>GAL</SMALL> headers.\nThe C<SMALL>GAL</SMALL> port of the L<SMALL>EDA</SMALL> window lib can be downloaded for various platforms\nfrom the C<SMALL>GAL</SMALL> web page. Note that Algorithmic Solutions Software GmbH \nhas offered us the possibility to provide the ported version of the L<SMALL>EDA</SMALL> \nwindow.<BR>\n\n\n<P>\n\nAn instance of type <I><A HREF=\"Class_Window_stream.html#Cross_link_anchor_1758\">Window_stream</A></I> is a two-dimensional window for\ngraphical IO. The input and output operations perform a mapping from\nobject coordinates to window coordinates.\nActually, <I><A HREF=\"Class_Window_stream.html#Cross_link_anchor_1758\">Window_stream</A></I> is identical to the L<SMALL>EDA</SMALL> class <I>leda_window</I>,\nif L<SMALL>EDA</SMALL> is used and to the ported version of the L<SMALL>EDA</SMALL> window class, if\nL<SMALL>EDA</SMALL> is not used.\nTherefore, the rich functionality of <I>leda_window</I> is available on\n<I><A HREF=\"Class_Window_stream.html#Cross_link_anchor_1758\">Window_stream</A></I> as well, for example panels.\nIn addition, the class <I><A HREF=\"Class_Window_stream.html#Cross_link_anchor_1758\">Window_stream</A></I> provides input and output \noperators for the classes which are defined in the C<SMALL>GAL</SMALL> kernel.\nInstances of <I><A HREF=\"Class_Window_stream.html#Cross_link_anchor_1758\">Window_stream</A></I> should be initialized with a coordinate frame \n(by calling member function\n<I>init</I>) and must be displayed (by calling member function <I>display</I>) before\ndrawing.\n<P>\n\nFor further information on <i>leda_window</i>, we refer to the \n<A HREF=\"http://www.mpi-sb.mpg.de/LEDA/MANUAL/MANUAL.html\">LEDA manual</A>.\n<P>\n\n<H3>Creation</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Window_stream.html#Cross_link_anchor_1758\">Window_stream</A> W;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    creates a squared window with maximal possible edge length\n(minimum of width and height of the display).\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Window_stream.html#Cross_link_anchor_1758\">Window_stream</A> W ( const char* label);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    creates a maximal squared window with frame label <MATH><I>label</I></MATH>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Window_stream.html#Cross_link_anchor_1758\">Window_stream</A> W ( float width,  float height);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    creates a window <I>W</I> of physical size <I>width</I> <MATH><I> &times; </I></MATH> <I>height</I> pixels.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Window_stream.html#Cross_link_anchor_1758\">Window_stream</A> W ( float width,  float height,  const char* label);\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    creates a window <I>W</I> of physical size <I>width</I> <MATH><I> &times; </I></MATH> <I>height</I> pixels \nand frame label <I>label</I>.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\nIn addition, instances of type <I><A HREF=\"Class_Window_stream.html#Cross_link_anchor_1758\">Window_stream</A></I> can be created by the functions\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Window_stream*_create_demo_window69;\"></A>\n<A HREF=\"Class_Window_stream.html#Cross_link_anchor_1758\">Window_stream</A>*\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    create_demo_window ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    creates a window of 512 <MATH><I> &times; </I></MATH> 512 pixels, sets the window label to\nCGAL, and  initializes the object space that is mapped to the physical window to\n[-1.0, 1.0] <MATH><I> &times; </I></MATH> [-1.0, 1.0]. \nReturns a pointer to the window created.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Window_stream*_create_and_display_demo_window69;\"></A>\n<A HREF=\"Class_Window_stream.html#Cross_link_anchor_1758\">Window_stream</A>*\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    create_and_display_demo_window ()\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    creates a window of 512 <MATH><I> &times; </I></MATH> 512 pixels, sets the window label to\nCGAL, initializes the object space that is mapped to the physical window to \n[-1.0, 1.0] <MATH><I> &times; </I></MATH> [-1.0, 1.0] and \ndisplays it at default position on the display. Returns a pointer to the window created.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Window_stream*_create_demo_window6_float_width+_float_height+_const_char*_str+_double_x_extension9;\"></A>\n<A HREF=\"Class_Window_stream.html#Cross_link_anchor_1758\">Window_stream</A>*\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    create_demo_window ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    float width,<BR>\n\nfloat height,<BR>\n\nconst char* str,<BR>\n\ndouble x_extension)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    creates a window of <I>width</I> <MATH><I> &times; </I></MATH> <I>height</I> pixels, sets the window label to\n<I>str</I>, and  initializes the <MATH><I>x</I></MATH>-range in object space that is mapped to the physical window by\n[-<I>x_extension</I>, <I>x_extension</I>]. The <MATH><I>y</I></MATH>-range is initialized such that the origin is at\nthe center of the window. \nReturns a pointer to the window created.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Window_stream*_create_and_display_demo_window6_float_width+_float_height+_const_char*_str+_double_x_extension9;\"></A>\n<A HREF=\"Class_Window_stream.html#Cross_link_anchor_1758\">Window_stream</A>*\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    create_and_display_demo_window ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    float width,<BR>\n\nfloat height,<BR>\n\nconst char* str,<BR>\n\ndouble x_extension)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    creates a window of <I>width</I> <MATH><I> &times; </I></MATH> <I>height</I> pixels, sets the window label to\n<I>str</I>, and initializes the <MATH><I>x</I></MATH>-range in object space that is mapped to the physical window by\n[-<I>x_extension</I>, <I>x_extension</I>]. The <MATH><I>y</I></MATH>-range is initialized such that the origin is at\nthe center of the window. The window is displayed at default position on the display. \nReturns a pointer to the window created.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Operations</H3>A window is initialized by a part of the object space by\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_init6double_x0+_double_x1+_double_y09;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    W.init ( double x0,  double x1,  double y0)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    initializes the  part of the object space that is mapped to the physical\nwindow to [<I>x0</I>,<I>x1</I>] <MATH><I> &times; </I></MATH> \n[<I>y0</I>,<I>y0</I> + <I>height</I><MATH><I>*</I></MATH>(<I>x1</I>-<I>x0</I>)/<I>width</I>],\nwhere <I>width</I> and <I>height</I> are the width and the height of the window in pixels.\n        </TD></TR>\n        </TABLE>\n<P>\n\nTo display a window, the following functions can be used. Note that <I>W.display()</I> \nhas to be called before all drawing operations on <I>W</I> and that all operations adding \npanel items to <I>W</I> have to be called before the first call of <I>W.display()</I>.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_display69;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    W.display ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    opens <I>W</I> and displays it at the default position, i.e. \nwith its right upper corner in the upper right corner of the screen.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_display6int_x+_int_y9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    W.display ( int x,  int y)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    opens <I>W</I> and displays it with its left upper corner at position\n(<I>x</I>,<I>y</I>).\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_display6Window_stream__W0+_int_x+_int_y9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    W.display ( <A HREF=\"Class_Window_stream.html#Cross_link_anchor_1758\">Window_stream</A>&amp; W0,  int x,  int y)\n        </I></NOBR>\n        \n    \n        </TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_display6int_x+_int_y+_Window_stream__W09;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    W.display ( int x,  int y,  <A HREF=\"Class_Window_stream.html#Cross_link_anchor_1758\">Window_stream</A>&amp; W0)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    opens <I>W</I> and displays it with its left upper corner at position \n(<I>x</I>,<I>y</I>) relative to the upper left corner of  window <I>W0</I>.\n        </TD></TR>\n        </TABLE>\n<P>\n\nSee the <A HREF=\"http://www.mpi-sb.mpg.de/LEDA/MANUAL/MANUAL.html\" TARGET=\"_top\">LEDA Manual</A>\n[<A HREF=\"../biblio.html#Biblio_cgal:mnsu-lum\">MNSU</A>] for further operations on <I>leda_window</I>.\n<P>\n\n<H3>Output Operators</H3>\n<P>\n\nThe output operator is defined for all geometric classes in the C<SMALL>GAL</SMALL> kernel.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Class_Window_stream.html#Cross_link_anchor_1758\">Window_stream</A>&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n     <A HREF=\"Class_Window_stream.html#Cross_link_anchor_1758\">Window_stream</A> &amp;W &lt;&lt;  Class c<A NAME=\"Function_Window_stream__operator666Window_stream__W+_const_Class__c9;\"></A>\n\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    inserts object <I>c</I> into the stream <I>W</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Class_Window_stream.html#Cross_link_anchor_1758\">Window_stream</A>&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n     <A HREF=\"Class_Window_stream.html#Cross_link_anchor_1758\">Window_stream</A> &amp;W &lt;&lt;  <A HREF=\"Class_Color.html#Cross_link_anchor_1754\">Color</A> c<A NAME=\"Function_Window_stream__operator666Window_stream__W+_const_Color__c9;\"></A>\n\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    changes the foreground color for the next objects that\n        will be inserted into <I>W</I>.\n        </TD></TR>\n        </TABLE>\n<P>\n\nNote that CGAL points are drawn using L<SMALL>EDA</SMALL> functions for drawing nodes of a graph.\nBefore drawing points, the size for drawing nodes should be adjusted, either by calling\nmember function <I>set_node_width(int)</I> or by\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_cgalize6Window_stream__w9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    cgalize ( <A HREF=\"Class_Window_stream.html#Cross_link_anchor_1758\">Window_stream</A>&amp; w)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    sets a few default values for drawing in window <I>w</I>. In particular, node width is\nset to 3 and line width to 2.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Input Operators</H3>\n<P>\n\nThe input operator is defined for all geometric classes in the C<SMALL>GAL</SMALL> kernel.\nThe coordinates of the geometric objects are in object space. Data are\nentered with the left mouse button.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Class_Window_stream.html#Cross_link_anchor_1758\">Window_stream</A>&amp;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n     <A HREF=\"Class_Window_stream.html#Cross_link_anchor_1758\">Window_stream</A> &amp;W &gt;&gt;  Class &amp;c<A NAME=\"Function_Window_stream__operator996Window_stream__W+_Class__c9;\"></A>\n\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    extracts object <I>c</I> from the stream <I>W</I>.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>3D Objects with Window Stream</H3>\n<P>\n\n3D objects can be used with <I><A HREF=\"Class_Window_stream.html#Cross_link_anchor_1758\">Window_stream</A></I>. The stream output\noperator <I>&lt;&lt;</I> projects them to the <MATH><I>xy</I></MATH>-plane. The stream input\noperator <I>&gt;&gt;</I> sets the <MATH><I>z</I></MATH> coordinate to zero.\n<P>\n\n<I>#include &lt;<A HREF=\"../../../include/CGAL/IO/window_stream_xy_3.h\">CGAL/IO/window_stream_xy_3.h</A>&gt;</I>\n<P>\n\n<!Next_reference_link_10_13_4!>\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_13!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 38509.0}