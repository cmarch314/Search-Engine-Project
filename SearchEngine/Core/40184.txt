{"text": " src routines 28 February 2 6 index home todd release pdb2pqr 1 1 src routines py Routines for PDB2PQR This module contains the protein object used in PDB2PQR and methods used to correct analyze and optimize that protein PDB2PQR An automated pipeline for the setup execution and analysis of Poisson Boltzmann electrostatics calculations Nathan A Baker baker biochem wustl edu Todd Dolinsky todd ccb wustl edu Dept of Biochemistry and Molecular Biophysics Center for Computational Biology Washington University in St Louis Jens Nielsen Jens Nielsen ucd ie University College Dublin Additional contributing authors listed in documentation and supporting package licenses Copyright c 2 3 2 6 Washington University in St Louis All Rights Reserved This file is part of PDB2PQR PDB2PQR is free software you can redistribute it and or modify it under the terms of the GNU General Public License as published by the Free Software Foundation either version 2 of the License or at your option any later version PDB2PQR is distributed in the hope that it will be useful but WITHOUT ANY WARRANTY without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE See the GNU General Public License for more details You should have received a copy of the GNU General Public License along with PDB2PQR if not write to the Free Software Foundation Inc 59 Temple Place Suite 33 Boston MA 2111 13 7 USA Modules copy getopt math os re xml sax string sys Classes Cells Routines class Cells The cells object provides a better way to search for nearby atoms A pure all versus all search is O n 2 for every atom every other atom must be searched This is rather inefficient especially for large proteins where cells may be tens of angstroms apart The cell class breaks down the xyz protein space into several 3 D cells of desired size then by simply examining atoms that fall into the adjacent cells one can quickly find nearby cells NOTE Ideally this should be somehow separated from the routines object Methods defined here init self cellsize Initialize the cells Parameters cellsize The size of each cell int addCell self atom Add an atom to the cell Parameters atom The atom to add atom assignCells self protein Place each atom in a virtual cell for easy neighbor comparison getNearCells self atom Find all atoms in bordering cells to an atom Parameters atom The atom to use atom Returns closeatoms A list of nearby atoms list removeCell self atom Remove the atom from a cell Parameters atom The atom to add atom class Routines Methods defined here init self protein verbose Initialize the Routines class The class contains most of the main routines that run PDB2PQR Parameters protein The protein to run PDB2PQR on Protein verbose A flag to determine whether to write to stdout addHydrogens self Add the hydrogens to the protein This requires either the rebuildTetrahedral function for tetrahedral geometries or the standard quatfit methods These methods use three nearby bonds to rebuild the atom the closer the bonds the more accurate the results As such the peptide bonds are used when available applyForcefield self forcefield Apply the forcefield to the atoms within the protein Parameters forcefield The forcefield object forcefield Returns hitlist A list of atoms that were found in the forcefield list misslist A list of atoms that were not found in the forcefield list applyNameScheme self forcefield Apply the naming scheme of the give forcefield to the atoms within the protein Parameters forcefield The forcefield object forcefield applyPatch self patchname residue Apply a patch to the given residue This is one of the key functions in PDB2PQR A similar function appears in definitions py that version is needed for residue level subtitutions so certain protonation states i e CYM HSE are detectatble on input This version looks up the particular patch name in the patchmap stored in the protein and then applies the various commands to the reference and actual residue structures See the inline comments for a more detailed explanation Parameters patchname The name of the patch string residue The residue to apply the patch to residue assignTermini self chain Assign the termini for the given chain by looking at the start and end residues calculateDihedralAngles self Calculate the dihedral angle for every residue within the protein debumpProtein self Make sure that none of the added atoms were rebuilt on top of existing atoms See each called function for more information debumpResidue self residue conflictnames Debump a specific residue Only should be called if the residue has been detected to have a conflict If called try to rotate about dihedral angles to resolve the conflict Parameters residue The residue in question conflictnames A list of atomnames that were rebuilt too close to other atoms Returns 1 if successful otherwise findMissingHeavy self Repair residues that contain missing heavy non Hydrogen atoms findNearbyAtoms self atom Find nearby atoms for conflict checking Uses neighboring cells to compare atoms rather than an all versus all O n 2 algorithm which saves a great deal of time There are several instances where we ignore potential conflicts these include donor acceptor pairs atoms in the same residue and bonded CYS bridges Parameters atom Find nearby atoms to this atom Atom Returns nearatoms A list of atoms close to the atom getClosestAtom self atom Get the closest atom that does not form a donor acceptor pair Used to detect potential conflicts NOTE Cells must be set before using this function Parameters atom The atom in question Atom Returns bestatom The closest atom to the input atom that does not satisfy a donor acceptor pair getMoveableNames self residue pivot Return all atomnames that are further away than the pivot atom Parameters residue The residue to use pivot The pivot atomname getWarnings self Get all warnings generated from routines pickDihedralAngle self residue conflictnames oldnum None Choose an angle number to use in debumping Algorithm Instead of simply picking a random chiangle this function uses a more intelligent method to improve efficiency The algorithm uses the names of the conflicting atoms within the residue to determine which angle number has the best chance of fixing the problem s The method also insures that the same chiangle will not be run twice in a row Parameters residue The residue that is being debumped Residue conflictnames A list of atom names that are currently conflicts list oldnum The old dihedral angle number int Returns bestnum The new dihedral angle number int rebuildTetrahedral self residue atomname Rebuild a tetrahedral hydrogen group This is necessary due to the shortcomings of the quatfit routine given a tetrahedral geometry and two existing hydrogens the quatfit routines have two potential solutions This function uses basic tetrahedral geometry to fix this issue Parameters residue The residue in question residue atomname The atomname to add string Returns 1 if successful otherwise repairHeavy self Repair all heavy atoms Unfortunately the first time we get to an atom we might not be able to rebuild it it might depend on other atoms to be rebuild first think side chains As such a seenmap is used to keep track of what we ve already seen and subsequent attempts to rebuild the atom runPROPKA self ph ff outname Run PROPKA on the current protein setting protonation states to the correct values Parameters ph The desired pH of the system ff The forcefield name to be used outname The name of the PQR outfile setDihedralAngle self residue anglenum angle Rotate a residue about a given angle Uses the quatfit methods to perform the matrix mathematics Parameters residue The residue to rotate anglenum The number of the angle to rotate as listed in residue dihedrals angle The desired angle setDonorsAndAcceptors self Set the donors and acceptors within the protein setReferenceDistance self Set the distance to the CA atom in the residue This is necessary for determining which atoms are allowed to move during rotations Uses the shortestPath algorithm found in utilities py setStates self Set the state of each residue This is the last step before assigning the forcefield but is necessary so as to distinguish between various protonation states See aa py for residue specific functions setTermini self Set the termini for the protein First set all known termini by looking at the ends of the chain Then examine each residue looking for internal chain breaks updateBonds self Update the bonding network of the protein This happens in 3 steps 1 Applying the PEPTIDE patch to all Amino residues so as to add reference for the N i 1 and C i 1 atoms 2 UpdateInternalBonds for inter residue linking 3 Set the links to the N i 1 and C i 1 atoms updateInternalBonds self Update the internal bonding network using the reference objects in each atom updateSSbridges self Check for SS bridge partners and if present set appropriate partners write self message indent Write a message to stderr for debugging if verbose Parameters message The message to write string indent The indent level int default Data AAPATH dat AA xml BACKBONE N CA C O O2 HA HN H tN BONDED SS LIMIT 2 5 BUMP DIST 2 BUMP HDIST 1 5 CELL SIZE 2 DIHEDRAL 57 2958 NAPATH dat NA xml PATCHPATH dat PATCHES xml PEPTIDE DIST 1 7 REPAIR LIMIT 1 SMALL 9 9999999999999995e 8 author Jens Erik Nielsen Todd Dolinsky date 28 February 2 6 Author Jens Erik Nielsen Todd Dolinsky", "_id": "http://www.ics.uci.edu/~dock/pdb2pqr/pydoc/src.routines.html", "title": "python: module src.routines", "html": "\n<!doctype html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<html><head><title>Python: module src.routines</title>\n</head><body bgcolor=\"#f0f0f8\">\n\n<table width=\"100%\" cellspacing=0 cellpadding=2 border=0 summary=\"heading\">\n<tr bgcolor=\"#7799ee\">\n<td valign=bottom>&nbsp;<br>\n<font color=\"#ffffff\" face=\"helvetica, arial\">&nbsp;<br><big><big><strong><a href=\"src.html\"><font color=\"#ffffff\">src</font></a>.routines</strong></big></big> (28 February 2006)</font></td\n><td align=right valign=bottom\n><font color=\"#ffffff\" face=\"helvetica, arial\"><a href=\".\">index</a><br><a href=\"file:/home/todd/release/pdb2pqr-1.1.0/src/routines.py\">/home/todd/release/pdb2pqr-1.1.0/src/routines.py</a></font></td></tr></table>\n    <p><tt><a href=\"#Routines\">Routines</a>&nbsp;for&nbsp;PDB2PQR<br>\n&nbsp;<br>\nThis&nbsp;module&nbsp;contains&nbsp;the&nbsp;protein&nbsp;object&nbsp;used&nbsp;in&nbsp;PDB2PQR&nbsp;and&nbsp;methods<br>\nused&nbsp;to&nbsp;correct,&nbsp;analyze,&nbsp;and&nbsp;optimize&nbsp;that&nbsp;protein.<br>\n&nbsp;<br>\n----------------------------<br>\n&nbsp;<br>\nPDB2PQR&nbsp;--&nbsp;An&nbsp;automated&nbsp;pipeline&nbsp;for&nbsp;the&nbsp;setup,&nbsp;execution,&nbsp;and&nbsp;analysis&nbsp;of<br>\nPoisson-Boltzmann&nbsp;electrostatics&nbsp;calculations<br>\n&nbsp;<br>\nNathan&nbsp;A.&nbsp;Baker&nbsp;(baker@biochem.wustl.edu)<br>\nTodd&nbsp;Dolinsky&nbsp;(todd@ccb.wustl.edu)<br>\nDept.&nbsp;of&nbsp;Biochemistry&nbsp;and&nbsp;Molecular&nbsp;Biophysics<br>\nCenter&nbsp;for&nbsp;Computational&nbsp;Biology<br>\nWashington&nbsp;University&nbsp;in&nbsp;St.&nbsp;Louis<br>\n&nbsp;<br>\nJens&nbsp;Nielsen&nbsp;(Jens.Nielsen@ucd.ie)<br>\nUniversity&nbsp;College&nbsp;Dublin<br>\n&nbsp;<br>\nAdditional&nbsp;contributing&nbsp;authors&nbsp;listed&nbsp;in&nbsp;documentation&nbsp;and&nbsp;supporting<br>\npackage&nbsp;licenses.<br>\n&nbsp;<br>\nCopyright&nbsp;(c)&nbsp;2003-2006.&nbsp;&nbsp;Washington&nbsp;University&nbsp;in&nbsp;St.&nbsp;Louis.&nbsp;&nbsp;<br>\nAll&nbsp;Rights&nbsp;Reserved.<br>\n&nbsp;<br>\nThis&nbsp;file&nbsp;is&nbsp;part&nbsp;of&nbsp;PDB2PQR.<br>\n&nbsp;<br>\nPDB2PQR&nbsp;is&nbsp;free&nbsp;software;&nbsp;you&nbsp;can&nbsp;redistribute&nbsp;it&nbsp;and/or&nbsp;modify<br>\nit&nbsp;under&nbsp;the&nbsp;terms&nbsp;of&nbsp;the&nbsp;GNU&nbsp;General&nbsp;Public&nbsp;License&nbsp;as&nbsp;published&nbsp;by<br>\nthe&nbsp;Free&nbsp;Software&nbsp;Foundation;&nbsp;either&nbsp;version&nbsp;2&nbsp;of&nbsp;the&nbsp;License,&nbsp;or<br>\n(at&nbsp;your&nbsp;option)&nbsp;any&nbsp;later&nbsp;version.<br>\n&nbsp;<br>\nPDB2PQR&nbsp;is&nbsp;distributed&nbsp;in&nbsp;the&nbsp;hope&nbsp;that&nbsp;it&nbsp;will&nbsp;be&nbsp;useful,<br>\nbut&nbsp;WITHOUT&nbsp;ANY&nbsp;WARRANTY;&nbsp;without&nbsp;even&nbsp;the&nbsp;implied&nbsp;warranty&nbsp;of<br>\nMERCHANTABILITY&nbsp;or&nbsp;FITNESS&nbsp;FOR&nbsp;A&nbsp;PARTICULAR&nbsp;PURPOSE.&nbsp;&nbsp;See&nbsp;the<br>\nGNU&nbsp;General&nbsp;Public&nbsp;License&nbsp;for&nbsp;more&nbsp;details.<br>\n&nbsp;<br>\nYou&nbsp;should&nbsp;have&nbsp;received&nbsp;a&nbsp;copy&nbsp;of&nbsp;the&nbsp;GNU&nbsp;General&nbsp;Public&nbsp;License<br>\nalong&nbsp;with&nbsp;PDB2PQR;&nbsp;if&nbsp;not,&nbsp;write&nbsp;to&nbsp;the&nbsp;Free&nbsp;Software<br>\nFoundation,&nbsp;Inc.,&nbsp;59&nbsp;Temple&nbsp;Place,&nbsp;Suite&nbsp;330,&nbsp;Boston,&nbsp;MA&nbsp;02111-1307&nbsp;&nbsp;USA<br>\n&nbsp;<br>\n----------------------------</tt></p>\n<p>\n<table width=\"100%\" cellspacing=0 cellpadding=2 border=0 summary=\"section\">\n<tr bgcolor=\"#aa55cc\">\n<td colspan=3 valign=bottom>&nbsp;<br>\n<font color=\"#fffff\" face=\"helvetica, arial\"><big><strong>Modules</strong></big></font></td></tr>\n    \n<tr><td bgcolor=\"#aa55cc\"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>\n<td width=\"100%\"><table width=\"100%\" summary=\"list\"><tr><td width=\"25%\" valign=top><a href=\"copy.html\">copy</a><br>\n<a href=\"getopt.html\">getopt</a><br>\n</td><td width=\"25%\" valign=top><a href=\"math.html\">math</a><br>\n<a href=\"os.html\">os</a><br>\n</td><td width=\"25%\" valign=top><a href=\"re.html\">re</a><br>\n<a href=\"xml.sax.html\">xml.sax</a><br>\n</td><td width=\"25%\" valign=top><a href=\"string.html\">string</a><br>\n<a href=\"sys.html\">sys</a><br>\n</td></tr></table></td></tr></table><p>\n<table width=\"100%\" cellspacing=0 cellpadding=2 border=0 summary=\"section\">\n<tr bgcolor=\"#ee77aa\">\n<td colspan=3 valign=bottom>&nbsp;<br>\n<font color=\"#ffffff\" face=\"helvetica, arial\"><big><strong>Classes</strong></big></font></td></tr>\n    \n<tr><td bgcolor=\"#ee77aa\"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>\n<td width=\"100%\"><dl>\n<dt><font face=\"helvetica, arial\"><a href=\"src.routines.html#Cells\">Cells</a>\n</font></dt><dt><font face=\"helvetica, arial\"><a href=\"src.routines.html#Routines\">Routines</a>\n</font></dt></dl>\n <p>\n<table width=\"100%\" cellspacing=0 cellpadding=2 border=0 summary=\"section\">\n<tr bgcolor=\"#ffc8d8\">\n<td colspan=3 valign=bottom>&nbsp;<br>\n<font color=\"#000000\" face=\"helvetica, arial\"><a name=\"Cells\">class <strong>Cells</strong></a></font></td></tr>\n    \n<tr bgcolor=\"#ffc8d8\"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>\n<td colspan=2><tt>The&nbsp;cells&nbsp;object&nbsp;provides&nbsp;a&nbsp;better&nbsp;way&nbsp;to&nbsp;search&nbsp;for&nbsp;nearby&nbsp;atoms.&nbsp;A<br>\npure&nbsp;all&nbsp;versus&nbsp;all&nbsp;search&nbsp;is&nbsp;O(n^2)&nbsp;-&nbsp;for&nbsp;every&nbsp;atom,&nbsp;every&nbsp;other&nbsp;atom<br>\nmust&nbsp;be&nbsp;searched.&nbsp;&nbsp;This&nbsp;is&nbsp;rather&nbsp;inefficient,&nbsp;especially&nbsp;for&nbsp;large<br>\nproteins&nbsp;where&nbsp;cells&nbsp;may&nbsp;be&nbsp;tens&nbsp;of&nbsp;angstroms&nbsp;apart.&nbsp;&nbsp;The&nbsp;cell&nbsp;class<br>\nbreaks&nbsp;down&nbsp;the&nbsp;xyz&nbsp;protein&nbsp;space&nbsp;into&nbsp;several&nbsp;3-D&nbsp;cells&nbsp;of&nbsp;desired<br>\nsize&nbsp;-&nbsp;then&nbsp;by&nbsp;simply&nbsp;examining&nbsp;atoms&nbsp;that&nbsp;fall&nbsp;into&nbsp;the&nbsp;adjacent<br>\ncells&nbsp;one&nbsp;can&nbsp;quickly&nbsp;find&nbsp;nearby&nbsp;cells.<br>\n&nbsp;<br>\nNOTE:&nbsp;&nbsp;Ideally&nbsp;this&nbsp;should&nbsp;be&nbsp;somehow&nbsp;separated&nbsp;from&nbsp;the&nbsp;routines<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object...<br>&nbsp;</tt></td></tr>\n<tr><td>&nbsp;</td>\n<td width=\"100%\">Methods defined here:<br>\n<dl><dt><a name=\"Cells-__init__\"><strong>__init__</strong></a>(self, cellsize)</dt><dd><tt>Initialize&nbsp;the&nbsp;cells.<br>\n&nbsp;<br>\nParameters<br>\n&nbsp;&nbsp;&nbsp;&nbsp;cellsize:&nbsp;&nbsp;The&nbsp;size&nbsp;of&nbsp;each&nbsp;cell&nbsp;(int)</tt></dd></dl>\n\n<dl><dt><a name=\"Cells-addCell\"><strong>addCell</strong></a>(self, atom)</dt><dd><tt>Add&nbsp;an&nbsp;atom&nbsp;to&nbsp;the&nbsp;cell<br>\n&nbsp;<br>\nParameters<br>\n&nbsp;&nbsp;&nbsp;&nbsp;atom:&nbsp;&nbsp;The&nbsp;atom&nbsp;to&nbsp;add&nbsp;(atom)</tt></dd></dl>\n\n<dl><dt><a name=\"Cells-assignCells\"><strong>assignCells</strong></a>(self, protein)</dt><dd><tt>Place&nbsp;each&nbsp;atom&nbsp;in&nbsp;a&nbsp;virtual&nbsp;cell&nbsp;for&nbsp;easy&nbsp;neighbor&nbsp;comparison</tt></dd></dl>\n\n<dl><dt><a name=\"Cells-getNearCells\"><strong>getNearCells</strong></a>(self, atom)</dt><dd><tt>Find&nbsp;all&nbsp;atoms&nbsp;in&nbsp;bordering&nbsp;cells&nbsp;to&nbsp;an&nbsp;atom<br>\n&nbsp;<br>\nParameters<br>\n&nbsp;&nbsp;&nbsp;&nbsp;atom:&nbsp;&nbsp;The&nbsp;atom&nbsp;to&nbsp;use&nbsp;(atom)<br>\nReturns<br>\n&nbsp;&nbsp;&nbsp;&nbsp;closeatoms:&nbsp;&nbsp;A&nbsp;list&nbsp;of&nbsp;nearby&nbsp;atoms&nbsp;(list)</tt></dd></dl>\n\n<dl><dt><a name=\"Cells-removeCell\"><strong>removeCell</strong></a>(self, atom)</dt><dd><tt>Remove&nbsp;the&nbsp;atom&nbsp;from&nbsp;a&nbsp;cell<br>\n&nbsp;<br>\nParameters<br>\n&nbsp;&nbsp;&nbsp;&nbsp;atom:&nbsp;&nbsp;&nbsp;The&nbsp;atom&nbsp;to&nbsp;add&nbsp;(atom)</tt></dd></dl>\n\n</td></tr></table> <p>\n<table width=\"100%\" cellspacing=0 cellpadding=2 border=0 summary=\"section\">\n<tr bgcolor=\"#ffc8d8\">\n<td colspan=3 valign=bottom>&nbsp;<br>\n<font color=\"#000000\" face=\"helvetica, arial\"><a name=\"Routines\">class <strong>Routines</strong></a></font></td></tr>\n    \n<tr><td bgcolor=\"#ffc8d8\"><tt>&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>\n<td width=\"100%\">Methods defined here:<br>\n<dl><dt><a name=\"Routines-__init__\"><strong>__init__</strong></a>(self, protein, verbose)</dt><dd><tt>Initialize&nbsp;the&nbsp;<a href=\"#Routines\">Routines</a>&nbsp;class.&nbsp;&nbsp;The&nbsp;class&nbsp;contains&nbsp;most<br>\nof&nbsp;the&nbsp;main&nbsp;routines&nbsp;that&nbsp;run&nbsp;PDB2PQR<br>\n&nbsp;<br>\nParameters<br>\n&nbsp;&nbsp;&nbsp;&nbsp;protein:&nbsp;&nbsp;The&nbsp;protein&nbsp;to&nbsp;run&nbsp;PDB2PQR&nbsp;on&nbsp;(Protein)<br>\n&nbsp;&nbsp;&nbsp;&nbsp;verbose:&nbsp;&nbsp;A&nbsp;flag&nbsp;to&nbsp;determine&nbsp;whether&nbsp;to&nbsp;write&nbsp;to<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stdout</tt></dd></dl>\n\n<dl><dt><a name=\"Routines-addHydrogens\"><strong>addHydrogens</strong></a>(self)</dt><dd><tt>Add&nbsp;the&nbsp;hydrogens&nbsp;to&nbsp;the&nbsp;protein.&nbsp;&nbsp;This&nbsp;requires&nbsp;either<br>\nthe&nbsp;rebuildTetrahedral&nbsp;function&nbsp;for&nbsp;tetrahedral&nbsp;geometries<br>\nor&nbsp;the&nbsp;standard&nbsp;quatfit&nbsp;methods.&nbsp;&nbsp;These&nbsp;methods&nbsp;use&nbsp;three<br>\nnearby&nbsp;bonds&nbsp;to&nbsp;rebuild&nbsp;the&nbsp;atom;&nbsp;the&nbsp;closer&nbsp;the&nbsp;bonds,&nbsp;the<br>\nmore&nbsp;accurate&nbsp;the&nbsp;results.&nbsp;&nbsp;As&nbsp;such&nbsp;the&nbsp;peptide&nbsp;bonds&nbsp;are<br>\nused&nbsp;when&nbsp;available.</tt></dd></dl>\n\n<dl><dt><a name=\"Routines-applyForcefield\"><strong>applyForcefield</strong></a>(self, forcefield)</dt><dd><tt>Apply&nbsp;the&nbsp;forcefield&nbsp;to&nbsp;the&nbsp;atoms&nbsp;within&nbsp;the&nbsp;protein<br>\n&nbsp;<br>\nParameters<br>\n&nbsp;&nbsp;&nbsp;&nbsp;forcefield:&nbsp;The&nbsp;forcefield&nbsp;object&nbsp;(forcefield)<br>\nReturns<br>\n&nbsp;&nbsp;&nbsp;&nbsp;hitlist:&nbsp;&nbsp;&nbsp;&nbsp;A&nbsp;list&nbsp;of&nbsp;atoms&nbsp;that&nbsp;were&nbsp;found&nbsp;in<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;forcefield&nbsp;(list)<br>\n&nbsp;&nbsp;&nbsp;&nbsp;misslist:&nbsp;&nbsp;&nbsp;A&nbsp;list&nbsp;of&nbsp;atoms&nbsp;that&nbsp;were&nbsp;not&nbsp;found&nbsp;in<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;forcefield&nbsp;(list)</tt></dd></dl>\n\n<dl><dt><a name=\"Routines-applyNameScheme\"><strong>applyNameScheme</strong></a>(self, forcefield)</dt><dd><tt>Apply&nbsp;the&nbsp;naming&nbsp;scheme&nbsp;of&nbsp;the&nbsp;give&nbsp;forcefield&nbsp;to&nbsp;the&nbsp;atoms<br>\nwithin&nbsp;the&nbsp;protein<br>\n&nbsp;<br>\nParameters<br>\n&nbsp;&nbsp;&nbsp;&nbsp;forcefield:&nbsp;The&nbsp;forcefield&nbsp;object&nbsp;(forcefield)</tt></dd></dl>\n\n<dl><dt><a name=\"Routines-applyPatch\"><strong>applyPatch</strong></a>(self, patchname, residue)</dt><dd><tt>Apply&nbsp;a&nbsp;patch&nbsp;to&nbsp;the&nbsp;given&nbsp;residue.&nbsp;&nbsp;This&nbsp;is&nbsp;one&nbsp;of&nbsp;the&nbsp;key<br>\nfunctions&nbsp;in&nbsp;PDB2PQR.&nbsp;&nbsp;A&nbsp;similar&nbsp;function&nbsp;appears&nbsp;in<br>\ndefinitions.py&nbsp;-&nbsp;that&nbsp;version&nbsp;is&nbsp;needed&nbsp;for&nbsp;residue&nbsp;level<br>\nsubtitutions&nbsp;so&nbsp;certain&nbsp;protonation&nbsp;states&nbsp;(i.e.&nbsp;CYM,&nbsp;HSE)<br>\nare&nbsp;detectatble&nbsp;on&nbsp;input.<br>\n&nbsp;<br>\nThis&nbsp;version&nbsp;looks&nbsp;up&nbsp;the&nbsp;particular&nbsp;patch&nbsp;name&nbsp;in&nbsp;the<br>\npatchmap&nbsp;stored&nbsp;in&nbsp;the&nbsp;protein,&nbsp;and&nbsp;then&nbsp;applies&nbsp;the<br>\nvarious&nbsp;commands&nbsp;to&nbsp;the&nbsp;reference&nbsp;and&nbsp;actual&nbsp;residue<br>\nstructures.<br>\n&nbsp;<br>\nSee&nbsp;the&nbsp;inline&nbsp;comments&nbsp;for&nbsp;a&nbsp;more&nbsp;detailed&nbsp;explanation.<br>\n&nbsp;<br>\nParameters<br>\n&nbsp;&nbsp;&nbsp;&nbsp;patchname:&nbsp;&nbsp;The&nbsp;name&nbsp;of&nbsp;the&nbsp;patch&nbsp;(string)<br>\n&nbsp;&nbsp;&nbsp;&nbsp;residue:&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;residue&nbsp;to&nbsp;apply&nbsp;the&nbsp;patch&nbsp;to&nbsp;(residue)</tt></dd></dl>\n\n<dl><dt><a name=\"Routines-assignTermini\"><strong>assignTermini</strong></a>(self, chain)</dt><dd><tt>Assign&nbsp;the&nbsp;termini&nbsp;for&nbsp;the&nbsp;given&nbsp;chain&nbsp;by&nbsp;looking&nbsp;at<br>\nthe&nbsp;start&nbsp;and&nbsp;end&nbsp;residues.</tt></dd></dl>\n\n<dl><dt><a name=\"Routines-calculateDihedralAngles\"><strong>calculateDihedralAngles</strong></a>(self)</dt><dd><tt>Calculate&nbsp;the&nbsp;dihedral&nbsp;angle&nbsp;for&nbsp;every&nbsp;residue&nbsp;within&nbsp;the&nbsp;protein</tt></dd></dl>\n\n<dl><dt><a name=\"Routines-debumpProtein\"><strong>debumpProtein</strong></a>(self)</dt><dd><tt>Make&nbsp;sure&nbsp;that&nbsp;none&nbsp;of&nbsp;the&nbsp;added&nbsp;atoms&nbsp;were&nbsp;rebuilt<br>\non&nbsp;top&nbsp;of&nbsp;existing&nbsp;atoms.&nbsp;&nbsp;See&nbsp;each&nbsp;called&nbsp;function<br>\nfor&nbsp;more&nbsp;information.</tt></dd></dl>\n\n<dl><dt><a name=\"Routines-debumpResidue\"><strong>debumpResidue</strong></a>(self, residue, conflictnames)</dt><dd><tt>Debump&nbsp;a&nbsp;specific&nbsp;residue.&nbsp;&nbsp;Only&nbsp;should&nbsp;be&nbsp;called<br>\nif&nbsp;the&nbsp;residue&nbsp;has&nbsp;been&nbsp;detected&nbsp;to&nbsp;have&nbsp;a&nbsp;conflict.<br>\nIf&nbsp;called,&nbsp;try&nbsp;to&nbsp;rotate&nbsp;about&nbsp;dihedral&nbsp;angles&nbsp;to<br>\nresolve&nbsp;the&nbsp;conflict.<br>\n&nbsp;<br>\nParameters<br>\n&nbsp;&nbsp;&nbsp;&nbsp;residue:&nbsp;&nbsp;The&nbsp;residue&nbsp;in&nbsp;question<br>\n&nbsp;&nbsp;&nbsp;&nbsp;conflictnames:&nbsp;&nbsp;A&nbsp;list&nbsp;of&nbsp;atomnames&nbsp;that&nbsp;were<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rebuilt&nbsp;too&nbsp;close&nbsp;to&nbsp;other&nbsp;atoms<br>\nReturns<br>\n&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;if&nbsp;successful,&nbsp;0&nbsp;otherwise</tt></dd></dl>\n\n<dl><dt><a name=\"Routines-findMissingHeavy\"><strong>findMissingHeavy</strong></a>(self)</dt><dd><tt>Repair&nbsp;residues&nbsp;that&nbsp;contain&nbsp;missing&nbsp;heavy&nbsp;(non-Hydrogen)&nbsp;atoms</tt></dd></dl>\n\n<dl><dt><a name=\"Routines-findNearbyAtoms\"><strong>findNearbyAtoms</strong></a>(self, atom)</dt><dd><tt>Find&nbsp;nearby&nbsp;atoms&nbsp;for&nbsp;conflict-checking.&nbsp;&nbsp;Uses<br>\nneighboring&nbsp;cells&nbsp;to&nbsp;compare&nbsp;atoms&nbsp;rather&nbsp;than&nbsp;an&nbsp;all<br>\nversus&nbsp;all&nbsp;O(n^2)&nbsp;algorithm,&nbsp;which&nbsp;saves&nbsp;a&nbsp;great&nbsp;deal<br>\nof&nbsp;time.&nbsp;&nbsp;There&nbsp;are&nbsp;several&nbsp;instances&nbsp;where&nbsp;we&nbsp;ignore<br>\npotential&nbsp;conflicts;&nbsp;these&nbsp;include&nbsp;donor/acceptor&nbsp;pairs,<br>\natoms&nbsp;in&nbsp;the&nbsp;same&nbsp;residue,&nbsp;and&nbsp;bonded&nbsp;CYS&nbsp;bridges.<br>\n&nbsp;<br>\nParameters<br>\n&nbsp;&nbsp;&nbsp;&nbsp;atom:&nbsp;&nbsp;Find&nbsp;nearby&nbsp;atoms&nbsp;to&nbsp;this&nbsp;atom&nbsp;(Atom)<br>\nReturns<br>\n&nbsp;&nbsp;&nbsp;&nbsp;nearatoms:&nbsp;&nbsp;A&nbsp;list&nbsp;of&nbsp;atoms&nbsp;close&nbsp;to&nbsp;the&nbsp;atom.</tt></dd></dl>\n\n<dl><dt><a name=\"Routines-getClosestAtom\"><strong>getClosestAtom</strong></a>(self, atom)</dt><dd><tt>Get&nbsp;the&nbsp;closest&nbsp;atom&nbsp;that&nbsp;does&nbsp;not&nbsp;form&nbsp;a&nbsp;donor/acceptor&nbsp;pair.<br>\nUsed&nbsp;to&nbsp;detect&nbsp;potential&nbsp;conflicts.<br>\n&nbsp;<br>\nNOTE:&nbsp;&nbsp;<a href=\"#Cells\">Cells</a>&nbsp;must&nbsp;be&nbsp;set&nbsp;before&nbsp;using&nbsp;this&nbsp;function.<br>\n&nbsp;<br>\nParameters<br>\n&nbsp;&nbsp;&nbsp;&nbsp;atom:&nbsp;&nbsp;The&nbsp;atom&nbsp;in&nbsp;question&nbsp;(Atom)<br>\nReturns<br>\n&nbsp;&nbsp;&nbsp;&nbsp;bestatom:&nbsp;&nbsp;The&nbsp;closest&nbsp;atom&nbsp;to&nbsp;the&nbsp;input&nbsp;atom&nbsp;that&nbsp;does&nbsp;not<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;satisfy&nbsp;a&nbsp;donor/acceptor&nbsp;pair.</tt></dd></dl>\n\n<dl><dt><a name=\"Routines-getMoveableNames\"><strong>getMoveableNames</strong></a>(self, residue, pivot)</dt><dd><tt>Return&nbsp;all&nbsp;atomnames&nbsp;that&nbsp;are&nbsp;further&nbsp;away&nbsp;than&nbsp;the<br>\npivot&nbsp;atom.<br>\n&nbsp;<br>\nParameters<br>\n&nbsp;&nbsp;&nbsp;&nbsp;residue:&nbsp;&nbsp;The&nbsp;residue&nbsp;to&nbsp;use<br>\n&nbsp;&nbsp;&nbsp;&nbsp;pivot:&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;pivot&nbsp;atomname</tt></dd></dl>\n\n<dl><dt><a name=\"Routines-getWarnings\"><strong>getWarnings</strong></a>(self)</dt><dd><tt>Get&nbsp;all&nbsp;warnings&nbsp;generated&nbsp;from&nbsp;routines</tt></dd></dl>\n\n<dl><dt><a name=\"Routines-pickDihedralAngle\"><strong>pickDihedralAngle</strong></a>(self, residue, conflictnames, oldnum<font color=\"#909090\">=None</font>)</dt><dd><tt>Choose&nbsp;an&nbsp;angle&nbsp;number&nbsp;to&nbsp;use&nbsp;in&nbsp;debumping<br>\n&nbsp;<br>\nAlgorithm<br>\n&nbsp;&nbsp;&nbsp;&nbsp;Instead&nbsp;of&nbsp;simply&nbsp;picking&nbsp;a&nbsp;random&nbsp;chiangle,&nbsp;this&nbsp;function<br>\n&nbsp;&nbsp;&nbsp;&nbsp;uses&nbsp;a&nbsp;more&nbsp;intelligent&nbsp;method&nbsp;to&nbsp;improve&nbsp;efficiency.<br>\n&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;algorithm&nbsp;uses&nbsp;the&nbsp;names&nbsp;of&nbsp;the&nbsp;conflicting&nbsp;atoms<br>\n&nbsp;&nbsp;&nbsp;&nbsp;within&nbsp;the&nbsp;residue&nbsp;to&nbsp;determine&nbsp;which&nbsp;angle&nbsp;number<br>\n&nbsp;&nbsp;&nbsp;&nbsp;has&nbsp;the&nbsp;best&nbsp;chance&nbsp;of&nbsp;fixing&nbsp;the&nbsp;problem(s).&nbsp;The&nbsp;method<br>\n&nbsp;&nbsp;&nbsp;&nbsp;also&nbsp;insures&nbsp;that&nbsp;the&nbsp;same&nbsp;chiangle&nbsp;will&nbsp;not&nbsp;be&nbsp;run&nbsp;twice<br>\n&nbsp;&nbsp;&nbsp;&nbsp;in&nbsp;a&nbsp;row.<br>\nParameters<br>\n&nbsp;&nbsp;&nbsp;&nbsp;residue:&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;residue&nbsp;that&nbsp;is&nbsp;being&nbsp;debumped&nbsp;(Residue)<br>\n&nbsp;&nbsp;&nbsp;&nbsp;conflictnames:&nbsp;A&nbsp;list&nbsp;of&nbsp;atom&nbsp;names&nbsp;that&nbsp;are&nbsp;currently<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;conflicts&nbsp;(list)<br>\n&nbsp;&nbsp;&nbsp;&nbsp;oldnum&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;The&nbsp;old&nbsp;dihedral&nbsp;angle&nbsp;number&nbsp;(int)<br>\nReturns<br>\n&nbsp;&nbsp;&nbsp;&nbsp;bestnum&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;The&nbsp;new&nbsp;dihedral&nbsp;angle&nbsp;number&nbsp;(int)</tt></dd></dl>\n\n<dl><dt><a name=\"Routines-rebuildTetrahedral\"><strong>rebuildTetrahedral</strong></a>(self, residue, atomname)</dt><dd><tt>Rebuild&nbsp;a&nbsp;tetrahedral&nbsp;hydrogen&nbsp;group.&nbsp;&nbsp;This&nbsp;is&nbsp;necessary<br>\ndue&nbsp;to&nbsp;the&nbsp;shortcomings&nbsp;of&nbsp;the&nbsp;quatfit&nbsp;routine&nbsp;-&nbsp;given&nbsp;a<br>\ntetrahedral&nbsp;geometry&nbsp;and&nbsp;two&nbsp;existing&nbsp;hydrogens,&nbsp;the<br>\nquatfit&nbsp;routines&nbsp;have&nbsp;two&nbsp;potential&nbsp;solutions.&nbsp;&nbsp;This&nbsp;function<br>\nuses&nbsp;basic&nbsp;tetrahedral&nbsp;geometry&nbsp;to&nbsp;fix&nbsp;this&nbsp;issue.<br>\n&nbsp;<br>\nParameters<br>\n&nbsp;&nbsp;&nbsp;&nbsp;residue:&nbsp;&nbsp;The&nbsp;residue&nbsp;in&nbsp;question&nbsp;(residue)<br>\n&nbsp;&nbsp;&nbsp;&nbsp;atomname:&nbsp;The&nbsp;atomname&nbsp;to&nbsp;add&nbsp;(string)<br>\nReturns<br>\n&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;if&nbsp;successful,&nbsp;0&nbsp;otherwise</tt></dd></dl>\n\n<dl><dt><a name=\"Routines-repairHeavy\"><strong>repairHeavy</strong></a>(self)</dt><dd><tt>Repair&nbsp;all&nbsp;heavy&nbsp;atoms.&nbsp;&nbsp;Unfortunately&nbsp;the&nbsp;first&nbsp;time&nbsp;we<br>\nget&nbsp;to&nbsp;an&nbsp;atom&nbsp;we&nbsp;might&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;rebuild&nbsp;it&nbsp;-&nbsp;it<br>\nmight&nbsp;depend&nbsp;on&nbsp;other&nbsp;atoms&nbsp;to&nbsp;be&nbsp;rebuild&nbsp;first&nbsp;(think&nbsp;side<br>\nchains).&nbsp;&nbsp;As&nbsp;such&nbsp;a&nbsp;'seenmap'&nbsp;is&nbsp;used&nbsp;to&nbsp;keep&nbsp;track&nbsp;of&nbsp;what<br>\nwe've&nbsp;already&nbsp;seen&nbsp;and&nbsp;subsequent&nbsp;attempts&nbsp;to&nbsp;rebuild&nbsp;the<br>\natom.</tt></dd></dl>\n\n<dl><dt><a name=\"Routines-runPROPKA\"><strong>runPROPKA</strong></a>(self, ph, ff, outname)</dt><dd><tt>Run&nbsp;PROPKA&nbsp;on&nbsp;the&nbsp;current&nbsp;protein,&nbsp;setting&nbsp;protonation&nbsp;states&nbsp;to<br>\nthe&nbsp;correct&nbsp;values<br>\n&nbsp;<br>\nParameters<br>\n&nbsp;&nbsp;&nbsp;ph:&nbsp;&nbsp;The&nbsp;desired&nbsp;pH&nbsp;of&nbsp;the&nbsp;system<br>\n&nbsp;&nbsp;&nbsp;ff:&nbsp;&nbsp;The&nbsp;forcefield&nbsp;name&nbsp;to&nbsp;be&nbsp;used<br>\n&nbsp;&nbsp;&nbsp;outname:&nbsp;The&nbsp;name&nbsp;of&nbsp;the&nbsp;PQR&nbsp;outfile</tt></dd></dl>\n\n<dl><dt><a name=\"Routines-setDihedralAngle\"><strong>setDihedralAngle</strong></a>(self, residue, anglenum, angle)</dt><dd><tt>Rotate&nbsp;a&nbsp;residue&nbsp;about&nbsp;a&nbsp;given&nbsp;angle.&nbsp;Uses&nbsp;the&nbsp;quatfit<br>\nmethods&nbsp;to&nbsp;perform&nbsp;the&nbsp;matrix&nbsp;mathematics.<br>\n&nbsp;<br>\nParameters<br>\n&nbsp;&nbsp;&nbsp;&nbsp;residue:&nbsp;&nbsp;&nbsp;The&nbsp;residue&nbsp;to&nbsp;rotate<br>\n&nbsp;&nbsp;&nbsp;&nbsp;anglenum:&nbsp;&nbsp;The&nbsp;number&nbsp;of&nbsp;the&nbsp;angle&nbsp;to&nbsp;rotate&nbsp;as<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listed&nbsp;in&nbsp;residue.dihedrals<br>\n&nbsp;&nbsp;&nbsp;&nbsp;angle:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;desired&nbsp;angle.</tt></dd></dl>\n\n<dl><dt><a name=\"Routines-setDonorsAndAcceptors\"><strong>setDonorsAndAcceptors</strong></a>(self)</dt><dd><tt>Set&nbsp;the&nbsp;donors&nbsp;and&nbsp;acceptors&nbsp;within&nbsp;the&nbsp;protein</tt></dd></dl>\n\n<dl><dt><a name=\"Routines-setReferenceDistance\"><strong>setReferenceDistance</strong></a>(self)</dt><dd><tt>Set&nbsp;the&nbsp;distance&nbsp;to&nbsp;the&nbsp;CA&nbsp;atom&nbsp;in&nbsp;the&nbsp;residue.<br>\nThis&nbsp;is&nbsp;necessary&nbsp;for&nbsp;determining&nbsp;which&nbsp;atoms&nbsp;are<br>\nallowed&nbsp;to&nbsp;move&nbsp;during&nbsp;rotations.&nbsp;&nbsp;Uses&nbsp;the<br>\nshortestPath&nbsp;algorithm&nbsp;found&nbsp;in&nbsp;utilities.py.</tt></dd></dl>\n\n<dl><dt><a name=\"Routines-setStates\"><strong>setStates</strong></a>(self)</dt><dd><tt>Set&nbsp;the&nbsp;state&nbsp;of&nbsp;each&nbsp;residue.&nbsp;&nbsp;This&nbsp;is&nbsp;the&nbsp;last&nbsp;step<br>\nbefore&nbsp;assigning&nbsp;the&nbsp;forcefield,&nbsp;but&nbsp;is&nbsp;necessary&nbsp;so<br>\nas&nbsp;to&nbsp;distinguish&nbsp;between&nbsp;various&nbsp;protonation&nbsp;states.<br>\n&nbsp;<br>\nSee&nbsp;aa.py&nbsp;for&nbsp;residue-specific&nbsp;functions.</tt></dd></dl>\n\n<dl><dt><a name=\"Routines-setTermini\"><strong>setTermini</strong></a>(self)</dt><dd><tt>Set&nbsp;the&nbsp;termini&nbsp;for&nbsp;the&nbsp;protein.&nbsp;First&nbsp;set&nbsp;all&nbsp;known<br>\ntermini&nbsp;by&nbsp;looking&nbsp;at&nbsp;the&nbsp;ends&nbsp;of&nbsp;the&nbsp;chain.&nbsp;Then<br>\nexamine&nbsp;each&nbsp;residue,&nbsp;looking&nbsp;for&nbsp;internal&nbsp;chain&nbsp;breaks.</tt></dd></dl>\n\n<dl><dt><a name=\"Routines-updateBonds\"><strong>updateBonds</strong></a>(self)</dt><dd><tt>Update&nbsp;the&nbsp;bonding&nbsp;network&nbsp;of&nbsp;the&nbsp;protein.&nbsp;&nbsp;This&nbsp;happens<br>\nin&nbsp;3&nbsp;steps:<br>\n&nbsp;&nbsp;1.&nbsp;&nbsp;Applying&nbsp;the&nbsp;PEPTIDE&nbsp;patch&nbsp;to&nbsp;all&nbsp;Amino&nbsp;residues<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;so&nbsp;as&nbsp;to&nbsp;add&nbsp;reference&nbsp;for&nbsp;the&nbsp;N(i+1)&nbsp;and&nbsp;C(i-1)<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;atoms<br>\n&nbsp;&nbsp;2.&nbsp;&nbsp;UpdateInternalBonds&nbsp;for&nbsp;inter-residue&nbsp;linking<br>\n&nbsp;&nbsp;3.&nbsp;&nbsp;Set&nbsp;the&nbsp;links&nbsp;to&nbsp;the&nbsp;N(i+1)&nbsp;and&nbsp;C(i-1)&nbsp;atoms</tt></dd></dl>\n\n<dl><dt><a name=\"Routines-updateInternalBonds\"><strong>updateInternalBonds</strong></a>(self)</dt><dd><tt>Update&nbsp;the&nbsp;internal&nbsp;bonding&nbsp;network&nbsp;using&nbsp;the&nbsp;reference<br>\nobjects&nbsp;in&nbsp;each&nbsp;atom.</tt></dd></dl>\n\n<dl><dt><a name=\"Routines-updateSSbridges\"><strong>updateSSbridges</strong></a>(self)</dt><dd><tt>Check&nbsp;for&nbsp;SS-bridge&nbsp;partners,&nbsp;and&nbsp;if&nbsp;present,&nbsp;set&nbsp;appropriate<br>\npartners</tt></dd></dl>\n\n<dl><dt><a name=\"Routines-write\"><strong>write</strong></a>(self, message, indent<font color=\"#909090\">=0</font>)</dt><dd><tt>Write&nbsp;a&nbsp;message&nbsp;to&nbsp;stderr&nbsp;for&nbsp;debugging&nbsp;if&nbsp;verbose<br>\n&nbsp;<br>\nParameters<br>\n&nbsp;&nbsp;&nbsp;&nbsp;message:&nbsp;The&nbsp;message&nbsp;to&nbsp;write&nbsp;(string)<br>\n&nbsp;&nbsp;&nbsp;&nbsp;indent&nbsp;:&nbsp;The&nbsp;indent&nbsp;level&nbsp;(int,&nbsp;default=0)</tt></dd></dl>\n\n</td></tr></table></td></tr></table><p>\n<table width=\"100%\" cellspacing=0 cellpadding=2 border=0 summary=\"section\">\n<tr bgcolor=\"#55aa55\">\n<td colspan=3 valign=bottom>&nbsp;<br>\n<font color=\"#ffffff\" face=\"helvetica, arial\"><big><strong>Data</strong></big></font></td></tr>\n    \n<tr><td bgcolor=\"#55aa55\"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>\n<td width=\"100%\"><strong>AAPATH</strong> = 'dat/AA.xml'<br>\n<strong>BACKBONE</strong> = ['N', 'CA', 'C', 'O', 'O2', 'HA', 'HN', 'H', 'tN']<br>\n<strong>BONDED_SS_LIMIT</strong> = 2.5<br>\n<strong>BUMP_DIST</strong> = 2.0<br>\n<strong>BUMP_HDIST</strong> = 1.5<br>\n<strong>CELL_SIZE</strong> = 2<br>\n<strong>DIHEDRAL</strong> = 57.2958<br>\n<strong>NAPATH</strong> = 'dat/NA.xml'<br>\n<strong>PATCHPATH</strong> = 'dat/PATCHES.xml'<br>\n<strong>PEPTIDE_DIST</strong> = 1.7<br>\n<strong>REPAIR_LIMIT</strong> = 10<br>\n<strong>SMALL</strong> = 9.9999999999999995e-08<br>\n<strong>__author__</strong> = 'Jens Erik Nielsen, Todd Dolinsky'<br>\n<strong>__date__</strong> = '28 February 2006'</td></tr></table><p>\n<table width=\"100%\" cellspacing=0 cellpadding=2 border=0 summary=\"section\">\n<tr bgcolor=\"#7799ee\">\n<td colspan=3 valign=bottom>&nbsp;<br>\n<font color=\"#ffffff\" face=\"helvetica, arial\"><big><strong>Author</strong></big></font></td></tr>\n    \n<tr><td bgcolor=\"#7799ee\"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>\n<td width=\"100%\">Jens&nbsp;Erik&nbsp;Nielsen,&nbsp;Todd&nbsp;Dolinsky</td></tr></table>\n</body></html>", "id": 40184.0}