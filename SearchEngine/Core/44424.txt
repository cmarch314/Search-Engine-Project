{"text": " src psizeindex home todd release pdb2pqr 1 1 src psize py psize class Get dimensions and other information from a PQR file Originally written by Dave Sept Additional APBS specific features added by Nathan Baker Ported to Python Psize class by Todd Dolinsky and subsequently hacked by Nathan Baker PDB2PQR An automated pipeline for the setup execution and analysis of Poisson Boltzmann electrostatics calculations Nathan A Baker baker biochem wustl edu Todd Dolinsky todd ccb wustl edu Dept of Biochemistry and Molecular Biophysics Center for Computational Biology Washington University in St Louis Jens Nielsen Jens Nielsen ucd ie University College Dublin Additional contributing authors listed in documentation and supporting package licenses Copyright c 2 3 2 6 Washington University in St Louis All Rights Reserved This file is part of PDB2PQR PDB2PQR is free software you can redistribute it and or modify it under the terms of the GNU General Public License as published by the Free Software Foundation either version 2 of the License or at your option any later version PDB2PQR is distributed in the hope that it will be useful but WITHOUT ANY WARRANTY without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE See the GNU General Public License for more details You should have received a copy of the GNU General Public License along with PDB2PQR if not write to the Free Software Foundation Inc 59 Temple Place Suite 33 Boston MA 2111 13 7 USA Modules string sys Classes Psize class Psize Methods defined here init self getCenter self getCharge self getCoarseGridDims self getConstant self name Get a constant value raises KeyError if constant not found getFineGridDims self getFineGridPoints self getFocus self getLength self getMax self getMin self getProcGrid self getSmallest self parseInput self filename Parse input structure file in PDB or PQR format parseLines self lines Parse the lines parseString self structure Parse the input structure as a string in PDB or PQR format printResults self Return a string with the formatted results runPsize self filename Parse input PQR file and set parameters setAll self Set up all of the things calculated individually above setCenter self maxlen minlen Compute molecule center setCoarseGridDims self olen Compute coarse mesh dimensions setConstant self name value Set a constant to a value returns if constant not found setFineGridDims self olen clen Compute fine mesh dimensions setFineGridPoints self flen Compute mesh grid points assuming 4 levels in MG hierarchy setFocus self flen np clen Calculate the number of levels of focusing required for each processor subdomain setLength self maxlen minlen Compute molecule dimensions setProcGrid self n nsmall Calculate the number of processors required to span each dimension setSmallest self n Compute parallel division in case memory requirement above ceiling Find the smallest dimension and see if the number of grid points in that dimension will fit below the memory ceiling Reduce nsmall until an nsmall 3 domain will fit into memory Functions log log x base the logarithm of x to the given base If the base not specified returns the natural logarithm base e of x main usage Data stdout open file stdout mode w ", "_id": "http://www.ics.uci.edu/~dock/pdb2pqr/pydoc/src.psize.html", "title": "python: module src.psize", "html": "\n<!doctype html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<html><head><title>Python: module src.psize</title>\n</head><body bgcolor=\"#f0f0f8\">\n\n<table width=\"100%\" cellspacing=0 cellpadding=2 border=0 summary=\"heading\">\n<tr bgcolor=\"#7799ee\">\n<td valign=bottom>&nbsp;<br>\n<font color=\"#ffffff\" face=\"helvetica, arial\">&nbsp;<br><big><big><strong><a href=\"src.html\"><font color=\"#ffffff\">src</font></a>.psize</strong></big></big></font></td\n><td align=right valign=bottom\n><font color=\"#ffffff\" face=\"helvetica, arial\"><a href=\".\">index</a><br><a href=\"file:/home/todd/release/pdb2pqr-1.1.0/src/psize.py\">/home/todd/release/pdb2pqr-1.1.0/src/psize.py</a></font></td></tr></table>\n    <p><tt>psize&nbsp;class<br>\n&nbsp;<br>\nGet&nbsp;dimensions&nbsp;and&nbsp;other&nbsp;information&nbsp;from&nbsp;a&nbsp;PQR&nbsp;file.<br>\n&nbsp;<br>\nOriginally&nbsp;written&nbsp;by&nbsp;Dave&nbsp;Sept<br>\nAdditional&nbsp;APBS-specific&nbsp;features&nbsp;added&nbsp;by&nbsp;Nathan&nbsp;Baker<br>\nPorted&nbsp;to&nbsp;Python/<a href=\"#Psize\">Psize</a>&nbsp;class&nbsp;by&nbsp;Todd&nbsp;Dolinsky&nbsp;and&nbsp;subsequently<br>\nhacked&nbsp;by&nbsp;Nathan&nbsp;Baker<br>\n&nbsp;<br>\n&nbsp;&nbsp;&nbsp;&nbsp;----------------------------<br>\n&nbsp;<br>\nPDB2PQR&nbsp;--&nbsp;An&nbsp;automated&nbsp;pipeline&nbsp;for&nbsp;the&nbsp;setup,&nbsp;execution,&nbsp;and&nbsp;analysis&nbsp;of<br>\nPoisson-Boltzmann&nbsp;electrostatics&nbsp;calculations<br>\n&nbsp;<br>\nNathan&nbsp;A.&nbsp;Baker&nbsp;(baker@biochem.wustl.edu)<br>\nTodd&nbsp;Dolinsky&nbsp;(todd@ccb.wustl.edu)<br>\nDept.&nbsp;of&nbsp;Biochemistry&nbsp;and&nbsp;Molecular&nbsp;Biophysics<br>\nCenter&nbsp;for&nbsp;Computational&nbsp;Biology<br>\nWashington&nbsp;University&nbsp;in&nbsp;St.&nbsp;Louis<br>\n&nbsp;<br>\nJens&nbsp;Nielsen&nbsp;(Jens.Nielsen@ucd.ie)<br>\nUniversity&nbsp;College&nbsp;Dublin<br>\n&nbsp;<br>\nAdditional&nbsp;contributing&nbsp;authors&nbsp;listed&nbsp;in&nbsp;documentation&nbsp;and&nbsp;supporting<br>\npackage&nbsp;licenses.<br>\n&nbsp;<br>\nCopyright&nbsp;(c)&nbsp;2003-2006.&nbsp;&nbsp;Washington&nbsp;University&nbsp;in&nbsp;St.&nbsp;Louis.&nbsp;&nbsp;<br>\nAll&nbsp;Rights&nbsp;Reserved.<br>\n&nbsp;<br>\nThis&nbsp;file&nbsp;is&nbsp;part&nbsp;of&nbsp;PDB2PQR.<br>\n&nbsp;<br>\nPDB2PQR&nbsp;is&nbsp;free&nbsp;software;&nbsp;you&nbsp;can&nbsp;redistribute&nbsp;it&nbsp;and/or&nbsp;modify<br>\nit&nbsp;under&nbsp;the&nbsp;terms&nbsp;of&nbsp;the&nbsp;GNU&nbsp;General&nbsp;Public&nbsp;License&nbsp;as&nbsp;published&nbsp;by<br>\nthe&nbsp;Free&nbsp;Software&nbsp;Foundation;&nbsp;either&nbsp;version&nbsp;2&nbsp;of&nbsp;the&nbsp;License,&nbsp;or<br>\n(at&nbsp;your&nbsp;option)&nbsp;any&nbsp;later&nbsp;version.<br>\n&nbsp;<br>\nPDB2PQR&nbsp;is&nbsp;distributed&nbsp;in&nbsp;the&nbsp;hope&nbsp;that&nbsp;it&nbsp;will&nbsp;be&nbsp;useful,<br>\nbut&nbsp;WITHOUT&nbsp;ANY&nbsp;WARRANTY;&nbsp;without&nbsp;even&nbsp;the&nbsp;implied&nbsp;warranty&nbsp;of<br>\nMERCHANTABILITY&nbsp;or&nbsp;FITNESS&nbsp;FOR&nbsp;A&nbsp;PARTICULAR&nbsp;PURPOSE.&nbsp;&nbsp;See&nbsp;the<br>\nGNU&nbsp;General&nbsp;Public&nbsp;License&nbsp;for&nbsp;more&nbsp;details.<br>\n&nbsp;<br>\nYou&nbsp;should&nbsp;have&nbsp;received&nbsp;a&nbsp;copy&nbsp;of&nbsp;the&nbsp;GNU&nbsp;General&nbsp;Public&nbsp;License<br>\nalong&nbsp;with&nbsp;PDB2PQR;&nbsp;if&nbsp;not,&nbsp;write&nbsp;to&nbsp;the&nbsp;Free&nbsp;Software<br>\nFoundation,&nbsp;Inc.,&nbsp;59&nbsp;Temple&nbsp;Place,&nbsp;Suite&nbsp;330,&nbsp;Boston,&nbsp;MA&nbsp;02111-1307&nbsp;&nbsp;USA<br>\n&nbsp;<br>\n----------------------------</tt></p>\n<p>\n<table width=\"100%\" cellspacing=0 cellpadding=2 border=0 summary=\"section\">\n<tr bgcolor=\"#aa55cc\">\n<td colspan=3 valign=bottom>&nbsp;<br>\n<font color=\"#fffff\" face=\"helvetica, arial\"><big><strong>Modules</strong></big></font></td></tr>\n    \n<tr><td bgcolor=\"#aa55cc\"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>\n<td width=\"100%\"><table width=\"100%\" summary=\"list\"><tr><td width=\"25%\" valign=top><a href=\"string.html\">string</a><br>\n</td><td width=\"25%\" valign=top><a href=\"sys.html\">sys</a><br>\n</td><td width=\"25%\" valign=top></td><td width=\"25%\" valign=top></td></tr></table></td></tr></table><p>\n<table width=\"100%\" cellspacing=0 cellpadding=2 border=0 summary=\"section\">\n<tr bgcolor=\"#ee77aa\">\n<td colspan=3 valign=bottom>&nbsp;<br>\n<font color=\"#ffffff\" face=\"helvetica, arial\"><big><strong>Classes</strong></big></font></td></tr>\n    \n<tr><td bgcolor=\"#ee77aa\"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>\n<td width=\"100%\"><dl>\n<dt><font face=\"helvetica, arial\"><a href=\"src.psize.html#Psize\">Psize</a>\n</font></dt></dl>\n <p>\n<table width=\"100%\" cellspacing=0 cellpadding=2 border=0 summary=\"section\">\n<tr bgcolor=\"#ffc8d8\">\n<td colspan=3 valign=bottom>&nbsp;<br>\n<font color=\"#000000\" face=\"helvetica, arial\"><a name=\"Psize\">class <strong>Psize</strong></a></font></td></tr>\n    \n<tr><td bgcolor=\"#ffc8d8\"><tt>&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>\n<td width=\"100%\">Methods defined here:<br>\n<dl><dt><a name=\"Psize-__init__\"><strong>__init__</strong></a>(self)</dt></dl>\n\n<dl><dt><a name=\"Psize-getCenter\"><strong>getCenter</strong></a>(self)</dt></dl>\n\n<dl><dt><a name=\"Psize-getCharge\"><strong>getCharge</strong></a>(self)</dt></dl>\n\n<dl><dt><a name=\"Psize-getCoarseGridDims\"><strong>getCoarseGridDims</strong></a>(self)</dt></dl>\n\n<dl><dt><a name=\"Psize-getConstant\"><strong>getConstant</strong></a>(self, name)</dt><dd><tt>Get&nbsp;a&nbsp;constant&nbsp;value;&nbsp;raises&nbsp;KeyError&nbsp;if&nbsp;constant&nbsp;not&nbsp;found</tt></dd></dl>\n\n<dl><dt><a name=\"Psize-getFineGridDims\"><strong>getFineGridDims</strong></a>(self)</dt></dl>\n\n<dl><dt><a name=\"Psize-getFineGridPoints\"><strong>getFineGridPoints</strong></a>(self)</dt></dl>\n\n<dl><dt><a name=\"Psize-getFocus\"><strong>getFocus</strong></a>(self)</dt></dl>\n\n<dl><dt><a name=\"Psize-getLength\"><strong>getLength</strong></a>(self)</dt></dl>\n\n<dl><dt><a name=\"Psize-getMax\"><strong>getMax</strong></a>(self)</dt></dl>\n\n<dl><dt><a name=\"Psize-getMin\"><strong>getMin</strong></a>(self)</dt></dl>\n\n<dl><dt><a name=\"Psize-getProcGrid\"><strong>getProcGrid</strong></a>(self)</dt></dl>\n\n<dl><dt><a name=\"Psize-getSmallest\"><strong>getSmallest</strong></a>(self)</dt></dl>\n\n<dl><dt><a name=\"Psize-parseInput\"><strong>parseInput</strong></a>(self, filename)</dt><dd><tt>Parse&nbsp;input&nbsp;structure&nbsp;file&nbsp;in&nbsp;PDB&nbsp;or&nbsp;PQR&nbsp;format</tt></dd></dl>\n\n<dl><dt><a name=\"Psize-parseLines\"><strong>parseLines</strong></a>(self, lines)</dt><dd><tt>Parse&nbsp;the&nbsp;lines</tt></dd></dl>\n\n<dl><dt><a name=\"Psize-parseString\"><strong>parseString</strong></a>(self, structure)</dt><dd><tt>Parse&nbsp;the&nbsp;input&nbsp;structure&nbsp;as&nbsp;a&nbsp;string&nbsp;in&nbsp;PDB&nbsp;or&nbsp;PQR&nbsp;format</tt></dd></dl>\n\n<dl><dt><a name=\"Psize-printResults\"><strong>printResults</strong></a>(self)</dt><dd><tt>Return&nbsp;a&nbsp;string&nbsp;with&nbsp;the&nbsp;formatted&nbsp;results</tt></dd></dl>\n\n<dl><dt><a name=\"Psize-runPsize\"><strong>runPsize</strong></a>(self, filename)</dt><dd><tt>Parse&nbsp;input&nbsp;PQR&nbsp;file&nbsp;and&nbsp;set&nbsp;parameters</tt></dd></dl>\n\n<dl><dt><a name=\"Psize-setAll\"><strong>setAll</strong></a>(self)</dt><dd><tt>Set&nbsp;up&nbsp;all&nbsp;of&nbsp;the&nbsp;things&nbsp;calculated&nbsp;individually&nbsp;above</tt></dd></dl>\n\n<dl><dt><a name=\"Psize-setCenter\"><strong>setCenter</strong></a>(self, maxlen, minlen)</dt><dd><tt>Compute&nbsp;molecule&nbsp;center</tt></dd></dl>\n\n<dl><dt><a name=\"Psize-setCoarseGridDims\"><strong>setCoarseGridDims</strong></a>(self, olen)</dt><dd><tt>Compute&nbsp;coarse&nbsp;mesh&nbsp;dimensions</tt></dd></dl>\n\n<dl><dt><a name=\"Psize-setConstant\"><strong>setConstant</strong></a>(self, name, value)</dt><dd><tt>Set&nbsp;a&nbsp;constant&nbsp;to&nbsp;a&nbsp;value;&nbsp;returns&nbsp;0&nbsp;if&nbsp;constant&nbsp;not&nbsp;found</tt></dd></dl>\n\n<dl><dt><a name=\"Psize-setFineGridDims\"><strong>setFineGridDims</strong></a>(self, olen, clen)</dt><dd><tt>Compute&nbsp;fine&nbsp;mesh&nbsp;dimensions</tt></dd></dl>\n\n<dl><dt><a name=\"Psize-setFineGridPoints\"><strong>setFineGridPoints</strong></a>(self, flen)</dt><dd><tt>Compute&nbsp;mesh&nbsp;grid&nbsp;points,&nbsp;assuming&nbsp;4&nbsp;levels&nbsp;in&nbsp;MG&nbsp;hierarchy</tt></dd></dl>\n\n<dl><dt><a name=\"Psize-setFocus\"><strong>setFocus</strong></a>(self, flen, np, clen)</dt><dd><tt>Calculate&nbsp;the&nbsp;number&nbsp;of&nbsp;levels&nbsp;of&nbsp;focusing&nbsp;required&nbsp;for&nbsp;each<br>\nprocessor&nbsp;subdomain</tt></dd></dl>\n\n<dl><dt><a name=\"Psize-setLength\"><strong>setLength</strong></a>(self, maxlen, minlen)</dt><dd><tt>Compute&nbsp;molecule&nbsp;dimensions</tt></dd></dl>\n\n<dl><dt><a name=\"Psize-setProcGrid\"><strong>setProcGrid</strong></a>(self, n, nsmall)</dt><dd><tt>Calculate&nbsp;the&nbsp;number&nbsp;of&nbsp;processors&nbsp;required&nbsp;to&nbsp;span&nbsp;each&nbsp;<br>\ndimension</tt></dd></dl>\n\n<dl><dt><a name=\"Psize-setSmallest\"><strong>setSmallest</strong></a>(self, n)</dt><dd><tt>Compute&nbsp;parallel&nbsp;division&nbsp;in&nbsp;case&nbsp;memory&nbsp;requirement&nbsp;above&nbsp;ceiling<br>\nFind&nbsp;the&nbsp;smallest&nbsp;dimension&nbsp;and&nbsp;see&nbsp;if&nbsp;the&nbsp;number&nbsp;of&nbsp;grid&nbsp;points&nbsp;in<br>\nthat&nbsp;dimension&nbsp;will&nbsp;fit&nbsp;below&nbsp;the&nbsp;memory&nbsp;ceiling<br>\nReduce&nbsp;nsmall&nbsp;until&nbsp;an&nbsp;nsmall^3&nbsp;domain&nbsp;will&nbsp;fit&nbsp;into&nbsp;memory</tt></dd></dl>\n\n</td></tr></table></td></tr></table><p>\n<table width=\"100%\" cellspacing=0 cellpadding=2 border=0 summary=\"section\">\n<tr bgcolor=\"#eeaa77\">\n<td colspan=3 valign=bottom>&nbsp;<br>\n<font color=\"#ffffff\" face=\"helvetica, arial\"><big><strong>Functions</strong></big></font></td></tr>\n    \n<tr><td bgcolor=\"#eeaa77\"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>\n<td width=\"100%\"><dl><dt><a name=\"-log\"><strong>log</strong></a>(...)</dt><dd><tt><a href=\"#-log\">log</a>(x[,&nbsp;base])&nbsp;-&gt;&nbsp;the&nbsp;logarithm&nbsp;of&nbsp;x&nbsp;to&nbsp;the&nbsp;given&nbsp;base.<br>\nIf&nbsp;the&nbsp;base&nbsp;not&nbsp;specified,&nbsp;returns&nbsp;the&nbsp;natural&nbsp;logarithm&nbsp;(base&nbsp;e)&nbsp;of&nbsp;x.</tt></dd></dl>\n <dl><dt><a name=\"-main\"><strong>main</strong></a>()</dt></dl>\n <dl><dt><a name=\"-usage\"><strong>usage</strong></a>()</dt></dl>\n</td></tr></table><p>\n<table width=\"100%\" cellspacing=0 cellpadding=2 border=0 summary=\"section\">\n<tr bgcolor=\"#55aa55\">\n<td colspan=3 valign=bottom>&nbsp;<br>\n<font color=\"#ffffff\" face=\"helvetica, arial\"><big><strong>Data</strong></big></font></td></tr>\n    \n<tr><td bgcolor=\"#55aa55\"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>\n<td width=\"100%\"><strong>stdout</strong> = &lt;open file '&lt;stdout&gt;', mode 'w'&gt;</td></tr></table>\n</body></html>", "id": 44424.0}