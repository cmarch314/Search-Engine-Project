{"text": "Navigation Up Table of Contents Bibliography Index Title Page DelaunayLiftedTraits d DefinitionRequirements of the second traits class to be used with the class Delaunay d Types DelaunayLiftedTraits d Point d the dD point type on which the Delaunay algorithm operates DelaunayLiftedTraits d Hyperplane d a dD plane DelaunayLiftedTraits d Vector d a dD vector DelaunayLiftedTraits d Ray d a dD ray DelaunayLiftedTraits d RT a arithmetic ring type DelaunayLiftedTraits d Construct vector d Function object type that provides Vector d operator int d CGAL Null vector which constructs and returns the null vector DelaunayLiftedTraits d Construct hyperplane d Function object type that provides Hyperplane d operator ForwardIterator first ForwardIterator last Point d p CGAL Oriented side side which constructs and returns a hyperplane passing through the points in tuple first last and oriented such that p is on the side side of the returned hyperplane When side ON ORIENTED BOUNDARY then any hyperplane containing the tuple is returned DelaunayLiftedTraits d Vector to point d Function object type that provides Point d operator Vector d v which constructs and returns the point defined by v DelaunayLiftedTraits d Point to vector d Function object type that provides Vector d operator Point d v which constructs and returns the vector defined by p DelaunayLiftedTraits d Orientation d Function object type that provides Orientation operator ForwardIterator first ForwardIterator last which determines the orientation of the points tuple first last DelaunayLiftedTraits d Orthogonal vector d Function object type that provides Vector d operator Hyperplane d h which constructs and returns a vector orthogonal to h and pointing from the boundary into its positive halfspace DelaunayLiftedTraits d Oriented side d Predicate object type that provides Oriented side operator Hyperplane d h Point d p which determines the oriented side of p with respect to h DelaunayLiftedTraits d Has on positive side d Predicate object type that provides bool operator Hyperplane d h Point d p which return true iff p lies in the positive halfspace determined by h DelaunayLiftedTraits d Affinely independent d Predicate object type that provides bool operator ForwardIterator first ForwardIterator last which determines if the points tuple first last are affinely independent DelaunayLiftedTraits d Contained in simplex d Predicate object type that provides bool operator ForwardIterator first ForwardIterator last Point d p which determines if p is contained in the closed simplex defined by the points in tuple first last DelaunayLiftedTraits d Contained in affined hull d Predicate object type that provides bool operator ForwardIterator first ForwardIterator last Point d p which determines if p is contained in the affine hull of the points in tuple first last DelaunayLiftedTraits d Intersect d Predicate object type that provides Object operator Ray d r Hyperplane d h which determines if r and h intersect and returns the corresponding polymorphic object The previous requirements are all identical to the concept ConvexHullTraits d The Delaunay class adds the following requirements DelaunayLiftedTraits d Project along d axis d Predicate object type that provides DelaunayTraits d Point d operator Point d p which determines the d 1 dimensional point from the d dimensional point p while discarding the last coordinate DelaunayLiftedTraits d Lift to paraboloid d Predicate object type that provides Point d operator DelaunayTraits d Point d p which determines the d dimensional point from the d 1 dimensional point p while lifting it to the paraboloid of revolution DelaunayLiftedTraits d Component accessor d Predicate object type that provides RT homogeneous Vector d v int i and int dimension Vector d v where the former determines the ith coordinate of v and the latter the dimension of v Creation A default constructor and copy constructor is required Operations For each of the above function and predicate object types Func obj type a function must exist with the name func obj type object that creates an instance of the function or predicate object type For example Construct vector d traits construct vector d object Has ModelsCGAL Cartesian d FT LA CGAL Homogeneous d RT LA Next DelaunayTraits d Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Convex_hull_d_ref/Concept_DelaunayLiftedTraits_d.html", "title": "delaunayliftedtraits_d", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Convex_hull_d_ref/DelaunayLiftedTraits_d.tex' -->\n<html> <head>  \n<title>DelaunayLiftedTraits_d</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_648\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_589\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Concept.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_DelaunayLiftedTraits_d\"></A>\n<h2><I>DelaunayLiftedTraits_d</I></h2>\n<P>\n\n<H3>Definition</H3>Requirements of the second traits class to be used with the\nclass <I><A HREF=\"Class_Delaunay_d.html#Cross_link_anchor_651\">Delaunay_d</A></I>.\n<P>\n\n<H3>Types</H3>\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayLiftedTraits_d.html#Cross_link_anchor_648\">DelaunayLiftedTraits_d</A>::<A HREF=\"../Kernel_d_ref/Class_Point_d.html#Cross_link_anchor_487\">Point_d</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    the dD point type on which the Delaunay algorithm \noperates\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayLiftedTraits_d.html#Cross_link_anchor_648\">DelaunayLiftedTraits_d</A>::<A HREF=\"../Kernel_d_ref/Class_Hyperplane_d.html#Cross_link_anchor_499\">Hyperplane_d</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    a dD plane\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayLiftedTraits_d.html#Cross_link_anchor_648\">DelaunayLiftedTraits_d</A>::<A HREF=\"../Kernel_d_ref/Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    a dD vector\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayLiftedTraits_d.html#Cross_link_anchor_648\">DelaunayLiftedTraits_d</A>::<A HREF=\"../Kernel_d_ref/Class_Ray_d.html#Cross_link_anchor_495\">Ray_d</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    a dD ray\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayLiftedTraits_d.html#Cross_link_anchor_648\">DelaunayLiftedTraits_d</A>::RT\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    a arithmetic ring type\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayLiftedTraits_d.html#Cross_link_anchor_648\">DelaunayLiftedTraits_d</A>::Construct_vector_d\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Function object type that provides\n<I><A HREF=\"../Kernel_d_ref/Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A> operator()(int d, <A HREF=\"../Kernel_23_ref/Class_Null_vector.html#Cross_link_anchor_134\">CGAL::Null_vector</A>)</I>, which constructs\nand returns the null vector.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayLiftedTraits_d.html#Cross_link_anchor_648\">DelaunayLiftedTraits_d</A>::Construct_hyperplane_d\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Function object type that\nprovides <I><A HREF=\"../Kernel_d_ref/Class_Hyperplane_d.html#Cross_link_anchor_499\">Hyperplane_d</A> operator()(ForwardIterator first, ForwardIterator last, <A HREF=\"../Kernel_d_ref/Class_Point_d.html#Cross_link_anchor_487\">Point_d</A> p, <A HREF=\"../Kernel_23_ref/Enum_Oriented_side.html#Cross_link_anchor_115\">CGAL::Oriented_side</A> side)</I>, which\nconstructs and returns a hyperplane passing through the points in\n<I>tuple[first,last)</I> and oriented such that <I>p</I> is on the side\n<I>side</I> of the returned hyperplane. When\n<I>side==<A HREF=\"../Kernel_23_ref/Enum_Oriented_side#Enum_Oriented_side\">ON_ORIENTED_BOUNDARY</A></I> then any hyperplane containing the\ntuple is returned.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayLiftedTraits_d.html#Cross_link_anchor_648\">DelaunayLiftedTraits_d</A>::Vector_to_point_d\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Function object type that provides\n<I><A HREF=\"../Kernel_d_ref/Class_Point_d.html#Cross_link_anchor_487\">Point_d</A> operator()(<A HREF=\"../Kernel_d_ref/Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A> v)</I>, which constructs and\nreturns the point defined by <MATH><I>0+v</I></MATH>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayLiftedTraits_d.html#Cross_link_anchor_648\">DelaunayLiftedTraits_d</A>::Point_to_vector_d\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Function object type that provides\n<I><A HREF=\"../Kernel_d_ref/Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A> operator()(<A HREF=\"../Kernel_d_ref/Class_Point_d.html#Cross_link_anchor_487\">Point_d</A> v)</I>, which constructs and returns the\nvector defined by <MATH><I>p-0</I></MATH>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayLiftedTraits_d.html#Cross_link_anchor_648\">DelaunayLiftedTraits_d</A>::Orientation_d\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Function object type that provides\n<I><A HREF=\"../Kernel_23_ref/Enum_Orientation.html#Cross_link_anchor_114\">Orientation</A> operator()(ForwardIterator first, ForwardIterator last)</I>, which determines the <A HREF=\"../Kernel_23_ref/Function_orientation.html#Cross_link_anchor_247\">orientation</A> of the\npoints <I>tuple[first,last)</I>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayLiftedTraits_d.html#Cross_link_anchor_648\">DelaunayLiftedTraits_d</A>::Orthogonal_vector_d\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Function object type that provides\n<I><A HREF=\"../Kernel_d_ref/Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A> operator()(<A HREF=\"../Kernel_d_ref/Class_Hyperplane_d.html#Cross_link_anchor_499\">Hyperplane_d</A> h)</I>, which constructs and\nreturns a vector orthogonal to <I>h</I> and pointing from the boundary\ninto its positive halfspace.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayLiftedTraits_d.html#Cross_link_anchor_648\">DelaunayLiftedTraits_d</A>::Oriented_side_d\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Predicate object type that provides\n<I><A HREF=\"../Kernel_23_ref/Enum_Oriented_side.html#Cross_link_anchor_116\">Oriented_side</A> operator()(<A HREF=\"../Kernel_d_ref/Class_Hyperplane_d.html#Cross_link_anchor_499\">Hyperplane_d</A> h, <A HREF=\"../Kernel_d_ref/Class_Point_d.html#Cross_link_anchor_487\">Point_d</A> p)</I>, which\ndetermines the oriented side of <I>p</I> with respect to <I>h</I>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayLiftedTraits_d.html#Cross_link_anchor_648\">DelaunayLiftedTraits_d</A>::Has_on_positive_side_d\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Predicate object type that\nprovides <I>bool operator()(<A HREF=\"../Kernel_d_ref/Class_Hyperplane_d.html#Cross_link_anchor_499\">Hyperplane_d</A> h, <A HREF=\"../Kernel_d_ref/Class_Point_d.html#Cross_link_anchor_487\">Point_d</A> p)</I>, which\nreturn true iff <I>p</I> lies in the positive halfspace determined by\n<I>h</I>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayLiftedTraits_d.html#Cross_link_anchor_648\">DelaunayLiftedTraits_d</A>::Affinely_independent_d\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Predicate object type that provides\n<I>bool operator()(ForwardIterator first, ForwardIterator last)</I>, which \ndetermines if the points <I>tuple[first,last)</I> are affinely independent.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayLiftedTraits_d.html#Cross_link_anchor_648\">DelaunayLiftedTraits_d</A>::Contained_in_simplex_d\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Predicate object type that\nprovides <I>bool operator()(ForwardIterator first, ForwardIterator last, <A HREF=\"../Kernel_d_ref/Class_Point_d.html#Cross_link_anchor_487\">Point_d</A> p)</I>, which determines if <I>p</I> is contained in \nthe closed simplex defined by the points in <I>tuple[first,last)</I>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayLiftedTraits_d.html#Cross_link_anchor_648\">DelaunayLiftedTraits_d</A>::Contained_in_affined_hull_d\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Predicate object type that\nprovides <I>bool operator()(ForwardIterator first, ForwardIterator last, <A HREF=\"../Kernel_d_ref/Class_Point_d.html#Cross_link_anchor_487\">Point_d</A> p)</I>, which determines if <I>p</I> is contained in \nthe affine hull of the points in <I>tuple[first,last)</I>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayLiftedTraits_d.html#Cross_link_anchor_648\">DelaunayLiftedTraits_d</A>::Intersect_d\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Predicate object type that provides\n<I><A HREF=\"../Kernel_23_ref/Class_Object.html#Cross_link_anchor_88\">Object</A> operator()(<A HREF=\"../Kernel_d_ref/Class_Ray_d.html#Cross_link_anchor_495\">Ray_d</A> r, <A HREF=\"../Kernel_d_ref/Class_Hyperplane_d.html#Cross_link_anchor_499\">Hyperplane_d</A> h)</I>, which determines if\n<I>r</I> and <I>h</I> intersect and returns the corresponding\npolymorphic object.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\nThe previous requirements are all identical to the concept\n<I><A HREF=\"Concept_ConvexHullTraits_d.html#Cross_link_anchor_643\">ConvexHullTraits_d</A></I>. The Delaunay class adds the following\nrequirements.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayLiftedTraits_d.html#Cross_link_anchor_648\">DelaunayLiftedTraits_d</A>::Project_along_d_axis_d\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Predicate object type that\nprovides <I><A HREF=\"Concept_DelaunayTraits_d.html#Cross_link_anchor_649\">DelaunayTraits_d</A>::<A HREF=\"../Kernel_d_ref/Class_Point_d.html#Cross_link_anchor_487\">Point_d</A> operator()(<A HREF=\"../Kernel_d_ref/Class_Point_d.html#Cross_link_anchor_487\">Point_d</A> p)</I>, which\ndetermines the <MATH><I>d-1</I></MATH>-dimensional point from the <MATH><I>d</I></MATH>-dimensional point\n<MATH><I>p</I></MATH> while discarding the last coordinate.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayLiftedTraits_d.html#Cross_link_anchor_648\">DelaunayLiftedTraits_d</A>::Lift_to_paraboloid_d\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Predicate object type that\nprovides <I><A HREF=\"../Kernel_d_ref/Class_Point_d.html#Cross_link_anchor_487\">Point_d</A> operator()(<A HREF=\"Concept_DelaunayTraits_d.html#Cross_link_anchor_649\">DelaunayTraits_d</A>::<A HREF=\"../Kernel_d_ref/Class_Point_d.html#Cross_link_anchor_487\">Point_d</A> p)</I>, which\ndetermines the <MATH><I>d</I></MATH>-dimensional point from the <MATH><I>d-1</I></MATH>-dimensional point\n<MATH><I>p</I></MATH> while lifting it to the paraboloid of revolution.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_DelaunayLiftedTraits_d.html#Cross_link_anchor_648\">DelaunayLiftedTraits_d</A>::Component_accessor_d\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Predicate object type that\nprovides <I>RT homogeneous(<A HREF=\"../Kernel_d_ref/Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A> v,int i)</I> and <I>int dimension(<A HREF=\"../Kernel_d_ref/Class_Vector_d.html#Cross_link_anchor_489\">Vector_d</A> v)</I>, where the former determines the <MATH><I>i</I></MATH>th\ncoordinate of <MATH><I>v</I></MATH> and the latter the dimension of <MATH><I>v</I></MATH>.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Creation</H3>\n<P>\n\nA default constructor and copy constructor is required.\n<P>\n\n<H3>Operations</H3>\n<P>\n\nFor each of the above function and predicate object types,\n<I>Func_obj_type</I>, a function must exist with the name\n<I>func_obj_type_object</I> that creates an instance of the function or\npredicate object type.  For example:\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    Construct_vector_d\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.construct_vector_d_object ()\n        </I></NOBR>\n        \n    \n        </TR>\n        </TABLE>\n<P>\n\n<H3>Has Models</H3><I>CGAL::Cartesian_d&lt;FT,LA&gt;</I><BR>\n\n<I>CGAL::Homogeneous_d&lt;RT,LA&gt;</I>\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Concept_DelaunayTraits_d.html\"><I>DelaunayTraits_d</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_6!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 38124.0}