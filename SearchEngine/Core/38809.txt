{"text": "Navigation Up Table of Contents Bibliography Index Title Page CGAL Arr file writer Arrangement DefinitionThis class contains functions for writing the Arrangement components to a given output stream Users have to make sure that methods for writing Point and X curve objects defined in the Arrangement traits class are provided when using the output stream they choose to work with This class is templated with Arrangement and hence the user can work with Arr file writer Arrangement with its own Arrangement Inherits FromPm file writer Types The following handles and iterators have appropriate constant counterparts The mutable types are assignable to their constant counterparts The iterators are assignable to the respective handle types Wherever the handles appear in function parameter lists the appropriate iterator can be used as well Arr file writer Arrangement Curve iterator A bidirectional iterator over all curve nodes of the arrangement Arr file writer Arrangement Subcurve iterator A bidirectional iterator over all subcurve nodes of the arrangement Arr file writer Arrangement Edge iterator A bidirectional iterator over all edge nodes of the arrangement CreationAs described in the introduction the Arrangement users can choose a verbose format for printing their arrangement this is done by putting this option in the constructor Arr file writer Arrangement arr file writer std ostream o Arrangement arr bool verbose false constructs Arr file writer Arrangement for a given output stream the specified Arrangement and a verbose choice Arr file writer Arrangement arr file writer std ostream o Arrangement arr File header h constructs Arr file writer Arrangement for a given output stream the specified Arrangement and File header Operations The operation Arr file writer Arrangement supports are all the operations Pm file writer supported plus the following void arr file writer write curve Curve iterator cv writes a curve node to the output stream void arr file writer write subcurve Subcurve iterator scv writes a subcurve node to the output stream void arr file writer write edge Edge iterator edge writes an edge node to the output stream Next write arr Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Arrangement_2_ref/Class_Arr_file_writer.html", "title": "arr_file_writer&lt;arrangement&gt;", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Arrangement_2_ref/Arr_file_writer.tex' -->\n<html> <head>  \n<title>Arr_file_writer&lt;Arrangement&gt;</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_846\"></A>\n\n<A NAME=\"Cross_link_anchor_847\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_832\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Class.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_CGAL::Arr_file_writer<Arrangement>\"></A>\n<h2><I>CGAL::Arr_file_writer&lt;Arrangement&gt;</I></h2>\n<P>\n\n<H3>Definition</H3>This class contains functions for writing the <I>Arrangement</I> components to a given output stream.\nUsers have to make sure that methods for writing <I>Point</I> \nand <I>X_curve</I> objects defined in the <I>Arrangement traits</I> \nclass are provided when using the output stream they choose to work with..\nThis class is templated with <I>Arrangement</I>, and hence the user can work with <I><A HREF=\"Class_Arr_file_writer.html#Cross_link_anchor_847\">Arr_file_writer</A>&lt;Arrangement&gt;</I> \nwith its own <I>Arrangement</I>.\n<P>\n\n<H3>Inherits From</H3><I><A HREF=\"../Planar_map_ref/Class_Pm_file_writer.html#Cross_link_anchor_809\">Pm_file_writer</A></I>\n<P>\n\n<H3>Types</H3>\n<P>\n\nThe following handles and iterators have appropriate constant counterparts. \nThe mutable types are assignable to their constant counterparts. \nThe iterators are assignable to the respective handle types. \nWherever the handles appear in function parameter lists, the appropriate iterator can be used as well.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Arr_file_writer.html#Cross_link_anchor_847\">Arr_file_writer</A>&lt;Arrangement&gt;::Curve_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    A bidirectional iterator over all curve nodes of the <I>arrangement</I>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Arr_file_writer.html#Cross_link_anchor_847\">Arr_file_writer</A>&lt;Arrangement&gt;::Subcurve_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    A bidirectional iterator over all subcurve nodes of the <I>arrangement</I>.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Arr_file_writer.html#Cross_link_anchor_847\">Arr_file_writer</A>&lt;Arrangement&gt;::Edge_iterator\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    A bidirectional iterator over all edge nodes of the <I>arrangement</I>.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Creation</H3>As described in the introduction, the <I>Arrangement</I> users can choose a verbose format for \nprinting their arrangement, this is done by putting this option in the constructor.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    <A HREF=\"Class_Arr_file_writer.html#Cross_link_anchor_847\">Arr_file_writer</A>&lt;Arrangement&gt; arr_file_writer ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    std::ostream&amp; o,<BR>\n\nArrangement arr,<BR>\n\nbool verbose = false);</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    constructs <I><A HREF=\"Class_Arr_file_writer.html#Cross_link_anchor_847\">Arr_file_writer</A>&lt;Arrangement&gt;</I> for a given output stream, the specified <I>Arrangement</I> and a verbose choice.\n<P>\n\n</TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    <A HREF=\"Class_Arr_file_writer.html#Cross_link_anchor_847\">Arr_file_writer</A>&lt;Arrangement&gt; arr_file_writer ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    std::ostream&amp; o,<BR>\n\nArrangement arr,<BR>\n\n<A HREF=\"../Planar_map_ref/Class_File_header.html#Cross_link_anchor_805\">File_header</A> h);</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    constructs <I><A HREF=\"Class_Arr_file_writer.html#Cross_link_anchor_847\">Arr_file_writer</A>&lt;Arrangement&gt;</I> for a given output stream, the specified <I>Arrangement</I> and <I>File header</I>.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Operations</H3>\n<P>\n\nThe operation <I><A HREF=\"Class_Arr_file_writer.html#Cross_link_anchor_847\">Arr_file_writer</A>&lt;Arrangement&gt;</I> supports are all the operations <I><A HREF=\"../Planar_map_ref/Class_Pm_file_writer.html#Cross_link_anchor_809\">Pm_file_writer</A></I> supported plus the following:\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_write_curve_6Curve_iterator_cv9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    arr_file_writer.write_curve ( Curve_iterator cv)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    writes a curve node to the output stream.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_write_subcurve_6Subcurve_iterator_scv9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    arr_file_writer.write_subcurve ( Subcurve_iterator scv)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    writes a subcurve node to the output stream.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_write_edge_6Edge_iterator_edge9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    arr_file_writer.write_edge ( Edge_iterator edge)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    writes an edge node to the output stream.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Function_write_arr.html\"><I>write_arr</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_24!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 38809.0}