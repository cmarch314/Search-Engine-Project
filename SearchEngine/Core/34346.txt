{"text": "1 package swirl workspace 2 3 import junit framework Test 4 import junit framework TestSuite 5 6 import org apache commons httpclient HttpClient 7 import org apache commons httpclient HttpMethod 8 import org apache commons httpclient methods DeleteMethod 9 import org apache commons logging Log 1 import org apache commons logging LogFactory 11 import org apache webdav lib methods CopyMethod 12 13 14 TODO 15 16 author author 17 version Revision 1 7 18 19 public class CopyCommandTest extends CommandTest 2 21 TODO 22 public static final String FILE cp file 23 24 TODO 25 public static final String COLLECTION cptest collection 26 27 TODO 28 public static final String COLLECTION2 cptest collection2 29 3 TODO 31 public static final String DEEP COLLECTION COLLECTION 32 deep collection 33 34 TODO 35 private Log log 36 37 TODO 38 private String destination 39 4 TODO 41 private boolean overwrite false 42 43 44 Creates a new CopyCommandTest object 45 46 param name TODO 47 48 throws Exception TODO 49 5 public CopyCommandTest String name throws Exception 51 52 super name 53 log LogFactory getLog this getClass 54 55 56 57 TODO 58 59 return TODO 6 61 public static Test suite 62 63 TestSuite suite new TestSuite 64 65 suite addTestSuite CopyCommandTest class 66 67 suite addTest new CopyCommandTest testGoodCopy 68 suite addTest new CopyCommandTest testGoodCopyCollection 69 suite addTest new CopyCommandTest testGoodOverwriteCopy 7 suite addTest new CopyCommandTest testBadOverwriteCopy 71 return wrapSuite suite 72 73 74 75 TODO 76 77 public void tearDown 78 79 overwrite false 8 destination 81 82 HttpClient client new HttpClient 83 String deletes FILE COLLECTION COLLECTION2 DEEP COLLECTION 84 85 delete all collections 86 for int i i deletes length i 87 88 try 89 9 DeleteMethod method new DeleteMethod SlideTestSetup LOCALHOST 91 SlideTestSetup SLIDE 92 deletes i 93 94 if log isDebugEnabled 95 96 log debug method client executeMethod method 97 method getStatusText 98 99 1 catch Exception ex 1 1 1 2 log error attempting to tearDown CopyCommand test fixture ex 1 3 1 4 1 5 1 6 1 7 bad tests 1 8 public void testBadOverwriteCopy throws Exception 1 9 11 create a file 111 PutCommandTest put new PutCommandTest testPut 112 113 put go SlideTestSetup LOCALHOST SlideTestSetup SWIRL FILE 2 1 114 115 create a collection 116 MkcolCommandTest col new MkcolCommandTest testMkcol 117 118 col go SlideTestSetup LOCALHOST SlideTestSetup SWIRL COLLECTION 2 1 119 12 creat file of same name in collection 121 put go SlideTestSetup LOCALHOST SlideTestSetup SWIRL COLLECTION 122 FILE 2 1 123 124 copy file into collection with file of same name 125 destination SlideTestSetup SWIRL COLLECTION FILE 126 127 if log isDebugEnabled 128 129 log debug destination destination 13 131 132 overwrite false 133 go SlideTestSetup LOCALHOST SlideTestSetup SWIRL FILE 412 134 135 136 Response should be 137 138 139 14 good tests 141 public void testGoodCopy throws Exception 142 143 create a file 144 PutCommandTest put new PutCommandTest testPut 145 146 put go SlideTestSetup LOCALHOST SlideTestSetup SWIRL FILE 2 1 147 148 create a collection 149 MkcolCommandTest col new MkcolCommandTest testMkcol 15 151 col go SlideTestSetup LOCALHOST SlideTestSetup SWIRL COLLECTION 2 1 152 153 copy file into collection 154 destination SlideTestSetup SWIRL COLLECTION FILE 155 156 if log isDebugEnabled 157 158 log debug destination destination 159 16 161 overwrite false 162 go SlideTestSetup LOCALHOST SlideTestSetup SWIRL FILE 2 1 163 164 165 Response should be 166 167 168 169 17 TODO 171 172 throws Exception TODO 173 174 public void testGoodCopyCollection throws Exception 175 176 create a collection 177 MkcolCommandTest col new MkcolCommandTest testMkcol 178 179 col go SlideTestSetup LOCALHOST SlideTestSetup SWIRL COLLECTION 2 1 18 181 create a second collection 182 MkcolCommandTest col2 new MkcolCommandTest testMkcol2 183 184 col2 go SlideTestSetup LOCALHOST SlideTestSetup SWIRL COLLECTION2 185 2 1 186 187 copy the second collection into the first collection 188 destination SlideTestSetup SWIRL COLLECTION COLLECTION2 189 overwrite false 19 go SlideTestSetup LOCALHOST SlideTestSetup SWIRL COLLECTION2 2 1 191 192 193 Response should be 194 195 196 197 198 TODO 199 2 throws Exception TODO 2 1 2 2 public void testGoodOverwriteCopy throws Exception 2 3 2 4 create a file 2 5 PutCommandTest put new PutCommandTest testPut 2 6 2 7 put go SlideTestSetup LOCALHOST SlideTestSetup SWIRL FILE 2 1 2 8 2 9 create a collection 21 MkcolCommandTest col new MkcolCommandTest testMkcol 211 212 col go SlideTestSetup LOCALHOST SlideTestSetup SWIRL COLLECTION 2 1 213 214 creat file of same name in collection 215 put go SlideTestSetup LOCALHOST SlideTestSetup SWIRL COLLECTION 216 FILE 2 1 217 218 copy file into collection with file of same name 219 destination SlideTestSetup SWIRL COLLECTION FILE 22 221 if log isDebugEnabled 222 223 log debug destination destination 224 225 226 overwrite true 227 228 status code 2 4 The source resource was successfully moved to a pre existing destination resource 229 go SlideTestSetup LOCALHOST SlideTestSetup SWIRL FILE 2 4 23 231 232 Response should be 233 234 235 236 237 TODO 238 239 param uri TODO 24 241 return TODO 242 243 protected HttpMethod createMethod String uri 244 245 CopyMethod copyMethod new CopyMethod uri 246 247 copyMethod setOverwrite overwrite 248 copyMethod setDestination destination 249 25 return copyMethod 251 252 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.20/xref-test/swirl/workspace/CopyCommandTest.html", "title": "copycommandtest xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>CopyCommandTest xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../stylesheet.css\" />\n</head>\n<body>\n<pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <strong>package</strong> <a href=\"../../swirl/workspace/package-summary.html\">swirl.workspace</a>;\n<a name=\"2\" href=\"#2\">2</a>   \n<a name=\"3\" href=\"#3\">3</a>   <strong>import</strong> junit.framework.Test;\n<a name=\"4\" href=\"#4\">4</a>   <strong>import</strong> junit.framework.TestSuite;\n<a name=\"5\" href=\"#5\">5</a>   \n<a name=\"6\" href=\"#6\">6</a>   <strong>import</strong> org.apache.commons.httpclient.HttpClient;\n<a name=\"7\" href=\"#7\">7</a>   <strong>import</strong> org.apache.commons.httpclient.HttpMethod;\n<a name=\"8\" href=\"#8\">8</a>   <strong>import</strong> org.apache.commons.httpclient.methods.DeleteMethod;\n<a name=\"9\" href=\"#9\">9</a>   <strong>import</strong> org.apache.commons.logging.Log;\n<a name=\"10\" href=\"#10\">10</a>  <strong>import</strong> org.apache.commons.logging.LogFactory;\n<a name=\"11\" href=\"#11\">11</a>  <strong>import</strong> org.apache.webdav.lib.methods.CopyMethod;\n<a name=\"12\" href=\"#12\">12</a>  \n<a name=\"13\" href=\"#13\">13</a>  <em>/**<em>*</em></em>\n<a name=\"14\" href=\"#14\">14</a>  <em> * TODO</em>\n<a name=\"15\" href=\"#15\">15</a>  <em> *</em>\n<a name=\"16\" href=\"#16\">16</a>  <em> * @author $author$</em>\n<a name=\"17\" href=\"#17\">17</a>  <em> * @version $Revision: 1.7 $</em>\n<a name=\"18\" href=\"#18\">18</a>  <em> */</em>\n<a name=\"19\" href=\"#19\">19</a>  <strong>public</strong> <strong>class</strong> <a href=\"../../swirl/workspace/CopyCommandTest.html\">CopyCommandTest</a> <strong>extends</strong> <a href=\"../../swirl/workspace/CommandTest.html\">CommandTest</a>\n<a name=\"20\" href=\"#20\">20</a>  {\n<a name=\"21\" href=\"#21\">21</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"22\" href=\"#22\">22</a>      <strong>public</strong> <strong>static</strong> <strong>final</strong> String FILE = <span class=\"string\">\"cp-file\"</span>;\n<a name=\"23\" href=\"#23\">23</a>  \n<a name=\"24\" href=\"#24\">24</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"25\" href=\"#25\">25</a>      <strong>public</strong> <strong>static</strong> <strong>final</strong> String COLLECTION = <span class=\"string\">\"cptest-collection\"</span>;\n<a name=\"26\" href=\"#26\">26</a>  \n<a name=\"27\" href=\"#27\">27</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"28\" href=\"#28\">28</a>      <strong>public</strong> <strong>static</strong> <strong>final</strong> String COLLECTION2 = <span class=\"string\">\"cptest-collection2\"</span>;\n<a name=\"29\" href=\"#29\">29</a>  \n<a name=\"30\" href=\"#30\">30</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"31\" href=\"#31\">31</a>      <strong>public</strong> <strong>static</strong> <strong>final</strong> String DEEP_COLLECTION = COLLECTION\n<a name=\"32\" href=\"#32\">32</a>                                                   + <span class=\"string\">\"/deep-collection\"</span>;\n<a name=\"33\" href=\"#33\">33</a>  \n<a name=\"34\" href=\"#34\">34</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"35\" href=\"#35\">35</a>      <strong>private</strong> Log log;\n<a name=\"36\" href=\"#36\">36</a>  \n<a name=\"37\" href=\"#37\">37</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"38\" href=\"#38\">38</a>      <strong>private</strong> String destination = <span class=\"string\">\"\"</span>;\n<a name=\"39\" href=\"#39\">39</a>  \n<a name=\"40\" href=\"#40\">40</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"41\" href=\"#41\">41</a>      <strong>private</strong> <strong>boolean</strong> overwrite = false;\n<a name=\"42\" href=\"#42\">42</a>  \n<a name=\"43\" href=\"#43\">43</a>      <em>/**<em>*</em></em>\n<a name=\"44\" href=\"#44\">44</a>  <em>     * Creates a new CopyCommandTest object.</em>\n<a name=\"45\" href=\"#45\">45</a>  <em>     *</em>\n<a name=\"46\" href=\"#46\">46</a>  <em>     * @param name TODO</em>\n<a name=\"47\" href=\"#47\">47</a>  <em>     *</em>\n<a name=\"48\" href=\"#48\">48</a>  <em>     * @throws Exception TODO</em>\n<a name=\"49\" href=\"#49\">49</a>  <em>     */</em>\n<a name=\"50\" href=\"#50\">50</a>      <strong>public</strong> <a href=\"../../swirl/workspace/CopyCommandTest.html\">CopyCommandTest</a>(String name) throws Exception\n<a name=\"51\" href=\"#51\">51</a>      {\n<a name=\"52\" href=\"#52\">52</a>          <strong>super</strong>(name);\n<a name=\"53\" href=\"#53\">53</a>          log = LogFactory.getLog(<strong>this</strong>.getClass());\n<a name=\"54\" href=\"#54\">54</a>      }\n<a name=\"55\" href=\"#55\">55</a>  \n<a name=\"56\" href=\"#56\">56</a>      <em>/**<em>*</em></em>\n<a name=\"57\" href=\"#57\">57</a>  <em>     * TODO</em>\n<a name=\"58\" href=\"#58\">58</a>  <em>     *</em>\n<a name=\"59\" href=\"#59\">59</a>  <em>     * @return TODO</em>\n<a name=\"60\" href=\"#60\">60</a>  <em>     */</em>\n<a name=\"61\" href=\"#61\">61</a>      <strong>public</strong> <strong>static</strong> Test suite()\n<a name=\"62\" href=\"#62\">62</a>      {\n<a name=\"63\" href=\"#63\">63</a>          TestSuite suite = <strong>new</strong> TestSuite();\n<a name=\"64\" href=\"#64\">64</a>  \n<a name=\"65\" href=\"#65\">65</a>          suite.addTestSuite(CopyCommandTest.<strong>class</strong>);\n<a name=\"66\" href=\"#66\">66</a>  \n<a name=\"67\" href=\"#67\">67</a>          <em class=\"comment\">//suite.addTest(new CopyCommandTest(\"testGoodCopy\"));</em>\n<a name=\"68\" href=\"#68\">68</a>          <em class=\"comment\">//suite.addTest(new CopyCommandTest(\"testGoodCopyCollection\"));</em>\n<a name=\"69\" href=\"#69\">69</a>          <em class=\"comment\">//suite.addTest(new CopyCommandTest(\"testGoodOverwriteCopy\"));</em>\n<a name=\"70\" href=\"#70\">70</a>          <em class=\"comment\">//suite.addTest(new CopyCommandTest(\"testBadOverwriteCopy\"));\t\t\t</em>\n<a name=\"71\" href=\"#71\">71</a>          <strong>return</strong> wrapSuite(suite);\n<a name=\"72\" href=\"#72\">72</a>      }\n<a name=\"73\" href=\"#73\">73</a>  \n<a name=\"74\" href=\"#74\">74</a>      <em>/**<em>*</em></em>\n<a name=\"75\" href=\"#75\">75</a>  <em>     * TODO</em>\n<a name=\"76\" href=\"#76\">76</a>  <em>     */</em>\n<a name=\"77\" href=\"#77\">77</a>      <strong>public</strong> <strong>void</strong> tearDown()\n<a name=\"78\" href=\"#78\">78</a>      {\n<a name=\"79\" href=\"#79\">79</a>          overwrite = false;\n<a name=\"80\" href=\"#80\">80</a>          destination = <span class=\"string\">\"\"</span>;\n<a name=\"81\" href=\"#81\">81</a>  \n<a name=\"82\" href=\"#82\">82</a>          HttpClient client = <strong>new</strong> HttpClient();\n<a name=\"83\" href=\"#83\">83</a>          String[] deletes = {FILE, COLLECTION, COLLECTION2, DEEP_COLLECTION};\n<a name=\"84\" href=\"#84\">84</a>  \n<a name=\"85\" href=\"#85\">85</a>          <em class=\"comment\">//delete all collections</em>\n<a name=\"86\" href=\"#86\">86</a>          <strong>for</strong>(<strong>int</strong> i = 0; i &lt; deletes.length; ++i)\n<a name=\"87\" href=\"#87\">87</a>          {\n<a name=\"88\" href=\"#88\">88</a>              <strong>try</strong>\n<a name=\"89\" href=\"#89\">89</a>              {\n<a name=\"90\" href=\"#90\">90</a>                  DeleteMethod method = <strong>new</strong> DeleteMethod(SlideTestSetup.LOCALHOST\n<a name=\"91\" href=\"#91\">91</a>                                                         + SlideTestSetup.SLIDE\n<a name=\"92\" href=\"#92\">92</a>                                                         + deletes[i]);\n<a name=\"93\" href=\"#93\">93</a>  \n<a name=\"94\" href=\"#94\">94</a>                  <strong>if</strong>(log.isDebugEnabled())\n<a name=\"95\" href=\"#95\">95</a>                  {\n<a name=\"96\" href=\"#96\">96</a>                      log.debug(<span class=\"string\">\"method: \"</span> + client.executeMethod(method)\n<a name=\"97\" href=\"#97\">97</a>                                + method.getStatusText());\n<a name=\"98\" href=\"#98\">98</a>                  }\n<a name=\"99\" href=\"#99\">99</a>              }\n<a name=\"100\" href=\"#100\">100</a>             <strong>catch</strong>(Exception ex)\n<a name=\"101\" href=\"#101\">101</a>             {\n<a name=\"102\" href=\"#102\">102</a>                 log.error(<span class=\"string\">\"attempting to tearDown CopyCommand test fixture\"</span>, ex);\n<a name=\"103\" href=\"#103\">103</a>             }\n<a name=\"104\" href=\"#104\">104</a>         }\n<a name=\"105\" href=\"#105\">105</a>     }\n<a name=\"106\" href=\"#106\">106</a> \n<a name=\"107\" href=\"#107\">107</a>     <em class=\"comment\">// bad tests</em>\n<a name=\"108\" href=\"#108\">108</a>     <strong>public</strong> <strong>void</strong> testBadOverwriteCopy() throws Exception\n<a name=\"109\" href=\"#109\">109</a>     {\n<a name=\"110\" href=\"#110\">110</a>         <em class=\"comment\">// create a file</em>\n<a name=\"111\" href=\"#111\">111</a>         <a href=\"../../swirl/workspace/PutCommandTest.html\">PutCommandTest</a> put = <strong>new</strong> <a href=\"../../swirl/workspace/PutCommandTest.html\">PutCommandTest</a>(<span class=\"string\">\"testPut\"</span>);\n<a name=\"112\" href=\"#112\">112</a> \n<a name=\"113\" href=\"#113\">113</a>         put.go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL + FILE, 201);\n<a name=\"114\" href=\"#114\">114</a> \n<a name=\"115\" href=\"#115\">115</a>         <em class=\"comment\">// create a collection</em>\n<a name=\"116\" href=\"#116\">116</a>         <a href=\"../../swirl/workspace/MkcolCommandTest.html\">MkcolCommandTest</a> col = <strong>new</strong> <a href=\"../../swirl/workspace/MkcolCommandTest.html\">MkcolCommandTest</a>(<span class=\"string\">\"testMkcol\"</span>);\n<a name=\"117\" href=\"#117\">117</a> \n<a name=\"118\" href=\"#118\">118</a>         col.go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL + COLLECTION, 201);\n<a name=\"119\" href=\"#119\">119</a> \n<a name=\"120\" href=\"#120\">120</a>         <em class=\"comment\">// creat file of same name in collection</em>\n<a name=\"121\" href=\"#121\">121</a>         put.go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL + COLLECTION\n<a name=\"122\" href=\"#122\">122</a>                + <span class=\"string\">\"/\"</span> + FILE, 201);\n<a name=\"123\" href=\"#123\">123</a> \n<a name=\"124\" href=\"#124\">124</a>         <em class=\"comment\">// copy file into collection with file of same name</em>\n<a name=\"125\" href=\"#125\">125</a>         destination = SlideTestSetup.SWIRL + COLLECTION + '/' + FILE;\n<a name=\"126\" href=\"#126\">126</a> \n<a name=\"127\" href=\"#127\">127</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"128\" href=\"#128\">128</a>         {\n<a name=\"129\" href=\"#129\">129</a>             log.debug(<span class=\"string\">\"destination: \"</span> + destination);\n<a name=\"130\" href=\"#130\">130</a>         }\n<a name=\"131\" href=\"#131\">131</a> \n<a name=\"132\" href=\"#132\">132</a>         overwrite = false;\n<a name=\"133\" href=\"#133\">133</a>         go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL + FILE, 412);\n<a name=\"134\" href=\"#134\">134</a> \n<a name=\"135\" href=\"#135\">135</a>         <em>/**<em>*</em></em>\n<a name=\"136\" href=\"#136\">136</a> <em>         * Response should be</em>\n<a name=\"137\" href=\"#137\">137</a> <em>         */</em>\n<a name=\"138\" href=\"#138\">138</a>     }\n<a name=\"139\" href=\"#139\">139</a> \n<a name=\"140\" href=\"#140\">140</a>     <em class=\"comment\">// good tests</em>\n<a name=\"141\" href=\"#141\">141</a>     <strong>public</strong> <strong>void</strong> testGoodCopy() throws Exception\n<a name=\"142\" href=\"#142\">142</a>     {\n<a name=\"143\" href=\"#143\">143</a>         <em class=\"comment\">// create a file</em>\n<a name=\"144\" href=\"#144\">144</a>         <a href=\"../../swirl/workspace/PutCommandTest.html\">PutCommandTest</a> put = <strong>new</strong> <a href=\"../../swirl/workspace/PutCommandTest.html\">PutCommandTest</a>(<span class=\"string\">\"testPut\"</span>);\n<a name=\"145\" href=\"#145\">145</a> \n<a name=\"146\" href=\"#146\">146</a>         put.go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL + FILE, 201);\n<a name=\"147\" href=\"#147\">147</a> \n<a name=\"148\" href=\"#148\">148</a>         <em class=\"comment\">// create a collection</em>\n<a name=\"149\" href=\"#149\">149</a>         <a href=\"../../swirl/workspace/MkcolCommandTest.html\">MkcolCommandTest</a> col = <strong>new</strong> <a href=\"../../swirl/workspace/MkcolCommandTest.html\">MkcolCommandTest</a>(<span class=\"string\">\"testMkcol\"</span>);\n<a name=\"150\" href=\"#150\">150</a> \n<a name=\"151\" href=\"#151\">151</a>         col.go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL + COLLECTION, 201);\n<a name=\"152\" href=\"#152\">152</a> \n<a name=\"153\" href=\"#153\">153</a>         <em class=\"comment\">// copy file into collection</em>\n<a name=\"154\" href=\"#154\">154</a>         destination = SlideTestSetup.SWIRL + COLLECTION + '/' + FILE;\n<a name=\"155\" href=\"#155\">155</a> \n<a name=\"156\" href=\"#156\">156</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"157\" href=\"#157\">157</a>         {\n<a name=\"158\" href=\"#158\">158</a>             log.debug(<span class=\"string\">\"destination: \"</span> + destination);\n<a name=\"159\" href=\"#159\">159</a>         }\n<a name=\"160\" href=\"#160\">160</a> \n<a name=\"161\" href=\"#161\">161</a>         overwrite = false;\n<a name=\"162\" href=\"#162\">162</a>         go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL + FILE, 201);\n<a name=\"163\" href=\"#163\">163</a> \n<a name=\"164\" href=\"#164\">164</a>         <em>/**<em>*</em></em>\n<a name=\"165\" href=\"#165\">165</a> <em>         * Response should be</em>\n<a name=\"166\" href=\"#166\">166</a> <em>         */</em>\n<a name=\"167\" href=\"#167\">167</a>     }\n<a name=\"168\" href=\"#168\">168</a> \n<a name=\"169\" href=\"#169\">169</a>     <em>/**<em>*</em></em>\n<a name=\"170\" href=\"#170\">170</a> <em>     * TODO</em>\n<a name=\"171\" href=\"#171\">171</a> <em>     *</em>\n<a name=\"172\" href=\"#172\">172</a> <em>     * @throws Exception TODO</em>\n<a name=\"173\" href=\"#173\">173</a> <em>     */</em>\n<a name=\"174\" href=\"#174\">174</a>     <strong>public</strong> <strong>void</strong> testGoodCopyCollection() throws Exception\n<a name=\"175\" href=\"#175\">175</a>     {\n<a name=\"176\" href=\"#176\">176</a>         <em class=\"comment\">// create a collection</em>\n<a name=\"177\" href=\"#177\">177</a>         <a href=\"../../swirl/workspace/MkcolCommandTest.html\">MkcolCommandTest</a> col = <strong>new</strong> <a href=\"../../swirl/workspace/MkcolCommandTest.html\">MkcolCommandTest</a>(<span class=\"string\">\"testMkcol\"</span>);\n<a name=\"178\" href=\"#178\">178</a> \n<a name=\"179\" href=\"#179\">179</a>         col.go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL + COLLECTION, 201);\n<a name=\"180\" href=\"#180\">180</a> \n<a name=\"181\" href=\"#181\">181</a>         <em class=\"comment\">// create a second collection</em>\n<a name=\"182\" href=\"#182\">182</a>         <a href=\"../../swirl/workspace/MkcolCommandTest.html\">MkcolCommandTest</a> col2 = <strong>new</strong> <a href=\"../../swirl/workspace/MkcolCommandTest.html\">MkcolCommandTest</a>(<span class=\"string\">\"testMkcol2\"</span>);\n<a name=\"183\" href=\"#183\">183</a> \n<a name=\"184\" href=\"#184\">184</a>         col2.go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL + COLLECTION2,\n<a name=\"185\" href=\"#185\">185</a>                 201);\n<a name=\"186\" href=\"#186\">186</a> \n<a name=\"187\" href=\"#187\">187</a>         <em class=\"comment\">// copy the second collection into the first collection</em>\n<a name=\"188\" href=\"#188\">188</a>         destination = SlideTestSetup.SWIRL + COLLECTION + <span class=\"string\">\"/\"</span> + COLLECTION2;\n<a name=\"189\" href=\"#189\">189</a>         overwrite = false;\n<a name=\"190\" href=\"#190\">190</a>         go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL + COLLECTION2, 201);\n<a name=\"191\" href=\"#191\">191</a> \n<a name=\"192\" href=\"#192\">192</a>         <em>/**<em>*</em></em>\n<a name=\"193\" href=\"#193\">193</a> <em>         * Response should be</em>\n<a name=\"194\" href=\"#194\">194</a> <em>         */</em>\n<a name=\"195\" href=\"#195\">195</a>     }\n<a name=\"196\" href=\"#196\">196</a> \n<a name=\"197\" href=\"#197\">197</a>     <em>/**<em>*</em></em>\n<a name=\"198\" href=\"#198\">198</a> <em>     * TODO</em>\n<a name=\"199\" href=\"#199\">199</a> <em>     *</em>\n<a name=\"200\" href=\"#200\">200</a> <em>     * @throws Exception TODO</em>\n<a name=\"201\" href=\"#201\">201</a> <em>     */</em>\n<a name=\"202\" href=\"#202\">202</a>     <strong>public</strong> <strong>void</strong> testGoodOverwriteCopy() throws Exception\n<a name=\"203\" href=\"#203\">203</a>     {\n<a name=\"204\" href=\"#204\">204</a>         <em class=\"comment\">// create a file</em>\n<a name=\"205\" href=\"#205\">205</a>         <a href=\"../../swirl/workspace/PutCommandTest.html\">PutCommandTest</a> put = <strong>new</strong> <a href=\"../../swirl/workspace/PutCommandTest.html\">PutCommandTest</a>(<span class=\"string\">\"testPut\"</span>);\n<a name=\"206\" href=\"#206\">206</a> \n<a name=\"207\" href=\"#207\">207</a>         put.go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL + FILE, 201);\n<a name=\"208\" href=\"#208\">208</a> \n<a name=\"209\" href=\"#209\">209</a>         <em class=\"comment\">// create a collection</em>\n<a name=\"210\" href=\"#210\">210</a>         <a href=\"../../swirl/workspace/MkcolCommandTest.html\">MkcolCommandTest</a> col = <strong>new</strong> <a href=\"../../swirl/workspace/MkcolCommandTest.html\">MkcolCommandTest</a>(<span class=\"string\">\"testMkcol\"</span>);\n<a name=\"211\" href=\"#211\">211</a> \n<a name=\"212\" href=\"#212\">212</a>         col.go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL + COLLECTION, 201);\n<a name=\"213\" href=\"#213\">213</a> \n<a name=\"214\" href=\"#214\">214</a>         <em class=\"comment\">// creat file of same name in collection</em>\n<a name=\"215\" href=\"#215\">215</a>         put.go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL + COLLECTION\n<a name=\"216\" href=\"#216\">216</a>                + <span class=\"string\">\"/\"</span> + FILE, 201);\n<a name=\"217\" href=\"#217\">217</a> \n<a name=\"218\" href=\"#218\">218</a>         <em class=\"comment\">// copy file into collection with file of same name</em>\n<a name=\"219\" href=\"#219\">219</a>         destination = SlideTestSetup.SWIRL + COLLECTION + '/' + FILE;\n<a name=\"220\" href=\"#220\">220</a> \n<a name=\"221\" href=\"#221\">221</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"222\" href=\"#222\">222</a>         {\n<a name=\"223\" href=\"#223\">223</a>             log.debug(<span class=\"string\">\"destination: \"</span> + destination);\n<a name=\"224\" href=\"#224\">224</a>         }\n<a name=\"225\" href=\"#225\">225</a> \n<a name=\"226\" href=\"#226\">226</a>         overwrite = <strong>true</strong>;\n<a name=\"227\" href=\"#227\">227</a> \n<a name=\"228\" href=\"#228\">228</a>         <em class=\"comment\">// status code 204 \"The source resource was successfully moved to a pre-existing destination resource.\"</em>\n<a name=\"229\" href=\"#229\">229</a>         go(SlideTestSetup.LOCALHOST + SlideTestSetup.SWIRL + FILE, 204);\n<a name=\"230\" href=\"#230\">230</a> \n<a name=\"231\" href=\"#231\">231</a>         <em>/**<em>*</em></em>\n<a name=\"232\" href=\"#232\">232</a> <em>         * Response should be</em>\n<a name=\"233\" href=\"#233\">233</a> <em>         */</em>\n<a name=\"234\" href=\"#234\">234</a>     }\n<a name=\"235\" href=\"#235\">235</a> \n<a name=\"236\" href=\"#236\">236</a>     <em>/**<em>*</em></em>\n<a name=\"237\" href=\"#237\">237</a> <em>     * TODO</em>\n<a name=\"238\" href=\"#238\">238</a> <em>     *</em>\n<a name=\"239\" href=\"#239\">239</a> <em>     * @param uri TODO</em>\n<a name=\"240\" href=\"#240\">240</a> <em>     *</em>\n<a name=\"241\" href=\"#241\">241</a> <em>     * @return TODO</em>\n<a name=\"242\" href=\"#242\">242</a> <em>     */</em>\n<a name=\"243\" href=\"#243\">243</a>     <strong>protected</strong> HttpMethod createMethod(String uri)\n<a name=\"244\" href=\"#244\">244</a>     {\n<a name=\"245\" href=\"#245\">245</a>         CopyMethod copyMethod = <strong>new</strong> CopyMethod(uri);\n<a name=\"246\" href=\"#246\">246</a> \n<a name=\"247\" href=\"#247\">247</a>         copyMethod.setOverwrite(overwrite);\n<a name=\"248\" href=\"#248\">248</a>         copyMethod.setDestination(destination);\n<a name=\"249\" href=\"#249\">249</a> \n<a name=\"250\" href=\"#250\">250</a>         <strong>return</strong> copyMethod;\n<a name=\"251\" href=\"#251\">251</a>     }\n<a name=\"252\" href=\"#252\">252</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 34346.0}