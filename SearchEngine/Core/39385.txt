{"text": "Navigation Up Table of Contents Bibliography Index Title Page TriangulationDataStructure 2 Face Definition The concept TriangulationDataStructure 2 Face describes the types used to store the faces face class of a TriangulationDataStructure 2 A TriangulationDataStructure 2 Face stores three pointers to its three vertices and three pointers to its three neighbors The vertices are indexed 1 and 2 in counterclockwise order The neighbor indexed i lies opposite to vertex i In degenerate cases when the triangulation data structure stores a simplicial complex of dimension and 1 the type TriangulationDataStructure 2 Face is used to store the faces of maximal dimension of the complex i e a vertex in dimension an edge in dimension 1 Only vertices and neighbors with index are set in the first case only vertices and neighbors with index or 1 are set in the second case TypesThe class TriangulationDataStructure 2 Face defines the same types as the triangulation data structure except the iterators and the circulators Creation The methods create face and delete face have to be used to define new faces and to delete non longer used faces Vertex Access Functions Vertex handle f vertex int i returns the vertex i of f Precondition i 2 int f index Vertex handle v returns the index of vertex v in f Precondition v is a vertex of f bool f has vertex Vertex handle v returns true if v is a vertex of f bool f has vertex Vertex handle v int i returns true if v is a vertex of f and computes the index i of v in f Neighbor Access Functions The neighbor with index i is the neighbor which is opposite to the vertex with index i Face handle f neighbor int i returns the neighbor i of f Precondition i 2 int f index Face handle n returns the index of face n Precondition n is a neighbor of f bool f has neighbor Face handle n returns true if n is a neighbor of f bool f has neighbor Face handle n int i returns true if n is a neighbor of f and compute the index i of n Other Access Functions int f mirror index int i index of f as a neighbor of f neighbor i Vertex handle f mirror vertex int i vertex of f neighbor i opposite to f advanced Setting void f set vertex int i Vertex handle v sets vertex i to be v Precondition i 2 void f set neighbor int i Face handle n sets neighbor i to be n Precondition i 2 void f set vertices sets the vertices pointers to NULL void f set vertices Vertex handle v Vertex handle v1 Vertex handle v2 sets the vertices pointers void f set neighbors sets the neighbors pointers to NULL void f set neighbors Face handle n Face handle n1 Face handle n2 sets the neighbors pointers Checking bool f is valid returns true if the function is valid of the base class returns true and if for each index i i 3 face f is a neighbor of its neighboring face neighbor i and shares with this neighbor the vertices cw i and ccw i in correct reverse order advanced Miscellaneous int f ccw int i Returns i 1 modulo 3 Precondition i 2 int f cw int i Returns i 2 modulo 3 Precondition i 2 See AlsoTriangulationDataStructure 2 TriangulationDataStructure 2 Vertex TriangulationFaceBase 2 Next TriangulationDSVertexBase 2 Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/TDS_2_ref/Concept_TriangulationDataStructure_2--Face.html", "title": "triangulationdatastructure_2::face", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './TDS_2_ref/TriangulationDSFace_2.tex' -->\n<html> <head>  \n<title>TriangulationDataStructure_2::Face</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_962\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_909\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Concept.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_TriangulationDataStructure_2::Face\"></A>\n<h2><I>TriangulationDataStructure_2::Face</I></h2>\n<P>\n\n<H3>Definition</H3>\n<P>\n\nThe concept <I><A HREF=\"Concept_TriangulationDataStructure_2--Face.html#Cross_link_anchor_962\">TriangulationDataStructure_2::Face</A></I>  describes the types used to store the faces\nface class of a \n<I><A HREF=\"Concept_TriangulationDataStructure_2.html#Cross_link_anchor_960\">TriangulationDataStructure_2</A></I>.\nA <I><A HREF=\"Concept_TriangulationDataStructure_2--Face.html#Cross_link_anchor_962\">TriangulationDataStructure_2::Face</A></I> stores three pointers to its three vertices\nand three pointers to its three neighbors.\nThe vertices are indexed 0,1, and 2 in counterclockwise order.\nThe  neighbor indexed <MATH><I>i</I></MATH> lies\n<A HREF=\"../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243\">opposite</A> to vertex i.\n<P>\n\nIn degenerate cases,\nwhen the triangulation data structure  stores a\nsimplicial complex of dimension <MATH><I>0</I></MATH> and <MATH><I>1</I></MATH>,\nthe type <I><A HREF=\"Concept_TriangulationDataStructure_2--Face.html#Cross_link_anchor_962\">TriangulationDataStructure_2::Face</A></I>  is used to store the faces \nof maximal dimension of the complex \n: i.e. a vertex in dimension <MATH><I>0</I></MATH>, an edge in dimension <MATH><I>1</I></MATH>.\nOnly vertices and neighbors with index <MATH><I>0</I></MATH> are set in the first case,\nonly vertices and neighbors with index <MATH><I>0</I></MATH> or <MATH><I>1</I></MATH> are set in the second case.\n<P>\n\n<H3>Types</H3>The class <I><A HREF=\"Concept_TriangulationDataStructure_2--Face.html#Cross_link_anchor_962\">TriangulationDataStructure_2::Face</A></I> defines the same types as \nthe triangulation data structure \nexcept the iterators and the circulators.\n<P>\n\n<H3>Creation</H3>\n<P>\n\nThe methods <I>create_face</I> and\n<I>delete_face()</I>\nhave to be used to \ndefine new faces and  to delete non longer used faces.\n<P>\n\n<H3>Vertex Access Functions</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Vertex_handle_vertex6int_i9_const;\"></A>\nVertex_handle\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    f.vertex ( int i)\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns  the vertex <I>i</I> of <I>f</I>.<BR>\n\n<EM>Precondition: </EM><MATH><I>0 <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> 2</I></MATH>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_int_index6Vertex_handle_v9_const;\"></A>\nint\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    f.index ( Vertex_handle v)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the index of vertex <I>v</I> in <I>f</I>.<BR>\n\n<EM>Precondition: </EM><I>v</I> is\na vertex of <I>f</I>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_has_vertex6Vertex_handle_v9_const;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    f.has_vertex ( Vertex_handle v)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns <I>true</I> if  <I>v</I> is a vertex of <I>f</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_has_vertex6Vertex_handle_v+_int__i9_const;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    f.has_vertex ( Vertex_handle v,  int&amp; i)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns <I>true</I> if  <I>v</I> is a vertex of <I>f</I>, and\n computes the index <I>i</I> of <I>v</I> in <I>f</I>.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Neighbor Access Functions</H3>\n<P>\n\nThe neighbor with index <I>i</I> is the neighbor which is <A HREF=\"../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243\">opposite</A>\nto the vertex with index <I>i</I>.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Face_handle_neighbor6int_i9_const;\"></A>\nFace_handle\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    f.neighbor ( int i)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns  the neighbor <I>i</I> of <I>f</I>.<BR>\n\n<EM>Precondition: </EM><MATH><I>0 <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> 2</I></MATH>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_int_index6Face_handle_n9_const;\"></A>\nint\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    f.index ( Face_handle n)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the index of face <I>n</I>.<BR>\n\n<EM>Precondition: </EM><I>n</I> is a neighbor of <I>f</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_has_neighbor6Face_handle_n9_const;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    f.has_neighbor ( Face_handle n)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns <I>true</I> if <I>n</I> is a neighbor of <I>f</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_has_neighbor6Face_handle_n+_int__i9_const;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    f.has_neighbor ( Face_handle n,  int&amp; i)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns <I>true</I> if <I>n</I> is a neighbor of <I>f</I>,  and\ncompute the index <I>i</I> of <I>n</I>.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Other Access Functions</H3>\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_int_mirror_index6int_i9_const;\"></A>\nint\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    f.mirror_index ( int i)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    index of <I>f</I> as a neighbor of <I>f</I>.<I>neighbor(i)</I>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Vertex_handle_mirror_vertex6int_i9_const;\"></A>\nVertex_handle\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    f.mirror_vertex ( int i)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    vertex of <I>f</I>.<I>neighbor(i)</I>\n        </TD></TR>\n        </TABLE>\n <A HREF=\"../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243\">opposite</A> to  <I>f</I>.\n<P>\n\n<BR>\n\n<div class=\"AdvancedBlock\">\n  <table><tr><td valign=\"top\">\n  <img border=\"0\" src=\"cc_advanced_begin1.gif\" alt=\"begin of advanced section\">\n  </td><td valign=\"top\">\n  <em class=\"AdvancedBlockLabel\">&nbsp;advanced&nbsp;</em>\n  </td><td valign=\"top\">\n  <img border=\"0\" src=\"cc_advanced_begin2.gif\" alt=\"begin of advanced section\">\n  </td></tr></table>\n\n<H3>Setting</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_set_vertex6int_i+_Vertex_handle_v9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    f.set_vertex ( int i,  Vertex_handle v)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    sets vertex <I>i</I> to be <I>v</I>.<BR>\n\n<EM>Precondition: </EM><MATH><I>0 <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> 2</I></MATH>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_set_neighbor6int_i+_Face_handle_n9;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    f.set_neighbor ( int i,  Face_handle n)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    sets neighbor <I>i</I> to be <I>n</I>.<BR>\n\n<EM>Precondition: </EM><MATH><I>0 <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> 2</I></MATH>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_set_vertices69;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    f.set_vertices ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    sets the vertices pointers to <I>NULL</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_set_vertices6Vertex_handle_v0+_Vertex_handle_v1+_Vertex_handle_v29;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    f.set_vertices ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    Vertex_handle v0,<BR>\n\nVertex_handle v1,<BR>\n\nVertex_handle v2)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    sets the vertices pointers.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_set_neighbors69;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    f.set_neighbors ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    sets the neighbors pointers to <I>NULL</I>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_set_neighbors6Face_handle_n0+_Face_handle_n1+_Face_handle_n29;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    f.set_neighbors ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    Face_handle n0,<BR>\n\nFace_handle n1,<BR>\n\nFace_handle n2)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    sets the neighbors pointers.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Checking</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_bool_is_valid69_const;\"></A>\nbool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    f.is_valid ()\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns <I>true</I> if  the function \n<I>is_valid()</I> of the base class\nreturns <I>true</I> and if, for each index <MATH><I>i</I></MATH>, <MATH><I>0  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i &lt; 3</I></MATH>,\nface <MATH><I>f</I></MATH> is a neighbor of its neighboring face <I>neighbor(i)</I>\nand shares with this neighbor the  vertices <I>cw(i)</I> and <I>ccw(i)</I>\nin correct reverse order.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<table><tr><td valign=\"bottom\">\n  <img border=\"0\" src=\"cc_advanced_end1.gif\" alt=\"end of advanced section\">\n  </td><td valign=\"bottom\">\n  <em class=\"AdvancedBlockLabel\">&nbsp;advanced&nbsp;</em>\n  </td><td valign=\"bottom\">\n  <img border=\"0\" src=\"cc_advanced_end2.gif\" alt=\"end of advanced section\">\n  </td></tr></table></div>\n<P>\n\n<H3>Miscellaneous</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_int_ccw6int_i9_const;\"></A>\nint\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    f.ccw ( int i)\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns <MATH><I>i+1</I></MATH> modulo 3.<BR>\n\n<EM>Precondition: </EM><MATH><I>0 <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> 2</I></MATH>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_int_cw6int_i9_const;\"></A>\nint\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    f.cw ( int i)\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Returns <MATH><I>i+2</I></MATH> modulo 3.<BR>\n\n<EM>Precondition: </EM><MATH><I>0 <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> i  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC=\"cc_leq.gif\"> 2</I></MATH>.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>See Also</H3><I><A HREF=\"Concept_TriangulationDataStructure_2.html#Cross_link_anchor_960\">TriangulationDataStructure_2</A></I>,<BR>\n\n<I><A HREF=\"Concept_TriangulationDataStructure_2--Vertex.html#Cross_link_anchor_964\">TriangulationDataStructure_2::Vertex</A></I>,<BR>\n\n<I><A HREF=\"../Triangulation_2_ref/Concept_TriangulationFaceBase_2.html#Cross_link_anchor_934\">TriangulationFaceBase_2</A></I>.\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Concept_TriangulationDSVertexBase_2.html\"><I>TriangulationDSVertexBase_2</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_34!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 39385.0}