{"text": "Main Page Modules Data Structures File List Data Fields Globals Related Pages Vgrid classOracle for Cartesian mesh data More Filesfile vgrid h Potential oracle for Cartesian mesh data Data Structuresstruct sVgrid Electrostatic potential oracle for Cartesian mesh data More Defines define VGRID DIGITS 6 Number of decimal places for comparisons and formatting Typedefs typedef sVgrid Vgrid Declaration of the Vgrid class as the sVgrid structure Functionsunsigned long int Vgrid memChk Vgrid thee Return the memory used by this structure and its contents in bytes Vgrid Vgrid ctor int nx int ny int nz double hx double hy double hzed double xmin double ymin double zmin double data Construct Vgrid object with values obtained from Vpmg readDX for example int Vgrid ctor2 Vgrid thee int nx int ny int nz double hx double hy double hzed double xmin double ymin double zmin double data Initialize Vgrid object with values obtained from Vpmg readDX for example int Vgrid value Vgrid thee double x 3 double value Get potential value from mesh or approximation at a point void Vgrid dtor Vgrid thee Object destructor void Vgrid dtor2 Vgrid thee FORTRAN stub object destructor int Vgrid curvature Vgrid thee double pt 3 int cflag double curv Get second derivative values at a point int Vgrid gradient Vgrid thee double pt 3 double grad 3 Get first derivative values at a point void Vgrid writeUHBD Vgrid thee const char iodev const char iofmt const char thost const char fname char title double pvec Write out the data in UHBD grid format void Vgrid writeDX Vgrid thee const char iodev const char iofmt const char thost const char fname char title double pvec Write out the data in OpenDX grid format int Vgrid readDX Vgrid thee const char iodev const char iofmt const char thost const char fname Read in data in OpenDX grid format double Vgrid integrate Vgrid thee Get the integral of the data double Vgrid normL1 Vgrid thee Get the norm of the data This returns the integral double Vgrid normL2 Vgrid thee Get the norm of the data This returns the integral double Vgrid normLinf Vgrid thee Get the norm of the data This returns the integral double Vgrid seminormH1 Vgrid thee Get the semi norm of the data This returns the integral double Vgrid normH1 Vgrid thee Get the norm or energy norm of the data This returns the integral Detailed Description Oracle for Cartesian mesh data Function Documentation Vgrid Vgrid ctor int nx int ny int nz double hx double hy double hzed double xmin double ymin double zmin double data Construct Vgrid object with values obtained from Vpmg readDX for example Author Nathan Baker Parameters nx Number grid points in x direction ny Number grid points in y direction nz Number grid points in z direction hx Grid spacing in x direction hy Grid spacing in y direction hzed Grid spacing in z direction xmin x coordinate of lower grid corner ymin y coordinate of lower grid corner zmin z coordinate of lower grid corner data nx ny nz array of data This can be VNULL if you are planning to read in data later with one of the read routines Returns Newly allocated and initialized Vgrid object int Vgrid ctor2 Vgrid thee int nx int ny int nz double hx double hy double hzed double xmin double ymin double zmin double data Initialize Vgrid object with values obtained from Vpmg readDX for example Author Nathan Baker Parameters thee Pointer to newly allocated Vgrid object nx Number grid points in x direction ny Number grid points in y direction nz Number grid points in z direction hx Grid spacing in x direction hy Grid spacing in y direction hzed Grid spacing in z direction xmin x coordinate of lower grid corner ymin y coordinate of lower grid corner zmin z coordinate of lower grid corner data nx ny nz array of data This can be VNULL if you are planning to read in data later with one of the read routines Returns Newly allocated and initialized Vgrid object int Vgrid curvature Vgrid thee double pt 3 int cflag double curv Get second derivative values at a point Author Steve Bond and Nathan Baker Parameters thee Pointer to Vgrid object pt Location to evaluate second derivative cflag Reduced Maximal Curvature 1 Mean Curvature Laplace 2 Gauss Curvature 3 True Maximal Curvature curv Specified curvature value Returns 1 if successful if off grid void Vgrid dtor Vgrid thee Object destructor Author Nathan Baker Parameters thee Pointer to memory location of object to be destroyed void Vgrid dtor2 Vgrid thee FORTRAN stub object destructor Author Nathan Baker Parameters thee Pointer to object to be destroyed int Vgrid gradient Vgrid thee double pt 3 double grad 3 Get first derivative values at a point Author Nathan Baker and Steve Bond Parameters thee Pointer to Vgrid object pt Location to evaluate gradient grad Gradient Returns 1 if successful if off grid double Vgrid integrate Vgrid thee Get the integral of the data Author Nathan Baker Parameters thee Vgrid object Returns Integral of data unsigned long int Vgrid memChk Vgrid thee Return the memory used by this structure and its contents in bytes Author Nathan Baker Parameters thee Vgrid object Returns The memory used by this structure and its contents in bytes double Vgrid normH1 Vgrid thee Get the norm or energy norm of the data This returns the integral Author Nathan Baker Parameters thee Vgrid object Returns Integral of data double Vgrid normL1 Vgrid thee Get the norm of the data This returns the integral Author Nathan Baker Parameters thee Vgrid object Returns norm of data double Vgrid normL2 Vgrid thee Get the norm of the data This returns the integral Author Nathan Baker Parameters thee Vgrid object Returns norm of data double Vgrid normLinf Vgrid thee Get the norm of the data This returns the integral Author Nathan Baker Parameters thee Vgrid object Returns norm of data int Vgrid readDX Vgrid thee const char iodev const char iofmt const char thost const char fname Read in data in OpenDX grid format Note All dimension information is given in order z y x Author Nathan Baker Parameters thee Vgrid object iodev Input device type FILE BUFF UNIX INET iofmt Input device format ASCII XDR thost Input hostname for sockets fname Input FILE BUFF UNIX INET name Returns 1 if sucessful otherwise double Vgrid seminormH1 Vgrid thee Get the semi norm of the data This returns the integral Author Nathan Baker Parameters thee Vgrid object Returns Integral of data int Vgrid value Vgrid thee double x 3 double value Get potential value from mesh or approximation at a point Author Nathan Baker Parameters thee Vgrid obejct x Point at which to evaluate potential value Value of data at point x Returns 1 if successful if off grid void Vgrid writeDX Vgrid thee const char iodev const char iofmt const char thost const char fname char title double pvec Write out the data in OpenDX grid format Author Nathan Baker Parameters thee Grid object iodev Output device type FILE BUFF UNIX INET iofmt Output device format ASCII XDR thost Output hostname for sockets fname Output FILE BUFF UNIX INET name title Title to be inserted in grid file pvec Partition weight if 1 point in current partition if point not in current partition if 1 point on near boundary void Vgrid writeUHBD Vgrid thee const char iodev const char iofmt const char thost const char fname char title double pvec Write out the data in UHBD grid format Note The mesh spacing should be uniform Format changed from 12 6E to 12 5E Author Nathan Baker Parameters thee Grid object iodev Output device type FILE BUFF UNIX INET iofmt Output device format ASCII XDR thost Output hostname for sockets fname Output FILE BUFF UNIX INET name title Title to be inserted in grid file pvec Partition weight if 1 point in current partition if point not in current partition if 1 point on near boundary Bug This routine does not respect partition information Generated on Tue Dec 6 1 5 58 2 5 for APBS by 1 3 5", "_id": "http://www.ics.uci.edu/~dock/manuals/apbs/html/programmer/group__Vgrid.html", "title": "apbs: vgrid class", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=iso-8859-1\">\n<title>APBS: Vgrid class</title>\n<link href=\"apbs.css\" rel=\"stylesheet\" type=\"text/css\">\n</head><body>\n<!-- Generated by Doxygen 1.3.5 -->\n<div class=\"qindex\"><a class=\"qindex\" href=\"index.html\">Main&nbsp;Page</a> | <a class=\"qindex\" href=\"modules.html\">Modules</a> | <a class=\"qindex\" href=\"annotated.html\">Data&nbsp;Structures</a> | <a class=\"qindex\" href=\"files.html\">File&nbsp;List</a> | <a class=\"qindex\" href=\"functions.html\">Data&nbsp;Fields</a> | <a class=\"qindex\" href=\"globals.html\">Globals</a> | <a class=\"qindex\" href=\"pages.html\">Related&nbsp;Pages</a></div>\n<h1>Vgrid class</h1>Oracle for Cartesian mesh data.  \n<a href=\"#_details\">More...</a><table border=0 cellpadding=0 cellspacing=0>\n<tr><td></td></tr>\n<tr><td colspan=2><br><h2>Files</h2></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>file &nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"vgrid_8h.html\">vgrid.h</a></td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Potential oracle for Cartesian mesh data. <br><br></td></tr>\n\n<p>\n<tr><td colspan=2><br><h2>Data Structures</h2></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>struct &nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"structsVgrid.html\">sVgrid</a></td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Electrostatic potential oracle for Cartesian mesh data. </em> <a href=\"structsVgrid.html#_details\">More...</a><em><br><br></td></tr>\n<tr><td colspan=2><br><h2>Defines</h2></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top><a class=\"anchor\" name=\"ga18\" doxytag=\"Vgrid::VGRID_DIGITS\" ></a>\n#define&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vgrid.html#ga18\">VGRID_DIGITS</a>&nbsp;&nbsp;&nbsp;6</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Number of decimal places for comparisons and formatting. <br><br></td></tr>\n<tr><td colspan=2><br><h2>Typedefs</h2></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top><a class=\"anchor\" name=\"ga0\" doxytag=\"Vgrid::Vgrid\" ></a>\ntypedef <a class=\"el\" href=\"structsVgrid.html\">sVgrid</a>&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vgrid.html#ga0\">Vgrid</a></td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Declaration of the Vgrid class as the <a class=\"el\" href=\"structsVgrid.html\">sVgrid</a> structure. <br><br></td></tr>\n<tr><td colspan=2><br><h2>Functions</h2></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>unsigned long int&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vgrid.html#ga1\">Vgrid_memChk</a> (<a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *thee)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Return the memory used by this structure (and its contents) in bytes.  <a href=\"#ga1\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top><a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vgrid.html#ga2\">Vgrid_ctor</a> (int nx, int ny, int nz, double hx, double hy, double hzed, double xmin, double ymin, double zmin, double *data)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Construct Vgrid object with values obtained from Vpmg_readDX (for example).  <a href=\"#ga2\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>int&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vgrid.html#ga3\">Vgrid_ctor2</a> (<a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *thee, int nx, int ny, int nz, double hx, double hy, double hzed, double xmin, double ymin, double zmin, double *data)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Initialize Vgrid object with values obtained from Vpmg_readDX (for example).  <a href=\"#ga3\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>int&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vgrid.html#ga4\">Vgrid_value</a> (<a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *thee, double x[3], double *value)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Get potential value (from mesh or approximation) at a point.  <a href=\"#ga4\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>void&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vgrid.html#ga5\">Vgrid_dtor</a> (<a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> **thee)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Object destructor.  <a href=\"#ga5\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>void&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vgrid.html#ga6\">Vgrid_dtor2</a> (<a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *thee)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">FORTRAN stub object destructor.  <a href=\"#ga6\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>int&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vgrid.html#ga7\">Vgrid_curvature</a> (<a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *thee, double pt[3], int cflag, double *curv)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Get second derivative values at a point.  <a href=\"#ga7\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>int&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vgrid.html#ga8\">Vgrid_gradient</a> (<a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *thee, double pt[3], double grad[3])</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Get first derivative values at a point.  <a href=\"#ga8\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>void&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vgrid.html#ga9\">Vgrid_writeUHBD</a> (<a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *thee, const char *iodev, const char *iofmt, const char *thost, const char *fname, char *title, double *pvec)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Write out the data in UHBD grid format.  <a href=\"#ga9\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>void&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vgrid.html#ga10\">Vgrid_writeDX</a> (<a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *thee, const char *iodev, const char *iofmt, const char *thost, const char *fname, char *title, double *pvec)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Write out the data in OpenDX grid format.  <a href=\"#ga10\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>int&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vgrid.html#ga11\">Vgrid_readDX</a> (<a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *thee, const char *iodev, const char *iofmt, const char *thost, const char *fname)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Read in data in OpenDX grid format.  <a href=\"#ga11\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vgrid.html#ga12\">Vgrid_integrate</a> (<a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *thee)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Get the integral of the data.  <a href=\"#ga12\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vgrid.html#ga13\">Vgrid_normL1</a> (<a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *thee)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Get the <img class=formulaInl alt=\"$L_1$\" src=\"form_0.png\"> norm of the data. This returns the integral: <p class=formulaDsp>\n<img class=formulaDsp alt=\"\\[ \\| u \\|_{L_1} = \\int_\\Omega | u(x) | dx \\]\" src=\"form_1.png\">\n<p>\n.  <a href=\"#ga13\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vgrid.html#ga14\">Vgrid_normL2</a> (<a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *thee)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Get the <img class=formulaInl alt=\"$L_2$\" src=\"form_2.png\"> norm of the data. This returns the integral: <p class=formulaDsp>\n<img class=formulaDsp alt=\"\\[ \\| u \\|_{L_2} = \\left( \\int_\\Omega | u(x) |^2 dx \\right)^{1/2} \\]\" src=\"form_3.png\">\n<p>\n.  <a href=\"#ga14\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vgrid.html#ga15\">Vgrid_normLinf</a> (<a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *thee)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Get the <img class=formulaInl alt=\"$L_\\infty$\" src=\"form_5.png\"> norm of the data. This returns the integral: <p class=formulaDsp>\n<img class=formulaDsp alt=\"\\[ \\| u \\|_{L_\\infty} = \\sup_{x \\in \\Omega} | u(x) | \\]\" src=\"form_6.png\">\n<p>\n.  <a href=\"#ga15\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vgrid.html#ga16\">Vgrid_seminormH1</a> (<a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *thee)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Get the <img class=formulaInl alt=\"$H_1$\" src=\"form_7.png\"> semi-norm of the data. This returns the integral: <p class=formulaDsp>\n<img class=formulaDsp alt=\"\\[ | u |_{H_1} = \\left( \\int_\\Omega |\\nabla u(x)|^2 dx \\right)^{1/2} \\]\" src=\"form_8.png\">\n<p>\n.  <a href=\"#ga16\"></a><br><br></td></tr>\n<tr><td class=\"memItemLeft\" nowrap align=right valign=top>double&nbsp;</td><td class=\"memItemRight\" valign=bottom><a class=\"el\" href=\"group__Vgrid.html#ga17\">Vgrid_normH1</a> (<a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *thee)</td></tr>\n\n<tr><td class=\"mdescLeft\">&nbsp;</td><td class=\"mdescRight\">Get the <img class=formulaInl alt=\"$H_1$\" src=\"form_7.png\"> norm (or energy norm) of the data. This returns the integral: <p class=formulaDsp>\n<img class=formulaDsp alt=\"\\[ \\| u \\|_{H_1} = \\left( \\int_\\Omega |\\nabla u(x)|^2 dx + \\int_\\Omega |u(x)|^2 dx \\right)^{1/2} \\]\" src=\"form_9.png\">\n<p>\n.  <a href=\"#ga17\"></a><br><br></td></tr>\n</table>\n<hr><a name=\"_details\"></a><h2>Detailed Description</h2>\nOracle for Cartesian mesh data. \n<p>\n<hr><h2>Function Documentation</h2>\n<a class=\"anchor\" name=\"ga2\" doxytag=\"vgrid.h::Vgrid_ctor\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> <a class=\"el\" href=\"structsVgrid.html\">Vgrid</a>* Vgrid_ctor </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\">int&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>nx</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>int&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>ny</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>int&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>nz</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>hx</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>hy</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>hzed</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>xmin</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>ymin</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>zmin</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>data</em></td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"md\">)&nbsp;</td>\n          <td class=\"md\" colspan=\"2\"></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nConstruct Vgrid object with values obtained from Vpmg_readDX (for example). \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Parameters:</b></dt><dd>\n  <table border=\"0\" cellspacing=\"2\" cellpadding=\"0\">\n    <tr><td valign=top><em>nx</em>&nbsp;</td><td>Number grid points in x direction </td></tr>\n    <tr><td valign=top><em>ny</em>&nbsp;</td><td>Number grid points in y direction </td></tr>\n    <tr><td valign=top><em>nz</em>&nbsp;</td><td>Number grid points in z direction </td></tr>\n    <tr><td valign=top><em>hx</em>&nbsp;</td><td>Grid spacing in x direction </td></tr>\n    <tr><td valign=top><em>hy</em>&nbsp;</td><td>Grid spacing in y direction </td></tr>\n    <tr><td valign=top><em>hzed</em>&nbsp;</td><td>Grid spacing in z direction </td></tr>\n    <tr><td valign=top><em>xmin</em>&nbsp;</td><td>x coordinate of lower grid corner </td></tr>\n    <tr><td valign=top><em>ymin</em>&nbsp;</td><td>y coordinate of lower grid corner </td></tr>\n    <tr><td valign=top><em>zmin</em>&nbsp;</td><td>z coordinate of lower grid corner </td></tr>\n    <tr><td valign=top><em>data</em>&nbsp;</td><td>nx*ny*nz array of data. This can be VNULL if you are planning to read in data later with one of the read routines </td></tr>\n  </table>\n</dl>\n<dl compact><dt><b>Returns:</b></dt><dd>Newly allocated and initialized Vgrid object </dd></dl>\n    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga3\" doxytag=\"vgrid.h::Vgrid_ctor2\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> int Vgrid_ctor2 </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>thee</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>int&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>nx</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>int&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>ny</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>int&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>nz</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>hx</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>hy</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>hzed</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>xmin</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>ymin</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>zmin</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>data</em></td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"md\">)&nbsp;</td>\n          <td class=\"md\" colspan=\"2\"></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nInitialize Vgrid object with values obtained from Vpmg_readDX (for example). \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Parameters:</b></dt><dd>\n  <table border=\"0\" cellspacing=\"2\" cellpadding=\"0\">\n    <tr><td valign=top><em>thee</em>&nbsp;</td><td>Pointer to newly allocated Vgrid object </td></tr>\n    <tr><td valign=top><em>nx</em>&nbsp;</td><td>Number grid points in x direction </td></tr>\n    <tr><td valign=top><em>ny</em>&nbsp;</td><td>Number grid points in y direction </td></tr>\n    <tr><td valign=top><em>nz</em>&nbsp;</td><td>Number grid points in z direction </td></tr>\n    <tr><td valign=top><em>hx</em>&nbsp;</td><td>Grid spacing in x direction </td></tr>\n    <tr><td valign=top><em>hy</em>&nbsp;</td><td>Grid spacing in y direction </td></tr>\n    <tr><td valign=top><em>hzed</em>&nbsp;</td><td>Grid spacing in z direction </td></tr>\n    <tr><td valign=top><em>xmin</em>&nbsp;</td><td>x coordinate of lower grid corner </td></tr>\n    <tr><td valign=top><em>ymin</em>&nbsp;</td><td>y coordinate of lower grid corner </td></tr>\n    <tr><td valign=top><em>zmin</em>&nbsp;</td><td>z coordinate of lower grid corner </td></tr>\n    <tr><td valign=top><em>data</em>&nbsp;</td><td>nx*ny*nz array of data. This can be VNULL if you are planning to read in data later with one of the read routines </td></tr>\n  </table>\n</dl>\n<dl compact><dt><b>Returns:</b></dt><dd>Newly allocated and initialized Vgrid object </dd></dl>\n    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga7\" doxytag=\"vgrid.h::Vgrid_curvature\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> int Vgrid_curvature </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>thee</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>pt</em>[3], </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>int&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>cflag</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>curv</em></td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"md\">)&nbsp;</td>\n          <td class=\"md\" colspan=\"2\"></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nGet second derivative values at a point. \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Steve Bond and Nathan Baker </dd></dl>\n<dl compact><dt><b>Parameters:</b></dt><dd>\n  <table border=\"0\" cellspacing=\"2\" cellpadding=\"0\">\n    <tr><td valign=top><em>thee</em>&nbsp;</td><td>Pointer to Vgrid object </td></tr>\n    <tr><td valign=top><em>pt</em>&nbsp;</td><td>Location to evaluate second derivative </td></tr>\n    <tr><td valign=top><em>cflag</em>&nbsp;</td><td><ul>\n<li>0: Reduced Maximal Curvature </li>\n<li>1: Mean Curvature (Laplace) </li>\n<li>2: Gauss Curvature </li>\n<li>3: True Maximal Curvature </li>\n</ul>\n</td></tr>\n    <tr><td valign=top><em>curv</em>&nbsp;</td><td>Specified curvature value </td></tr>\n  </table>\n</dl>\n<dl compact><dt><b>Returns:</b></dt><dd>1 if successful, 0 if off grid </dd></dl>\n    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga5\" doxytag=\"vgrid.h::Vgrid_dtor\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> void Vgrid_dtor </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> **&nbsp;</td>\n          <td class=\"mdname1\" valign=\"top\" nowrap> <em>thee</em>          </td>\n          <td class=\"md\" valign=\"top\">&nbsp;)&nbsp;</td>\n          <td class=\"md\" nowrap></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nObject destructor. \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Parameters:</b></dt><dd>\n  <table border=\"0\" cellspacing=\"2\" cellpadding=\"0\">\n    <tr><td valign=top><em>thee</em>&nbsp;</td><td>Pointer to memory location of object to be destroyed </td></tr>\n  </table>\n</dl>\n    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga6\" doxytag=\"vgrid.h::Vgrid_dtor2\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> void Vgrid_dtor2 </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *&nbsp;</td>\n          <td class=\"mdname1\" valign=\"top\" nowrap> <em>thee</em>          </td>\n          <td class=\"md\" valign=\"top\">&nbsp;)&nbsp;</td>\n          <td class=\"md\" nowrap></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nFORTRAN stub object destructor. \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Parameters:</b></dt><dd>\n  <table border=\"0\" cellspacing=\"2\" cellpadding=\"0\">\n    <tr><td valign=top><em>thee</em>&nbsp;</td><td>Pointer to object to be destroyed </td></tr>\n  </table>\n</dl>\n    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga8\" doxytag=\"vgrid.h::Vgrid_gradient\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> int Vgrid_gradient </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>thee</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>pt</em>[3], </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>grad</em>[3]</td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"md\">)&nbsp;</td>\n          <td class=\"md\" colspan=\"2\"></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nGet first derivative values at a point. \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker and Steve Bond </dd></dl>\n<dl compact><dt><b>Parameters:</b></dt><dd>\n  <table border=\"0\" cellspacing=\"2\" cellpadding=\"0\">\n    <tr><td valign=top><em>thee</em>&nbsp;</td><td>Pointer to Vgrid object </td></tr>\n    <tr><td valign=top><em>pt</em>&nbsp;</td><td>Location to evaluate gradient </td></tr>\n    <tr><td valign=top><em>grad</em>&nbsp;</td><td>Gradient </td></tr>\n  </table>\n</dl>\n<dl compact><dt><b>Returns:</b></dt><dd>1 if successful, 0 if off grid </dd></dl>\n    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga12\" doxytag=\"vgrid.h::Vgrid_integrate\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> double Vgrid_integrate </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *&nbsp;</td>\n          <td class=\"mdname1\" valign=\"top\" nowrap> <em>thee</em>          </td>\n          <td class=\"md\" valign=\"top\">&nbsp;)&nbsp;</td>\n          <td class=\"md\" nowrap></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nGet the integral of the data. \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Parameters:</b></dt><dd>\n  <table border=\"0\" cellspacing=\"2\" cellpadding=\"0\">\n    <tr><td valign=top><em>thee</em>&nbsp;</td><td>Vgrid object </td></tr>\n  </table>\n</dl>\n<dl compact><dt><b>Returns:</b></dt><dd>Integral of data </dd></dl>\n    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga1\" doxytag=\"vgrid.h::Vgrid_memChk\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> unsigned long int Vgrid_memChk </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *&nbsp;</td>\n          <td class=\"mdname1\" valign=\"top\" nowrap> <em>thee</em>          </td>\n          <td class=\"md\" valign=\"top\">&nbsp;)&nbsp;</td>\n          <td class=\"md\" nowrap></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nReturn the memory used by this structure (and its contents) in bytes. \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Parameters:</b></dt><dd>\n  <table border=\"0\" cellspacing=\"2\" cellpadding=\"0\">\n    <tr><td valign=top><em>thee</em>&nbsp;</td><td>Vgrid object </td></tr>\n  </table>\n</dl>\n<dl compact><dt><b>Returns:</b></dt><dd>The memory used by this structure and its contents in bytes </dd></dl>\n    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga17\" doxytag=\"vgrid.h::Vgrid_normH1\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> double Vgrid_normH1 </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *&nbsp;</td>\n          <td class=\"mdname1\" valign=\"top\" nowrap> <em>thee</em>          </td>\n          <td class=\"md\" valign=\"top\">&nbsp;)&nbsp;</td>\n          <td class=\"md\" nowrap></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nGet the <img class=formulaInl alt=\"$H_1$\" src=\"form_7.png\"> norm (or energy norm) of the data. This returns the integral: <p class=formulaDsp>\n<img class=formulaDsp alt=\"\\[ \\| u \\|_{H_1} = \\left( \\int_\\Omega |\\nabla u(x)|^2 dx + \\int_\\Omega |u(x)|^2 dx \\right)^{1/2} \\]\" src=\"form_9.png\">\n<p>\n. \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Parameters:</b></dt><dd>\n  <table border=\"0\" cellspacing=\"2\" cellpadding=\"0\">\n    <tr><td valign=top><em>thee</em>&nbsp;</td><td>Vgrid object </td></tr>\n  </table>\n</dl>\n<dl compact><dt><b>Returns:</b></dt><dd>Integral of data </dd></dl>\n    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga13\" doxytag=\"vgrid.h::Vgrid_normL1\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> double Vgrid_normL1 </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *&nbsp;</td>\n          <td class=\"mdname1\" valign=\"top\" nowrap> <em>thee</em>          </td>\n          <td class=\"md\" valign=\"top\">&nbsp;)&nbsp;</td>\n          <td class=\"md\" nowrap></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nGet the <img class=formulaInl alt=\"$L_1$\" src=\"form_0.png\"> norm of the data. This returns the integral: <p class=formulaDsp>\n<img class=formulaDsp alt=\"\\[ \\| u \\|_{L_1} = \\int_\\Omega | u(x) | dx \\]\" src=\"form_1.png\">\n<p>\n. \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Parameters:</b></dt><dd>\n  <table border=\"0\" cellspacing=\"2\" cellpadding=\"0\">\n    <tr><td valign=top><em>thee</em>&nbsp;</td><td>Vgrid object </td></tr>\n  </table>\n</dl>\n<dl compact><dt><b>Returns:</b></dt><dd><img class=formulaInl alt=\"$L_1$\" src=\"form_0.png\"> norm of data </dd></dl>\n    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga14\" doxytag=\"vgrid.h::Vgrid_normL2\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> double Vgrid_normL2 </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *&nbsp;</td>\n          <td class=\"mdname1\" valign=\"top\" nowrap> <em>thee</em>          </td>\n          <td class=\"md\" valign=\"top\">&nbsp;)&nbsp;</td>\n          <td class=\"md\" nowrap></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nGet the <img class=formulaInl alt=\"$L_2$\" src=\"form_2.png\"> norm of the data. This returns the integral: <p class=formulaDsp>\n<img class=formulaDsp alt=\"\\[ \\| u \\|_{L_2} = \\left( \\int_\\Omega | u(x) |^2 dx \\right)^{1/2} \\]\" src=\"form_3.png\">\n<p>\n. \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Parameters:</b></dt><dd>\n  <table border=\"0\" cellspacing=\"2\" cellpadding=\"0\">\n    <tr><td valign=top><em>thee</em>&nbsp;</td><td>Vgrid object </td></tr>\n  </table>\n</dl>\n<dl compact><dt><b>Returns:</b></dt><dd><img class=formulaInl alt=\"$L_2$\" src=\"form_2.png\"> norm of data </dd></dl>\n    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga15\" doxytag=\"vgrid.h::Vgrid_normLinf\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> double Vgrid_normLinf </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *&nbsp;</td>\n          <td class=\"mdname1\" valign=\"top\" nowrap> <em>thee</em>          </td>\n          <td class=\"md\" valign=\"top\">&nbsp;)&nbsp;</td>\n          <td class=\"md\" nowrap></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nGet the <img class=formulaInl alt=\"$L_\\infty$\" src=\"form_5.png\"> norm of the data. This returns the integral: <p class=formulaDsp>\n<img class=formulaDsp alt=\"\\[ \\| u \\|_{L_\\infty} = \\sup_{x \\in \\Omega} | u(x) | \\]\" src=\"form_6.png\">\n<p>\n. \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Parameters:</b></dt><dd>\n  <table border=\"0\" cellspacing=\"2\" cellpadding=\"0\">\n    <tr><td valign=top><em>thee</em>&nbsp;</td><td>Vgrid object </td></tr>\n  </table>\n</dl>\n<dl compact><dt><b>Returns:</b></dt><dd><img class=formulaInl alt=\"$L\\infty$\" src=\"form_4.png\"> norm of data </dd></dl>\n    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga11\" doxytag=\"vgrid.h::Vgrid_readDX\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> int Vgrid_readDX </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>thee</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>const char *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>iodev</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>const char *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>iofmt</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>const char *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>thost</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>const char *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>fname</em></td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"md\">)&nbsp;</td>\n          <td class=\"md\" colspan=\"2\"></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nRead in data in OpenDX grid format. \n<p>\n<dl compact><dt><b>Note:</b></dt><dd>All dimension information is given in order: z, y, x </dd></dl>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Parameters:</b></dt><dd>\n  <table border=\"0\" cellspacing=\"2\" cellpadding=\"0\">\n    <tr><td valign=top><em>thee</em>&nbsp;</td><td>Vgrid object </td></tr>\n    <tr><td valign=top><em>iodev</em>&nbsp;</td><td>Input device type (FILE/BUFF/UNIX/INET) </td></tr>\n    <tr><td valign=top><em>iofmt</em>&nbsp;</td><td>Input device format (ASCII/XDR) </td></tr>\n    <tr><td valign=top><em>thost</em>&nbsp;</td><td>Input hostname (for sockets) </td></tr>\n    <tr><td valign=top><em>fname</em>&nbsp;</td><td>Input FILE/BUFF/UNIX/INET name </td></tr>\n  </table>\n</dl>\n<dl compact><dt><b>Returns:</b></dt><dd>1 if sucessful, 0 otherwise </dd></dl>\n    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga16\" doxytag=\"vgrid.h::Vgrid_seminormH1\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> double Vgrid_seminormH1 </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *&nbsp;</td>\n          <td class=\"mdname1\" valign=\"top\" nowrap> <em>thee</em>          </td>\n          <td class=\"md\" valign=\"top\">&nbsp;)&nbsp;</td>\n          <td class=\"md\" nowrap></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nGet the <img class=formulaInl alt=\"$H_1$\" src=\"form_7.png\"> semi-norm of the data. This returns the integral: <p class=formulaDsp>\n<img class=formulaDsp alt=\"\\[ | u |_{H_1} = \\left( \\int_\\Omega |\\nabla u(x)|^2 dx \\right)^{1/2} \\]\" src=\"form_8.png\">\n<p>\n. \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Parameters:</b></dt><dd>\n  <table border=\"0\" cellspacing=\"2\" cellpadding=\"0\">\n    <tr><td valign=top><em>thee</em>&nbsp;</td><td>Vgrid object </td></tr>\n  </table>\n</dl>\n<dl compact><dt><b>Returns:</b></dt><dd>Integral of data </dd></dl>\n    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga4\" doxytag=\"vgrid.h::Vgrid_value\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> int Vgrid_value </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>thee</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>x</em>[3], </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>value</em></td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"md\">)&nbsp;</td>\n          <td class=\"md\" colspan=\"2\"></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nGet potential value (from mesh or approximation) at a point. \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Parameters:</b></dt><dd>\n  <table border=\"0\" cellspacing=\"2\" cellpadding=\"0\">\n    <tr><td valign=top><em>thee</em>&nbsp;</td><td>Vgrid obejct </td></tr>\n    <tr><td valign=top><em>x</em>&nbsp;</td><td>Point at which to evaluate potential </td></tr>\n    <tr><td valign=top><em>value</em>&nbsp;</td><td>Value of data at point x </td></tr>\n  </table>\n</dl>\n<dl compact><dt><b>Returns:</b></dt><dd>1 if successful, 0 if off grid </dd></dl>\n    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga10\" doxytag=\"vgrid.h::Vgrid_writeDX\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> void Vgrid_writeDX </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>thee</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>const char *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>iodev</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>const char *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>iofmt</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>const char *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>thost</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>const char *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>fname</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>char *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>title</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>pvec</em></td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"md\">)&nbsp;</td>\n          <td class=\"md\" colspan=\"2\"></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nWrite out the data in OpenDX grid format. \n<p>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Parameters:</b></dt><dd>\n  <table border=\"0\" cellspacing=\"2\" cellpadding=\"0\">\n    <tr><td valign=top><em>thee</em>&nbsp;</td><td>Grid object </td></tr>\n    <tr><td valign=top><em>iodev</em>&nbsp;</td><td>Output device type (FILE/BUFF/UNIX/INET) </td></tr>\n    <tr><td valign=top><em>iofmt</em>&nbsp;</td><td>Output device format (ASCII/XDR) </td></tr>\n    <tr><td valign=top><em>thost</em>&nbsp;</td><td>Output hostname (for sockets) </td></tr>\n    <tr><td valign=top><em>fname</em>&nbsp;</td><td>Output FILE/BUFF/UNIX/INET name </td></tr>\n    <tr><td valign=top><em>title</em>&nbsp;</td><td>Title to be inserted in grid file </td></tr>\n    <tr><td valign=top><em>pvec</em>&nbsp;</td><td>Partition weight ( if 1: point in current partition, if 0 point not in current partition if &gt; 0 &amp;&amp; &lt; 1 point on/near boundary ) </td></tr>\n  </table>\n</dl>\n    </td>\n  </tr>\n</table>\n<a class=\"anchor\" name=\"ga9\" doxytag=\"vgrid.h::Vgrid_writeUHBD\" ></a><p>\n<table class=\"mdTable\" width=\"100%\" cellpadding=\"2\" cellspacing=\"0\">\n  <tr>\n    <td class=\"mdRow\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tr>\n          <td class=\"md\" nowrap valign=\"top\"> void Vgrid_writeUHBD </td>\n          <td class=\"md\" valign=\"top\">(&nbsp;</td>\n          <td class=\"md\" nowrap valign=\"top\"><a class=\"el\" href=\"structsVgrid.html\">Vgrid</a> *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>thee</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>const char *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>iodev</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>const char *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>iofmt</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>const char *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>thost</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>const char *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>fname</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>char *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>title</em>, </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td class=\"md\" nowrap>double *&nbsp;</td>\n          <td class=\"mdname\" nowrap> <em>pvec</em></td>\n        </tr>\n        <tr>\n          <td></td>\n          <td class=\"md\">)&nbsp;</td>\n          <td class=\"md\" colspan=\"2\"></td>\n        </tr>\n\n      </table>\n    </td>\n  </tr>\n</table>\n<table cellspacing=5 cellpadding=0 border=0>\n  <tr>\n    <td>\n      &nbsp;\n    </td>\n    <td>\n\n<p>\nWrite out the data in UHBD grid format. \n<p>\n<dl compact><dt><b>Note:</b></dt><dd><ul>\n<li>The mesh spacing should be uniform </li>\n<li>Format changed from 12.6E to 12.5E </li>\n</ul>\n</dd></dl>\n<dl compact><dt><b>Author:</b></dt><dd>Nathan Baker </dd></dl>\n<dl compact><dt><b>Parameters:</b></dt><dd>\n  <table border=\"0\" cellspacing=\"2\" cellpadding=\"0\">\n    <tr><td valign=top><em>thee</em>&nbsp;</td><td>Grid object </td></tr>\n    <tr><td valign=top><em>iodev</em>&nbsp;</td><td>Output device type (FILE/BUFF/UNIX/INET) </td></tr>\n    <tr><td valign=top><em>iofmt</em>&nbsp;</td><td>Output device format (ASCII/XDR) </td></tr>\n    <tr><td valign=top><em>thost</em>&nbsp;</td><td>Output hostname (for sockets) </td></tr>\n    <tr><td valign=top><em>fname</em>&nbsp;</td><td>Output FILE/BUFF/UNIX/INET name </td></tr>\n    <tr><td valign=top><em>title</em>&nbsp;</td><td>Title to be inserted in grid file </td></tr>\n    <tr><td valign=top><em>pvec</em>&nbsp;</td><td>Partition weight ( if 1: point in current partition, if 0 point not in current partition if &gt; 0 &amp;&amp; &lt; 1 point on/near boundary ) </td></tr>\n  </table>\n</dl>\n<dl compact><dt><b><a class=\"el\" href=\"bug.html#_bug000001\">Bug:</a></b></dt><dd>This routine does not respect partition information </dd></dl>\n    </td>\n  </tr>\n</table>\n<hr size=\"1\"><address style=\"align: right;\"><small>Generated on Tue Dec 6 10:05:58 2005 for APBS by\n<a href=\"http://www.doxygen.org/index.html\">\n<img src=\"doxygen.png\" alt=\"doxygen\" align=\"middle\" border=0 > \n</a>1.3.5 </small></address>\n</body>\n</html>\n", "id": 42503.0}