{"text": "Search LoginPreferencesHelp GuideAbout Trac WikiTimelineRoadmapBrowse SourceView TicketsSearch Context Navigation Previous ChangesetNext Changeset Changeset 373 View differences inlineside by side Show lines around each change Show the changes in full context Ignore Blank lines Case changes White space changes Timestamp Jul 11 2 7 5 9 39 PM 8 years ago Author djp3Message Refactored decision classification and target to classificationTarget Added some TODOs for Sam File 1 edited nomatic trunk service edu uci ics luci nomatic service learning DecisionTree java modified 3 diffs Legend UnmodifiedAddedRemoved nomatic trunk service edu uci ics luci nomatic service learning DecisionTree java r363 r373 66 private Split split 77 private DecisionTree children 8 private Object decision 8 private Object classification 99 private Attribute target 1 1 1111 TODO Try considering all splits of all attributes up front for best gain 12 public DecisionTree Database data Attribute target 12 public DecisionTree Database data Attribute classificationTarget 1313 1414 if data size 1515 throw new IllegalArgumentException DecisionTree will not accept empty databases 1616 17 this target target 17 this target classificationTarget 18 19 System out println Creating a decision tree from 2 for Record i data 21 System out println i toString 22 1823 1924 double bestGain Double NEGATIVE INFINITY 2 25 Split bestSplit null 2126 Database bestHalves null 27 28 Search for best split 2229 for Split s Split getAllSplitsFor data 23 Database halves data split s 24 double gain halves gain s getAttribute target halves 1 gain s getAttribute target 3 TODO Check to see if split is on the classificationTarget and if it is don t consider it 31 32 double gain data gain s classificationTarget 33 2534 if gain bestGain 2635 bestGain gain 2736 bestSplit s 28 bestHalves halves 2937 3 38 39 bestHalves data split bestSplit 4 41 System out println Split on 42 System out println bestSplit toString 3143 3244 Create the children 33 if bestHalves size bestHalves 1 size 45 if bestGain 3446 children new DecisionTree 2 35 children new DecisionTree bestHalves target 36 children 1 new DecisionTree bestHalves 1 target 47 children new DecisionTree bestHalves classificationTarget 48 children 1 new DecisionTree bestHalves 1 classificationTarget 3749 split bestSplit 385 3951 else 4 decision bestHalves size bestHalves get get target bestHalves 1 get get target 52 TODO Make the classification the majority vote of the current data in case instances are exactly the same except for target Classification 53 classification bestHalves size bestHalves get get classificationTarget bestHalves 1 get get classificationTarget 4154 4255 4457 public Object decide Record r 4558 46 if isDecision 47 return getDecision 59 if isLeafNode 6 return getClassification 4861 else 4962 return getSplit sort r getLeftChild getRightChild decide r 5 63 5164 52 public boolean isDecision 53 return decision null 65 public boolean isLeafNode 66 return classification null 5467 5568 5669 public String toString 577 58 if isDecision 59 return target getDecision 71 if isLeafNode 72 return target getClassification 6 73 else 6174 return N children split children 1 7 83 7184 72 public Object getDecision 73 return decision 85 public Object getClassification 86 return classification 7487 7588 Note See TracChangeset for help on using the changeset viewer Download in other formats Unified Diff Zip Archive Powered by Trac 1 1 By Edgewall Software All content copyright 2 7 2 8 by LUCI http luci ics uci edu ", "_id": "http://djp3-pc2.ics.uci.edu/LUCICodeRepository/nomaticIM/changeset/373", "title": "\n      changeset 373 \u2013 nomatic*im\n    ", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n  \n\n\n  <head>\n\t\t<title>\n      Changeset 373 \u2013 Nomatic*IM\n    </title><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><link rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search\" /><link rel=\"prev\" href=\"/LUCICodeRepository/nomaticIM/changeset/372\" title=\"Changeset 372\" /><link rel=\"last\" href=\"/LUCICodeRepository/nomaticIM/changeset/1312\" title=\"Changeset 1312\" /><link rel=\"help\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\" /><link rel=\"alternate\" href=\"?format=diff&amp;new=373\" type=\"text/plain\" class=\"diff\" title=\"Unified Diff\" /><link rel=\"alternate\" href=\"?format=zip&amp;new=373\" type=\"application/zip\" class=\"zip\" title=\"Zip Archive\" /><link rel=\"next\" href=\"/LUCICodeRepository/nomaticIM/changeset/374\" title=\"Changeset 374\" /><link rel=\"start\" href=\"/LUCICodeRepository/nomaticIM/wiki\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/changeset.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/diff.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/code.css\" type=\"text/css\" /><link rel=\"first\" href=\"/LUCICodeRepository/nomaticIM/changeset/1\" title=\"Changeset 1\" /><link rel=\"shortcut icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link rel=\"icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link type=\"application/opensearchdescription+xml\" rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search/opensearch\" title=\"Search Nomatic*IM\" /><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/jquery.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/babel.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/messages/en_US.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/trac.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/search.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/diff.js\"></script><script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\".trac-toggledeleted\").show().click(function() {\n                  $(this).siblings().find(\".trac-deleted\").toggle();\n                  return false;\n        }).click();\n        $(\"#content\").find(\"li.entry h2 a\").parent().addAnchor(_(\"Link to this diff\"));\n      });\n    </script>\n\t</head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://luci.ics.uci.edu/#code\"><img src=\"http://luci.ics.uci.edu/blog/archives/LUCIhorzTight.jpg\" alt=\"LUCI Code Repository\" /></a>\n      </div>\n      <form id=\"search\" action=\"/LUCICodeRepository/nomaticIM/search\" method=\"get\">\n        <div>\n          <label for=\"proj-search\">Search:</label>\n          <input type=\"text\" id=\"proj-search\" name=\"q\" size=\"18\" value=\"\" />\n          <input type=\"submit\" value=\"Search\" />\n        </div>\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/login\">Login</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/prefs\">Preferences</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\">Help/Guide</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/wiki\">Wiki</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/timeline\">Timeline</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/roadmap\">Roadmap</a></li><li class=\"active\"><a href=\"/LUCICodeRepository/nomaticIM/browser\">Browse Source</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/report\">View Tickets</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/search\">Search</a></li>\n    </ul>\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><span>&larr; <a class=\"prev\" href=\"/LUCICodeRepository/nomaticIM/changeset/372\" title=\"Changeset 372\">Previous Changeset</a></span></li><li class=\"last\"><span><a class=\"next\" href=\"/LUCICodeRepository/nomaticIM/changeset/374\" title=\"Changeset 374\">Next Changeset</a> &rarr;</span></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"changeset\">\n      <div id=\"title\">\n            <h1>Changeset 373</h1>\n      </div>\n      <form id=\"prefs\" action=\"\">\n        <div>\n          \n  <label for=\"style\">View differences</label>\n  <select id=\"style\" name=\"style\">\n    <option selected=\"selected\" value=\"inline\">inline</option>\n    <option value=\"sidebyside\">side by side</option>\n  </select>\n  <div class=\"field\">\n    <label><input type=\"radio\" name=\"contextall\" value=\"0\" checked=\"checked\" />\n             Show</label>\n      <label><input type=\"text\" name=\"contextlines\" id=\"contextlines\" size=\"2\" maxlength=\"3\" value=\"2\" />\n             lines around each change</label><br />\n    <label><input type=\"radio\" name=\"contextall\" value=\"1\" />\n           Show the changes in full context</label>\n  </div>\n  <fieldset id=\"ignore\">\n    <legend>Ignore:</legend>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignoreblanklines\" name=\"ignoreblanklines\" />\n      <label for=\"ignoreblanklines\">Blank lines</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorecase\" name=\"ignorecase\" />\n      <label for=\"ignorecase\">Case changes</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorewhitespace\" name=\"ignorewhitespace\" />\n      <label for=\"ignorewhitespace\">White space changes</label>\n    </div>\n  </fieldset>\n  <div class=\"buttons\">\n    <input type=\"submit\" name=\"update\" value=\"Update\" />\n  </div>\n\n        </div>\n      </form>\n      <dl id=\"overview\">\n          <dt class=\"property time\">Timestamp:</dt>\n          <dd class=\"time\">\n             Jul 11, 2007, 5:09:39 PM\n             (<a class=\"timeline\" href=\"/LUCICodeRepository/nomaticIM/timeline?from=2007-07-11T17%3A09%3A39-07%3A00&amp;precision=second\" title=\"See timeline at Jul 11, 2007, 5:09:39 PM\">8 years</a> ago)\n          </dd>\n          <dt class=\"property author\">Author:</dt>\n          <dd class=\"author\">djp3</dd>\n          <dt class=\"property message\">Message:</dt>\n          <dd class=\"message searchable\">\n            \n            \n              <p>\nRefactored decision -&gt; classification and target to classificationTarget.  Added some TODOs for Sam.<br />\n</p>\n\n            \n            \n          </dd>\n        <dt class=\"property files\">\n          File:\n        </dt>\n        <dd class=\"files\">\n          <div class=\"legend\" id=\"file-legend\">\n            <dl>\n              <dt class=\"mod\"></dt><dd>1 edited</dd>\n            </dl>\n          </div>\n          <br />\n          <ul>\n            <li>\n          <div class=\"mod\"> </div>\n            <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/DecisionTree.java?rev=373\">\n              nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/DecisionTree.java\n            </a>\n          <span class=\"comment\">(modified)</span>\n              (<a title=\"Show differences\" href=\"#file0\">3 diffs</a>)\n            </li>\n          </ul>\n        </dd>\n      </dl>\n      <div class=\"diff\">\n        <div class=\"legend\" id=\"diff-legend\">\n          <h3>Legend:</h3>\n          <dl>\n            <dt class=\"unmod\"></dt><dd>Unmodified</dd>\n            <dt class=\"add\"></dt><dd>Added</dd>\n            <dt class=\"rem\"></dt><dd>Removed</dd>\n          </dl>\n        </div>\n        <div class=\"diff\">\n  <ul class=\"entries\">\n      <li class=\"entry\">\n        <h2 id=\"file0\">\n          <a href=\"/LUCICodeRepository/nomaticIM/changeset/373/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/DecisionTree.java\" title=\"Show the changeset 373 restricted to nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/DecisionTree.java\">nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/DecisionTree.java</a>\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"Revision 363\">\n                    <a title=\"Show revision 363 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/DecisionTree.java?rev=363#L6\">\n                      r363</a>\n                  </th>\n                  <th title=\"Revision 373\">\n                    <a title=\"Show revision 373 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/DecisionTree.java?rev=373#L6\">\n                      r373</a>\n                  </th>\n                  <td>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>6</th><th>6</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; private Split split;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>7</th><th>7</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; private DecisionTree[] children;</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>8</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; private Object <del>decis</del>ion;</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>8</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; private Object <ins>classificat</ins>ion;</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>9</th><th>9</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; private Attribute target;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>10</th><th>10</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>11</th><th>11</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; // TODO: Try considering all splits of all attributes up-front for best gain</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>12</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public DecisionTree(Database data, Attribute <del>t</del>arget)</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>12</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public DecisionTree(Database data, Attribute <ins>classificationT</ins>arget)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>13</th><th>13</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                  </tr><tr>\n                          <th>14</th><th>14</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (data.size() == 0)</span>\u00a0</td>\n                  </tr><tr>\n                          <th>15</th><th>15</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; throw new IllegalArgumentException(\"DecisionTree will not accept empty databases.\");</span>\u00a0</td>\n                  </tr><tr>\n                          <th>16</th><th>16</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>17</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; this.target = target;</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>17</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; this.target = classificationTarget;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>18</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>19</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(\"Creating a decision tree from:\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>20</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for(Record i : data){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>21</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(i.toString());</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>22</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>18</th><th>23</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>19</th><th>24</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; double bestGain = Double.NEGATIVE_INFINITY;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>20</th><th>25</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Split bestSplit = null;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>21</th><th>26</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Database[] bestHalves = null;</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>27</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>28</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Search for best split */</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>22</th><th>29</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (Split s : Split.getAllSplitsFor(data)) {</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>23</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Database[] halves = data.split(s);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>24</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; double gain = halves[0].gain(s.getAttribute(), target) + halves[1].gain(s.getAttribute(), target);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>30</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //TODO:&nbsp; Check to see if split is on the classificationTarget and if it is don't consider it.</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>31</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>32</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; double gain = data.gain(s,classificationTarget);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>33</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>25</th><th>34</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (gain &gt; bestGain) {</span>\u00a0</td>\n                  </tr><tr>\n                          <th>26</th><th>35</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bestGain = gain;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>27</th><th>36</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bestSplit = s;</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"last first\">\n                          <th>28</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bestHalves = halves;</del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>29</th><th>37</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>30</th><th>38</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>39</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bestHalves = data.split(bestSplit);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>40</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>41</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(\"Split on:\");</ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>42</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(bestSplit.toString());</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>31</th><th>43</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>32</th><th>44</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Create the children</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>33</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (best<del>Halves[0].size() &gt; 0 &amp;&amp; bestHalves[1].size() &gt; 0) </del>{</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>45</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (best<ins>Gain &gt; 0.0)</ins>{</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>34</th><th>46</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; children = new DecisionTree[2];</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>35</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; children[0] = new DecisionTree(bestHalves[0], <del>t</del>arget);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>36</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; children[1] = new DecisionTree(bestHalves[1], <del>t</del>arget);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>47</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; children[0] = new DecisionTree(bestHalves[0], <ins>classificationT</ins>arget);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>48</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; children[1] = new DecisionTree(bestHalves[1], <ins>classificationT</ins>arget);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>37</th><th>49</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; split = bestSplit;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>38</th><th>50</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>39</th><th>51</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else {</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>40</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; decision = (bestHalves[0].size() &gt; 0 ? bestHalves[0].get(0).get(target) : bestHalves[1].get(0).get(target));</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>52</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //TODO:&nbsp; Make the classification the majority vote of the current data in case instances are exactly the same except for target Classification</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>53</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; classification = (bestHalves[0].size() &gt; 0 ? bestHalves[0].get(0).get(classificationTarget) : bestHalves[1].get(0).get(classificationTarget));</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>41</th><th>54</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>42</th><th>55</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/DecisionTree.java?rev=363#L44\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/DecisionTree.java?rev=373#L57\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>44</th><th>57</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public Object decide(Record r)</span>\u00a0</td>\n                  </tr><tr>\n                          <th>45</th><th>58</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>46</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (is<del>Decision</del>())</span>\u00a0</td>\n                      </tr><tr>\n                        <th>47</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return get<del>Decis</del>ion();</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>59</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (is<ins>LeafNode</ins>())</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>60</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return get<ins>Classificat</ins>ion();</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>48</th><th>61</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else</span>\u00a0</td>\n                  </tr><tr>\n                          <th>49</th><th>62</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return (getSplit().sort(r) ? getLeftChild() : getRightChild()).decide(r);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>50</th><th>63</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>51</th><th>64</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>52</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public boolean is<del>Decision</del>() {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>53</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return (<del>decis</del>ion != null);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>65</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public boolean is<ins>LeafNode</ins>() {</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>66</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return (<ins>classificat</ins>ion != null);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>54</th><th>67</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>55</th><th>68</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>56</th><th>69</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public String toString()</span>\u00a0</td>\n                  </tr><tr>\n                          <th>57</th><th>70</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>58</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (is<del>Decision</del>())</span>\u00a0</td>\n                      </tr><tr>\n                        <th>59</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return target+\"=\"+get<del>Decis</del>ion();</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>71</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (is<ins>LeafNode</ins>())</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>72</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return target+\"=\"+get<ins>Classificat</ins>ion();</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>60</th><th>73</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else</span>\u00a0</td>\n                  </tr><tr>\n                          <th>61</th><th>74</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return \"N(\"+children[0]+\" \"+split+\" \"+children[1]+\")\";</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/DecisionTree.java?rev=363#L70\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/DecisionTree.java?rev=373#L83\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>70</th><th>83</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>71</th><th>84</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>72</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public Object get<del>Decis</del>ion() {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>73</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return <del>decis</del>ion;</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>85</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public Object get<ins>Classificat</ins>ion() {</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>86</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return <ins>classificat</ins>ion;</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>74</th><th>87</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>75</th><th>88</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n  </ul>\n</div>\n        <div id=\"help\"><strong>Note:</strong> See <a href=\"/LUCICodeRepository/nomaticIM/wiki/TracChangeset\">TracChangeset</a>\n          for help on using the changeset viewer.</div>\n      </div>\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"first\">\n          <a rel=\"nofollow\" href=\"?format=diff&amp;new=373\" class=\"diff\">Unified Diff</a>\n        </li><li class=\"last\">\n          <a rel=\"nofollow\" href=\"?format=zip&amp;new=373\" class=\"zip\">Zip Archive</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/LUCICodeRepository/nomaticIM/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/LUCICodeRepository/nomaticIM/about\"><strong>Trac 1.0.1</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">All content copyright 2007-2008 by LUCI <br /><a href=\"http://luci.ics.uci.edu/\">http://luci.ics.uci.edu/</a></p>\n    </div>\n\t\t<div id=\"sitefooter\">\n\t\t\t<script src=\"http://www.google-analytics.com/urchin.js\" type=\"text/javascript\">\n\t\t\t</script>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t\t_uacct = \"UA-338915-2\";\n\t\t\t\turchinTracker();\n\t\t\t</script>\n\t\t</div>\n\t</body>\n</html>", "id": 47750.0}