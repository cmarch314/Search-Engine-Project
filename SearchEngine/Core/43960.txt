{"text": "Search LoginPreferencesHelp GuideAbout Trac WikiTimelineRoadmapBrowse SourceView TicketsSearch Context Navigation BlameRevision Log source nomatic tags NomaticIM 5 buddy bots src twisted protocols pcp py View diff against View revision Visit trunk Last change on this file was 712 checked in by cbaker 7 years ago First draft of nomatic buddy bots oscar bot is functional if you give it good authentication credentials jabber bot is just an example from the web File size 7 1 KB Line 1 test case name twisted test test pcp 2 3 Copyright c 2 1 2 4 Twisted Matrix Laboratories 4 See LICENSE for details 567 Producer Consumer Proxy 89 version Revision 1 4 11 2 1 11import operator1213from zope interface import implements1415from twisted internet import interfaces161718class BasicProducerConsumerProxy 19 I can act as a man in the middle between any Producer and Consumer 2 21 ivar producer the Producer I subscribe to 22 type producer L IProducer interfaces IProducer 23 ivar consumer the Consumer I publish to 24 type consumer L IConsumer interfaces IConsumer 25 ivar paused As a Producer am I paused 26 type paused bool27 28 implements interfaces IProducer interfaces IConsumer 293 consumer None31 producer None32 producerIsStreaming None33 iAmStreaming True34 outstandingPull False35 paused False36 stopped False3738 def init self consumer 39 self buffer 4 if consumer is not None 41 self consumer consumer42 consumer registerProducer self self iAmStreaming 4344 Producer methods 4546 def pauseProducing self 47 self paused True48 if self producer 49 self producer pauseProducing 5 51 def resumeProducing self 52 self paused False53 if self buffer 54 TODO Check to see if consumer supports writeSeq 55 self consumer write join self buffer 56 self buffer 57 else 58 if not self iAmStreaming 59 self outstandingPull True6 61 if self producer is not None 62 self producer resumeProducing 6364 def stopProducing self 65 if self producer is not None 66 self producer stopProducing 67 if self consumer is not None 68 del self consumer697 Consumer methods 7172 def write self data 73 if self paused or not self iAmStreaming and not self outstandingPull 74 We could use that fifo queue here 75 self buffer append data 7677 elif self consumer is not None 78 self consumer write data 79 self outstandingPull False8 81 def finish self 82 if self consumer is not None 83 self consumer finish 84 self unregisterProducer 8586 def registerProducer self producer streaming 87 self producer producer88 self producerIsStreaming streaming899 def unregisterProducer self 91 if self producer is not None 92 del self producer93 del self producerIsStreaming94 if self consumer 95 self consumer unregisterProducer 9697 def repr self 98 return s x around s self class id self self consumer 991 1 1class ProducerConsumerProxy BasicProducerConsumerProxy 1 2 ProducerConsumerProxy with a finite buffer 1 31 4 When my buffer fills up I have my parent Producer pause until my buffer1 5 has room in it again 1 6 1 7 Copies much from abstract FileDescriptor1 8 bufferSize 2 2 2 21 911 producerPaused False111 unregistered False112113 def pauseProducing self 114 Does not call up to ProducerConsumerProxy to relay the pause115 message through to my parent Producer 116 self paused True117118 def resumeProducing self 119 self paused False12 if self buffer 121 data join self buffer 122 bytesSent self writeSomeData data 123 if bytesSent len data 124 unsent data bytesSent 125 assert not self iAmStreaming 126 Streaming producer did not write all its data 127 self buffer unsent 128 else 129 self buffer 13 else 131 bytesSent 132133 if self unregistered and bytesSent and not self buffer and134 self consumer is not None 135 self consumer unregisterProducer 136137 if not self iAmStreaming 138 self outstandingPull not bytesSent13914 if self producer is not None 141 bytesBuffered reduce operator add 142 len s for s in self buffer 143 TODO You can see here the potential for high and low144 watermarks where bufferSize would be the high mark when we145 ask the upstream producer to pause and we wouldn t have146 it resume again until it hit the low mark Or if producer147 is Pull maybe we d like to pull from it as much as necessary148 to keep our buffer full to the low mark so we re never caught149 without something to send 15 if self producerPaused and bytesBuffered self bufferSize 151 Now that our buffer is empty 152 self producerPaused False153 self producer resumeProducing 154 elif self outstandingPull 155 I did not have any data to write in response to a pull 156 so I d better pull some myself 157 self producer resumeProducing 158159 def write self data 16 if self paused or not self iAmStreaming and not self outstandingPull 161 We could use that fifo queue here 162 self buffer append data 163164 elif self consumer is not None 165 assert not self buffer 166 Writing fresh data to consumer before my buffer is empty 167 I m going to use writeSomeData here so that there is only one168 path to self consumer write But it doesn t actually make sense 169 if I am streaming for some data to not be all data But maybe I17 am not streaming but I am writing here anyway because there was171 an earlier request for data which was not answered 172 bytesSent self writeSomeData data 173 self outstandingPull False174 if not bytesSent len data 175 assert not self iAmStreaming 176 Streaming producer did not write all its data 177 self buffer append data bytesSent 178179 if self producer is not None and self producerIsStreaming 18 bytesBuffered reduce operator add 181 len s for s in self buffer 182 if bytesBuffered self bufferSize 183184 self producer pauseProducing 185 self producerPaused True186187 def registerProducer self producer streaming 188 self unregistered False189 BasicProducerConsumerProxy registerProducer self producer streaming 19 if not streaming 191 producer resumeProducing 192193 def unregisterProducer self 194 if self producer is not None 195 del self producer196 del self producerIsStreaming197 self unregistered True198 if self consumer and not self buffer 199 self consumer unregisterProducer 2 2 1 def writeSomeData self data 2 2 Write as much of this data as possible 2 32 4 returns The number of bytes written 2 5 2 6 if self consumer is None 2 7 return 2 8 self consumer write data 2 9 return len data Note See TracBrowser for help on using the repository browser Download in other formats Plain Text Original Format Powered by Trac 1 1 By Edgewall Software All content copyright 2 7 2 8 by LUCI http luci ics uci edu ", "_id": "http://djp3-pc2.ics.uci.edu/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/pcp.py", "title": "\n      pcp.py in nomatic/tags/nomaticim-0.0.5/buddy_bots/src/twisted/protocols\n     \u2013 nomatic*im\n    ", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n  \n\n\n  <head>\n\t\t<title>\n      pcp.py in nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols\n     \u2013 Nomatic*IM\n    </title><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><link rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search\" /><link rel=\"help\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/pcp.py?format=txt\" type=\"text/plain\" title=\"Plain Text\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/pcp.py\" type=\"application/x-python; charset=iso-8859-15\" title=\"Original Format\" /><link rel=\"start\" href=\"/LUCICodeRepository/nomaticIM/wiki\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/code.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/pygments/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/browser.css\" type=\"text/css\" /><link rel=\"shortcut icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link rel=\"icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link type=\"application/opensearchdescription+xml\" rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search/opensearch\" title=\"Search Nomatic*IM\" /><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/jquery.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/babel.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/messages/en_US.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/trac.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/search.js\"></script><script type=\"text/javascript\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/folding.js\"></script><script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\".trac-toggledeleted\").show().click(function() {\n                  $(this).siblings().find(\".trac-deleted\").toggle();\n                  return false;\n        }).click();\n        $(\"#jumploc input\").hide();\n        $(\"#jumploc select\").change(function () {\n          this.parentNode.parentNode.submit();\n        });\n          $('#preview table.code').enableCollapsibleColumns($('#preview table.code thead th.content'));\n      });\n    </script>\n\t</head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://luci.ics.uci.edu/#code\"><img src=\"http://luci.ics.uci.edu/blog/archives/LUCIhorzTight.jpg\" alt=\"LUCI Code Repository\" /></a>\n      </div>\n      <form id=\"search\" action=\"/LUCICodeRepository/nomaticIM/search\" method=\"get\">\n        <div>\n          <label for=\"proj-search\">Search:</label>\n          <input type=\"text\" id=\"proj-search\" name=\"q\" size=\"18\" value=\"\" />\n          <input type=\"submit\" value=\"Search\" />\n        </div>\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/login\">Login</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/prefs\">Preferences</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\">Help/Guide</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/wiki\">Wiki</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/timeline\">Timeline</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/roadmap\">Roadmap</a></li><li class=\"active\"><a href=\"/LUCICodeRepository/nomaticIM/browser\">Browse Source</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/report\">View Tickets</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/search\">Search</a></li>\n    </ul>\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/buddy_bots/twisted/protocols/pcp.py?annotate=blame\" title=\"Annotate each line with the last changed revision (this can be time consuming...)\">Blame</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/log/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/pcp.py\">Revision Log</a></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"browser\">\n        <h1>\n          \n<a class=\"pathentry first\" href=\"/LUCICodeRepository/nomaticIM/browser?order=name\" title=\"Go to repository root\">source:</a>\n<a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic?order=name\" title=\"View nomatic\">nomatic</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags?order=name\" title=\"View tags\">tags</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5?order=name\" title=\"View NomaticIM-0.0.5\">NomaticIM-0.0.5</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots?order=name\" title=\"View buddy_bots\">buddy_bots</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src?order=name\" title=\"View src\">src</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted?order=name\" title=\"View twisted\">twisted</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols?order=name\" title=\"View protocols\">protocols</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/pcp.py?order=name\" title=\"View pcp.py\">pcp.py</a>\n<br style=\"clear: both\" />\n\n        </h1>\n        <div id=\"diffrev\">\n          <form action=\"/LUCICodeRepository/nomaticIM/changeset\" method=\"get\">\n            <div>\n              <label title=\"Show the diff against a specific revision\">\n                View diff against: <input type=\"text\" name=\"old\" size=\"6\" />\n                <input type=\"hidden\" name=\"old_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/pcp.py\" />\n                <input type=\"hidden\" name=\"new\" />\n                <input type=\"hidden\" name=\"new_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/pcp.py\" />\n              </label>\n            </div>\n          </form>\n        </div>\n        <div id=\"jumprev\">\n          <form action=\"\" method=\"get\">\n            <div>\n              <label for=\"rev\">\n                View revision:</label>\n              <input type=\"text\" id=\"rev\" name=\"rev\" size=\"6\" />\n            </div>\n          </form>\n        </div>\n        <div id=\"jumploc\">\n          <form action=\"\" method=\"get\">\n            <div class=\"buttons\">\n              <label for=\"preselected\">Visit:</label>\n              <select id=\"preselected\" name=\"preselected\">\n                <option selected=\"selected\"></option>\n                <optgroup label=\"branches\">\n                  <option value=\"/LUCICodeRepository/nomaticIM/browser/trunk\">trunk</option>\n                </optgroup>\n              </select>\n              <input type=\"submit\" value=\"Go!\" title=\"Jump to the chosen preselected path\" />\n            </div>\n          </form>\n        </div>\n        <div class=\"trac-tags\">\n        </div>\n      <table id=\"info\" summary=\"Revision info\">\n        <tr>\n          <th>\n                <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/nomatic/trunk/buddy_bots/twisted/protocols/pcp.py\" title=\"View differences\">Last change</a>\n                  on this file was\n                  <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/\" title=\"View changeset 712\">712</a>,\n                  checked in by cbaker, <a class=\"timeline\" href=\"/LUCICodeRepository/nomaticIM/timeline?from=2008-02-16T08%3A16%3A53-08%3A00&amp;precision=second\" title=\"See timeline at Feb 16, 2008, 8:16:53 AM\">7 years ago</a>\n          </th>\n        </tr>\n        <tr>\n          <td class=\"message searchable\">\n              <p>\nFirst draft of nomatic buddy bots. oscar_bot is functional if you give it good authentication credentials, jabber_bot is just an example from the web <br />\n</p>\n          </td>\n        </tr>\n        <tr><td colspan=\"2\">\n            <strong>File size:</strong>\n            <span title=\"7265 bytes\">7.1 KB</span>\n          </td></tr>\n      </table>\n      <div id=\"preview\" class=\"searchable\">\n        \n  <table class=\"code\"><thead><tr><th class=\"lineno\" title=\"Line numbers\">Line</th><th class=\"content\">\u00a0</th></tr></thead><tbody><tr><th id=\"L1\"><a href=\"#L1\">1</a></th><td><span class=\"c\"># -*- test-case-name: twisted.test.test_pcp -*-</span></td></tr><tr><th id=\"L2\"><a href=\"#L2\">2</a></th><td><span class=\"c\">#</span></td></tr><tr><th id=\"L3\"><a href=\"#L3\">3</a></th><td><span class=\"c\"># Copyright (c) 2001-2004 Twisted Matrix Laboratories.</span></td></tr><tr><th id=\"L4\"><a href=\"#L4\">4</a></th><td><span class=\"c\"># See LICENSE for details.</span></td></tr><tr><th id=\"L5\"><a href=\"#L5\">5</a></th><td></td></tr><tr><th id=\"L6\"><a href=\"#L6\">6</a></th><td></td></tr><tr><th id=\"L7\"><a href=\"#L7\">7</a></th><td><span class=\"sd\">\"\"\"Producer-Consumer Proxy.\"\"\"</span></td></tr><tr><th id=\"L8\"><a href=\"#L8\">8</a></th><td></td></tr><tr><th id=\"L9\"><a href=\"#L9\">9</a></th><td>__version__ <span class=\"o\">=</span>\u00a0<span class=\"s\">'$Revision: 1.4 $'</span><span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">]</span></td></tr><tr><th id=\"L10\"><a href=\"#L10\">10</a></th><td></td></tr><tr><th id=\"L11\"><a href=\"#L11\">11</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">operator</span></td></tr><tr><th id=\"L12\"><a href=\"#L12\">12</a></th><td></td></tr><tr><th id=\"L13\"><a href=\"#L13\">13</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">zope.interface</span>\u00a0<span class=\"kn\">import</span>\u00a0implements</td></tr><tr><th id=\"L14\"><a href=\"#L14\">14</a></th><td></td></tr><tr><th id=\"L15\"><a href=\"#L15\">15</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.internet</span>\u00a0<span class=\"kn\">import</span>\u00a0interfaces</td></tr><tr><th id=\"L16\"><a href=\"#L16\">16</a></th><td></td></tr><tr><th id=\"L17\"><a href=\"#L17\">17</a></th><td></td></tr><tr><th id=\"L18\"><a href=\"#L18\">18</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">BasicProducerConsumerProxy</span><span class=\"p\">:</span></td></tr><tr><th id=\"L19\"><a href=\"#L19\">19</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\" I can act as a man in the middle between any Producer and Consumer.</span></td></tr><tr><th id=\"L20\"><a href=\"#L20\">20</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L21\"><a href=\"#L21\">21</a></th><td><span class=\"sd\">\u00a0 \u00a0 @ivar producer: the Producer I subscribe to.</span></td></tr><tr><th id=\"L22\"><a href=\"#L22\">22</a></th><td><span class=\"sd\">\u00a0 \u00a0 @type producer: L{IProducer&lt;interfaces.IProducer&gt;}</span></td></tr><tr><th id=\"L23\"><a href=\"#L23\">23</a></th><td><span class=\"sd\">\u00a0 \u00a0 @ivar consumer: the Consumer I publish to.</span></td></tr><tr><th id=\"L24\"><a href=\"#L24\">24</a></th><td><span class=\"sd\">\u00a0 \u00a0 @type consumer: L{IConsumer&lt;interfaces.IConsumer&gt;}</span></td></tr><tr><th id=\"L25\"><a href=\"#L25\">25</a></th><td><span class=\"sd\">\u00a0 \u00a0 @ivar paused: As a Producer, am I paused?</span></td></tr><tr><th id=\"L26\"><a href=\"#L26\">26</a></th><td><span class=\"sd\">\u00a0 \u00a0 @type paused: bool</span></td></tr><tr><th id=\"L27\"><a href=\"#L27\">27</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L28\"><a href=\"#L28\">28</a></th><td>\u00a0 \u00a0 implements<span class=\"p\">(</span>interfaces<span class=\"o\">.</span>IProducer<span class=\"p\">,</span>\u00a0interfaces<span class=\"o\">.</span>IConsumer<span class=\"p\">)</span></td></tr><tr><th id=\"L29\"><a href=\"#L29\">29</a></th><td></td></tr><tr><th id=\"L30\"><a href=\"#L30\">30</a></th><td>\u00a0 \u00a0 consumer <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L31\"><a href=\"#L31\">31</a></th><td>\u00a0 \u00a0 producer <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L32\"><a href=\"#L32\">32</a></th><td>\u00a0 \u00a0 producerIsStreaming <span class=\"o\">=</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L33\"><a href=\"#L33\">33</a></th><td>\u00a0 \u00a0 iAmStreaming <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L34\"><a href=\"#L34\">34</a></th><td>\u00a0 \u00a0 outstandingPull <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L35\"><a href=\"#L35\">35</a></th><td>\u00a0 \u00a0 paused <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L36\"><a href=\"#L36\">36</a></th><td>\u00a0 \u00a0 stopped <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L37\"><a href=\"#L37\">37</a></th><td></td></tr><tr><th id=\"L38\"><a href=\"#L38\">38</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0consumer<span class=\"p\">):</span></td></tr><tr><th id=\"L39\"><a href=\"#L39\">39</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_buffer <span class=\"o\">=</span>\u00a0<span class=\"p\">[]</span></td></tr><tr><th id=\"L40\"><a href=\"#L40\">40</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0consumer <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L41\"><a href=\"#L41\">41</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>consumer <span class=\"o\">=</span>\u00a0consumer</td></tr><tr><th id=\"L42\"><a href=\"#L42\">42</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 consumer<span class=\"o\">.</span>registerProducer<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>iAmStreaming<span class=\"p\">)</span></td></tr><tr><th id=\"L43\"><a href=\"#L43\">43</a></th><td></td></tr><tr><th id=\"L44\"><a href=\"#L44\">44</a></th><td>\u00a0 \u00a0 <span class=\"c\"># Producer methods:</span></td></tr><tr><th id=\"L45\"><a href=\"#L45\">45</a></th><td></td></tr><tr><th id=\"L46\"><a href=\"#L46\">46</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">pauseProducing</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L47\"><a href=\"#L47\">47</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>paused <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L48\"><a href=\"#L48\">48</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>producer<span class=\"p\">:</span></td></tr><tr><th id=\"L49\"><a href=\"#L49\">49</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>producer<span class=\"o\">.</span>pauseProducing<span class=\"p\">()</span></td></tr><tr><th id=\"L50\"><a href=\"#L50\">50</a></th><td></td></tr><tr><th id=\"L51\"><a href=\"#L51\">51</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">resumeProducing</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L52\"><a href=\"#L52\">52</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>paused <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L53\"><a href=\"#L53\">53</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_buffer<span class=\"p\">:</span></td></tr><tr><th id=\"L54\"><a href=\"#L54\">54</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># TODO: Check to see if consumer supports writeSeq.</span></td></tr><tr><th id=\"L55\"><a href=\"#L55\">55</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>consumer<span class=\"o\">.</span>write<span class=\"p\">(</span><span class=\"s\">''</span><span class=\"o\">.</span>join<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>_buffer<span class=\"p\">))</span></td></tr><tr><th id=\"L56\"><a href=\"#L56\">56</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_buffer<span class=\"p\">[:]</span>\u00a0<span class=\"o\">=</span>\u00a0<span class=\"p\">[]</span></td></tr><tr><th id=\"L57\"><a href=\"#L57\">57</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L58\"><a href=\"#L58\">58</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>iAmStreaming<span class=\"p\">:</span></td></tr><tr><th id=\"L59\"><a href=\"#L59\">59</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>outstandingPull <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L60\"><a href=\"#L60\">60</a></th><td></td></tr><tr><th id=\"L61\"><a href=\"#L61\">61</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>producer <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L62\"><a href=\"#L62\">62</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>producer<span class=\"o\">.</span>resumeProducing<span class=\"p\">()</span></td></tr><tr><th id=\"L63\"><a href=\"#L63\">63</a></th><td></td></tr><tr><th id=\"L64\"><a href=\"#L64\">64</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">stopProducing</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L65\"><a href=\"#L65\">65</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>producer <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L66\"><a href=\"#L66\">66</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>producer<span class=\"o\">.</span>stopProducing<span class=\"p\">()</span></td></tr><tr><th id=\"L67\"><a href=\"#L67\">67</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>consumer <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L68\"><a href=\"#L68\">68</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>consumer</td></tr><tr><th id=\"L69\"><a href=\"#L69\">69</a></th><td></td></tr><tr><th id=\"L70\"><a href=\"#L70\">70</a></th><td>\u00a0 \u00a0 <span class=\"c\"># Consumer methods:</span></td></tr><tr><th id=\"L71\"><a href=\"#L71\">71</a></th><td></td></tr><tr><th id=\"L72\"><a href=\"#L72\">72</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">write</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0data<span class=\"p\">):</span></td></tr><tr><th id=\"L73\"><a href=\"#L73\">73</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>paused <span class=\"ow\">or</span>\u00a0<span class=\"p\">(</span><span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>iAmStreaming <span class=\"ow\">and</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>outstandingPull<span class=\"p\">):</span></td></tr><tr><th id=\"L74\"><a href=\"#L74\">74</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># We could use that fifo queue here.</span></td></tr><tr><th id=\"L75\"><a href=\"#L75\">75</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_buffer<span class=\"o\">.</span>append<span class=\"p\">(</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L76\"><a href=\"#L76\">76</a></th><td></td></tr><tr><th id=\"L77\"><a href=\"#L77\">77</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>consumer <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L78\"><a href=\"#L78\">78</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>consumer<span class=\"o\">.</span>write<span class=\"p\">(</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L79\"><a href=\"#L79\">79</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>outstandingPull <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L80\"><a href=\"#L80\">80</a></th><td></td></tr><tr><th id=\"L81\"><a href=\"#L81\">81</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">finish</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L82\"><a href=\"#L82\">82</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>consumer <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L83\"><a href=\"#L83\">83</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>consumer<span class=\"o\">.</span>finish<span class=\"p\">()</span></td></tr><tr><th id=\"L84\"><a href=\"#L84\">84</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>unregisterProducer<span class=\"p\">()</span></td></tr><tr><th id=\"L85\"><a href=\"#L85\">85</a></th><td></td></tr><tr><th id=\"L86\"><a href=\"#L86\">86</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">registerProducer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0producer<span class=\"p\">,</span>\u00a0streaming<span class=\"p\">):</span></td></tr><tr><th id=\"L87\"><a href=\"#L87\">87</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>producer <span class=\"o\">=</span>\u00a0producer</td></tr><tr><th id=\"L88\"><a href=\"#L88\">88</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>producerIsStreaming <span class=\"o\">=</span>\u00a0streaming</td></tr><tr><th id=\"L89\"><a href=\"#L89\">89</a></th><td></td></tr><tr><th id=\"L90\"><a href=\"#L90\">90</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">unregisterProducer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L91\"><a href=\"#L91\">91</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>producer <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L92\"><a href=\"#L92\">92</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>producer</td></tr><tr><th id=\"L93\"><a href=\"#L93\">93</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>producerIsStreaming</td></tr><tr><th id=\"L94\"><a href=\"#L94\">94</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>consumer<span class=\"p\">:</span></td></tr><tr><th id=\"L95\"><a href=\"#L95\">95</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>consumer<span class=\"o\">.</span>unregisterProducer<span class=\"p\">()</span></td></tr><tr><th id=\"L96\"><a href=\"#L96\">96</a></th><td></td></tr><tr><th id=\"L97\"><a href=\"#L97\">97</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L98\"><a href=\"#L98\">98</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"s\">'&lt;</span><span class=\"si\">%s</span><span class=\"s\">@</span><span class=\"si\">%x</span><span class=\"s\">\u00a0around </span><span class=\"si\">%s</span><span class=\"s\">&gt;'</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>__class__<span class=\"p\">,</span>\u00a0<span class=\"nb\">id</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">),</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>consumer<span class=\"p\">)</span></td></tr><tr><th id=\"L99\"><a href=\"#L99\">99</a></th><td></td></tr><tr><th id=\"L100\"><a href=\"#L100\">100</a></th><td></td></tr><tr><th id=\"L101\"><a href=\"#L101\">101</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">ProducerConsumerProxy</span><span class=\"p\">(</span>BasicProducerConsumerProxy<span class=\"p\">):</span></td></tr><tr><th id=\"L102\"><a href=\"#L102\">102</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"ProducerConsumerProxy with a finite buffer.</span></td></tr><tr><th id=\"L103\"><a href=\"#L103\">103</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L104\"><a href=\"#L104\">104</a></th><td><span class=\"sd\">\u00a0 \u00a0 When my buffer fills up, I have my parent Producer pause until my buffer</span></td></tr><tr><th id=\"L105\"><a href=\"#L105\">105</a></th><td><span class=\"sd\">\u00a0 \u00a0 has room in it again.</span></td></tr><tr><th id=\"L106\"><a href=\"#L106\">106</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L107\"><a href=\"#L107\">107</a></th><td>\u00a0 \u00a0 <span class=\"c\"># Copies much from abstract.FileDescriptor</span></td></tr><tr><th id=\"L108\"><a href=\"#L108\">108</a></th><td>\u00a0 \u00a0 bufferSize <span class=\"o\">=</span>\u00a0<span class=\"mi\">2</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"o\">**</span><span class=\"mi\">2</span></td></tr><tr><th id=\"L109\"><a href=\"#L109\">109</a></th><td></td></tr><tr><th id=\"L110\"><a href=\"#L110\">110</a></th><td>\u00a0 \u00a0 producerPaused <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L111\"><a href=\"#L111\">111</a></th><td>\u00a0 \u00a0 unregistered <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L112\"><a href=\"#L112\">112</a></th><td></td></tr><tr><th id=\"L113\"><a href=\"#L113\">113</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">pauseProducing</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L114\"><a href=\"#L114\">114</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Does *not* call up to ProducerConsumerProxy to relay the pause</span></td></tr><tr><th id=\"L115\"><a href=\"#L115\">115</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># message through to my parent Producer.</span></td></tr><tr><th id=\"L116\"><a href=\"#L116\">116</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>paused <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L117\"><a href=\"#L117\">117</a></th><td></td></tr><tr><th id=\"L118\"><a href=\"#L118\">118</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">resumeProducing</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L119\"><a href=\"#L119\">119</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>paused <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L120\"><a href=\"#L120\">120</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_buffer<span class=\"p\">:</span></td></tr><tr><th id=\"L121\"><a href=\"#L121\">121</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 data <span class=\"o\">=</span>\u00a0<span class=\"s\">''</span><span class=\"o\">.</span>join<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>_buffer<span class=\"p\">)</span></td></tr><tr><th id=\"L122\"><a href=\"#L122\">122</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 bytesSent <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_writeSomeData<span class=\"p\">(</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L123\"><a href=\"#L123\">123</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0bytesSent <span class=\"o\">&lt;</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span>data<span class=\"p\">):</span></td></tr><tr><th id=\"L124\"><a href=\"#L124\">124</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 unsent <span class=\"o\">=</span>\u00a0data<span class=\"p\">[</span>bytesSent<span class=\"p\">:]</span></td></tr><tr><th id=\"L125\"><a href=\"#L125\">125</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">assert</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>iAmStreaming<span class=\"p\">,</span>\u00a0<span class=\"p\">(</span></td></tr><tr><th id=\"L126\"><a href=\"#L126\">126</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">\"Streaming producer did not write all its data.\"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L127\"><a href=\"#L127\">127</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_buffer<span class=\"p\">[:]</span>\u00a0<span class=\"o\">=</span>\u00a0<span class=\"p\">[</span>unsent<span class=\"p\">]</span></td></tr><tr><th id=\"L128\"><a href=\"#L128\">128</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L129\"><a href=\"#L129\">129</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_buffer<span class=\"p\">[:]</span>\u00a0<span class=\"o\">=</span>\u00a0<span class=\"p\">[]</span></td></tr><tr><th id=\"L130\"><a href=\"#L130\">130</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L131\"><a href=\"#L131\">131</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 bytesSent <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L132\"><a href=\"#L132\">132</a></th><td></td></tr><tr><th id=\"L133\"><a href=\"#L133\">133</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>unregistered <span class=\"ow\">and</span>\u00a0bytesSent <span class=\"ow\">and</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_buffer <span class=\"ow\">and</span></td></tr><tr><th id=\"L134\"><a href=\"#L134\">134</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>consumer <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L135\"><a href=\"#L135\">135</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>consumer<span class=\"o\">.</span>unregisterProducer<span class=\"p\">()</span></td></tr><tr><th id=\"L136\"><a href=\"#L136\">136</a></th><td></td></tr><tr><th id=\"L137\"><a href=\"#L137\">137</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>iAmStreaming<span class=\"p\">:</span></td></tr><tr><th id=\"L138\"><a href=\"#L138\">138</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>outstandingPull <span class=\"o\">=</span>\u00a0<span class=\"ow\">not</span>\u00a0bytesSent</td></tr><tr><th id=\"L139\"><a href=\"#L139\">139</a></th><td></td></tr><tr><th id=\"L140\"><a href=\"#L140\">140</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>producer <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L141\"><a href=\"#L141\">141</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 bytesBuffered <span class=\"o\">=</span>\u00a0<span class=\"nb\">reduce</span><span class=\"p\">(</span>operator<span class=\"o\">.</span>add<span class=\"p\">,</span></td></tr><tr><th id=\"L142\"><a href=\"#L142\">142</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"p\">[</span><span class=\"nb\">len</span><span class=\"p\">(</span>s<span class=\"p\">)</span>\u00a0<span class=\"k\">for</span>\u00a0s <span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_buffer<span class=\"p\">],</span>\u00a0<span class=\"mi\">0</span><span class=\"p\">)</span></td></tr><tr><th id=\"L143\"><a href=\"#L143\">143</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># TODO: You can see here the potential for high and low</span></td></tr><tr><th id=\"L144\"><a href=\"#L144\">144</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># watermarks, where bufferSize would be the high mark when we</span></td></tr><tr><th id=\"L145\"><a href=\"#L145\">145</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># ask the upstream producer to pause, and we wouldn't have</span></td></tr><tr><th id=\"L146\"><a href=\"#L146\">146</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># it resume again until it hit the low mark.\u00a0 Or if producer</span></td></tr><tr><th id=\"L147\"><a href=\"#L147\">147</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># is Pull, maybe we'd like to pull from it as much as necessary</span></td></tr><tr><th id=\"L148\"><a href=\"#L148\">148</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># to keep our buffer full to the low mark, so we're never caught</span></td></tr><tr><th id=\"L149\"><a href=\"#L149\">149</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># without something to send.</span></td></tr><tr><th id=\"L150\"><a href=\"#L150\">150</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>producerPaused <span class=\"ow\">and</span>\u00a0<span class=\"p\">(</span>bytesBuffered <span class=\"o\">&lt;</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>bufferSize<span class=\"p\">):</span></td></tr><tr><th id=\"L151\"><a href=\"#L151\">151</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># Now that our buffer is empty,</span></td></tr><tr><th id=\"L152\"><a href=\"#L152\">152</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>producerPaused <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L153\"><a href=\"#L153\">153</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>producer<span class=\"o\">.</span>resumeProducing<span class=\"p\">()</span></td></tr><tr><th id=\"L154\"><a href=\"#L154\">154</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>outstandingPull<span class=\"p\">:</span></td></tr><tr><th id=\"L155\"><a href=\"#L155\">155</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># I did not have any data to write in response to a pull,</span></td></tr><tr><th id=\"L156\"><a href=\"#L156\">156</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># so I'd better pull some myself.</span></td></tr><tr><th id=\"L157\"><a href=\"#L157\">157</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>producer<span class=\"o\">.</span>resumeProducing<span class=\"p\">()</span></td></tr><tr><th id=\"L158\"><a href=\"#L158\">158</a></th><td></td></tr><tr><th id=\"L159\"><a href=\"#L159\">159</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">write</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0data<span class=\"p\">):</span></td></tr><tr><th id=\"L160\"><a href=\"#L160\">160</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>paused <span class=\"ow\">or</span>\u00a0<span class=\"p\">(</span><span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>iAmStreaming <span class=\"ow\">and</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>outstandingPull<span class=\"p\">):</span></td></tr><tr><th id=\"L161\"><a href=\"#L161\">161</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># We could use that fifo queue here.</span></td></tr><tr><th id=\"L162\"><a href=\"#L162\">162</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_buffer<span class=\"o\">.</span>append<span class=\"p\">(</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L163\"><a href=\"#L163\">163</a></th><td></td></tr><tr><th id=\"L164\"><a href=\"#L164\">164</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">elif</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>consumer <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L165\"><a href=\"#L165\">165</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">assert</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_buffer<span class=\"p\">,</span>\u00a0<span class=\"p\">(</span></td></tr><tr><th id=\"L166\"><a href=\"#L166\">166</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">\"Writing fresh data to consumer before my buffer is empty!\"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L167\"><a href=\"#L167\">167</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># I'm going to use _writeSomeData here so that there is only one</span></td></tr><tr><th id=\"L168\"><a href=\"#L168\">168</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># path to self.consumer.write.\u00a0 But it doesn't actually make sense,</span></td></tr><tr><th id=\"L169\"><a href=\"#L169\">169</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># if I am streaming, for some data to not be all data.\u00a0 But maybe I</span></td></tr><tr><th id=\"L170\"><a href=\"#L170\">170</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># am not streaming, but I am writing here anyway, because there was</span></td></tr><tr><th id=\"L171\"><a href=\"#L171\">171</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"c\"># an earlier request for data which was not answered.</span></td></tr><tr><th id=\"L172\"><a href=\"#L172\">172</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 bytesSent <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_writeSomeData<span class=\"p\">(</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L173\"><a href=\"#L173\">173</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>outstandingPull <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L174\"><a href=\"#L174\">174</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0bytesSent <span class=\"o\">==</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span>data<span class=\"p\">):</span></td></tr><tr><th id=\"L175\"><a href=\"#L175\">175</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">assert</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>iAmStreaming<span class=\"p\">,</span>\u00a0<span class=\"p\">(</span></td></tr><tr><th id=\"L176\"><a href=\"#L176\">176</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"s\">\"Streaming producer did not write all its data.\"</span><span class=\"p\">)</span></td></tr><tr><th id=\"L177\"><a href=\"#L177\">177</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_buffer<span class=\"o\">.</span>append<span class=\"p\">(</span>data<span class=\"p\">[</span>bytesSent<span class=\"p\">:])</span></td></tr><tr><th id=\"L178\"><a href=\"#L178\">178</a></th><td></td></tr><tr><th id=\"L179\"><a href=\"#L179\">179</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>producer <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">)</span>\u00a0<span class=\"ow\">and</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>producerIsStreaming<span class=\"p\">:</span></td></tr><tr><th id=\"L180\"><a href=\"#L180\">180</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 bytesBuffered <span class=\"o\">=</span>\u00a0<span class=\"nb\">reduce</span><span class=\"p\">(</span>operator<span class=\"o\">.</span>add<span class=\"p\">,</span></td></tr><tr><th id=\"L181\"><a href=\"#L181\">181</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"p\">[</span><span class=\"nb\">len</span><span class=\"p\">(</span>s<span class=\"p\">)</span>\u00a0<span class=\"k\">for</span>\u00a0s <span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_buffer<span class=\"p\">],</span>\u00a0<span class=\"mi\">0</span><span class=\"p\">)</span></td></tr><tr><th id=\"L182\"><a href=\"#L182\">182</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0bytesBuffered <span class=\"o\">&gt;=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>bufferSize<span class=\"p\">:</span></td></tr><tr><th id=\"L183\"><a href=\"#L183\">183</a></th><td></td></tr><tr><th id=\"L184\"><a href=\"#L184\">184</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>producer<span class=\"o\">.</span>pauseProducing<span class=\"p\">()</span></td></tr><tr><th id=\"L185\"><a href=\"#L185\">185</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>producerPaused <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L186\"><a href=\"#L186\">186</a></th><td></td></tr><tr><th id=\"L187\"><a href=\"#L187\">187</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">registerProducer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0producer<span class=\"p\">,</span>\u00a0streaming<span class=\"p\">):</span></td></tr><tr><th id=\"L188\"><a href=\"#L188\">188</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>unregistered <span class=\"o\">=</span>\u00a0<span class=\"bp\">False</span></td></tr><tr><th id=\"L189\"><a href=\"#L189\">189</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 BasicProducerConsumerProxy<span class=\"o\">.</span>registerProducer<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0producer<span class=\"p\">,</span>\u00a0streaming<span class=\"p\">)</span></td></tr><tr><th id=\"L190\"><a href=\"#L190\">190</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0streaming<span class=\"p\">:</span></td></tr><tr><th id=\"L191\"><a href=\"#L191\">191</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 producer<span class=\"o\">.</span>resumeProducing<span class=\"p\">()</span></td></tr><tr><th id=\"L192\"><a href=\"#L192\">192</a></th><td></td></tr><tr><th id=\"L193\"><a href=\"#L193\">193</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">unregisterProducer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L194\"><a href=\"#L194\">194</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>producer <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L195\"><a href=\"#L195\">195</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>producer</td></tr><tr><th id=\"L196\"><a href=\"#L196\">196</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>producerIsStreaming</td></tr><tr><th id=\"L197\"><a href=\"#L197\">197</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>unregistered <span class=\"o\">=</span>\u00a0<span class=\"bp\">True</span></td></tr><tr><th id=\"L198\"><a href=\"#L198\">198</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>consumer <span class=\"ow\">and</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_buffer<span class=\"p\">:</span></td></tr><tr><th id=\"L199\"><a href=\"#L199\">199</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>consumer<span class=\"o\">.</span>unregisterProducer<span class=\"p\">()</span></td></tr><tr><th id=\"L200\"><a href=\"#L200\">200</a></th><td></td></tr><tr><th id=\"L201\"><a href=\"#L201\">201</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_writeSomeData</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0data<span class=\"p\">):</span></td></tr><tr><th id=\"L202\"><a href=\"#L202\">202</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Write as much of this data as possible.</span></td></tr><tr><th id=\"L203\"><a href=\"#L203\">203</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L204\"><a href=\"#L204\">204</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @returns: The number of bytes written.</span></td></tr><tr><th id=\"L205\"><a href=\"#L205\">205</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L206\"><a href=\"#L206\">206</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>consumer <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L207\"><a href=\"#L207\">207</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L208\"><a href=\"#L208\">208</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>consumer<span class=\"o\">.</span>write<span class=\"p\">(</span>data<span class=\"p\">)</span></td></tr><tr><th id=\"L209\"><a href=\"#L209\">209</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"nb\">len</span><span class=\"p\">(</span>data<span class=\"p\">)</span></td></tr></tbody></table>\n\n      </div>\n      <div id=\"anydiff\">\n        <form action=\"/LUCICodeRepository/nomaticIM/diff\" method=\"get\">\n          <div class=\"buttons\">\n            <input type=\"hidden\" name=\"new_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/pcp.py\" />\n            <input type=\"hidden\" name=\"old_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/pcp.py\" />\n            <input type=\"hidden\" name=\"new_rev\" />\n            <input type=\"hidden\" name=\"old_rev\" />\n            <input type=\"submit\" value=\"View changes...\" title=\"Select paths and revs for Diff\" />\n          </div>\n        </form>\n      </div>\n      <div id=\"help\"><strong>Note:</strong> See <a href=\"/LUCICodeRepository/nomaticIM/wiki/TracBrowser\">TracBrowser</a>\n        for help on using the repository browser.</div>\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"first\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/pcp.py?format=txt\">Plain Text</a>\n        </li><li class=\"last\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/protocols/pcp.py\">Original Format</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/LUCICodeRepository/nomaticIM/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/LUCICodeRepository/nomaticIM/about\"><strong>Trac 1.0.1</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">All content copyright 2007-2008 by LUCI <br /><a href=\"http://luci.ics.uci.edu/\">http://luci.ics.uci.edu/</a></p>\n    </div>\n\t\t<div id=\"sitefooter\">\n\t\t\t<script src=\"http://www.google-analytics.com/urchin.js\" type=\"text/javascript\">\n\t\t\t</script>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t\t_uacct = \"UA-338915-2\";\n\t\t\t\turchinTracker();\n\t\t\t</script>\n\t\t</div>\n\t</body>\n</html>", "id": 43960.0}