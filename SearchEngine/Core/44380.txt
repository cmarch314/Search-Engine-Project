{"text": "Search LoginPreferencesHelp GuideAbout Trac WikiTimelineRoadmapBrowse SourceView TicketsSearch Context Navigation BlameRevision Log source nomatic tags NomaticIM 5 buddy bots src twisted python components py View diff against View revision Visit trunk Last change on this file was 712 checked in by cbaker 7 years ago First draft of nomatic buddy bots oscar bot is functional if you give it good authentication credentials jabber bot is just an example from the web File size 1 9 KB Line 1 test case name twisted test test components 23 Copyright c 2 1 2 4 Twisted Matrix Laboratories 4 See LICENSE for details 567 Component architecture for Twisted based on Zope3 components 89Using the Zope3 API directly is strongly recommended Everything1 you need is in the top level of the zope interface package e g 1112 from zope interface import Interface implements1314 class IFoo Interface 15 pass1617 class Foo 18 implements IFoo 192 print IFoo implementedBy Foo True21 print IFoo providedBy Foo True2223The one exception is L twisted python components registerAdapter which is24still the way to register adapters at least if you want Twisted s global25adapter registry 26 2728 twisted imports29from twisted python import reflect3 from twisted persisted import styles3132 system imports33import warnings3435 zope3 imports36from zope interface import interface declarations37from zope interface adapter import AdapterRegistry3839class ComponentsDeprecationWarning DeprecationWarning 4 Nothing emits this warning anymore 41 pass4243 Twisted s global adapter registry44globalRegistry AdapterRegistry 4546 Attribute that registerAdapter looks at Is this supposed to be public 47ALLOW DUPLICATES 4849 Define a function to find the registered adapter factory using either a5 version of Zope Interface which has the registered method or an older51 version which does not 52if getattr AdapterRegistry registered None is None 53 def registered registry required provided 54 55 Return the adapter factory for the given parameters in the given56 registry or None if there is not one 57 58 return registry get required selfImplied get provided get 59else 6 def registered registry required provided 61 62 Return the adapter factory for the given parameters in the given63 registry or None if there is not one 64 65 return registry registered required provided 666768def registerAdapter adapterFactory origInterface interfaceClasses 69 Register an adapter class 7 71 An adapter class is expected to implement the given interface by72 adapting instances implementing origInterface An adapter class s73 init method should accept one parameter an instance implementing74 origInterface 75 76 self globalRegistry77 assert interfaceClasses You need to pass an Interface 78 global ALLOW DUPLICATES798 deal with class interface adapters 81 if not isinstance origInterface interface InterfaceClass 82 origInterface declarations implementedBy origInterface 8384 for interfaceClass in interfaceClasses 85 factory registered self origInterface interfaceClass 86 if factory is not None and not ALLOW DUPLICATES 87 raise ValueError an adapter s was already registered factory 88 for interfaceClass in interfaceClasses 89 self register origInterface interfaceClass adapterFactory 9 9192def getAdapterFactory fromInterface toInterface default 93 Return registered adapter for a given class and interface 9495 Note that is tied to the Twisted global registry and will96 thus not find adapters registered elsewhere 97 98 self globalRegistry99 if not isinstance fromInterface interface InterfaceClass 1 fromInterface declarations implementedBy fromInterface 1 1 factory self lookup1 fromInterface toInterface 1 2 if factory is None 1 3 factory default1 4 return factory1 51 61 7 add global adapter lookup hook for our newly created registry1 8def hook iface ob lookup globalRegistry lookup1 1 9 factory lookup declarations providedBy ob iface 11 if factory is None 111 return None112 else 113 return factory ob 114interface adapter hooks append hook 115116 backwardsCompatImplements and fixClassImplements should probably stick around for another117 release cycle No harm doing so in any case 118119def backwardsCompatImplements klass 12 DEPRECATED 121122 Does nothing Previously handled backwards compat from a123 zope interface using class to a class wanting old twisted124 components interface behaviors 125 126 warnings warn components backwardsCompatImplements doesn t do anything in Twisted 2 3 stop calling it ComponentsDeprecationWarning stacklevel 2 127128def fixClassImplements klass 129 DEPRECATED 13 131 Does nothing Previously converted class from implements to132 zope implementation 133 134 warnings warn components fixClassImplements doesn t do anything in Twisted 2 3 stop calling it ComponentsDeprecationWarning stacklevel 2 135136137def getRegistry 138 Returns the Twisted global139 C zope interface adapter AdapterRegistry instance 14 141 return globalRegistry142143 FIXME deprecate attribute somehow 144CannotAdapt TypeError145146class Adapter 147 I am the default implementation of an Adapter for some interface 148149 This docstring contains a limerick by popular demand 15 151 Subclassing made Zope and TR152 much harder to work with by far 153 So before you inherit 154 be sure to declare it155 Adapter not PyObject 156157 cvar temporaryAdapter If this is True the adapter will not be158 persisted on the Componentized 159 cvar multiComponent If this adapter is persistent should it be16 automatically registered for all appropriate interfaces 161 162163 These attributes are used with Componentized 164165 temporaryAdapter 166 multiComponent 1167168 def init self original 169 Set my original attribute to be the object I am adapting 17 171 self original original172173 def conform self interface 174 175 I forward conform to self original if it has it otherwise I176 simply return None 177 178 if hasattr self original conform 179 return self original conform interface 18 return None181182 def isuper self iface adapter 183 184 Forward isuper to self original185 186 return self original isuper iface adapter 187188189class Componentized styles Versioned 19 I am a mixin to allow you to be adapted in various ways persistently 191192 I define a list of persistent adapters This is to allow adapter classes193 to store system specific state and initialized on demand The194 getComponent method implements this You must also register adapters for195 this class for the interfaces that you wish to pass to getComponent 196197 Many other classes and utilities listed here are present in Zope3 this one198 is specific to Twisted 199 2 2 1 persistenceVersion 12 22 3 def init self 2 4 self adapterCache 2 52 6 def locateAdapterClass self klass interfaceClass default 2 7 return getAdapterFactory klass interfaceClass default 2 82 9 def setAdapter self interfaceClass adapterClass 21 self setComponent interfaceClass adapterClass self 211212 def addAdapter self adapterClass ignoreClass 213 Utility method that calls addComponent I take an adapter class and214 instantiate it with myself as the first argument 215216 return The adapter instantiated 217 218 adapt adapterClass self 219 self addComponent adapt ignoreClass 22 return adapt221222 def setComponent self interfaceClass component 223 224 225 self adapterCache reflect qual interfaceClass component226227 def addComponent self component ignoreClass 228 229 Add a component to me for all appropriate interfaces 23 231 In order to determine which interfaces are appropriate the component s232 provided interfaces will be scanned 233234 If the argument ignoreClass is True then all interfaces are235 considered appropriate 236237 Otherwise an appropriate interface is one for which its class has238 been registered as an adapter for my class according to the rules of239 getComponent 24 241 return the list of appropriate interfaces242 243 for iface in declarations providedBy component 244 if ignoreClass or245 self locateAdapterClass self class iface None 246 component class 247 self adapterCache reflect qual iface component248 249 def unsetComponent self interfaceClass 25 Remove my component specified by the given interface class 251 del self adapterCache reflect qual interfaceClass 252253 def removeComponent self component 254 255 Remove the given component from me entirely for all interfaces for which256 it has been registered 257258 return a list of the interfaces that were removed 259 26 l 261 for k v in self adapterCache items 262 if v is component 263 del self adapterCache k 264 l append reflect namedObject k 265 return l266 267 def getComponent self interface default None 268 Create or retrieve an adapter for the given interface 26927 If such an adapter has already been created retrieve it from the cache271 that this instance keeps of all its adapters Adapters created through272 this mechanism may safely store system specific state 273274 If you want to register an adapter that will be created through275 getComponent but you don t require or don t want your adapter to be276 cached and kept alive for the lifetime of this Componentized object 277 set the attribute temporaryAdapter to True on your adapter class 278279 If you want to automatically register an adapter for all appropriate28 interfaces with addComponent set the attribute multiComponent to281 True on your adapter class 282 283 k reflect qual interface 284 if self adapterCache has key k 285 return self adapterCache k 286 else 287 adapter interface adapt self 288 if adapter is not None and not 289 hasattr adapter temporaryAdapter and29 adapter temporaryAdapter 291 self adapterCache k adapter292 if hasattr adapter multiComponent and293 adapter multiComponent 294 self addComponent adapter 295 if adapter is None 296 return default297 return adapter2982993 def conform self interface 3 1 return self getComponent interface 3 23 33 4class ReprableComponentized Componentized 3 5 def init self 3 6 Componentized init self 3 73 8 def repr self 3 9 from cStringIO import StringIO31 from pprint import pprint311 sio StringIO 312 pprint self adapterCache sio 313 return sio getvalue 314315 all 316 Sticking around 317 ComponentsDeprecationWarning 318 registerAdapter getAdapterFactory 319 Adapter Componentized ReprableComponentized getRegistry 32 321 Deprecated 322 backwardsCompatImplements 323 fixClassImplements 324 Note See TracBrowser for help on using the repository browser Download in other formats Plain Text Original Format Powered by Trac 1 1 By Edgewall Software All content copyright 2 7 2 8 by LUCI http luci ics uci edu ", "_id": "http://djp3-pc2.ics.uci.edu/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/components.py", "title": "\n      components.py in nomatic/tags/nomaticim-0.0.5/buddy_bots/src/twisted/python\n     \u2013 nomatic*im\n    ", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n  \n\n\n  <head>\n\t\t<title>\n      components.py in nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python\n     \u2013 Nomatic*IM\n    </title><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><link rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search\" /><link rel=\"help\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/components.py?format=txt\" type=\"text/plain\" title=\"Plain Text\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/components.py\" type=\"application/x-python; charset=iso-8859-15\" title=\"Original Format\" /><link rel=\"start\" href=\"/LUCICodeRepository/nomaticIM/wiki\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/code.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/pygments/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/browser.css\" type=\"text/css\" /><link rel=\"shortcut icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link rel=\"icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link type=\"application/opensearchdescription+xml\" rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search/opensearch\" title=\"Search Nomatic*IM\" /><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/jquery.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/babel.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/messages/en_US.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/trac.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/search.js\"></script><script type=\"text/javascript\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/folding.js\"></script><script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\".trac-toggledeleted\").show().click(function() {\n                  $(this).siblings().find(\".trac-deleted\").toggle();\n                  return false;\n        }).click();\n        $(\"#jumploc input\").hide();\n        $(\"#jumploc select\").change(function () {\n          this.parentNode.parentNode.submit();\n        });\n          $('#preview table.code').enableCollapsibleColumns($('#preview table.code thead th.content'));\n      });\n    </script>\n\t</head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://luci.ics.uci.edu/#code\"><img src=\"http://luci.ics.uci.edu/blog/archives/LUCIhorzTight.jpg\" alt=\"LUCI Code Repository\" /></a>\n      </div>\n      <form id=\"search\" action=\"/LUCICodeRepository/nomaticIM/search\" method=\"get\">\n        <div>\n          <label for=\"proj-search\">Search:</label>\n          <input type=\"text\" id=\"proj-search\" name=\"q\" size=\"18\" value=\"\" />\n          <input type=\"submit\" value=\"Search\" />\n        </div>\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/login\">Login</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/prefs\">Preferences</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\">Help/Guide</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/wiki\">Wiki</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/timeline\">Timeline</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/roadmap\">Roadmap</a></li><li class=\"active\"><a href=\"/LUCICodeRepository/nomaticIM/browser\">Browse Source</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/report\">View Tickets</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/search\">Search</a></li>\n    </ul>\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/buddy_bots/twisted/python/components.py?annotate=blame\" title=\"Annotate each line with the last changed revision (this can be time consuming...)\">Blame</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/log/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/components.py\">Revision Log</a></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"browser\">\n        <h1>\n          \n<a class=\"pathentry first\" href=\"/LUCICodeRepository/nomaticIM/browser?order=name\" title=\"Go to repository root\">source:</a>\n<a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic?order=name\" title=\"View nomatic\">nomatic</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags?order=name\" title=\"View tags\">tags</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5?order=name\" title=\"View NomaticIM-0.0.5\">NomaticIM-0.0.5</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots?order=name\" title=\"View buddy_bots\">buddy_bots</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src?order=name\" title=\"View src\">src</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted?order=name\" title=\"View twisted\">twisted</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python?order=name\" title=\"View python\">python</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/components.py?order=name\" title=\"View components.py\">components.py</a>\n<br style=\"clear: both\" />\n\n        </h1>\n        <div id=\"diffrev\">\n          <form action=\"/LUCICodeRepository/nomaticIM/changeset\" method=\"get\">\n            <div>\n              <label title=\"Show the diff against a specific revision\">\n                View diff against: <input type=\"text\" name=\"old\" size=\"6\" />\n                <input type=\"hidden\" name=\"old_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/components.py\" />\n                <input type=\"hidden\" name=\"new\" />\n                <input type=\"hidden\" name=\"new_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/components.py\" />\n              </label>\n            </div>\n          </form>\n        </div>\n        <div id=\"jumprev\">\n          <form action=\"\" method=\"get\">\n            <div>\n              <label for=\"rev\">\n                View revision:</label>\n              <input type=\"text\" id=\"rev\" name=\"rev\" size=\"6\" />\n            </div>\n          </form>\n        </div>\n        <div id=\"jumploc\">\n          <form action=\"\" method=\"get\">\n            <div class=\"buttons\">\n              <label for=\"preselected\">Visit:</label>\n              <select id=\"preselected\" name=\"preselected\">\n                <option selected=\"selected\"></option>\n                <optgroup label=\"branches\">\n                  <option value=\"/LUCICodeRepository/nomaticIM/browser/trunk\">trunk</option>\n                </optgroup>\n              </select>\n              <input type=\"submit\" value=\"Go!\" title=\"Jump to the chosen preselected path\" />\n            </div>\n          </form>\n        </div>\n        <div class=\"trac-tags\">\n        </div>\n      <table id=\"info\" summary=\"Revision info\">\n        <tr>\n          <th>\n                <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/nomatic/trunk/buddy_bots/twisted/python/components.py\" title=\"View differences\">Last change</a>\n                  on this file was\n                  <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/\" title=\"View changeset 712\">712</a>,\n                  checked in by cbaker, <a class=\"timeline\" href=\"/LUCICodeRepository/nomaticIM/timeline?from=2008-02-16T08%3A16%3A53-08%3A00&amp;precision=second\" title=\"See timeline at Feb 16, 2008, 8:16:53 AM\">7 years ago</a>\n          </th>\n        </tr>\n        <tr>\n          <td class=\"message searchable\">\n              <p>\nFirst draft of nomatic buddy bots. oscar_bot is functional if you give it good authentication credentials, jabber_bot is just an example from the web <br />\n</p>\n          </td>\n        </tr>\n        <tr><td colspan=\"2\">\n            <strong>File size:</strong>\n            <span title=\"11174 bytes\">10.9 KB</span>\n          </td></tr>\n      </table>\n      <div id=\"preview\" class=\"searchable\">\n        \n  <table class=\"code\"><thead><tr><th class=\"lineno\" title=\"Line numbers\">Line</th><th class=\"content\">\u00a0</th></tr></thead><tbody><tr><th id=\"L1\"><a href=\"#L1\">1</a></th><td><span class=\"c\"># -*- test-case-name: twisted.test.test_components -*-</span></td></tr><tr><th id=\"L2\"><a href=\"#L2\">2</a></th><td></td></tr><tr><th id=\"L3\"><a href=\"#L3\">3</a></th><td><span class=\"c\"># Copyright (c) 2001-2004 Twisted Matrix Laboratories.</span></td></tr><tr><th id=\"L4\"><a href=\"#L4\">4</a></th><td><span class=\"c\"># See LICENSE for details.</span></td></tr><tr><th id=\"L5\"><a href=\"#L5\">5</a></th><td></td></tr><tr><th id=\"L6\"><a href=\"#L6\">6</a></th><td></td></tr><tr><th id=\"L7\"><a href=\"#L7\">7</a></th><td><span class=\"sd\">\"\"\"Component architecture for Twisted, based on Zope3 components.</span></td></tr><tr><th id=\"L8\"><a href=\"#L8\">8</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L9\"><a href=\"#L9\">9</a></th><td><span class=\"sd\">Using the Zope3 API directly is strongly recommended. Everything</span></td></tr><tr><th id=\"L10\"><a href=\"#L10\">10</a></th><td><span class=\"sd\">you need is in the top-level of the zope.interface package, e.g.::</span></td></tr><tr><th id=\"L11\"><a href=\"#L11\">11</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L12\"><a href=\"#L12\">12</a></th><td><span class=\"sd\">\u00a0 \u00a0from zope.interface import Interface, implements</span></td></tr><tr><th id=\"L13\"><a href=\"#L13\">13</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L14\"><a href=\"#L14\">14</a></th><td><span class=\"sd\">\u00a0 \u00a0class IFoo(Interface):</span></td></tr><tr><th id=\"L15\"><a href=\"#L15\">15</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0pass</span></td></tr><tr><th id=\"L16\"><a href=\"#L16\">16</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L17\"><a href=\"#L17\">17</a></th><td><span class=\"sd\">\u00a0 \u00a0class Foo:</span></td></tr><tr><th id=\"L18\"><a href=\"#L18\">18</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0implements(IFoo)</span></td></tr><tr><th id=\"L19\"><a href=\"#L19\">19</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L20\"><a href=\"#L20\">20</a></th><td><span class=\"sd\">\u00a0 \u00a0print IFoo.implementedBy(Foo) # True</span></td></tr><tr><th id=\"L21\"><a href=\"#L21\">21</a></th><td><span class=\"sd\">\u00a0 \u00a0print IFoo.providedBy(Foo()) # True</span></td></tr><tr><th id=\"L22\"><a href=\"#L22\">22</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L23\"><a href=\"#L23\">23</a></th><td><span class=\"sd\">The one exception is L{twisted.python.components.registerAdapter}, which is</span></td></tr><tr><th id=\"L24\"><a href=\"#L24\">24</a></th><td><span class=\"sd\">still the way to register adapters (at least, if you want Twisted's global</span></td></tr><tr><th id=\"L25\"><a href=\"#L25\">25</a></th><td><span class=\"sd\">adapter registry).</span></td></tr><tr><th id=\"L26\"><a href=\"#L26\">26</a></th><td><span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L27\"><a href=\"#L27\">27</a></th><td></td></tr><tr><th id=\"L28\"><a href=\"#L28\">28</a></th><td><span class=\"c\"># twisted imports</span></td></tr><tr><th id=\"L29\"><a href=\"#L29\">29</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.python</span>\u00a0<span class=\"kn\">import</span>\u00a0reflect</td></tr><tr><th id=\"L30\"><a href=\"#L30\">30</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">twisted.persisted</span>\u00a0<span class=\"kn\">import</span>\u00a0styles</td></tr><tr><th id=\"L31\"><a href=\"#L31\">31</a></th><td></td></tr><tr><th id=\"L32\"><a href=\"#L32\">32</a></th><td><span class=\"c\"># system imports</span></td></tr><tr><th id=\"L33\"><a href=\"#L33\">33</a></th><td><span class=\"kn\">import</span>\u00a0<span class=\"nn\">warnings</span></td></tr><tr><th id=\"L34\"><a href=\"#L34\">34</a></th><td></td></tr><tr><th id=\"L35\"><a href=\"#L35\">35</a></th><td><span class=\"c\"># zope3 imports</span></td></tr><tr><th id=\"L36\"><a href=\"#L36\">36</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">zope.interface</span>\u00a0<span class=\"kn\">import</span>\u00a0interface<span class=\"p\">,</span>\u00a0declarations</td></tr><tr><th id=\"L37\"><a href=\"#L37\">37</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">zope.interface.adapter</span>\u00a0<span class=\"kn\">import</span>\u00a0AdapterRegistry</td></tr><tr><th id=\"L38\"><a href=\"#L38\">38</a></th><td></td></tr><tr><th id=\"L39\"><a href=\"#L39\">39</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">ComponentsDeprecationWarning</span><span class=\"p\">(</span><span class=\"ne\">DeprecationWarning</span><span class=\"p\">):</span></td></tr><tr><th id=\"L40\"><a href=\"#L40\">40</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Nothing emits this warning anymore.\"\"\"</span></td></tr><tr><th id=\"L41\"><a href=\"#L41\">41</a></th><td>\u00a0 \u00a0 <span class=\"k\">pass</span></td></tr><tr><th id=\"L42\"><a href=\"#L42\">42</a></th><td></td></tr><tr><th id=\"L43\"><a href=\"#L43\">43</a></th><td><span class=\"c\"># Twisted's global adapter registry</span></td></tr><tr><th id=\"L44\"><a href=\"#L44\">44</a></th><td>globalRegistry <span class=\"o\">=</span>\u00a0AdapterRegistry<span class=\"p\">()</span></td></tr><tr><th id=\"L45\"><a href=\"#L45\">45</a></th><td></td></tr><tr><th id=\"L46\"><a href=\"#L46\">46</a></th><td><span class=\"c\"># Attribute that registerAdapter looks at. Is this supposed to be public?</span></td></tr><tr><th id=\"L47\"><a href=\"#L47\">47</a></th><td>ALLOW_DUPLICATES <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L48\"><a href=\"#L48\">48</a></th><td></td></tr><tr><th id=\"L49\"><a href=\"#L49\">49</a></th><td><span class=\"c\"># Define a function to find the registered adapter factory, using either a</span></td></tr><tr><th id=\"L50\"><a href=\"#L50\">50</a></th><td><span class=\"c\"># version of Zope Interface which has the `registered' method or an older</span></td></tr><tr><th id=\"L51\"><a href=\"#L51\">51</a></th><td><span class=\"c\"># version which does not.</span></td></tr><tr><th id=\"L52\"><a href=\"#L52\">52</a></th><td><span class=\"k\">if</span>\u00a0<span class=\"nb\">getattr</span><span class=\"p\">(</span>AdapterRegistry<span class=\"p\">,</span>\u00a0<span class=\"s\">'registered'</span><span class=\"p\">,</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">)</span>\u00a0<span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L53\"><a href=\"#L53\">53</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_registered</span><span class=\"p\">(</span>registry<span class=\"p\">,</span>\u00a0required<span class=\"p\">,</span>\u00a0provided<span class=\"p\">):</span></td></tr><tr><th id=\"L54\"><a href=\"#L54\">54</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L55\"><a href=\"#L55\">55</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Return the adapter factory for the given parameters in the given</span></td></tr><tr><th id=\"L56\"><a href=\"#L56\">56</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 registry, or None if there is not one.</span></td></tr><tr><th id=\"L57\"><a href=\"#L57\">57</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L58\"><a href=\"#L58\">58</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0registry<span class=\"o\">.</span>get<span class=\"p\">(</span>required<span class=\"p\">)</span><span class=\"o\">.</span>selfImplied<span class=\"o\">.</span>get<span class=\"p\">(</span>provided<span class=\"p\">,</span>\u00a0<span class=\"p\">{})</span><span class=\"o\">.</span>get<span class=\"p\">(</span><span class=\"s\">''</span><span class=\"p\">)</span></td></tr><tr><th id=\"L59\"><a href=\"#L59\">59</a></th><td><span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L60\"><a href=\"#L60\">60</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">_registered</span><span class=\"p\">(</span>registry<span class=\"p\">,</span>\u00a0required<span class=\"p\">,</span>\u00a0provided<span class=\"p\">):</span></td></tr><tr><th id=\"L61\"><a href=\"#L61\">61</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L62\"><a href=\"#L62\">62</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Return the adapter factory for the given parameters in the given</span></td></tr><tr><th id=\"L63\"><a href=\"#L63\">63</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 registry, or None if there is not one.</span></td></tr><tr><th id=\"L64\"><a href=\"#L64\">64</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L65\"><a href=\"#L65\">65</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0registry<span class=\"o\">.</span>registered<span class=\"p\">([</span>required<span class=\"p\">],</span>\u00a0provided<span class=\"p\">)</span></td></tr><tr><th id=\"L66\"><a href=\"#L66\">66</a></th><td></td></tr><tr><th id=\"L67\"><a href=\"#L67\">67</a></th><td></td></tr><tr><th id=\"L68\"><a href=\"#L68\">68</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">registerAdapter</span><span class=\"p\">(</span>adapterFactory<span class=\"p\">,</span>\u00a0origInterface<span class=\"p\">,</span>\u00a0<span class=\"o\">*</span>interfaceClasses<span class=\"p\">):</span></td></tr><tr><th id=\"L69\"><a href=\"#L69\">69</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Register an adapter class.</span></td></tr><tr><th id=\"L70\"><a href=\"#L70\">70</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L71\"><a href=\"#L71\">71</a></th><td><span class=\"sd\">\u00a0 \u00a0 An adapter class is expected to implement the given interface, by</span></td></tr><tr><th id=\"L72\"><a href=\"#L72\">72</a></th><td><span class=\"sd\">\u00a0 \u00a0 adapting instances implementing 'origInterface'. An adapter class's</span></td></tr><tr><th id=\"L73\"><a href=\"#L73\">73</a></th><td><span class=\"sd\">\u00a0 \u00a0 __init__ method should accept one parameter, an instance implementing</span></td></tr><tr><th id=\"L74\"><a href=\"#L74\">74</a></th><td><span class=\"sd\">\u00a0 \u00a0 'origInterface'.</span></td></tr><tr><th id=\"L75\"><a href=\"#L75\">75</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L76\"><a href=\"#L76\">76</a></th><td>\u00a0 \u00a0 <span class=\"bp\">self</span>\u00a0<span class=\"o\">=</span>\u00a0globalRegistry</td></tr><tr><th id=\"L77\"><a href=\"#L77\">77</a></th><td>\u00a0 \u00a0 <span class=\"k\">assert</span>\u00a0interfaceClasses<span class=\"p\">,</span>\u00a0<span class=\"s\">\"You need to pass an Interface\"</span></td></tr><tr><th id=\"L78\"><a href=\"#L78\">78</a></th><td>\u00a0 \u00a0 <span class=\"k\">global</span>\u00a0ALLOW_DUPLICATES</td></tr><tr><th id=\"L79\"><a href=\"#L79\">79</a></th><td></td></tr><tr><th id=\"L80\"><a href=\"#L80\">80</a></th><td>\u00a0 \u00a0 <span class=\"c\"># deal with class-&gt;interface adapters:</span></td></tr><tr><th id=\"L81\"><a href=\"#L81\">81</a></th><td>\u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"nb\">isinstance</span><span class=\"p\">(</span>origInterface<span class=\"p\">,</span>\u00a0interface<span class=\"o\">.</span>InterfaceClass<span class=\"p\">):</span></td></tr><tr><th id=\"L82\"><a href=\"#L82\">82</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 origInterface <span class=\"o\">=</span>\u00a0declarations<span class=\"o\">.</span>implementedBy<span class=\"p\">(</span>origInterface<span class=\"p\">)</span></td></tr><tr><th id=\"L83\"><a href=\"#L83\">83</a></th><td></td></tr><tr><th id=\"L84\"><a href=\"#L84\">84</a></th><td>\u00a0 \u00a0 <span class=\"k\">for</span>\u00a0interfaceClass <span class=\"ow\">in</span>\u00a0interfaceClasses<span class=\"p\">:</span></td></tr><tr><th id=\"L85\"><a href=\"#L85\">85</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 factory <span class=\"o\">=</span>\u00a0_registered<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0origInterface<span class=\"p\">,</span>\u00a0interfaceClass<span class=\"p\">)</span></td></tr><tr><th id=\"L86\"><a href=\"#L86\">86</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0factory <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span>\u00a0<span class=\"ow\">and</span>\u00a0<span class=\"ow\">not</span>\u00a0ALLOW_DUPLICATES<span class=\"p\">:</span></td></tr><tr><th id=\"L87\"><a href=\"#L87\">87</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">raise</span>\u00a0<span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s\">\"an adapter (</span><span class=\"si\">%s</span><span class=\"s\">) was already registered.\"</span>\u00a0<span class=\"o\">%</span>\u00a0<span class=\"p\">(</span>factory<span class=\"p\">,</span>\u00a0<span class=\"p\">))</span></td></tr><tr><th id=\"L88\"><a href=\"#L88\">88</a></th><td>\u00a0 \u00a0 <span class=\"k\">for</span>\u00a0interfaceClass <span class=\"ow\">in</span>\u00a0interfaceClasses<span class=\"p\">:</span></td></tr><tr><th id=\"L89\"><a href=\"#L89\">89</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>register<span class=\"p\">([</span>origInterface<span class=\"p\">],</span>\u00a0interfaceClass<span class=\"p\">,</span>\u00a0<span class=\"s\">''</span><span class=\"p\">,</span>\u00a0adapterFactory<span class=\"p\">)</span></td></tr><tr><th id=\"L90\"><a href=\"#L90\">90</a></th><td></td></tr><tr><th id=\"L91\"><a href=\"#L91\">91</a></th><td></td></tr><tr><th id=\"L92\"><a href=\"#L92\">92</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">getAdapterFactory</span><span class=\"p\">(</span>fromInterface<span class=\"p\">,</span>\u00a0toInterface<span class=\"p\">,</span>\u00a0default<span class=\"p\">):</span></td></tr><tr><th id=\"L93\"><a href=\"#L93\">93</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Return registered adapter for a given class and interface.</span></td></tr><tr><th id=\"L94\"><a href=\"#L94\">94</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L95\"><a href=\"#L95\">95</a></th><td><span class=\"sd\">\u00a0 \u00a0 Note that is tied to the *Twisted* global registry, and will</span></td></tr><tr><th id=\"L96\"><a href=\"#L96\">96</a></th><td><span class=\"sd\">\u00a0 \u00a0 thus not find adapters registered elsewhere.</span></td></tr><tr><th id=\"L97\"><a href=\"#L97\">97</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L98\"><a href=\"#L98\">98</a></th><td>\u00a0 \u00a0 <span class=\"bp\">self</span>\u00a0<span class=\"o\">=</span>\u00a0globalRegistry</td></tr><tr><th id=\"L99\"><a href=\"#L99\">99</a></th><td>\u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"nb\">isinstance</span><span class=\"p\">(</span>fromInterface<span class=\"p\">,</span>\u00a0interface<span class=\"o\">.</span>InterfaceClass<span class=\"p\">):</span></td></tr><tr><th id=\"L100\"><a href=\"#L100\">100</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 fromInterface <span class=\"o\">=</span>\u00a0declarations<span class=\"o\">.</span>implementedBy<span class=\"p\">(</span>fromInterface<span class=\"p\">)</span></td></tr><tr><th id=\"L101\"><a href=\"#L101\">101</a></th><td>\u00a0 \u00a0 factory <span class=\"o\">=</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>lookup1<span class=\"p\">(</span>fromInterface<span class=\"p\">,</span>\u00a0toInterface<span class=\"p\">)</span></td></tr><tr><th id=\"L102\"><a href=\"#L102\">102</a></th><td>\u00a0 \u00a0 <span class=\"k\">if</span>\u00a0factory <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L103\"><a href=\"#L103\">103</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 factory <span class=\"o\">=</span>\u00a0default</td></tr><tr><th id=\"L104\"><a href=\"#L104\">104</a></th><td>\u00a0 \u00a0 <span class=\"k\">return</span>\u00a0factory</td></tr><tr><th id=\"L105\"><a href=\"#L105\">105</a></th><td></td></tr><tr><th id=\"L106\"><a href=\"#L106\">106</a></th><td></td></tr><tr><th id=\"L107\"><a href=\"#L107\">107</a></th><td><span class=\"c\"># add global adapter lookup hook for our newly created registry</span></td></tr><tr><th id=\"L108\"><a href=\"#L108\">108</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">_hook</span><span class=\"p\">(</span>iface<span class=\"p\">,</span>\u00a0ob<span class=\"p\">,</span>\u00a0lookup<span class=\"o\">=</span>globalRegistry<span class=\"o\">.</span>lookup1<span class=\"p\">):</span></td></tr><tr><th id=\"L109\"><a href=\"#L109\">109</a></th><td>\u00a0 \u00a0 factory <span class=\"o\">=</span>\u00a0lookup<span class=\"p\">(</span>declarations<span class=\"o\">.</span>providedBy<span class=\"p\">(</span>ob<span class=\"p\">),</span>\u00a0iface<span class=\"p\">)</span></td></tr><tr><th id=\"L110\"><a href=\"#L110\">110</a></th><td>\u00a0 \u00a0 <span class=\"k\">if</span>\u00a0factory <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L111\"><a href=\"#L111\">111</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L112\"><a href=\"#L112\">112</a></th><td>\u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L113\"><a href=\"#L113\">113</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0factory<span class=\"p\">(</span>ob<span class=\"p\">)</span></td></tr><tr><th id=\"L114\"><a href=\"#L114\">114</a></th><td>interface<span class=\"o\">.</span>adapter_hooks<span class=\"o\">.</span>append<span class=\"p\">(</span>_hook<span class=\"p\">)</span></td></tr><tr><th id=\"L115\"><a href=\"#L115\">115</a></th><td></td></tr><tr><th id=\"L116\"><a href=\"#L116\">116</a></th><td><span class=\"c\">## backwardsCompatImplements and fixClassImplements should probably stick around for another</span></td></tr><tr><th id=\"L117\"><a href=\"#L117\">117</a></th><td><span class=\"c\">## release cycle. No harm doing so in any case.</span></td></tr><tr><th id=\"L118\"><a href=\"#L118\">118</a></th><td></td></tr><tr><th id=\"L119\"><a href=\"#L119\">119</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">backwardsCompatImplements</span><span class=\"p\">(</span>klass<span class=\"p\">):</span></td></tr><tr><th id=\"L120\"><a href=\"#L120\">120</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"DEPRECATED.</span></td></tr><tr><th id=\"L121\"><a href=\"#L121\">121</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L122\"><a href=\"#L122\">122</a></th><td><span class=\"sd\">\u00a0 \u00a0 Does nothing. Previously handled backwards compat from a</span></td></tr><tr><th id=\"L123\"><a href=\"#L123\">123</a></th><td><span class=\"sd\">\u00a0 \u00a0 zope.interface using class to a class wanting old twisted</span></td></tr><tr><th id=\"L124\"><a href=\"#L124\">124</a></th><td><span class=\"sd\">\u00a0 \u00a0 components interface behaviors.</span></td></tr><tr><th id=\"L125\"><a href=\"#L125\">125</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L126\"><a href=\"#L126\">126</a></th><td>\u00a0 \u00a0 warnings<span class=\"o\">.</span>warn<span class=\"p\">(</span><span class=\"s\">\"components.backwardsCompatImplements doesn't do anything in Twisted 2.3, stop calling it.\"</span><span class=\"p\">,</span>\u00a0ComponentsDeprecationWarning<span class=\"p\">,</span>\u00a0stacklevel<span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span></td></tr><tr><th id=\"L127\"><a href=\"#L127\">127</a></th><td></td></tr><tr><th id=\"L128\"><a href=\"#L128\">128</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">fixClassImplements</span><span class=\"p\">(</span>klass<span class=\"p\">):</span></td></tr><tr><th id=\"L129\"><a href=\"#L129\">129</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"DEPRECATED.</span></td></tr><tr><th id=\"L130\"><a href=\"#L130\">130</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L131\"><a href=\"#L131\">131</a></th><td><span class=\"sd\">\u00a0 \u00a0 Does nothing. Previously converted class from __implements__ to</span></td></tr><tr><th id=\"L132\"><a href=\"#L132\">132</a></th><td><span class=\"sd\">\u00a0 \u00a0 zope implementation.</span></td></tr><tr><th id=\"L133\"><a href=\"#L133\">133</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L134\"><a href=\"#L134\">134</a></th><td>\u00a0 \u00a0 warnings<span class=\"o\">.</span>warn<span class=\"p\">(</span><span class=\"s\">\"components.fixClassImplements doesn't do anything in Twisted 2.3, stop calling it.\"</span><span class=\"p\">,</span>\u00a0ComponentsDeprecationWarning<span class=\"p\">,</span>\u00a0stacklevel<span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span></td></tr><tr><th id=\"L135\"><a href=\"#L135\">135</a></th><td></td></tr><tr><th id=\"L136\"><a href=\"#L136\">136</a></th><td></td></tr><tr><th id=\"L137\"><a href=\"#L137\">137</a></th><td><span class=\"k\">def</span>\u00a0<span class=\"nf\">getRegistry</span><span class=\"p\">():</span></td></tr><tr><th id=\"L138\"><a href=\"#L138\">138</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Returns the Twisted global</span></td></tr><tr><th id=\"L139\"><a href=\"#L139\">139</a></th><td><span class=\"sd\">\u00a0 \u00a0 C{zope.interface.adapter.AdapterRegistry} instance.</span></td></tr><tr><th id=\"L140\"><a href=\"#L140\">140</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L141\"><a href=\"#L141\">141</a></th><td>\u00a0 \u00a0 <span class=\"k\">return</span>\u00a0globalRegistry</td></tr><tr><th id=\"L142\"><a href=\"#L142\">142</a></th><td></td></tr><tr><th id=\"L143\"><a href=\"#L143\">143</a></th><td><span class=\"c\"># FIXME: deprecate attribute somehow?</span></td></tr><tr><th id=\"L144\"><a href=\"#L144\">144</a></th><td>CannotAdapt <span class=\"o\">=</span>\u00a0<span class=\"ne\">TypeError</span></td></tr><tr><th id=\"L145\"><a href=\"#L145\">145</a></th><td></td></tr><tr><th id=\"L146\"><a href=\"#L146\">146</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">Adapter</span><span class=\"p\">:</span></td></tr><tr><th id=\"L147\"><a href=\"#L147\">147</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"I am the default implementation of an Adapter for some interface.</span></td></tr><tr><th id=\"L148\"><a href=\"#L148\">148</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L149\"><a href=\"#L149\">149</a></th><td><span class=\"sd\">\u00a0 \u00a0 This docstring contains a limerick, by popular demand::</span></td></tr><tr><th id=\"L150\"><a href=\"#L150\">150</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L151\"><a href=\"#L151\">151</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Subclassing made Zope and TR</span></td></tr><tr><th id=\"L152\"><a href=\"#L152\">152</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 much harder to work with by far.</span></td></tr><tr><th id=\"L153\"><a href=\"#L153\">153</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 So before you inherit,</span></td></tr><tr><th id=\"L154\"><a href=\"#L154\">154</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 be sure to declare it</span></td></tr><tr><th id=\"L155\"><a href=\"#L155\">155</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Adapter, not PyObject*</span></td></tr><tr><th id=\"L156\"><a href=\"#L156\">156</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L157\"><a href=\"#L157\">157</a></th><td><span class=\"sd\">\u00a0 \u00a0 @cvar temporaryAdapter: If this is True, the adapter will not be</span></td></tr><tr><th id=\"L158\"><a href=\"#L158\">158</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 persisted on the Componentized.</span></td></tr><tr><th id=\"L159\"><a href=\"#L159\">159</a></th><td><span class=\"sd\">\u00a0 \u00a0 @cvar multiComponent: If this adapter is persistent, should it be</span></td></tr><tr><th id=\"L160\"><a href=\"#L160\">160</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 automatically registered for all appropriate interfaces.</span></td></tr><tr><th id=\"L161\"><a href=\"#L161\">161</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L162\"><a href=\"#L162\">162</a></th><td></td></tr><tr><th id=\"L163\"><a href=\"#L163\">163</a></th><td>\u00a0 \u00a0 <span class=\"c\"># These attributes are used with Componentized.</span></td></tr><tr><th id=\"L164\"><a href=\"#L164\">164</a></th><td></td></tr><tr><th id=\"L165\"><a href=\"#L165\">165</a></th><td>\u00a0 \u00a0 temporaryAdapter <span class=\"o\">=</span>\u00a0<span class=\"mi\">0</span></td></tr><tr><th id=\"L166\"><a href=\"#L166\">166</a></th><td>\u00a0 \u00a0 multiComponent <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L167\"><a href=\"#L167\">167</a></th><td></td></tr><tr><th id=\"L168\"><a href=\"#L168\">168</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0original<span class=\"p\">):</span></td></tr><tr><th id=\"L169\"><a href=\"#L169\">169</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Set my 'original' attribute to be the object I am adapting.</span></td></tr><tr><th id=\"L170\"><a href=\"#L170\">170</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L171\"><a href=\"#L171\">171</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>original <span class=\"o\">=</span>\u00a0original</td></tr><tr><th id=\"L172\"><a href=\"#L172\">172</a></th><td></td></tr><tr><th id=\"L173\"><a href=\"#L173\">173</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__conform__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0interface<span class=\"p\">):</span></td></tr><tr><th id=\"L174\"><a href=\"#L174\">174</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L175\"><a href=\"#L175\">175</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 I forward __conform__ to self.original if it has it, otherwise I</span></td></tr><tr><th id=\"L176\"><a href=\"#L176\">176</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 simply return None.</span></td></tr><tr><th id=\"L177\"><a href=\"#L177\">177</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L178\"><a href=\"#L178\">178</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>original<span class=\"p\">,</span>\u00a0<span class=\"s\">\"__conform__\"</span><span class=\"p\">):</span></td></tr><tr><th id=\"L179\"><a href=\"#L179\">179</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>original<span class=\"o\">.</span>__conform__<span class=\"p\">(</span>interface<span class=\"p\">)</span></td></tr><tr><th id=\"L180\"><a href=\"#L180\">180</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">None</span></td></tr><tr><th id=\"L181\"><a href=\"#L181\">181</a></th><td></td></tr><tr><th id=\"L182\"><a href=\"#L182\">182</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">isuper</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0iface<span class=\"p\">,</span>\u00a0adapter<span class=\"p\">):</span></td></tr><tr><th id=\"L183\"><a href=\"#L183\">183</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L184\"><a href=\"#L184\">184</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Forward isuper to self.original</span></td></tr><tr><th id=\"L185\"><a href=\"#L185\">185</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L186\"><a href=\"#L186\">186</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>original<span class=\"o\">.</span>isuper<span class=\"p\">(</span>iface<span class=\"p\">,</span>\u00a0adapter<span class=\"p\">)</span></td></tr><tr><th id=\"L187\"><a href=\"#L187\">187</a></th><td></td></tr><tr><th id=\"L188\"><a href=\"#L188\">188</a></th><td></td></tr><tr><th id=\"L189\"><a href=\"#L189\">189</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">Componentized</span><span class=\"p\">(</span>styles<span class=\"o\">.</span>Versioned<span class=\"p\">):</span></td></tr><tr><th id=\"L190\"><a href=\"#L190\">190</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"I am a mixin to allow you to be adapted in various ways persistently.</span></td></tr><tr><th id=\"L191\"><a href=\"#L191\">191</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L192\"><a href=\"#L192\">192</a></th><td><span class=\"sd\">\u00a0 \u00a0 I define a list of persistent adapters.\u00a0 This is to allow adapter classes</span></td></tr><tr><th id=\"L193\"><a href=\"#L193\">193</a></th><td><span class=\"sd\">\u00a0 \u00a0 to store system-specific state, and initialized on demand.\u00a0 The</span></td></tr><tr><th id=\"L194\"><a href=\"#L194\">194</a></th><td><span class=\"sd\">\u00a0 \u00a0 getComponent method implements this.\u00a0 You must also register adapters for</span></td></tr><tr><th id=\"L195\"><a href=\"#L195\">195</a></th><td><span class=\"sd\">\u00a0 \u00a0 this class for the interfaces that you wish to pass to getComponent.</span></td></tr><tr><th id=\"L196\"><a href=\"#L196\">196</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L197\"><a href=\"#L197\">197</a></th><td><span class=\"sd\">\u00a0 \u00a0 Many other classes and utilities listed here are present in Zope3; this one</span></td></tr><tr><th id=\"L198\"><a href=\"#L198\">198</a></th><td><span class=\"sd\">\u00a0 \u00a0 is specific to Twisted.</span></td></tr><tr><th id=\"L199\"><a href=\"#L199\">199</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L200\"><a href=\"#L200\">200</a></th><td></td></tr><tr><th id=\"L201\"><a href=\"#L201\">201</a></th><td>\u00a0 \u00a0 persistenceVersion <span class=\"o\">=</span>\u00a0<span class=\"mi\">1</span></td></tr><tr><th id=\"L202\"><a href=\"#L202\">202</a></th><td></td></tr><tr><th id=\"L203\"><a href=\"#L203\">203</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L204\"><a href=\"#L204\">204</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_adapterCache <span class=\"o\">=</span>\u00a0<span class=\"p\">{}</span></td></tr><tr><th id=\"L205\"><a href=\"#L205\">205</a></th><td></td></tr><tr><th id=\"L206\"><a href=\"#L206\">206</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">locateAdapterClass</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0klass<span class=\"p\">,</span>\u00a0interfaceClass<span class=\"p\">,</span>\u00a0default<span class=\"p\">):</span></td></tr><tr><th id=\"L207\"><a href=\"#L207\">207</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0getAdapterFactory<span class=\"p\">(</span>klass<span class=\"p\">,</span>\u00a0interfaceClass<span class=\"p\">,</span>\u00a0default<span class=\"p\">)</span></td></tr><tr><th id=\"L208\"><a href=\"#L208\">208</a></th><td></td></tr><tr><th id=\"L209\"><a href=\"#L209\">209</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">setAdapter</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0interfaceClass<span class=\"p\">,</span>\u00a0adapterClass<span class=\"p\">):</span></td></tr><tr><th id=\"L210\"><a href=\"#L210\">210</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>setComponent<span class=\"p\">(</span>interfaceClass<span class=\"p\">,</span>\u00a0adapterClass<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">))</span></td></tr><tr><th id=\"L211\"><a href=\"#L211\">211</a></th><td></td></tr><tr><th id=\"L212\"><a href=\"#L212\">212</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">addAdapter</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0adapterClass<span class=\"p\">,</span>\u00a0ignoreClass<span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span></td></tr><tr><th id=\"L213\"><a href=\"#L213\">213</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Utility method that calls addComponent.\u00a0 I take an adapter class and</span></td></tr><tr><th id=\"L214\"><a href=\"#L214\">214</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 instantiate it with myself as the first argument.</span></td></tr><tr><th id=\"L215\"><a href=\"#L215\">215</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L216\"><a href=\"#L216\">216</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: The adapter instantiated.</span></td></tr><tr><th id=\"L217\"><a href=\"#L217\">217</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L218\"><a href=\"#L218\">218</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 adapt <span class=\"o\">=</span>\u00a0adapterClass<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L219\"><a href=\"#L219\">219</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>addComponent<span class=\"p\">(</span>adapt<span class=\"p\">,</span>\u00a0ignoreClass<span class=\"p\">)</span></td></tr><tr><th id=\"L220\"><a href=\"#L220\">220</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0adapt</td></tr><tr><th id=\"L221\"><a href=\"#L221\">221</a></th><td></td></tr><tr><th id=\"L222\"><a href=\"#L222\">222</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">setComponent</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0interfaceClass<span class=\"p\">,</span>\u00a0component<span class=\"p\">):</span></td></tr><tr><th id=\"L223\"><a href=\"#L223\">223</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L224\"><a href=\"#L224\">224</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L225\"><a href=\"#L225\">225</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_adapterCache<span class=\"p\">[</span>reflect<span class=\"o\">.</span>qual<span class=\"p\">(</span>interfaceClass<span class=\"p\">)]</span>\u00a0<span class=\"o\">=</span>\u00a0component</td></tr><tr><th id=\"L226\"><a href=\"#L226\">226</a></th><td></td></tr><tr><th id=\"L227\"><a href=\"#L227\">227</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">addComponent</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0component<span class=\"p\">,</span>\u00a0ignoreClass<span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span></td></tr><tr><th id=\"L228\"><a href=\"#L228\">228</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L229\"><a href=\"#L229\">229</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Add a component to me, for all appropriate interfaces.</span></td></tr><tr><th id=\"L230\"><a href=\"#L230\">230</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L231\"><a href=\"#L231\">231</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 In order to determine which interfaces are appropriate, the component's</span></td></tr><tr><th id=\"L232\"><a href=\"#L232\">232</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 provided interfaces will be scanned.</span></td></tr><tr><th id=\"L233\"><a href=\"#L233\">233</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L234\"><a href=\"#L234\">234</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 If the argument 'ignoreClass' is True, then all interfaces are</span></td></tr><tr><th id=\"L235\"><a href=\"#L235\">235</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 considered appropriate.</span></td></tr><tr><th id=\"L236\"><a href=\"#L236\">236</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L237\"><a href=\"#L237\">237</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Otherwise, an 'appropriate' interface is one for which its class has</span></td></tr><tr><th id=\"L238\"><a href=\"#L238\">238</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 been registered as an adapter for my class according to the rules of</span></td></tr><tr><th id=\"L239\"><a href=\"#L239\">239</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 getComponent.</span></td></tr><tr><th id=\"L240\"><a href=\"#L240\">240</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L241\"><a href=\"#L241\">241</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: the list of appropriate interfaces</span></td></tr><tr><th id=\"L242\"><a href=\"#L242\">242</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L243\"><a href=\"#L243\">243</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0iface <span class=\"ow\">in</span>\u00a0declarations<span class=\"o\">.</span>providedBy<span class=\"p\">(</span>component<span class=\"p\">):</span></td></tr><tr><th id=\"L244\"><a href=\"#L244\">244</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"p\">(</span>ignoreClass <span class=\"ow\">or</span></td></tr><tr><th id=\"L245\"><a href=\"#L245\">245</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>locateAdapterClass<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>__class__<span class=\"p\">,</span>\u00a0iface<span class=\"p\">,</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">)</span></td></tr><tr><th id=\"L246\"><a href=\"#L246\">246</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<span class=\"o\">==</span>\u00a0component<span class=\"o\">.</span>__class__<span class=\"p\">)):</span></td></tr><tr><th id=\"L247\"><a href=\"#L247\">247</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_adapterCache<span class=\"p\">[</span>reflect<span class=\"o\">.</span>qual<span class=\"p\">(</span>iface<span class=\"p\">)]</span>\u00a0<span class=\"o\">=</span>\u00a0component</td></tr><tr><th id=\"L248\"><a href=\"#L248\">248</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 </td></tr><tr><th id=\"L249\"><a href=\"#L249\">249</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">unsetComponent</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0interfaceClass<span class=\"p\">):</span></td></tr><tr><th id=\"L250\"><a href=\"#L250\">250</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Remove my component specified by the given interface class.\"\"\"</span></td></tr><tr><th id=\"L251\"><a href=\"#L251\">251</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_adapterCache<span class=\"p\">[</span>reflect<span class=\"o\">.</span>qual<span class=\"p\">(</span>interfaceClass<span class=\"p\">)]</span></td></tr><tr><th id=\"L252\"><a href=\"#L252\">252</a></th><td></td></tr><tr><th id=\"L253\"><a href=\"#L253\">253</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">removeComponent</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0component<span class=\"p\">):</span></td></tr><tr><th id=\"L254\"><a href=\"#L254\">254</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L255\"><a href=\"#L255\">255</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Remove the given component from me entirely, for all interfaces for which</span></td></tr><tr><th id=\"L256\"><a href=\"#L256\">256</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 it has been registered.</span></td></tr><tr><th id=\"L257\"><a href=\"#L257\">257</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L258\"><a href=\"#L258\">258</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: a list of the interfaces that were removed.</span></td></tr><tr><th id=\"L259\"><a href=\"#L259\">259</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L260\"><a href=\"#L260\">260</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 l <span class=\"o\">=</span>\u00a0<span class=\"p\">[]</span></td></tr><tr><th id=\"L261\"><a href=\"#L261\">261</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">for</span>\u00a0k<span class=\"p\">,</span>\u00a0v <span class=\"ow\">in</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_adapterCache<span class=\"o\">.</span>items<span class=\"p\">():</span></td></tr><tr><th id=\"L262\"><a href=\"#L262\">262</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0v <span class=\"ow\">is</span>\u00a0component<span class=\"p\">:</span></td></tr><tr><th id=\"L263\"><a href=\"#L263\">263</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">del</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_adapterCache<span class=\"p\">[</span>k<span class=\"p\">]</span></td></tr><tr><th id=\"L264\"><a href=\"#L264\">264</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 l<span class=\"o\">.</span>append<span class=\"p\">(</span>reflect<span class=\"o\">.</span>namedObject<span class=\"p\">(</span>k<span class=\"p\">))</span></td></tr><tr><th id=\"L265\"><a href=\"#L265\">265</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0l</td></tr><tr><th id=\"L266\"><a href=\"#L266\">266</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L267\"><a href=\"#L267\">267</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getComponent</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0interface<span class=\"p\">,</span>\u00a0default<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L268\"><a href=\"#L268\">268</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Create or retrieve an adapter for the given interface.</span></td></tr><tr><th id=\"L269\"><a href=\"#L269\">269</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L270\"><a href=\"#L270\">270</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 If such an adapter has already been created, retrieve it from the cache</span></td></tr><tr><th id=\"L271\"><a href=\"#L271\">271</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 that this instance keeps of all its adapters.\u00a0 Adapters created through</span></td></tr><tr><th id=\"L272\"><a href=\"#L272\">272</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 this mechanism may safely store system-specific state.</span></td></tr><tr><th id=\"L273\"><a href=\"#L273\">273</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L274\"><a href=\"#L274\">274</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 If you want to register an adapter that will be created through</span></td></tr><tr><th id=\"L275\"><a href=\"#L275\">275</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 getComponent, but you don't require (or don't want) your adapter to be</span></td></tr><tr><th id=\"L276\"><a href=\"#L276\">276</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 cached and kept alive for the lifetime of this Componentized object,</span></td></tr><tr><th id=\"L277\"><a href=\"#L277\">277</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 set the attribute 'temporaryAdapter' to True on your adapter class.</span></td></tr><tr><th id=\"L278\"><a href=\"#L278\">278</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L279\"><a href=\"#L279\">279</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 If you want to automatically register an adapter for all appropriate</span></td></tr><tr><th id=\"L280\"><a href=\"#L280\">280</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 interfaces (with addComponent), set the attribute 'multiComponent' to</span></td></tr><tr><th id=\"L281\"><a href=\"#L281\">281</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 True on your adapter class.</span></td></tr><tr><th id=\"L282\"><a href=\"#L282\">282</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L283\"><a href=\"#L283\">283</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 k <span class=\"o\">=</span>\u00a0reflect<span class=\"o\">.</span>qual<span class=\"p\">(</span>interface<span class=\"p\">)</span></td></tr><tr><th id=\"L284\"><a href=\"#L284\">284</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_adapterCache<span class=\"o\">.</span>has_key<span class=\"p\">(</span>k<span class=\"p\">):</span></td></tr><tr><th id=\"L285\"><a href=\"#L285\">285</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>_adapterCache<span class=\"p\">[</span>k<span class=\"p\">]</span></td></tr><tr><th id=\"L286\"><a href=\"#L286\">286</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">else</span><span class=\"p\">:</span></td></tr><tr><th id=\"L287\"><a href=\"#L287\">287</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 adapter <span class=\"o\">=</span>\u00a0interface<span class=\"o\">.</span>__adapt__<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L288\"><a href=\"#L288\">288</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0adapter <span class=\"ow\">is</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"bp\">None</span>\u00a0<span class=\"ow\">and</span>\u00a0<span class=\"ow\">not</span>\u00a0<span class=\"p\">(</span></td></tr><tr><th id=\"L289\"><a href=\"#L289\">289</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"nb\">hasattr</span><span class=\"p\">(</span>adapter<span class=\"p\">,</span>\u00a0<span class=\"s\">\"temporaryAdapter\"</span><span class=\"p\">)</span>\u00a0<span class=\"ow\">and</span></td></tr><tr><th id=\"L290\"><a href=\"#L290\">290</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 adapter<span class=\"o\">.</span>temporaryAdapter<span class=\"p\">):</span></td></tr><tr><th id=\"L291\"><a href=\"#L291\">291</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>_adapterCache<span class=\"p\">[</span>k<span class=\"p\">]</span>\u00a0<span class=\"o\">=</span>\u00a0adapter</td></tr><tr><th id=\"L292\"><a href=\"#L292\">292</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0<span class=\"p\">(</span><span class=\"nb\">hasattr</span><span class=\"p\">(</span>adapter<span class=\"p\">,</span>\u00a0<span class=\"s\">\"multiComponent\"</span><span class=\"p\">)</span>\u00a0<span class=\"ow\">and</span></td></tr><tr><th id=\"L293\"><a href=\"#L293\">293</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 adapter<span class=\"o\">.</span>multiComponent<span class=\"p\">):</span></td></tr><tr><th id=\"L294\"><a href=\"#L294\">294</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"bp\">self</span><span class=\"o\">.</span>addComponent<span class=\"p\">(</span>adapter<span class=\"p\">)</span></td></tr><tr><th id=\"L295\"><a href=\"#L295\">295</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">if</span>\u00a0adapter <span class=\"ow\">is</span>\u00a0<span class=\"bp\">None</span><span class=\"p\">:</span></td></tr><tr><th id=\"L296\"><a href=\"#L296\">296</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0default</td></tr><tr><th id=\"L297\"><a href=\"#L297\">297</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0adapter</td></tr><tr><th id=\"L298\"><a href=\"#L298\">298</a></th><td></td></tr><tr><th id=\"L299\"><a href=\"#L299\">299</a></th><td></td></tr><tr><th id=\"L300\"><a href=\"#L300\">300</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__conform__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\u00a0interface<span class=\"p\">):</span></td></tr><tr><th id=\"L301\"><a href=\"#L301\">301</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0<span class=\"bp\">self</span><span class=\"o\">.</span>getComponent<span class=\"p\">(</span>interface<span class=\"p\">)</span></td></tr><tr><th id=\"L302\"><a href=\"#L302\">302</a></th><td></td></tr><tr><th id=\"L303\"><a href=\"#L303\">303</a></th><td></td></tr><tr><th id=\"L304\"><a href=\"#L304\">304</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">ReprableComponentized</span><span class=\"p\">(</span>Componentized<span class=\"p\">):</span></td></tr><tr><th id=\"L305\"><a href=\"#L305\">305</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L306\"><a href=\"#L306\">306</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 Componentized<span class=\"o\">.</span>__init__<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span></td></tr><tr><th id=\"L307\"><a href=\"#L307\">307</a></th><td></td></tr><tr><th id=\"L308\"><a href=\"#L308\">308</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span></td></tr><tr><th id=\"L309\"><a href=\"#L309\">309</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">cStringIO</span>\u00a0<span class=\"kn\">import</span>\u00a0StringIO</td></tr><tr><th id=\"L310\"><a href=\"#L310\">310</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"kn\">from</span>\u00a0<span class=\"nn\">pprint</span>\u00a0<span class=\"kn\">import</span>\u00a0pprint</td></tr><tr><th id=\"L311\"><a href=\"#L311\">311</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 sio <span class=\"o\">=</span>\u00a0StringIO<span class=\"p\">()</span></td></tr><tr><th id=\"L312\"><a href=\"#L312\">312</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 pprint<span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span>_adapterCache<span class=\"p\">,</span>\u00a0sio<span class=\"p\">)</span></td></tr><tr><th id=\"L313\"><a href=\"#L313\">313</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"k\">return</span>\u00a0sio<span class=\"o\">.</span>getvalue<span class=\"p\">()</span></td></tr><tr><th id=\"L314\"><a href=\"#L314\">314</a></th><td></td></tr><tr><th id=\"L315\"><a href=\"#L315\">315</a></th><td>__all__ <span class=\"o\">=</span>\u00a0<span class=\"p\">[</span></td></tr><tr><th id=\"L316\"><a href=\"#L316\">316</a></th><td>\u00a0 \u00a0 <span class=\"c\"># Sticking around:</span></td></tr><tr><th id=\"L317\"><a href=\"#L317\">317</a></th><td>\u00a0 \u00a0 <span class=\"s\">\"ComponentsDeprecationWarning\"</span><span class=\"p\">,</span>\u00a0</td></tr><tr><th id=\"L318\"><a href=\"#L318\">318</a></th><td>\u00a0 \u00a0 <span class=\"s\">\"registerAdapter\"</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"getAdapterFactory\"</span><span class=\"p\">,</span></td></tr><tr><th id=\"L319\"><a href=\"#L319\">319</a></th><td>\u00a0 \u00a0 <span class=\"s\">\"Adapter\"</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"Componentized\"</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"ReprableComponentized\"</span><span class=\"p\">,</span>\u00a0<span class=\"s\">\"getRegistry\"</span><span class=\"p\">,</span></td></tr><tr><th id=\"L320\"><a href=\"#L320\">320</a></th><td>\u00a0 \u00a0 </td></tr><tr><th id=\"L321\"><a href=\"#L321\">321</a></th><td>\u00a0 \u00a0 <span class=\"c\"># Deprecated:</span></td></tr><tr><th id=\"L322\"><a href=\"#L322\">322</a></th><td>\u00a0 \u00a0 <span class=\"s\">\"backwardsCompatImplements\"</span><span class=\"p\">,</span></td></tr><tr><th id=\"L323\"><a href=\"#L323\">323</a></th><td>\u00a0 \u00a0 <span class=\"s\">\"fixClassImplements\"</span><span class=\"p\">,</span></td></tr><tr><th id=\"L324\"><a href=\"#L324\">324</a></th><td><span class=\"p\">]</span></td></tr></tbody></table>\n\n      </div>\n      <div id=\"anydiff\">\n        <form action=\"/LUCICodeRepository/nomaticIM/diff\" method=\"get\">\n          <div class=\"buttons\">\n            <input type=\"hidden\" name=\"new_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/components.py\" />\n            <input type=\"hidden\" name=\"old_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/components.py\" />\n            <input type=\"hidden\" name=\"new_rev\" />\n            <input type=\"hidden\" name=\"old_rev\" />\n            <input type=\"submit\" value=\"View changes...\" title=\"Select paths and revs for Diff\" />\n          </div>\n        </form>\n      </div>\n      <div id=\"help\"><strong>Note:</strong> See <a href=\"/LUCICodeRepository/nomaticIM/wiki/TracBrowser\">TracBrowser</a>\n        for help on using the repository browser.</div>\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"first\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/components.py?format=txt\">Plain Text</a>\n        </li><li class=\"last\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/python/components.py\">Original Format</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/LUCICodeRepository/nomaticIM/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/LUCICodeRepository/nomaticIM/about\"><strong>Trac 1.0.1</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">All content copyright 2007-2008 by LUCI <br /><a href=\"http://luci.ics.uci.edu/\">http://luci.ics.uci.edu/</a></p>\n    </div>\n\t\t<div id=\"sitefooter\">\n\t\t\t<script src=\"http://www.google-analytics.com/urchin.js\" type=\"text/javascript\">\n\t\t\t</script>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t\t_uacct = \"UA-338915-2\";\n\t\t\t\turchinTracker();\n\t\t\t</script>\n\t\t</div>\n\t</body>\n</html>", "id": 44380.0}