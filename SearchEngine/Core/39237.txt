{"text": "Navigation Up Table of Contents Bibliography Index Title Page WidthTraits 3 Definition This concept defines the requirements for traits classes of Width 3 Traits Types WidthTraits 3 Point 3 The point type The in equality tests must be available Access to the point coordinates is done via the get functions Constructing a point is done with the make point operation WidthTraits 3 Plane 3 The plane type Access to the coefficients of the plane is made via the get functions Constructing a plane is done with the make plane operation WidthTraits 3 Vector 3 The vector type There is no need to access the coefficients of a vector only constructing is required and is done with the make vector operation WidthTraits 3 ChullTraits The traits class for using the convex hull algorithm It must be a model of the concept ConvexHullTraits 3 This class is used only if the width is computed from a set of points WidthTraits 3 RT Ring type numbers Internally all numbers are treated as ring type numbers i e neither operator nor sqrt nor other inexact operations are used But because the algorithm does not use any divisions but multiplication instead the numbers can get really big Therefore it is recommended to use a ring type number that provides values of arbitrary length Furthermore it is assumed that the underlying number type of Point 3 Plane 3 and Vector 3 equals RT Notes If you want to compute the width of a polyhedron then you have to make sure that the point type in the traits class and the point type in the polyhedron class are the same The same holds for Traits Plane 3 and Polyhedron Plane 3 Creation Only a default constructor is required WidthTraits 3 traits OperationsWhatever the coordinates of the points are it is required for the width algorithm to have access to the homogeneous representation of points RT get hx Point 3 p returns the homogeneous x coordinate of point p RT get hy Point 3 p returns the homogeneous y coordinate of point p RT get hz Point 3 p returns the homogeneous z coordinate of point p RT get hw Point 3 p returns the homogenizing coordinate of point p void get point coordinates Point 3 p RT px RT py RT pz RT ph returns all homogeneous coordinates of point p at once RT get a Plane 3 f returns the first coefficient of plane f RT get b Plane 3 f returns the second coefficient of plane f RT get c Plane 3 f returns the third coefficient of plane f RT get d Plane 3 f returns the fourth coefficient of plane f void get plane coefficients Plane 3 f RT a RT b RT c RT d returns all four plane coefficients of f at once Point 3 make point RT hx RT hy RT hz RT hw returns a point of type Point 3 with homogeneous coordinates hx hy hz and hw Plane 3 make plane RT a RT b RT c RT d returns a plane of type Plane 3 with coefficients a b c and d Vector 3 make vector RT a RT b RT c returns a vector of type Vector 3 with the four homogeneous coefficients a b c and 1 Has Models CGAL Width default traits 3 K See Also CGAL Width 3 Traits Next Polytope distance d Traits Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Optimisation_ref/Concept_WidthTraits_3.html", "title": "widthtraits_3", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Optimisation_ref/WidthTraits_3.tex' -->\n<html> <head>  \n<title>WidthTraits_3</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_1203\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_1256\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Concept.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_WidthTraits_3\"></A>\n<h2><I>WidthTraits_3</I></h2>\n<P>\n\n<H3>Definition</H3>\n<P>\n\nThis concept defines the requirements for traits classes of\n<I><A HREF=\"Class_Width_3.html#Cross_link_anchor_1200\">Width_3</A>&lt;Traits&gt;</I>.\n<P>\n\n<H3>Types</H3>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_WidthTraits_3.html#Cross_link_anchor_1203\">WidthTraits_3</A>::<A HREF=\"../Kernel_23_ref/Class_Point_3.html#Cross_link_anchor_74\">Point_3</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    The point type. The (in)equality tests must be\n  available. Access to the point coordinates is done via the <I>get_.()</I>\n  functions. Constructing a point is done with the <I>make_point( )</I>\n  operation.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_WidthTraits_3.html#Cross_link_anchor_1203\">WidthTraits_3</A>::<A HREF=\"../Kernel_23_ref/Class_Plane_3.html#Cross_link_anchor_72\">Plane_3</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    The plane type. Access to the coefficients of the\n  plane is made via the <I>get_.()</I> functions. Constructing a plane is\n  done with the <I>make_plane()</I> operation.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_WidthTraits_3.html#Cross_link_anchor_1203\">WidthTraits_3</A>::<A HREF=\"../Kernel_23_ref/Class_Vector_3.html#Cross_link_anchor_86\">Vector_3</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    The vector type. There is no need to access the\n  coefficients of a vector; only constructing is required and is done with\n  the <I>make_vector</I> operation.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_WidthTraits_3.html#Cross_link_anchor_1203\">WidthTraits_3</A>::ChullTraits\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    The traits class for using the convex hull\n  algorithm. It must be a model of the concept <A HREF=\"../Convex_hull_3_ref/Concept_ConvexHullTraits_3.html#Cross_link_anchor_637\">ConvexHullTraits_3</A>.\n  This class is used only if the width is computed from a set\n  of points.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_WidthTraits_3.html#Cross_link_anchor_1203\">WidthTraits_3</A>::RT\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Ring type numbers. Internally all numbers are treated as\n  ring type numbers, i.e., neither <MATH><I>/</I></MATH>-operator nor <MATH><I><A HREF=\"../NumberTypeSupport_ref/Function_sqrt.html#Cross_link_anchor_1414\">sqrt</A>(.)</I></MATH> nor other\n  inexact operations are used. But because the algorithm does not use any\n  divisions, but multiplication instead, the numbers can get really big.\n  Therefore it is recommended to use a ring type number, that provides\n  values of arbitrary length. Furthermore it is assumed that the underlying\n  number type of <I><A HREF=\"../Kernel_23_ref/Class_Point_3.html#Cross_link_anchor_74\">Point_3</A></I>, <I><A HREF=\"../Kernel_23_ref/Class_Plane_3.html#Cross_link_anchor_72\">Plane_3</A></I> and <I><A HREF=\"../Kernel_23_ref/Class_Vector_3.html#Cross_link_anchor_86\">Vector_3</A></I> equals\n  <I>RT</I>.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<I>Notes:</I> If you want to compute the width of a <I>polyhedron</I>\nthen you have to make sure that the point type in the traits class and\nthe point type in the polyhedron class are the same! The same holds\nfor <I>Traits::<A HREF=\"../Kernel_23_ref/Class_Plane_3.html#Cross_link_anchor_72\">Plane_3</A></I> and <I>Polyhedron::<A HREF=\"../Kernel_23_ref/Class_Plane_3.html#Cross_link_anchor_72\">Plane_3</A></I>.\n<P>\n\n<H3>Creation</H3>\n<P>\n\nOnly a default constructor is required.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Concept_WidthTraits_3.html#Cross_link_anchor_1203\">WidthTraits_3</A> traits;\n        </I></NOBR>\n        </TD></TR>\n<P>\n\n</TABLE>\n<P>\n\n<H3>Operations</H3>Whatever the coordinates of the points are, it is required for the\nwidth-algorithm to have access to the homogeneous representation of\npoints.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_RT_get_hx6const_Point_3__p9_const;\"></A>\nRT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    get_hx (  <A HREF=\"../Kernel_23_ref/Class_Point_3.html#Cross_link_anchor_74\">Point_3</A> p)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the\n  homogeneous <MATH><I>x</I></MATH>-coordinate of point <MATH><I>p</I></MATH>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_RT_get_hy6const_Point_3__p9_const;\"></A>\nRT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    get_hy (  <A HREF=\"../Kernel_23_ref/Class_Point_3.html#Cross_link_anchor_74\">Point_3</A> p)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the\n  homogeneous <MATH><I>y</I></MATH>-coordinate of point <MATH><I>p</I></MATH>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_RT_get_hz6const_Point_3__p9_const;\"></A>\nRT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    get_hz (  <A HREF=\"../Kernel_23_ref/Class_Point_3.html#Cross_link_anchor_74\">Point_3</A> p)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the\n  homogeneous <MATH><I>z</I></MATH>-coordinate of point <MATH><I>p</I></MATH>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_RT_get_hw6const_Point_3__p9_const;\"></A>\nRT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    get_hw (  <A HREF=\"../Kernel_23_ref/Class_Point_3.html#Cross_link_anchor_74\">Point_3</A> p)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the\n  homogenizing coordinate of point <MATH><I>p</I></MATH>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_get_point_coordinates6const_Point_3__p+_RT__px+_RT__py+_RT__pz+_RT__ph9_const;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    get_point_coordinates ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n     <A HREF=\"../Kernel_23_ref/Class_Point_3.html#Cross_link_anchor_74\">Point_3</A> p,<BR>\n\nRT&amp; px,<BR>\n\nRT&amp; py,<BR>\n\nRT&amp; pz,<BR>\n\nRT&amp; ph)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns all homogeneous coordinates\n  of point <MATH><I>p</I></MATH> at once.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_RT_get_a6const_Plane_3__f9_const;\"></A>\nRT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    get_a (  <A HREF=\"../Kernel_23_ref/Class_Plane_3.html#Cross_link_anchor_72\">Plane_3</A> f)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the first\n  coefficient of plane <MATH><I>f</I></MATH>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_RT_get_b6const_Plane_3__f9_const;\"></A>\nRT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    get_b (  <A HREF=\"../Kernel_23_ref/Class_Plane_3.html#Cross_link_anchor_72\">Plane_3</A> f)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the second\n  coefficient of plane <MATH><I>f</I></MATH>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_RT_get_c6const_Plane_3__f9_const;\"></A>\nRT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    get_c (  <A HREF=\"../Kernel_23_ref/Class_Plane_3.html#Cross_link_anchor_72\">Plane_3</A> f)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the third\n  coefficient of plane <MATH><I>f</I></MATH>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_RT_get_d6const_Plane_3__f9_const;\"></A>\nRT\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    get_d (  <A HREF=\"../Kernel_23_ref/Class_Plane_3.html#Cross_link_anchor_72\">Plane_3</A> f)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns the fourth\n  coefficient of plane <MATH><I>f</I></MATH>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_void_get_plane_coefficients6const_Plane_3__f+_RT__a+_RT__b+_RT__c+_RT__d9_const;\"></A>\nvoid\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    get_plane_coefficients ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n     <A HREF=\"../Kernel_23_ref/Class_Plane_3.html#Cross_link_anchor_72\">Plane_3</A> f,<BR>\n\nRT&amp; a,<BR>\n\nRT&amp; b,<BR>\n\nRT&amp; c,<BR>\n\nRT&amp; d)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns all four plane coefficients of <MATH><I>f</I></MATH> at once.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Point_3_make_point6const_RT__hx+_const_RT__hy+_const_RT__hz+_const_RT__hw9_const;\"></A>\n<A HREF=\"../Kernel_23_ref/Class_Point_3.html#Cross_link_anchor_74\">Point_3</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    make_point (  RT hx,  RT hy,  RT hz,  RT hw)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns a point of type\n  <I><A HREF=\"../Kernel_23_ref/Class_Point_3.html#Cross_link_anchor_74\">Point_3</A></I> with homogeneous coordinates <MATH><I>hx</I></MATH>, <MATH><I>hy</I></MATH>, <MATH><I>hz</I></MATH> and <MATH><I>hw</I></MATH>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Plane_3_make_plane6const_RT__a+_const_RT__b+_const_RT__c+_const_RT__d9_const;\"></A>\n<A HREF=\"../Kernel_23_ref/Class_Plane_3.html#Cross_link_anchor_72\">Plane_3</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    make_plane (  RT a,  RT b,  RT c,  RT d)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns a plane of type <I><A HREF=\"../Kernel_23_ref/Class_Plane_3.html#Cross_link_anchor_72\">Plane_3</A></I>\n  with coefficients <MATH><I>a</I></MATH>, <MATH><I>b</I></MATH>, <MATH><I>c</I></MATH> and <MATH><I>d</I></MATH>.\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Vector_3_make_vector6const_RT__a+_const_RT__b+_const_RT__c9_const;\"></A>\n<A HREF=\"../Kernel_23_ref/Class_Vector_3.html#Cross_link_anchor_86\">Vector_3</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    make_vector (  RT a,  RT b,  RT c)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    returns a vector of type <I><A HREF=\"../Kernel_23_ref/Class_Vector_3.html#Cross_link_anchor_86\">Vector_3</A></I> with the four\n  homogeneous coefficients <MATH><I>a</I></MATH>, <MATH><I>b</I></MATH>, <MATH><I>c</I></MATH> and 1.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Has Models</H3>\n<P>\n\n<I><A HREF=\"Class_Width_default_traits_3.html#Cross_link_anchor_1201\">CGAL::Width_default_traits_3</A>&lt;K&gt;</I>\n<P>\n\n<H3>See Also</H3>\n<P>\n\n<A NAME=\"Index_anchor_1257\"></A> \n\n   \n \n    \n\n<I><A HREF=\"Class_Width_3.html#Cross_link_anchor_1199\">CGAL::Width_3</A>&lt;Traits&gt;</I>\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Class_Polytope_distance_d.html\"><I>Polytope_distance_d&lt;Traits&gt;</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_52!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 39237.0}