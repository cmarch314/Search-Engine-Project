{"text": "Informatics 1 2 Spring 2 12 News Course Reference Schedule Lab Manual Code Examples About Alex Informatics 1 2 Spring 2 12 Code Examples Code examples from lecture and otherwise Over the course of the quarter I ll be providing commented code examples for you You are not permitted to copy and paste any of this code into your own projects These examples are mostly to give you clean and well documented examples of some of the things we cover in lecture and possibly a few things that we don t time permitting so that you can be free in lecture to avoid trying to take detailed notes when we re writing code together instead concentrating on understanding the process and the bigger picture concepts at work Lecture Date s DescriptionTh 4 5An aspect that adds generalized method tracing to a Java programTh 4 5Using an aspect to address a concern that crosscuts a single classTu 4 1 An aspect that requires an object to be initialized properly before certain methods can be called legallyTu 4 1 An aspect that injects support for caching the results of a slow methodTu 4 1 Using an aspect to inject methods and inheritance relationships into existing classesTh 4 12Using a dynamic cflow pointcut to detect recursionTh 4 12Writing a pointcut that selects a varargs method and hoists its parameters out into adviceTh 4 12Java annotations and using AspectJ to declare new compile time errors and warningsTu 4 17Generalizing the Student initialization example using annotationsTu 4 17Revisiting our caching example with annotations used as an improvementTh 4 19Our QuickUnit unit testing framework illustrating the use of reflection and annotationsTh 5 3A simple Erlang process that says I am happy every five seconds until it s shut downTh 5 3A simple Erlang server process that calculates the area of rectangles and circlesTh 5 3The area server rewritten as an Erlang actor hiding message passing details beneath a simpler interfaceTu 5 8Our implementation of the MapReduce algorithm in ErlangTu 5 15Using Erlang ports to communicate between an Erlang interpreter and a Java programTh 5 17Using Protocol Buffers from Java to serialize a message into a file and read it back againTu 5 22Writing a recursive descent parser given a suitably written grammarTh 5 24Separating scanning from parsing including writing a custom scannerTu 5 29 Th 5 31Designing and implementing a simple domain specific language", "_id": "http://www.ics.uci.edu/~thornton/inf102/CodeExamples/", "title": "informatics 102 spring 2012, code examples", "html": "<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\n<!DOCTYPE html PUBLIC\n \"-//W3C//DTD XHTML 1.1//EN\"\n \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">\n\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\">\n\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=iso-8859-1\" />\n<link rel=\"stylesheet\" href=\"../course.css\" type=\"text/css\" />\n\n<title>Informatics 102 Spring 2012, Code Examples</title>\n\n</head>\n\n<body>\n\n<div class=\"navbar\">\n\n<p>\nInformatics 102 Spring 2012 |\n<a href=\"../index.html\">News</a> |\n<a href=\"../CourseReference.html\">Course Reference</a> |\n<a href=\"../Schedule.html\">Schedule</a> |\n<a href=\"../LabManual\">Lab Manual</a> |\n<a href=\"../CodeExamples\">Code Examples</a> |\n<a href=\"http://www.ics.uci.edu/~thornton/\">About Alex</a>\n</p>\n\n<hr />\n\n</div>\n\n<div class=\"header\">\n\n<p>Informatics 102 Spring 2012<br />\n   Code Examples</p>\n\n</div>\n\n<div class=\"section\">\n\n<hr />\n\n<p class=\"title\">Code examples, from lecture and otherwise</p>\n\n<p>Over the course of the quarter, I'll be providing commented code examples for you.  You are not permitted to copy and paste any of this code into your own projects.  These examples are mostly to give you clean and well-documented examples of some of the things we cover in lecture (and possibly a few things that we don't, time permitting), so that you can be free in lecture to avoid trying to take detailed notes when we're writing code together, instead concentrating on understanding the process and the bigger-picture concepts at work.</p>\n\n<table class=\"normal\">\n  <tr class=\"top\">\n    <td>Lecture Date(s)</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td>Th 4/5</td>\n    <td><a href=\"AspectJTracing.zip\">An aspect that adds generalized method-tracing to a Java program</a></td>\n  </tr>\n  <tr>\n    <td>Th 4/5</td>\n    <td><a href=\"AspectJLineup.zip\">Using an aspect to address a concern that crosscuts a single class</a></td>\n  </tr>\n  <tr>\n    <td>Tu 4/10</td>\n    <td><a href=\"AspectJPersonInitialization.zip\">An aspect that requires an object to be initialized properly before certain methods can be called legally</a></td>\n  <tr>\n    <td>Tu 4/10</td>\n    <td><a href=\"AspectJSlowMethodCaching.zip\">An aspect that injects support for caching the results of a slow method</a></td>\n  </tr>\n  <tr>\n    <td>Tu 4/10</td>\n    <td><a href=\"AspectJAccountOwnership.zip\">Using an aspect to inject methods and inheritance relationships into existing classes</a></td>\n  </tr>\n  <tr>\n    <td>Th 4/12</td>\n    <td><a href=\"AspectJDetectingRecursion.zip\">Using a dynamic <b>cflow</b> pointcut to detect recursion</a></td>\n  </tr>\n  <tr>\n    <td>Th 4/12</td>\n    <td><a href=\"AspectJVarargsMethods.zip\">Writing a pointcut that selects a \"varargs\" method and hoists its parameters out into advice</a></td>\n  </tr>\n  <tr>\n    <td>Th 4/12</td>\n    <td><a href=\"CustomAnnotationsAndAspectJ.zip\">Java annotations and using AspectJ to declare new compile-time errors and warnings</a></td>\n  </tr>\n  <tr>\n    <td>Tu 4/17</td>\n    <td><a href=\"UsingAnnotationsToGeneralizeAspects.zip\">Generalizing the Student initialization example using annotations</a></td>\n  </tr>\n  <tr>\n    <td>Tu 4/17</td>\n    <td><a href=\"AnnotationsWithValues.zip\">Revisiting our caching example, with annotations used as an improvement</a></td>\n  </tr>\n  <tr>\n    <td>Th 4/19</td>\n    <td><a href=\"QuickUnit.zip\">Our QuickUnit unit testing framework, illustrating the use of reflection and annotations</a></td>\n  </tr>\n  <tr>\n    <td>Th 5/3</td>\n    <td><a href=\"ErlangSimpleProcess.zip\">A simple Erlang process that says \"I am happy!\" every five seconds until it's shut down</a></td>\n  </tr>\n  <tr>\n    <td>Th 5/3</td>\n    <td><a href=\"ErlangSimpleServer.zip\">A simple Erlang server process that calculates the area of rectangles and circles</a></td>\n  </tr>\n  <tr>\n    <td>Th 5/3</td>\n    <td><a href=\"ErlangActor.zip\">The area server rewritten as an Erlang actor, hiding message passing details beneath a simpler interface</a></td>\n  </tr>\n  <tr>\n    <td>Tu 5/8</td>\n    <td><a href=\"ErlangMapReduce.zip\">Our implementation of the MapReduce algorithm in Erlang</a></td>\n  </tr>\n  <tr>\n    <td>Tu 5/15</td>\n    <td><a href=\"ErlangPorts.zip\">Using Erlang ports to communicate between an Erlang interpreter and a Java program</a></td>\n  </tr>\n  <tr>\n    <td>Th 5/17</td>\n    <td><a href=\"UsingProtocolBuffers.zip\">Using Protocol Buffers from Java to serialize a message into a file and read it back again</a></td>\n  </tr>\n  <tr>\n    <td>Tu 5/22</td>\n    <td><a href=\"RecursiveDescentParsing.zip\">Writing a recursive-descent parser, given a suitably-written grammar</a></td>\n  </tr>\n  <tr>\n    <td>Th 5/24</td>\n    <td><a href=\"SeparatingScanningFromParsing.zip\">Separating scanning from parsing, including writing a custom scanner</a></td>\n  </tr>\n  <tr>\n    <td>Tu 5/29<br />\n        Th 5/31</td>\n    <td><a href=\"CompilingDSL.zip\">Designing and implementing a simple domain-specific language</a></td>\n  </tr>\n</table>\n\n</div>\n\n</body>\n</html>\n", "id": 16882.0}