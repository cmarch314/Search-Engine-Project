{"text": "Navigation Up Table of Contents Bibliography Index Title Page CGAL natural neighbor coordinates 2 Definition The function natural neighbor coordinates 2 computes natural neighbor coordinates also called Sibson s coordinates for 2D points provided a two dimensional triangulation and a query point inside the convex hull of the vertices of the triangulation include CGAL natural neighbor coordinates 2 h template class Dt class OutputIterator CGAL Triple OutputIterator typename Dt Geom traits FT bool natural neighbor coordinates 2 Dt dt typename Dt Geom traits Point 2 p OutputIterator out typename Dt Face handle start typename Dt Face handle computes the natural neighbor coordinates for p with respect to the points in the two dimensional Delaunay triangulation dt The template class Dt should be of type Delaunay triangulation 2 Traits Tds The value type of the OutputIterator is a pair of Dt Point 2 and the coordinate value of type Dt Geom traits FT The sequence of point coordinate pairs that is computed by the function is placed starting at out The function returns a triple with an iterator that is placed past the end of the resulting sequence of point coordinate pairs the normalization factor of the coordinates and a boolean value which is set to true iff the coordinate computation was successful i e if p lies inside the convex hull of the points in dt template class Dt class OutputIterator class EdgeIterator CGAL Triple OutputIterator typename Dt Geom traits FT bool natural neighbor coordinates 2 Dt dt typename Dt Geom traits Point 2 p OutputIterator out EdgeIterator hole begin EdgeIterator hole end The same as above hole begin and hole end determines the iterator range over the boundary edges of the conflict zone of p in the triangulation It is the result of the function T get boundary of conflicts p std back inserter hole start see Delaunay triangulation 2 Traits Tds template class Dt class OutputIterator CGAL Triple OutputIterator typename Dt Geom traits FT bool natural neighbor coordinates 2 Dt dt typename Dt Vertex handle vh OutputIterator out This function computes the natural neighbor coordinates of the point vh point with respect to the vertices of dt excluding vh point The same as above for the remaining parameters Requirements Dt are equivalent to the class Delaunay triangulation 2 Traits Tds The traits class Traits of Dt is a model of the concept DelaunayTriangulationTraits 2 Only the following members of this traits class are used Construct circumcenter 2 FT Point 2 construct circumcenter 2 object Additionally Traits must meet the requirements for the traits class of the polygon area 2 function OutputIterator value type is equivalent to std pair Dt Point 2 Dt Geom traits FT i e a pair associating a point and its natural neighbor coordinate See AlsoCGAL linear interpolation CGAL sibson c1 interpolation CGAL surface neighbor coordinates 3 CGAL regular neighbor coordinates 2 ImplementationThis function computes the area of the sub cells stolen from the Voronoi cells of the points in dt when inserting p The total area of the Voronoi cell of p is also computed and returned by the function If p lies outside the convex hull the coordinate values cannot be computed and the third value of the result triple is set to false Next regular neighbor coordinates 2 Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Interpolation_ref/Function_natural_neighbor_coordinates_2.html", "title": "natural_neighbor_coordinates_2", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Interpolation_ref/natural_neighbor_coordinates_2.tex' -->\n<html> <head>  \n<title>natural_neighbor_coordinates_2</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_1123\"></A>\n\n<A NAME=\"Cross_link_anchor_1124\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_1018\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Function.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_CGAL::natural_neighbor_coordinates_2\"></A>\n<h2><I>CGAL::natural_neighbor_coordinates_2</I></h2>\n\n     \n     \n     \n<A NAME=\"Index_anchor_1019\"></A>\n<P>\n\n<H3>Definition</H3>\n<P>\n\nThe function <I><A HREF=\"Function_natural_neighbor_coordinates_2.html#Cross_link_anchor_1124\">natural_neighbor_coordinates_2</A></I> computes natural neighbor coordinates, also\ncalled Sibson's coordinates, for <MATH><I>2D</I></MATH> points provided a two-dimensional\ntriangulation and a query point inside the convex hull of the vertices\nof the triangulation.\n<P>\n\n<I>#include &lt;<A HREF=\"../../../include/CGAL/natural_neighbor_coordinates_2.h\">CGAL/natural_neighbor_coordinates_2.h</A>&gt;</I>\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    template &lt; class Dt, class OutputIterator &gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_CGAL::Triple6_OutputIterator+_typename_Dt::Geom_traits::FT+_bool_9_natural_neighbor_coordinates_26const_Dt__dt+_const_typename_Dt::Geom_traits::Point_2__p+_OutputIterator_out+_typename_Dt::Face_handle_start_=_typename_Dt::Face_handle699;\"></A>\n<A HREF=\"../STL_Extension_ref/Class_Triple.html#Cross_link_anchor_1583\">CGAL::Triple</A>&lt; OutputIterator, typename Dt::Geom_traits::FT, bool &gt;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    <A HREF=\"Function_natural_neighbor_coordinates_2.html#Cross_link_anchor_1124\">natural_neighbor_coordinates_2</A> ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n     Dt dt,<BR>\n\ntypename Dt::Geom_traits::<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p,<BR>\n\nOutputIterator out,<BR>\n\ntypename Dt::Face_handle start = typename Dt::Face_handle())</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    computes the\n  natural neighbor coordinates for <I>p</I> with respect to the points\n  in the two-dimensional Delaunay triangulation <I>dt</I>.  The\n  template class <I>Dt</I> should be of type\n  <I><A HREF=\"../Triangulation_2_ref/Class_Delaunay_triangulation_2.html#Cross_link_anchor_920\">Delaunay_triangulation_2</A>&lt;Traits, Tds&gt;</I>.  The value type of the\n  <I>OutputIterator</I> is a pair of <I>Dt::<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A></I> and the\n  coordinate value of type <I>Dt::Geom_traits::FT</I>. The sequence of\n  point/coordinate pairs that is computed by the function is placed\n  starting at <I>out</I>. The function returns a triple with an\n  iterator that is placed past-the-end of the resulting sequence of\n  point/coordinate pairs, the normalization factor of the coordinates\n  and a boolean value which is set to true iff the coordinate\n  computation was successful, i.e. if <I>p</I> lies inside the\n  convex hull of the points in <I>dt</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    template &lt;class Dt, class OutputIterator, class EdgeIterator &gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_CGAL::Triple6_OutputIterator+_typename_Dt::Geom_traits::FT+_bool_9_natural_neighbor_coordinates_26const_Dt__dt+_const_typename_Dt::Geom_traits::Point_2__p+_OutputIterator_out+_EdgeIterator_hole_begin+_EdgeIterator_hole_end9;\"></A>\n<A HREF=\"../STL_Extension_ref/Class_Triple.html#Cross_link_anchor_1583\">CGAL::Triple</A>&lt; OutputIterator, typename Dt::Geom_traits::FT, bool &gt;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    <A HREF=\"Function_natural_neighbor_coordinates_2.html#Cross_link_anchor_1124\">natural_neighbor_coordinates_2</A> ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n     Dt dt,<BR>\n\ntypename Dt::Geom_traits::<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p,<BR>\n\nOutputIterator out,<BR>\n\nEdgeIterator hole_begin,<BR>\n\nEdgeIterator hole_end)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    The same as above.\n  <I>hole_begin</I> and <I>hole_end</I> determines the iterator range\n  over the boundary edges of the conflict zone of <I>p</I> in the\n  triangulation. It is the result of the function\n  <I>T.get_boundary_of_conflicts(p,std::back_inserter(hole),     start)</I>, see <I><A HREF=\"../Triangulation_2_ref/Class_Delaunay_triangulation_2.html#Cross_link_anchor_920\">Delaunay_triangulation_2</A>&lt;Traits, Tds&gt;</I>.\n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    template &lt;class Dt, class OutputIterator&gt;\n        </I></NOBR>\n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_CGAL::Triple6_OutputIterator+_typename_Dt::Geom_traits::FT+_bool_9_natural_neighbor_coordinates_26const_Dt__dt+_typename_Dt::Vertex_handle_vh+_OutputIterator_out9;\"></A>\n<A HREF=\"../STL_Extension_ref/Class_Triple.html#Cross_link_anchor_1583\">CGAL::Triple</A>&lt; OutputIterator, typename Dt::Geom_traits::FT, bool &gt;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    <A HREF=\"Function_natural_neighbor_coordinates_2.html#Cross_link_anchor_1124\">natural_neighbor_coordinates_2</A> ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n     Dt dt,<BR>\n\ntypename Dt::Vertex_handle vh,<BR>\n\nOutputIterator out)</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    This function computes\n  the natural neighbor coordinates of the point <I>vh-&gt;point()</I> with respect to\n  the vertices of <I>dt</I> excluding <I>vh-&gt;point()</I>. The same as above for the\n  remaining parameters.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Requirements</H3>\n<OL>\n<LI><I>Dt</I> are equivalent to the class\n  <I><A HREF=\"../Triangulation_2_ref/Class_Delaunay_triangulation_2.html#Cross_link_anchor_920\">Delaunay_triangulation_2</A>&lt;Traits, Tds&gt;</I>.\n<LI>The traits class <I>Traits</I> of <I>Dt</I> is a model of the\n  concept <I><A HREF=\"../Triangulation_2_ref/Concept_DelaunayTriangulationTraits_2.html#Cross_link_anchor_918\">DelaunayTriangulationTraits_2</A></I>.\n                                Only the following members of this traits class are used:\n  <UL>\n  <LI><I>Construct_circumcenter_2</I>\n  <LI><I>FT</I>\n  <LI><I><A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A></I>\n  <LI><I>construct_circumcenter_2_object</I>\n  <DT><B></B><DD> Additionally, <I>Traits</I> must meet the requirements for\n    the traits class of the <I><A HREF=\"../Polygon_ref/Function_polygon_area_2.html#Cross_link_anchor_674\">polygon_area_2</A></I> function.\n  </UL>\n<LI><I>OutputIterator::value_type</I> is equivalent to\n  <I>std::pair&lt;Dt::<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A>, Dt::Geom_traits::FT&gt;</I>, i.e. a pair\n  associating a point and its natural neighbor coordinate.\n</OL>\n<P>\n\n<H3>See Also</H3><I><A HREF=\"Function_linear_interpolation.html#Cross_link_anchor_1110\">CGAL::linear_interpolation</A></I><BR>\n\n<I><A HREF=\"Function_sibson_c1_interpolation.html#Cross_link_anchor_1112\">CGAL::sibson_c1_interpolation</A></I><BR>\n\n<I><A HREF=\"Function_surface_neighbor_coordinates_3.html#Cross_link_anchor_1134\">CGAL::surface_neighbor_coordinates_3</A></I><BR>\n\n<I><A HREF=\"Function_regular_neighbor_coordinates_2.html#Cross_link_anchor_1125\">CGAL::regular_neighbor_coordinates_2</A></I>\n<P>\n\n<H3>Implementation</H3>This function computes the <A HREF=\"../Kernel_23_ref/Function_area.html#Cross_link_anchor_159\">area</A> of the sub-cells\nstolen from the Voronoi cells of the points in <I>dt</I> when inserting\n<I>p</I>. The total <A HREF=\"../Kernel_23_ref/Function_area.html#Cross_link_anchor_159\">area</A> of the Voronoi cell of <I>p</I> is also\ncomputed and returned by the function. If <I>p</I> lies outside the\nconvex hull, the coordinate values cannot be computed and the third\nvalue of the result triple is set to <I>false</I>.\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Function_regular_neighbor_coordinates_2.html\"><I>regular_neighbor_coordinates_2</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_50!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 38033.0}