{"text": "View Javadoc 1 package swirl workspace slide 2 3 import java io IOException 4 import java io InputStream 5 import java io OutputStream 6 7 import org apache commons logging Log 8 import org apache commons logging LogFactory 9 import org apache slide common ServiceAccessException 1 import org apache slide common Uri 11 import org apache slide content NodeRevisionContent 12 import org apache slide content NodeRevisionDescriptor 13 import org apache slide content RevisionAlreadyExistException 14 import org apache slide content RevisionNotFoundException 15 import org apache slide store ContentStore 16 import org apache slide store txfile AbstractTxFileStoreService 17 import org apache slide store txfile rm ResourceManagerException 18 import org apache slide store util FileHelper 19 2 21 DOCUMENT ME 22 23 author bpillet 24 25 public class FileSystemContentStore extends AbstractTxFileStoreService 26 implements ContentStore 27 28 TODO 29 protected static final String LOG CHANNEL FileSystemContentStore class 3 getName 31 32 commons logging log that maps to this class 33 protected Log log LogFactory getLog LOG CHANNEL 34 35 36 TODO 37 38 param uri TODO 39 param revisionDescriptor TODO 4 param revisionContent TODO 41 42 throws ServiceAccessException TODO 43 throws RevisionAlreadyExistException TODO 44 45 public void createRevisionContent Uri uri 46 NodeRevisionDescriptor revisionDescriptor 47 NodeRevisionContent revisionContent 48 throws ServiceAccessException 49 RevisionAlreadyExistException 5 51 if log isDebugEnabled 52 53 log debug starting createRevisionContent uri 54 revisionDescriptor revisionContent 55 56 57 String revisionUri revisionUri uri toString 58 revisionDescriptor 59 getRevisionNumber 6 61 try 62 63 rm createResource getActiveTxId revisionUri false 64 storeRevisionContent uri revisionDescriptor revisionContent 65 66 catch RevisionNotFoundException e 67 68 Can not be as we just created it If it unexpectedly is this is fatal 69 throwInternalError e uri toString 7 71 catch ResourceManagerException e 72 73 if e getStatus ResourceManagerException ERR RESOURCE EXISTS 74 75 throw new RevisionAlreadyExistException uri toString 76 revisionDescriptor 77 getRevisionNumber 78 79 else 8 81 throwInternalError e uri toString 82 83 84 85 if log isDebugEnabled 86 87 log debug ending createRevisionContent uri 88 revisionDescriptor revisionContent 89 9 91 92 93 TODO 94 95 param uri TODO 96 param revisionDescriptor TODO 97 98 throws ServiceAccessException TODO 99 1 public void removeRevisionContent Uri uri 1 1 NodeRevisionDescriptor revisionDescriptor 1 2 throws ServiceAccessException 1 3 1 4 if log isDebugEnabled 1 5 1 6 log debug starting removeRevisionContent uri 1 7 revisionDescriptor 1 8 1 9 11 String revisionUri uri toString 111 revisionDescriptor getRevisionNumber 112 113 try 114 115 rm deleteResource getActiveTxId revisionUri 116 117 catch ResourceManagerException e 118 119 throwInternalError e uri toString 12 121 122 if log isDebugEnabled 123 124 log debug ending removeRevisionContent uri 125 revisionDescriptor 126 127 128 129 13 TODO 131 132 param uri TODO 133 param revisionDescriptor TODO 134 135 return TODO 136 137 throws ServiceAccessException TODO 138 throws RevisionNotFoundException TODO 139 14 public NodeRevisionContent retrieveRevisionContent Uri uri 141 NodeRevisionDescriptor revisionDescriptor 142 throws ServiceAccessException 143 RevisionNotFoundException 144 145 if log isDebugEnabled 146 147 log debug starting retrieveRevisionContent uri 148 revisionDescriptor 149 15 151 String revisionUri uri toString 152 revisionDescriptor getRevisionNumber 153 154 try 155 156 Object txId getActiveTxId 157 InputStream is 158 159 if txId null 16 161 is rm readResource txId revisionUri 162 163 else 164 165 is rm readResource revisionUri 166 167 168 NodeRevisionContent result new NodeRevisionContent 169 17 result setContent is 171 172 if log isDebugEnabled 173 174 log debug ending retrieveRevisionContent uri 175 revisionDescriptor nret result 176 177 178 return result 179 18 catch ResourceManagerException e 181 182 if e getStatus ResourceManagerException ERR NO SUCH RESOURCE 183 184 throw new RevisionNotFoundException uri toString 185 revisionDescriptor 186 getRevisionNumber 187 188 else 189 19 throwInternalError e uri toString 191 if log isDebugEnabled 192 log debug ending retrieveRevisionContent uri 193 revisionDescriptor nret null 194 195 196 197 return null XXX fake is never called 198 199 2 2 1 2 2 2 3 TODO 2 4 2 5 param uri TODO 2 6 param revisionDescriptor TODO 2 7 param revisionContent TODO 2 8 2 9 throws ServiceAccessException TODO 21 throws RevisionNotFoundException TODO 211 212 public void storeRevisionContent Uri uri 213 NodeRevisionDescriptor revisionDescriptor 214 NodeRevisionContent revisionContent 215 throws ServiceAccessException 216 RevisionNotFoundException 217 218 if log isDebugEnabled 219 22 log debug starting storeRevisionContent uri 221 revisionDescriptor revisionContent 222 223 224 String revisionUri revisionUri uri toString 225 revisionDescriptor 226 getRevisionNumber 227 228 OutputStream os null 229 InputStream is null 23 231 try 232 233 os rm writeResource getActiveTxId revisionUri 234 is revisionContent streamContent 235 236 if is null 237 238 long contentBytes FileHelper copy is os 239 long contentLength revisionDescriptor getContentLength 24 241 revisionDescriptor setContentLength contentBytes 242 243 if contentLength 1 contentBytes contentLength 244 245 rm deleteResource getActiveTxId revisionUri 246 throwInternalError Content length does not match expected 247 248 249 25 catch IOException e 251 252 throwInternalError e uri toString 253 254 catch ResourceManagerException e 255 256 if e getStatus ResourceManagerException ERR NO SUCH RESOURCE 257 258 throw new RevisionNotFoundException uri toString 259 revisionDescriptor 26 getRevisionNumber 261 262 else 263 264 throwInternalError e uri toString 265 266 267 finally 268 269 try 27 271 if os null 272 273 os close 274 275 276 catch IOException e 277 278 try 279 28 if is null 281 282 is close 283 284 285 catch IOException e 286 287 288 if log isDebugEnabled 289 29 log debug ending storeRevisionContent uri 291 revisionDescriptor revisionContent 292 293 294 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.20/xref/swirl/workspace/slide/FileSystemContentStore.html", "title": "filesystemcontentstore xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>FileSystemContentStore xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../../stylesheet.css\" />\n</head>\n<body>\n<div id=\"overview\"><a href=\"../../../../apidocs/swirl/workspace/slide/FileSystemContentStore.html\">View Javadoc</a></div><pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <strong>package</strong> <a href=\"../../../swirl/workspace/slide/package-summary.html\">swirl.workspace.slide</a>;\n<a name=\"2\" href=\"#2\">2</a>   \n<a name=\"3\" href=\"#3\">3</a>   <strong>import</strong> java.io.IOException;\n<a name=\"4\" href=\"#4\">4</a>   <strong>import</strong> java.io.InputStream;\n<a name=\"5\" href=\"#5\">5</a>   <strong>import</strong> java.io.OutputStream;\n<a name=\"6\" href=\"#6\">6</a>   \n<a name=\"7\" href=\"#7\">7</a>   <strong>import</strong> org.apache.commons.logging.Log;\n<a name=\"8\" href=\"#8\">8</a>   <strong>import</strong> org.apache.commons.logging.LogFactory;\n<a name=\"9\" href=\"#9\">9</a>   <strong>import</strong> org.apache.slide.common.ServiceAccessException;\n<a name=\"10\" href=\"#10\">10</a>  <strong>import</strong> org.apache.slide.common.Uri;\n<a name=\"11\" href=\"#11\">11</a>  <strong>import</strong> org.apache.slide.content.NodeRevisionContent;\n<a name=\"12\" href=\"#12\">12</a>  <strong>import</strong> org.apache.slide.content.NodeRevisionDescriptor;\n<a name=\"13\" href=\"#13\">13</a>  <strong>import</strong> org.apache.slide.content.RevisionAlreadyExistException;\n<a name=\"14\" href=\"#14\">14</a>  <strong>import</strong> org.apache.slide.content.RevisionNotFoundException;\n<a name=\"15\" href=\"#15\">15</a>  <strong>import</strong> org.apache.slide.store.ContentStore;\n<a name=\"16\" href=\"#16\">16</a>  <strong>import</strong> org.apache.slide.store.txfile.AbstractTxFileStoreService;\n<a name=\"17\" href=\"#17\">17</a>  <strong>import</strong> org.apache.slide.store.txfile.rm.ResourceManagerException;\n<a name=\"18\" href=\"#18\">18</a>  <strong>import</strong> org.apache.slide.store.util.FileHelper;\n<a name=\"19\" href=\"#19\">19</a>  \n<a name=\"20\" href=\"#20\">20</a>  <em>/**<em>*</em></em>\n<a name=\"21\" href=\"#21\">21</a>  <em> * DOCUMENT ME!</em>\n<a name=\"22\" href=\"#22\">22</a>  <em> *</em>\n<a name=\"23\" href=\"#23\">23</a>  <em> * @author bpillet</em>\n<a name=\"24\" href=\"#24\">24</a>  <em> */</em>\n<a name=\"25\" href=\"#25\">25</a>  <strong>public</strong> <strong>class</strong> <a href=\"../../../swirl/workspace/slide/FileSystemContentStore.html\">FileSystemContentStore</a> <strong>extends</strong> AbstractTxFileStoreService\n<a name=\"26\" href=\"#26\">26</a>      implements ContentStore\n<a name=\"27\" href=\"#27\">27</a>  {\n<a name=\"28\" href=\"#28\">28</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"29\" href=\"#29\">29</a>      <strong>protected</strong> <strong>static</strong> <strong>final</strong> String LOG_CHANNEL = FileSystemContentStore.<strong>class</strong>\n<a name=\"30\" href=\"#30\">30</a>                                                  .getName();\n<a name=\"31\" href=\"#31\">31</a>  \n<a name=\"32\" href=\"#32\">32</a>      <em>/**<em>* commons-logging log that maps to this class */</em></em>\n<a name=\"33\" href=\"#33\">33</a>      <strong>protected</strong> Log log = LogFactory.getLog(LOG_CHANNEL);\n<a name=\"34\" href=\"#34\">34</a>  \n<a name=\"35\" href=\"#35\">35</a>      <em>/**<em>*</em></em>\n<a name=\"36\" href=\"#36\">36</a>  <em>     * TODO</em>\n<a name=\"37\" href=\"#37\">37</a>  <em>     *</em>\n<a name=\"38\" href=\"#38\">38</a>  <em>     * @param uri TODO</em>\n<a name=\"39\" href=\"#39\">39</a>  <em>     * @param revisionDescriptor TODO</em>\n<a name=\"40\" href=\"#40\">40</a>  <em>     * @param revisionContent TODO</em>\n<a name=\"41\" href=\"#41\">41</a>  <em>     *</em>\n<a name=\"42\" href=\"#42\">42</a>  <em>     * @throws ServiceAccessException TODO</em>\n<a name=\"43\" href=\"#43\">43</a>  <em>     * @throws RevisionAlreadyExistException TODO</em>\n<a name=\"44\" href=\"#44\">44</a>  <em>     */</em>\n<a name=\"45\" href=\"#45\">45</a>      <strong>public</strong> <strong>void</strong> createRevisionContent(Uri uri,\n<a name=\"46\" href=\"#46\">46</a>                                        NodeRevisionDescriptor revisionDescriptor,\n<a name=\"47\" href=\"#47\">47</a>                                        NodeRevisionContent revisionContent)\n<a name=\"48\" href=\"#48\">48</a>                                 throws ServiceAccessException, \n<a name=\"49\" href=\"#49\">49</a>                                        RevisionAlreadyExistException\n<a name=\"50\" href=\"#50\">50</a>      {\n<a name=\"51\" href=\"#51\">51</a>          <strong>if</strong>(log.isDebugEnabled())\n<a name=\"52\" href=\"#52\">52</a>          {\n<a name=\"53\" href=\"#53\">53</a>              log.debug(<span class=\"string\">\"starting createRevisionContent(\"</span> + uri + <span class=\"string\">\", \"</span>\n<a name=\"54\" href=\"#54\">54</a>                        + revisionDescriptor + <span class=\"string\">\", \"</span> + revisionContent + <span class=\"string\">\")\"</span>);\n<a name=\"55\" href=\"#55\">55</a>          }\n<a name=\"56\" href=\"#56\">56</a>  \n<a name=\"57\" href=\"#57\">57</a>          String revisionUri = revisionUri = uri.toString() + <span class=\"string\">\"_\"</span>\n<a name=\"58\" href=\"#58\">58</a>                                             + revisionDescriptor\n<a name=\"59\" href=\"#59\">59</a>                                               .getRevisionNumber();\n<a name=\"60\" href=\"#60\">60</a>  \n<a name=\"61\" href=\"#61\">61</a>          <strong>try</strong>\n<a name=\"62\" href=\"#62\">62</a>          {\n<a name=\"63\" href=\"#63\">63</a>              rm.createResource(getActiveTxId(), revisionUri, false);\n<a name=\"64\" href=\"#64\">64</a>              storeRevisionContent(uri, revisionDescriptor, revisionContent);\n<a name=\"65\" href=\"#65\">65</a>          }\n<a name=\"66\" href=\"#66\">66</a>          <strong>catch</strong>(RevisionNotFoundException e)\n<a name=\"67\" href=\"#67\">67</a>          {\n<a name=\"68\" href=\"#68\">68</a>              <em class=\"comment\">// Can not be, as we just created it. If it unexpectedly is, this is fatal </em>\n<a name=\"69\" href=\"#69\">69</a>              throwInternalError(e, uri.toString());\n<a name=\"70\" href=\"#70\">70</a>          }\n<a name=\"71\" href=\"#71\">71</a>          <strong>catch</strong>(ResourceManagerException e)\n<a name=\"72\" href=\"#72\">72</a>          {\n<a name=\"73\" href=\"#73\">73</a>              <strong>if</strong>(e.getStatus() == ResourceManagerException.ERR_RESOURCE_EXISTS)\n<a name=\"74\" href=\"#74\">74</a>              {\n<a name=\"75\" href=\"#75\">75</a>                  <strong>throw</strong> <strong>new</strong> RevisionAlreadyExistException(uri.toString(),\n<a name=\"76\" href=\"#76\">76</a>                                                          revisionDescriptor\n<a name=\"77\" href=\"#77\">77</a>                                                          .getRevisionNumber());\n<a name=\"78\" href=\"#78\">78</a>              }\n<a name=\"79\" href=\"#79\">79</a>              <strong>else</strong>\n<a name=\"80\" href=\"#80\">80</a>              {\n<a name=\"81\" href=\"#81\">81</a>                  throwInternalError(e, uri.toString());\n<a name=\"82\" href=\"#82\">82</a>              }\n<a name=\"83\" href=\"#83\">83</a>          }\n<a name=\"84\" href=\"#84\">84</a>  \n<a name=\"85\" href=\"#85\">85</a>          <strong>if</strong>(log.isDebugEnabled())\n<a name=\"86\" href=\"#86\">86</a>          {\n<a name=\"87\" href=\"#87\">87</a>              log.debug(<span class=\"string\">\"ending createRevisionContent(\"</span> + uri + <span class=\"string\">\", \"</span>\n<a name=\"88\" href=\"#88\">88</a>                        + revisionDescriptor + <span class=\"string\">\", \"</span> + revisionContent + <span class=\"string\">\")\"</span>);\n<a name=\"89\" href=\"#89\">89</a>          }\n<a name=\"90\" href=\"#90\">90</a>      }\n<a name=\"91\" href=\"#91\">91</a>  \n<a name=\"92\" href=\"#92\">92</a>      <em>/**<em>*</em></em>\n<a name=\"93\" href=\"#93\">93</a>  <em>     * TODO</em>\n<a name=\"94\" href=\"#94\">94</a>  <em>     *</em>\n<a name=\"95\" href=\"#95\">95</a>  <em>     * @param uri TODO</em>\n<a name=\"96\" href=\"#96\">96</a>  <em>     * @param revisionDescriptor TODO</em>\n<a name=\"97\" href=\"#97\">97</a>  <em>     *</em>\n<a name=\"98\" href=\"#98\">98</a>  <em>     * @throws ServiceAccessException TODO</em>\n<a name=\"99\" href=\"#99\">99</a>  <em>     */</em>\n<a name=\"100\" href=\"#100\">100</a>     <strong>public</strong> <strong>void</strong> removeRevisionContent(Uri uri,\n<a name=\"101\" href=\"#101\">101</a>                                       NodeRevisionDescriptor revisionDescriptor)\n<a name=\"102\" href=\"#102\">102</a>                                throws ServiceAccessException\n<a name=\"103\" href=\"#103\">103</a>     {\n<a name=\"104\" href=\"#104\">104</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"105\" href=\"#105\">105</a>         {\n<a name=\"106\" href=\"#106\">106</a>             log.debug(<span class=\"string\">\"starting removeRevisionContent(\"</span> + uri + <span class=\"string\">\", \"</span>\n<a name=\"107\" href=\"#107\">107</a>                       + revisionDescriptor + <span class=\"string\">\")\"</span>);\n<a name=\"108\" href=\"#108\">108</a>         }\n<a name=\"109\" href=\"#109\">109</a> \n<a name=\"110\" href=\"#110\">110</a>         String revisionUri = uri.toString() + <span class=\"string\">\"_\"</span>\n<a name=\"111\" href=\"#111\">111</a>                              + revisionDescriptor.getRevisionNumber();\n<a name=\"112\" href=\"#112\">112</a> \n<a name=\"113\" href=\"#113\">113</a>         <strong>try</strong>\n<a name=\"114\" href=\"#114\">114</a>         {\n<a name=\"115\" href=\"#115\">115</a>             rm.deleteResource(getActiveTxId(), revisionUri);\n<a name=\"116\" href=\"#116\">116</a>         }\n<a name=\"117\" href=\"#117\">117</a>         <strong>catch</strong>(ResourceManagerException e)\n<a name=\"118\" href=\"#118\">118</a>         {\n<a name=\"119\" href=\"#119\">119</a>             throwInternalError(e, uri.toString());\n<a name=\"120\" href=\"#120\">120</a>         }\n<a name=\"121\" href=\"#121\">121</a> \n<a name=\"122\" href=\"#122\">122</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"123\" href=\"#123\">123</a>         {\n<a name=\"124\" href=\"#124\">124</a>             log.debug(<span class=\"string\">\"ending removeRevisionContent(\"</span> + uri + <span class=\"string\">\", \"</span>\n<a name=\"125\" href=\"#125\">125</a>                       + revisionDescriptor + <span class=\"string\">\")\"</span>);\n<a name=\"126\" href=\"#126\">126</a>         }\n<a name=\"127\" href=\"#127\">127</a>     }\n<a name=\"128\" href=\"#128\">128</a> \n<a name=\"129\" href=\"#129\">129</a>     <em>/**<em>*</em></em>\n<a name=\"130\" href=\"#130\">130</a> <em>     * TODO</em>\n<a name=\"131\" href=\"#131\">131</a> <em>     *</em>\n<a name=\"132\" href=\"#132\">132</a> <em>     * @param uri TODO</em>\n<a name=\"133\" href=\"#133\">133</a> <em>     * @param revisionDescriptor TODO</em>\n<a name=\"134\" href=\"#134\">134</a> <em>     *</em>\n<a name=\"135\" href=\"#135\">135</a> <em>     * @return TODO</em>\n<a name=\"136\" href=\"#136\">136</a> <em>     *</em>\n<a name=\"137\" href=\"#137\">137</a> <em>     * @throws ServiceAccessException TODO</em>\n<a name=\"138\" href=\"#138\">138</a> <em>     * @throws RevisionNotFoundException TODO</em>\n<a name=\"139\" href=\"#139\">139</a> <em>     */</em>\n<a name=\"140\" href=\"#140\">140</a>     <strong>public</strong> NodeRevisionContent retrieveRevisionContent(Uri uri,\n<a name=\"141\" href=\"#141\">141</a>                                                        NodeRevisionDescriptor revisionDescriptor)\n<a name=\"142\" href=\"#142\">142</a>                                                 throws ServiceAccessException, \n<a name=\"143\" href=\"#143\">143</a>                                                        RevisionNotFoundException\n<a name=\"144\" href=\"#144\">144</a>     {\n<a name=\"145\" href=\"#145\">145</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"146\" href=\"#146\">146</a>         {\n<a name=\"147\" href=\"#147\">147</a>             log.debug(<span class=\"string\">\"starting retrieveRevisionContent(\"</span> + uri + <span class=\"string\">\", \"</span>\n<a name=\"148\" href=\"#148\">148</a>                       + revisionDescriptor + <span class=\"string\">\")\"</span>);\n<a name=\"149\" href=\"#149\">149</a>         }\n<a name=\"150\" href=\"#150\">150</a> \n<a name=\"151\" href=\"#151\">151</a>         String revisionUri = uri.toString() + <span class=\"string\">\"_\"</span>\n<a name=\"152\" href=\"#152\">152</a>                              + revisionDescriptor.getRevisionNumber();\n<a name=\"153\" href=\"#153\">153</a> \n<a name=\"154\" href=\"#154\">154</a>         <strong>try</strong>\n<a name=\"155\" href=\"#155\">155</a>         {\n<a name=\"156\" href=\"#156\">156</a>             Object txId = getActiveTxId();\n<a name=\"157\" href=\"#157\">157</a>             InputStream is;\n<a name=\"158\" href=\"#158\">158</a> \n<a name=\"159\" href=\"#159\">159</a>             <strong>if</strong>(txId != <strong>null</strong>)\n<a name=\"160\" href=\"#160\">160</a>             {\n<a name=\"161\" href=\"#161\">161</a>                 is = rm.readResource(txId, revisionUri);\n<a name=\"162\" href=\"#162\">162</a>             }\n<a name=\"163\" href=\"#163\">163</a>             <strong>else</strong>\n<a name=\"164\" href=\"#164\">164</a>             {\n<a name=\"165\" href=\"#165\">165</a>                 is = rm.readResource(revisionUri);\n<a name=\"166\" href=\"#166\">166</a>             }\n<a name=\"167\" href=\"#167\">167</a> \n<a name=\"168\" href=\"#168\">168</a>             NodeRevisionContent result = <strong>new</strong> NodeRevisionContent();\n<a name=\"169\" href=\"#169\">169</a> \n<a name=\"170\" href=\"#170\">170</a>             result.setContent(is);\n<a name=\"171\" href=\"#171\">171</a> \n<a name=\"172\" href=\"#172\">172</a>             <strong>if</strong>(log.isDebugEnabled())\n<a name=\"173\" href=\"#173\">173</a>             {\n<a name=\"174\" href=\"#174\">174</a>                 log.debug(<span class=\"string\">\"ending retrieveRevisionContent(\"</span> + uri + <span class=\"string\">\", \"</span>\n<a name=\"175\" href=\"#175\">175</a>                           + revisionDescriptor + <span class=\"string\">\")\\nret: \"</span> + result);\n<a name=\"176\" href=\"#176\">176</a>             }\n<a name=\"177\" href=\"#177\">177</a> \n<a name=\"178\" href=\"#178\">178</a>             <strong>return</strong> result;\n<a name=\"179\" href=\"#179\">179</a>         }\n<a name=\"180\" href=\"#180\">180</a>         <strong>catch</strong>(ResourceManagerException e)\n<a name=\"181\" href=\"#181\">181</a>         {\n<a name=\"182\" href=\"#182\">182</a>             <strong>if</strong>(e.getStatus() == ResourceManagerException.ERR_NO_SUCH_RESOURCE)\n<a name=\"183\" href=\"#183\">183</a>             {\n<a name=\"184\" href=\"#184\">184</a>                 <strong>throw</strong> <strong>new</strong> RevisionNotFoundException(uri.toString(),\n<a name=\"185\" href=\"#185\">185</a>                                                     revisionDescriptor\n<a name=\"186\" href=\"#186\">186</a>                                                     .getRevisionNumber());\n<a name=\"187\" href=\"#187\">187</a>             }\n<a name=\"188\" href=\"#188\">188</a>             <strong>else</strong>\n<a name=\"189\" href=\"#189\">189</a>             {\n<a name=\"190\" href=\"#190\">190</a>                 throwInternalError(e, uri.toString());\n<a name=\"191\" href=\"#191\">191</a>                 <strong>if</strong> (log.isDebugEnabled()){\n<a name=\"192\" href=\"#192\">192</a>                 \tlog.debug(<span class=\"string\">\"ending retrieveRevisionContent(\"</span> + uri + <span class=\"string\">\", \"</span>\n<a name=\"193\" href=\"#193\">193</a>                             + revisionDescriptor + <span class=\"string\">\")\\nret: \"</span> + <strong>null</strong>);\n<a name=\"194\" href=\"#194\">194</a>                 }\n<a name=\"195\" href=\"#195\">195</a> \n<a name=\"196\" href=\"#196\">196</a> \n<a name=\"197\" href=\"#197\">197</a>                 <strong>return</strong> <strong>null</strong>; <em class=\"comment\">// XXX fake (is never called)</em>\n<a name=\"198\" href=\"#198\">198</a>             }\n<a name=\"199\" href=\"#199\">199</a>         }\n<a name=\"200\" href=\"#200\">200</a>     }\n<a name=\"201\" href=\"#201\">201</a> \n<a name=\"202\" href=\"#202\">202</a>     <em>/**<em>*</em></em>\n<a name=\"203\" href=\"#203\">203</a> <em>     * TODO</em>\n<a name=\"204\" href=\"#204\">204</a> <em>     *</em>\n<a name=\"205\" href=\"#205\">205</a> <em>     * @param uri TODO</em>\n<a name=\"206\" href=\"#206\">206</a> <em>     * @param revisionDescriptor TODO</em>\n<a name=\"207\" href=\"#207\">207</a> <em>     * @param revisionContent TODO</em>\n<a name=\"208\" href=\"#208\">208</a> <em>     *</em>\n<a name=\"209\" href=\"#209\">209</a> <em>     * @throws ServiceAccessException TODO</em>\n<a name=\"210\" href=\"#210\">210</a> <em>     * @throws RevisionNotFoundException TODO</em>\n<a name=\"211\" href=\"#211\">211</a> <em>     */</em>\n<a name=\"212\" href=\"#212\">212</a>     <strong>public</strong> <strong>void</strong> storeRevisionContent(Uri uri,\n<a name=\"213\" href=\"#213\">213</a>                                      NodeRevisionDescriptor revisionDescriptor,\n<a name=\"214\" href=\"#214\">214</a>                                      NodeRevisionContent revisionContent)\n<a name=\"215\" href=\"#215\">215</a>                               throws ServiceAccessException, \n<a name=\"216\" href=\"#216\">216</a>                                      RevisionNotFoundException\n<a name=\"217\" href=\"#217\">217</a>     {\n<a name=\"218\" href=\"#218\">218</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"219\" href=\"#219\">219</a>         {\n<a name=\"220\" href=\"#220\">220</a>             log.debug(<span class=\"string\">\"starting storeRevisionContent(\"</span> + uri + <span class=\"string\">\", \"</span>\n<a name=\"221\" href=\"#221\">221</a>                       + revisionDescriptor + <span class=\"string\">\", \"</span> + revisionContent + <span class=\"string\">\")\"</span>);\n<a name=\"222\" href=\"#222\">222</a>         }\n<a name=\"223\" href=\"#223\">223</a> \n<a name=\"224\" href=\"#224\">224</a>         String revisionUri = revisionUri = uri.toString() + <span class=\"string\">\"_\"</span>\n<a name=\"225\" href=\"#225\">225</a>                                            + revisionDescriptor\n<a name=\"226\" href=\"#226\">226</a>                                              .getRevisionNumber();\n<a name=\"227\" href=\"#227\">227</a> \n<a name=\"228\" href=\"#228\">228</a>         OutputStream os = <strong>null</strong>;\n<a name=\"229\" href=\"#229\">229</a>         InputStream is = <strong>null</strong>;\n<a name=\"230\" href=\"#230\">230</a> \n<a name=\"231\" href=\"#231\">231</a>         <strong>try</strong>\n<a name=\"232\" href=\"#232\">232</a>         {\n<a name=\"233\" href=\"#233\">233</a>             os = rm.writeResource(getActiveTxId(), revisionUri);\n<a name=\"234\" href=\"#234\">234</a>             is = revisionContent.streamContent();\n<a name=\"235\" href=\"#235\">235</a> \n<a name=\"236\" href=\"#236\">236</a>             <strong>if</strong>(is != <strong>null</strong>)\n<a name=\"237\" href=\"#237\">237</a>             {\n<a name=\"238\" href=\"#238\">238</a>                 <strong>long</strong> contentBytes = FileHelper.copy(is, os);\n<a name=\"239\" href=\"#239\">239</a>                 <strong>long</strong> contentLength = revisionDescriptor.getContentLength();\n<a name=\"240\" href=\"#240\">240</a> \n<a name=\"241\" href=\"#241\">241</a>                 revisionDescriptor.setContentLength(contentBytes);\n<a name=\"242\" href=\"#242\">242</a> \n<a name=\"243\" href=\"#243\">243</a>                 <strong>if</strong>((contentLength != -1) &amp;&amp; (contentBytes != contentLength))\n<a name=\"244\" href=\"#244\">244</a>                 {\n<a name=\"245\" href=\"#245\">245</a>                     rm.deleteResource(getActiveTxId(), revisionUri);\n<a name=\"246\" href=\"#246\">246</a>                     throwInternalError(<span class=\"string\">\"Content length does not match expected\"</span>);\n<a name=\"247\" href=\"#247\">247</a>                 }\n<a name=\"248\" href=\"#248\">248</a>             }\n<a name=\"249\" href=\"#249\">249</a>         }\n<a name=\"250\" href=\"#250\">250</a>         <strong>catch</strong>(IOException e)\n<a name=\"251\" href=\"#251\">251</a>         {\n<a name=\"252\" href=\"#252\">252</a>             throwInternalError(e, uri.toString());\n<a name=\"253\" href=\"#253\">253</a>         }\n<a name=\"254\" href=\"#254\">254</a>         <strong>catch</strong>(ResourceManagerException e)\n<a name=\"255\" href=\"#255\">255</a>         {\n<a name=\"256\" href=\"#256\">256</a>             <strong>if</strong>(e.getStatus() == ResourceManagerException.ERR_NO_SUCH_RESOURCE)\n<a name=\"257\" href=\"#257\">257</a>             {\n<a name=\"258\" href=\"#258\">258</a>                 <strong>throw</strong> <strong>new</strong> RevisionNotFoundException(uri.toString(),\n<a name=\"259\" href=\"#259\">259</a>                                                     revisionDescriptor\n<a name=\"260\" href=\"#260\">260</a>                                                     .getRevisionNumber());\n<a name=\"261\" href=\"#261\">261</a>             }\n<a name=\"262\" href=\"#262\">262</a>             <strong>else</strong>\n<a name=\"263\" href=\"#263\">263</a>             {\n<a name=\"264\" href=\"#264\">264</a>                 throwInternalError(e, uri.toString());\n<a name=\"265\" href=\"#265\">265</a>             }\n<a name=\"266\" href=\"#266\">266</a>         }\n<a name=\"267\" href=\"#267\">267</a>         <strong>finally</strong>\n<a name=\"268\" href=\"#268\">268</a>         {\n<a name=\"269\" href=\"#269\">269</a>             <strong>try</strong>\n<a name=\"270\" href=\"#270\">270</a>             {\n<a name=\"271\" href=\"#271\">271</a>                 <strong>if</strong>(os != <strong>null</strong>)\n<a name=\"272\" href=\"#272\">272</a>                 {\n<a name=\"273\" href=\"#273\">273</a>                     os.close();\n<a name=\"274\" href=\"#274\">274</a>                 }\n<a name=\"275\" href=\"#275\">275</a>             }\n<a name=\"276\" href=\"#276\">276</a>             <strong>catch</strong>(IOException e){}\n<a name=\"277\" href=\"#277\">277</a> \n<a name=\"278\" href=\"#278\">278</a>             <strong>try</strong>\n<a name=\"279\" href=\"#279\">279</a>             {\n<a name=\"280\" href=\"#280\">280</a>                 <strong>if</strong>(is != <strong>null</strong>)\n<a name=\"281\" href=\"#281\">281</a>                 {\n<a name=\"282\" href=\"#282\">282</a>                     is.close();\n<a name=\"283\" href=\"#283\">283</a>                 }\n<a name=\"284\" href=\"#284\">284</a>             }\n<a name=\"285\" href=\"#285\">285</a>             <strong>catch</strong>(IOException e){}\n<a name=\"286\" href=\"#286\">286</a>         }\n<a name=\"287\" href=\"#287\">287</a> \n<a name=\"288\" href=\"#288\">288</a>         <strong>if</strong>(log.isDebugEnabled())\n<a name=\"289\" href=\"#289\">289</a>         {\n<a name=\"290\" href=\"#290\">290</a>             log.debug(<span class=\"string\">\"ending storeRevisionContent(\"</span> + uri + <span class=\"string\">\", \"</span>\n<a name=\"291\" href=\"#291\">291</a>                       + revisionDescriptor + <span class=\"string\">\", \"</span> + revisionContent + <span class=\"string\">\")\"</span>);\n<a name=\"292\" href=\"#292\">292</a>         }\n<a name=\"293\" href=\"#293\">293</a>     }\n<a name=\"294\" href=\"#294\">294</a> }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 33002.0}