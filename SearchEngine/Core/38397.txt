{"text": "OEChem C Theory Manual Version 1 3 1 Previous 22 2 operator and function Up 22 Predicate Functors Next 22 4 OEUnaryPredicate 22 3 Functors have State One advantage of functors over function pointers is that they can hold state Since this state is held by the instance of the object it can be thread safe unlike static variables inside functions used with function pointers The state of a functor can be initialized at construction For instance OEChem s OEHasAtomicNum functor takes an argument on construction which defines which atomic number is required for the functor to return true The state of a functor can also change during the operator function One group of functors called accumulators sum a value each time they are called Finally functors can take advantage of all of the other properties of C classes A programmer can define any number of other functions which manipulate or query the state of the functor OEChem C Theory Manual Version 1 3 1 Previous 22 2 operator and function Up 22 Predicate Functors Next 22 4 OEUnaryPredicate Documentation released on July 3 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/oechem/cplusprog/node174.html", "title": "22.3 functors have state", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<html>\n<head>\n<title>22.3 Functors have State</title>\n<META NAME=\"description\" CONTENT=\"22.3 Functors have State\">\n<META NAME=\"keywords\" CONTENT=\"cplusprog\">\n<META NAME=\"resource-type\" CONTENT=\"document\">\n<META NAME=\"distribution\" CONTENT=\"global\">\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n<link rel=\"STYLESHEET\" href=\"cplusprog.css\">\n<link rel=\"first\" href=\"cplusprog.html\">\n<link rel=\"contents\" href=\"contents.html\" title=\"Contents\">\n\n<LINK REL=\"next\" HREF=\"node175.html\">\n<LINK REL=\"previous\" HREF=\"node173.html\">\n<LINK REL=\"up\" HREF=\"node171.html\">\n<LINK REL=\"next\" HREF=\"node175.html\">\n</head>\n<body>\n<DIV CLASS=\"navigation\">\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node173.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node171.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node175.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - C++ Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><img src=\"../icons/blank_4.gif\"\n  border=\"0\" alt=\"\"></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node173.html\">22.2 operator() and function</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node171.html\">22. Predicate Functors</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node175.html\">22.4 OEUnaryPredicate</A>\n<br><hr>\n</DIV>\n<!--End of Navigation Panel-->\n\n<H1><A NAME=\"SECTION0025300000000000000000\">\n22.3 Functors have State</A>\n</H1>\n\n<P>\nOne advantage of functors over function pointers is that they can hold\nstate.  Since this state is held by the instance of the object it can be\nthread safe (unlike static-variables inside functions used with function\npointers).  The state of a functor can be initialized at construction.  For\ninstance, OEChem's <code>OEHasAtomicNum</code> functor takes an argument on\nconstruction which defines which atomic number is required for the functor\nto return true.  The state of a functor can also change during the\n<code>operator()</code> function.  One group of functors, called accumulators,\nsum a value each time they are called.  Finally, functors can take\nadvantage of all of the other properties of C++ classes.  A programmer can\ndefine any number of other functions which manipulate or query the state of\nthe functor.\n\n<P>\n\n<DIV CLASS=\"navigation\">\n<p><hr>\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node173.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node171.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node175.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - C++ Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><img src=\"../icons/blank_4.gif\"\n  border=\"0\" alt=\"\"></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node173.html\">22.2 operator() and function</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node171.html\">22. Predicate Functors</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node175.html\">22.4 OEUnaryPredicate</A>\n<hr>\n<span class=\"release-info\">Documentation released on July 30, 2004.</span>\n</DIV>\n<!--End of Navigation Panel-->\n\n</BODY>\n</HTML>\n", "id": 38397.0}