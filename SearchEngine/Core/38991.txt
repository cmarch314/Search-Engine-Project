{"text": "Navigation Up Table of Contents Bibliography Index Title Page CGAL Triangulation euclidean traits xy 3 K Definition The class Triangulation euclidean traits xy 3 K is a geometric traits class which alows to triangulate a terrain This traits class is designed to build a two dimensional triangulation embedded in 3D space i e a triangulated surface such that its on the xy plane is a Delaunay triangulation This is a usual construction for GIS terrains Instead of really projecting the 3D points and maintaining a mapping between each point and its projection which costs space and is error prone the class Triangulation euclidean traits xy 3 K supplies geometric predicates that ignore the z coordinate of the points The class is a model of the concept DelaunayTriangulationTraits 2 except that it does not provide the type and constructors required to build the dual Voronoi diagram ParametersThe template parameter K has to be instantiated by a model of the Kernel concept Triangulation euclidean traits xy 3 K uses types and predicates defined in K include CGAL Triangulation euclidean traits xy 3 h Types typedef Point 3 K Point 2 typedef Segment 3 K Segment 2 typedef Triangle 3 K Triangle 2 The following predicates and constructor types are provided Triangulation euclidean traits xy 3 K Construct segment 2 A constructor object for Segment 2 Provides Segment 2 operator Point 2 p Point 2 q which constructs a segment from two points Triangulation euclidean traits xy 3 K Construct triangle 2 A constructor object for Triangle 2 Provides Triangle 2 operator Point 2 p Point 2 q Point 2 r which constructs a triangle from three points Triangulation euclidean traits xy 3 K Compare x 2 Predicate object Provides the operator Comparison result operator Point 2 p Point 2 q which returns SMALLER EQUAL or LARGER accordingto the x ordering of points p and q Triangulation euclidean traits xy 3 K Compare y 2 Predicate object Provides the operator Comparison result operator Point 2 p Point 2 q which returns SMALLER EQUAL or LARGER according to the y ordering of points p and q Triangulation euclidean traits xy 3 K Orientation 2 Predicate object Provides the operator Orientation operator Point 2 p Point 2 q Point 2 r which returns LEFT TURN RIGHT TURN or COLLINEAR according to the position of the projection of r with respect to the projection of the oriented line pq Triangulation euclidean traits xy 3 K Side of oriented circle 2 Predicate object Provides the operator Oriented side operator Point 2 p Point 2 q Point 2 r Point 2 s which takes four points p q r s as arguments and returns ON POSITIVE SIDE ON NEGATIVE SIDE or ON ORIENTED BOUNDARY according to the position of the projection of points with respect to the oriented circle through the projections of p q and r Creation Only a default constructor copy constructor and an assignement operator are required Note that further constructors can be provided Triangulation euclidean traits xy 3 K traits default constructor Triangulation euclidean traits xy 3 K traits Triangulation euclidean traits xy 3 tr Copy constructor Triangulation euclidean traits xy 3 traits Triangulation euclidean traits xy 3 tr Assignment operator Access to predicate objects The following access functions are provided Construct segment 2 traits construct segment 2 object Construct triangle 2 traits construct triangle 2 object Comparison x 2 traits compare x 2 object Comparison y 2 traits compare y 2 object Orientation 2 traits orientation 2 object Side of oriented circle 2 traits side of oriented circle 2 object See AlsoTriangulationTraits 2 DelaunayTriangulationTraits 2 CGAL Triangulation 2 Traits Tds CGAL Delaunay triangulation 2 Traits Tds CGAL provides also predefined geometric traits class Triangulation euclidean traits yz 3 K and Triangulation euclidean traits zx 3 K to deal with projections on the xz or the yz plane respectively include CGAL Triangulation euclidean traits xz 3 h include CGAL Triangulation euclidean traits yz 3 h Next Triangulation face base 2 Traits Fb Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Triangulation_2_ref/Class_Triangulation_euclidean_traits_xy_3.html", "title": "triangulation_euclidean_traits_xy_3&lt;k&gt;", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Triangulation_2_ref/Triangulation_euclidean_traits_xy_3.tex' -->\n<html> <head>  \n<title>Triangulation_euclidean_traits_xy_3&lt;K&gt;</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n\n<A NAME=\"Cross_link_anchor_944\"></A>\n\n<A NAME=\"Cross_link_anchor_945\"></A>\n\n      \n     \n     \n     \n<A NAME=\"Index_anchor_899\"></A> \n\n   \n<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC=\"cc_Class.gif\"></TD></TR></TABLE>\n\n\n    <A NAME=\"ccRef_CGAL::Triangulation_euclidean_traits_xy_3<K>\"></A>\n<h2><I>CGAL::Triangulation_euclidean_traits_xy_3&lt;K&gt;</I></h2>\n<P>\n\n<H3>Definition</H3>\n<P>\n\nThe class <I><A HREF=\"Class_Triangulation_euclidean_traits_xy_3.html#Cross_link_anchor_945\">Triangulation_euclidean_traits_xy_3</A>&lt;K&gt;</I> is a geometric traits class which alows to\ntriangulate\na terrain. This traits class is designed to build \na two dimensional triangulation  embedded in 3D space,\ni.e. a triangulated surface, such that \nits\non the <MATH><I>xy</I></MATH> plane  is a Delaunay triangulation.\nThis is a usual construction for GIS terrains.\nInstead of really projecting the 3D points and\nmaintaining a mapping between each point and its projection\n (which costs space and is error prone)\nthe class <I><A HREF=\"Class_Triangulation_euclidean_traits_xy_3.html#Cross_link_anchor_945\">Triangulation_euclidean_traits_xy_3</A>&lt;K&gt;</I>  supplies geometric predicates that ignore the\n<I>z</I>-coordinate of the points.\n<P>\n\nThe class is a model of the concept <I><A HREF=\"Concept_DelaunayTriangulationTraits_2.html#Cross_link_anchor_918\">DelaunayTriangulationTraits_2</A></I> \nexcept that it does not provide the type and constructors\nrequired to build the dual Voronoi diagram.\n<P>\n\n<H3>Parameters</H3>The template parameter <I>K</I>  has to\nbe instantiated by a model of the <I><A HREF=\"../Kernel_23_ref/Concept_Kernel.html#Cross_link_anchor_0\">Kernel</A></I> concept.\n<I><A HREF=\"Class_Triangulation_euclidean_traits_xy_3.html#Cross_link_anchor_945\">Triangulation_euclidean_traits_xy_3</A>&lt;K&gt;</I> uses types \nand predicates defined in <I>K</I>.\n<P>\n\n<I>#include &lt;<A HREF=\"../../../include/CGAL/Triangulation_euclidean_traits_xy_3.h\">CGAL/Triangulation_euclidean_traits_xy_3.h</A>&gt;</I>\n<P>\n\n<H3>Types</H3>\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Point_2\"></A>\n<A NAME=\"Typedef_Point_2\"></A>\ntypedef <A HREF=\"../Kernel_23_ref/Class_Point_3.html#Cross_link_anchor_74\">Point_3</A>&lt;K&gt;\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A>;\n        </I></NOBR>\n        </TD>\n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Segment_2\"></A>\n<A NAME=\"Typedef_Segment_2\"></A>\ntypedef <A HREF=\"../Kernel_23_ref/Class_Segment_3.html#Cross_link_anchor_78\">Segment_3</A>&lt;K&gt;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"../Kernel_23_ref/Class_Segment_2.html#Cross_link_anchor_56\">Segment_2</A>;\n        </I></NOBR>\n        </TD>\n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Triangle_2\"></A>\n<A NAME=\"Typedef_Triangle_2\"></A>\ntypedef <A HREF=\"../Kernel_23_ref/Class_Triangle_3.html#Cross_link_anchor_84\">Triangle_3</A>&lt;K&gt;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"../Kernel_23_ref/Class_Triangle_2.html#Cross_link_anchor_58\">Triangle_2</A>;\n        </I></NOBR>\n        </TD>\n    \n        </TR>\n        </TABLE>\n<P>\n\nThe following predicates and constructor types are provided\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Triangulation_euclidean_traits_xy_3.html#Cross_link_anchor_945\">Triangulation_euclidean_traits_xy_3</A>&lt;K&gt;::Construct_segment_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    A constructor object for\n<I><A HREF=\"../Kernel_23_ref/Class_Segment_2.html#Cross_link_anchor_56\">Segment_2</A></I>. Provides&nbsp;:<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Class_Segment_2.html#Cross_link_anchor_56\">Segment_2</A> operator()(<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p,<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> q)</I>,<BR>\n\nwhich constructs a  segment from two points.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Triangulation_euclidean_traits_xy_3.html#Cross_link_anchor_945\">Triangulation_euclidean_traits_xy_3</A>&lt;K&gt;::Construct_triangle_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    A constructor object for\n<I><A HREF=\"../Kernel_23_ref/Class_Triangle_2.html#Cross_link_anchor_58\">Triangle_2</A></I>. Provides&nbsp;:<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Class_Triangle_2.html#Cross_link_anchor_58\">Triangle_2</A> operator()(<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p,<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> q,<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> r )</I>,<BR>\n\nwhich constructs a triangle from three points.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Triangulation_euclidean_traits_xy_3.html#Cross_link_anchor_945\">Triangulation_euclidean_traits_xy_3</A>&lt;K&gt;::Compare_x_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Predicate object. Provides\nthe operator&nbsp;:<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Enum_Comparison_result.html#Cross_link_anchor_104\">Comparison_result</A> operator()(<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p, <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> q)</I><BR>\n\nwhich returns \n<I><A HREF=\"../Kernel_23_ref/Enum_Comparison_result#Enum_Comparison_result\">SMALLER</A>, <A HREF=\"../Kernel_23_ref/Enum_Comparison_result#Enum_Comparison_result\">EQUAL</A></I> or <I> <A HREF=\"../Kernel_23_ref/Enum_Comparison_result#Enum_Comparison_result\">LARGER</A></I>\n accordingto the\n<MATH><I>x</I></MATH>-ordering of points <I>p</I> and <I>q</I>.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Triangulation_euclidean_traits_xy_3.html#Cross_link_anchor_945\">Triangulation_euclidean_traits_xy_3</A>&lt;K&gt;::Compare_y_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Predicate object. Provides\nthe operator&nbsp;:<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Enum_Comparison_result.html#Cross_link_anchor_104\">Comparison_result</A> operator()(<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p, <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> q)</I><BR>\n\nwhich returns \n(<I><A HREF=\"../Kernel_23_ref/Enum_Comparison_result#Enum_Comparison_result\">SMALLER</A>, <A HREF=\"../Kernel_23_ref/Enum_Comparison_result#Enum_Comparison_result\">EQUAL</A></I> or <I> <A HREF=\"../Kernel_23_ref/Enum_Comparison_result#Enum_Comparison_result\">LARGER</A></I>)\naccording to the\n<MATH><I>y</I></MATH>-ordering of points <I>p</I> and <I>q</I>.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Triangulation_euclidean_traits_xy_3.html#Cross_link_anchor_945\">Triangulation_euclidean_traits_xy_3</A>&lt;K&gt;::Orientation_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Predicate object. Provides\nthe  operator&nbsp;:<BR>\n\n<I><A HREF=\"../Kernel_23_ref/Enum_Orientation.html#Cross_link_anchor_114\">Orientation</A> operator()(<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p, <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> q, <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> r)</I><BR>\n\nwhich returns\n<I><A HREF=\"../Kernel_23_ref/Constant_LEFT_TURN.html#Cross_link_anchor_127\">LEFT_TURN</A></I>, <I><A HREF=\"../Kernel_23_ref/Constant_RIGHT_TURN.html#Cross_link_anchor_129\">RIGHT_TURN</A></I> or <I><A HREF=\"../Kernel_23_ref/Constant_COLLINEAR.html#Cross_link_anchor_125\">COLLINEAR</A></I>\n according to the position of the projection of <MATH><I>r</I></MATH>\nwith respect to the projection of the \noriented line <I>pq</I>.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Triangulation_euclidean_traits_xy_3.html#Cross_link_anchor_945\">Triangulation_euclidean_traits_xy_3</A>&lt;K&gt;::Side_of_oriented_circle_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Predicate object. \nProvides the operator&nbsp;:\n<I><A HREF=\"../Kernel_23_ref/Enum_Oriented_side.html#Cross_link_anchor_116\">Oriented_side</A> operator()(<A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> p, <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> q, <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> r, <A HREF=\"../Kernel_23_ref/Class_Point_2.html#Cross_link_anchor_52\">Point_2</A> s)</I>\nwhich takes four points <MATH><I>p, q, r, s</I></MATH> as arguments and returns\n<I><A HREF=\"../Kernel_23_ref/Enum_Oriented_side#Enum_Oriented_side\">ON_POSITIVE_SIDE</A></I>, <I><A HREF=\"../Kernel_23_ref/Enum_Oriented_side#Enum_Oriented_side\">ON_NEGATIVE_SIDE</A></I> or, \n<I><A HREF=\"../Kernel_23_ref/Enum_Oriented_side#Enum_Oriented_side\">ON_ORIENTED_BOUNDARY</A></I> according to the position of \nthe projection of point<I>s</I>\nwith respect to the oriented circle through the projections of <MATH><I>p,q</I></MATH>\nand <MATH><I>r</I></MATH>.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n<H3>Creation</H3>  Only a default constructor, copy constructor\n and an assignement operator are required. \nNote that further constructors\ncan be provided.\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Class_Triangulation_euclidean_traits_xy_3.html#Cross_link_anchor_945\">Triangulation_euclidean_traits_xy_3</A>&lt;K&gt; traits;\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    default constructor.\n<P>\n\n</TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    <A HREF=\"Class_Triangulation_euclidean_traits_xy_3.html#Cross_link_anchor_945\">Triangulation_euclidean_traits_xy_3</A>&lt;K&gt; traits ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>\n    <A HREF=\"Class_Triangulation_euclidean_traits_xy_3.html#Cross_link_anchor_945\">Triangulation_euclidean_traits_xy_3</A> tr);</I></TD></TR></TABLE>\n    \n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>\n    Copy constructor.\n<P>\n\n</TD></TR>\n        </TABLE>\n<P>\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A HREF=\"Class_Triangulation_euclidean_traits_xy_3.html#Cross_link_anchor_945\">Triangulation_euclidean_traits_xy_3</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n     traits = <A HREF=\"Class_Triangulation_euclidean_traits_xy_3.html#Cross_link_anchor_945\">Triangulation_euclidean_traits_xy_3</A> tr<A NAME=\"Function_Triangulation_euclidean_traits_xy_3_operator=_6Triangulation_euclidean_traits_xy_3_tr9;\"></A>\n\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    Assignment operator.\n        </TD></TR>\n        </TABLE>\n<P>\n\n<H3>Access to predicate objects</H3>\nThe following access functions are provided\n<P>\n\n<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Construct_segment_2_construct_segment_2_object69;\"></A>\nConstruct_segment_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.construct_segment_2_object ()\n        </I></NOBR>\n        \n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Construct_triangle_2_construct_triangle_2_object69;\"></A>\nConstruct_triangle_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.construct_triangle_2_object ()\n        </I></NOBR>\n        \n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Comparison_x_2_compare_x_2_object69;\"></A>\nComparison_x_2\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.compare_x_2_object ()\n        </I></NOBR>\n        \n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Comparison_y_2_compare_y_2_object69;\"></A>\nComparison_y_2\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.compare_y_2_object ()\n        </I></NOBR>\n        \n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A NAME=\"Function_Orientation_2_orientation_2_object69;\"></A>\nOrientation_2\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.orientation_2_object ()\n        </I></NOBR>\n        \n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A NAME=\"Function_Side_of_oriented_circle_2_side_of_oriented_circle_2_object69;\"></A>\nSide_of_oriented_circle_2\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    traits.side_of_oriented_circle_2_object ()\n        </I></NOBR>\n        \n    \n        </TR>\n        </TABLE>\n<P>\n\n<H3>See Also</H3><I><A HREF=\"Concept_TriangulationTraits_2.html#Cross_link_anchor_936\">TriangulationTraits_2</A></I><BR>\n\n<I><A HREF=\"Concept_DelaunayTriangulationTraits_2.html#Cross_link_anchor_918\">DelaunayTriangulationTraits_2</A></I><BR>\n\n<I><A HREF=\"Class_Triangulation_2.html#Cross_link_anchor_938\">CGAL::Triangulation_2</A>&lt;Traits,Tds&gt;</I><BR>\n\n<I><A HREF=\"Class_Delaunay_triangulation_2.html#Cross_link_anchor_919\">CGAL::Delaunay_triangulation_2</A>&lt;Traits,Tds&gt;</I>\n<P>\n\nC<SMALL>GAL</SMALL> provides also predefined geometric traits class\n<I>Triangulation_euclidean_traits_yz_3&lt;K&gt;</I> and\n<I>Triangulation_euclidean_traits_zx_3&lt;K&gt;</I> to\ndeal with projections on the\n <I>xz</I>- or  the <I>yz</I>-plane,\nrespectively.\n<P>\n\n<I>#include &lt;<A HREF=\"../../../include/CGAL/Triangulation_euclidean_traits_xz_3.h\">CGAL/Triangulation_euclidean_traits_xz_3.h</A>&gt;</I>\n<P>\n\n<BR>\n\n<I>#include &lt;<A HREF=\"../../../include/CGAL/Triangulation_euclidean_traits_yz_3.h\">CGAL/Triangulation_euclidean_traits_yz_3.h</A>&gt;</I>\n<P>\n\n<div class=\"NavNext\"><hr> <b>Next:</b> <a href=\"Class_Triangulation_face_base_2.html\"><I>Triangulation_face_base_2&lt;Traits,Fb&gt;</I></a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_32!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 38991.0}