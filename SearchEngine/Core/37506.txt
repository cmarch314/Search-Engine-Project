{"text": "OEChem Python Theory Manual Version 1 3 1 Previous 4 3 Molecular File Formats Up 4 Reading and Writing Next 4 5 Reading Multi conformer molecules 4 4 Molecule Input and Output with Files In addition to stdin and stdout OEChem s oemolstreams also support reading from files To open a file use the filename as a constructor argument or call the open method with the filename as an argument For input oemolistream if the file doesn t exist the open fails and returns false For output oemolostream the output file is created if it didn t previously exist and is overwritten if it did If no filename is passed as an argument to the constructor or to the open method an oemolistream will use stdin and an oemolostream will use stdout Much like standard file I O in Python oemolstreams can be closed after use with the close method When an oemolstream goes out of scope and is deleted by Python it is automatically closed as well usr bin env python ch4 5 py from openeye oechem import ifs oemolistream ofs oemolostream if ifs open drugs sdf 1 if ofs open drugs mol2 1 for mol in ifs GetOEMols print mol NumConfs OEWriteMolecule ofs mol else sys stderr write Unable to open output file n else sys stderr write Unable to open input file n Download as text One convenient use of the open method of molstreams is that it sets the file format associated with the stream from the file extension of the filename used as the argument The example above converts the file drugs sdf in MDL SD format into the file drugs mol2 in Tripos Mol2 format This behavior can be overridden by calling SetFormat after the call to open but before the first molecule is read or written from to the stream OEChem Python Theory Manual Version 1 3 1 Previous 4 3 Molecular File Formats Up 4 Reading and Writing Next 4 5 Reading Multi conformer molecules Documentation released on July 3 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/oechem/pyprog/node20.html", "title": "4.4 molecule input and output with files", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<html>\n<head>\n<title>4.4 Molecule Input and Output with Files</title>\n<META NAME=\"description\" CONTENT=\"4.4 Molecule Input and Output with Files\">\n<META NAME=\"keywords\" CONTENT=\"pyprog\">\n<META NAME=\"resource-type\" CONTENT=\"document\">\n<META NAME=\"distribution\" CONTENT=\"global\">\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n<link rel=\"STYLESHEET\" href=\"pyprog.css\">\n<link rel=\"first\" href=\"pyprog.html\">\n<link rel=\"contents\" href=\"contents.html\" title=\"Contents\">\n\n<LINK REL=\"next\" HREF=\"node21.html\">\n<LINK REL=\"previous\" HREF=\"node19.html\">\n<LINK REL=\"up\" HREF=\"node16.html\">\n<LINK REL=\"next\" HREF=\"node21.html\">\n</head>\n<body>\n<DIV CLASS=\"navigation\">\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node19.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node16.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node21.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - Python Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"genindex.html\"><img src=\"../icons/index.gif\"\n  border=\"0\" alt=\"Index\"></A></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node19.html\">4.3 Molecular File Formats</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node16.html\">4. Reading and Writing</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node21.html\">4.5 Reading Multi-conformer molecules</A>\n<br><hr>\n</DIV>\n<!--End of Navigation Panel-->\n\n<H1><A NAME=\"SECTION006400000000000000000\">\n4.4 Molecule Input and Output with Files</A>\n</H1>\n\n<P>\nIn addition to <code>stdin</code> and <code>stdout</code>, OEChem's oemolstreams also support\nreading from files. To open a file, use the filename as a constructor\nargument or call the <code>open</code> method with the filename as an\nargument. For input (oemolistream) if the file doesn't exist, the open\nfails and returns 0 (false). For output (oemolostream) the output file is\ncreated if it didn't previously exist and is overwritten if it did.\nIf no filename is passed as an argument to the constructor (or to the\n<code>open</code> method), an oemolistream will use <code>stdin</code> and an oemolostream will\nuse <code>stdout</code>. Much like standard file I/O in Python, oemolstreams can be\nclosed after use with the <code>close</code> method.  When an oemolstream goes out of\nscope and is deleted by Python, it is automatically closed as well.\n\n<P>\n<dl><dd><pre class=\"verbatim\">#!/usr/bin/env python\n# ch4-5.py\nfrom openeye.oechem import *\n\nifs = oemolistream()\nofs = oemolostream()\n\nif (ifs.open(\"drugs.sdf\") == 1):\n    if (ofs.open(\"drugs.mol2\") == 1):\n        for mol in ifs.GetOEMols():\n            print mol.NumConfs()\n            OEWriteMolecule(ofs, mol)\n    else:\n        sys.stderr.write(\"Unable to open output file&#92;n\")\nelse:\n    sys.stderr.write(\"Unable to open input file&#92;n\")\n</pre>\n<div class=\"verbatiminput-footer\">\n<a href=\"ch4-5.txt\" type=\"text/plain\">Download as text.</a>\n</div>\n</dd></dl>\n\n<P>\nOne convenient use of the <code>open</code> method of molstreams is that it sets\nthe file format associated with the stream from the file extension of\nthe filename used as the argument. The example above converts the file\n``drugs.sdf'' in MDL SD format into the file, ``drugs.mol2'' in Tripos\nMol2 format. This behavior can be overridden by calling <code>SetFormat</code>\nafter the call to <code>open</code> but before the first molecule is read or\nwritten from/to the stream.\n\n<P>\n\n<DIV CLASS=\"navigation\">\n<p><hr>\n<table align=\"center\" border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n<tr>\n<td rowspan=2><A HREF=\"node19.html\"><img src=\"../icons/previous.gif\"\n  border=\"0\" alt=\"Previous Page\"></A></td>\n<td rowspan=2><A HREF=\"node16.html\"><img src=\"../icons/up.gif\"\n  border=\"0\" alt=\"Up One Level\"></A></td>\n<td rowspan=2><A HREF=\"node21.html\"><img src=\"../icons/next.gif\"\n  border=\"0\" alt=\"Next Page\"></A></td><td width=\"100%\" rowspan=\"2\"> </td>\n<td valign=\"center\" align=\"right\" height=\"56\" background=\"../icons/title_bkgd.gif\" colspan=4 class=\"navigation\">OEChem - Python Theory Manual\n<BR>\nVersion 1.3.1</td></tr>\n<tr><td><img src=\"../icons/spacer_1.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"contents.html\"><img src=\"../icons/contents.gif\"\n  border=\"0\" alt=\"Contents\"></A></td>\n<td><img src=\"../icons/spacer_2.gif\"\n  border=\"0\" alt=\"\"></td>\n<td><A href=\"genindex.html\"><img src=\"../icons/index.gif\"\n  border=\"0\" alt=\"Index\"></A></td>\n</tr></table>\n<b class=\"navlabel\">Previous:</b> <a class=\"sectref\" HREF=\"node19.html\">4.3 Molecular File Formats</A>\n<b class=\"navlabel\">Up:</b> <a class=\"sectref\" HREF=\"node16.html\">4. Reading and Writing</A>\n<b class=\"navlabel\">Next:</b> <a class=\"sectref\" HREF=\"node21.html\">4.5 Reading Multi-conformer molecules</A>\n<hr>\n<span class=\"release-info\">Documentation released on July 30, 2004.</span>\n</DIV>\n<!--End of Navigation Panel-->\n\n</BODY>\n</HTML>\n", "id": 37506.0}