{"text": "Project Adapting to your environment Due Aug 11 at 11 5 pm Announcement Aug 6 11 36am The project starter code has been updated to fix a minor bug in the makefile Overview and goals The goals of this project are for you to install and familiarize yourself with the development environment we will be using in this course To demonstrate that you have accomplished this task you will write and submit a short C program After completing this project you will have Installed VirtualBoxImported the course virtual machine into VirtualBoxExplored the development environment Downloaded your first projectSubmitted your first project The deliverable for this project is a very short C program described below The primary purpose of this submission is to prepare for the submission of future projects If you submit a correct project exactly as described below you will receive 2 toward your overall grade in the course You may prefer other development environments operating systems programming languages etc but be aware that in this course we are not offering you that choice Virtualization Our target platform is Xubuntu 14 4 a Linux distribution based on Ubuntu and using the XFCE desktop environment Installing and configuring Linux can be difficult depending on the hardware it is being installed on To remove this complication we will be running Xubuntu within VirtualBox VirtualBox is a free application distributed by Oracle that acts like a virtual computer allowing us to install a second operating system without risk or complication To further reduce the difficulty you will not even need to install Xubuntu I have already installed Xubuntu in VirtualBox and you will use a clone of this installation Even if you already use Linux as your primary operating system I ask that you still use this virtual machine Installing and setting up VirtualBox Before we get started you will need to install VirtualBox You can download virtual box at www virtualbox org VirtualBox is available for Windows Mac OS X and most popular distributions of Unix and Linux In addition virtual box is installed on the ICS Lab machines So if you will be using the lab machines you can skip the installation step I have been using version 4 3 12 of VirtualBox This is the only version I have tested our virtual machine with but I would imagine it should with with any 4 3 XX version Unless you have a good reason to use a different virtualizer I would suggest you use VirtualBox 4 3 12 What is our virtual machine The virtual machine we are using is based on the 32 bit version of Xubuntu 14 4 Although we will mostly be working at the command line the operating system does have a simple graphical desktop environment called XFCE In addition to the base operating system we have the following software C Compilers Clang 3 4 which we will be using and GCC 4 8 1 the standard linux compiler General debuggers LLDB 3 4 and GDB 7 7Memory debugger Valgrind 3 1 Build utilities CMake 2 8 12 2 and Make 3 81Version control Git and SubversionFive text editors vim emacs nano gedit geanyGUI Library SDL 2 Browsers Firefox and Chrome Throughout the course you may need to install additional software and libraries for some of the projects If this is necessary you will be given detailed instructions on how to perform the installation You can download our virtual machine from the download link below This is a large download a little over two gigabytes For this reason downloading the file is restricted to computer connected to the campus network The download is pretty fast if you are connected to the wired network in one of the ICS Labs So that is my recommendation Download link MD5 Checksum 6ed6e914e61b64f97547c8e324573e42 Importing our virtual machine into VirtualBox Once you have installed VirtualBox and downloaded the virtual machine image you are ready to import the image into VirtualBox From the File menu select Import Appliance Select the downloaded OVA file and click nextAt the next dialog click importThis step can take some time but when it complete you should now have a virtual machine titles Xubuntu ICS 2 14 Summer After completing this process the virtual machine files will be installed on your hard drive e g in home VirtualBox VMs Xubuntu ICS 2 14 Summer on my laptop running Linux This probably what you want if you are installing the virtual machine on your personal computer but if you are using the lab computer you probably will want to move the files to a USB drive To move the files to a USB drive should have at least 16GB free Import the virtual machineFind the directory containing the virtual machine and move it to your USB driveRight click on the virtual machine you installed and click removeSelect remove all filesNow select the Machine menu and click Add the select the directory on your USB drive Starting and logging in for the first time With everything setup its time to run the virtual machine To do this select the Xubuntu ICS 2 14 Summer virtual machine and click the Start button A second window will pop up and you will see the machine boot up and eventually a login screen The machine has one user named user whose password is password Your first task is to change your password Click on the mouse in the upper left corner and open the terminal application This will place you at a bash prompt user VirtualBox This will become a familiar site as we will be using mostly command line tools in this course To change your password type the command passwd press Enter and follow the prompts General recommendation do not use a password you use for other purposes and make it memorable enough so you will not forget it Writing it down would be a good idea Getting around in Linux You should spend a few minutes exploring the operating system Both a GUI based applications and the command line On the command line you will find the following commands useful ls get a listing of all files in the current working directorycd change working directory to pwd print the current working directorycp copy file to file mv move file to file Be careful with these commands as most will overwrite the without prompting or warning you You will probably have many questions if you have never used Linux before Please come by our lab sessions and office hours to get your questions answered Also many answer can be found by a quick web search Shutting down the virtual machine When you are done using the virtual machine you can shut it down my clicking on the mouse in the upper left corner and then selecting logout You will be prompted with an option to shutdown This will turn off your virtual computer What am I turning in For the deliverable part of the this project you are going to create an template ArrayList class The started code for this project includes a header file ArrayList hpp and a source file ArrayList cpp that contain an implementation of an ArrayList of std string s You will need to do four things Rewrite the ArrayList class as a template class with a single template parameter specifying the type of elements stored in the ArrayList Rewrite the at method replacing the assert statements with exception based error handling i e when a used of the classes for an out of bounds element an exception should be thrown The object thrown by the exception may either be a exception class you write or an exception in stdexcept Rewrite all methods so that no memory is leaked when exceptions are thrown Recall that the new operator may throw a std bad alloc exception when the computer runs out of memory Write a short program that tests your ArrayList class with ints doubles and std string i e instantiate object of the type ArrayList int ArrayList double and ArrayList std string The exact nature of the program is unimportant but you must add at least three values to each ArrayList print all of the elements in each ArrayList and test the out of bound exception by attempting to read out of bounds Some rules For this project you may use the iostream string stdexcept cstddef and algorithm header files You may not use any of the container classes in the standard library such as std vector Downloading the starter code The purpose of this project is to familiarize yourself with the process we will use in every project in this course First you need to download the template for the project Change your working directory to Documents cd DocumentsDownload the template wget http www ics uci edu mbannist teaching ics46 project tar gz Extract the template tar xvf project tar gzRename the project directory mv project project v1 The reason we renamed the project is to prevent overwriting your work if you extract the template again in the future In the directory project v1 you will find one file and four directories makefile a file containing the script we will use to compile this projectdata a directory for non code data not used in project obj a scratch directory for files generated in the build processsrc a directory in which you will place your source filestest a directory for unit testing code not used in project Currently there is only one file main cpp in the src directory Your task is to modify main cpp to implement the desired behavior After you have edited the project files to your satisfaction you can compile your code with the command make If this process succeeded then the program can be run with the command make run If you would like to run your program with valgrind to check for memory errors use the command make memcheck Once you are ready to turn in the file you can created a deliverable archive with the command make gather This command will create a file named project submission tar gz and this is the file you will submit to the eee dropbox The command make gather will only succeed if you project compiles without error If for some reason you would like to submit code that does not compile use the command make gather force but be warned that you will loose points for code that does not compile or compiles with warnings Note all of these commands must be run from the project s root directory To help you submit your program to eee we have include two browsers Firefox and Chrome with the Virtual Machine either should work Network trouble On occasion espescially after resuming a laptop from a suspended state your virtual machine may not be able to connect to the internet If this happens type the following commands in the terminal sudo ifdown eth sudo ifup eth This is basically turning the network adapter off and back on You will be prompted for your password during this process ", "_id": "http://www.ics.uci.edu/~mbannist/teaching/ics46/project0/", "title": "{ics, cse} 46: project 0", "html": "<!DOCTYPE html>\n<html>\n\n<head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n\n  \n  <link rel=\"stylesheet\" type=\"text/css\" href=\"/~mbannist/css/default.css\"/>\n  \n\n  <title>{ICS, CSE} 46: Project 0</title>\n\n  \n</head>\n\n<body>\n  <h1 id=\"project-0-adapting-to-your-environment-due-aug-11-at-1150pm\">Project 0: Adapting to your environment (Due Aug 11 at 11:50pm)</h1>\n  <hr />\n  \n  <h2 id=\"announcement\">Announcement</h2>\n  <ul>\n    <li>(Aug 06, 11:36am) The project starter code has been updated to fix a minor bug in the makefile.</li>\n  </ul>\n  \n  <h2 id=\"overview-and-goals\">Overview and goals</h2>\n  <p>The goals of this project are for you to install and familiarize yourself with the development environment we will be using in this course. To demonstrate that you have accomplished this task you will write and submit a short C++ program.</p>\n  \n  <p>After completing this project you will have:</p>\n  \n  <ul>\n    <li>Installed VirtualBox</li>\n    <li>Imported the course virtual machine into VirtualBox</li>\n    <li>Explored the development environment </li>\n    <li>Downloaded your first project</li>\n    <li>Submitted your first project</li>\n  </ul>\n  \n  <p>The deliverable for this project is a very short C++ program (described below). The primary purpose of this submission is to prepare for the submission of future projects. If you submit a correct project exactly as described below you will receive 2% toward your overall grade in the course. You may prefer other development environments, operating systems, programming languages, etc., but be aware that in this course we are not offering you that choice.</p>\n  \n  <h2 id=\"virtualization\">Virtualization</h2>\n  <p>Our target platform is Xubuntu 14.04, a Linux distribution based on Ubuntu and using the XFCE desktop environment. Installing and configuring Linux can be difficult depending on the hardware it is being installed on. To remove this complication we will be running Xubuntu within VirtualBox. VirtualBox is a free application distributed by Oracle that acts like a virtual computer, allowing us to install a second operating system without risk or complication. To further reduce the difficulty you will not even need to install Xubuntu. I have already installed Xubuntu in VirtualBox and you will use a clone of this installation. Even if you already use Linux as your primary operating system, I ask that you still use this virtual machine.</p>\n  \n  <h2 id=\"installing-and-setting-up-virtualbox\">Installing and setting up VirtualBox</h2>\n  <p>Before we get started you will need to install VirtualBox. You can download virtual box at <a href=\"http://www.virtualbox.org\">www.virtualbox.org</a>. VirtualBox is available for Windows, Mac OS X, and most popular distributions of Unix and Linux.In addition, virtual box is installed on the ICS Lab machines. So if you will be using the lab machines you can skip the installation step.</p>\n  \n  <p>I have been using version 4.3.12 of VirtualBox. This is the only version I have tested our virtual machine with, but I would imagine it should with with any 4.3.XX version. Unless you have a good reason to use a different virtualizer, I would suggest you use VirtualBox 4.3.12.</p>\n  \n  <h2 id=\"what-is-our-virtual-machine\">What is our virtual machine?</h2>\n  <p>The virtual machine we are using is based on the 32-bit version of Xubuntu 14.04. Although, we will mostly be working at the command line, the operating system does have a simple graphical desktop environment, called XFCE.</p>\n  \n  <p>In addition to the base operating system we have the following software:</p>\n  \n  <ul>\n    <li>C++ Compilers: <strong>Clang 3.4</strong> (which we will be using) and <strong>GCC 4.8.1</strong> (the standard linux compiler)</li>\n    <li>General debuggers: <strong>LLDB 3.4</strong> and <strong>GDB 7.7</strong></li>\n    <li>Memory debugger: <strong>Valgrind 3.10.0</strong></li>\n    <li>Build utilities: <strong>CMake 2.8.12.2</strong> and <strong>Make 3.81</strong></li>\n    <li>Version control: <strong>Git</strong> and <strong>Subversion</strong></li>\n    <li>Five text editors: <strong>vim</strong>, <strong>emacs</strong>, <strong>nano</strong>, <strong>gedit</strong>, <strong>geany</strong></li>\n    <li>GUI Library: <strong>SDL 2.0</strong></li>\n    <li>Browsers: <strong>Firefox</strong> and <strong>Chrome</strong></li>\n  </ul>\n  \n  <p>Throughout the course you may need to install additional software and libraries for some of the projects. If this is necessary, you will be given detailed instructions on how to perform the installation.</p>\n  \n  <p>You can download our virtual machine from the download link below. This is a large download, a little over two gigabytes. For this reason downloading the file is restricted to computer connected to the campus network. The download is pretty fast if you are connected to the wired network in one of the ICS Labs. So that is my recommendation.</p>\n  \n  <p><a href=\"../vm/Xubuntu-ICS-2014-Summer.ova\">Download link</a> ( MD5 Checksum:6ed6e914e61b64f97547c8e324573e42)</p>\n  \n  <h2 id=\"importing-our-virtual-machine-into-virtualbox\">Importing our virtual machine into VirtualBox</h2>\n  <p>Once you have installed VirtualBox and downloaded the virtual machine image you are ready to import the image into VirtualBox.</p>\n  \n  <ul>\n    <li>From the <strong>File</strong> menu, select <strong>Import Appliance\u2026</strong></li>\n    <li>Select the downloaded OVA file and click next</li>\n    <li>At the next dialog click import</li>\n    <li>This step can take some time, but when it complete you should now have a virtual machine titles <strong>Xubuntu-ICS-2014-Summer</strong>.</li>\n  </ul>\n  \n  <p>After completing this process the virtual machine files will be installed on your hard drive (e.g., in __/home/<username>/VirtualBox VMs/Xubuntu-ICS-2014-Summer__ on my laptop running Linux). This probably what you want if you are installing the virtual machine on your personal computer, but if you are using the lab computer you probably will want to move the files to a USB drive.</username></p>\n  \n  <p>To move the files to a USB drive (should have at least 16GB free):</p>\n  \n  <ul>\n    <li>Import the virtual machine</li>\n    <li>Find the directory containing the virtual machine, and move it to your USB drive</li>\n    <li>Right click on the virtual machine you installed and click remove</li>\n    <li>Select remove all files</li>\n    <li>Now select the <strong>Machine</strong> menu and click <strong>Add</strong>, the select the directory on your USB drive</li>\n  </ul>\n  \n  <h2 id=\"starting-and-logging-in-for-the-first-time\">Starting and logging in for the first time</h2>\n  <p>With everything setup its time to run the virtual machine. To do this select the <strong>Xubuntu-ICS-2014-Summer</strong> virtual machine and click the <strong>Start</strong> button. A second window will pop up and you will see the machine boot up and eventually a login screen. The machine has one user named <strong>user</strong> whose password is <strong>password</strong>.</p>\n  \n  <p>Your first task is to change your password. Click on the mouse in the upper left corner and open the terminal application. This will place you at a bash prompt:</p>\n  \n  <pre><code>user@VirtualBox:~$\n  </code></pre>\n  \n  <p>This will become a familiar site, as we will be using mostly command line tools in this course.</p>\n  \n  <p>To change your password, type the command <strong>passwd</strong>, press Enter and follow the prompts. General recommendation, do not use a password you use for other purposes and make it memorable enough so you will not forget it. Writing it down would be a good idea.</p>\n  \n  <h2 id=\"getting-around-in-linux\">Getting around in Linux</h2>\n  <p>You should spend a few minutes exploring the operating system. Both a GUI based applications and the command line. On the command line you will find the following commands useful:</p>\n  \n  <ul>\n    <li><strong>ls</strong>  -  get a listing of all files in the current working directory</li>\n    <li><strong>cd</strong> _<directory>_  -  change working directory to _<directory>_</directory></directory></li>\n    <li><strong>pwd</strong>  -  print the current working directory</li>\n    <li><strong>cp</strong> <em><source /></em> _<target>_  -  copy file _<source />_ to file _<target>_</target></target></li>\n    <li><strong>mv</strong> <em><source /></em> _<target>_  -  move file _<source />_ to file _<target>_</target></target></li>\n  </ul>\n  \n  <p>Be careful with these commands, as most will overwrite the _<target>_ without prompting or warning you. You will probably have many questions if you have never used Linux before. Please come by our lab sessions and office hours to get your questions answered. Also, many answer can be found by a quick web search.</target></p>\n  \n  <h2 id=\"shutting-down-the-virtual-machine\">Shutting down the virtual machine</h2>\n  <p>When you are done using the virtual machine you can shut it down my clicking on the mouse in the upper left corner and then selecting <strong>logout</strong>. You will be prompted with an option to <strong>shutdown</strong>. This will turn off your virtual computer.</p>\n  \n  <h2 id=\"what-am-i-turning-in\">What am I turning in?</h2>\n  <p>For the deliverable part of the this project you are going to create an template ArrayList class. The started code for this project includes a header file ArrayList.hpp and a source file ArrayList.cpp that contain an implementation of an ArrayList of __std::string__s.</p>\n  \n  <p>You will need to do four things:</p>\n  \n  <ul>\n    <li>Rewrite the ArrayList class as a <em>template class</em> with a single template parameter, specifying the type of elements stored in the ArrayList.</li>\n    <li>Rewrite the <strong>at()</strong> method, replacing the <strong>assert</strong> statements with exception based error handling, i.e., when a used of the classes for an out of bounds element an exception should be thrown. The object thrown by the exception may either be a exception class you write or an exception in <a href=\"http://en.cppreference.com/w/cpp/header/stdexcept\"><strong>stdexcept</strong></a>.</li>\n    <li>Rewrite all methods so that no memory is leaked when exceptions are thrown. Recall that the <strong>new</strong> operator may throw a <strong>std::bad_alloc</strong> exception when the computer runs out of memory.</li>\n    <li>Write a short program that tests your ArrayList class with <strong>ints</strong>, doubles and <strong>std::string</strong>, i.e., instantiate object of the type <strong>ArrayList&lt;int&gt;</strong>, <strong>ArrayList&lt;double&gt;</strong> and <strong>ArrayList&lt;std::string&gt;</strong>. The exact nature of the program is unimportant, but you must add at least three values to each ArrayList, print all of the elements in each ArrayList, and test the out-of-bound exception by attempting to read out-of-bounds.</li>\n  </ul>\n  \n  <h3 id=\"some-rules\">Some rules</h3>\n  <p>For this project you may use the <strong>&lt;iostream&gt;</strong>, <strong>&lt;string&gt;</strong>, <strong>&lt;stdexcept&gt;</strong>, <strong>&lt;cstddef&gt;</strong> and <strong>&lt;algorithm&gt;</strong>. header files. You may not use any of the container classes in the standard library such as <strong>std::vector</strong>.</p>\n  \n  <h3 id=\"downloading-the-starter-code\">Downloading the starter code</h3>\n  <p>The purpose of this project is to familiarize yourself with the process we will use in every project in this course. First, you need to download the template for the project.</p>\n  \n  <ul>\n    <li>Change your working directory to Documents: <strong>cd ~/Documents</strong></li>\n    <li>Download the template: <strong>wget \u201chttp://www.ics.uci.edu/~mbannist/teaching/ics46/project0.tar.gz\u201d</strong></li>\n    <li>Extract the template: <strong>tar xvf project0.tar.gz</strong></li>\n    <li>Rename the project directory: <strong>mv project0 project0v1</strong></li>\n  </ul>\n  \n  <p>The reason we renamed the project is to prevent overwriting your work if you extract the template again in the future.</p>\n  \n  <p>In the directory <strong>project0v1</strong> you will find one file and four directories:</p>\n  \n  <ul>\n    <li><strong>makefile</strong>  -  a file containing the script we will use to compile this project</li>\n    <li><strong>data/</strong>  -  a directory for non-code data (not used in project0)</li>\n    <li><strong>obj/</strong>   -  a scratch directory for files generated in the build process</li>\n    <li><strong>src/</strong>   -  a directory in which you will place your source files</li>\n    <li><strong>test/</strong>  -  a directory for unit testing code (not used in project0) </li>\n  </ul>\n  \n  <p>Currently there is only one file, <strong>main.cpp</strong>, in the <strong>src/</strong> directory. Your task is to modify <strong>main.cpp</strong> to implement the desired behavior. </p>\n  \n  <p>After, you have edited the project files to your satisfaction you can compile your code with the command <strong>make</strong>. If this process succeeded, then the program can be run with the command <strong>make run</strong>. If you would like to run your program with <strong>valgrind</strong> to check for memory errors, use the command <strong>make memcheck</strong>. Once you are ready to turn in the file you can created a deliverable archive with the command <strong>make gather</strong>. This command will create a file named <strong>project0-submission.tar.gz</strong>, and this is the file you will submit to the eee dropbox. The command <strong>make gather</strong> will only succeed if you project compiles without error. If for some reason you would like to submit code that does not compile, use the command <strong>make gather-force</strong>, but be warned that you will loose points for code that does not compile or compiles with warnings. <em>Note: all of these commands must be run from the project\u2019s root directory.</em></p>\n  \n  <p>To help you submit your program to eee we have include two browsers <strong>Firefox</strong> and <strong>Chrome</strong> with the Virtual Machine, either should work.</p>\n  \n  <h3 id=\"network-trouble\">Network trouble</h3>\n  <p>On occasion, espescially after resuming a laptop from a suspended state, your virtual machine may not be able to connect to the internet. If this happens type the following commands in the terminal</p>\n  \n  <pre><code>sudo ifdown eth0\n  sudo ifup eth0\n  </code></pre>\n  \n  <p>This is basically turning the network adapter off and back on. You will be prompted for your password during this process.</p>\n \n</body>\n\n</html>\n", "id": 1361.0}