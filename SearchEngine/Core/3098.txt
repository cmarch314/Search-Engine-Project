{"text": "Mathematical Reviews 99h 5 73 Finding the k shortest paths David Eppstein SIAM J Computing 28 2 652 673 1998 Mathematical Reviews 99h 5 73 1999 Reviewed by Koduvayur R Parthasarathy The k shortest paths problem is to list the k paths from a specified source s to a specified destination t in a digraph with minimum total length The author considers digraphs admitting self loops multiple edges and cycles without negative lengths and the paths are not necessarily simple Using an implicit representation of the paths the author presents in detail an algorithm with time complexity O m n log n k where n and m are the number of vertices and the number of edges of the digraph This also leads to an algorithm of complexity O m n log n kn for the k shortest paths problem from a given source s to all other vertices of the graph To get the implicit representation one starts with a single destination t shortest path tree T of the given digraph G with source s and destination t and produces a heap H sb G v at each vertex v leading to a directed acyclic graph D G and through that to a path graph P G with the property that there is a one to one length preserving correspondence between s t paths in G and paths starting from the root r in P G and finally to a 4 heap H G whose nodes correspond to the s t paths of G After developing a basic algorithm improvements are introduced in the heap construction to attain the above complexity The improvements in time complexity achieved through this algorithm when used for the dynamic programming applications to the following optimization problems are discussed at some length the knapsack problem sequence alignment inscribed polygons and genealogical relations Three open problems are suggested D Eppstein publications Citation database Reviews Fano Experimental Web Server D Eppstein School of Information Computer Science UC Irvine", "_id": "http://fano.ics.uci.edu/cites/Review/MR-99h05073.html", "title": "mathematical reviews 99h:05073", "html": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html>\n\t<head>\n\t\t<title>Mathematical Reviews 99h:05073</title>\n\t\t<link rel=\"shortcut icon\" href=\"/fano.png\" type=\"image/png\" />\n\t\t<link rel=\"stylesheet\" href=\"/stylesheet.css\" type=\"text/css\" />\n\t</head>\n\n\t<body>\n\t\t<div class=\"outer\">\n\t\t\t<h1><i>Mathematical Reviews</i> 99h:05073</h1>\n\n\t\t\t<div class=\"inner\">\n\t\t\t\t<p><a href=\"../Document/Finding-the-k-shortest-paths.html\">Finding the $k$ shortest paths</a><br />\n\t\t\t\t<a href=\"../Author/David-Eppstein.html\">David Eppstein</a><br />\n\t\t\t\t<i><a href=\"../Location/SIAM-J-Computing.html\">SIAM J. Computing</a></i> <a href=\"../Publication/Epp-SJC-98.html\">28(2):652&#8211;673, 1998</a><br />\n\t\t\t\t<i><a href=\"../Location/Mathematical-Reviews.html\">Mathematical Reviews</a></i> 99h:05073, 1999<br />\n\t\t\t\tReviewed by <a href=\"../Author/Koduvayur-R-Parthasarathy.html\">Koduvayur R. Parthasarathy</a></p>\n\n\t\t\t\t<p>The $k$-shortest-paths problem is to list the $k$ paths from a specified source $s$ to a specified destination $t$ in a digraph, with minimum total length. The author considers digraphs admitting self-loops, multiple edges and cycles without negative lengths, and the paths are not necessarily simple. Using an implicit representation of the paths, the author presents, in detail, an algorithm with time complexity $O(m+n\\log n+k)$ where $n$ and $m$ are the number of vertices and the number of edges of the digraph. This also leads to an algorithm of complexity $O(m+n\\log n+kn)$ for the $k$-shortest-paths problem from a given source $s$ to all other vertices of the graph. \n\nTo get the implicit representation, one starts with a single-destination $(t)$ shortest path tree $T$ of the given digraph $G$ with source $s$ and destination $t$ and produces a heap $H\\sb G(v)$ at each vertex $v$ leading to a directed acyclic graph $D(G)$ and through that to a path graph $P(G)$, with the property that there is a one-to-one \"length-preserving\" correspondence between $s$-$t$ paths in $G$ and paths starting from the root $r$ in $P(G)$ and finally to a 4-heap $H(G)$ whose nodes correspond to the $s$-$t$ paths of $G$. After developing a basic algorithm, improvements are introduced in the heap construction to attain the above complexity. \n\nThe improvements in time complexity achieved through this algorithm when used for the dynamic programming applications to the following optimization problems are discussed at some length: the knapsack problem, sequence alignment, inscribed polygons, and genealogical relations. Three open problems are suggested.</p>\n\n\t\t\t\t<div class=\"navbar\">\n\t\t\t\t\t[<a href=\"http://www.ics.uci.edu/~eppstein/pubs/\">D. Eppstein publications</a>]\n\t\t\t\t\t[<a href=\"/cites/\">Citation database</a>]\n\t\t\t\t\t[<a href=\"/cites/Review/\">Reviews</a>]\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"credit\">\n\t\t\t\t<a href=\"/\">Fano</a> Experimental Web Server,\n\t\t\t\t<a href=\"http://www.ics.uci.edu/~eppstein/\">D. Eppstein</a>,\n\t\t\t\t<a href=\"http://www.ics.uci.edu/\">School of Information &amp; Computer Science</a>,\n\t\t\t\t<a href=\"http://www.uci.edu/\">UC Irvine</a>\n\t\t\t</div>\n\n\t\t\t<a href=\"http://store.apple.com/\"><img alt=\"Made on a Mac\"\n\t\t\t height=\"31\" width=\"88\" src=\"/mac.png\" /></a>\n\t\t\t<a href=\"http://validator.w3.org/check/referer\"><img alt=\"Valid XHTML 1.0!\"\n\t\t\t height=\"31\" width=\"88\" src=\"/validx.png\" /></a>\n\t\t</div>\n\t</body>\n</html>\n", "id": 3098.0}