{"text": "Search LoginPreferencesHelp GuideAbout Trac WikiTimelineRoadmapBrowse SourceView TicketsSearch Context Navigation Previous ChangeNext Change Changeset 228 for vendor current libgaim protocols oscar flap connection c View differences inlineside by side Show lines around each change Show the changes in full context Ignore Blank lines Case changes White space changes Timestamp Mar 6 2 7 1 39 26 PM 8 years ago Author djp3Message Updating from gaim Repository File 1 edited vendor current libgaim protocols oscar flap connection c modified 19 diffs Legend UnmodifiedAddedRemoved vendor current libgaim protocols oscar flap connection c r65 r228 5252 5353 54 This sends a channel 1 SNAC containing the FLAP version and 54 This sends a channel 1 FLAP containing the FLAP version and 5555 the authentication cookie This is sent when connecting to 5656 any FLAP server after the initial connection to the auth 7373 7474 75 76 This sends an empty channel 4 SNAC This is sent to signify 75static struct rateclass 76flap connection get rateclass FlapConnection conn guint16 family guint16 subtype 77 78 GSList tmp1 79 gconstpointer key 8 81 key GUINT TO POINTER family 16 subtype 82 83 for tmp1 conn rateclasses tmp1 NULL tmp1 tmp1 next 84 85 struct rateclass rateclass 86 rateclass tmp1 data 87 88 if g hash table lookup rateclass members key 89 return rateclass 9 91 92 return NULL 93 94 95 96 Attempt to calculate what our new current average would be if we 97 were to send a SNAC in this rateclass at the given time 98 99static guint32 1 rateclass get new current FlapConnection conn struct rateclass rateclass struct timeval now 1 1 1 2 unsigned long timediff In milliseconds 1 3 1 4 timediff now tv sec rateclass last tv sec 1 now tv usec rateclass last tv usec 1 1 5 1 6 This formula is taken from the joscar API docs Preesh 1 7 return MIN rateclass current rateclass windowsize 1 timediff rateclass windowsize rateclass max 1 8 1 9 11 static gboolean flap connection send queued gpointer data 111 112 FlapConnection conn 113 struct timeval now 114 115 conn data 116 gettimeofday now NULL 117 118 while g queue is empty conn queued snacs 119 12 QueuedSnac queued snac 121 struct rateclass rateclass 122 123 queued snac g queue peek head conn queued snacs 124 125 rateclass flap connection get rateclass conn queued snac family queued snac subtype 126 if rateclass NULL 127 128 guint32 new current 129 13 new current rateclass get new current conn rateclass now 131 132 if new current rateclass alert 1 133 Add 1 ms padding to account for inaccuracies in the calculation 134 Not ready to send this SNAC yet keep waiting 135 return TRUE 136 137 rateclass current new current 138 rateclass last tv sec now tv sec 139 rateclass last tv usec now tv usec 14 141 142 flap connection send conn queued snac frame 143 g free queued snac 144 g queue pop head conn queued snacs 145 146 147 conn queued timeout 148 return FALSE 149 15 151 152 This sends a channel 2 FLAP containing a SNAC The SNAC family and 153 subtype are looked up in the rate info for this connection and if 154 sending this SNAC will induce rate limiting then we delay sending 155 of the SNAC by putting it into an outgoing holding queue 156 157 param data The optional bytestream that makes up the data portion 158 of this SNAC For empty SNACs this should be NULL 159 16 void 161flap connection send snac OscarData od FlapConnection conn guint16 family guint16 subtype guint16 flags aim snacid t snacid ByteStream data 162 163 FlapFrame frame 164 guint32 length 165 gboolean enqueue FALSE 166 struct rateclass rateclass 167 168 length data NULL data offset 169 17 frame flap frame new od x 2 1 length 171 aim putsnac frame data family subtype flags snacid 172 173 if length 174 175 byte stream rewind data 176 byte stream putbs frame data data length 177 178 179 if conn queued timeout 18 enqueue TRUE 181 else if rateclass flap connection get rateclass conn family subtype NULL 182 183 struct timeval now 184 guint32 new current 185 186 gettimeofday now NULL 187 new current rateclass get new current conn rateclass now 188 189 if new current rateclass alert 1 19 191 Add 1 ms padding to account for inaccuracies in the calculation 192 enqueue TRUE 193 194 else 195 196 rateclass current new current 197 rateclass last tv sec now tv sec 198 rateclass last tv usec now tv usec 199 2 2 1 2 2 if enqueue 2 3 2 4 We ve been sending too fast so delay this message 2 5 QueuedSnac queued snac 2 6 2 7 queued snac g new QueuedSnac 1 2 8 queued snac family family 2 9 queued snac subtype subtype 21 queued snac frame frame 211 g queue push tail conn queued snacs queued snac 212 213 if conn queued timeout 214 conn queued timeout gaim timeout add 5 flap connection send queued conn 215 216 return 217 218 219 flap connection send conn frame 22 221 222 223 This sends an empty channel 4 FLAP This is sent to signify 77224 that we re logging off This shouldn t really be necessary 78225 usually the AIM server will detect that the TCP connection has 89236 9 237 91 This sends an empty channel 5 SNAC This is used as a keepalive 238 This sends an empty channel 5 FLAP This is used as a keepalive 92239 packet in FLAP connections WinAIM 4 x and higher send these 9324 every minute to keep the connection alive 124271 conn subtype 1 125272 conn type type 273 conn queued snacs g queue new 126274 127275 od oscar connections g slist prepend od oscar connections conn 185333 186334static void 187 flap connection destroy rates struct rateclass head 188 189 struct rateclass rc 19 191 for rc head rc 192 193 struct rateclass tmp 194 struct snacpair sp 195 196 tmp rc next 197 198 for sp rc members sp 199 struct snacpair tmpsp 2 2 1 tmpsp sp next 2 2 free sp 2 3 sp tmpsp 2 4 2 5 free rc 2 6 2 7 rc tmp 2 8 335flap connection destroy rateclass struct rateclass rateclass 336 337 g hash table destroy rateclass members 338 g free rateclass 339 34 341 342 Free a FlapFrame 343 344 param frame The frame to free 345 346static void 347flap frame destroy FlapFrame frame 348 349 g free frame data data 35 g free frame 2 9351 21 352 21836 conn data 219361 od conn od 22 account gaim connection get account od gc 362 account GAIM CONNECTION IS VALID od gc gaim connection get account od gc NULL 221363 222364 gaim debug info oscar Destroying oscar connection of 229371 we should try to request one instead of disconnecting 23 372 231 if account disconnecting od oscar connections NULL 232 flap connection getbytype od SNAC FAMILY LOCATE 373 if account account disconnecting 374 od oscar connections NULL flap connection getbytype od SNAC FAMILY LOCATE 233375 234376 No more FLAP connections Sign off this GaimConnection 27 412 271413 g slist free conn groups 272 flap connection destroy rates conn rates 414 while conn rateclasses NULL 415 416 flap connection destroy rateclass conn rateclasses data 417 conn rateclasses g slist delete link conn rateclasses conn rateclasses 418 419 42 while g queue is empty conn queued snacs 421 422 QueuedSnac queued snac 423 queued snac g queue pop head conn queued snacs 424 flap frame destroy queued snac frame 425 g free queued snac 426 427 g queue free conn queued snacs 428 if conn queued timeout 429 gaim timeout remove conn queued timeout 27343 274431 g free conn 462619 46362 if datalen 464 465 guint8 data 466 data g malloc datalen 467 byte stream init frame data data datalen 468 621 byte stream new frame data datalen 469622 47 623 return frame 471 472 473 474 Free a FlapFrame 475 476 param frame The frame to free 477 return 1 on error on success 478 479 static void 48 flap frame destroy FlapFrame frame 481 482 free frame data data 483 free frame 484 485 return 486624 487625 633771 FlapConnection conn 634772 ssize t read 635 guint8 header 6 636773 637774 conn data 64378 if conn buffer incoming data data NULL 644781 645 Peek at the first 6 bytes to get the length 646 read recv conn fd header 6 MSG PEEK 782 Read the first 6 bytes the FLAP header 783 read recv conn fd conn header conn header received 784 6 conn header received 647785 648786 Check if the FLAP server closed the connection 6688 6 6698 7 If we don t even have a complete FLAP header then do nothing 67 if read 6 8 8 conn header received read 8 9 if conn header received 6 67181 break 672811 673 Read the first 6 bytes the FLAP header 674 read recv conn fd header 6 675 676812 All FLAP frames must start with the byte x2a 677 if aimutil get8 header x2a 813 if aimutil get8 conn header x2a 678814 679815 flap connection schedule destroy conn 682818 683819 82 Verify the sequence number sent by the server 821 if 822 TODO Need to initialize conn seqnum in somewhere before we can use this 823 if aimutil get16 conn header 1 conn seqnum in 824 825 Received an out of order FLAP 826 flap connection schedule destroy conn 827 OSCAR DISCONNECT INVALID DATA NULL 828 break 829 83 endif 831 684832 Initialize a new temporary FlapFrame for incoming data 685 conn buffer incoming channel aimutil get8 header 1 686 conn buffer incoming seqnum aimutil get16 header 2 687 conn buffer incoming data len aimutil get16 header 4 833 conn buffer incoming channel aimutil get8 conn header 1 834 conn buffer incoming seqnum aimutil get16 conn header 2 835 conn buffer incoming data len aimutil get16 conn header 4 688836 conn buffer incoming data data g new guint8 conn buffer incoming data len 689837 conn buffer incoming data offset 731879 g free conn buffer incoming data data 73288 conn buffer incoming data data NULL 881 882 conn header received 733883 734884 7589 8 7599 9 Error 91 gaim input remove conn watcher outgoing 911 conn watcher outgoing 912 close conn fd 913 conn fd 1 76 914 flap connection schedule destroy conn 761915 OSCAR DISCONNECT LOST CONNECTION strerror errno 783937 784938 If we haven t already started writing stuff then start the cycle 785 if conn watcher outgoing 939 if conn watcher outgoing conn fd 1 78694 787941 conn watcher outgoing gaim input add conn fd 799953 payloadlen byte stream curpos frame data 8 954 8 1 byte stream init bs malloc 6 payloadlen 6 payloadlen 955 byte stream new bs 6 payloadlen 8 2956 8 3957 FLAP header 815969 flap connection send byte stream bs conn bslen 81697 817 free bs data XXX byte stream free 971 g free bs data XXX byte stream free 818972 819973 821975flap connection send FlapConnection conn FlapFrame frame 822976 823 frame seqnum conn seqnum 977 frame seqnum conn seqnum out 824978 sendframe flap conn frame 825979 flap frame destroy frame Note See TracChangeset for help on using the changeset viewer Download in other formats Unified Diff Zip Archive Powered by Trac 1 1 By Edgewall Software All content copyright 2 7 2 8 by LUCI http luci ics uci edu ", "_id": "http://djp3-pc2.ics.uci.edu/LUCICodeRepository/nomaticIM/changeset/228/vendor/current/libgaim/protocols/oscar/flap_connection.c", "title": "\n      changeset 228 for vendor/current/libgaim/protocols/oscar/flap_connection.c \u2013 nomatic*im\n    ", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n  \n\n\n  <head>\n\t\t<title>\n      Changeset 228 for vendor/current/libgaim/protocols/oscar/flap_connection.c \u2013 Nomatic*IM\n    </title><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><link rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search\" /><link rel=\"help\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\" /><link rel=\"alternate\" href=\"?format=diff&amp;new=228\" type=\"text/plain\" class=\"diff\" title=\"Unified Diff\" /><link rel=\"alternate\" href=\"?format=zip&amp;new=228\" type=\"application/zip\" class=\"zip\" title=\"Zip Archive\" /><link rel=\"next\" href=\"/LUCICodeRepository/nomaticIM/changeset/274\" title=\"Changeset 274 for vendor/current/libgaim/protocols/oscar/flap_connection.c\" /><link rel=\"start\" href=\"/LUCICodeRepository/nomaticIM/wiki\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/changeset.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/diff.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/code.css\" type=\"text/css\" /><link rel=\"prev\" href=\"/LUCICodeRepository/nomaticIM/changeset/65/vendor/current/libgaim/protocols/oscar/flap_connection.c\" title=\"Changeset 65 for vendor/current/libgaim/protocols/oscar/flap_connection.c\" /><link rel=\"shortcut icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link rel=\"icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link type=\"application/opensearchdescription+xml\" rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search/opensearch\" title=\"Search Nomatic*IM\" /><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/jquery.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/babel.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/messages/en_US.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/trac.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/search.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/diff.js\"></script><script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\".trac-toggledeleted\").show().click(function() {\n                  $(this).siblings().find(\".trac-deleted\").toggle();\n                  return false;\n        }).click();\n        $(\"#content\").find(\"li.entry h2 a\").parent().addAnchor(_(\"Link to this diff\"));\n      });\n    </script>\n\t</head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://luci.ics.uci.edu/#code\"><img src=\"http://luci.ics.uci.edu/blog/archives/LUCIhorzTight.jpg\" alt=\"LUCI Code Repository\" /></a>\n      </div>\n      <form id=\"search\" action=\"/LUCICodeRepository/nomaticIM/search\" method=\"get\">\n        <div>\n          <label for=\"proj-search\">Search:</label>\n          <input type=\"text\" id=\"proj-search\" name=\"q\" size=\"18\" value=\"\" />\n          <input type=\"submit\" value=\"Search\" />\n        </div>\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/login\">Login</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/prefs\">Preferences</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\">Help/Guide</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/wiki\">Wiki</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/timeline\">Timeline</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/roadmap\">Roadmap</a></li><li class=\"active\"><a href=\"/LUCICodeRepository/nomaticIM/browser\">Browse Source</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/report\">View Tickets</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/search\">Search</a></li>\n    </ul>\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><span>&larr; <a class=\"prev\" href=\"/LUCICodeRepository/nomaticIM/changeset/65/vendor/current/libgaim/protocols/oscar/flap_connection.c\" title=\"Changeset 65 for vendor/current/libgaim/protocols/oscar/flap_connection.c\">Previous Change</a></span></li><li class=\"last\"><span><a class=\"next\" href=\"/LUCICodeRepository/nomaticIM/changeset/274\" title=\"Changeset 274 for vendor/current/libgaim/protocols/oscar/flap_connection.c\">Next Change</a> &rarr;</span></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"changeset\">\n      <div id=\"title\">\n            <h1>Changeset <a title=\"Show full changeset\" href=\"/LUCICodeRepository/nomaticIM/changeset/228\">228</a>\n              for <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=228\">vendor/current/libgaim/protocols/oscar/flap_connection.c</a></h1>\n      </div>\n      <form id=\"prefs\" action=\"\">\n        <div>\n          \n  <label for=\"style\">View differences</label>\n  <select id=\"style\" name=\"style\">\n    <option selected=\"selected\" value=\"inline\">inline</option>\n    <option value=\"sidebyside\">side by side</option>\n  </select>\n  <div class=\"field\">\n    <label><input type=\"radio\" name=\"contextall\" value=\"0\" checked=\"checked\" />\n             Show</label>\n      <label><input type=\"text\" name=\"contextlines\" id=\"contextlines\" size=\"2\" maxlength=\"3\" value=\"2\" />\n             lines around each change</label><br />\n    <label><input type=\"radio\" name=\"contextall\" value=\"1\" />\n           Show the changes in full context</label>\n  </div>\n  <fieldset id=\"ignore\">\n    <legend>Ignore:</legend>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignoreblanklines\" name=\"ignoreblanklines\" />\n      <label for=\"ignoreblanklines\">Blank lines</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorecase\" name=\"ignorecase\" />\n      <label for=\"ignorecase\">Case changes</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorewhitespace\" name=\"ignorewhitespace\" />\n      <label for=\"ignorewhitespace\">White space changes</label>\n    </div>\n  </fieldset>\n  <div class=\"buttons\">\n    <input type=\"submit\" name=\"update\" value=\"Update\" />\n  </div>\n\n        </div>\n      </form>\n      <dl id=\"overview\">\n          <dt class=\"property time\">Timestamp:</dt>\n          <dd class=\"time\">\n             Mar 6, 2007, 10:39:26 PM\n             (<a class=\"timeline\" href=\"/LUCICodeRepository/nomaticIM/timeline?from=2007-03-06T22%3A39%3A26-08%3A00&amp;precision=second\" title=\"See timeline at Mar 6, 2007, 10:39:26 PM\">8 years</a> ago)\n          </dd>\n          <dt class=\"property author\">Author:</dt>\n          <dd class=\"author\">djp3</dd>\n          <dt class=\"property message\">Message:</dt>\n          <dd class=\"message searchable\">\n            \n            \n              <p>\nUpdating from gaim Repository<br />\n</p>\n\n            \n            \n          </dd>\n        <dt class=\"property files\">\n          File:\n        </dt>\n        <dd class=\"files\">\n          <div class=\"legend\" id=\"file-legend\">\n            <dl>\n              <dt class=\"mod\"></dt><dd>1 edited</dd>\n            </dl>\n          </div>\n          <br />\n          <ul>\n            <li>\n          <div class=\"mod\"> </div>\n            <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=228\">\n              vendor/current/libgaim/protocols/oscar/flap_connection.c\n            </a>\n          <span class=\"comment\">(modified)</span>\n              (<a title=\"Show differences\" href=\"#file0\">19 diffs</a>)\n            </li>\n          </ul>\n        </dd>\n      </dl>\n      <div class=\"diff\">\n        <div class=\"legend\" id=\"diff-legend\">\n          <h3>Legend:</h3>\n          <dl>\n            <dt class=\"unmod\"></dt><dd>Unmodified</dd>\n            <dt class=\"add\"></dt><dd>Added</dd>\n            <dt class=\"rem\"></dt><dd>Removed</dd>\n          </dl>\n        </div>\n        <div class=\"diff\">\n  <ul class=\"entries\">\n      <li class=\"entry\">\n        <h2 id=\"file0\">\n          <a href=\"/LUCICodeRepository/nomaticIM/changeset/228/vendor/current/libgaim/protocols/oscar/flap_connection.c\" title=\"Show the changeset 228 restricted to vendor/current/libgaim/protocols/oscar/flap_connection.c\">vendor/current/libgaim/protocols/oscar/flap_connection.c</a>\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"Revision 65\">\n                    <a title=\"Show revision 65 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=65#L52\">\n                      r65</a>\n                  </th>\n                  <th title=\"Revision 228\">\n                    <a title=\"Show revision 228 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=228#L52\">\n                      r228</a>\n                  </th>\n                  <td>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>52</th><th>52</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>53</th><th>53</th><td class=\"l\"><span>/**</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>54</th><th>\u00a0</th><td class=\"l\"><span>&nbsp;* This sends a channel 1 <del>SNAC</del> containing the FLAP version and</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>54</th><td class=\"r\"><span>&nbsp;* This sends a channel 1 <ins>FLAP</ins> containing the FLAP version and</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>55</th><th>55</th><td class=\"l\"><span>&nbsp;* the authentication cookie.&nbsp; This is sent when connecting to</span>\u00a0</td>\n                  </tr><tr>\n                          <th>56</th><th>56</th><td class=\"l\"><span>&nbsp;* any FLAP server after the initial connection to the auth</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=65#L73\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=228#L73\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>73</th><th>73</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>74</th><th>74</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>75</th><th>\u00a0</th><td class=\"l\"><span>/**</span>\u00a0</td>\n                      </tr><tr>\n                        <th>76</th><th>\u00a0</th><td class=\"l\"><span>&nbsp;* This sends an empty channel 4 SNAC.&nbsp; This is sent to signify</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>75</th><td class=\"r\"><span>static struct rateclass *</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>76</th><td class=\"r\"><span>flap_connection_get_rateclass(FlapConnection *conn, guint16 family, guint16 subtype)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>77</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>78</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; GSList *tmp1;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>79</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gconstpointer key;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>80</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>81</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; key = GUINT_TO_POINTER((family &lt;&lt; 16) + subtype);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>82</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>83</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; for (tmp1 = conn-&gt;rateclasses; tmp1 != NULL; tmp1 = tmp1-&gt;next)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>84</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>85</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; struct rateclass *rateclass;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>86</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rateclass = tmp1-&gt;data;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>87</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>88</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (g_hash_table_lookup(rateclass-&gt;members, key))</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>89</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return rateclass;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>90</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>91</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>92</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return NULL;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>93</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>94</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>95</th><td class=\"r\"><span>/*</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>96</th><td class=\"r\"><span>&nbsp;* Attempt to calculate what our new current average would be if we</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>97</th><td class=\"r\"><span>&nbsp;* were to send a SNAC in this rateclass at the given time.</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>98</th><td class=\"r\"><span>&nbsp;*/</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>99</th><td class=\"r\"><span>static guint32</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>100</th><td class=\"r\"><span>rateclass_get_new_current(FlapConnection *conn, struct rateclass *rateclass, struct timeval *now)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>101</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>102</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; unsigned long timediff; /* In milliseconds */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>103</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>104</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; timediff = (now-&gt;tv_sec - rateclass-&gt;last.tv_sec) * 1000 + (now-&gt;tv_usec - rateclass-&gt;last.tv_usec) / 1000;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>105</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>106</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* This formula is taken from the joscar API docs. Preesh. */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>107</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return MIN(((rateclass-&gt;current * (rateclass-&gt;windowsize - 1)) + timediff) / rateclass-&gt;windowsize, rateclass-&gt;max);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>108</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>109</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>110</th><td class=\"r\"><span>static gboolean flap_connection_send_queued(gpointer data)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>111</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>112</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; FlapConnection *conn;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>113</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; struct timeval now;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>114</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>115</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; conn = data;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>116</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gettimeofday(&amp;now, NULL);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>117</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>118</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; while (!g_queue_is_empty(conn-&gt;queued_snacs))</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>119</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>120</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; QueuedSnac *queued_snac;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>121</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; struct rateclass *rateclass;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>122</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>123</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; queued_snac = g_queue_peek_head(conn-&gt;queued_snacs);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>124</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>125</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rateclass = flap_connection_get_rateclass(conn, queued_snac-&gt;family, queued_snac-&gt;subtype);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>126</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (rateclass != NULL)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>127</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>128</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; guint32 new_current;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>129</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>130</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; new_current = rateclass_get_new_current(conn, rateclass, &amp;now);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>131</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>132</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (new_current &lt; rateclass-&gt;alert + 100)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>133</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* (Add 100ms padding to account for inaccuracies in the calculation) */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>134</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Not ready to send this SNAC yet--keep waiting. */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>135</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return TRUE;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>136</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>137</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rateclass-&gt;current = new_current;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>138</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rateclass-&gt;last.tv_sec = now.tv_sec;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>139</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rateclass-&gt;last.tv_usec = now.tv_usec;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>140</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>141</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>142</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; flap_connection_send(conn, queued_snac-&gt;frame);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>143</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; g_free(queued_snac);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>144</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; g_queue_pop_head(conn-&gt;queued_snacs);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>145</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>146</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>147</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; conn-&gt;queued_timeout = 0;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>148</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return FALSE;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>149</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>150</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>151</th><td class=\"r\"><span>/**</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>152</th><td class=\"r\"><span>&nbsp;* This sends a channel 2 FLAP containing a SNAC.&nbsp; The SNAC family and</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>153</th><td class=\"r\"><span>&nbsp;* subtype are looked up in the rate info for this connection, and if</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>154</th><td class=\"r\"><span>&nbsp;* sending this SNAC will induce rate limiting then we delay sending</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>155</th><td class=\"r\"><span>&nbsp;* of the SNAC by putting it into an outgoing holding queue.</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>156</th><td class=\"r\"><span>&nbsp;*</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>157</th><td class=\"r\"><span>&nbsp;* @param data The optional bytestream that makes up the data portion</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>158</th><td class=\"r\"><span>&nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; of this SNAC.&nbsp; For empty SNACs this should be NULL.</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>159</th><td class=\"r\"><span>&nbsp;*/</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>160</th><td class=\"r\"><span>void</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>161</th><td class=\"r\"><span>flap_connection_send_snac(OscarData *od, FlapConnection *conn, guint16 family, guint16 subtype, guint16 flags, aim_snacid_t snacid, ByteStream *data)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>162</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>163</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; FlapFrame *frame;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>164</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; guint32 length;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>165</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gboolean enqueue = FALSE;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>166</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; struct rateclass *rateclass;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>167</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>168</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; length = data != NULL ? data-&gt;offset : 0;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>169</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>170</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; frame = flap_frame_new(od, 0x02, 10 + length);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>171</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; aim_putsnac(&amp;frame-&gt;data, family, subtype, flags, snacid);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>172</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>173</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if (length &gt; 0)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>174</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>175</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; byte_stream_rewind(data);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>176</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; byte_stream_putbs(&amp;frame-&gt;data, data, length);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>177</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>178</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>179</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if (conn-&gt;queued_timeout != 0)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>180</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; enqueue = TRUE;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>181</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; else if ((rateclass = flap_connection_get_rateclass(conn, family, subtype)) != NULL)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>182</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>183</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; struct timeval now;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>184</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; guint32 new_current;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>185</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>186</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gettimeofday(&amp;now, NULL);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>187</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; new_current = rateclass_get_new_current(conn, rateclass, &amp;now);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>188</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>189</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (new_current &lt; rateclass-&gt;alert + 100)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>190</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>191</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* (Add 100ms padding to account for inaccuracies in the calculation) */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>192</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; enqueue = TRUE;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>193</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>194</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>195</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>196</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rateclass-&gt;current = new_current;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>197</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rateclass-&gt;last.tv_sec = now.tv_sec;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>198</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rateclass-&gt;last.tv_usec = now.tv_usec;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>199</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>200</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>201</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>202</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if (enqueue)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>203</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>204</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* We've been sending too fast, so delay this message */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>205</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; QueuedSnac *queued_snac;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>206</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>207</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; queued_snac = g_new(QueuedSnac, 1);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>208</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; queued_snac-&gt;family = family;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>209</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; queued_snac-&gt;subtype = subtype;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>210</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; queued_snac-&gt;frame = frame;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>211</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; g_queue_push_tail(conn-&gt;queued_snacs, queued_snac);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>212</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>213</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (conn-&gt;queued_timeout == 0)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>214</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; conn-&gt;queued_timeout = gaim_timeout_add(500, flap_connection_send_queued, conn);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>215</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>216</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>217</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>218</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>219</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; flap_connection_send(conn, frame);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>220</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>221</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>222</th><td class=\"r\"><span>/**</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>223</th><td class=\"r\"><span>&nbsp;* This sends an empty channel 4 FLAP.&nbsp; This is sent to signify</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>77</th><th>224</th><td class=\"l\"><span>&nbsp;* that we're logging off.&nbsp; This shouldn't really be necessary--</span>\u00a0</td>\n                  </tr><tr>\n                          <th>78</th><th>225</th><td class=\"l\"><span>&nbsp;* usually the AIM server will detect that the TCP connection has</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=65#L89\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=228#L236\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>89</th><th>236</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>90</th><th>237</th><td class=\"l\"><span>/**</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>91</th><th>\u00a0</th><td class=\"l\"><span>&nbsp;* This sends an empty channel 5 <del>SNAC</del>.&nbsp; This is used as a keepalive</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>238</th><td class=\"r\"><span>&nbsp;* This sends an empty channel 5 <ins>FLAP</ins>.&nbsp; This is used as a keepalive</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>92</th><th>239</th><td class=\"l\"><span>&nbsp;* packet in FLAP connections.&nbsp; WinAIM 4.x and higher send these</span>\u00a0</td>\n                  </tr><tr>\n                          <th>93</th><th>240</th><td class=\"l\"><span>&nbsp;* _every minute_ to keep the connection alive.</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=65#L124\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=228#L271\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>124</th><th>271</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; conn-&gt;subtype = -1;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>125</th><th>272</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; conn-&gt;type = type;</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"last first\">\n                          <th>\u00a0</th><th>273</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; conn-&gt;queued_snacs = g_queue_new();</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>126</th><th>274</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>127</th><th>275</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; od-&gt;oscar_connections = g_slist_prepend(od-&gt;oscar_connections, conn);</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=65#L185\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=228#L333\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>185</th><th>333</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>186</th><th>334</th><td class=\"l\"><span>static void</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>187</th><th>\u00a0</th><td class=\"l\"><span>flap_connection_destroy_rates(struct rateclass *head)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>188</th><th>\u00a0</th><td class=\"l\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>189</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; struct rateclass *rc;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>190</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>191</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; for (rc = head; rc; )</span>\u00a0</td>\n                      </tr><tr>\n                        <th>192</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>193</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; struct rateclass *tmp;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>194</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; struct snacpair *sp;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>195</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>196</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tmp = rc-&gt;next;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>197</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>198</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (sp = rc-&gt;members; sp; ) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>199</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; struct snacpair *tmpsp;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>200</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>201</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tmpsp = sp-&gt;next;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>202</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(sp);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>203</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sp = tmpsp;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>204</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>205</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; free(rc);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>206</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>207</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rc = tmp;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>208</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>335</th><td class=\"r\"><span>flap_connection_destroy_rateclass(struct rateclass *rateclass)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>336</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>337</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; g_hash_table_destroy(rateclass-&gt;members);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>338</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; g_free(rateclass);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>339</th><td class=\"r\"><span>}</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>340</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>341</th><td class=\"r\"><span>/**</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>342</th><td class=\"r\"><span>&nbsp;* Free a FlapFrame</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>343</th><td class=\"r\"><span>&nbsp;*</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>344</th><td class=\"r\"><span>&nbsp;* @param frame The frame to free.</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>345</th><td class=\"r\"><span>&nbsp;*/</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>346</th><td class=\"r\"><span>static void</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>347</th><td class=\"r\"><span>flap_frame_destroy(FlapFrame *frame)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>348</th><td class=\"r\"><span>{</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>349</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; g_free(frame-&gt;data.data);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>350</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; g_free(frame);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>209</th><th>351</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>210</th><th>352</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=65#L218\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=228#L360\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>218</th><th>360</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; conn = data;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>219</th><th>361</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; od = conn-&gt;od;</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>220</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; account = <del>gaim_connection_get_account(od-&gt;gc</del>);</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>362</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; account = <ins>(GAIM_CONNECTION_IS_VALID(od-&gt;gc) ? gaim_connection_get_account(od-&gt;gc) : NULL</ins>);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>221</th><th>363</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>222</th><th>364</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; gaim_debug_info(\"oscar\", \"Destroying oscar connection of \"</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=65#L229\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=228#L371\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>229</th><th>371</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* we should try to request one instead of disconnecting.</span>\u00a0</td>\n                  </tr><tr>\n                          <th>230</th><th>372</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*/</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>231</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if (<del>!account-&gt;disconnecting &amp;&amp; ((od-&gt;oscar_connections == NULL)</del></span>\u00a0</td>\n                      </tr><tr>\n                        <th>232</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <del>&nbsp; &nbsp; &nbsp; &nbsp; </del>|| (!flap_connection_getbytype(od, SNAC_FAMILY_LOCATE))))</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>373</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if (<ins>account &amp;&amp; !account-&gt;disconnecting &amp;&amp;</ins></span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>374</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <ins>((od-&gt;oscar_connections == NULL) </ins>|| (!flap_connection_getbytype(od, SNAC_FAMILY_LOCATE))))</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>233</th><th>375</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                  </tr><tr>\n                          <th>234</th><th>376</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* No more FLAP connections!&nbsp; Sign off this GaimConnection! */</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=65#L270\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=228#L412\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>270</th><th>412</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>271</th><th>413</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; g_slist_free(conn-&gt;groups);</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>272</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; flap_connection_destroy_rates(conn-&gt;rates);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>414</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; while (conn-&gt;rateclasses != NULL)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>415</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>416</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; flap_connection_destroy_rateclass(conn-&gt;rateclasses-&gt;data);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>417</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; conn-&gt;rateclasses = g_slist_delete_link(conn-&gt;rateclasses, conn-&gt;rateclasses);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>418</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>419</th><td class=\"r\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>420</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; while (!g_queue_is_empty(conn-&gt;queued_snacs))</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>421</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>422</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; QueuedSnac *queued_snac;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>423</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; queued_snac = g_queue_pop_head(conn-&gt;queued_snacs);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>424</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; flap_frame_destroy(queued_snac-&gt;frame);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>425</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; g_free(queued_snac);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>426</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>427</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; g_queue_free(conn-&gt;queued_snacs);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>428</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if (conn-&gt;queued_timeout &gt; 0)</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>429</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_timeout_remove(conn-&gt;queued_timeout);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>273</th><th>430</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>274</th><th>431</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; g_free(conn);</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=65#L462\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=228#L619\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>462</th><th>619</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>463</th><th>620</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if (datalen &gt; 0)</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>464</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>465</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; guint8 *data;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>466</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data = g_malloc(datalen);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>467</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; byte_stream_init(&amp;frame-&gt;data, data, datalen);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>468</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>621</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; byte_stream_new(&amp;frame-&gt;data, datalen);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>469</th><th>622</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>470</th><th>623</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; return frame;</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"first\">\n                          <th>471</th><th>\u00a0</th><td class=\"l\"><del>}</del>\u00a0</td>\n                  </tr><tr>\n                          <th>472</th><th>\u00a0</th><td class=\"l\"><del></del>\u00a0</td>\n                  </tr><tr>\n                          <th>473</th><th>\u00a0</th><td class=\"l\"><del>/**</del>\u00a0</td>\n                  </tr><tr>\n                          <th>474</th><th>\u00a0</th><td class=\"l\"><del>&nbsp;* Free a FlapFrame</del>\u00a0</td>\n                  </tr><tr>\n                          <th>475</th><th>\u00a0</th><td class=\"l\"><del>&nbsp;*</del>\u00a0</td>\n                  </tr><tr>\n                          <th>476</th><th>\u00a0</th><td class=\"l\"><del>&nbsp;* @param frame The frame to free.</del>\u00a0</td>\n                  </tr><tr>\n                          <th>477</th><th>\u00a0</th><td class=\"l\"><del>&nbsp;* @return -1 on error; 0 on success.</del>\u00a0</td>\n                  </tr><tr>\n                          <th>478</th><th>\u00a0</th><td class=\"l\"><del>&nbsp;*/</del>\u00a0</td>\n                  </tr><tr>\n                          <th>479</th><th>\u00a0</th><td class=\"l\"><del>static void</del>\u00a0</td>\n                  </tr><tr>\n                          <th>480</th><th>\u00a0</th><td class=\"l\"><del>flap_frame_destroy(FlapFrame *frame)</del>\u00a0</td>\n                  </tr><tr>\n                          <th>481</th><th>\u00a0</th><td class=\"l\"><del>{</del>\u00a0</td>\n                  </tr><tr>\n                          <th>482</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; free(frame-&gt;data.data);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>483</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; free(frame);</del>\u00a0</td>\n                  </tr><tr>\n                          <th>484</th><th>\u00a0</th><td class=\"l\"><del></del>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>485</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; return;</del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>486</th><th>624</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>487</th><th>625</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=65#L633\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=228#L771\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>633</th><th>771</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; FlapConnection *conn;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>634</th><th>772</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; ssize_t read;</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"last first\">\n                          <th>635</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; guint8 header[6];</del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>636</th><th>773</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>637</th><th>774</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; conn = data;</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=65#L643\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=228#L780\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>643</th><th>780</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (conn-&gt;buffer_incoming.data.data == NULL)</span>\u00a0</td>\n                  </tr><tr>\n                          <th>644</th><th>781</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>645</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Peek at the first 6 bytes to get the length */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>646</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; read = recv(conn-&gt;fd, &amp;header, 6, MSG_PEEK);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>782</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Read the first 6 bytes (the FLAP header) */</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>783</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; read = recv(conn-&gt;fd, conn-&gt;header + conn-&gt;header_received,</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>784</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 6 - conn-&gt;header_received, 0);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>647</th><th>785</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>648</th><th>786</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Check if the FLAP server closed the connection */</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=65#L668\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=228#L806\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>668</th><th>806</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>669</th><th>807</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* If we don't even have a complete FLAP header then do nothing */</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>670</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (read &lt; 6)</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>808</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; conn-&gt;header_received += read;</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>809</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (conn-&gt;header_received &lt; 6)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>671</th><th>810</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>672</th><th>811</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"first\">\n                          <th>673</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Read the first 6 bytes (the FLAP header) */</del>\u00a0</td>\n                  </tr><tr>\n                          <th>674</th><th>\u00a0</th><td class=\"l\"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; read = recv(conn-&gt;fd, &amp;header, 6, 0);</del>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>675</th><th>\u00a0</th><td class=\"l\"><del></del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>676</th><th>812</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* All FLAP frames must start with the byte 0x2a */</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>677</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (aimutil_get8(&amp;<del></del>header[0]) != 0x2a)</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>813</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (aimutil_get8(&amp;<ins>conn-&gt;</ins>header[0]) != 0x2a)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>678</th><th>814</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                  </tr><tr>\n                          <th>679</th><th>815</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; flap_connection_schedule_destroy(conn,</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=65#L682\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=228#L818\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>682</th><th>818</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>683</th><th>819</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>820</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Verify the sequence number sent by the server. */</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>821</th><td class=\"r\"><ins>#if 0</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>822</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* TODO: Need to initialize conn-&gt;seqnum_in somewhere before we can use this. */</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>823</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (aimutil_get16(&amp;conn-&gt;header[1]) != conn-&gt;seqnum_in++)</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>824</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>825</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Received an out-of-order FLAP! */</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>826</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; flap_connection_schedule_destroy(conn,</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>827</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; OSCAR_DISCONNECT_INVALID_DATA, NULL);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>828</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>829</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>830</th><td class=\"r\"><ins>#endif</ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>831</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>684</th><th>832</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Initialize a new temporary FlapFrame for incoming data */</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>685</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; conn-&gt;buffer_incoming.channel = aimutil_get8(&amp;<del></del>header[1]);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>686</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; conn-&gt;buffer_incoming.seqnum = aimutil_get16(&amp;<del></del>header[2]);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>687</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; conn-&gt;buffer_incoming.data.len = aimutil_get16(&amp;<del></del>header[4]);</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>833</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; conn-&gt;buffer_incoming.channel = aimutil_get8(&amp;<ins>conn-&gt;</ins>header[1]);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>834</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; conn-&gt;buffer_incoming.seqnum = aimutil_get16(&amp;<ins>conn-&gt;</ins>header[2]);</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>835</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; conn-&gt;buffer_incoming.data.len = aimutil_get16(&amp;<ins>conn-&gt;</ins>header[4]);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>688</th><th>836</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; conn-&gt;buffer_incoming.data.data = g_new(guint8, conn-&gt;buffer_incoming.data.len);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>689</th><th>837</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; conn-&gt;buffer_incoming.data.offset = 0;</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=65#L731\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=228#L879\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>731</th><th>879</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; g_free(conn-&gt;buffer_incoming.data.data);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>732</th><th>880</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; conn-&gt;buffer_incoming.data.data = NULL;</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>881</th><td class=\"r\"><ins></ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>882</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; conn-&gt;header_received = 0;</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>733</th><th>883</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>734</th><th>884</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=65#L758\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=228#L908\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>758</th><th>908</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>759</th><th>909</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* Error! */</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"add\">\n                  <tr class=\"first\">\n                          <th>\u00a0</th><th>910</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gaim_input_remove(conn-&gt;watcher_outgoing);</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>911</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; conn-&gt;watcher_outgoing = 0;</ins>\u00a0</td>\n                  </tr><tr>\n                          <th>\u00a0</th><th>912</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; close(conn-&gt;fd);</ins>\u00a0</td>\n                  </tr><tr class=\"last\">\n                          <th>\u00a0</th><th>913</th><td class=\"r\"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; conn-&gt;fd = -1;</ins>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>760</th><th>914</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; flap_connection_schedule_destroy(conn,</span>\u00a0</td>\n                  </tr><tr>\n                          <th>761</th><th>915</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; OSCAR_DISCONNECT_LOST_CONNECTION, strerror(errno));</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=65#L783\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=228#L937\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>783</th><th>937</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>784</th><th>938</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* If we haven't already started writing stuff, then start the cycle */</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>785</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if (<del>conn-&gt;watcher_outgoing == 0</del>)</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>939</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; if (<ins>(conn-&gt;watcher_outgoing == 0) &amp;&amp; (conn-&gt;fd != -1)</ins>)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>786</th><th>940</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                  </tr><tr>\n                          <th>787</th><th>941</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; conn-&gt;watcher_outgoing = gaim_input_add(conn-&gt;fd,</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=65#L799\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=228#L953\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>799</th><th>953</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; payloadlen = byte_stream_curpos(&amp;frame-&gt;data);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>800</th><th>954</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>801</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; byte_stream_<del>init(&amp;bs, malloc(6 + payloadlen)</del>, 6 + payloadlen);</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>955</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; byte_stream_<ins>new(&amp;bs</ins>, 6 + payloadlen);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>802</th><th>956</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>803</th><th>957</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* FLAP header */</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=65#L815\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=228#L969\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>815</th><th>969</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; flap_connection_send_byte_stream(&amp;bs, conn, bslen);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>816</th><th>970</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>817</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; <del></del>free(bs.data); /* XXX byte_stream_free */</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>971</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; <ins>g_</ins>free(bs.data); /* XXX byte_stream_free */</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>818</th><th>972</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr><tr>\n                          <th>819</th><th>973</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=65#L821\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/vendor/current/libgaim/protocols/oscar/flap_connection.c?rev=228#L975\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>821</th><th>975</th><td class=\"l\"><span>flap_connection_send(FlapConnection *conn, FlapFrame *frame)</span>\u00a0</td>\n                  </tr><tr>\n                          <th>822</th><th>976</th><td class=\"l\"><span>{</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>823</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; frame-&gt;seqnum = ++(conn-&gt;seqnum<del></del>);</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>977</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; frame-&gt;seqnum = ++(conn-&gt;seqnum<ins>_out</ins>);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>824</th><th>978</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; sendframe_flap(conn, frame);</span>\u00a0</td>\n                  </tr><tr>\n                          <th>825</th><th>979</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; flap_frame_destroy(frame);</span>\u00a0</td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n  </ul>\n</div>\n        <div id=\"help\"><strong>Note:</strong> See <a href=\"/LUCICodeRepository/nomaticIM/wiki/TracChangeset\">TracChangeset</a>\n          for help on using the changeset viewer.</div>\n      </div>\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"first\">\n          <a rel=\"nofollow\" href=\"?format=diff&amp;new=228\" class=\"diff\">Unified Diff</a>\n        </li><li class=\"last\">\n          <a rel=\"nofollow\" href=\"?format=zip&amp;new=228\" class=\"zip\">Zip Archive</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/LUCICodeRepository/nomaticIM/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/LUCICodeRepository/nomaticIM/about\"><strong>Trac 1.0.1</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">All content copyright 2007-2008 by LUCI <br /><a href=\"http://luci.ics.uci.edu/\">http://luci.ics.uci.edu/</a></p>\n    </div>\n\t\t<div id=\"sitefooter\">\n\t\t\t<script src=\"http://www.google-analytics.com/urchin.js\" type=\"text/javascript\">\n\t\t\t</script>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t\t_uacct = \"UA-338915-2\";\n\t\t\t\turchinTracker();\n\t\t\t</script>\n\t\t</div>\n\t</body>\n</html>", "id": 40058.0}