{"text": "Navigation Up Table of Contents Bibliography Index Title Page Chapter 5Handles and Circulators Olivier Devillers Lutz Kettner Michael Seel and Mariette Yvinec Summary Most data structures in CGAL use the concept of Handle in their user interface to refer to the elements they store This concept describes what is sometimes called a trivial iterator A Handle is akeen to a pointer to an object providing the dereference operator operator and member access operator but no increment or decrement operators like iterators A Handle is intended to be used whenever the referenced object is not part of a logical sequence The concept of iterators in STL is tailored for linear sequences In contrast circular sequences occur naturally in many combinatorial and geometric structures Examples are polyhedral surfaces and planar maps where the edges emanating from a vertex or the edges around a facet form a circular sequence We provide several functions classes and macros to assist in working with circulators distance computation adaptor classes converting between circulators and iterators base classes to ease the implementation of circulators and support for generic algorithms that work with circulators as well as with iterators Concepts Handle Circulator Forward circulator Bidirectional circulator Random access circulator Classes CGAL Container from circulator C CGAL Circulator from iterator I CGAL Circulator from container C CGAL Const circulator from container C CGAL Circulator tag CGAL Iterator tag CGAL Forward circulator tag CGAL Bidirectional circulator tag CGAL Random access circulator tag CGAL Circulator base CGAL Forward circulator base CGAL Bidirectional circulator base CGAL Random access circulator base CGAL Circulator traits C Functions size type CGAL circulator size C c difference type CGAL circulator distance C c C d difference type CGAL iterator distance IC ic1 IC ic2 bool CGAL is empty range IC i IC j CGAL Circulator tag CGAL query circulator or iterator C c CGAL Iterator tag CGAL query circulator or iterator I i void CGAL Assert circulator C c void CGAL Assert iterator I i void CGAL Assert input category I i void CGAL Assert output category I i void CGAL Assert forward category IC ic void CGAL Assert bidirectional category IC ic void CGAL Assert random access category IC ic void CGAL Assert circulator or iterator IC i Macros CGAL For all i j CGAL For all backwards i j Reference Pages Assert circulator circulator distance circulator size Circulator Circulator from container C Circulator from iterator I Circulator tag Circulator traits C Container from circulator C CGAL For all Handle is empty range iterator distance query circulator or iterator Next chapter Geometric Object Generators Navigation Table of Contents Bibliography Index Title Page The CGAL Project Tue December 21 2 4 ", "_id": "http://www.ics.uci.edu/~dock/manuals/cgal_manual/Circulator_ref/Chapter_intro.html", "title": "handles and circulators", "html": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n<!-- Page automatically generated from latex_to_html converter. -->\n<!-- by cc_extract_html, $Revision: 3.19 $ -->\n<!-- LaTeX source file: './Circulator_ref/intro.tex' -->\n<html> <head>  \n<title>Handles and Circulators</title>\n</head>  \n<link href=\"../latex_to_html.css\" rel=\"STYLESHEET\">\n<body bgcolor=\"white\">\n<!-- ------------------------------------------------------------------- -->\n\n\n<!-- Top Navigation ---------------------------------------------------- -->\n<div class=\"NavTop\">\n<hr>\n  <strong>Navigation:</strong>\n<a href=\"Chapter_intro.html\">Up</a>, \n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<hr><!-- End of Top Navigation ----------------------------------------- -->\n</div>\n\n<a name=\"Chapter_5\"></a>\n  \n<h1>Chapter 5<BR>Handles and Circulators</h1>\n\n<EM>Olivier Devillers, Lutz Kettner, Michael Seel, and Mariette Yvinec</EM><BR>\n\n\n<P>\n\n<h2>Summary</h2>\n<P>\n\nMost data structures in C<SMALL>GAL</SMALL> use the concept of <I><A HREF=\"../Handle_ref/Concept_Handle.html#Cross_link_anchor_1663\">Handle</A></I> in their user\ninterface to refer to the elements they store.  This concept describes what is\nsometimes called a trivial iterator.  A <I><A HREF=\"../Handle_ref/Concept_Handle.html#Cross_link_anchor_1663\">Handle</A></I> is akeen to a pointer to\nan object providing the dereference operator <I>operator*()</I> and member\naccess <I>operator-&gt;()</I> but no increment or decrement operators like\niterators.  A <I><A HREF=\"../Handle_ref/Concept_Handle.html#Cross_link_anchor_1663\">Handle</A></I> is intended to be used whenever the referenced\nobject is not part of a logical sequence.\n<P>\n\nThe concept of iterators in STL is tailored for linear sequences.\nIn contrast, circular sequences occur naturally in many combinatorial\nand geometric structures. Examples are polyhedral surfaces and planar\nmaps, where the edges emanating from a vertex or the edges around a\nfacet form a circular sequence.\n<P>\n\nWe provide several functions, classes and macros to assist in working\nwith circulators: distance computation, adaptor classes converting\nbetween circulators and iterators, base classes to ease the implementation\nof circulators, and support for generic algorithms that work with\ncirculators as well as with iterators.\n<P>\n\n<h3>Concepts</h3>\n<P>\n\n<I><A HREF=\"../Handle_ref/Concept_Handle.html#Cross_link_anchor_1663\">Handle</A></I><BR>\n\n<I><A HREF=\"Concept_Circulator.html#Cross_link_anchor_1607\">Circulator</A></I><BR>\n\n<I><A HREF=\"Concept_Circulator.html#Cross_link_anchor_1608\">Forward_circulator</A></I><BR>\n\n<I><A HREF=\"Concept_Circulator.html#Cross_link_anchor_1609\">Bidirectional_circulator</A></I><BR>\n\n<I><A HREF=\"Concept_Circulator.html#Cross_link_anchor_1610\">Random_access_circulator</A></I><BR>\n\n\n<P>\n\n<h3>Classes</h3>\n<P>\n\n<I><A HREF=\"Class_Container_from_circulator.html#Cross_link_anchor_1659\">CGAL::Container_from_circulator</A>&lt;C&gt;</I><BR>\n\n<I><A HREF=\"Class_Circulator_from_iterator.html#Cross_link_anchor_1617\">CGAL::Circulator_from_iterator</A>&lt;I&gt;</I><BR>\n\n<I><A HREF=\"Class_Circulator_from_container.html#Cross_link_anchor_1611\">CGAL::Circulator_from_container</A>&lt;C&gt;</I><BR>\n\n<I><A HREF=\"Class_Circulator_from_container.html#Cross_link_anchor_1616\">CGAL::Const_circulator_from_container&lt;C&gt;</A></I>\n<P>\n\n<I><A HREF=\"Class_Circulator_tag.html#Cross_link_anchor_1619\">CGAL::Circulator_tag</A></I><BR>\n\n<I><A HREF=\"Class_Circulator_tag.html#Cross_link_anchor_1621\">CGAL::Iterator_tag</A></I><BR>\n\n<I><A HREF=\"Class_Circulator_tag.html#Cross_link_anchor_1622\">CGAL::Forward_circulator_tag</A></I><BR>\n\n<I><A HREF=\"Class_Circulator_tag.html#Cross_link_anchor_1623\">CGAL::Bidirectional_circulator_tag</A></I><BR>\n\n<I><A HREF=\"Class_Circulator_tag.html#Cross_link_anchor_1624\">CGAL::Random_access_circulator_tag</A></I>\n<P>\n\n<I><A HREF=\"Class_Circulator_tag.html#Cross_link_anchor_1625\">CGAL::Circulator_base</A></I><BR>\n\n<I><A HREF=\"Class_Circulator_tag.html#Cross_link_anchor_1627\">CGAL::Forward_circulator_base</A></I><BR>\n\n<I><A HREF=\"Class_Circulator_tag.html#Cross_link_anchor_1629\">CGAL::Bidirectional_circulator_base</A></I><BR>\n\n<I><A HREF=\"Class_Circulator_tag.html#Cross_link_anchor_1631\">CGAL::Random_access_circulator_base</A></I>\n<P>\n\n<I><A HREF=\"Class_Circulator_traits.html#Cross_link_anchor_1657\">CGAL::Circulator_traits</A>&lt;C&gt;</I>\n<P>\n\n<h3>Functions</h3>\n\n\n\n        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    size_type\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Function_circulator_size.html#Cross_link_anchor_1605\">CGAL::circulator_size</A> ( C c)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    \n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    difference_type\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Function_circulator_distance.html#Cross_link_anchor_1603\">CGAL::circulator_distance</A> ( C c,  C d)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    \n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    difference_type\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Function_iterator_distance.html#Cross_link_anchor_1666\">CGAL::iterator_distance</A> ( IC ic1,  IC ic2)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    \n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    bool\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Function_is_empty_range.html#Cross_link_anchor_1664\">CGAL::is_empty_range</A> ( IC i,  IC j)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    \n        </TD></TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>\n        <I><NOBR>\n    <A HREF=\"Class_Circulator_tag.html#Cross_link_anchor_1619\">CGAL::Circulator_tag</A>\n        </I></NOBR>\n        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Function_query_circulator_or_iterator.html#Cross_link_anchor_1668\">CGAL::query_circulator_or_iterator</A> ( C c)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    \n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    <A HREF=\"Class_Circulator_tag.html#Cross_link_anchor_1621\">CGAL::Iterator_tag</A>\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Function_query_circulator_or_iterator.html#Cross_link_anchor_1668\">CGAL::query_circulator_or_iterator</A> ( I i)\n        </I></NOBR>\n        \n    \n        </TR>\n        <TR><TD><BR></TD></TR>\n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    void\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Function_Assert_circulator.html#Cross_link_anchor_1587\">CGAL::Assert_circulator</A> ( C c)\n        </I></NOBR>\n        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>\n    \n        </TD></TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    void\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Function_Assert_circulator.html#Cross_link_anchor_1589\">CGAL::Assert_iterator</A> ( I i)\n        </I></NOBR>\n        \n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    void\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Function_Assert_circulator.html#Cross_link_anchor_1591\">CGAL::Assert_input_category</A> ( I i)\n        </I></NOBR>\n        \n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    void\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Function_Assert_circulator.html#Cross_link_anchor_1592\">CGAL::Assert_output_category</A> ( I i)\n        </I></NOBR>\n        \n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    void\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Function_Assert_circulator.html#Cross_link_anchor_1593\">CGAL::Assert_forward_category</A> ( IC ic)\n        </I></NOBR>\n        \n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    void\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Function_Assert_circulator.html#Cross_link_anchor_1594\">CGAL::Assert_bidirectional_category</A> ( IC ic)\n        </I></NOBR>\n        \n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    void\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Function_Assert_circulator.html#Cross_link_anchor_1595\">CGAL::Assert_random_access_category</A> ( IC ic)\n        </I></NOBR>\n        \n    \n        </TR>\n        \n        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>\n        <I><NOBR>\n    void\n        </I></NOBR>\n        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>\n        <I><NOBR>\n    <A HREF=\"Function_Assert_circulator.html#Cross_link_anchor_1590\">CGAL::Assert_circulator_or_iterator</A> ( IC i)\n        </I></NOBR>\n        \n    \n        </TR>\n        </TABLE>\n<P>\n\n<h3>Macros</h3>\n<P>\n\n<I><A HREF=\"Macro_CGAL_For_all.html#Cross_link_anchor_1661\">CGAL_For_all</A>(i,j)</I><BR>\n\n<I><A HREF=\"Macro_CGAL_For_all.html#Cross_link_anchor_1662\">CGAL_For_all_backwards</A>(i,j)</I>\n<P>\n\n<hr><h2>Reference Pages</h2>\n<P>\n\n<UL><LI>\n<a href=\"Function_Assert_circulator.html\"><I>Assert_circulator</I></a></UL>\n<P>\n\n<UL><LI>\n<a href=\"Function_circulator_distance.html\"><I>circulator_distance</I></a></UL>\n<P>\n\n<UL><LI>\n<a href=\"Function_circulator_size.html\"><I>circulator_size</I></a></UL>\n<P>\n\n<UL><LI>\n<a href=\"Concept_Circulator.html\"><I>Circulator</I></a></UL>\n<P>\n\n<UL><LI>\n<a href=\"Class_Circulator_from_container.html\"><I>Circulator_from_container&lt;C&gt;</I></a></UL>\n<P>\n\n<UL><LI>\n<a href=\"Class_Circulator_from_iterator.html\"><I>Circulator_from_iterator&lt;I&gt;</I></a></UL>\n<P>\n\n<UL><LI>\n<a href=\"Class_Circulator_tag.html\"><I>Circulator_tag</I></a></UL>\n<P>\n\n<UL><LI>\n<a href=\"Class_Circulator_traits.html\"><I>Circulator_traits&lt;C&gt;</I></a></UL>\n<P>\n\n<UL><LI>\n<a href=\"Class_Container_from_circulator.html\"><I>Container_from_circulator&lt;C&gt;</I></a></UL>\n<P>\n\n<UL><LI>\n<a href=\"Macro_CGAL_For_all.html\"><I>CGAL_For_all</I></a></UL>\n<P>\n\n<UL><LI>\n<a href=\"../Handle_ref/Concept_Handle.html\"><I>Handle</I></a></UL>\n<P>\n\n<UL><LI>\n<a href=\"Function_is_empty_range.html\"><I>is_empty_range</I></a></UL>\n<P>\n\n<UL><LI>\n<a href=\"Function_iterator_distance.html\"><I>iterator_distance</I></a></UL>\n<P>\n\n<UL><LI>\n<a href=\"Function_query_circulator_or_iterator.html\"><I>query_circulator_or_iterator</I></a></UL>\n<P>\n\n<div class=\"NavNext\"><hr> Next chapter: <a href=\"../Generator/Chapter_main.html\">Geometric Object Generators</a> \n\n\n    \n<div class=\"NavBottom\">\n<hr><!-- Bottom Navigation --------------------------------------------- -->\n  <strong>Navigation:</strong>\n<!Up_chapter_link_5!>\n  <a href=\"../contents.html\">Table of Contents</A>,\n  <a href=\"../biblio.html\">Bibliography</a>,\n  <a href=\"../manual_index.html\">Index</a>,\n  <a href=\"../title.html\">Title Page</a>\n<!-- End of Bottom Navigation ------------------------------------------ -->\n\n\n<hr><!-- --------------------------------------------------------------- -->\n<div class=\"NavAddress\">\n\nThe <A HREF=http://www.cgal.org>CGAL Project</A> .\n\nTue, December 21, 2004 .\n<hr></div>\n</body>  </html>  \n", "id": 39350.0}