{"text": "Search LoginPreferencesHelp GuideAbout Trac WikiTimelineRoadmapBrowse SourceView TicketsSearch Context Navigation Previous ChangeNext Change Changeset 45 for nomatic trunk service edu uci ics luci nomatic service learning MemDatabase java View differences inlineside by side Show lines around each change Show the changes in full context Ignore Blank lines Case changes White space changes Timestamp Sep 6 2 7 12 15 11 PM 7 years ago Author samMessage Added active process storage and SQLite storage Closes 3 File 1 copied nomatic trunk service edu uci ics luci nomatic service learning MemDatabase java copied copied from nomatic trunk service edu uci ics luci nomatic service learning Database java 2 diffs Legend UnmodifiedAddedRemoved nomatic trunk service edu uci ics luci nomatic service learning MemDatabase java r444 r45 11package edu uci ics luci nomatic service learning 22 3 import java io 43import java util 5 import java util logging Logger 64 75 97 author Sam Kaufman 1 8 11 public class Database extends ArrayList Record implements Serializable Cloneable 9public class MemDatabase extends Database implements Iterable Record Cloneable 121 13 private static Logger log Logger getLogger DecisionTree class getName 14 private static final long serialVersionUID 674833362 347219276L 15 16 protected boolean quiet 11 private ArrayList Record inner new ArrayList Record 1712 18 public Database 19 this false 2 21 22 public Database boolean quiet 23 this quiet quiet 13 non Javadoc 14 see edu uci ics luci nomatic service learning Database add edu uci ics luci nomatic service learning Record 15 16 public void add Record o 17 inner add o 2418 2519 262 non Javadoc 27 see java util ArrayList add int java lang Object 21 see edu uci ics luci nomatic service learning Database size 2822 29 Override 3 public void add int index Record element 31 super add index element 32 if quiet 33 log fine Added a record to a database Now contains this size 23 public long size 24 return inner size 25 26 27 non Javadoc 28 see edu uci ics luci nomatic service learning Database contains edu uci ics luci nomatic service learning Record 29 3 public boolean contains Record r 31 return inner contains r 32 33 34 public Object clone 35 return copy 3436 3537 36 non Javadoc 37 see java util ArrayList add java lang Object 38 39 Override 4 public boolean add Record o 41 boolean r super add o 42 log fine Added a record to a database Now contains this size 43 return r 44 45 46 non Javadoc 47 see java util ArrayList addAll java util Collection 48 49 Override 5 public boolean addAll Collection extends Record c 51 boolean r super addAll c 52 if quiet 53 log fine Added c size records to a database Now contains this size 54 return r 55 56 57 non Javadoc 58 see java util ArrayList addAll int java util Collection 59 6 Override 61 public boolean addAll int index Collection extends Record c 62 boolean r super addAll index c 63 if quiet 64 log fine Added c size records to a database Now contains this size 65 return r 66 67 68 69 Calculates the entropy of the database a given attribute 7 att The attribute designating the values from which entropy will be found 71 return The entropy of the database for the given attribute param att param 72 73 public double entropy Attribute att 38 public MemDatabase copy 7439 75 Map Object Integer freqs new TreeMap Object Integer 76 double dataEntropy 77 78 Calculate the frequency of each of the values in the given attribute 79 for Record i this 8 if freqs containsKey i get att 81 freqs put i get att freqs get i get att 1 82 else 83 freqs put i get att 1 84 85 86 for int freq freqs values 87 dataEntropy double freq this size log2 double freq this size 88 89 return dataEntropy 4 MemDatabase d new MemDatabase 41 for Record r this 42 d add Record r clone 43 return d 9 44 9145 92 93 Splits the database on the given Split param s param This 94 is the same as calling code s apply code on the 95 class Database class 96 param s The split describing how to split the database 97 return An array of length 2 containing the left side of the 98 split in th index and the right side in the first 99 see class Split class 1 1 1 public Database split Split s 1 2 1 3 return s apply this 1 4 1 5 1 6 1 7 Splits the database in the manner described by the attributes This 1 8 is the same as calling code s apply code on the 1 9 class Database class where code s code is a class Split class 11 instance built with the same arguments passed to this method 111 param att The attribute on which to split data 112 param value The value which will split the data 113 param method The method by which the data will be split e g equality 114 less than or greater etc 115 return An array of length 2 containing the left side of the 116 split in th index and the right side in the first 117 see class Split class 118 119 public Database split Attribute att Object value Split Method method 12 121 return new Split att value method apply this 122 123 124 125 Returns how much information is gained on average by knowing 126 param condAtt param 127 return The entropy of param att param minus the conditional 128 entropy of param att param given param condAtt param 129 13 public double gain Attribute splitAttribute Attribute classificationTarget 131 132 Calculate the frequency of each of the values in the given attribute 133 Map Object Integer freqs new TreeMap Object Integer 134 for Record i this 135 if freqs containsKey i get splitAttribute 136 freqs put i get splitAttribute freqs get i get splitAttribute 1 137 else 138 freqs put i get splitAttribute 1 139 14 141 double sum 142 for Object value freqs keySet 143 Database righthand new Database true 144 for Record i this 145 if i get splitAttribute value 146 righthand add i 147 148 double probability double freqs get value sum freqs values 149 double e righthand entropy classificationTarget 15 sum probability e 151 152 153 return entropy classificationTarget sum 154 155 156 157 Returns how much information is gained on average by knowing 158 param condAtt param 159 16 return The entropy of param att param minus the conditional entropy 161 of param att param given param condAtt param 162 163 public double gain Split s Attribute classificationTarget 164 if this size 165 return 166 else 167 Database parts this split s 168 169 double totalE entropy classificationTarget 17 double conditionalEntropy new double parts length 171 172 double sum 173 int n 174 for Database i parts 175 conditionalEntropy n double i size this size 176 i entropy classificationTarget 177 sum conditionalEntropy n 178 n 179 18 181 return totalE sum 182 183 184 185 public Object getMajorityValueFor Attribute target 186 187 Map Object Integer freqs new TreeMap Object Integer 188 for Record r this 189 if freqs containsKey r get target 19 freqs put r get target 1 191 else 192 freqs put r get target freqs get r get target 1 193 194 195 int highestF Integer MIN VALUE 196 Object highestObject null 197 for Object v freqs keySet 198 if freqs get v highestF 199 highestF freqs get v 2 highestObject v 2 1 2 2 2 3 2 4 return highestObject 2 5 2 6 2 7 public Object clone 2 8 2 9 Database d new Database false 21 for Record r this 211 try 212 d add Record r clone 213 214 catch CloneNotSupportedException e 215 log severe Record in database threw a CloneNotSupportedException Skipping 216 217 218 return d 219 22 221 private static double log2 double d 222 return Math log d Math log 2 223 224 225 private static int sum Collection Integer a 226 int t 227 for int x a 228 t x 229 return t 46 public Iterator Record iterator 47 return inner iterator 23 48 23149 Note See TracChangeset for help on using the changeset viewer Download in other formats Unified Diff Zip Archive Powered by Trac 1 1 By Edgewall Software All content copyright 2 7 2 8 by LUCI http luci ics uci edu ", "_id": "http://djp3-pc2.ics.uci.edu/LUCICodeRepository/nomaticIM/changeset/450/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/MemDatabase.java", "title": "\n      changeset 450 for nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/memdatabase.java \u2013 nomatic*im\n    ", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n  \n\n\n  <head>\n\t\t<title>\n      Changeset 450 for nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/MemDatabase.java \u2013 Nomatic*IM\n    </title><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><link rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search\" /><link rel=\"help\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\" /><link rel=\"alternate\" href=\"?format=diff&amp;new=450\" type=\"text/plain\" class=\"diff\" title=\"Unified Diff\" /><link rel=\"alternate\" href=\"?format=zip&amp;new=450\" type=\"application/zip\" class=\"zip\" title=\"Zip Archive\" /><link rel=\"next\" href=\"/LUCICodeRepository/nomaticIM/changeset/480/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/MemDatabase.java\" title=\"Changeset 480 for nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/MemDatabase.java\" /><link rel=\"start\" href=\"/LUCICodeRepository/nomaticIM/wiki\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/changeset.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/diff.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/code.css\" type=\"text/css\" /><link rel=\"prev\" href=\"/LUCICodeRepository/nomaticIM/changeset/414/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/Database.java\" title=\"Changeset 414 for nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/MemDatabase.java\" /><link rel=\"shortcut icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link rel=\"icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link type=\"application/opensearchdescription+xml\" rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search/opensearch\" title=\"Search Nomatic*IM\" /><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/jquery.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/babel.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/messages/en_US.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/trac.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/search.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/diff.js\"></script><script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\".trac-toggledeleted\").show().click(function() {\n                  $(this).siblings().find(\".trac-deleted\").toggle();\n                  return false;\n        }).click();\n        $(\"#content\").find(\"li.entry h2 a\").parent().addAnchor(_(\"Link to this diff\"));\n      });\n    </script>\n\t</head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://luci.ics.uci.edu/#code\"><img src=\"http://luci.ics.uci.edu/blog/archives/LUCIhorzTight.jpg\" alt=\"LUCI Code Repository\" /></a>\n      </div>\n      <form id=\"search\" action=\"/LUCICodeRepository/nomaticIM/search\" method=\"get\">\n        <div>\n          <label for=\"proj-search\">Search:</label>\n          <input type=\"text\" id=\"proj-search\" name=\"q\" size=\"18\" value=\"\" />\n          <input type=\"submit\" value=\"Search\" />\n        </div>\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/login\">Login</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/prefs\">Preferences</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\">Help/Guide</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/wiki\">Wiki</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/timeline\">Timeline</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/roadmap\">Roadmap</a></li><li class=\"active\"><a href=\"/LUCICodeRepository/nomaticIM/browser\">Browse Source</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/report\">View Tickets</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/search\">Search</a></li>\n    </ul>\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><span>&larr; <a class=\"prev\" href=\"/LUCICodeRepository/nomaticIM/changeset/414/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/Database.java\" title=\"Changeset 414 for nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/MemDatabase.java\">Previous Change</a></span></li><li class=\"last\"><span><a class=\"next\" href=\"/LUCICodeRepository/nomaticIM/changeset/480/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/MemDatabase.java\" title=\"Changeset 480 for nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/MemDatabase.java\">Next Change</a> &rarr;</span></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"changeset\">\n      <div id=\"title\">\n            <h1>Changeset <a title=\"Show full changeset\" href=\"/LUCICodeRepository/nomaticIM/changeset/450\">450</a>\n              for <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/MemDatabase.java?rev=450\">nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/MemDatabase.java</a></h1>\n      </div>\n      <form id=\"prefs\" action=\"\">\n        <div>\n          \n  <label for=\"style\">View differences</label>\n  <select id=\"style\" name=\"style\">\n    <option selected=\"selected\" value=\"inline\">inline</option>\n    <option value=\"sidebyside\">side by side</option>\n  </select>\n  <div class=\"field\">\n    <label><input type=\"radio\" name=\"contextall\" value=\"0\" checked=\"checked\" />\n             Show</label>\n      <label><input type=\"text\" name=\"contextlines\" id=\"contextlines\" size=\"2\" maxlength=\"3\" value=\"2\" />\n             lines around each change</label><br />\n    <label><input type=\"radio\" name=\"contextall\" value=\"1\" />\n           Show the changes in full context</label>\n  </div>\n  <fieldset id=\"ignore\">\n    <legend>Ignore:</legend>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignoreblanklines\" name=\"ignoreblanklines\" />\n      <label for=\"ignoreblanklines\">Blank lines</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorecase\" name=\"ignorecase\" />\n      <label for=\"ignorecase\">Case changes</label>\n    </div>\n    <div class=\"field\">\n      <input type=\"checkbox\" id=\"ignorewhitespace\" name=\"ignorewhitespace\" />\n      <label for=\"ignorewhitespace\">White space changes</label>\n    </div>\n  </fieldset>\n  <div class=\"buttons\">\n    <input type=\"submit\" name=\"update\" value=\"Update\" />\n  </div>\n\n        </div>\n      </form>\n      <dl id=\"overview\">\n          <dt class=\"property time\">Timestamp:</dt>\n          <dd class=\"time\">\n             Sep 6, 2007, 12:15:11 PM\n             (<a class=\"timeline\" href=\"/LUCICodeRepository/nomaticIM/timeline?from=2007-09-06T12%3A15%3A11-07%3A00&amp;precision=second\" title=\"See timeline at Sep 6, 2007, 12:15:11 PM\">7 years</a> ago)\n          </dd>\n          <dt class=\"property author\">Author:</dt>\n          <dd class=\"author\">sam</dd>\n          <dt class=\"property message\">Message:</dt>\n          <dd class=\"message searchable\">\n            \n            \n              <p>\nAdded active process storage and SQLite storage.  Closes <a class=\"closed ticket\" href=\"/LUCICodeRepository/nomaticIM/ticket/3\" title=\"task: SQLLite integration for instance database (closed: fixed)\">#3</a>.<br />\n</p>\n\n            \n            \n          </dd>\n        <dt class=\"property files\">\n          File:\n        </dt>\n        <dd class=\"files\">\n          <div class=\"legend\" id=\"file-legend\">\n            <dl>\n              <dt class=\"cp\"></dt><dd>1 copied</dd>\n            </dl>\n          </div>\n          <br />\n          <ul>\n            <li>\n          <div class=\"cp\"> </div>\n            <a title=\"Show entry in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/MemDatabase.java?rev=450\">\n              nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/MemDatabase.java\n            </a>\n          <span class=\"comment\">(copied)</span>\n            <small><em>(copied from <a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/Database.java?rev=414\" title=\"Show original file (revision 444)\">\n                nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/Database.java</a>)</em></small>\n              (<a title=\"Show differences\" href=\"#file0\">2 diffs</a>)\n            </li>\n          </ul>\n        </dd>\n      </dl>\n      <div class=\"diff\">\n        <div class=\"legend\" id=\"diff-legend\">\n          <h3>Legend:</h3>\n          <dl>\n            <dt class=\"unmod\"></dt><dd>Unmodified</dd>\n            <dt class=\"add\"></dt><dd>Added</dd>\n            <dt class=\"rem\"></dt><dd>Removed</dd>\n          </dl>\n        </div>\n        <div class=\"diff\">\n  <ul class=\"entries\">\n      <li class=\"entry\">\n        <h2 id=\"file0\">\n          <a href=\"/LUCICodeRepository/nomaticIM/changeset/450/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/MemDatabase.java\" title=\"Show the changeset 450 restricted to nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/MemDatabase.java\">nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/MemDatabase.java</a>\n        </h2>\n        <table class=\"trac-diff inline\" summary=\"Differences\" cellspacing=\"0\">\n              <colgroup><col class=\"lineno\" /><col class=\"lineno\" /><col class=\"content\" /></colgroup>\n              <thead>\n                <tr>\n                  <th title=\"Revision 444\">\n                    <a title=\"Show revision 444 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/Database.java?rev=414#L1\">\n                      r444</a>\n                  </th>\n                  <th title=\"Revision 450\">\n                    <a title=\"Show revision 450 of this file in browser\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/MemDatabase.java?rev=450#L1\">\n                      r450</a>\n                  </th>\n                  <td>\u00a0</td>\n                </tr>\n              </thead>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>1</th><th>1</th><td class=\"l\"><span>package edu.uci.ics.luci.nomatic.service.learning;</span>\u00a0</td>\n                  </tr><tr>\n                          <th>2</th><th>2</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"last first\">\n                          <th>3</th><th>\u00a0</th><td class=\"l\"><del>import java.io.*;</del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>4</th><th>3</th><td class=\"l\"><span>import java.util.*;</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"rem\">\n                  <tr class=\"last first\">\n                          <th>5</th><th>\u00a0</th><td class=\"l\"><del>import java.util.logging.Logger;</del>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>6</th><th>4</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr><tr>\n                          <th>7</th><th>5</th><td class=\"l\"><span>/**</span>\u00a0</td>\n                  </tr>\n            </tbody>\n              <tbody class=\"skipped\">\n                <tr>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/Database.java?rev=414#L9\">\u2026</a></th>\n                  <th><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/service/edu/uci/ics/luci/nomatic/service/learning/MemDatabase.java?rev=450#L7\">\u2026</a></th>\n                  <td>\u00a0</td>\n                </tr>\n              </tbody>\n            <tbody class=\"unmod\">\n                  <tr>\n                          <th>9</th><th>7</th><td class=\"l\"><span>&nbsp;* @author Sam Kaufman</span>\u00a0</td>\n                  </tr><tr>\n                          <th>10</th><th>8</th><td class=\"l\"><span>&nbsp;*/</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>11</th><th>\u00a0</th><td class=\"l\"><span>public class <del>Database extends ArrayList&lt;Record&gt; implements Serializable</del>, Cloneable {</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>9</th><td class=\"r\"><span>public class <ins>MemDatabase extends Database implements Iterable&lt;Record&gt;</ins>, Cloneable {</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>12</th><th>10</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>13</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; private static Logger log = Logger.getLogger(DecisionTree.class.getName());</span>\u00a0</td>\n                      </tr><tr>\n                        <th>14</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; private static final long serialVersionUID = -6748333620347219276L;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>15</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>16</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; protected boolean quiet;</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>11</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; private ArrayList&lt;Record&gt; inner = new ArrayList&lt;Record&gt;();</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>17</th><th>12</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>18</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public Database() {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>19</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; this(false);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>20</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>21</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>22</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public Database(boolean quiet) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>23</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; this.quiet = quiet;</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>13</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* (non-Javadoc)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>14</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* @see edu.uci.ics.luci.nomatic.service.learning.Database#add(edu.uci.ics.luci.nomatic.service.learning.Record)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>15</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*/</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>16</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public void add(Record o) {</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>17</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; inner.add(o);</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>24</th><th>18</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>25</th><th>19</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr><tr>\n                          <th>26</th><th>20</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* (non-Javadoc)</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>27</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* @see <del>java.util.ArrayList#add(int, java.lang.Object</del>)</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>21</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* @see <ins>edu.uci.ics.luci.nomatic.service.learning.Database#size(</ins>)</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>28</th><th>22</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*/</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>29</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; @Override</span>\u00a0</td>\n                      </tr><tr>\n                        <th>30</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public void add(int index, Record element) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>31</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; super.add(index, element);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>32</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (!quiet)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>33</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; log.fine(\"Added a record to a database. Now contains \"+this.size()+\".\");</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>23</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public long size() {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>24</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return inner.size();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>25</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>26</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>27</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* (non-Javadoc)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>28</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* @see edu.uci.ics.luci.nomatic.service.learning.Database#contains(edu.uci.ics.luci.nomatic.service.learning.Record)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>29</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*/</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>30</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public boolean contains(Record r) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>31</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return inner.contains(r);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>32</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>33</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>34</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public Object clone() {</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>35</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return copy();</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>34</th><th>36</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>35</th><th>37</th><td class=\"l\"><span></span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>36</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* (non-Javadoc)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>37</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* @see java.util.ArrayList#add(java.lang.Object)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>38</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*/</span>\u00a0</td>\n                      </tr><tr>\n                        <th>39</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; @Override</span>\u00a0</td>\n                      </tr><tr>\n                        <th>40</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public boolean add(Record o) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>41</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; boolean r = super.add(o);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>42</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; log.fine(\"Added a record to a database. Now contains \"+this.size()+\".\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>43</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return r;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>44</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>45</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>46</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* (non-Javadoc)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>47</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* @see java.util.ArrayList#addAll(java.util.Collection)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>48</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*/</span>\u00a0</td>\n                      </tr><tr>\n                        <th>49</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; @Override</span>\u00a0</td>\n                      </tr><tr>\n                        <th>50</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public boolean addAll(Collection&lt;? extends Record&gt; c) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>51</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; boolean r = super.addAll(c);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>52</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (!quiet)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>53</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; log.fine(\"Added \"+c.size()+\" records to a database. Now contains \"+this.size()+\".\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>54</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return r;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>55</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>56</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>57</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /* (non-Javadoc)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>58</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* @see java.util.ArrayList#addAll(int, java.util.Collection)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>59</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*/</span>\u00a0</td>\n                      </tr><tr>\n                        <th>60</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; @Override</span>\u00a0</td>\n                      </tr><tr>\n                        <th>61</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public boolean addAll(int index, Collection&lt;? extends Record&gt; c) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>62</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; boolean r = super.addAll(index, c);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>63</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (!quiet)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>64</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; log.fine(\"Added \"+c.size()+\" records to a database. Now contains \"+this.size()+\".\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>65</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return r;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>66</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>67</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>68</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /**</span>\u00a0</td>\n                      </tr><tr>\n                        <th>69</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* Calculates the entropy of the database a given attribute.</span>\u00a0</td>\n                      </tr><tr>\n                        <th>70</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* @att The attribute designating the values from which entropy will be found.</span>\u00a0</td>\n                      </tr><tr>\n                        <th>71</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* @return The entropy of the database for the given attribute &lt;param&gt;att&lt;/param&gt;.</span>\u00a0</td>\n                      </tr><tr>\n                        <th>72</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*/</span>\u00a0</td>\n                      </tr><tr>\n                        <th>73</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public double entropy(Attribute att)</span>\u00a0</td>\n                      </tr>\n                      <tr class=\"last\">\n                        <th>\u00a0</th><th>38</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public MemDatabase copy()</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>74</th><th>39</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>75</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Map&lt;Object,Integer&gt; freqs = new TreeMap&lt;Object,Integer&gt;();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>76</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; double dataEntropy = 0.0;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>77</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>78</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Calculate the frequency of each of the values in the given attribute</span>\u00a0</td>\n                      </tr><tr>\n                        <th>79</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (Record i : this) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>80</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (freqs.containsKey(i.get(att)))</span>\u00a0</td>\n                      </tr><tr>\n                        <th>81</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; freqs.put(i.get(att), freqs.get(i.get(att)) + 1);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>82</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else</span>\u00a0</td>\n                      </tr><tr>\n                        <th>83</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; freqs.put(i.get(att), 1);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>84</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>85</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>86</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (int freq : freqs.values())</span>\u00a0</td>\n                      </tr><tr>\n                        <th>87</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dataEntropy += ((double) -freq/this.size()) * log2((double) freq/this.size());</span>\u00a0</td>\n                      </tr><tr>\n                        <th>88</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>89</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return dataEntropy;</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>40</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MemDatabase d = new MemDatabase();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>41</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (Record r : this)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>\u00a0</th><th>42</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; d.add((Record) r.clone());</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>43</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return d;</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>90</th><th>44</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>91</th><th>45</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                  </tr>\n            </tbody><tbody class=\"mod\">\n                      <tr class=\"first\">\n                        <th>92</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /**</span>\u00a0</td>\n                      </tr><tr>\n                        <th>93</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* Splits the database on the given Split &lt;param&gt;s&lt;/param&gt;. This</span>\u00a0</td>\n                      </tr><tr>\n                        <th>94</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* is the same as calling &lt;code&gt;s.apply&lt;/code&gt; on the</span>\u00a0</td>\n                      </tr><tr>\n                        <th>95</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* &lt;class&gt;Database&lt;/class&gt;.</span>\u00a0</td>\n                      </tr><tr>\n                        <th>96</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* @param s The split describing how to split the database.</span>\u00a0</td>\n                      </tr><tr>\n                        <th>97</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* @return An array of length 2, containing the left side of the</span>\u00a0</td>\n                      </tr><tr>\n                        <th>98</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;split in 0-th index, and the right side in the first.</span>\u00a0</td>\n                      </tr><tr>\n                        <th>99</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* @see &lt;class&gt;Split&lt;/class&gt;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>100</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*/</span>\u00a0</td>\n                      </tr><tr>\n                        <th>101</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public Database[] split(Split s)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>102</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>103</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return s.apply(this);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>104</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>105</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>106</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /**</span>\u00a0</td>\n                      </tr><tr>\n                        <th>107</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* Splits the database in the manner described by the attributes. This</span>\u00a0</td>\n                      </tr><tr>\n                        <th>108</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* is the same as calling &lt;code&gt;s.apply&lt;/code&gt; on the</span>\u00a0</td>\n                      </tr><tr>\n                        <th>109</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* &lt;class&gt;Database&lt;/class&gt;, where &lt;code&gt;s&lt;/code&gt; is a &lt;class&gt;Split&lt;/class&gt;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>110</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* instance built with the same arguments passed to this method.</span>\u00a0</td>\n                      </tr><tr>\n                        <th>111</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* @param att The attribute on which to split data.</span>\u00a0</td>\n                      </tr><tr>\n                        <th>112</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* @param value The value which will split the data.</span>\u00a0</td>\n                      </tr><tr>\n                        <th>113</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* @param method The method by which the data will be split.&nbsp; (e.g. equality,</span>\u00a0</td>\n                      </tr><tr>\n                        <th>114</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* less-than-or-greater, etc.)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>115</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* @return An array of length 2, containing the left side of the</span>\u00a0</td>\n                      </tr><tr>\n                        <th>116</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;split in 0-th index, and the right side in the first.</span>\u00a0</td>\n                      </tr><tr>\n                        <th>117</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* @see &lt;class&gt;Split&lt;/class&gt;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>118</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*/</span>\u00a0</td>\n                      </tr><tr>\n                        <th>119</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public Database[] split(Attribute att, Object value, Split.Method method)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>120</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>121</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return new Split(att, value, method).apply(this);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>122</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>123</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>124</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /**</span>\u00a0</td>\n                      </tr><tr>\n                        <th>125</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* Returns how much information is gained, on average, by knowing</span>\u00a0</td>\n                      </tr><tr>\n                        <th>126</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* &lt;param&gt;condAtt&lt;/param&gt;.</span>\u00a0</td>\n                      </tr><tr>\n                        <th>127</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* @return The entropy of &lt;param&gt;att&lt;/param&gt; minus the conditional</span>\u00a0</td>\n                      </tr><tr>\n                        <th>128</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;entropy of &lt;param&gt;att&lt;/param&gt; given &lt;/param&gt;condAtt&lt;/param&gt;.</span>\u00a0</td>\n                      </tr><tr>\n                        <th>129</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*/</span>\u00a0</td>\n                      </tr><tr>\n                        <th>130</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public double gain(Attribute splitAttribute, Attribute classificationTarget)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>131</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>132</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Calculate the frequency of each of the values in the given attribute</span>\u00a0</td>\n                      </tr><tr>\n                        <th>133</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Map&lt;Object,Integer&gt; freqs = new TreeMap&lt;Object,Integer&gt;();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>134</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (Record i : this) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>135</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (freqs.containsKey(i.get(splitAttribute)))</span>\u00a0</td>\n                      </tr><tr>\n                        <th>136</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; freqs.put(i.get(splitAttribute), freqs.get(i.get(splitAttribute)) + 1);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>137</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else</span>\u00a0</td>\n                      </tr><tr>\n                        <th>138</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; freqs.put(i.get(splitAttribute), 1);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>139</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>140</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>141</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; double sum = 0.0;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>142</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (Object value : freqs.keySet()) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>143</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Database righthand = new Database(true);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>144</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (Record i : this) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>145</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (i.get(splitAttribute) == value)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>146</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; righthand.add(i);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>147</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>148</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; double probability = ((double)freqs.get(value))/sum(freqs.values());</span>\u00a0</td>\n                      </tr><tr>\n                        <th>149</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; double e = righthand.entropy(classificationTarget);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>150</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sum += probability*e;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>151</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>152</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>153</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return entropy(classificationTarget) - sum;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>154</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>155</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>156</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; /**</span>\u00a0</td>\n                      </tr><tr>\n                        <th>157</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* Returns how much information is gained, on average, by knowing</span>\u00a0</td>\n                      </tr><tr>\n                        <th>158</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* &lt;param&gt;condAtt&lt;/param&gt;.</span>\u00a0</td>\n                      </tr><tr>\n                        <th>159</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* </span>\u00a0</td>\n                      </tr><tr>\n                        <th>160</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* @return The entropy of &lt;param&gt;att&lt;/param&gt; minus the conditional entropy</span>\u00a0</td>\n                      </tr><tr>\n                        <th>161</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;of &lt;param&gt;att&lt;/param&gt; given &lt;/param&gt;condAtt&lt;/param&gt;.</span>\u00a0</td>\n                      </tr><tr>\n                        <th>162</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*/</span>\u00a0</td>\n                      </tr><tr>\n                        <th>163</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public double gain(Split s, Attribute classificationTarget) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>164</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (this.size() == 0) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>165</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return (0.0);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>166</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>167</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Database[] parts = this.split(s);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>168</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>169</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; double totalE = entropy(classificationTarget);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>170</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; double[] conditionalEntropy = new double[parts.length];</span>\u00a0</td>\n                      </tr><tr>\n                        <th>171</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>172</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; double sum = 0.0;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>173</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int n = 0;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>174</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (Database i : parts) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>175</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; conditionalEntropy[n] = (((double) i.size()) / this.size())</span>\u00a0</td>\n                      </tr><tr>\n                        <th>176</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; * i.entropy(classificationTarget);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>177</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sum += conditionalEntropy[n];</span>\u00a0</td>\n                      </tr><tr>\n                        <th>178</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; n++;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>179</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>180</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>181</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return (totalE - sum);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>182</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>183</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>184</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>185</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public Object getMajorityValueFor(Attribute target)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>186</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>187</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Map&lt;Object,Integer&gt; freqs = new TreeMap&lt;Object,Integer&gt;();</span>\u00a0</td>\n                      </tr><tr>\n                        <th>188</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (Record r : this) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>189</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (!freqs.containsKey(r.get(target)))</span>\u00a0</td>\n                      </tr><tr>\n                        <th>190</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; freqs.put(r.get(target), 1);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>191</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else</span>\u00a0</td>\n                      </tr><tr>\n                        <th>192</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; freqs.put(r.get(target), freqs.get(r.get(target))+1);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>193</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>194</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>195</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int highestF = Integer.MIN_VALUE;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>196</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Object highestObject = null;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>197</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (Object v : freqs.keySet()) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>198</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (freqs.get(v) &gt; highestF){</span>\u00a0</td>\n                      </tr><tr>\n                        <th>199</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; highestF = freqs.get(v);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>200</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; highestObject = v;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>201</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>202</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>203</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>204</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return highestObject;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>205</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>206</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>207</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public Object clone()</span>\u00a0</td>\n                      </tr><tr>\n                        <th>208</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>209</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Database d = new Database(false);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>210</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (Record r : this) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>211</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>212</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; d.add((Record) r.clone());</span>\u00a0</td>\n                      </tr><tr>\n                        <th>213</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>214</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; catch (CloneNotSupportedException e) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>215</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; log.severe(\"Record in database threw a CloneNotSupportedException. Skipping.\");</span>\u00a0</td>\n                      </tr><tr>\n                        <th>216</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>217</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>218</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return d;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>219</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>220</th><th>\u00a0</th><td class=\"l\"><span></span>\u00a0</td>\n                      </tr><tr>\n                        <th>221</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; private static double log2(double d) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>222</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return Math.log(d)/Math.log(2.0);</span>\u00a0</td>\n                      </tr><tr>\n                        <th>223</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                      </tr><tr>\n                        <th>224</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; </span>\u00a0</td>\n                      </tr><tr>\n                        <th>225</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; private static int sum(Collection&lt;Integer&gt; a) {</span>\u00a0</td>\n                      </tr><tr>\n                        <th>226</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int t = 0;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>227</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (int x : a)</span>\u00a0</td>\n                      </tr><tr>\n                        <th>228</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; t += x;</span>\u00a0</td>\n                      </tr><tr>\n                        <th>229</th><th>\u00a0</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return t;</span>\u00a0</td>\n                      </tr>\n                      <tr>\n                        <th>\u00a0</th><th>46</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; public Iterator&lt;Record&gt; iterator() {</span>\u00a0</td>\n                      </tr><tr class=\"last\">\n                        <th>\u00a0</th><th>47</th><td class=\"r\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return inner.iterator();</span>\u00a0</td>\n                      </tr>\n            </tbody><tbody class=\"unmod\">\n                  <tr>\n                          <th>230</th><th>48</th><td class=\"l\"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span>\u00a0</td>\n                  </tr><tr>\n                          <th>231</th><th>49</th><td class=\"l\"><span>}</span>\u00a0</td>\n                  </tr>\n            </tbody>\n        </table>\n      </li>\n  </ul>\n</div>\n        <div id=\"help\"><strong>Note:</strong> See <a href=\"/LUCICodeRepository/nomaticIM/wiki/TracChangeset\">TracChangeset</a>\n          for help on using the changeset viewer.</div>\n      </div>\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"first\">\n          <a rel=\"nofollow\" href=\"?format=diff&amp;new=450\" class=\"diff\">Unified Diff</a>\n        </li><li class=\"last\">\n          <a rel=\"nofollow\" href=\"?format=zip&amp;new=450\" class=\"zip\">Zip Archive</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/LUCICodeRepository/nomaticIM/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/LUCICodeRepository/nomaticIM/about\"><strong>Trac 1.0.1</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">All content copyright 2007-2008 by LUCI <br /><a href=\"http://luci.ics.uci.edu/\">http://luci.ics.uci.edu/</a></p>\n    </div>\n\t\t<div id=\"sitefooter\">\n\t\t\t<script src=\"http://www.google-analytics.com/urchin.js\" type=\"text/javascript\">\n\t\t\t</script>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t\t_uacct = \"UA-338915-2\";\n\t\t\t\turchinTracker();\n\t\t\t</script>\n\t\t</div>\n\t</body>\n</html>", "id": 38386.0}