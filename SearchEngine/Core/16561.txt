{"text": "System Initiation Planning where do systems come from In most situations new feasible systems replace or supplement existing information processing mechanisms whether they were previously automated manual or informal Requirement Analysis and Specification identifies the problems a new software system is suppose to solve its operational capabilities its desired performance characteristics and the resource infrastructure needed to support system operation and maintenance Functional Specification or Prototyping identifies and potentially formalizes the objects of computation their attributes and relationships the operations that transform these objects the constraints that restrict system behavior and so forth Partition and Selection Build vs Buy vs Reuse given requirements and functional specifications divide the system into manageable pieces that denote logical subsystems then determine whether new existing or reusable software systems correspond to the needed pieces Architectural Design and Configuration Specification defines the interconnection and resource interfaces between system subsystems components and modules in ways suitable for their detailed design and overall configuration management Detailed Component Design Specification defines the procedural methods through which the data resources within the modules of a component are transformed from required inputs into provided outputs Component Implementation and Debugging codifies the preceding specifications into operational source code implementations and validates their basic operation Software Integration and Testing affirms and sustains the overall integrity of the software system architectural configuration through verifying the consistency and completeness of implemented modules verifying the resource interfaces and interconnections against their specifications and validating the performance of the system and subsystems against their requirements Documentation Revision and System Delivery packaging and rationalizing recorded system development descriptions into systematic documents and user guides all in a form suitable for dissemination and system support Deployment and Installation providing directions for installing the delivered software into the local computing environment configuring operating systems parameters and user access privileges and running diagnostic test cases to assure the viability of basic system operation Training and Use providing system users with instructional aids and guidance for understanding the system s capabilities and limits in order to effectively use the system Software Maintenance sustaining the useful operation of a system in its host target environment by providing requested functional enhancements repairs performance improvements and conversions ", "_id": "http://www.ics.uci.edu/~wscacchi/Software-Process/Software-Life-Cycle-Models/Software-Life-Cycle-Activities.htm", "title": "system initiation/planning: where do systems come from", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\r\n<html>\r\n<head>\r\n   \r\n  <meta http-equiv=\"Content-Type\"\r\n content=\"text/html; charset=windows-1252\">\r\n   \r\n  <meta name=\"Generator\" content=\"Microsoft Word 97\">\r\n  <title>System Initiation/Planning: where do systems come from</title>\r\n</head>\r\n<body>\r\n <i><font size=\"5\"></font></i> \r\n<p><i><font size=\"5\">System Initiation/Planning:</font></i> where do systems \r\ncome from? In most situations, new feasible systems replace or supplement \r\nexisting information processing mechanisms whether they were previously automated, \r\nmanual, or informal. </p>\r\n <i><font size=\"5\"></font></i> \r\n<p><i><font size=\"5\">Requirement Analysis and Specification:</font></i> identifies \r\nthe problems a new software system is suppose to solve, its operational capabilities, \r\nits desired performance characteristics, and the resource infrastructure needed\r\nto support system operation and maintenance. </p>\r\n <i><font size=\"5\"></font></i> \r\n<p><i><font size=\"5\">Functional Specification or Prototyping</font></i><font\r\n size=\"5\">:</font> identifies and potentially formalizes the objects of computation, \r\ntheir attributes and relationships, the operations that transform these objects, \r\nthe constraints that restrict system behavior, and so forth. </p>\r\n <i><font size=\"5\"></font></i> \r\n<p><i><font size=\"5\">Partition and Selection</font></i> (Build vs. Buy vs. \r\nReuse): given requirements and functional specifications, divide the system \r\ninto manageable pieces that denote logical subsystems, then determine whether \r\nnew, existing, or reusable software systems correspond to the needed pieces. \r\n</p>\r\n <i><font size=\"5\"></font></i> \r\n<p><i><font size=\"5\">Architectural Design and Configuration Specification</font></i>: \r\ndefines the interconnection and resource interfaces between system subsystems, \r\ncomponents, and modules in ways suitable for their detailed design and overall \r\nconfiguration management. </p>\r\n <i><font size=\"5\"></font></i> \r\n<p><i><font size=\"5\">Detailed Component Design Specification</font></i><font\r\n size=\"5\">:</font> defines the procedural methods through which the data resources\r\nwithin the modules of a component are transformed from required inputs into\r\nprovided outputs. </p>\r\n <i><font size=\"5\"></font></i> \r\n<p><i><font size=\"5\">Component Implementation and Debugging</font></i><font\r\n size=\"5\">:</font> codifies the preceding specifications into operational \r\nsource code implementations and validates their basic operation. </p>\r\n <i><font size=\"5\"></font></i> \r\n<p><i><font size=\"5\">Software Integration and <a\r\n href=\"Software_Test_Processes.html\">Testing</a></font></i><font\r\n size=\"5\">:</font> affirms and sustains the overall integrity of the software \r\nsystem architectural configuration through verifying the consistency and completeness\r\nof implemented modules, verifying the resource interfaces and interconnections\r\nagainst their specifications, and validating the performance of the system\r\nand subsystems against their requirements. </p>\r\n <i><font size=\"5\"></font></i> \r\n<p><i><font size=\"5\">Documentation Revision and System Delivery</font></i><font\r\n size=\"5\">:</font> packaging and rationalizing recorded system development \r\ndescriptions into systematic documents and user guides, all in a form suitable \r\nfor dissemination and system support. </p>\r\n <i><font size=\"5\"></font></i> \r\n<p><i><font size=\"5\">Deployment and Installation</font></i><font\r\n size=\"5\">:</font> providing directions for installing the delivered software \r\ninto the local computing <br>\r\n </p>\r\n \r\n<p>environment, configuring operating systems parameters and user access privileges,\r\nand running diagnostic test cases to assure the viability of basic system\r\noperation. </p>\r\n <i><font size=\"5\"></font></i> \r\n<p><i><font size=\"5\">Training and Us</font></i><font size=\"5\">e</font>: providing \r\nsystem users with instructional aids and guidance for understanding the system's \r\ncapabilities and limits in order to effectively use the system. </p>\r\n <i><font size=\"5\"></font></i> \r\n<p><i><font size=\"5\">Software Maintenance</font></i><font size=\"5\">:</font> \r\nsustaining the useful operation of a system in its host/target environment \r\nby providing requested functional enhancements, repairs, performance improvements, \r\nand conversions. </p>\r\n <br>\r\n <br>\r\n</body>\r\n</html>\r\n", "id": 16561.0}