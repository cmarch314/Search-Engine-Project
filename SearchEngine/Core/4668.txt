{"text": "Information and Computer Science 221A Software Engineering Fall Quarter 1996 Location CS 253 Tuesday and Thursday 9 3 1 5 Course code 3662 Last modified Wed Sept 18 1996 Instructors Professor Richard N Taylor and the Software Faculty Electronic Mail taylor ics uci edu Office ICS2 2 3 Office Phone 714 824 6429 Fax 714 824 4 56 Mailing Address Department of Information and Computer Science University of California Irvine Irvine California 92697 3425 Overview Readings Schedule Assignments Enrolled Students Overview and Prerequisite Knowledge From the UCI Catalog Study of the concepts methods and tools for the analysis design construction and measurement of complex software intensive systems Underlying principles emphasized State of the art software engineering and promising research areas covered including principles of software engineering requirements analysis design implementation testing and project management This class is a graduate survey of software engineering topics The instructors assume background in software engineering as well as some experience in developing software systems For example the course assumes knowledge of the basic ideas of software development phases e g requirements engineering design implementation software development processes such as the spiral model and the waterfall model software design methodologies such as design based on information hiding software testing and analysis strategies and project management issues e g chief programmer teams Students new to this area are advised to take ICS 121 as this course will not repeat basic material but rather will be focused on issues at the frontier of software engineering At the end of the class students should be knowledgeable about what key problems are currently being pursued by software researchers what the key approaches are and who are many of the leading researchers The vehicles for learning about the topics are readings from the textbook readings from the technical literature lectures and classroom discussion The class is co taught by the software faculty in order for specialty topics to be presented in depth Readings Required textbook Fundamentals of Software Engineering by Carlo Ghezzi Mehdi Jazayeri and Dino Mandrioli 1991 Prentice Hall Additional readings will be assigned from the Software Phase II Exam Reading List to supplement the text Schedule Subject to change Date Topic Instructor Papers Text Readings October 1 Introduction Taylor Ch 1 2 October 3 Overview Taylor Bro87 Ch 3 October 8 Software Processes Rosenblum Boe88 RW92 Ch 7 October 1 Software Process Tech Taylor Ost87 Ch 8 October 15 Extensible Systems Franz SFO ISAW 2 October 17 Extensible Systems Franz SFO FSE October 22 User Interface Software Taylor TNB 94 October 24 Software Architectures Taylor October 29 tbd Manassas October 31 Environments Taylor TM81 Ch 9 November 5 Environments Interoperability Taylor Kad92 November 7 HCI and Cognitive Design Redmiles November 12 Design Environments Redmiles FGNR92 November 14 Formal Methods Richardson Ch 6 November 19 Testing Rosenblum ICSEPC November 21 Analysis and Testing Richardson ICSEPC November 26 Hyperware and SW Eng Taylor November 28 Thanksgiving No class December 3 Metrics and Measurement Selby Brighton ICSP BSH86 December 5 Software Practice Selby Brighton ICSP Assignments and Assessment Paper topic summaries For each paper assigned during the class expectation about 1 12 you are required to submit a two page appx 8 word summary and evaluation One page should summarize the key points or contributions of the paper The second page should assess the applicability of the ideas problems in applying the ideas or provide other critical evaluation In aggregate these summaries will account for 4 of your grade Term paper Accounting for 3 of your grade the term paper is an in depth exploration of some current topic in software engineering The paper must be new for this class not a warmed over paper written for some other ICS class This paper may be largely survey in character Substantial latitude will be allowed in choosing the topic but all topics must be approved in advance by the instructor Class attendance and participation is critical This will account for 1 of your grade Final exam A final exam worth 2 will allow you to demonstrate your understanding of the papers and topics covered in class Enrolled Students your name goes here Department of Information and Computer Science University of California Irvine CA 92697 3425", "_id": "http://www.ics.uci.edu/~taylor/ics221/syllabus.html", "title": " ics 221 syllabus", "html": "<HTML>\n<head>\n<title> ICS 221 Syllabus</title>\n</head>\n\n<body  bgcolor=\"#fffff0\">\n<CENTER>\n<h1> \nInformation and Computer Science 221A:  Software Engineering\n</h1>\n\nFall Quarter, 1996 <br>\nLocation:  CS 253 <br>\nTuesday and Thursday, 9:30 -- 10:50 <br>\nCourse code:  36620\n</CENTER>\n\n\n<i> (Last modified Wed Sept 18 1996) </i><br>\n<hr>\n\n<h1> Instructors\n</h1>\n<ul>\n<LI> Professor \n<A HREF=\"http://www.ics.uci.edu/~taylor/\">\nRichard N. Taylor </a> and the \n<A HREF=\"http://www.ics.uci.edu/~taylor/software/soft.html\">\nSoftware </a>\nFaculty\n<LI> Electronic Mail: <A HREF=\"mailto:taylor@ics.uci.edu\">\ntaylor@ics.uci.edu </A>\n<LI> Office: ICS2-203\n<LI> Office Phone: (714) 824-6429\n<LI> Fax: (714) 824-4056\n<LI> Mailing Address:  \n\t<address>\n\t<A HREF=\"http://www.ics.uci.edu/\"> \n\tDepartment of Information and Computer Science</A>,  <br>\n\t<A HREF=\"http://www.uci.edu/\"> University of California, Irvine </a> <br>\n\tIrvine, California 92697-3425\n\t</address>\n</ul>\n\n<HR>\n<BR>\n<CENTER>\n<A HREF=\"#overview\">Overview</A> |\n<A HREF=\"#readings\">Readings</A> |\n<A HREF=\"#schedule\">Schedule</A> |\n<A HREF=\"#assignments\">Assignments</A> |\n<A HREF=\"#students\">Enrolled Students</A> \n<BR>\n</center>\n\n\n<HR>\n<a name=\"overview\"></a>\n<H1> Overview and Prerequisite Knowledge </H1>\n<P>\nFrom the UCI Catalog:\n<blockquote>\nStudy of the concepts, methods, and tools for the analysis, design,\nconstruction, and measurement of complex software-intensive systems.\nUnderlying principles emphasized.  State-of-the-art software engineering\nand promising research areas covered, including principles of software\nengineering, requirements analysis, design, implementation, testing,\nand project management.\n</blockquote>\n\n<P>\nThis class is a graduate survey of software engineering topics.  The\ninstructors assume background in software engineering, as well as some\nexperience in developing software systems.  For example, the course\nassumes knowledge of the basic ideas of:  software development phases\n(e.g., requirements engineering, design, implementation), software\ndevelopment processes (such as the spiral model and the waterfall\nmodel), software design methodologies (such as design based on\ninformation hiding), software testing and analysis strategies, and\nproject management issues (e.g. chief programmer teams).\nStudents new to this area are advised to take ICS 121, as this course\nwill not repeat basic material, but rather will be focused on issues at\nthe frontier of software engineering.  At the end of the class students\nshould be knowledgeable about what key problems are currently being\npursued by software researchers, what the key approaches are, and who are\nmany of the leading researchers.\n\n<P>\nThe vehicles for learning about the topics are readings from the textbook,\nreadings from the technical literature, lectures, and classroom discussion.\nThe class is co-taught by the software faculty in order for specialty topics\nto be presented in depth.\n\n<HR>\n<a name=\"readings\"></a>\n<H1> Readings </H1>\nRequired textbook:\n<ul>\n<li>  \n<A HREF=\"http://www.prenhall.com/013/820431/82043-1.html\">\n<em> Fundamentals of Software Engineering</em>, </A>\nby \n<A HREF=\"http://www.elet.polimi.it/people/ghezzi/index.html\">\nCarlo Ghezzi</a>,\n<A HREF=\"http://www.infosys.tuwien.ac.at/Staff/mj/mehdi.html\">\nMehdi Jazayeri, </A>\nand <A HREF=\"http://www.elet.polimi.it/people/mandriol/index.html\">\nDino Mandrioli, </A>\n1991.  Prentice-Hall.\n</ul>\n\nAdditional readings will be assigned from the \"Software Phase II Exam \nReading List\" to supplement the text.\n\n\n<HR>\n<a name=\"schedule\"></a>\n<H1> Schedule </H1>\n<em>Subject to change</em>\n<P>\n<CENTER>\n<TABLE BORDER CELLPADDING=2>\n<TR><TD> <STRONG>Date\t<TD><STRONG> Topic \t<TD> <STRONG>Instructor <TD><STRONG> Papers <TD> <Strong> Text Readings</STRONG>\n<TR><TD> October 1\t<TD> Introduction\t\t\t<TD> Taylor\t<TD> --- <TD> Ch. 1, 2\n<TR><TD> October 3\t<TD> Overview\t\t\t<TD> Taylor\t<TD> [Bro87] <TD> Ch. 3\n<TR><TD> October 8 \t<TD> Software Processes\t\t<TD> Rosenblum\t<TD> [Boe88] [RW92] <TD> Ch. 7\n<TR><TD> October 10 \t<TD> Software Process Tech.\t<TD> Taylor\t<TD> [Ost87] <TD> Ch. 8\n<TR><TD> October 15\t<TD> Extensible Systems\t\t<TD> Franz (SFO ISAW-2) <TD> ---  <TD> ---\n<TR><TD> October 17\t<TD> Extensible Systems\t\t<TD> Franz (SFO FSE)<TD> ---  <TD> ---\n<TR><TD> October 22\t<TD> User Interface Software\t<TD> Taylor<TD> [TNB+94] <TD> ---\n<TR><TD> October 24\t<TD> Software Architectures\t<TD> Taylor\t<TD> --- <TD> ---\n<TR><TD> October 29\t<TD> tbd\t\t\t\t<TD> (Manassas) <TD> --- <TD> ---\n<TR><TD> October 31\t<TD> Environments\t\t\t<TD> Taylor\t<TD> [TM81] <TD> Ch. 9\n<TR><TD> November 5\t<TD> Environments/Interoperability \t<TD> Taylor\t<TD> [Kad92] <TD> ---\n<TR><TD> November 7\t<TD> HCI and Cognitive Design\t<TD> Redmiles <TD> --- <TD> ---\n<TR><TD> November 12\t<TD> Design Environments\t<TD> Redmiles <TD> [FGNR92] <TD> ---\n<TR><TD> November 14\t<TD> Formal Methods\t\t<TD> Richardson <TD> --- <TD> Ch. 6\n<TR><TD> November 19\t<TD> Testing\t\t \t<TD> Rosenblum (ICSEPC) <TD> --- <TD> ---\n<TR><TD> November 21\t<TD> Analysis and Testing \t<TD> Richardson (ICSEPC) <TD> --- <TD> ---\n<TR><TD> November 26\t<TD> Hyperware and SW Eng. \t<TD> Taylor <TD> --- <TD> ---\n<TR><TD> November 28\t<TD> Thanksgiving/No class \t<TD> --- <TD> --- <TD> ---\n<TR><TD> December 3\t<TD> Metrics and Measurement\t<TD> Selby (Brighton ICSP) <TD> [BSH86] <TD> ---\n<TR><TD> December 5\t<TD> Software Practice\t\t<TD> Selby (Brighton ICSP) <TD> --- <TD> ---\n</TABLE>\n</CENTER>\n\n<HR>\n<a name=\"assignments\"></a>\n<H1> Assignments and Assessment </H1>\n\n<P>\n<ul>\n<li>  Paper/topic summaries.  For each paper assigned during the class\n(expectation:  about 10-12) you are required to submit a two-page (appx.\n800 word) summary and evaluation.  One page should summarize the key points\nor contributions of the paper.  The second page should assess the applicability\nof the ideas, problems in applying the ideas, or provide other critical\nevaluation.  In aggregate these summaries will account for 40% of your\ngrade.\n<li>  Term paper.  Accounting for 30% of your grade, the term paper is\nan in-depth exploration of some current topic in software engineering.\n(The paper must be new for this class, not a warmed-over paper written for\nsome other ICS class.)  This paper may be largely survey in character.\nSubstantial latitude will be allowed in choosing the topic, but all topics\nmust be approved in advance by the instructor.\n<li>  Class attendance and participation is critical.  This will account\nfor 10% of your grade.\n<li>  Final exam.  A final exam, worth 20%, will allow you to demonstrate\nyour understanding of the papers and topics covered in class.\n</ul>\n\n\n<hr>\n<a name=\"students\"></a>\n<H1> Enrolled Students </H1>\n<P>\n<ul>\n<li> <em> your name goes here.... </em>\n</ul>\n<P>\n\n<HR>\n<ADDRESS> \n<A HREF=\"http://www.ics.uci.edu/\"> Department of Information and Computer \nScience</A>, \n<BR>University of California, Irvine CA 92697-3425\n</ADDRESS>\n</BODY>\n</HTML>\n", "id": 4668.0}