{"text": "Search LoginPreferencesHelp GuideAbout Trac WikiTimelineRoadmapBrowse SourceView TicketsSearch Context Navigation BlameRevision Log source nomatic tags NomaticIM 5 buddy bots src twisted internet interfaces py View diff against View revision Visit trunk Last change on this file was 712 checked in by cbaker 7 years ago First draft of nomatic buddy bots oscar bot is functional if you give it good authentication credentials jabber bot is just an example from the web File size 42 5 KB Line 1 Copyright c 2 1 2 4 Twisted Matrix Laboratories 2 See LICENSE for details 345 Interface documentation 67API Stability stable other than IReactorUDP semi stable and8IReactorMulticast unstable 91 Maintainer U Itamar Shtull Trauring mailto twisted itamarst org 11 1213from zope interface import Interface141516class IAddress Interface 17 An address e g a TCP host port 1819 Default implementations are in L twisted internet address 2 212223 Reactor Interfaces2425class IConnector Interface 26 Object used to interface between connections and protocols 2728 Each IConnector manages one connection 29 3 31 def stopConnecting 32 Stop attempting to connect 3334 def disconnect 35 Disconnect regardless of the connection state 3637 If we are connected disconnect if we are trying to connect 38 stop trying 39 4 41 def connect 42 Try to connect to remote address 4344 def getDestination 45 Return destination this will try to connect to 4647 return An object which provides L IAddress 48 495 51class IResolverSimple Interface 52 def getHostByName name timeout 1 3 11 45 53 Resolve the domain name C name into an IP address 5455 type name C str 56 type timeout C tuple 57 rtype L twisted internet defer Deferred 58 return The callback of the Deferred that is returned will be59 passed a string that represents the IP address of the specified6 name or the errback will be called if the lookup times out If61 multiple types of address records are associated with the name 62 A6 records will be returned in preference to AAAA records which63 will be returned in preference to A records If there are multiple64 records of the type to be returned one will be selected at random 6566 raise twisted internet defer TimeoutError Raised asynchronously 67 if the name cannot be resolved within the specified timeout period 68 697 class IResolver IResolverSimple 71 def lookupRecord name cls type timeout 1 72 Lookup the records associated with the given name73 that are of the given type and in the given class 74 7576 def query query timeout 1 77 Interpret and dispatch a query object to the appropriate78 lookup method 79 8 81 def lookupAddress name timeout 1 82 Lookup the A records associated with C name 8384 def lookupAddress6 name timeout 1 85 Lookup all the A6 records associated with C name 8687 def lookupIPV6Address name timeout 1 88 Lookup all the AAAA records associated with C name 899 def lookupMailExchange name timeout 1 91 Lookup the MX records associated with C name 9293 def lookupNameservers name timeout 1 94 Lookup the the NS records associated with C name 9596 def lookupCanonicalName name timeout 1 97 Lookup the CNAME records associated with C name 9899 def lookupMailBox name timeout 1 1 Lookup the MB records associated with C name 1 11 2 def lookupMailGroup name timeout 1 1 3 Lookup the MG records associated with C name 1 41 5 def lookupMailRename name timeout 1 1 6 Lookup the MR records associated with C name 1 71 8 def lookupPointer name timeout 1 1 9 Lookup the PTR records associated with C name 11 111 def lookupAuthority name timeout 1 112 Lookup the SOA records associated with C name 113114 def lookupNull name timeout 1 115 Lookup the NULL records associated with C name 116117 def lookupWellKnownServices name timeout 1 118 Lookup the WKS records associated with C name 11912 def lookupHostInfo name timeout 1 121 Lookup the HINFO records associated with C name 122123 def lookupMailboxInfo name timeout 1 124 Lookup the MINFO records associated with C name 125126 def lookupText name timeout 1 127 Lookup the TXT records associated with C name 128129 def lookupResponsibility name timeout 1 13 Lookup the RP records associated with C name 131132 def lookupAFSDatabase name timeout 1 133 Lookup the AFSDB records associated with C name 134135 def lookupService name timeout 1 136 Lookup the SRV records associated with C name 137138 def lookupAllRecords name timeout 1 139 Lookup all records associated with C name 14 141 def lookupZone name timeout 1 142 Perform a zone transfer for the given C name 143144145class IReactorArbitrary Interface 146 def listenWith portType args kw 147 Start an instance of the given C portType listening 148149 type portType type which implements L IListeningPort 15 151 param portType The object given by C portType args kw will be152 started listening 153154 return an object which provides L IListeningPort 155 156157 def connectWith connectorType args kw 158 159 Start an instance of the given C connectorType connecting 16 161 type connectorType type which implements L IConnector 162163 param connectorType The object given by C connectorType args kw 164 will be started connecting 165166 return An object which provides L IConnector 167 168169class IReactorTCP Interface 17 171 def listenTCP port factory backlog 5 interface 172 Connects a given protocol factory to the given numeric TCP IP port 173174 param port a port number on which to listen175176 param factory a L twisted internet protocol ServerFactory instance177178 param backlog size of the listen queue17918 param interface the hostname to bind to defaults to all 181182 return an object that provides L IListeningPort 183184 raise CannotListenError as defined here185 L twisted internet error CannotListenError 186 if it cannot listen on this port e g it187 cannot bind to the required port number 188 18919 def connectTCP host port factory timeout 3 bindAddress None 191 Connect a TCP client 192193 param host a host name194195 param port a port number196197 param factory a L twisted internet protocol ClientFactory instance198199 param timeout number of seconds to wait before assuming the2 connection has failed 2 12 2 param bindAddress a host port tuple of local address to bind2 3 to or None 2 42 5 return An object which provides L IConnector This connector will2 6 call various callbacks on the factory when a connection is2 7 made failed or lost see2 8 L ClientFactory twisted internet protocol ClientFactory 2 9 docs for details 21 211212class IReactorSSL Interface 213214 def connectSSL host port factory contextFactory timeout 3 bindAddress None 215 Connect a client Protocol to a remote SSL socket 216217 param host a host name218219 param port a port number22 221 param factory a L twisted internet protocol ClientFactory instance222223 param contextFactory a L twisted internet ssl ClientContextFactory object 224225 param timeout number of seconds to wait before assuming the226 connection has failed 227228 param bindAddress a host port tuple of local address to bind to 229 or C None 23 231 return An object which provides L IConnector 232 233234 def listenSSL port factory contextFactory backlog 5 interface 235 236 Connects a given protocol factory to the given numeric TCP IP port 237 The connection is a SSL one using contexts created by the context238 factory 23924 param port a port number on which to listen241242 param factory a L twisted internet protocol ServerFactory instance243244 param contextFactory a L twisted internet ssl ContextFactory instance245246 param backlog size of the listen queue247248 param interface the hostname to bind to defaults to all 249 25 251252class IReactorUNIX Interface 253 UNIX socket methods 254255 def connectUNIX address factory timeout 3 checkPID 256 Connect a client protocol to a UNIX socket 257258 param address a path to a unix socket on the filesystem 25926 param factory a L twisted internet protocol ClientFactory instance261262 param timeout number of seconds to wait before assuming the connection263 has failed 264265 param checkPID if True check for a pid file to verify that a server266 is listening 267268 return An object which provides L IConnector 269 27 271 def listenUNIX address factory backlog 5 mode 666 wantPID 272 Listen on a UNIX socket 273274 param address a path to a unix socket on the filesystem 275276 param factory a L twisted internet protocol Factory instance 277278 param backlog number of connections to allow in backlog 27928 param mode mode to set on the unix socket 281282 param wantPID if True create a pidfile for the socket 283284 return An object which provides L IListeningPort 285 286287288class IReactorUNIXDatagram Interface 289 datagram UNIX socket methods 29 291 def connectUNIXDatagram address protocol maxPacketSize 8192 mode 666 bindAddress None 292 Connect a client protocol to a datagram UNIX socket 293294 param address a path to a unix socket on the filesystem 295296 param protocol a L twisted internet protocol ConnectedDatagramProtocol instance297298 param maxPacketSize maximum packet size to accept2993 param mode mode to set on the unix socket 3 13 2 param bindAddress address to bind to3 33 4 return An object which provides L IConnector 3 5 3 63 7 def listenUNIXDatagram address protocol maxPacketSize 8192 mode 666 3 8 Listen on a datagram UNIX socket 3 931 param address a path to a unix socket on the filesystem 311312 param protocol a L twisted internet protocol DatagramProtocol instance 313314 param maxPacketSize maximum packet size to accept315316 param mode mode to set on the unix socket 317318 return An object which provides L IListeningPort 319 32 321322class IReactorUDP Interface 323 UDP socket methods 324325 IMPORTANT This is an experimental new interface It may change326 without backwards compatability Suggestions are welcome 327 328329 def listenUDP port protocol interface maxPacketSize 8192 33 Connects a given DatagramProtocol to the given numeric UDP port 331332 return object which provides L IListeningPort 333 334335 def connectUDP remotehost remoteport protocol localport 336 interface maxPacketSize 8192 337 DEPRECATED 338339 Connects a L twisted internet protocol ConnectedDatagramProtocol 34 instance to a UDP port 341 342343344class IReactorMulticast Interface 345 UDP socket methods that support multicast 346347 IMPORTANT This is an experimental new interface It may change348 without backwards compatability Suggestions are welcome 349 35 351 def listenMulticast port protocol interface maxPacketSize 8192 352 listenMultiple False 353 354 Connects a given355 L DatagramProtocol twisted internet protocol DatagramProtocol to the356 given numeric UDP port 357358 param listenMultiple boolean indicating whether multiple sockets can359 bind to same UDP port 36 361 returns An object which provides L IListeningPort 362 363364365class IReactorProcess Interface 366367 def spawnProcess processProtocol executable args env path None 368 uid None gid None usePTY childFDs None 369 Spawn a process with a process protocol 37 371 param processProtocol a L twisted internet protocol ProcessProtocol instance372373 param executable the file name to spawn the full path should be374 used 375376 param args the command line arguments to pass to the process a377 sequence of strings The first string should be the378 executable s name 37938 param env the environment variables to pass to the processs a381 dictionary of strings If None use os environ 382383 param path the path to run the subprocess in defaults to the384 current directory 385386 param uid user ID to run the subprocess as Only available on387 POSIX systems 388389 param gid group ID to run the subprocess as Only available on39 POSIX systems 391392 param usePTY if true run this process in a pseudo terminal 393 optionally a tuple of masterfd slavefd ttyname 394 in which case use those file descriptors 395 Not available on all systems 396397 param childFDs A dictionary mapping file descriptors in the new child398 process to an integer or to the string r or w 3994 If the value is an integer it specifies a file4 1 descriptor in the parent process which will be mapped4 2 to a file descriptor specified by the key in the4 3 child process This is useful for things like inetd4 4 and shell like file redirection 4 54 6 If it is the string r a pipe will be created and4 7 attached to the child at that file descriptor the4 8 child will be able to write to that file descriptor4 9 and the parent will receive read notification via the41 L IProcessTransport childDataReceived callback This411 is useful for the child s stdout and stderr 412413 If it is the string w similar setup to the previous414 case will occur with the pipe being readable by the415 child instead of writeable The parent process can416 write to that file descriptor using417 L IProcessTransport writeToChild This is useful for418 the child s stdin 41942 If childFDs is not passed the default behaviour is to421 use a mapping that opens the usual stdin stdout stderr422 pipes 423424 see L twisted internet protocol ProcessProtocol 425426 return An object which provides L IProcessTransport 427428 raise OSError Raised with errno EAGAIN or ENOMEM if there are429 insufficient system resources to create a new process 43 431432class IReactorTime Interface 433 Time methods that a Reactor should implement 434 435436 def callLater delay callable args kw 437 Call a function later 438439 type delay C float 44 param delay the number of seconds to wait 441442 param callable the callable object to call later 443444 param args the arguments to call it with 445446 param kw the keyword arguments to call it with 447448 return An object which provides L IDelayedCall and can be used to449 cancel the scheduled call by calling its C cancel method 45 It also may be rescheduled by calling its C delay or451 C reset methods 452 453454 def cancelCallLater callID 455 This method is deprecated 456457 Cancel a call that would happen later 458459 param callID this is an opaque identifier returned from C callLater 46 that will be used to cancel a specific call 461462 raise ValueError if the callID is not recognized 463 464465 def getDelayedCalls 466 Retrieve all currently scheduled delayed calls 467468 return A tuple of all L IDelayedCall providers representing all469 currently scheduled calls This is everything that has been47 returned by C callLater but not yet called or canceled 471 472473474class IDelayedCall Interface 475 A scheduled call 476477 There are probably other useful methods we can add to this interface 478 suggestions are welcome 479 48 481 def getTime 482 Get time when delayed call will happen 483484 return time in seconds since epoch a float 485 486487 def cancel 488 Cancel the scheduled call 48949 raises twisted internet error AlreadyCalled if the call has already491 happened 492 raises twisted internet error AlreadyCancelled if the call has already493 been cancelled 494 495496 def delay secondsLater 497 Delay the scheduled call 498499 param secondsLater how many seconds from its current firing time to delay5 5 1 raises twisted internet error AlreadyCalled if the call has already5 2 happened 5 3 raises twisted internet error AlreadyCancelled if the call has already5 4 been cancelled 5 5 5 65 7 def reset secondsFromNow 5 8 Reset the scheduled call s timer 5 951 param secondsFromNow how many seconds from now it should fire 511 equivalent to C cancel and then doing another512 C reactor callLater secondsLater 513514 raises twisted internet error AlreadyCalled if the call has already515 happened 516 raises twisted internet error AlreadyCancelled if the call has already517 been cancelled 518 51952 def active 521 522 return True if this call is still active False if it has been523 called or cancelled 524 525526class IReactorThreads Interface 527 Dispatch methods to be run in threads 528529 Internally this should use a thread pool and dispatch methods to them 53 531532 def callInThread callable args kwargs 533 Run the callable object in a separate thread 534 535536 def callFromThread callable args kw 537 Cause a function to be executed by the reactor thread 538539 Use this method when you want to run a function in the reactor s thread54 from another thread Calling callFromThread should wake up the main541 thread where reactor run is executing and run the given callable in542 that thread 543544 Obviously the callable must be thread safe If you want to call a545 function in the next mainloop iteration but you re in the same thread 546 use callLater with a delay of 547 548549 def suggestThreadPoolSize size 55 551 Suggest the size of the internal threadpool used to dispatch functions552 passed to L callInThread 553 554555556class IReactorCore Interface 557 Core methods that a Reactor must implement 558 55956 def resolve name timeout 1 561 Return a L twisted internet defer Deferred that will resolve a hostname 562 563564565 def run 566 Fire startup System Events move the reactor to the running 567 state then run the main loop until it is stopped with stop or568 crash 569 57 571 def stop 572 Fire shutdown System Events which will move the reactor to the573 stopped state and cause reactor run to exit 574575 def crash 576 Stop the main loop immediately without firing any system events 577578 This is named as it is because this is an extremely rude thing to do 579 it is possible to lose data and put your system in an inconsistent58 state by calling this However it is necessary as sometimes a system581 can become wedged in a pre shutdown call 582 583584 def iterate delay 585 Run the main loop s I O polling function for a period of time 586587 This is most useful in applications where the UI is being drawn as588 fast as possible such as games All pending L IDelayedCall s will589 be called 59 591 The reactor must have been started via the run method prior to592 any invocations of this method It must also be stopped manually593 after the last call to this method via the stop method This594 method is not re entrant you must not call it recursively in595 particular you must not call it while the reactor is running 596 597598 def fireSystemEvent eventType 599 Fire a system wide event 6 6 1 System wide events are things like startup shutdown and6 2 persist 6 3 6 46 5 def addSystemEventTrigger phase eventType callable args kw 6 6 Add a function to be called when a system event occurs 6 76 8 Each system event in Twisted such as startup shutdown and6 9 persist has 3 phases before during and after in that61 order of course These events will be fired internally by the611 Reactor 612613 An implementor of this interface must only implement those events614 described here 615616 Callbacks registered for the before phase may return either None or a617 Deferred The during phase will not execute until all of the618 Deferreds from the before phase have fired 61962 Once the during phase is running all of the remaining triggers must621 execute their return values must be ignored 622623 param phase a time to call the event either the string before 624 after or during describing when to call it625 relative to the event s execution 626627 param eventType this is a string describing the type of event 628629 param callable the object to call before shutdown 63 631 param args the arguments to call it with 632633 param kw the keyword arguments to call it with 634635 return an ID that can be used to remove this call with636 removeSystemEventTrigger 637 638639 def removeSystemEventTrigger triggerID 64 Removes a trigger added with addSystemEventTrigger 641642 param triggerID a value returned from addSystemEventTrigger 643 644645 def callWhenRunning callable args kw 646 Call a function when the reactor is running 647648 If the reactor has not started the callable will be scheduled649 to run when it does start Otherwise the callable will be invoked65 immediately 651652 param callable the callable object to call later 653654 param args the arguments to call it with 655656 param kw the keyword arguments to call it with 657658 return None if the callable was invoked otherwise a system659 event id for the scheduled call 66 661662663class IReactorPluggableResolver Interface 664 A reactor with a pluggable name resolver interface 665 666 def installResolver resolver 667 Set the internal resolver to use to for name lookups 668669 type resolver An object implementing the L IResolverSimple interface67 param resolver The new resolver to use 671672 return The previously installed resolver 673 674675676class IReactorFDSet Interface 677 678 Implement me to be able to use679 L FileDescriptor twisted internet abstract FileDescriptor type resources 68 681 This assumes that your main loop uses UNIX style numeric file descriptors682 or at least similarly opaque IDs returned from a fileno method 683 684685 def addReader reader 686 I add reader to the set of file descriptors to get read events for 687688 param reader An L IReadDescriptor provider that will be checked for689 read events until it is removed from the reactor with69 L removeReader 691692 return C None 693 694695 def addWriter writer 696 I add writer to the set of file descriptors to get write events for 697698 param writer An L IWriteDescriptor provider that will be checked for699 read events until it is removed from the reactor with7 L removeWriter 7 17 2 return C None 7 3 7 47 5 def removeReader reader 7 6 Removes an object previously added with L addReader 7 77 8 return C None 7 9 71 711 def removeWriter writer 712 Removes an object previously added with L addWriter 713714 return C None 715 716717 def removeAll 718 Remove all readers and writers 71972 Should not remove reactor internal reactor connections like a waker 721722 return A list of L IReadDescriptor and L IWriteDescriptor providers723 which were removed 724 725726727class IListeningPort Interface 728 A listening port 729 73 731 def startListening 732 Start listening on this port 733734 raise CannotListenError If it cannot listen on this port e g it is735 a TCP port and it cannot bind to the required736 port number 737 738739 def stopListening 74 Stop listening on this port 741742 If it does not complete immediately will return Deferred that fires743 upon completion 744 745746 def getHost 747 Get the host that this port is listening for 748749 return An L IAddress provider 75 751752753class IFileDescriptor Interface 754 A file descriptor 755 756757 def fileno 758 759 return The platform specified representation of a file descriptor76 number 761 762763 def connectionLost reason 764 Called when the connection was lost 765766 This is called when the connection on a selectable object has been767 lost It will be called whether the connection was closed explicitly 768 an exception occurred in an event handler or the other end of the769 connection closed it first 77 771 See also L IHalfCloseableDescriptor if your descriptor wants to be772 notified separately of the two halves of the connection being closed 773774 param reason A failure instance indicating the reason why the775 connection was lost L error ConnectionLost and776 L error ConnectionDone are of special note but the777 failure may be of other classes as well 778 77978 class IReadDescriptor IFileDescriptor 781782 def doRead 783 Some data is available for reading on your descriptor 784 785786787class IWriteDescriptor IFileDescriptor 788789 def doWrite 79 Some data can be written to your descriptor 791 792793794class IReadWriteDescriptor IReadDescriptor IWriteDescriptor 795 I am a L FileDescriptor twisted internet abstract FileDescriptor that can both read and write 796 797798799class IHalfCloseableDescriptor Interface 8 A descriptor that can be half closed 8 18 2 def writeConnectionLost reason 8 3 Indicates write connection was lost 8 48 5 def readConnectionLost reason 8 6 Indicates read connection was lost 8 78 88 9class ISystemHandle Interface 81 An object that wraps a networking OS specific handle 811812 def getHandle 813 Return a system and reactor specific handle 814815 This might be a socket socket object or some other type of816 object depending on which reactor is being used Use and817 manipulate at your own risk 818819 This might be used in cases where you want to set specific82 options not exposed by the Twisted APIs 821 822823824class IConsumer Interface 825 A consumer consumes data from a producer 826827 def registerProducer producer streaming 828 829 Register to receive data from a producer 83 831 This sets self to be a consumer for a producer When this object runs832 out of data as when a send 2 call on a socket succeeds in moving the833 last data from a userspace buffer into a kernelspace buffer it will834 ask the producer to resumeProducing 835836 For L IPullProducer providers C resumeProducing will be called once837 each time data is required 838839 For L IPushProducer providers C pauseProducing will be called84 whenever the write buffer fills up and C resumeProducing will only be841 called when it empties 842843 type producer L IProducer provider844845 type streaming C bool 846 param streaming C True if C producer provides L IPushProducer 847 C False if C producer provides L IPullProducer 848849 return C None 85 851852 def unregisterProducer 853 Stop consuming data from a producer without disconnecting 854 855856 def write data 857 The producer will write data by calling this method 858859class IFinishableConsumer IConsumer 86 A Consumer for producers that finish 861862 This interface is semi stable 863 864 def finish 865 The producer has finished producing 866867class IProducer Interface 868 A producer produces data for a consumer 86987 Typically producing is done by calling the write method of an class871 implementing L IConsumer 872 873874 def stopProducing 875 Stop producing data 876877 This tells a producer that its consumer has died so it must stop878 producing data for good 879 88 881882class IPushProducer IProducer 883 884 A push producer also known as a streaming producer is expected to885 produce write to this consumer data on a continous basis unless886 it has been paused A paused push producer will resume producing887 after its resumeProducing method is called For a push producer888 which is not pauseable these functions may be noops 88989 This interface is semi stable 891 892893 def pauseProducing 894 Pause producing data 895896 Tells a producer that it has produced too much data to process for897 the time being and to stop until resumeProducing is called 898 899 def resumeProducing 9 Resume producing data 9 19 2 This tells a producer to re add itself to the main loop and produce9 3 more data for its consumer 9 4 9 59 6class IPullProducer IProducer 9 7 9 8 A pull producer also known as a non streaming producer is9 9 expected to produce data each time resumeProducing is called 91 911 This interface is semi stable 912 913914 def resumeProducing 915 Produce data for the consumer a single time 916917 This tells a producer to produce data for the consumer once918 not repeatedly once only Typically this will be done919 by calling the consumer s write method a single time with92 produced data 921 922923class IProtocol Interface 924925 def dataReceived data 926 Called whenever data is received 927928 Use this method to translate to a higher level message Usually some929 callback will be made upon the receipt of each complete protocol93 message 931932 param data a string of indeterminate length Please keep in mind933 that you will probably need to buffer some data as partial934 or multiple protocol messages may be received I recommend935 that unit tests for protocols call through to this method with936 differing chunk sizes down to one byte at a time 937 938939 def connectionLost reason 94 Called when the connection is shut down 941942 Clear any circular references here and any external references943 to this Protocol The connection has been closed The C reason 944 Failure wraps a L twisted internet error ConnectionDone or945 L twisted internet error ConnectionLost instance or a subclass946 of one of those 947948 type reason L twisted python failure Failure 949 95 951 def makeConnection transport 952 Make a connection to a transport and a server 953 954955 def connectionMade 956 Called when a connection is made 957958 This may be considered the initializer of the protocol because959 it is called when the connection is completed For clients 96 this is called once the connection to the server has been961 established for servers this is called after an accept call962 stops blocking and a socket has been received If you need to963 send any greeting or initial message do it here 964 965966967class IHalfCloseableProtocol Interface 968 Implemented to indicate they want notification of half closes 96997 TCP supports the notion of half closing the connection e g 971 closing the write side but still not stopping reading A protocol972 that implements this interface will be notified of such events 973 instead of having connectionLost called 974 975976 def readConnectionLost 977 Notification of the read connection being closed 978979 This indicates peer did half close of write side It is now98 the responsiblity of the this protocol to call981 loseConnection In addition the protocol MUST make sure a982 reference to it still exists i e by doing a callLater with983 one of its methods etc as the reactor will only have a984 reference to it if it is writing 985986 If the protocol does not do so it might get garbage collected987 without the connectionLost method ever being called 988 98999 def writeConnectionLost 991 Notification of the write connection being closed 992993 This will never be called for TCP connections as TCP does not994 support notification of this type of half close 995 996997998class IProtocolFactory Interface 999 Interface for protocol factories 1 1 11 2 def buildProtocol addr 1 3 Called when a connection has been established to addr 1 41 5 If None is returned the connection is assumed to have been refused 1 6 and the Port will close the connection 1 71 8 type addr host port 1 9 param addr The address of the newly established connection1 1 1 11 return None if the connection was refused otherwise an object1 12 providing L IProtocol 1 13 1 141 15 def doStart 1 16 Called every time this is connected to a Port or Connector 1 171 18 def doStop 1 19 Called every time this is unconnected from a Port or Connector 1 2 1 211 22class ITransport Interface 1 23 I am a transport for bytes 1 241 25 I represent and wrap the physical connection and synchronicity1 26 of the framework which is talking to the network I make no1 27 representations about whether calls to me will happen immediately1 28 or require returning to a control loop or whether they will happen1 29 in the same or another thread Consider methods of this class1 3 aside from getPeer to be thrown over the wall to happen at some1 31 indeterminate time 1 32 1 331 34 def write data 1 35 Write some data to the physical connection in sequence in a1 36 non blocking fashion 1 371 38 If possible make sure that it is all written No data will1 39 ever be lost although obviously the connection may be closed1 4 before it all gets through 1 41 1 421 43 def writeSequence data 1 44 Write a list of strings to the physical connection 1 451 46 If possible make sure that all of the data is written to1 47 the socket at once without first copying it all into a1 48 single string 1 49 1 5 1 51 def loseConnection 1 52 Close my connection after writing all pending data 1 531 54 Note that if there is a registered producer on a transport it1 55 will not be closed until the producer has been unregistered 1 56 1 571 58 def getPeer 1 59 Get the remote address of this connection 1 6 1 61 Treat this method with caution It is the unfortunate result of the1 62 CGI and Jabber standards but should not be considered reliable for1 63 the usual host of reasons port forwarding proxying firewalls IP1 64 masquerading etc 1 651 66 return An L IAddress provider 1 67 1 681 69 def getHost 1 7 1 71 Similar to getPeer but returns an address describing this side of the1 72 connection 1 731 74 return An L IAddress provider 1 75 1 761 771 78class ITCPTransport ITransport 1 79 A TCP based transport 1 8 1 81 def loseWriteConnection 1 82 Half close the write side of a TCP connection 1 831 84 If the protocol instance this is attached to provides1 85 IHalfCloseableProtocol it will get notified when the operation is1 86 done When closing write connection as with loseConnection this will1 87 only happen when buffer has emptied and there is no registered1 88 producer 1 89 1 9 1 91 def getTcpNoDelay 1 92 Return if TCP NODELAY is enabled 1 931 94 def setTcpNoDelay enabled 1 95 Enable disable TCP NODELAY 1 961 97 Enabling TCP NODELAY turns off Nagle s algorithm Small packets are1 98 sent sooner possibly at the expense of overall throughput 1 9911 def getTcpKeepAlive 11 1 Return if SO KEEPALIVE enabled 11 211 3 def setTcpKeepAlive enabled 11 4 Enable disable SO KEEPALIVE 11 511 6 Enabling SO KEEPALIVE sends packets periodically when the connection11 7 is otherwise idle usually once every two hours They are intended11 8 to allow detection of lost peers in a non infinite amount of time 11 9111 def getHost 1111 Returns L IPv4Address 11121113 def getPeer 1114 Returns L IPv4Address 111511161117class ITLSTransport ITCPTransport 1118 A TCP transport that supports switching to TLS midstream 1119112 Once TLS mode is started the transport will implement L ISSLTransport 1121 11221123 def startTLS contextFactory 1124 Initiate TLS negotiation 11251126 param contextFactory A context factory see L ssl py twisted internet ssl 1127 11281129class ISSLTransport ITCPTransport 113 A SSL TLS based transport 11311132 def getPeerCertificate 1133 Return an object with the peer s certificate info 113411351136class IProcessTransport ITransport 1137 A process transport 11381139 ivar pid The Process ID of this process 114 11411142 def closeStdin 1143 Close stdin after all data has been written out 11441145 def closeStdout 1146 Close stdout 11471148 def closeStderr 1149 Close stderr 115 1151 def closeChildFD descriptor 1152 1153 Close a file descriptor which is connected to the child process identified1154 by its FD in the child process 1155 11561157 def writeToChild childFD data 1158 1159 Similar to L ITransport write but also allows the file descriptor in116 the child process which will receive the bytes to be specified 11611162 This is not available on all platforms 11631164 type childFD C int 1165 param childFD The file descriptor to which to write 11661167 type data C str 1168 param data The bytes to write 1169117 return C None 1171 11721173 def loseConnection 1174 Close stdin stderr and stdout 11751176 def signalProcess signalID 1177 Send a signal to the process 11781179 param signalID can be118 one of C HUP C KILL C STOP or C INT 1181 These will be implemented in a1182 cross platform manner and so should be used1183 if possible 1184 an integer where it represents a POSIX1185 signal ID 11861187 raise twisted internet error ProcessExitedAlready The process has1188 already exited 1189 119 11911192class IServiceCollection Interface 1193 An object which provides access to a collection of services 11941195 def getServiceNamed serviceName 1196 Retrieve the named service from this application 11971198 Raise a KeyError if there is no such service name 1199 12 12 1 def addService service 12 2 Add a service to this collection 12 3 12 412 5 def removeService service 12 6 Remove a service from this collection 12 712 812 9class IUDPTransport Interface 121 Transport for UDP DatagramProtocols 12111212 def write packet addr None 1213 Write packet to given address 12141215 param addr a tuple of ip port For connected transports must1216 be the address the transport is connected to or None 1217 In non connected mode this is mandatory 12181219 raise twisted internet error MessageLengthError C packet was too122 long 1221 12221223 def connect host port 1224 Connect the transport to an address 12251226 This changes it to connected mode Datagrams can only be sent to1227 this address and will only be received from this address In addition1228 the protocol s connectionRefused method might get called if destination1229 is not receiving datagrams 123 1231 param host an IP address not a domain name 127 1 not localhost 1232 param port port to connect to 1233 12341235 def getHost 1236 Returns IPv4Address 12371238 def stopListening 1239 Stop listening on this port 124 1241 If it does not complete immediately will return Deferred that fires1242 upon completion 1243 124412451246class IUDPConnectedTransport Interface 1247 DEPRECATED Transport for UDP ConnectedPacketProtocols 12481249 def write packet 125 Write packet to address we are connected to 12511252 def getHost 1253 Returns UNIXAddress 125412551256class IUNIXDatagramTransport Interface 1257 Transport for UDP PacketProtocols 12581259 def write packet address 126 Write packet to given address 12611262 def getHost 1263 Returns UNIXAddress 126412651266class IUNIXDatagramConnectedTransport Interface 1267 Transport for UDP ConnectedPacketProtocols 12681269 def write packet 127 Write packet to address we are connected to 12711272 def getHost 1273 Returns UNIXAddress 12741275 def getPeer 1276 Returns UNIXAddress 127712781279class IMulticastTransport Interface 128 Additional functionality for multicast UDP 12811282 def getOutgoingInterface 1283 Return interface of outgoing multicast packets 12841285 def setOutgoingInterface addr 1286 Set interface for outgoing multicast packets 12871288 Returns Deferred of success 1289 129 1291 def getLoopbackMode 1292 Return if loopback mode is enabled 12931294 def setLoopbackMode mode 1295 Set if loopback mode is enabled 12961297 def getTTL 1298 Get time to live for multicast packets 129913 def setTTL ttl 13 1 Set time to live on multicast packets 13 213 3 def joinGroup addr interface 13 4 Join a multicast group Returns Deferred of success or failure 13 513 6 If an error occurs the returned Deferred will fail with13 7 L error MulticastJoinError 13 8 13 9131 def leaveGroup addr interface 1311 Leave multicast group return Deferred of success Note See TracBrowser for help on using the repository browser Download in other formats Plain Text Original Format Powered by Trac 1 1 By Edgewall Software All content copyright 2 7 2 8 by LUCI http luci ics uci edu ", "_id": "http://djp3-pc2.ics.uci.edu/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/interfaces.py", "title": "\n      interfaces.py in nomatic/tags/nomaticim-0.0.5/buddy_bots/src/twisted/internet\n     \u2013 nomatic*im\n    ", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n  \n  \n\n  \n\n\n  <head>\n\t\t<title>\n      interfaces.py in nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet\n     \u2013 Nomatic*IM\n    </title><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /><link rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search\" /><link rel=\"help\" href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/interfaces.py?format=txt\" type=\"text/plain\" title=\"Plain Text\" /><link rel=\"alternate\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/interfaces.py\" type=\"application/x-python; charset=iso-8859-15\" title=\"Original Format\" /><link rel=\"start\" href=\"/LUCICodeRepository/nomaticIM/wiki\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/code.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/pygments/trac.css\" type=\"text/css\" /><link rel=\"stylesheet\" href=\"/LUCICodeRepository/nomaticIM/chrome/common/css/browser.css\" type=\"text/css\" /><link rel=\"shortcut icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link rel=\"icon\" href=\"http://luci.ics.uci.edu/logo32by32.gif\" type=\"image/gif\" /><link type=\"application/opensearchdescription+xml\" rel=\"search\" href=\"/LUCICodeRepository/nomaticIM/search/opensearch\" title=\"Search Nomatic*IM\" /><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/jquery.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/babel.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/messages/en_US.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/trac.js\"></script><script type=\"text/javascript\" charset=\"utf-8\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/search.js\"></script><script type=\"text/javascript\" src=\"/LUCICodeRepository/nomaticIM/chrome/common/js/folding.js\"></script><script type=\"text/javascript\">\n      jQuery(document).ready(function($) {\n        $(\".trac-toggledeleted\").show().click(function() {\n                  $(this).siblings().find(\".trac-deleted\").toggle();\n                  return false;\n        }).click();\n        $(\"#jumploc input\").hide();\n        $(\"#jumploc select\").change(function () {\n          this.parentNode.parentNode.submit();\n        });\n          $('#preview table.code').enableCollapsibleColumns($('#preview table.code thead th.content'));\n      });\n    </script>\n\t</head>\n  <body>\n    <div id=\"banner\">\n      <div id=\"header\">\n        <a id=\"logo\" href=\"http://luci.ics.uci.edu/#code\"><img src=\"http://luci.ics.uci.edu/blog/archives/LUCIhorzTight.jpg\" alt=\"LUCI Code Repository\" /></a>\n      </div>\n      <form id=\"search\" action=\"/LUCICodeRepository/nomaticIM/search\" method=\"get\">\n        <div>\n          <label for=\"proj-search\">Search:</label>\n          <input type=\"text\" id=\"proj-search\" name=\"q\" size=\"18\" value=\"\" />\n          <input type=\"submit\" value=\"Search\" />\n        </div>\n      </form>\n      <div id=\"metanav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/login\">Login</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/prefs\">Preferences</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/wiki/TracGuide\">Help/Guide</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/about\">About Trac</a></li>\n    </ul>\n  </div>\n    </div>\n    <div id=\"mainnav\" class=\"nav\">\n    <ul>\n      <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/wiki\">Wiki</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/timeline\">Timeline</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/roadmap\">Roadmap</a></li><li class=\"active\"><a href=\"/LUCICodeRepository/nomaticIM/browser\">Browse Source</a></li><li><a href=\"/LUCICodeRepository/nomaticIM/report\">View Tickets</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/search\">Search</a></li>\n    </ul>\n  </div>\n    <div id=\"main\">\n      <div id=\"ctxtnav\" class=\"nav\">\n        <h2>Context Navigation</h2>\n        <ul>\n          <li class=\"first\"><a href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/trunk/buddy_bots/twisted/internet/interfaces.py?annotate=blame\" title=\"Annotate each line with the last changed revision (this can be time consuming...)\">Blame</a></li><li class=\"last\"><a href=\"/LUCICodeRepository/nomaticIM/log/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/interfaces.py\">Revision Log</a></li>\n        </ul>\n        <hr />\n      </div>\n    <div id=\"content\" class=\"browser\">\n        <h1>\n          \n<a class=\"pathentry first\" href=\"/LUCICodeRepository/nomaticIM/browser?order=name\" title=\"Go to repository root\">source:</a>\n<a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic?order=name\" title=\"View nomatic\">nomatic</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags?order=name\" title=\"View tags\">tags</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5?order=name\" title=\"View NomaticIM-0.0.5\">NomaticIM-0.0.5</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots?order=name\" title=\"View buddy_bots\">buddy_bots</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src?order=name\" title=\"View src\">src</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted?order=name\" title=\"View twisted\">twisted</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet?order=name\" title=\"View internet\">internet</a><span class=\"pathentry sep\">/</span><a class=\"pathentry\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/interfaces.py?order=name\" title=\"View interfaces.py\">interfaces.py</a>\n<br style=\"clear: both\" />\n\n        </h1>\n        <div id=\"diffrev\">\n          <form action=\"/LUCICodeRepository/nomaticIM/changeset\" method=\"get\">\n            <div>\n              <label title=\"Show the diff against a specific revision\">\n                View diff against: <input type=\"text\" name=\"old\" size=\"6\" />\n                <input type=\"hidden\" name=\"old_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/interfaces.py\" />\n                <input type=\"hidden\" name=\"new\" />\n                <input type=\"hidden\" name=\"new_path\" value=\"nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/interfaces.py\" />\n              </label>\n            </div>\n          </form>\n        </div>\n        <div id=\"jumprev\">\n          <form action=\"\" method=\"get\">\n            <div>\n              <label for=\"rev\">\n                View revision:</label>\n              <input type=\"text\" id=\"rev\" name=\"rev\" size=\"6\" />\n            </div>\n          </form>\n        </div>\n        <div id=\"jumploc\">\n          <form action=\"\" method=\"get\">\n            <div class=\"buttons\">\n              <label for=\"preselected\">Visit:</label>\n              <select id=\"preselected\" name=\"preselected\">\n                <option selected=\"selected\"></option>\n                <optgroup label=\"branches\">\n                  <option value=\"/LUCICodeRepository/nomaticIM/browser/trunk\">trunk</option>\n                </optgroup>\n              </select>\n              <input type=\"submit\" value=\"Go!\" title=\"Jump to the chosen preselected path\" />\n            </div>\n          </form>\n        </div>\n        <div class=\"trac-tags\">\n        </div>\n      <table id=\"info\" summary=\"Revision info\">\n        <tr>\n          <th>\n                <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/nomatic/trunk/buddy_bots/twisted/internet/interfaces.py\" title=\"View differences\">Last change</a>\n                  on this file was\n                  <a href=\"/LUCICodeRepository/nomaticIM/changeset/712/\" title=\"View changeset 712\">712</a>,\n                  checked in by cbaker, <a class=\"timeline\" href=\"/LUCICodeRepository/nomaticIM/timeline?from=2008-02-16T08%3A16%3A53-08%3A00&amp;precision=second\" title=\"See timeline at Feb 16, 2008, 8:16:53 AM\">7 years ago</a>\n          </th>\n        </tr>\n        <tr>\n          <td class=\"message searchable\">\n              <p>\nFirst draft of nomatic buddy bots. oscar_bot is functional if you give it good authentication credentials, jabber_bot is just an example from the web <br />\n</p>\n          </td>\n        </tr>\n        <tr><td colspan=\"2\">\n            <strong>File size:</strong>\n            <span title=\"43567 bytes\">42.5 KB</span>\n          </td></tr>\n      </table>\n      <div id=\"preview\" class=\"searchable\">\n        \n  <table class=\"code\"><thead><tr><th class=\"lineno\" title=\"Line numbers\">Line</th><th class=\"content\">\u00a0</th></tr></thead><tbody><tr><th id=\"L1\"><a href=\"#L1\">1</a></th><td><span class=\"c\"># Copyright (c) 2001-2004 Twisted Matrix Laboratories.</span></td></tr><tr><th id=\"L2\"><a href=\"#L2\">2</a></th><td><span class=\"c\"># See LICENSE for details.</span></td></tr><tr><th id=\"L3\"><a href=\"#L3\">3</a></th><td></td></tr><tr><th id=\"L4\"><a href=\"#L4\">4</a></th><td></td></tr><tr><th id=\"L5\"><a href=\"#L5\">5</a></th><td><span class=\"sd\">\"\"\"Interface documentation.</span></td></tr><tr><th id=\"L6\"><a href=\"#L6\">6</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L7\"><a href=\"#L7\">7</a></th><td><span class=\"sd\">API Stability: stable, other than IReactorUDP (semi-stable) and</span></td></tr><tr><th id=\"L8\"><a href=\"#L8\">8</a></th><td><span class=\"sd\">IReactorMulticast (unstable).</span></td></tr><tr><th id=\"L9\"><a href=\"#L9\">9</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L10\"><a href=\"#L10\">10</a></th><td><span class=\"sd\">Maintainer: U{Itamar Shtull-Trauring&lt;mailto:twisted@itamarst.org&gt;}</span></td></tr><tr><th id=\"L11\"><a href=\"#L11\">11</a></th><td><span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L12\"><a href=\"#L12\">12</a></th><td></td></tr><tr><th id=\"L13\"><a href=\"#L13\">13</a></th><td><span class=\"kn\">from</span>\u00a0<span class=\"nn\">zope.interface</span>\u00a0<span class=\"kn\">import</span>\u00a0Interface</td></tr><tr><th id=\"L14\"><a href=\"#L14\">14</a></th><td></td></tr><tr><th id=\"L15\"><a href=\"#L15\">15</a></th><td></td></tr><tr><th id=\"L16\"><a href=\"#L16\">16</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IAddress</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L17\"><a href=\"#L17\">17</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"An address, e.g. a TCP (host, port).</span></td></tr><tr><th id=\"L18\"><a href=\"#L18\">18</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L19\"><a href=\"#L19\">19</a></th><td><span class=\"sd\">\u00a0 \u00a0 Default implementations are in L{twisted.internet.address}.</span></td></tr><tr><th id=\"L20\"><a href=\"#L20\">20</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L21\"><a href=\"#L21\">21</a></th><td></td></tr><tr><th id=\"L22\"><a href=\"#L22\">22</a></th><td></td></tr><tr><th id=\"L23\"><a href=\"#L23\">23</a></th><td><span class=\"c\">### Reactor Interfaces</span></td></tr><tr><th id=\"L24\"><a href=\"#L24\">24</a></th><td></td></tr><tr><th id=\"L25\"><a href=\"#L25\">25</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IConnector</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L26\"><a href=\"#L26\">26</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Object used to interface between connections and protocols.</span></td></tr><tr><th id=\"L27\"><a href=\"#L27\">27</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L28\"><a href=\"#L28\">28</a></th><td><span class=\"sd\">\u00a0 \u00a0 Each IConnector manages one connection.</span></td></tr><tr><th id=\"L29\"><a href=\"#L29\">29</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L30\"><a href=\"#L30\">30</a></th><td></td></tr><tr><th id=\"L31\"><a href=\"#L31\">31</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">stopConnecting</span><span class=\"p\">():</span></td></tr><tr><th id=\"L32\"><a href=\"#L32\">32</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Stop attempting to connect.\"\"\"</span></td></tr><tr><th id=\"L33\"><a href=\"#L33\">33</a></th><td></td></tr><tr><th id=\"L34\"><a href=\"#L34\">34</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">disconnect</span><span class=\"p\">():</span></td></tr><tr><th id=\"L35\"><a href=\"#L35\">35</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Disconnect regardless of the connection state.</span></td></tr><tr><th id=\"L36\"><a href=\"#L36\">36</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L37\"><a href=\"#L37\">37</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 If we are connected, disconnect, if we are trying to connect,</span></td></tr><tr><th id=\"L38\"><a href=\"#L38\">38</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 stop trying.</span></td></tr><tr><th id=\"L39\"><a href=\"#L39\">39</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L40\"><a href=\"#L40\">40</a></th><td></td></tr><tr><th id=\"L41\"><a href=\"#L41\">41</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connect</span><span class=\"p\">():</span></td></tr><tr><th id=\"L42\"><a href=\"#L42\">42</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Try to connect to remote address.\"\"\"</span></td></tr><tr><th id=\"L43\"><a href=\"#L43\">43</a></th><td></td></tr><tr><th id=\"L44\"><a href=\"#L44\">44</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getDestination</span><span class=\"p\">():</span></td></tr><tr><th id=\"L45\"><a href=\"#L45\">45</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Return destination this will try to connect to.</span></td></tr><tr><th id=\"L46\"><a href=\"#L46\">46</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L47\"><a href=\"#L47\">47</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: An object which provides L{IAddress}.</span></td></tr><tr><th id=\"L48\"><a href=\"#L48\">48</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L49\"><a href=\"#L49\">49</a></th><td></td></tr><tr><th id=\"L50\"><a href=\"#L50\">50</a></th><td></td></tr><tr><th id=\"L51\"><a href=\"#L51\">51</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IResolverSimple</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L52\"><a href=\"#L52\">52</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getHostByName</span><span class=\"p\">(</span>name<span class=\"p\">,</span>\u00a0timeout <span class=\"o\">=</span>\u00a0<span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span>\u00a0<span class=\"mi\">3</span><span class=\"p\">,</span>\u00a0<span class=\"mi\">11</span><span class=\"p\">,</span>\u00a0<span class=\"mi\">45</span><span class=\"p\">)):</span></td></tr><tr><th id=\"L53\"><a href=\"#L53\">53</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Resolve the domain name C{name} into an IP address.</span></td></tr><tr><th id=\"L54\"><a href=\"#L54\">54</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L55\"><a href=\"#L55\">55</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @type name: C{str}</span></td></tr><tr><th id=\"L56\"><a href=\"#L56\">56</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @type timeout: C{tuple}</span></td></tr><tr><th id=\"L57\"><a href=\"#L57\">57</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @rtype: L{twisted.internet.defer.Deferred}</span></td></tr><tr><th id=\"L58\"><a href=\"#L58\">58</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: The callback of the Deferred that is returned will be</span></td></tr><tr><th id=\"L59\"><a href=\"#L59\">59</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 passed a string that represents the IP address of the specified</span></td></tr><tr><th id=\"L60\"><a href=\"#L60\">60</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 name, or the errback will be called if the lookup times out.\u00a0 If</span></td></tr><tr><th id=\"L61\"><a href=\"#L61\">61</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 multiple types of address records are associated with the name,</span></td></tr><tr><th id=\"L62\"><a href=\"#L62\">62</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 A6 records will be returned in preference to AAAA records, which</span></td></tr><tr><th id=\"L63\"><a href=\"#L63\">63</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 will be returned in preference to A records.\u00a0 If there are multiple</span></td></tr><tr><th id=\"L64\"><a href=\"#L64\">64</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 records of the type to be returned, one will be selected at random.</span></td></tr><tr><th id=\"L65\"><a href=\"#L65\">65</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L66\"><a href=\"#L66\">66</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @raise twisted.internet.defer.TimeoutError: Raised (asynchronously)</span></td></tr><tr><th id=\"L67\"><a href=\"#L67\">67</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 if the name cannot be resolved within the specified timeout period.</span></td></tr><tr><th id=\"L68\"><a href=\"#L68\">68</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L69\"><a href=\"#L69\">69</a></th><td></td></tr><tr><th id=\"L70\"><a href=\"#L70\">70</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IResolver</span><span class=\"p\">(</span>IResolverSimple<span class=\"p\">):</span></td></tr><tr><th id=\"L71\"><a href=\"#L71\">71</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">lookupRecord</span><span class=\"p\">(</span>name<span class=\"p\">,</span>\u00a0cls<span class=\"p\">,</span>\u00a0<span class=\"nb\">type</span><span class=\"p\">,</span>\u00a0timeout <span class=\"o\">=</span>\u00a0<span class=\"mi\">10</span><span class=\"p\">):</span></td></tr><tr><th id=\"L72\"><a href=\"#L72\">72</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Lookup the records associated with the given name</span></td></tr><tr><th id=\"L73\"><a href=\"#L73\">73</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0that are of the given type and in the given class.</span></td></tr><tr><th id=\"L74\"><a href=\"#L74\">74</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L75\"><a href=\"#L75\">75</a></th><td></td></tr><tr><th id=\"L76\"><a href=\"#L76\">76</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">query</span><span class=\"p\">(</span>query<span class=\"p\">,</span>\u00a0timeout <span class=\"o\">=</span>\u00a0<span class=\"mi\">10</span><span class=\"p\">):</span></td></tr><tr><th id=\"L77\"><a href=\"#L77\">77</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Interpret and dispatch a query object to the appropriate</span></td></tr><tr><th id=\"L78\"><a href=\"#L78\">78</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 lookup* method.</span></td></tr><tr><th id=\"L79\"><a href=\"#L79\">79</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L80\"><a href=\"#L80\">80</a></th><td></td></tr><tr><th id=\"L81\"><a href=\"#L81\">81</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">lookupAddress</span><span class=\"p\">(</span>name<span class=\"p\">,</span>\u00a0timeout <span class=\"o\">=</span>\u00a0<span class=\"mi\">10</span><span class=\"p\">):</span></td></tr><tr><th id=\"L82\"><a href=\"#L82\">82</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Lookup the A records associated with C{name}.\"\"\"</span></td></tr><tr><th id=\"L83\"><a href=\"#L83\">83</a></th><td></td></tr><tr><th id=\"L84\"><a href=\"#L84\">84</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">lookupAddress6</span><span class=\"p\">(</span>name<span class=\"p\">,</span>\u00a0timeout <span class=\"o\">=</span>\u00a0<span class=\"mi\">10</span><span class=\"p\">):</span></td></tr><tr><th id=\"L85\"><a href=\"#L85\">85</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Lookup all the A6 records associated with C{name}.\"\"\"</span></td></tr><tr><th id=\"L86\"><a href=\"#L86\">86</a></th><td></td></tr><tr><th id=\"L87\"><a href=\"#L87\">87</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">lookupIPV6Address</span><span class=\"p\">(</span>name<span class=\"p\">,</span>\u00a0timeout <span class=\"o\">=</span>\u00a0<span class=\"mi\">10</span><span class=\"p\">):</span></td></tr><tr><th id=\"L88\"><a href=\"#L88\">88</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Lookup all the AAAA records associated with C{name}.\"\"\"</span></td></tr><tr><th id=\"L89\"><a href=\"#L89\">89</a></th><td></td></tr><tr><th id=\"L90\"><a href=\"#L90\">90</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">lookupMailExchange</span><span class=\"p\">(</span>name<span class=\"p\">,</span>\u00a0timeout <span class=\"o\">=</span>\u00a0<span class=\"mi\">10</span><span class=\"p\">):</span></td></tr><tr><th id=\"L91\"><a href=\"#L91\">91</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Lookup the MX records associated with C{name}.\"\"\"</span></td></tr><tr><th id=\"L92\"><a href=\"#L92\">92</a></th><td></td></tr><tr><th id=\"L93\"><a href=\"#L93\">93</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">lookupNameservers</span><span class=\"p\">(</span>name<span class=\"p\">,</span>\u00a0timeout <span class=\"o\">=</span>\u00a0<span class=\"mi\">10</span><span class=\"p\">):</span></td></tr><tr><th id=\"L94\"><a href=\"#L94\">94</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Lookup the the NS records associated with C{name}.\"\"\"</span></td></tr><tr><th id=\"L95\"><a href=\"#L95\">95</a></th><td></td></tr><tr><th id=\"L96\"><a href=\"#L96\">96</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">lookupCanonicalName</span><span class=\"p\">(</span>name<span class=\"p\">,</span>\u00a0timeout <span class=\"o\">=</span>\u00a0<span class=\"mi\">10</span><span class=\"p\">):</span></td></tr><tr><th id=\"L97\"><a href=\"#L97\">97</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Lookup the CNAME records associated with C{name}.\"\"\"</span></td></tr><tr><th id=\"L98\"><a href=\"#L98\">98</a></th><td></td></tr><tr><th id=\"L99\"><a href=\"#L99\">99</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">lookupMailBox</span><span class=\"p\">(</span>name<span class=\"p\">,</span>\u00a0timeout <span class=\"o\">=</span>\u00a0<span class=\"mi\">10</span><span class=\"p\">):</span></td></tr><tr><th id=\"L100\"><a href=\"#L100\">100</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Lookup the MB records associated with C{name}.\"\"\"</span></td></tr><tr><th id=\"L101\"><a href=\"#L101\">101</a></th><td></td></tr><tr><th id=\"L102\"><a href=\"#L102\">102</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">lookupMailGroup</span><span class=\"p\">(</span>name<span class=\"p\">,</span>\u00a0timeout <span class=\"o\">=</span>\u00a0<span class=\"mi\">10</span><span class=\"p\">):</span></td></tr><tr><th id=\"L103\"><a href=\"#L103\">103</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Lookup the MG records associated with C{name}.\"\"\"</span></td></tr><tr><th id=\"L104\"><a href=\"#L104\">104</a></th><td></td></tr><tr><th id=\"L105\"><a href=\"#L105\">105</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">lookupMailRename</span><span class=\"p\">(</span>name<span class=\"p\">,</span>\u00a0timeout <span class=\"o\">=</span>\u00a0<span class=\"mi\">10</span><span class=\"p\">):</span></td></tr><tr><th id=\"L106\"><a href=\"#L106\">106</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Lookup the MR records associated with C{name}.\"\"\"</span></td></tr><tr><th id=\"L107\"><a href=\"#L107\">107</a></th><td></td></tr><tr><th id=\"L108\"><a href=\"#L108\">108</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">lookupPointer</span><span class=\"p\">(</span>name<span class=\"p\">,</span>\u00a0timeout <span class=\"o\">=</span>\u00a0<span class=\"mi\">10</span><span class=\"p\">):</span></td></tr><tr><th id=\"L109\"><a href=\"#L109\">109</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Lookup the PTR records associated with C{name}.\"\"\"</span></td></tr><tr><th id=\"L110\"><a href=\"#L110\">110</a></th><td></td></tr><tr><th id=\"L111\"><a href=\"#L111\">111</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">lookupAuthority</span><span class=\"p\">(</span>name<span class=\"p\">,</span>\u00a0timeout <span class=\"o\">=</span>\u00a0<span class=\"mi\">10</span><span class=\"p\">):</span></td></tr><tr><th id=\"L112\"><a href=\"#L112\">112</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Lookup the SOA records associated with C{name}.\"\"\"</span></td></tr><tr><th id=\"L113\"><a href=\"#L113\">113</a></th><td></td></tr><tr><th id=\"L114\"><a href=\"#L114\">114</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">lookupNull</span><span class=\"p\">(</span>name<span class=\"p\">,</span>\u00a0timeout <span class=\"o\">=</span>\u00a0<span class=\"mi\">10</span><span class=\"p\">):</span></td></tr><tr><th id=\"L115\"><a href=\"#L115\">115</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Lookup the NULL records associated with C{name}.\"\"\"</span></td></tr><tr><th id=\"L116\"><a href=\"#L116\">116</a></th><td></td></tr><tr><th id=\"L117\"><a href=\"#L117\">117</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">lookupWellKnownServices</span><span class=\"p\">(</span>name<span class=\"p\">,</span>\u00a0timeout <span class=\"o\">=</span>\u00a0<span class=\"mi\">10</span><span class=\"p\">):</span></td></tr><tr><th id=\"L118\"><a href=\"#L118\">118</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Lookup the WKS records associated with C{name}.\"\"\"</span></td></tr><tr><th id=\"L119\"><a href=\"#L119\">119</a></th><td></td></tr><tr><th id=\"L120\"><a href=\"#L120\">120</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">lookupHostInfo</span><span class=\"p\">(</span>name<span class=\"p\">,</span>\u00a0timeout <span class=\"o\">=</span>\u00a0<span class=\"mi\">10</span><span class=\"p\">):</span></td></tr><tr><th id=\"L121\"><a href=\"#L121\">121</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Lookup the HINFO records associated with C{name}.\"\"\"</span></td></tr><tr><th id=\"L122\"><a href=\"#L122\">122</a></th><td></td></tr><tr><th id=\"L123\"><a href=\"#L123\">123</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">lookupMailboxInfo</span><span class=\"p\">(</span>name<span class=\"p\">,</span>\u00a0timeout <span class=\"o\">=</span>\u00a0<span class=\"mi\">10</span><span class=\"p\">):</span></td></tr><tr><th id=\"L124\"><a href=\"#L124\">124</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Lookup the MINFO records associated with C{name}.\"\"\"</span></td></tr><tr><th id=\"L125\"><a href=\"#L125\">125</a></th><td></td></tr><tr><th id=\"L126\"><a href=\"#L126\">126</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">lookupText</span><span class=\"p\">(</span>name<span class=\"p\">,</span>\u00a0timeout <span class=\"o\">=</span>\u00a0<span class=\"mi\">10</span><span class=\"p\">):</span></td></tr><tr><th id=\"L127\"><a href=\"#L127\">127</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Lookup the TXT records associated with C{name}.\"\"\"</span></td></tr><tr><th id=\"L128\"><a href=\"#L128\">128</a></th><td></td></tr><tr><th id=\"L129\"><a href=\"#L129\">129</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">lookupResponsibility</span><span class=\"p\">(</span>name<span class=\"p\">,</span>\u00a0timeout <span class=\"o\">=</span>\u00a0<span class=\"mi\">10</span><span class=\"p\">):</span></td></tr><tr><th id=\"L130\"><a href=\"#L130\">130</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Lookup the RP records associated with C{name}.\"\"\"</span></td></tr><tr><th id=\"L131\"><a href=\"#L131\">131</a></th><td></td></tr><tr><th id=\"L132\"><a href=\"#L132\">132</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">lookupAFSDatabase</span><span class=\"p\">(</span>name<span class=\"p\">,</span>\u00a0timeout <span class=\"o\">=</span>\u00a0<span class=\"mi\">10</span><span class=\"p\">):</span></td></tr><tr><th id=\"L133\"><a href=\"#L133\">133</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Lookup the AFSDB records associated with C{name}.\"\"\"</span></td></tr><tr><th id=\"L134\"><a href=\"#L134\">134</a></th><td></td></tr><tr><th id=\"L135\"><a href=\"#L135\">135</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">lookupService</span><span class=\"p\">(</span>name<span class=\"p\">,</span>\u00a0timeout <span class=\"o\">=</span>\u00a0<span class=\"mi\">10</span><span class=\"p\">):</span></td></tr><tr><th id=\"L136\"><a href=\"#L136\">136</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Lookup the SRV records associated with C{name}.\"\"\"</span></td></tr><tr><th id=\"L137\"><a href=\"#L137\">137</a></th><td></td></tr><tr><th id=\"L138\"><a href=\"#L138\">138</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">lookupAllRecords</span><span class=\"p\">(</span>name<span class=\"p\">,</span>\u00a0timeout <span class=\"o\">=</span>\u00a0<span class=\"mi\">10</span><span class=\"p\">):</span></td></tr><tr><th id=\"L139\"><a href=\"#L139\">139</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Lookup all records associated with C{name}.\"\"\"</span></td></tr><tr><th id=\"L140\"><a href=\"#L140\">140</a></th><td></td></tr><tr><th id=\"L141\"><a href=\"#L141\">141</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">lookupZone</span><span class=\"p\">(</span>name<span class=\"p\">,</span>\u00a0timeout <span class=\"o\">=</span>\u00a0<span class=\"mi\">10</span><span class=\"p\">):</span></td></tr><tr><th id=\"L142\"><a href=\"#L142\">142</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Perform a zone transfer for the given C{name}.\"\"\"</span></td></tr><tr><th id=\"L143\"><a href=\"#L143\">143</a></th><td></td></tr><tr><th id=\"L144\"><a href=\"#L144\">144</a></th><td></td></tr><tr><th id=\"L145\"><a href=\"#L145\">145</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IReactorArbitrary</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L146\"><a href=\"#L146\">146</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">listenWith</span><span class=\"p\">(</span>portType<span class=\"p\">,</span>\u00a0<span class=\"o\">*</span>args<span class=\"p\">,</span>\u00a0<span class=\"o\">**</span>kw<span class=\"p\">):</span></td></tr><tr><th id=\"L147\"><a href=\"#L147\">147</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Start an instance of the given C{portType} listening.</span></td></tr><tr><th id=\"L148\"><a href=\"#L148\">148</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L149\"><a href=\"#L149\">149</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @type portType: type which implements L{IListeningPort}</span></td></tr><tr><th id=\"L150\"><a href=\"#L150\">150</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L151\"><a href=\"#L151\">151</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param portType: The object given by C{portType(*args, **kw)} will be</span></td></tr><tr><th id=\"L152\"><a href=\"#L152\">152</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0started listening.</span></td></tr><tr><th id=\"L153\"><a href=\"#L153\">153</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L154\"><a href=\"#L154\">154</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: an object which provides L{IListeningPort}.</span></td></tr><tr><th id=\"L155\"><a href=\"#L155\">155</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L156\"><a href=\"#L156\">156</a></th><td></td></tr><tr><th id=\"L157\"><a href=\"#L157\">157</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectWith</span><span class=\"p\">(</span>connectorType<span class=\"p\">,</span>\u00a0<span class=\"o\">*</span>args<span class=\"p\">,</span>\u00a0<span class=\"o\">**</span>kw<span class=\"p\">):</span></td></tr><tr><th id=\"L158\"><a href=\"#L158\">158</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L159\"><a href=\"#L159\">159</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Start an instance of the given C{connectorType} connecting.</span></td></tr><tr><th id=\"L160\"><a href=\"#L160\">160</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L161\"><a href=\"#L161\">161</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @type connectorType: type which implements L{IConnector}</span></td></tr><tr><th id=\"L162\"><a href=\"#L162\">162</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L163\"><a href=\"#L163\">163</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param connectorType: The object given by C{connectorType(*args, **kw)}</span></td></tr><tr><th id=\"L164\"><a href=\"#L164\">164</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 will be started connecting.</span></td></tr><tr><th id=\"L165\"><a href=\"#L165\">165</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L166\"><a href=\"#L166\">166</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return:\u00a0 An object which provides L{IConnector}.</span></td></tr><tr><th id=\"L167\"><a href=\"#L167\">167</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L168\"><a href=\"#L168\">168</a></th><td></td></tr><tr><th id=\"L169\"><a href=\"#L169\">169</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IReactorTCP</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L170\"><a href=\"#L170\">170</a></th><td></td></tr><tr><th id=\"L171\"><a href=\"#L171\">171</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">listenTCP</span><span class=\"p\">(</span>port<span class=\"p\">,</span>\u00a0factory<span class=\"p\">,</span>\u00a0backlog<span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span>\u00a0interface<span class=\"o\">=</span><span class=\"s\">''</span><span class=\"p\">):</span></td></tr><tr><th id=\"L172\"><a href=\"#L172\">172</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Connects a given protocol factory to the given numeric TCP/IP port.</span></td></tr><tr><th id=\"L173\"><a href=\"#L173\">173</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L174\"><a href=\"#L174\">174</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param port: a port number on which to listen</span></td></tr><tr><th id=\"L175\"><a href=\"#L175\">175</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L176\"><a href=\"#L176\">176</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param factory: a L{twisted.internet.protocol.ServerFactory} instance</span></td></tr><tr><th id=\"L177\"><a href=\"#L177\">177</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L178\"><a href=\"#L178\">178</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param backlog: size of the listen queue</span></td></tr><tr><th id=\"L179\"><a href=\"#L179\">179</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L180\"><a href=\"#L180\">180</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param interface: the hostname to bind to, defaults to '' (all)</span></td></tr><tr><th id=\"L181\"><a href=\"#L181\">181</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L182\"><a href=\"#L182\">182</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: an object that provides L{IListeningPort}.</span></td></tr><tr><th id=\"L183\"><a href=\"#L183\">183</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L184\"><a href=\"#L184\">184</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @raise CannotListenError: as defined here</span></td></tr><tr><th id=\"L185\"><a href=\"#L185\">185</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 L{twisted.internet.error.CannotListenError},</span></td></tr><tr><th id=\"L186\"><a href=\"#L186\">186</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if it cannot listen on this port (e.g., it</span></td></tr><tr><th id=\"L187\"><a href=\"#L187\">187</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 cannot bind to the required port number)</span></td></tr><tr><th id=\"L188\"><a href=\"#L188\">188</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L189\"><a href=\"#L189\">189</a></th><td></td></tr><tr><th id=\"L190\"><a href=\"#L190\">190</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectTCP</span><span class=\"p\">(</span>host<span class=\"p\">,</span>\u00a0port<span class=\"p\">,</span>\u00a0factory<span class=\"p\">,</span>\u00a0timeout<span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">,</span>\u00a0bindAddress<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L191\"><a href=\"#L191\">191</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Connect a TCP client.</span></td></tr><tr><th id=\"L192\"><a href=\"#L192\">192</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L193\"><a href=\"#L193\">193</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param host: a host name</span></td></tr><tr><th id=\"L194\"><a href=\"#L194\">194</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L195\"><a href=\"#L195\">195</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param port: a port number</span></td></tr><tr><th id=\"L196\"><a href=\"#L196\">196</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L197\"><a href=\"#L197\">197</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param factory: a L{twisted.internet.protocol.ClientFactory} instance</span></td></tr><tr><th id=\"L198\"><a href=\"#L198\">198</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L199\"><a href=\"#L199\">199</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param timeout: number of seconds to wait before assuming the</span></td></tr><tr><th id=\"L200\"><a href=\"#L200\">200</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 connection has failed.</span></td></tr><tr><th id=\"L201\"><a href=\"#L201\">201</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L202\"><a href=\"#L202\">202</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param bindAddress: a (host, port) tuple of local address to bind</span></td></tr><tr><th id=\"L203\"><a href=\"#L203\">203</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 to, or None.</span></td></tr><tr><th id=\"L204\"><a href=\"#L204\">204</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L205\"><a href=\"#L205\">205</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: An object which provides L{IConnector}. This connector will</span></td></tr><tr><th id=\"L206\"><a href=\"#L206\">206</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0call various callbacks on the factory when a connection is</span></td></tr><tr><th id=\"L207\"><a href=\"#L207\">207</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0made, failed, or lost - see</span></td></tr><tr><th id=\"L208\"><a href=\"#L208\">208</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0L{ClientFactory&lt;twisted.internet.protocol.ClientFactory&gt;}</span></td></tr><tr><th id=\"L209\"><a href=\"#L209\">209</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0docs for details.</span></td></tr><tr><th id=\"L210\"><a href=\"#L210\">210</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L211\"><a href=\"#L211\">211</a></th><td></td></tr><tr><th id=\"L212\"><a href=\"#L212\">212</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IReactorSSL</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L213\"><a href=\"#L213\">213</a></th><td></td></tr><tr><th id=\"L214\"><a href=\"#L214\">214</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectSSL</span><span class=\"p\">(</span>host<span class=\"p\">,</span>\u00a0port<span class=\"p\">,</span>\u00a0factory<span class=\"p\">,</span>\u00a0contextFactory<span class=\"p\">,</span>\u00a0timeout<span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">,</span>\u00a0bindAddress<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L215\"><a href=\"#L215\">215</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Connect a client Protocol to a remote SSL socket.</span></td></tr><tr><th id=\"L216\"><a href=\"#L216\">216</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L217\"><a href=\"#L217\">217</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param host: a host name</span></td></tr><tr><th id=\"L218\"><a href=\"#L218\">218</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L219\"><a href=\"#L219\">219</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param port: a port number</span></td></tr><tr><th id=\"L220\"><a href=\"#L220\">220</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L221\"><a href=\"#L221\">221</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param factory: a L{twisted.internet.protocol.ClientFactory} instance</span></td></tr><tr><th id=\"L222\"><a href=\"#L222\">222</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L223\"><a href=\"#L223\">223</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param contextFactory: a L{twisted.internet.ssl.ClientContextFactory} object.</span></td></tr><tr><th id=\"L224\"><a href=\"#L224\">224</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L225\"><a href=\"#L225\">225</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param timeout: number of seconds to wait before assuming the</span></td></tr><tr><th id=\"L226\"><a href=\"#L226\">226</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 connection has failed.</span></td></tr><tr><th id=\"L227\"><a href=\"#L227\">227</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L228\"><a href=\"#L228\">228</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param bindAddress: a (host, port) tuple of local address to bind to,</span></td></tr><tr><th id=\"L229\"><a href=\"#L229\">229</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 or C{None}.</span></td></tr><tr><th id=\"L230\"><a href=\"#L230\">230</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L231\"><a href=\"#L231\">231</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: An object which provides L{IConnector}.</span></td></tr><tr><th id=\"L232\"><a href=\"#L232\">232</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L233\"><a href=\"#L233\">233</a></th><td></td></tr><tr><th id=\"L234\"><a href=\"#L234\">234</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">listenSSL</span><span class=\"p\">(</span>port<span class=\"p\">,</span>\u00a0factory<span class=\"p\">,</span>\u00a0contextFactory<span class=\"p\">,</span>\u00a0backlog<span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span>\u00a0interface<span class=\"o\">=</span><span class=\"s\">''</span><span class=\"p\">):</span></td></tr><tr><th id=\"L235\"><a href=\"#L235\">235</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L236\"><a href=\"#L236\">236</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Connects a given protocol factory to the given numeric TCP/IP port.</span></td></tr><tr><th id=\"L237\"><a href=\"#L237\">237</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 The connection is a SSL one, using contexts created by the context</span></td></tr><tr><th id=\"L238\"><a href=\"#L238\">238</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 factory.</span></td></tr><tr><th id=\"L239\"><a href=\"#L239\">239</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L240\"><a href=\"#L240\">240</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param port: a port number on which to listen</span></td></tr><tr><th id=\"L241\"><a href=\"#L241\">241</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L242\"><a href=\"#L242\">242</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param factory: a L{twisted.internet.protocol.ServerFactory} instance</span></td></tr><tr><th id=\"L243\"><a href=\"#L243\">243</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L244\"><a href=\"#L244\">244</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param contextFactory: a L{twisted.internet.ssl.ContextFactory} instance</span></td></tr><tr><th id=\"L245\"><a href=\"#L245\">245</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L246\"><a href=\"#L246\">246</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param backlog: size of the listen queue</span></td></tr><tr><th id=\"L247\"><a href=\"#L247\">247</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L248\"><a href=\"#L248\">248</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param interface: the hostname to bind to, defaults to '' (all)</span></td></tr><tr><th id=\"L249\"><a href=\"#L249\">249</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L250\"><a href=\"#L250\">250</a></th><td></td></tr><tr><th id=\"L251\"><a href=\"#L251\">251</a></th><td></td></tr><tr><th id=\"L252\"><a href=\"#L252\">252</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IReactorUNIX</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L253\"><a href=\"#L253\">253</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"UNIX socket methods.\"\"\"</span></td></tr><tr><th id=\"L254\"><a href=\"#L254\">254</a></th><td></td></tr><tr><th id=\"L255\"><a href=\"#L255\">255</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectUNIX</span><span class=\"p\">(</span>address<span class=\"p\">,</span>\u00a0factory<span class=\"p\">,</span>\u00a0timeout<span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">,</span>\u00a0checkPID<span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span></td></tr><tr><th id=\"L256\"><a href=\"#L256\">256</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Connect a client protocol to a UNIX socket.</span></td></tr><tr><th id=\"L257\"><a href=\"#L257\">257</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L258\"><a href=\"#L258\">258</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param address: a path to a unix socket on the filesystem.</span></td></tr><tr><th id=\"L259\"><a href=\"#L259\">259</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L260\"><a href=\"#L260\">260</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param factory: a L{twisted.internet.protocol.ClientFactory} instance</span></td></tr><tr><th id=\"L261\"><a href=\"#L261\">261</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L262\"><a href=\"#L262\">262</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param timeout: number of seconds to wait before assuming the connection</span></td></tr><tr><th id=\"L263\"><a href=\"#L263\">263</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 has failed.</span></td></tr><tr><th id=\"L264\"><a href=\"#L264\">264</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L265\"><a href=\"#L265\">265</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param checkPID: if True, check for a pid file to verify that a server</span></td></tr><tr><th id=\"L266\"><a href=\"#L266\">266</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 is listening.</span></td></tr><tr><th id=\"L267\"><a href=\"#L267\">267</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L268\"><a href=\"#L268\">268</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: An object which provides L{IConnector}.</span></td></tr><tr><th id=\"L269\"><a href=\"#L269\">269</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L270\"><a href=\"#L270\">270</a></th><td></td></tr><tr><th id=\"L271\"><a href=\"#L271\">271</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">listenUNIX</span><span class=\"p\">(</span>address<span class=\"p\">,</span>\u00a0factory<span class=\"p\">,</span>\u00a0backlog<span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span>\u00a0mode<span class=\"o\">=</span><span class=\"mo\">0666</span><span class=\"p\">,</span>\u00a0wantPID<span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span></td></tr><tr><th id=\"L272\"><a href=\"#L272\">272</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Listen on a UNIX socket.</span></td></tr><tr><th id=\"L273\"><a href=\"#L273\">273</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L274\"><a href=\"#L274\">274</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param address: a path to a unix socket on the filesystem.</span></td></tr><tr><th id=\"L275\"><a href=\"#L275\">275</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L276\"><a href=\"#L276\">276</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param factory: a L{twisted.internet.protocol.Factory} instance.</span></td></tr><tr><th id=\"L277\"><a href=\"#L277\">277</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L278\"><a href=\"#L278\">278</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param backlog: number of connections to allow in backlog.</span></td></tr><tr><th id=\"L279\"><a href=\"#L279\">279</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L280\"><a href=\"#L280\">280</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param mode: mode to set on the unix socket.</span></td></tr><tr><th id=\"L281\"><a href=\"#L281\">281</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L282\"><a href=\"#L282\">282</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param wantPID: if True, create a pidfile for the socket.</span></td></tr><tr><th id=\"L283\"><a href=\"#L283\">283</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L284\"><a href=\"#L284\">284</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: An object which provides L{IListeningPort}.</span></td></tr><tr><th id=\"L285\"><a href=\"#L285\">285</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L286\"><a href=\"#L286\">286</a></th><td></td></tr><tr><th id=\"L287\"><a href=\"#L287\">287</a></th><td></td></tr><tr><th id=\"L288\"><a href=\"#L288\">288</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IReactorUNIXDatagram</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L289\"><a href=\"#L289\">289</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"datagram UNIX socket methods.\"\"\"</span></td></tr><tr><th id=\"L290\"><a href=\"#L290\">290</a></th><td></td></tr><tr><th id=\"L291\"><a href=\"#L291\">291</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectUNIXDatagram</span><span class=\"p\">(</span>address<span class=\"p\">,</span>\u00a0protocol<span class=\"p\">,</span>\u00a0maxPacketSize<span class=\"o\">=</span><span class=\"mi\">8192</span><span class=\"p\">,</span>\u00a0mode<span class=\"o\">=</span><span class=\"mo\">0666</span><span class=\"p\">,</span>\u00a0bindAddress<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L292\"><a href=\"#L292\">292</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Connect a client protocol to a datagram UNIX socket.</span></td></tr><tr><th id=\"L293\"><a href=\"#L293\">293</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L294\"><a href=\"#L294\">294</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param address: a path to a unix socket on the filesystem.</span></td></tr><tr><th id=\"L295\"><a href=\"#L295\">295</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L296\"><a href=\"#L296\">296</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param protocol: a L{twisted.internet.protocol.ConnectedDatagramProtocol} instance</span></td></tr><tr><th id=\"L297\"><a href=\"#L297\">297</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L298\"><a href=\"#L298\">298</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param maxPacketSize: maximum packet size to accept</span></td></tr><tr><th id=\"L299\"><a href=\"#L299\">299</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L300\"><a href=\"#L300\">300</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param mode: mode to set on the unix socket.</span></td></tr><tr><th id=\"L301\"><a href=\"#L301\">301</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L302\"><a href=\"#L302\">302</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param bindAddress: address to bind to</span></td></tr><tr><th id=\"L303\"><a href=\"#L303\">303</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L304\"><a href=\"#L304\">304</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: An object which provides L{IConnector}.</span></td></tr><tr><th id=\"L305\"><a href=\"#L305\">305</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L306\"><a href=\"#L306\">306</a></th><td></td></tr><tr><th id=\"L307\"><a href=\"#L307\">307</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">listenUNIXDatagram</span><span class=\"p\">(</span>address<span class=\"p\">,</span>\u00a0protocol<span class=\"p\">,</span>\u00a0maxPacketSize<span class=\"o\">=</span><span class=\"mi\">8192</span><span class=\"p\">,</span>\u00a0mode<span class=\"o\">=</span><span class=\"mo\">0666</span><span class=\"p\">):</span></td></tr><tr><th id=\"L308\"><a href=\"#L308\">308</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Listen on a datagram UNIX socket.</span></td></tr><tr><th id=\"L309\"><a href=\"#L309\">309</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L310\"><a href=\"#L310\">310</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param address: a path to a unix socket on the filesystem.</span></td></tr><tr><th id=\"L311\"><a href=\"#L311\">311</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L312\"><a href=\"#L312\">312</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param protocol: a L{twisted.internet.protocol.DatagramProtocol} instance.</span></td></tr><tr><th id=\"L313\"><a href=\"#L313\">313</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L314\"><a href=\"#L314\">314</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param maxPacketSize: maximum packet size to accept</span></td></tr><tr><th id=\"L315\"><a href=\"#L315\">315</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L316\"><a href=\"#L316\">316</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param mode: mode to set on the unix socket.</span></td></tr><tr><th id=\"L317\"><a href=\"#L317\">317</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L318\"><a href=\"#L318\">318</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: An object which provides L{IListeningPort}.</span></td></tr><tr><th id=\"L319\"><a href=\"#L319\">319</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L320\"><a href=\"#L320\">320</a></th><td></td></tr><tr><th id=\"L321\"><a href=\"#L321\">321</a></th><td></td></tr><tr><th id=\"L322\"><a href=\"#L322\">322</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IReactorUDP</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L323\"><a href=\"#L323\">323</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"UDP socket methods.</span></td></tr><tr><th id=\"L324\"><a href=\"#L324\">324</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L325\"><a href=\"#L325\">325</a></th><td><span class=\"sd\">\u00a0 \u00a0 IMPORTANT: This is an experimental new interface. It may change</span></td></tr><tr><th id=\"L326\"><a href=\"#L326\">326</a></th><td><span class=\"sd\">\u00a0 \u00a0 without backwards compatability. Suggestions are welcome.</span></td></tr><tr><th id=\"L327\"><a href=\"#L327\">327</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L328\"><a href=\"#L328\">328</a></th><td></td></tr><tr><th id=\"L329\"><a href=\"#L329\">329</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">listenUDP</span><span class=\"p\">(</span>port<span class=\"p\">,</span>\u00a0protocol<span class=\"p\">,</span>\u00a0interface<span class=\"o\">=</span><span class=\"s\">''</span><span class=\"p\">,</span>\u00a0maxPacketSize<span class=\"o\">=</span><span class=\"mi\">8192</span><span class=\"p\">):</span></td></tr><tr><th id=\"L330\"><a href=\"#L330\">330</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Connects a given DatagramProtocol to the given numeric UDP port.</span></td></tr><tr><th id=\"L331\"><a href=\"#L331\">331</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L332\"><a href=\"#L332\">332</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: object which provides L{IListeningPort}.</span></td></tr><tr><th id=\"L333\"><a href=\"#L333\">333</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L334\"><a href=\"#L334\">334</a></th><td></td></tr><tr><th id=\"L335\"><a href=\"#L335\">335</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectUDP</span><span class=\"p\">(</span>remotehost<span class=\"p\">,</span>\u00a0remoteport<span class=\"p\">,</span>\u00a0protocol<span class=\"p\">,</span>\u00a0localport<span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span></td></tr><tr><th id=\"L336\"><a href=\"#L336\">336</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 interface<span class=\"o\">=</span><span class=\"s\">''</span><span class=\"p\">,</span>\u00a0maxPacketSize<span class=\"o\">=</span><span class=\"mi\">8192</span><span class=\"p\">):</span></td></tr><tr><th id=\"L337\"><a href=\"#L337\">337</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"DEPRECATED.</span></td></tr><tr><th id=\"L338\"><a href=\"#L338\">338</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L339\"><a href=\"#L339\">339</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Connects a L{twisted.internet.protocol.ConnectedDatagramProtocol}</span></td></tr><tr><th id=\"L340\"><a href=\"#L340\">340</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 instance to a UDP port.</span></td></tr><tr><th id=\"L341\"><a href=\"#L341\">341</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L342\"><a href=\"#L342\">342</a></th><td></td></tr><tr><th id=\"L343\"><a href=\"#L343\">343</a></th><td></td></tr><tr><th id=\"L344\"><a href=\"#L344\">344</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IReactorMulticast</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L345\"><a href=\"#L345\">345</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"UDP socket methods that support multicast.</span></td></tr><tr><th id=\"L346\"><a href=\"#L346\">346</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L347\"><a href=\"#L347\">347</a></th><td><span class=\"sd\">\u00a0 \u00a0 IMPORTANT: This is an experimental new interface. It may change</span></td></tr><tr><th id=\"L348\"><a href=\"#L348\">348</a></th><td><span class=\"sd\">\u00a0 \u00a0 without backwards compatability. Suggestions are welcome.</span></td></tr><tr><th id=\"L349\"><a href=\"#L349\">349</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L350\"><a href=\"#L350\">350</a></th><td></td></tr><tr><th id=\"L351\"><a href=\"#L351\">351</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">listenMulticast</span><span class=\"p\">(</span>port<span class=\"p\">,</span>\u00a0protocol<span class=\"p\">,</span>\u00a0interface<span class=\"o\">=</span><span class=\"s\">''</span><span class=\"p\">,</span>\u00a0maxPacketSize<span class=\"o\">=</span><span class=\"mi\">8192</span><span class=\"p\">,</span></td></tr><tr><th id=\"L352\"><a href=\"#L352\">352</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 listenMultiple<span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">):</span></td></tr><tr><th id=\"L353\"><a href=\"#L353\">353</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L354\"><a href=\"#L354\">354</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Connects a given</span></td></tr><tr><th id=\"L355\"><a href=\"#L355\">355</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 L{DatagramProtocol&lt;twisted.internet.protocol.DatagramProtocol&gt;} to the</span></td></tr><tr><th id=\"L356\"><a href=\"#L356\">356</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 given numeric UDP port.</span></td></tr><tr><th id=\"L357\"><a href=\"#L357\">357</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L358\"><a href=\"#L358\">358</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param listenMultiple: boolean indicating whether multiple sockets can</span></td></tr><tr><th id=\"L359\"><a href=\"#L359\">359</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0bind to same UDP port.</span></td></tr><tr><th id=\"L360\"><a href=\"#L360\">360</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L361\"><a href=\"#L361\">361</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @returns: An object which provides L{IListeningPort}.</span></td></tr><tr><th id=\"L362\"><a href=\"#L362\">362</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L363\"><a href=\"#L363\">363</a></th><td></td></tr><tr><th id=\"L364\"><a href=\"#L364\">364</a></th><td></td></tr><tr><th id=\"L365\"><a href=\"#L365\">365</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IReactorProcess</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L366\"><a href=\"#L366\">366</a></th><td></td></tr><tr><th id=\"L367\"><a href=\"#L367\">367</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">spawnProcess</span><span class=\"p\">(</span>processProtocol<span class=\"p\">,</span>\u00a0executable<span class=\"p\">,</span>\u00a0args<span class=\"o\">=</span><span class=\"p\">(),</span>\u00a0env<span class=\"o\">=</span><span class=\"p\">{},</span>\u00a0path<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span></td></tr><tr><th id=\"L368\"><a href=\"#L368\">368</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0uid<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\u00a0gid<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span>\u00a0usePTY<span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\u00a0childFDs<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L369\"><a href=\"#L369\">369</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Spawn a process, with a process protocol.</span></td></tr><tr><th id=\"L370\"><a href=\"#L370\">370</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L371\"><a href=\"#L371\">371</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param processProtocol: a L{twisted.internet.protocol.ProcessProtocol} instance</span></td></tr><tr><th id=\"L372\"><a href=\"#L372\">372</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L373\"><a href=\"#L373\">373</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param executable: the file name to spawn - the full path should be</span></td></tr><tr><th id=\"L374\"><a href=\"#L374\">374</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0used.</span></td></tr><tr><th id=\"L375\"><a href=\"#L375\">375</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L376\"><a href=\"#L376\">376</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param args: the command line arguments to pass to the process; a</span></td></tr><tr><th id=\"L377\"><a href=\"#L377\">377</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0sequence of strings. The first string should be the</span></td></tr><tr><th id=\"L378\"><a href=\"#L378\">378</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0executable's name.</span></td></tr><tr><th id=\"L379\"><a href=\"#L379\">379</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L380\"><a href=\"#L380\">380</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param env: the environment variables to pass to the processs; a</span></td></tr><tr><th id=\"L381\"><a href=\"#L381\">381</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 dictionary of strings. If 'None', use os.environ.</span></td></tr><tr><th id=\"L382\"><a href=\"#L382\">382</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L383\"><a href=\"#L383\">383</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param path: the path to run the subprocess in - defaults to the</span></td></tr><tr><th id=\"L384\"><a href=\"#L384\">384</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0current directory.</span></td></tr><tr><th id=\"L385\"><a href=\"#L385\">385</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L386\"><a href=\"#L386\">386</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param uid: user ID to run the subprocess as. (Only available on</span></td></tr><tr><th id=\"L387\"><a href=\"#L387\">387</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 POSIX systems.)</span></td></tr><tr><th id=\"L388\"><a href=\"#L388\">388</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L389\"><a href=\"#L389\">389</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param gid: group ID to run the subprocess as. (Only available on</span></td></tr><tr><th id=\"L390\"><a href=\"#L390\">390</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 POSIX systems.)</span></td></tr><tr><th id=\"L391\"><a href=\"#L391\">391</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L392\"><a href=\"#L392\">392</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param usePTY: if true, run this process in a pseudo-terminal.</span></td></tr><tr><th id=\"L393\"><a href=\"#L393\">393</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0optionally a tuple of (masterfd, slavefd, ttyname),</span></td></tr><tr><th id=\"L394\"><a href=\"#L394\">394</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0in which case use those file descriptors.</span></td></tr><tr><th id=\"L395\"><a href=\"#L395\">395</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0(Not available on all systems.)</span></td></tr><tr><th id=\"L396\"><a href=\"#L396\">396</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L397\"><a href=\"#L397\">397</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param childFDs: A dictionary mapping file descriptors in the new child</span></td></tr><tr><th id=\"L398\"><a href=\"#L398\">398</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0process to an integer or to the string 'r' or 'w'.</span></td></tr><tr><th id=\"L399\"><a href=\"#L399\">399</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L400\"><a href=\"#L400\">400</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0If the value is an integer, it specifies a file</span></td></tr><tr><th id=\"L401\"><a href=\"#L401\">401</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0descriptor in the parent process which will be mapped</span></td></tr><tr><th id=\"L402\"><a href=\"#L402\">402</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0to a file descriptor (specified by the key) in the</span></td></tr><tr><th id=\"L403\"><a href=\"#L403\">403</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0child process.\u00a0 This is useful for things like inetd</span></td></tr><tr><th id=\"L404\"><a href=\"#L404\">404</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0and shell-like file redirection.</span></td></tr><tr><th id=\"L405\"><a href=\"#L405\">405</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L406\"><a href=\"#L406\">406</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0If it is the string 'r', a pipe will be created and</span></td></tr><tr><th id=\"L407\"><a href=\"#L407\">407</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0attached to the child at that file descriptor: the</span></td></tr><tr><th id=\"L408\"><a href=\"#L408\">408</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0child will be able to write to that file descriptor</span></td></tr><tr><th id=\"L409\"><a href=\"#L409\">409</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0and the parent will receive read notification via the</span></td></tr><tr><th id=\"L410\"><a href=\"#L410\">410</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0L{IProcessTransport.childDataReceived} callback.\u00a0 This</span></td></tr><tr><th id=\"L411\"><a href=\"#L411\">411</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0is useful for the child's stdout and stderr.</span></td></tr><tr><th id=\"L412\"><a href=\"#L412\">412</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L413\"><a href=\"#L413\">413</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0If it is the string 'w', similar setup to the previous</span></td></tr><tr><th id=\"L414\"><a href=\"#L414\">414</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0case will occur, with the pipe being readable by the</span></td></tr><tr><th id=\"L415\"><a href=\"#L415\">415</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0child instead of writeable.\u00a0 The parent process can</span></td></tr><tr><th id=\"L416\"><a href=\"#L416\">416</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0write to that file descriptor using</span></td></tr><tr><th id=\"L417\"><a href=\"#L417\">417</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0L{IProcessTransport.writeToChild}.\u00a0 This is useful for</span></td></tr><tr><th id=\"L418\"><a href=\"#L418\">418</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0the child's stdin.</span></td></tr><tr><th id=\"L419\"><a href=\"#L419\">419</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L420\"><a href=\"#L420\">420</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0If childFDs is not passed, the default behaviour is to</span></td></tr><tr><th id=\"L421\"><a href=\"#L421\">421</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0use a mapping that opens the usual stdin/stdout/stderr</span></td></tr><tr><th id=\"L422\"><a href=\"#L422\">422</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0pipes.</span></td></tr><tr><th id=\"L423\"><a href=\"#L423\">423</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L424\"><a href=\"#L424\">424</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @see: L{twisted.internet.protocol.ProcessProtocol}</span></td></tr><tr><th id=\"L425\"><a href=\"#L425\">425</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L426\"><a href=\"#L426\">426</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: An object which provides L{IProcessTransport}.</span></td></tr><tr><th id=\"L427\"><a href=\"#L427\">427</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L428\"><a href=\"#L428\">428</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @raise OSError: Raised with errno EAGAIN or ENOMEM if there are</span></td></tr><tr><th id=\"L429\"><a href=\"#L429\">429</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 insufficient system resources to create a new process.</span></td></tr><tr><th id=\"L430\"><a href=\"#L430\">430</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L431\"><a href=\"#L431\">431</a></th><td></td></tr><tr><th id=\"L432\"><a href=\"#L432\">432</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IReactorTime</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L433\"><a href=\"#L433\">433</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Time methods that a Reactor should implement.</span></td></tr><tr><th id=\"L434\"><a href=\"#L434\">434</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L435\"><a href=\"#L435\">435</a></th><td></td></tr><tr><th id=\"L436\"><a href=\"#L436\">436</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">callLater</span><span class=\"p\">(</span>delay<span class=\"p\">,</span>\u00a0<span class=\"nb\">callable</span><span class=\"p\">,</span>\u00a0<span class=\"o\">*</span>args<span class=\"p\">,</span>\u00a0<span class=\"o\">**</span>kw<span class=\"p\">):</span></td></tr><tr><th id=\"L437\"><a href=\"#L437\">437</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Call a function later.</span></td></tr><tr><th id=\"L438\"><a href=\"#L438\">438</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L439\"><a href=\"#L439\">439</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @type delay:\u00a0 C{float}</span></td></tr><tr><th id=\"L440\"><a href=\"#L440\">440</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param delay: the number of seconds to wait.</span></td></tr><tr><th id=\"L441\"><a href=\"#L441\">441</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L442\"><a href=\"#L442\">442</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param callable: the callable object to call later.</span></td></tr><tr><th id=\"L443\"><a href=\"#L443\">443</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L444\"><a href=\"#L444\">444</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param args: the arguments to call it with.</span></td></tr><tr><th id=\"L445\"><a href=\"#L445\">445</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L446\"><a href=\"#L446\">446</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param kw: the keyword arguments to call it with.</span></td></tr><tr><th id=\"L447\"><a href=\"#L447\">447</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L448\"><a href=\"#L448\">448</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: An object which provides L{IDelayedCall} and can be used to</span></td></tr><tr><th id=\"L449\"><a href=\"#L449\">449</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0cancel the scheduled call, by calling its C{cancel()} method.</span></td></tr><tr><th id=\"L450\"><a href=\"#L450\">450</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0It also may be rescheduled by calling its C{delay()} or</span></td></tr><tr><th id=\"L451\"><a href=\"#L451\">451</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0C{reset()} methods.</span></td></tr><tr><th id=\"L452\"><a href=\"#L452\">452</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L453\"><a href=\"#L453\">453</a></th><td></td></tr><tr><th id=\"L454\"><a href=\"#L454\">454</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">cancelCallLater</span><span class=\"p\">(</span>callID<span class=\"p\">):</span></td></tr><tr><th id=\"L455\"><a href=\"#L455\">455</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"This method is deprecated.</span></td></tr><tr><th id=\"L456\"><a href=\"#L456\">456</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L457\"><a href=\"#L457\">457</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Cancel a call that would happen later.</span></td></tr><tr><th id=\"L458\"><a href=\"#L458\">458</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L459\"><a href=\"#L459\">459</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param callID: this is an opaque identifier returned from C{callLater}</span></td></tr><tr><th id=\"L460\"><a href=\"#L460\">460</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0that will be used to cancel a specific call.</span></td></tr><tr><th id=\"L461\"><a href=\"#L461\">461</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L462\"><a href=\"#L462\">462</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @raise ValueError: if the callID is not recognized.</span></td></tr><tr><th id=\"L463\"><a href=\"#L463\">463</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L464\"><a href=\"#L464\">464</a></th><td></td></tr><tr><th id=\"L465\"><a href=\"#L465\">465</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getDelayedCalls</span><span class=\"p\">():</span></td></tr><tr><th id=\"L466\"><a href=\"#L466\">466</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Retrieve all currently scheduled delayed calls.</span></td></tr><tr><th id=\"L467\"><a href=\"#L467\">467</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L468\"><a href=\"#L468\">468</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: A tuple of all L{IDelayedCall} providers representing all</span></td></tr><tr><th id=\"L469\"><a href=\"#L469\">469</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0currently scheduled calls. This is everything that has been</span></td></tr><tr><th id=\"L470\"><a href=\"#L470\">470</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0returned by C{callLater} but not yet called or canceled.</span></td></tr><tr><th id=\"L471\"><a href=\"#L471\">471</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L472\"><a href=\"#L472\">472</a></th><td></td></tr><tr><th id=\"L473\"><a href=\"#L473\">473</a></th><td></td></tr><tr><th id=\"L474\"><a href=\"#L474\">474</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IDelayedCall</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L475\"><a href=\"#L475\">475</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"A scheduled call.</span></td></tr><tr><th id=\"L476\"><a href=\"#L476\">476</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L477\"><a href=\"#L477\">477</a></th><td><span class=\"sd\">\u00a0 \u00a0 There are probably other useful methods we can add to this interface;</span></td></tr><tr><th id=\"L478\"><a href=\"#L478\">478</a></th><td><span class=\"sd\">\u00a0 \u00a0 suggestions are welcome.</span></td></tr><tr><th id=\"L479\"><a href=\"#L479\">479</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L480\"><a href=\"#L480\">480</a></th><td></td></tr><tr><th id=\"L481\"><a href=\"#L481\">481</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getTime</span><span class=\"p\">():</span></td></tr><tr><th id=\"L482\"><a href=\"#L482\">482</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Get time when delayed call will happen.</span></td></tr><tr><th id=\"L483\"><a href=\"#L483\">483</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L484\"><a href=\"#L484\">484</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: time in seconds since epoch (a float).</span></td></tr><tr><th id=\"L485\"><a href=\"#L485\">485</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L486\"><a href=\"#L486\">486</a></th><td></td></tr><tr><th id=\"L487\"><a href=\"#L487\">487</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">cancel</span><span class=\"p\">():</span></td></tr><tr><th id=\"L488\"><a href=\"#L488\">488</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Cancel the scheduled call.</span></td></tr><tr><th id=\"L489\"><a href=\"#L489\">489</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L490\"><a href=\"#L490\">490</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @raises twisted.internet.error.AlreadyCalled: if the call has already</span></td></tr><tr><th id=\"L491\"><a href=\"#L491\">491</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 happened.</span></td></tr><tr><th id=\"L492\"><a href=\"#L492\">492</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @raises twisted.internet.error.AlreadyCancelled: if the call has already</span></td></tr><tr><th id=\"L493\"><a href=\"#L493\">493</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 been cancelled.</span></td></tr><tr><th id=\"L494\"><a href=\"#L494\">494</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L495\"><a href=\"#L495\">495</a></th><td></td></tr><tr><th id=\"L496\"><a href=\"#L496\">496</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">delay</span><span class=\"p\">(</span>secondsLater<span class=\"p\">):</span></td></tr><tr><th id=\"L497\"><a href=\"#L497\">497</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Delay the scheduled call.</span></td></tr><tr><th id=\"L498\"><a href=\"#L498\">498</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L499\"><a href=\"#L499\">499</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param secondsLater: how many seconds from its current firing time to delay</span></td></tr><tr><th id=\"L500\"><a href=\"#L500\">500</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L501\"><a href=\"#L501\">501</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @raises twisted.internet.error.AlreadyCalled: if the call has already</span></td></tr><tr><th id=\"L502\"><a href=\"#L502\">502</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 happened.</span></td></tr><tr><th id=\"L503\"><a href=\"#L503\">503</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @raises twisted.internet.error.AlreadyCancelled: if the call has already</span></td></tr><tr><th id=\"L504\"><a href=\"#L504\">504</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 been cancelled.</span></td></tr><tr><th id=\"L505\"><a href=\"#L505\">505</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L506\"><a href=\"#L506\">506</a></th><td></td></tr><tr><th id=\"L507\"><a href=\"#L507\">507</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">reset</span><span class=\"p\">(</span>secondsFromNow<span class=\"p\">):</span></td></tr><tr><th id=\"L508\"><a href=\"#L508\">508</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Reset the scheduled call's timer.</span></td></tr><tr><th id=\"L509\"><a href=\"#L509\">509</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L510\"><a href=\"#L510\">510</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param secondsFromNow: how many seconds from now it should fire,</span></td></tr><tr><th id=\"L511\"><a href=\"#L511\">511</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 equivalent to C{.cancel()} and then doing another</span></td></tr><tr><th id=\"L512\"><a href=\"#L512\">512</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 C{reactor.callLater(secondsLater, ...)}</span></td></tr><tr><th id=\"L513\"><a href=\"#L513\">513</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L514\"><a href=\"#L514\">514</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @raises twisted.internet.error.AlreadyCalled: if the call has already</span></td></tr><tr><th id=\"L515\"><a href=\"#L515\">515</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 happened.</span></td></tr><tr><th id=\"L516\"><a href=\"#L516\">516</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @raises twisted.internet.error.AlreadyCancelled: if the call has already</span></td></tr><tr><th id=\"L517\"><a href=\"#L517\">517</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 been cancelled.</span></td></tr><tr><th id=\"L518\"><a href=\"#L518\">518</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L519\"><a href=\"#L519\">519</a></th><td></td></tr><tr><th id=\"L520\"><a href=\"#L520\">520</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">active</span><span class=\"p\">():</span></td></tr><tr><th id=\"L521\"><a href=\"#L521\">521</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L522\"><a href=\"#L522\">522</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: True if this call is still active, False if it has been</span></td></tr><tr><th id=\"L523\"><a href=\"#L523\">523</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0called or cancelled.</span></td></tr><tr><th id=\"L524\"><a href=\"#L524\">524</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L525\"><a href=\"#L525\">525</a></th><td></td></tr><tr><th id=\"L526\"><a href=\"#L526\">526</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IReactorThreads</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L527\"><a href=\"#L527\">527</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Dispatch methods to be run in threads.</span></td></tr><tr><th id=\"L528\"><a href=\"#L528\">528</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L529\"><a href=\"#L529\">529</a></th><td><span class=\"sd\">\u00a0 \u00a0 Internally, this should use a thread pool and dispatch methods to them.</span></td></tr><tr><th id=\"L530\"><a href=\"#L530\">530</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L531\"><a href=\"#L531\">531</a></th><td></td></tr><tr><th id=\"L532\"><a href=\"#L532\">532</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">callInThread</span><span class=\"p\">(</span><span class=\"nb\">callable</span><span class=\"p\">,</span>\u00a0<span class=\"o\">*</span>args<span class=\"p\">,</span>\u00a0<span class=\"o\">**</span>kwargs<span class=\"p\">):</span></td></tr><tr><th id=\"L533\"><a href=\"#L533\">533</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Run the callable object in a separate thread.</span></td></tr><tr><th id=\"L534\"><a href=\"#L534\">534</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L535\"><a href=\"#L535\">535</a></th><td></td></tr><tr><th id=\"L536\"><a href=\"#L536\">536</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">callFromThread</span><span class=\"p\">(</span><span class=\"nb\">callable</span><span class=\"p\">,</span>\u00a0<span class=\"o\">*</span>args<span class=\"p\">,</span>\u00a0<span class=\"o\">**</span>kw<span class=\"p\">):</span></td></tr><tr><th id=\"L537\"><a href=\"#L537\">537</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Cause a function to be executed by the reactor thread.</span></td></tr><tr><th id=\"L538\"><a href=\"#L538\">538</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L539\"><a href=\"#L539\">539</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Use this method when you want to run a function in the reactor's thread</span></td></tr><tr><th id=\"L540\"><a href=\"#L540\">540</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 from another thread.\u00a0 Calling callFromThread should wake up the main</span></td></tr><tr><th id=\"L541\"><a href=\"#L541\">541</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 thread (where reactor.run() is executing) and run the given callable in</span></td></tr><tr><th id=\"L542\"><a href=\"#L542\">542</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 that thread.</span></td></tr><tr><th id=\"L543\"><a href=\"#L543\">543</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L544\"><a href=\"#L544\">544</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Obviously, the callable must be thread safe.\u00a0 (If you want to call a</span></td></tr><tr><th id=\"L545\"><a href=\"#L545\">545</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 function in the next mainloop iteration, but you're in the same thread,</span></td></tr><tr><th id=\"L546\"><a href=\"#L546\">546</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 use callLater with a delay of 0.)</span></td></tr><tr><th id=\"L547\"><a href=\"#L547\">547</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L548\"><a href=\"#L548\">548</a></th><td></td></tr><tr><th id=\"L549\"><a href=\"#L549\">549</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">suggestThreadPoolSize</span><span class=\"p\">(</span>size<span class=\"p\">):</span></td></tr><tr><th id=\"L550\"><a href=\"#L550\">550</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L551\"><a href=\"#L551\">551</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Suggest the size of the internal threadpool used to dispatch functions</span></td></tr><tr><th id=\"L552\"><a href=\"#L552\">552</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 passed to L{callInThread}.</span></td></tr><tr><th id=\"L553\"><a href=\"#L553\">553</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L554\"><a href=\"#L554\">554</a></th><td></td></tr><tr><th id=\"L555\"><a href=\"#L555\">555</a></th><td></td></tr><tr><th id=\"L556\"><a href=\"#L556\">556</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IReactorCore</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L557\"><a href=\"#L557\">557</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Core methods that a Reactor must implement.</span></td></tr><tr><th id=\"L558\"><a href=\"#L558\">558</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L559\"><a href=\"#L559\">559</a></th><td></td></tr><tr><th id=\"L560\"><a href=\"#L560\">560</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">resolve</span><span class=\"p\">(</span>name<span class=\"p\">,</span>\u00a0timeout<span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">):</span></td></tr><tr><th id=\"L561\"><a href=\"#L561\">561</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Return a L{twisted.internet.defer.Deferred} that will resolve a hostname.</span></td></tr><tr><th id=\"L562\"><a href=\"#L562\">562</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L563\"><a href=\"#L563\">563</a></th><td></td></tr><tr><th id=\"L564\"><a href=\"#L564\">564</a></th><td></td></tr><tr><th id=\"L565\"><a href=\"#L565\">565</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">run</span><span class=\"p\">():</span></td></tr><tr><th id=\"L566\"><a href=\"#L566\">566</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Fire 'startup' System Events, move the reactor to the 'running'</span></td></tr><tr><th id=\"L567\"><a href=\"#L567\">567</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 state, then run the main loop until it is stopped with stop() or</span></td></tr><tr><th id=\"L568\"><a href=\"#L568\">568</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 crash().</span></td></tr><tr><th id=\"L569\"><a href=\"#L569\">569</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L570\"><a href=\"#L570\">570</a></th><td></td></tr><tr><th id=\"L571\"><a href=\"#L571\">571</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">stop</span><span class=\"p\">():</span></td></tr><tr><th id=\"L572\"><a href=\"#L572\">572</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Fire 'shutdown' System Events, which will move the reactor to the</span></td></tr><tr><th id=\"L573\"><a href=\"#L573\">573</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 'stopped' state and cause reactor.run() to exit. \"\"\"</span></td></tr><tr><th id=\"L574\"><a href=\"#L574\">574</a></th><td></td></tr><tr><th id=\"L575\"><a href=\"#L575\">575</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">crash</span><span class=\"p\">():</span></td></tr><tr><th id=\"L576\"><a href=\"#L576\">576</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Stop the main loop *immediately*, without firing any system events.</span></td></tr><tr><th id=\"L577\"><a href=\"#L577\">577</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L578\"><a href=\"#L578\">578</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This is named as it is because this is an extremely \"rude\" thing to do;</span></td></tr><tr><th id=\"L579\"><a href=\"#L579\">579</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 it is possible to lose data and put your system in an inconsistent</span></td></tr><tr><th id=\"L580\"><a href=\"#L580\">580</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 state by calling this.\u00a0 However, it is necessary, as sometimes a system</span></td></tr><tr><th id=\"L581\"><a href=\"#L581\">581</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 can become wedged in a pre-shutdown call.</span></td></tr><tr><th id=\"L582\"><a href=\"#L582\">582</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L583\"><a href=\"#L583\">583</a></th><td></td></tr><tr><th id=\"L584\"><a href=\"#L584\">584</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">iterate</span><span class=\"p\">(</span>delay<span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span></td></tr><tr><th id=\"L585\"><a href=\"#L585\">585</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Run the main loop's I/O polling function for a period of time.</span></td></tr><tr><th id=\"L586\"><a href=\"#L586\">586</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L587\"><a href=\"#L587\">587</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This is most useful in applications where the UI is being drawn \"as</span></td></tr><tr><th id=\"L588\"><a href=\"#L588\">588</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 fast as possible\", such as games. All pending L{IDelayedCall}s will</span></td></tr><tr><th id=\"L589\"><a href=\"#L589\">589</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 be called.</span></td></tr><tr><th id=\"L590\"><a href=\"#L590\">590</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L591\"><a href=\"#L591\">591</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 The reactor must have been started (via the run() method) prior to</span></td></tr><tr><th id=\"L592\"><a href=\"#L592\">592</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 any invocations of this method.\u00a0 It must also be stopped manually</span></td></tr><tr><th id=\"L593\"><a href=\"#L593\">593</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 after the last call to this method (via the stop() method).\u00a0 This</span></td></tr><tr><th id=\"L594\"><a href=\"#L594\">594</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 method is not re-entrant: you must not call it recursively; in</span></td></tr><tr><th id=\"L595\"><a href=\"#L595\">595</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 particular, you must not call it while the reactor is running.</span></td></tr><tr><th id=\"L596\"><a href=\"#L596\">596</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L597\"><a href=\"#L597\">597</a></th><td></td></tr><tr><th id=\"L598\"><a href=\"#L598\">598</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">fireSystemEvent</span><span class=\"p\">(</span>eventType<span class=\"p\">):</span></td></tr><tr><th id=\"L599\"><a href=\"#L599\">599</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Fire a system-wide event.</span></td></tr><tr><th id=\"L600\"><a href=\"#L600\">600</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L601\"><a href=\"#L601\">601</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 System-wide events are things like 'startup', 'shutdown', and</span></td></tr><tr><th id=\"L602\"><a href=\"#L602\">602</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 'persist'.</span></td></tr><tr><th id=\"L603\"><a href=\"#L603\">603</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L604\"><a href=\"#L604\">604</a></th><td></td></tr><tr><th id=\"L605\"><a href=\"#L605\">605</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">addSystemEventTrigger</span><span class=\"p\">(</span>phase<span class=\"p\">,</span>\u00a0eventType<span class=\"p\">,</span>\u00a0<span class=\"nb\">callable</span><span class=\"p\">,</span>\u00a0<span class=\"o\">*</span>args<span class=\"p\">,</span>\u00a0<span class=\"o\">**</span>kw<span class=\"p\">):</span></td></tr><tr><th id=\"L606\"><a href=\"#L606\">606</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Add a function to be called when a system event occurs.</span></td></tr><tr><th id=\"L607\"><a href=\"#L607\">607</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L608\"><a href=\"#L608\">608</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Each \"system event\" in Twisted, such as 'startup', 'shutdown', and</span></td></tr><tr><th id=\"L609\"><a href=\"#L609\">609</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 'persist', has 3 phases: 'before', 'during', and 'after' (in that</span></td></tr><tr><th id=\"L610\"><a href=\"#L610\">610</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 order, of course).\u00a0 These events will be fired internally by the</span></td></tr><tr><th id=\"L611\"><a href=\"#L611\">611</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Reactor.</span></td></tr><tr><th id=\"L612\"><a href=\"#L612\">612</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L613\"><a href=\"#L613\">613</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 An implementor of this interface must only implement those events</span></td></tr><tr><th id=\"L614\"><a href=\"#L614\">614</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 described here.</span></td></tr><tr><th id=\"L615\"><a href=\"#L615\">615</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L616\"><a href=\"#L616\">616</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Callbacks registered for the \"before\" phase may return either None or a</span></td></tr><tr><th id=\"L617\"><a href=\"#L617\">617</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Deferred.\u00a0 The \"during\" phase will not execute until all of the</span></td></tr><tr><th id=\"L618\"><a href=\"#L618\">618</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Deferreds from the \"before\" phase have fired.</span></td></tr><tr><th id=\"L619\"><a href=\"#L619\">619</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L620\"><a href=\"#L620\">620</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Once the \"during\" phase is running, all of the remaining triggers must</span></td></tr><tr><th id=\"L621\"><a href=\"#L621\">621</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 execute; their return values must be ignored.</span></td></tr><tr><th id=\"L622\"><a href=\"#L622\">622</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L623\"><a href=\"#L623\">623</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param phase: a time to call the event -- either the string 'before',</span></td></tr><tr><th id=\"L624\"><a href=\"#L624\">624</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 'after', or 'during', describing when to call it</span></td></tr><tr><th id=\"L625\"><a href=\"#L625\">625</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 relative to the event's execution.</span></td></tr><tr><th id=\"L626\"><a href=\"#L626\">626</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L627\"><a href=\"#L627\">627</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param eventType: this is a string describing the type of event.</span></td></tr><tr><th id=\"L628\"><a href=\"#L628\">628</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L629\"><a href=\"#L629\">629</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param callable: the object to call before shutdown.</span></td></tr><tr><th id=\"L630\"><a href=\"#L630\">630</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L631\"><a href=\"#L631\">631</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param args: the arguments to call it with.</span></td></tr><tr><th id=\"L632\"><a href=\"#L632\">632</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L633\"><a href=\"#L633\">633</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param kw: the keyword arguments to call it with.</span></td></tr><tr><th id=\"L634\"><a href=\"#L634\">634</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L635\"><a href=\"#L635\">635</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: an ID that can be used to remove this call with</span></td></tr><tr><th id=\"L636\"><a href=\"#L636\">636</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0removeSystemEventTrigger.</span></td></tr><tr><th id=\"L637\"><a href=\"#L637\">637</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L638\"><a href=\"#L638\">638</a></th><td></td></tr><tr><th id=\"L639\"><a href=\"#L639\">639</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">removeSystemEventTrigger</span><span class=\"p\">(</span>triggerID<span class=\"p\">):</span></td></tr><tr><th id=\"L640\"><a href=\"#L640\">640</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Removes a trigger added with addSystemEventTrigger.</span></td></tr><tr><th id=\"L641\"><a href=\"#L641\">641</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L642\"><a href=\"#L642\">642</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param triggerID: a value returned from addSystemEventTrigger.</span></td></tr><tr><th id=\"L643\"><a href=\"#L643\">643</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L644\"><a href=\"#L644\">644</a></th><td></td></tr><tr><th id=\"L645\"><a href=\"#L645\">645</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">callWhenRunning</span><span class=\"p\">(</span><span class=\"nb\">callable</span><span class=\"p\">,</span>\u00a0<span class=\"o\">*</span>args<span class=\"p\">,</span>\u00a0<span class=\"o\">**</span>kw<span class=\"p\">):</span></td></tr><tr><th id=\"L646\"><a href=\"#L646\">646</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Call a function when the reactor is running.</span></td></tr><tr><th id=\"L647\"><a href=\"#L647\">647</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L648\"><a href=\"#L648\">648</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 If the reactor has not started, the callable will be scheduled</span></td></tr><tr><th id=\"L649\"><a href=\"#L649\">649</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 to run when it does start. Otherwise, the callable will be invoked</span></td></tr><tr><th id=\"L650\"><a href=\"#L650\">650</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 immediately.</span></td></tr><tr><th id=\"L651\"><a href=\"#L651\">651</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L652\"><a href=\"#L652\">652</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param callable: the callable object to call later.</span></td></tr><tr><th id=\"L653\"><a href=\"#L653\">653</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L654\"><a href=\"#L654\">654</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param args: the arguments to call it with.</span></td></tr><tr><th id=\"L655\"><a href=\"#L655\">655</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L656\"><a href=\"#L656\">656</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param kw: the keyword arguments to call it with.</span></td></tr><tr><th id=\"L657\"><a href=\"#L657\">657</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L658\"><a href=\"#L658\">658</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: None if the callable was invoked, otherwise a system</span></td></tr><tr><th id=\"L659\"><a href=\"#L659\">659</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0event id for the scheduled call.</span></td></tr><tr><th id=\"L660\"><a href=\"#L660\">660</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L661\"><a href=\"#L661\">661</a></th><td></td></tr><tr><th id=\"L662\"><a href=\"#L662\">662</a></th><td></td></tr><tr><th id=\"L663\"><a href=\"#L663\">663</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IReactorPluggableResolver</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L664\"><a href=\"#L664\">664</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"A reactor with a pluggable name resolver interface.</span></td></tr><tr><th id=\"L665\"><a href=\"#L665\">665</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L666\"><a href=\"#L666\">666</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">installResolver</span><span class=\"p\">(</span>resolver<span class=\"p\">):</span></td></tr><tr><th id=\"L667\"><a href=\"#L667\">667</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Set the internal resolver to use to for name lookups.</span></td></tr><tr><th id=\"L668\"><a href=\"#L668\">668</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L669\"><a href=\"#L669\">669</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @type resolver: An object implementing the L{IResolverSimple} interface</span></td></tr><tr><th id=\"L670\"><a href=\"#L670\">670</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param resolver: The new resolver to use.</span></td></tr><tr><th id=\"L671\"><a href=\"#L671\">671</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L672\"><a href=\"#L672\">672</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: The previously installed resolver.</span></td></tr><tr><th id=\"L673\"><a href=\"#L673\">673</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L674\"><a href=\"#L674\">674</a></th><td></td></tr><tr><th id=\"L675\"><a href=\"#L675\">675</a></th><td></td></tr><tr><th id=\"L676\"><a href=\"#L676\">676</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IReactorFDSet</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L677\"><a href=\"#L677\">677</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L678\"><a href=\"#L678\">678</a></th><td><span class=\"sd\">\u00a0 \u00a0 Implement me to be able to use</span></td></tr><tr><th id=\"L679\"><a href=\"#L679\">679</a></th><td><span class=\"sd\">\u00a0 \u00a0 L{FileDescriptor&lt;twisted.internet.abstract.FileDescriptor&gt;} type resources.</span></td></tr><tr><th id=\"L680\"><a href=\"#L680\">680</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L681\"><a href=\"#L681\">681</a></th><td><span class=\"sd\">\u00a0 \u00a0 This assumes that your main-loop uses UNIX-style numeric file descriptors</span></td></tr><tr><th id=\"L682\"><a href=\"#L682\">682</a></th><td><span class=\"sd\">\u00a0 \u00a0 (or at least similarly opaque IDs returned from a .fileno() method)</span></td></tr><tr><th id=\"L683\"><a href=\"#L683\">683</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L684\"><a href=\"#L684\">684</a></th><td></td></tr><tr><th id=\"L685\"><a href=\"#L685\">685</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">addReader</span><span class=\"p\">(</span>reader<span class=\"p\">):</span></td></tr><tr><th id=\"L686\"><a href=\"#L686\">686</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"I add reader to the set of file descriptors to get read events for.</span></td></tr><tr><th id=\"L687\"><a href=\"#L687\">687</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L688\"><a href=\"#L688\">688</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param reader: An L{IReadDescriptor} provider that will be checked for</span></td></tr><tr><th id=\"L689\"><a href=\"#L689\">689</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0read events until it is removed from the reactor with</span></td></tr><tr><th id=\"L690\"><a href=\"#L690\">690</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0L{removeReader}.</span></td></tr><tr><th id=\"L691\"><a href=\"#L691\">691</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L692\"><a href=\"#L692\">692</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: C{None}.</span></td></tr><tr><th id=\"L693\"><a href=\"#L693\">693</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L694\"><a href=\"#L694\">694</a></th><td></td></tr><tr><th id=\"L695\"><a href=\"#L695\">695</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">addWriter</span><span class=\"p\">(</span>writer<span class=\"p\">):</span></td></tr><tr><th id=\"L696\"><a href=\"#L696\">696</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"I add writer to the set of file descriptors to get write events for.</span></td></tr><tr><th id=\"L697\"><a href=\"#L697\">697</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L698\"><a href=\"#L698\">698</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param writer: An L{IWriteDescriptor} provider that will be checked for</span></td></tr><tr><th id=\"L699\"><a href=\"#L699\">699</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0read events until it is removed from the reactor with</span></td></tr><tr><th id=\"L700\"><a href=\"#L700\">700</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0L{removeWriter}.</span></td></tr><tr><th id=\"L701\"><a href=\"#L701\">701</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L702\"><a href=\"#L702\">702</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: C{None}.</span></td></tr><tr><th id=\"L703\"><a href=\"#L703\">703</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L704\"><a href=\"#L704\">704</a></th><td></td></tr><tr><th id=\"L705\"><a href=\"#L705\">705</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">removeReader</span><span class=\"p\">(</span>reader<span class=\"p\">):</span></td></tr><tr><th id=\"L706\"><a href=\"#L706\">706</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Removes an object previously added with L{addReader}.</span></td></tr><tr><th id=\"L707\"><a href=\"#L707\">707</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L708\"><a href=\"#L708\">708</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: C{None}.</span></td></tr><tr><th id=\"L709\"><a href=\"#L709\">709</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L710\"><a href=\"#L710\">710</a></th><td></td></tr><tr><th id=\"L711\"><a href=\"#L711\">711</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">removeWriter</span><span class=\"p\">(</span>writer<span class=\"p\">):</span></td></tr><tr><th id=\"L712\"><a href=\"#L712\">712</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Removes an object previously added with L{addWriter}.</span></td></tr><tr><th id=\"L713\"><a href=\"#L713\">713</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L714\"><a href=\"#L714\">714</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: C{None}.</span></td></tr><tr><th id=\"L715\"><a href=\"#L715\">715</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L716\"><a href=\"#L716\">716</a></th><td></td></tr><tr><th id=\"L717\"><a href=\"#L717\">717</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">removeAll</span><span class=\"p\">():</span></td></tr><tr><th id=\"L718\"><a href=\"#L718\">718</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Remove all readers and writers.</span></td></tr><tr><th id=\"L719\"><a href=\"#L719\">719</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L720\"><a href=\"#L720\">720</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Should not remove reactor internal reactor connections (like a waker).</span></td></tr><tr><th id=\"L721\"><a href=\"#L721\">721</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L722\"><a href=\"#L722\">722</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: A list of L{IReadDescriptor} and L{IWriteDescriptor} providers</span></td></tr><tr><th id=\"L723\"><a href=\"#L723\">723</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0which were removed.</span></td></tr><tr><th id=\"L724\"><a href=\"#L724\">724</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L725\"><a href=\"#L725\">725</a></th><td></td></tr><tr><th id=\"L726\"><a href=\"#L726\">726</a></th><td></td></tr><tr><th id=\"L727\"><a href=\"#L727\">727</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IListeningPort</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L728\"><a href=\"#L728\">728</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"A listening port.</span></td></tr><tr><th id=\"L729\"><a href=\"#L729\">729</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L730\"><a href=\"#L730\">730</a></th><td></td></tr><tr><th id=\"L731\"><a href=\"#L731\">731</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">startListening</span><span class=\"p\">():</span></td></tr><tr><th id=\"L732\"><a href=\"#L732\">732</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Start listening on this port.</span></td></tr><tr><th id=\"L733\"><a href=\"#L733\">733</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L734\"><a href=\"#L734\">734</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @raise CannotListenError: If it cannot listen on this port (e.g., it is</span></td></tr><tr><th id=\"L735\"><a href=\"#L735\">735</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 a TCP port and it cannot bind to the required</span></td></tr><tr><th id=\"L736\"><a href=\"#L736\">736</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 port number).</span></td></tr><tr><th id=\"L737\"><a href=\"#L737\">737</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L738\"><a href=\"#L738\">738</a></th><td></td></tr><tr><th id=\"L739\"><a href=\"#L739\">739</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">stopListening</span><span class=\"p\">():</span></td></tr><tr><th id=\"L740\"><a href=\"#L740\">740</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Stop listening on this port.</span></td></tr><tr><th id=\"L741\"><a href=\"#L741\">741</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L742\"><a href=\"#L742\">742</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 If it does not complete immediately, will return Deferred that fires</span></td></tr><tr><th id=\"L743\"><a href=\"#L743\">743</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 upon completion.</span></td></tr><tr><th id=\"L744\"><a href=\"#L744\">744</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L745\"><a href=\"#L745\">745</a></th><td></td></tr><tr><th id=\"L746\"><a href=\"#L746\">746</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getHost</span><span class=\"p\">():</span></td></tr><tr><th id=\"L747\"><a href=\"#L747\">747</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Get the host that this port is listening for.</span></td></tr><tr><th id=\"L748\"><a href=\"#L748\">748</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L749\"><a href=\"#L749\">749</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: An L{IAddress} provider.</span></td></tr><tr><th id=\"L750\"><a href=\"#L750\">750</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L751\"><a href=\"#L751\">751</a></th><td></td></tr><tr><th id=\"L752\"><a href=\"#L752\">752</a></th><td></td></tr><tr><th id=\"L753\"><a href=\"#L753\">753</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IFileDescriptor</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L754\"><a href=\"#L754\">754</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"A file descriptor.</span></td></tr><tr><th id=\"L755\"><a href=\"#L755\">755</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L756\"><a href=\"#L756\">756</a></th><td></td></tr><tr><th id=\"L757\"><a href=\"#L757\">757</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">fileno</span><span class=\"p\">():</span></td></tr><tr><th id=\"L758\"><a href=\"#L758\">758</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L759\"><a href=\"#L759\">759</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: The platform-specified representation of a file-descriptor</span></td></tr><tr><th id=\"L760\"><a href=\"#L760\">760</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0number.</span></td></tr><tr><th id=\"L761\"><a href=\"#L761\">761</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L762\"><a href=\"#L762\">762</a></th><td></td></tr><tr><th id=\"L763\"><a href=\"#L763\">763</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectionLost</span><span class=\"p\">(</span>reason<span class=\"p\">):</span></td></tr><tr><th id=\"L764\"><a href=\"#L764\">764</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Called when the connection was lost.</span></td></tr><tr><th id=\"L765\"><a href=\"#L765\">765</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L766\"><a href=\"#L766\">766</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This is called when the connection on a selectable object has been</span></td></tr><tr><th id=\"L767\"><a href=\"#L767\">767</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 lost.\u00a0 It will be called whether the connection was closed explicitly,</span></td></tr><tr><th id=\"L768\"><a href=\"#L768\">768</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 an exception occurred in an event handler, or the other end of the</span></td></tr><tr><th id=\"L769\"><a href=\"#L769\">769</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 connection closed it first.</span></td></tr><tr><th id=\"L770\"><a href=\"#L770\">770</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L771\"><a href=\"#L771\">771</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 See also L{IHalfCloseableDescriptor} if your descriptor wants to be</span></td></tr><tr><th id=\"L772\"><a href=\"#L772\">772</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 notified separately of the two halves of the connection being closed.</span></td></tr><tr><th id=\"L773\"><a href=\"#L773\">773</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L774\"><a href=\"#L774\">774</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param reason: A failure instance indicating the reason why the</span></td></tr><tr><th id=\"L775\"><a href=\"#L775\">775</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0connection was lost.\u00a0 L{error.ConnectionLost} and</span></td></tr><tr><th id=\"L776\"><a href=\"#L776\">776</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0L{error.ConnectionDone} are of special note, but the</span></td></tr><tr><th id=\"L777\"><a href=\"#L777\">777</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0failure may be of other classes as well.</span></td></tr><tr><th id=\"L778\"><a href=\"#L778\">778</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L779\"><a href=\"#L779\">779</a></th><td></td></tr><tr><th id=\"L780\"><a href=\"#L780\">780</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IReadDescriptor</span><span class=\"p\">(</span>IFileDescriptor<span class=\"p\">):</span></td></tr><tr><th id=\"L781\"><a href=\"#L781\">781</a></th><td></td></tr><tr><th id=\"L782\"><a href=\"#L782\">782</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">doRead</span><span class=\"p\">():</span></td></tr><tr><th id=\"L783\"><a href=\"#L783\">783</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Some data is available for reading on your descriptor.</span></td></tr><tr><th id=\"L784\"><a href=\"#L784\">784</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L785\"><a href=\"#L785\">785</a></th><td></td></tr><tr><th id=\"L786\"><a href=\"#L786\">786</a></th><td></td></tr><tr><th id=\"L787\"><a href=\"#L787\">787</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IWriteDescriptor</span><span class=\"p\">(</span>IFileDescriptor<span class=\"p\">):</span></td></tr><tr><th id=\"L788\"><a href=\"#L788\">788</a></th><td></td></tr><tr><th id=\"L789\"><a href=\"#L789\">789</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">doWrite</span><span class=\"p\">():</span></td></tr><tr><th id=\"L790\"><a href=\"#L790\">790</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Some data can be written to your descriptor.</span></td></tr><tr><th id=\"L791\"><a href=\"#L791\">791</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L792\"><a href=\"#L792\">792</a></th><td></td></tr><tr><th id=\"L793\"><a href=\"#L793\">793</a></th><td></td></tr><tr><th id=\"L794\"><a href=\"#L794\">794</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IReadWriteDescriptor</span><span class=\"p\">(</span>IReadDescriptor<span class=\"p\">,</span>\u00a0IWriteDescriptor<span class=\"p\">):</span></td></tr><tr><th id=\"L795\"><a href=\"#L795\">795</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"I am a L{FileDescriptor&lt;twisted.internet.abstract.FileDescriptor&gt;} that can both read and write.</span></td></tr><tr><th id=\"L796\"><a href=\"#L796\">796</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L797\"><a href=\"#L797\">797</a></th><td></td></tr><tr><th id=\"L798\"><a href=\"#L798\">798</a></th><td></td></tr><tr><th id=\"L799\"><a href=\"#L799\">799</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IHalfCloseableDescriptor</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L800\"><a href=\"#L800\">800</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"A descriptor that can be half-closed.\"\"\"</span></td></tr><tr><th id=\"L801\"><a href=\"#L801\">801</a></th><td></td></tr><tr><th id=\"L802\"><a href=\"#L802\">802</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">writeConnectionLost</span><span class=\"p\">(</span>reason<span class=\"p\">):</span></td></tr><tr><th id=\"L803\"><a href=\"#L803\">803</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Indicates write connection was lost.\"\"\"</span></td></tr><tr><th id=\"L804\"><a href=\"#L804\">804</a></th><td></td></tr><tr><th id=\"L805\"><a href=\"#L805\">805</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">readConnectionLost</span><span class=\"p\">(</span>reason<span class=\"p\">):</span></td></tr><tr><th id=\"L806\"><a href=\"#L806\">806</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Indicates read connection was lost.\"\"\"</span></td></tr><tr><th id=\"L807\"><a href=\"#L807\">807</a></th><td></td></tr><tr><th id=\"L808\"><a href=\"#L808\">808</a></th><td></td></tr><tr><th id=\"L809\"><a href=\"#L809\">809</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">ISystemHandle</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L810\"><a href=\"#L810\">810</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"An object that wraps a networking OS-specific handle.\"\"\"</span></td></tr><tr><th id=\"L811\"><a href=\"#L811\">811</a></th><td></td></tr><tr><th id=\"L812\"><a href=\"#L812\">812</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getHandle</span><span class=\"p\">():</span></td></tr><tr><th id=\"L813\"><a href=\"#L813\">813</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Return a system- and reactor-specific handle.</span></td></tr><tr><th id=\"L814\"><a href=\"#L814\">814</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L815\"><a href=\"#L815\">815</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This might be a socket.socket() object, or some other type of</span></td></tr><tr><th id=\"L816\"><a href=\"#L816\">816</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 object, depending on which reactor is being used. Use and</span></td></tr><tr><th id=\"L817\"><a href=\"#L817\">817</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 manipulate at your own risk.</span></td></tr><tr><th id=\"L818\"><a href=\"#L818\">818</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L819\"><a href=\"#L819\">819</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This might be used in cases where you want to set specific</span></td></tr><tr><th id=\"L820\"><a href=\"#L820\">820</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 options not exposed by the Twisted APIs.</span></td></tr><tr><th id=\"L821\"><a href=\"#L821\">821</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L822\"><a href=\"#L822\">822</a></th><td></td></tr><tr><th id=\"L823\"><a href=\"#L823\">823</a></th><td></td></tr><tr><th id=\"L824\"><a href=\"#L824\">824</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IConsumer</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L825\"><a href=\"#L825\">825</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"A consumer consumes data from a producer.\"\"\"</span></td></tr><tr><th id=\"L826\"><a href=\"#L826\">826</a></th><td></td></tr><tr><th id=\"L827\"><a href=\"#L827\">827</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">registerProducer</span><span class=\"p\">(</span>producer<span class=\"p\">,</span>\u00a0streaming<span class=\"p\">):</span></td></tr><tr><th id=\"L828\"><a href=\"#L828\">828</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L829\"><a href=\"#L829\">829</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Register to receive data from a producer.</span></td></tr><tr><th id=\"L830\"><a href=\"#L830\">830</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L831\"><a href=\"#L831\">831</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This sets self to be a consumer for a producer.\u00a0 When this object runs</span></td></tr><tr><th id=\"L832\"><a href=\"#L832\">832</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 out of data (as when a send(2) call on a socket succeeds in moving the</span></td></tr><tr><th id=\"L833\"><a href=\"#L833\">833</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 last data from a userspace buffer into a kernelspace buffer), it will</span></td></tr><tr><th id=\"L834\"><a href=\"#L834\">834</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 ask the producer to resumeProducing().</span></td></tr><tr><th id=\"L835\"><a href=\"#L835\">835</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L836\"><a href=\"#L836\">836</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 For L{IPullProducer} providers, C{resumeProducing} will be called once</span></td></tr><tr><th id=\"L837\"><a href=\"#L837\">837</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 each time data is required.</span></td></tr><tr><th id=\"L838\"><a href=\"#L838\">838</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L839\"><a href=\"#L839\">839</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 For L{IPushProducer} providers, C{pauseProducing} will be called</span></td></tr><tr><th id=\"L840\"><a href=\"#L840\">840</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 whenever the write buffer fills up and C{resumeProducing} will only be</span></td></tr><tr><th id=\"L841\"><a href=\"#L841\">841</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 called when it empties.</span></td></tr><tr><th id=\"L842\"><a href=\"#L842\">842</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L843\"><a href=\"#L843\">843</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @type producer: L{IProducer} provider</span></td></tr><tr><th id=\"L844\"><a href=\"#L844\">844</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L845\"><a href=\"#L845\">845</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @type streaming: C{bool}</span></td></tr><tr><th id=\"L846\"><a href=\"#L846\">846</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param streaming: C{True} if C{producer} provides L{IPushProducer},</span></td></tr><tr><th id=\"L847\"><a href=\"#L847\">847</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 C{False} if C{producer} provides L{IPullProducer}.</span></td></tr><tr><th id=\"L848\"><a href=\"#L848\">848</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L849\"><a href=\"#L849\">849</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: C{None}</span></td></tr><tr><th id=\"L850\"><a href=\"#L850\">850</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L851\"><a href=\"#L851\">851</a></th><td></td></tr><tr><th id=\"L852\"><a href=\"#L852\">852</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">unregisterProducer</span><span class=\"p\">():</span></td></tr><tr><th id=\"L853\"><a href=\"#L853\">853</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Stop consuming data from a producer, without disconnecting.</span></td></tr><tr><th id=\"L854\"><a href=\"#L854\">854</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L855\"><a href=\"#L855\">855</a></th><td></td></tr><tr><th id=\"L856\"><a href=\"#L856\">856</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">write</span><span class=\"p\">(</span>data<span class=\"p\">):</span></td></tr><tr><th id=\"L857\"><a href=\"#L857\">857</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"The producer will write data by calling this method.\"\"\"</span></td></tr><tr><th id=\"L858\"><a href=\"#L858\">858</a></th><td></td></tr><tr><th id=\"L859\"><a href=\"#L859\">859</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IFinishableConsumer</span><span class=\"p\">(</span>IConsumer<span class=\"p\">):</span></td></tr><tr><th id=\"L860\"><a href=\"#L860\">860</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"A Consumer for producers that finish.</span></td></tr><tr><th id=\"L861\"><a href=\"#L861\">861</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L862\"><a href=\"#L862\">862</a></th><td><span class=\"sd\">\u00a0 \u00a0 This interface is semi-stable.</span></td></tr><tr><th id=\"L863\"><a href=\"#L863\">863</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L864\"><a href=\"#L864\">864</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">finish</span><span class=\"p\">():</span></td></tr><tr><th id=\"L865\"><a href=\"#L865\">865</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"The producer has finished producing.\"\"\"</span></td></tr><tr><th id=\"L866\"><a href=\"#L866\">866</a></th><td></td></tr><tr><th id=\"L867\"><a href=\"#L867\">867</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IProducer</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L868\"><a href=\"#L868\">868</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"A producer produces data for a consumer.</span></td></tr><tr><th id=\"L869\"><a href=\"#L869\">869</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L870\"><a href=\"#L870\">870</a></th><td><span class=\"sd\">\u00a0 \u00a0 Typically producing is done by calling the write method of an class</span></td></tr><tr><th id=\"L871\"><a href=\"#L871\">871</a></th><td><span class=\"sd\">\u00a0 \u00a0 implementing L{IConsumer}.</span></td></tr><tr><th id=\"L872\"><a href=\"#L872\">872</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L873\"><a href=\"#L873\">873</a></th><td></td></tr><tr><th id=\"L874\"><a href=\"#L874\">874</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">stopProducing</span><span class=\"p\">():</span></td></tr><tr><th id=\"L875\"><a href=\"#L875\">875</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Stop producing data.</span></td></tr><tr><th id=\"L876\"><a href=\"#L876\">876</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L877\"><a href=\"#L877\">877</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This tells a producer that its consumer has died, so it must stop</span></td></tr><tr><th id=\"L878\"><a href=\"#L878\">878</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 producing data for good.</span></td></tr><tr><th id=\"L879\"><a href=\"#L879\">879</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L880\"><a href=\"#L880\">880</a></th><td></td></tr><tr><th id=\"L881\"><a href=\"#L881\">881</a></th><td></td></tr><tr><th id=\"L882\"><a href=\"#L882\">882</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IPushProducer</span><span class=\"p\">(</span>IProducer<span class=\"p\">):</span></td></tr><tr><th id=\"L883\"><a href=\"#L883\">883</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L884\"><a href=\"#L884\">884</a></th><td><span class=\"sd\">\u00a0 \u00a0 A push producer, also known as a streaming producer is expected to</span></td></tr><tr><th id=\"L885\"><a href=\"#L885\">885</a></th><td><span class=\"sd\">\u00a0 \u00a0 produce (write to this consumer) data on a continous basis, unless</span></td></tr><tr><th id=\"L886\"><a href=\"#L886\">886</a></th><td><span class=\"sd\">\u00a0 \u00a0 it has been paused. A paused push producer will resume producing</span></td></tr><tr><th id=\"L887\"><a href=\"#L887\">887</a></th><td><span class=\"sd\">\u00a0 \u00a0 after its resumeProducing() method is called.\u00a0 \u00a0For a push producer</span></td></tr><tr><th id=\"L888\"><a href=\"#L888\">888</a></th><td><span class=\"sd\">\u00a0 \u00a0 which is not pauseable, these functions may be noops.</span></td></tr><tr><th id=\"L889\"><a href=\"#L889\">889</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L890\"><a href=\"#L890\">890</a></th><td><span class=\"sd\">\u00a0 \u00a0 This interface is semi-stable.</span></td></tr><tr><th id=\"L891\"><a href=\"#L891\">891</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L892\"><a href=\"#L892\">892</a></th><td></td></tr><tr><th id=\"L893\"><a href=\"#L893\">893</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">pauseProducing</span><span class=\"p\">():</span></td></tr><tr><th id=\"L894\"><a href=\"#L894\">894</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Pause producing data.</span></td></tr><tr><th id=\"L895\"><a href=\"#L895\">895</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L896\"><a href=\"#L896\">896</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Tells a producer that it has produced too much data to process for</span></td></tr><tr><th id=\"L897\"><a href=\"#L897\">897</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 the time being, and to stop until resumeProducing() is called.</span></td></tr><tr><th id=\"L898\"><a href=\"#L898\">898</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L899\"><a href=\"#L899\">899</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">resumeProducing</span><span class=\"p\">():</span></td></tr><tr><th id=\"L900\"><a href=\"#L900\">900</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Resume producing data.</span></td></tr><tr><th id=\"L901\"><a href=\"#L901\">901</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L902\"><a href=\"#L902\">902</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This tells a producer to re-add itself to the main loop and produce</span></td></tr><tr><th id=\"L903\"><a href=\"#L903\">903</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 more data for its consumer.</span></td></tr><tr><th id=\"L904\"><a href=\"#L904\">904</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L905\"><a href=\"#L905\">905</a></th><td></td></tr><tr><th id=\"L906\"><a href=\"#L906\">906</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IPullProducer</span><span class=\"p\">(</span>IProducer<span class=\"p\">):</span></td></tr><tr><th id=\"L907\"><a href=\"#L907\">907</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L908\"><a href=\"#L908\">908</a></th><td><span class=\"sd\">\u00a0 \u00a0 A pull producer, also known as a non-streaming producer, is</span></td></tr><tr><th id=\"L909\"><a href=\"#L909\">909</a></th><td><span class=\"sd\">\u00a0 \u00a0 expected to produce data each time resumeProducing() is called.</span></td></tr><tr><th id=\"L910\"><a href=\"#L910\">910</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L911\"><a href=\"#L911\">911</a></th><td><span class=\"sd\">\u00a0 \u00a0 This interface is semi-stable.</span></td></tr><tr><th id=\"L912\"><a href=\"#L912\">912</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L913\"><a href=\"#L913\">913</a></th><td></td></tr><tr><th id=\"L914\"><a href=\"#L914\">914</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">resumeProducing</span><span class=\"p\">():</span></td></tr><tr><th id=\"L915\"><a href=\"#L915\">915</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Produce data for the consumer a single time.</span></td></tr><tr><th id=\"L916\"><a href=\"#L916\">916</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L917\"><a href=\"#L917\">917</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This tells a producer to produce data for the consumer once</span></td></tr><tr><th id=\"L918\"><a href=\"#L918\">918</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 (not repeatedly, once only). Typically this will be done</span></td></tr><tr><th id=\"L919\"><a href=\"#L919\">919</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 by calling the consumer's write() method a single time with</span></td></tr><tr><th id=\"L920\"><a href=\"#L920\">920</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 produced data.</span></td></tr><tr><th id=\"L921\"><a href=\"#L921\">921</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L922\"><a href=\"#L922\">922</a></th><td></td></tr><tr><th id=\"L923\"><a href=\"#L923\">923</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IProtocol</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L924\"><a href=\"#L924\">924</a></th><td></td></tr><tr><th id=\"L925\"><a href=\"#L925\">925</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">dataReceived</span><span class=\"p\">(</span>data<span class=\"p\">):</span></td></tr><tr><th id=\"L926\"><a href=\"#L926\">926</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Called whenever data is received.</span></td></tr><tr><th id=\"L927\"><a href=\"#L927\">927</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L928\"><a href=\"#L928\">928</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Use this method to translate to a higher-level message.\u00a0 Usually, some</span></td></tr><tr><th id=\"L929\"><a href=\"#L929\">929</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 callback will be made upon the receipt of each complete protocol</span></td></tr><tr><th id=\"L930\"><a href=\"#L930\">930</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 message.</span></td></tr><tr><th id=\"L931\"><a href=\"#L931\">931</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L932\"><a href=\"#L932\">932</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param data: a string of indeterminate length.\u00a0 Please keep in mind</span></td></tr><tr><th id=\"L933\"><a href=\"#L933\">933</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 that you will probably need to buffer some data, as partial</span></td></tr><tr><th id=\"L934\"><a href=\"#L934\">934</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 (or multiple) protocol messages may be received!\u00a0 I recommend</span></td></tr><tr><th id=\"L935\"><a href=\"#L935\">935</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 that unit tests for protocols call through to this method with</span></td></tr><tr><th id=\"L936\"><a href=\"#L936\">936</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 differing chunk sizes, down to one byte at a time.</span></td></tr><tr><th id=\"L937\"><a href=\"#L937\">937</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L938\"><a href=\"#L938\">938</a></th><td></td></tr><tr><th id=\"L939\"><a href=\"#L939\">939</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectionLost</span><span class=\"p\">(</span>reason<span class=\"p\">):</span></td></tr><tr><th id=\"L940\"><a href=\"#L940\">940</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Called when the connection is shut down.</span></td></tr><tr><th id=\"L941\"><a href=\"#L941\">941</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L942\"><a href=\"#L942\">942</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Clear any circular references here, and any external references</span></td></tr><tr><th id=\"L943\"><a href=\"#L943\">943</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 to this Protocol.\u00a0 The connection has been closed. The C{reason}</span></td></tr><tr><th id=\"L944\"><a href=\"#L944\">944</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Failure wraps a L{twisted.internet.error.ConnectionDone} or</span></td></tr><tr><th id=\"L945\"><a href=\"#L945\">945</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 L{twisted.internet.error.ConnectionLost} instance (or a subclass</span></td></tr><tr><th id=\"L946\"><a href=\"#L946\">946</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 of one of those).</span></td></tr><tr><th id=\"L947\"><a href=\"#L947\">947</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L948\"><a href=\"#L948\">948</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @type reason: L{twisted.python.failure.Failure}</span></td></tr><tr><th id=\"L949\"><a href=\"#L949\">949</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L950\"><a href=\"#L950\">950</a></th><td></td></tr><tr><th id=\"L951\"><a href=\"#L951\">951</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">makeConnection</span><span class=\"p\">(</span>transport<span class=\"p\">):</span></td></tr><tr><th id=\"L952\"><a href=\"#L952\">952</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Make a connection to a transport and a server.</span></td></tr><tr><th id=\"L953\"><a href=\"#L953\">953</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L954\"><a href=\"#L954\">954</a></th><td></td></tr><tr><th id=\"L955\"><a href=\"#L955\">955</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connectionMade</span><span class=\"p\">():</span></td></tr><tr><th id=\"L956\"><a href=\"#L956\">956</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Called when a connection is made.</span></td></tr><tr><th id=\"L957\"><a href=\"#L957\">957</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L958\"><a href=\"#L958\">958</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This may be considered the initializer of the protocol, because</span></td></tr><tr><th id=\"L959\"><a href=\"#L959\">959</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 it is called when the connection is completed.\u00a0 For clients,</span></td></tr><tr><th id=\"L960\"><a href=\"#L960\">960</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 this is called once the connection to the server has been</span></td></tr><tr><th id=\"L961\"><a href=\"#L961\">961</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 established; for servers, this is called after an accept() call</span></td></tr><tr><th id=\"L962\"><a href=\"#L962\">962</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 stops blocking and a socket has been received.\u00a0 If you need to</span></td></tr><tr><th id=\"L963\"><a href=\"#L963\">963</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 send any greeting or initial message, do it here.</span></td></tr><tr><th id=\"L964\"><a href=\"#L964\">964</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L965\"><a href=\"#L965\">965</a></th><td></td></tr><tr><th id=\"L966\"><a href=\"#L966\">966</a></th><td></td></tr><tr><th id=\"L967\"><a href=\"#L967\">967</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IHalfCloseableProtocol</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L968\"><a href=\"#L968\">968</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Implemented to indicate they want notification of half-closes.</span></td></tr><tr><th id=\"L969\"><a href=\"#L969\">969</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L970\"><a href=\"#L970\">970</a></th><td><span class=\"sd\">\u00a0 \u00a0 TCP supports the notion of half-closing the connection, e.g.</span></td></tr><tr><th id=\"L971\"><a href=\"#L971\">971</a></th><td><span class=\"sd\">\u00a0 \u00a0 closing the write side but still not stopping reading. A protocol</span></td></tr><tr><th id=\"L972\"><a href=\"#L972\">972</a></th><td><span class=\"sd\">\u00a0 \u00a0 that implements this interface will be notified of such events,</span></td></tr><tr><th id=\"L973\"><a href=\"#L973\">973</a></th><td><span class=\"sd\">\u00a0 \u00a0 instead of having connectionLost called.</span></td></tr><tr><th id=\"L974\"><a href=\"#L974\">974</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L975\"><a href=\"#L975\">975</a></th><td></td></tr><tr><th id=\"L976\"><a href=\"#L976\">976</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">readConnectionLost</span><span class=\"p\">():</span></td></tr><tr><th id=\"L977\"><a href=\"#L977\">977</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Notification of the read connection being closed.</span></td></tr><tr><th id=\"L978\"><a href=\"#L978\">978</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L979\"><a href=\"#L979\">979</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This indicates peer did half-close of write side. It is now</span></td></tr><tr><th id=\"L980\"><a href=\"#L980\">980</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 the responsiblity of the this protocol to call</span></td></tr><tr><th id=\"L981\"><a href=\"#L981\">981</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 loseConnection().\u00a0 In addition, the protocol MUST make sure a</span></td></tr><tr><th id=\"L982\"><a href=\"#L982\">982</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 reference to it still exists (i.e. by doing a callLater with</span></td></tr><tr><th id=\"L983\"><a href=\"#L983\">983</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 one of its methods, etc.)\u00a0 as the reactor will only have a</span></td></tr><tr><th id=\"L984\"><a href=\"#L984\">984</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 reference to it if it is writing.</span></td></tr><tr><th id=\"L985\"><a href=\"#L985\">985</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L986\"><a href=\"#L986\">986</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 If the protocol does not do so, it might get garbage collected</span></td></tr><tr><th id=\"L987\"><a href=\"#L987\">987</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 without the connectionLost method ever being called.</span></td></tr><tr><th id=\"L988\"><a href=\"#L988\">988</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L989\"><a href=\"#L989\">989</a></th><td></td></tr><tr><th id=\"L990\"><a href=\"#L990\">990</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">writeConnectionLost</span><span class=\"p\">():</span></td></tr><tr><th id=\"L991\"><a href=\"#L991\">991</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Notification of the write connection being closed.</span></td></tr><tr><th id=\"L992\"><a href=\"#L992\">992</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L993\"><a href=\"#L993\">993</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This will never be called for TCP connections as TCP does not</span></td></tr><tr><th id=\"L994\"><a href=\"#L994\">994</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 support notification of this type of half-close.</span></td></tr><tr><th id=\"L995\"><a href=\"#L995\">995</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L996\"><a href=\"#L996\">996</a></th><td></td></tr><tr><th id=\"L997\"><a href=\"#L997\">997</a></th><td></td></tr><tr><th id=\"L998\"><a href=\"#L998\">998</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IProtocolFactory</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L999\"><a href=\"#L999\">999</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Interface for protocol factories.</span></td></tr><tr><th id=\"L1000\"><a href=\"#L1000\">1000</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L1001\"><a href=\"#L1001\">1001</a></th><td></td></tr><tr><th id=\"L1002\"><a href=\"#L1002\">1002</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">buildProtocol</span><span class=\"p\">(</span>addr<span class=\"p\">):</span></td></tr><tr><th id=\"L1003\"><a href=\"#L1003\">1003</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Called when a connection has been established to addr.</span></td></tr><tr><th id=\"L1004\"><a href=\"#L1004\">1004</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1005\"><a href=\"#L1005\">1005</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 If None is returned, the connection is assumed to have been refused,</span></td></tr><tr><th id=\"L1006\"><a href=\"#L1006\">1006</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 and the Port will close the connection.</span></td></tr><tr><th id=\"L1007\"><a href=\"#L1007\">1007</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1008\"><a href=\"#L1008\">1008</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @type addr: (host, port)</span></td></tr><tr><th id=\"L1009\"><a href=\"#L1009\">1009</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param addr: The address of the newly-established connection</span></td></tr><tr><th id=\"L1010\"><a href=\"#L1010\">1010</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1011\"><a href=\"#L1011\">1011</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: None if the connection was refused, otherwise an object</span></td></tr><tr><th id=\"L1012\"><a href=\"#L1012\">1012</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0providing L{IProtocol}.</span></td></tr><tr><th id=\"L1013\"><a href=\"#L1013\">1013</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L1014\"><a href=\"#L1014\">1014</a></th><td></td></tr><tr><th id=\"L1015\"><a href=\"#L1015\">1015</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">doStart</span><span class=\"p\">():</span></td></tr><tr><th id=\"L1016\"><a href=\"#L1016\">1016</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Called every time this is connected to a Port or Connector.\"\"\"</span></td></tr><tr><th id=\"L1017\"><a href=\"#L1017\">1017</a></th><td></td></tr><tr><th id=\"L1018\"><a href=\"#L1018\">1018</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">doStop</span><span class=\"p\">():</span></td></tr><tr><th id=\"L1019\"><a href=\"#L1019\">1019</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Called every time this is unconnected from a Port or Connector.\"\"\"</span></td></tr><tr><th id=\"L1020\"><a href=\"#L1020\">1020</a></th><td></td></tr><tr><th id=\"L1021\"><a href=\"#L1021\">1021</a></th><td></td></tr><tr><th id=\"L1022\"><a href=\"#L1022\">1022</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">ITransport</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L1023\"><a href=\"#L1023\">1023</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"I am a transport for bytes.</span></td></tr><tr><th id=\"L1024\"><a href=\"#L1024\">1024</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1025\"><a href=\"#L1025\">1025</a></th><td><span class=\"sd\">\u00a0 \u00a0 I represent (and wrap) the physical connection and synchronicity</span></td></tr><tr><th id=\"L1026\"><a href=\"#L1026\">1026</a></th><td><span class=\"sd\">\u00a0 \u00a0 of the framework which is talking to the network.\u00a0 I make no</span></td></tr><tr><th id=\"L1027\"><a href=\"#L1027\">1027</a></th><td><span class=\"sd\">\u00a0 \u00a0 representations about whether calls to me will happen immediately</span></td></tr><tr><th id=\"L1028\"><a href=\"#L1028\">1028</a></th><td><span class=\"sd\">\u00a0 \u00a0 or require returning to a control loop, or whether they will happen</span></td></tr><tr><th id=\"L1029\"><a href=\"#L1029\">1029</a></th><td><span class=\"sd\">\u00a0 \u00a0 in the same or another thread.\u00a0 Consider methods of this class</span></td></tr><tr><th id=\"L1030\"><a href=\"#L1030\">1030</a></th><td><span class=\"sd\">\u00a0 \u00a0 (aside from getPeer) to be 'thrown over the wall', to happen at some</span></td></tr><tr><th id=\"L1031\"><a href=\"#L1031\">1031</a></th><td><span class=\"sd\">\u00a0 \u00a0 indeterminate time.</span></td></tr><tr><th id=\"L1032\"><a href=\"#L1032\">1032</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L1033\"><a href=\"#L1033\">1033</a></th><td></td></tr><tr><th id=\"L1034\"><a href=\"#L1034\">1034</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">write</span><span class=\"p\">(</span>data<span class=\"p\">):</span></td></tr><tr><th id=\"L1035\"><a href=\"#L1035\">1035</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Write some data to the physical connection, in sequence, in a</span></td></tr><tr><th id=\"L1036\"><a href=\"#L1036\">1036</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 non-blocking fashion.</span></td></tr><tr><th id=\"L1037\"><a href=\"#L1037\">1037</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1038\"><a href=\"#L1038\">1038</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 If possible, make sure that it is all written.\u00a0 No data will</span></td></tr><tr><th id=\"L1039\"><a href=\"#L1039\">1039</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 ever be lost, although (obviously) the connection may be closed</span></td></tr><tr><th id=\"L1040\"><a href=\"#L1040\">1040</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 before it all gets through.</span></td></tr><tr><th id=\"L1041\"><a href=\"#L1041\">1041</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L1042\"><a href=\"#L1042\">1042</a></th><td></td></tr><tr><th id=\"L1043\"><a href=\"#L1043\">1043</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">writeSequence</span><span class=\"p\">(</span>data<span class=\"p\">):</span></td></tr><tr><th id=\"L1044\"><a href=\"#L1044\">1044</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Write a list of strings to the physical connection.</span></td></tr><tr><th id=\"L1045\"><a href=\"#L1045\">1045</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1046\"><a href=\"#L1046\">1046</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 If possible, make sure that all of the data is written to</span></td></tr><tr><th id=\"L1047\"><a href=\"#L1047\">1047</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 the socket at once, without first copying it all into a</span></td></tr><tr><th id=\"L1048\"><a href=\"#L1048\">1048</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 single string.</span></td></tr><tr><th id=\"L1049\"><a href=\"#L1049\">1049</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L1050\"><a href=\"#L1050\">1050</a></th><td></td></tr><tr><th id=\"L1051\"><a href=\"#L1051\">1051</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">loseConnection</span><span class=\"p\">():</span></td></tr><tr><th id=\"L1052\"><a href=\"#L1052\">1052</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Close my connection, after writing all pending data.</span></td></tr><tr><th id=\"L1053\"><a href=\"#L1053\">1053</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1054\"><a href=\"#L1054\">1054</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Note that if there is a registered producer on a transport it</span></td></tr><tr><th id=\"L1055\"><a href=\"#L1055\">1055</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 will not be closed until the producer has been unregistered.</span></td></tr><tr><th id=\"L1056\"><a href=\"#L1056\">1056</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L1057\"><a href=\"#L1057\">1057</a></th><td></td></tr><tr><th id=\"L1058\"><a href=\"#L1058\">1058</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getPeer</span><span class=\"p\">():</span></td></tr><tr><th id=\"L1059\"><a href=\"#L1059\">1059</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Get the remote address of this connection.</span></td></tr><tr><th id=\"L1060\"><a href=\"#L1060\">1060</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1061\"><a href=\"#L1061\">1061</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Treat this method with caution.\u00a0 It is the unfortunate result of the</span></td></tr><tr><th id=\"L1062\"><a href=\"#L1062\">1062</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 CGI and Jabber standards, but should not be considered reliable for</span></td></tr><tr><th id=\"L1063\"><a href=\"#L1063\">1063</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 the usual host of reasons; port forwarding, proxying, firewalls, IP</span></td></tr><tr><th id=\"L1064\"><a href=\"#L1064\">1064</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 masquerading, etc.</span></td></tr><tr><th id=\"L1065\"><a href=\"#L1065\">1065</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1066\"><a href=\"#L1066\">1066</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: An L{IAddress} provider.</span></td></tr><tr><th id=\"L1067\"><a href=\"#L1067\">1067</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L1068\"><a href=\"#L1068\">1068</a></th><td></td></tr><tr><th id=\"L1069\"><a href=\"#L1069\">1069</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getHost</span><span class=\"p\">():</span></td></tr><tr><th id=\"L1070\"><a href=\"#L1070\">1070</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L1071\"><a href=\"#L1071\">1071</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Similar to getPeer, but returns an address describing this side of the</span></td></tr><tr><th id=\"L1072\"><a href=\"#L1072\">1072</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 connection.</span></td></tr><tr><th id=\"L1073\"><a href=\"#L1073\">1073</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1074\"><a href=\"#L1074\">1074</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: An L{IAddress} provider.</span></td></tr><tr><th id=\"L1075\"><a href=\"#L1075\">1075</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L1076\"><a href=\"#L1076\">1076</a></th><td></td></tr><tr><th id=\"L1077\"><a href=\"#L1077\">1077</a></th><td></td></tr><tr><th id=\"L1078\"><a href=\"#L1078\">1078</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">ITCPTransport</span><span class=\"p\">(</span>ITransport<span class=\"p\">):</span></td></tr><tr><th id=\"L1079\"><a href=\"#L1079\">1079</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"A TCP based transport.\"\"\"</span></td></tr><tr><th id=\"L1080\"><a href=\"#L1080\">1080</a></th><td></td></tr><tr><th id=\"L1081\"><a href=\"#L1081\">1081</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">loseWriteConnection</span><span class=\"p\">():</span></td></tr><tr><th id=\"L1082\"><a href=\"#L1082\">1082</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Half-close the write side of a TCP connection.</span></td></tr><tr><th id=\"L1083\"><a href=\"#L1083\">1083</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1084\"><a href=\"#L1084\">1084</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 If the protocol instance this is attached to provides</span></td></tr><tr><th id=\"L1085\"><a href=\"#L1085\">1085</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 IHalfCloseableProtocol, it will get notified when the operation is</span></td></tr><tr><th id=\"L1086\"><a href=\"#L1086\">1086</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 done. When closing write connection, as with loseConnection this will</span></td></tr><tr><th id=\"L1087\"><a href=\"#L1087\">1087</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 only happen when buffer has emptied and there is no registered</span></td></tr><tr><th id=\"L1088\"><a href=\"#L1088\">1088</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 producer.</span></td></tr><tr><th id=\"L1089\"><a href=\"#L1089\">1089</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L1090\"><a href=\"#L1090\">1090</a></th><td></td></tr><tr><th id=\"L1091\"><a href=\"#L1091\">1091</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getTcpNoDelay</span><span class=\"p\">():</span></td></tr><tr><th id=\"L1092\"><a href=\"#L1092\">1092</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Return if TCP_NODELAY is enabled.\"\"\"</span></td></tr><tr><th id=\"L1093\"><a href=\"#L1093\">1093</a></th><td></td></tr><tr><th id=\"L1094\"><a href=\"#L1094\">1094</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">setTcpNoDelay</span><span class=\"p\">(</span>enabled<span class=\"p\">):</span></td></tr><tr><th id=\"L1095\"><a href=\"#L1095\">1095</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Enable/disable TCP_NODELAY.</span></td></tr><tr><th id=\"L1096\"><a href=\"#L1096\">1096</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1097\"><a href=\"#L1097\">1097</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Enabling TCP_NODELAY turns off Nagle's algorithm. Small packets are</span></td></tr><tr><th id=\"L1098\"><a href=\"#L1098\">1098</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 sent sooner, possibly at the expense of overall throughput.\"\"\"</span></td></tr><tr><th id=\"L1099\"><a href=\"#L1099\">1099</a></th><td></td></tr><tr><th id=\"L1100\"><a href=\"#L1100\">1100</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getTcpKeepAlive</span><span class=\"p\">():</span></td></tr><tr><th id=\"L1101\"><a href=\"#L1101\">1101</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Return if SO_KEEPALIVE enabled.\"\"\"</span></td></tr><tr><th id=\"L1102\"><a href=\"#L1102\">1102</a></th><td></td></tr><tr><th id=\"L1103\"><a href=\"#L1103\">1103</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">setTcpKeepAlive</span><span class=\"p\">(</span>enabled<span class=\"p\">):</span></td></tr><tr><th id=\"L1104\"><a href=\"#L1104\">1104</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Enable/disable SO_KEEPALIVE.</span></td></tr><tr><th id=\"L1105\"><a href=\"#L1105\">1105</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1106\"><a href=\"#L1106\">1106</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Enabling SO_KEEPALIVE sends packets periodically when the connection</span></td></tr><tr><th id=\"L1107\"><a href=\"#L1107\">1107</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 is otherwise idle, usually once every two hours. They are intended</span></td></tr><tr><th id=\"L1108\"><a href=\"#L1108\">1108</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 to allow detection of lost peers in a non-infinite amount of time.\"\"\"</span></td></tr><tr><th id=\"L1109\"><a href=\"#L1109\">1109</a></th><td></td></tr><tr><th id=\"L1110\"><a href=\"#L1110\">1110</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getHost</span><span class=\"p\">():</span></td></tr><tr><th id=\"L1111\"><a href=\"#L1111\">1111</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Returns L{IPv4Address}.\"\"\"</span></td></tr><tr><th id=\"L1112\"><a href=\"#L1112\">1112</a></th><td></td></tr><tr><th id=\"L1113\"><a href=\"#L1113\">1113</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getPeer</span><span class=\"p\">():</span></td></tr><tr><th id=\"L1114\"><a href=\"#L1114\">1114</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Returns L{IPv4Address}.\"\"\"</span></td></tr><tr><th id=\"L1115\"><a href=\"#L1115\">1115</a></th><td></td></tr><tr><th id=\"L1116\"><a href=\"#L1116\">1116</a></th><td></td></tr><tr><th id=\"L1117\"><a href=\"#L1117\">1117</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">ITLSTransport</span><span class=\"p\">(</span>ITCPTransport<span class=\"p\">):</span></td></tr><tr><th id=\"L1118\"><a href=\"#L1118\">1118</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"A TCP transport that supports switching to TLS midstream.</span></td></tr><tr><th id=\"L1119\"><a href=\"#L1119\">1119</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1120\"><a href=\"#L1120\">1120</a></th><td><span class=\"sd\">\u00a0 \u00a0 Once TLS mode is started the transport will implement L{ISSLTransport}.</span></td></tr><tr><th id=\"L1121\"><a href=\"#L1121\">1121</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L1122\"><a href=\"#L1122\">1122</a></th><td></td></tr><tr><th id=\"L1123\"><a href=\"#L1123\">1123</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">startTLS</span><span class=\"p\">(</span>contextFactory<span class=\"p\">):</span></td></tr><tr><th id=\"L1124\"><a href=\"#L1124\">1124</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Initiate TLS negotiation.</span></td></tr><tr><th id=\"L1125\"><a href=\"#L1125\">1125</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1126\"><a href=\"#L1126\">1126</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param contextFactory: A context factory (see L{ssl.py&lt;twisted.internet.ssl&gt;})</span></td></tr><tr><th id=\"L1127\"><a href=\"#L1127\">1127</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L1128\"><a href=\"#L1128\">1128</a></th><td></td></tr><tr><th id=\"L1129\"><a href=\"#L1129\">1129</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">ISSLTransport</span><span class=\"p\">(</span>ITCPTransport<span class=\"p\">):</span></td></tr><tr><th id=\"L1130\"><a href=\"#L1130\">1130</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"A SSL/TLS based transport.\"\"\"</span></td></tr><tr><th id=\"L1131\"><a href=\"#L1131\">1131</a></th><td></td></tr><tr><th id=\"L1132\"><a href=\"#L1132\">1132</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getPeerCertificate</span><span class=\"p\">():</span></td></tr><tr><th id=\"L1133\"><a href=\"#L1133\">1133</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Return an object with the peer's certificate info.\"\"\"</span></td></tr><tr><th id=\"L1134\"><a href=\"#L1134\">1134</a></th><td></td></tr><tr><th id=\"L1135\"><a href=\"#L1135\">1135</a></th><td></td></tr><tr><th id=\"L1136\"><a href=\"#L1136\">1136</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IProcessTransport</span><span class=\"p\">(</span>ITransport<span class=\"p\">):</span></td></tr><tr><th id=\"L1137\"><a href=\"#L1137\">1137</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"A process transport.</span></td></tr><tr><th id=\"L1138\"><a href=\"#L1138\">1138</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1139\"><a href=\"#L1139\">1139</a></th><td><span class=\"sd\">\u00a0 \u00a0 @ivar pid: The Process-ID of this process.</span></td></tr><tr><th id=\"L1140\"><a href=\"#L1140\">1140</a></th><td><span class=\"sd\">\u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L1141\"><a href=\"#L1141\">1141</a></th><td></td></tr><tr><th id=\"L1142\"><a href=\"#L1142\">1142</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">closeStdin</span><span class=\"p\">():</span></td></tr><tr><th id=\"L1143\"><a href=\"#L1143\">1143</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Close stdin after all data has been written out.\"\"\"</span></td></tr><tr><th id=\"L1144\"><a href=\"#L1144\">1144</a></th><td></td></tr><tr><th id=\"L1145\"><a href=\"#L1145\">1145</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">closeStdout</span><span class=\"p\">():</span></td></tr><tr><th id=\"L1146\"><a href=\"#L1146\">1146</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Close stdout.\"\"\"</span></td></tr><tr><th id=\"L1147\"><a href=\"#L1147\">1147</a></th><td></td></tr><tr><th id=\"L1148\"><a href=\"#L1148\">1148</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">closeStderr</span><span class=\"p\">():</span></td></tr><tr><th id=\"L1149\"><a href=\"#L1149\">1149</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Close stderr.\"\"\"</span></td></tr><tr><th id=\"L1150\"><a href=\"#L1150\">1150</a></th><td></td></tr><tr><th id=\"L1151\"><a href=\"#L1151\">1151</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">closeChildFD</span><span class=\"p\">(</span>descriptor<span class=\"p\">):</span></td></tr><tr><th id=\"L1152\"><a href=\"#L1152\">1152</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L1153\"><a href=\"#L1153\">1153</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Close a file descriptor which is connected to the child process, identified</span></td></tr><tr><th id=\"L1154\"><a href=\"#L1154\">1154</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 by its FD in the child process.</span></td></tr><tr><th id=\"L1155\"><a href=\"#L1155\">1155</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L1156\"><a href=\"#L1156\">1156</a></th><td></td></tr><tr><th id=\"L1157\"><a href=\"#L1157\">1157</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">writeToChild</span><span class=\"p\">(</span>childFD<span class=\"p\">,</span>\u00a0data<span class=\"p\">):</span></td></tr><tr><th id=\"L1158\"><a href=\"#L1158\">1158</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"</span></td></tr><tr><th id=\"L1159\"><a href=\"#L1159\">1159</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Similar to L{ITransport.write} but also allows the file descriptor in</span></td></tr><tr><th id=\"L1160\"><a href=\"#L1160\">1160</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 the child process which will receive the bytes to be specified.</span></td></tr><tr><th id=\"L1161\"><a href=\"#L1161\">1161</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1162\"><a href=\"#L1162\">1162</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This is not available on all platforms.</span></td></tr><tr><th id=\"L1163\"><a href=\"#L1163\">1163</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1164\"><a href=\"#L1164\">1164</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @type childFD: C{int}</span></td></tr><tr><th id=\"L1165\"><a href=\"#L1165\">1165</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param childFD: The file descriptor to which to write.</span></td></tr><tr><th id=\"L1166\"><a href=\"#L1166\">1166</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1167\"><a href=\"#L1167\">1167</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @type data: C{str}</span></td></tr><tr><th id=\"L1168\"><a href=\"#L1168\">1168</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param data: The bytes to write.</span></td></tr><tr><th id=\"L1169\"><a href=\"#L1169\">1169</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1170\"><a href=\"#L1170\">1170</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @return: C{None}</span></td></tr><tr><th id=\"L1171\"><a href=\"#L1171\">1171</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L1172\"><a href=\"#L1172\">1172</a></th><td></td></tr><tr><th id=\"L1173\"><a href=\"#L1173\">1173</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">loseConnection</span><span class=\"p\">():</span></td></tr><tr><th id=\"L1174\"><a href=\"#L1174\">1174</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Close stdin, stderr and stdout.\"\"\"</span></td></tr><tr><th id=\"L1175\"><a href=\"#L1175\">1175</a></th><td></td></tr><tr><th id=\"L1176\"><a href=\"#L1176\">1176</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">signalProcess</span><span class=\"p\">(</span>signalID<span class=\"p\">):</span></td></tr><tr><th id=\"L1177\"><a href=\"#L1177\">1177</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Send a signal to the process.</span></td></tr><tr><th id=\"L1178\"><a href=\"#L1178\">1178</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1179\"><a href=\"#L1179\">1179</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param signalID: can be</span></td></tr><tr><th id=\"L1180\"><a href=\"#L1180\">1180</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - one of C{\\\"HUP\\\"}, C{\\\"KILL\\\"}, C{\\\"STOP\\\"}, or C{\\\"INT\\\"}.</span></td></tr><tr><th id=\"L1181\"><a href=\"#L1181\">1181</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 These will be implemented in a</span></td></tr><tr><th id=\"L1182\"><a href=\"#L1182\">1182</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 cross-platform manner, and so should be used</span></td></tr><tr><th id=\"L1183\"><a href=\"#L1183\">1183</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if possible.</span></td></tr><tr><th id=\"L1184\"><a href=\"#L1184\">1184</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - an integer, where it represents a POSIX</span></td></tr><tr><th id=\"L1185\"><a href=\"#L1185\">1185</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 signal ID.</span></td></tr><tr><th id=\"L1186\"><a href=\"#L1186\">1186</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1187\"><a href=\"#L1187\">1187</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @raise twisted.internet.error.ProcessExitedAlready: The process has</span></td></tr><tr><th id=\"L1188\"><a href=\"#L1188\">1188</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 already exited.</span></td></tr><tr><th id=\"L1189\"><a href=\"#L1189\">1189</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L1190\"><a href=\"#L1190\">1190</a></th><td></td></tr><tr><th id=\"L1191\"><a href=\"#L1191\">1191</a></th><td></td></tr><tr><th id=\"L1192\"><a href=\"#L1192\">1192</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IServiceCollection</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L1193\"><a href=\"#L1193\">1193</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"An object which provides access to a collection of services.\"\"\"</span></td></tr><tr><th id=\"L1194\"><a href=\"#L1194\">1194</a></th><td></td></tr><tr><th id=\"L1195\"><a href=\"#L1195\">1195</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getServiceNamed</span><span class=\"p\">(</span>serviceName<span class=\"p\">):</span></td></tr><tr><th id=\"L1196\"><a href=\"#L1196\">1196</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Retrieve the named service from this application.</span></td></tr><tr><th id=\"L1197\"><a href=\"#L1197\">1197</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1198\"><a href=\"#L1198\">1198</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Raise a KeyError if there is no such service name.</span></td></tr><tr><th id=\"L1199\"><a href=\"#L1199\">1199</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L1200\"><a href=\"#L1200\">1200</a></th><td></td></tr><tr><th id=\"L1201\"><a href=\"#L1201\">1201</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">addService</span><span class=\"p\">(</span>service<span class=\"p\">):</span></td></tr><tr><th id=\"L1202\"><a href=\"#L1202\">1202</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Add a service to this collection.</span></td></tr><tr><th id=\"L1203\"><a href=\"#L1203\">1203</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L1204\"><a href=\"#L1204\">1204</a></th><td></td></tr><tr><th id=\"L1205\"><a href=\"#L1205\">1205</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">removeService</span><span class=\"p\">(</span>service<span class=\"p\">):</span></td></tr><tr><th id=\"L1206\"><a href=\"#L1206\">1206</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Remove a service from this collection.\"\"\"</span></td></tr><tr><th id=\"L1207\"><a href=\"#L1207\">1207</a></th><td></td></tr><tr><th id=\"L1208\"><a href=\"#L1208\">1208</a></th><td></td></tr><tr><th id=\"L1209\"><a href=\"#L1209\">1209</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IUDPTransport</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L1210\"><a href=\"#L1210\">1210</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Transport for UDP DatagramProtocols.\"\"\"</span></td></tr><tr><th id=\"L1211\"><a href=\"#L1211\">1211</a></th><td></td></tr><tr><th id=\"L1212\"><a href=\"#L1212\">1212</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">write</span><span class=\"p\">(</span>packet<span class=\"p\">,</span>\u00a0addr<span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">):</span></td></tr><tr><th id=\"L1213\"><a href=\"#L1213\">1213</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Write packet to given address.</span></td></tr><tr><th id=\"L1214\"><a href=\"#L1214\">1214</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1215\"><a href=\"#L1215\">1215</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param addr: a tuple of (ip, port). For connected transports must</span></td></tr><tr><th id=\"L1216\"><a href=\"#L1216\">1216</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0be the address the transport is connected to, or None.</span></td></tr><tr><th id=\"L1217\"><a href=\"#L1217\">1217</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0In non-connected mode this is mandatory.</span></td></tr><tr><th id=\"L1218\"><a href=\"#L1218\">1218</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1219\"><a href=\"#L1219\">1219</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @raise twisted.internet.error.MessageLengthError: C{packet} was too</span></td></tr><tr><th id=\"L1220\"><a href=\"#L1220\">1220</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 long.</span></td></tr><tr><th id=\"L1221\"><a href=\"#L1221\">1221</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L1222\"><a href=\"#L1222\">1222</a></th><td></td></tr><tr><th id=\"L1223\"><a href=\"#L1223\">1223</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">connect</span><span class=\"p\">(</span>host<span class=\"p\">,</span>\u00a0port<span class=\"p\">):</span></td></tr><tr><th id=\"L1224\"><a href=\"#L1224\">1224</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Connect the transport to an address.</span></td></tr><tr><th id=\"L1225\"><a href=\"#L1225\">1225</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1226\"><a href=\"#L1226\">1226</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 This changes it to connected mode. Datagrams can only be sent to</span></td></tr><tr><th id=\"L1227\"><a href=\"#L1227\">1227</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 this address, and will only be received from this address. In addition</span></td></tr><tr><th id=\"L1228\"><a href=\"#L1228\">1228</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 the protocol's connectionRefused method might get called if destination</span></td></tr><tr><th id=\"L1229\"><a href=\"#L1229\">1229</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 is not receiving datagrams.</span></td></tr><tr><th id=\"L1230\"><a href=\"#L1230\">1230</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1231\"><a href=\"#L1231\">1231</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param host: an IP address, not a domain name ('127.0.0.1', not 'localhost')</span></td></tr><tr><th id=\"L1232\"><a href=\"#L1232\">1232</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 @param port: port to connect to.</span></td></tr><tr><th id=\"L1233\"><a href=\"#L1233\">1233</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L1234\"><a href=\"#L1234\">1234</a></th><td></td></tr><tr><th id=\"L1235\"><a href=\"#L1235\">1235</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getHost</span><span class=\"p\">():</span></td></tr><tr><th id=\"L1236\"><a href=\"#L1236\">1236</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Returns IPv4Address.\"\"\"</span></td></tr><tr><th id=\"L1237\"><a href=\"#L1237\">1237</a></th><td></td></tr><tr><th id=\"L1238\"><a href=\"#L1238\">1238</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">stopListening</span><span class=\"p\">():</span></td></tr><tr><th id=\"L1239\"><a href=\"#L1239\">1239</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Stop listening on this port.</span></td></tr><tr><th id=\"L1240\"><a href=\"#L1240\">1240</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1241\"><a href=\"#L1241\">1241</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 If it does not complete immediately, will return Deferred that fires</span></td></tr><tr><th id=\"L1242\"><a href=\"#L1242\">1242</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 upon completion.</span></td></tr><tr><th id=\"L1243\"><a href=\"#L1243\">1243</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L1244\"><a href=\"#L1244\">1244</a></th><td></td></tr><tr><th id=\"L1245\"><a href=\"#L1245\">1245</a></th><td></td></tr><tr><th id=\"L1246\"><a href=\"#L1246\">1246</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IUDPConnectedTransport</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L1247\"><a href=\"#L1247\">1247</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"DEPRECATED. Transport for UDP ConnectedPacketProtocols.\"\"\"</span></td></tr><tr><th id=\"L1248\"><a href=\"#L1248\">1248</a></th><td></td></tr><tr><th id=\"L1249\"><a href=\"#L1249\">1249</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">write</span><span class=\"p\">(</span>packet<span class=\"p\">):</span></td></tr><tr><th id=\"L1250\"><a href=\"#L1250\">1250</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Write packet to address we are connected to.\"\"\"</span></td></tr><tr><th id=\"L1251\"><a href=\"#L1251\">1251</a></th><td></td></tr><tr><th id=\"L1252\"><a href=\"#L1252\">1252</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getHost</span><span class=\"p\">():</span></td></tr><tr><th id=\"L1253\"><a href=\"#L1253\">1253</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Returns UNIXAddress.\"\"\"</span></td></tr><tr><th id=\"L1254\"><a href=\"#L1254\">1254</a></th><td></td></tr><tr><th id=\"L1255\"><a href=\"#L1255\">1255</a></th><td></td></tr><tr><th id=\"L1256\"><a href=\"#L1256\">1256</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IUNIXDatagramTransport</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L1257\"><a href=\"#L1257\">1257</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Transport for UDP PacketProtocols.\"\"\"</span></td></tr><tr><th id=\"L1258\"><a href=\"#L1258\">1258</a></th><td></td></tr><tr><th id=\"L1259\"><a href=\"#L1259\">1259</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">write</span><span class=\"p\">(</span>packet<span class=\"p\">,</span>\u00a0address<span class=\"p\">):</span></td></tr><tr><th id=\"L1260\"><a href=\"#L1260\">1260</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Write packet to given address.\"\"\"</span></td></tr><tr><th id=\"L1261\"><a href=\"#L1261\">1261</a></th><td></td></tr><tr><th id=\"L1262\"><a href=\"#L1262\">1262</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getHost</span><span class=\"p\">():</span></td></tr><tr><th id=\"L1263\"><a href=\"#L1263\">1263</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Returns UNIXAddress.\"\"\"</span></td></tr><tr><th id=\"L1264\"><a href=\"#L1264\">1264</a></th><td></td></tr><tr><th id=\"L1265\"><a href=\"#L1265\">1265</a></th><td></td></tr><tr><th id=\"L1266\"><a href=\"#L1266\">1266</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IUNIXDatagramConnectedTransport</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L1267\"><a href=\"#L1267\">1267</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Transport for UDP ConnectedPacketProtocols.\"\"\"</span></td></tr><tr><th id=\"L1268\"><a href=\"#L1268\">1268</a></th><td></td></tr><tr><th id=\"L1269\"><a href=\"#L1269\">1269</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">write</span><span class=\"p\">(</span>packet<span class=\"p\">):</span></td></tr><tr><th id=\"L1270\"><a href=\"#L1270\">1270</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Write packet to address we are connected to.\"\"\"</span></td></tr><tr><th id=\"L1271\"><a href=\"#L1271\">1271</a></th><td></td></tr><tr><th id=\"L1272\"><a href=\"#L1272\">1272</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getHost</span><span class=\"p\">():</span></td></tr><tr><th id=\"L1273\"><a href=\"#L1273\">1273</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Returns UNIXAddress.\"\"\"</span></td></tr><tr><th id=\"L1274\"><a href=\"#L1274\">1274</a></th><td></td></tr><tr><th id=\"L1275\"><a href=\"#L1275\">1275</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getPeer</span><span class=\"p\">():</span></td></tr><tr><th id=\"L1276\"><a href=\"#L1276\">1276</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Returns UNIXAddress.\"\"\"</span></td></tr><tr><th id=\"L1277\"><a href=\"#L1277\">1277</a></th><td></td></tr><tr><th id=\"L1278\"><a href=\"#L1278\">1278</a></th><td></td></tr><tr><th id=\"L1279\"><a href=\"#L1279\">1279</a></th><td><span class=\"k\">class</span>\u00a0<span class=\"nc\">IMulticastTransport</span><span class=\"p\">(</span>Interface<span class=\"p\">):</span></td></tr><tr><th id=\"L1280\"><a href=\"#L1280\">1280</a></th><td>\u00a0 \u00a0 <span class=\"sd\">\"\"\"Additional functionality for multicast UDP.\"\"\"</span></td></tr><tr><th id=\"L1281\"><a href=\"#L1281\">1281</a></th><td></td></tr><tr><th id=\"L1282\"><a href=\"#L1282\">1282</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getOutgoingInterface</span><span class=\"p\">():</span></td></tr><tr><th id=\"L1283\"><a href=\"#L1283\">1283</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Return interface of outgoing multicast packets.\"\"\"</span></td></tr><tr><th id=\"L1284\"><a href=\"#L1284\">1284</a></th><td></td></tr><tr><th id=\"L1285\"><a href=\"#L1285\">1285</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">setOutgoingInterface</span><span class=\"p\">(</span>addr<span class=\"p\">):</span></td></tr><tr><th id=\"L1286\"><a href=\"#L1286\">1286</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Set interface for outgoing multicast packets.</span></td></tr><tr><th id=\"L1287\"><a href=\"#L1287\">1287</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1288\"><a href=\"#L1288\">1288</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 Returns Deferred of success.</span></td></tr><tr><th id=\"L1289\"><a href=\"#L1289\">1289</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L1290\"><a href=\"#L1290\">1290</a></th><td></td></tr><tr><th id=\"L1291\"><a href=\"#L1291\">1291</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getLoopbackMode</span><span class=\"p\">():</span></td></tr><tr><th id=\"L1292\"><a href=\"#L1292\">1292</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Return if loopback mode is enabled.\"\"\"</span></td></tr><tr><th id=\"L1293\"><a href=\"#L1293\">1293</a></th><td></td></tr><tr><th id=\"L1294\"><a href=\"#L1294\">1294</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">setLoopbackMode</span><span class=\"p\">(</span>mode<span class=\"p\">):</span></td></tr><tr><th id=\"L1295\"><a href=\"#L1295\">1295</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Set if loopback mode is enabled.\"\"\"</span></td></tr><tr><th id=\"L1296\"><a href=\"#L1296\">1296</a></th><td></td></tr><tr><th id=\"L1297\"><a href=\"#L1297\">1297</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">getTTL</span><span class=\"p\">():</span></td></tr><tr><th id=\"L1298\"><a href=\"#L1298\">1298</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Get time to live for multicast packets.\"\"\"</span></td></tr><tr><th id=\"L1299\"><a href=\"#L1299\">1299</a></th><td></td></tr><tr><th id=\"L1300\"><a href=\"#L1300\">1300</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">setTTL</span><span class=\"p\">(</span>ttl<span class=\"p\">):</span></td></tr><tr><th id=\"L1301\"><a href=\"#L1301\">1301</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Set time to live on multicast packets.\"\"\"</span></td></tr><tr><th id=\"L1302\"><a href=\"#L1302\">1302</a></th><td></td></tr><tr><th id=\"L1303\"><a href=\"#L1303\">1303</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">joinGroup</span><span class=\"p\">(</span>addr<span class=\"p\">,</span>\u00a0interface<span class=\"o\">=</span><span class=\"s\">\"\"</span><span class=\"p\">):</span></td></tr><tr><th id=\"L1304\"><a href=\"#L1304\">1304</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Join a multicast group. Returns Deferred of success or failure.</span></td></tr><tr><th id=\"L1305\"><a href=\"#L1305\">1305</a></th><td><span class=\"sd\"></span></td></tr><tr><th id=\"L1306\"><a href=\"#L1306\">1306</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 If an error occurs, the returned Deferred will fail with</span></td></tr><tr><th id=\"L1307\"><a href=\"#L1307\">1307</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 L{error.MulticastJoinError}.</span></td></tr><tr><th id=\"L1308\"><a href=\"#L1308\">1308</a></th><td><span class=\"sd\">\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"</span></td></tr><tr><th id=\"L1309\"><a href=\"#L1309\">1309</a></th><td></td></tr><tr><th id=\"L1310\"><a href=\"#L1310\">1310</a></th><td>\u00a0 \u00a0 <span class=\"k\">def</span>\u00a0<span class=\"nf\">leaveGroup</span><span class=\"p\">(</span>addr<span class=\"p\">,</span>\u00a0interface<span class=\"o\">=</span><span class=\"s\">\"\"</span><span class=\"p\">):</span></td></tr><tr><th id=\"L1311\"><a href=\"#L1311\">1311</a></th><td>\u00a0 \u00a0 \u00a0 \u00a0 <span class=\"sd\">\"\"\"Leave multicast group, return Deferred of success.\"\"\"</span></td></tr></tbody></table>\n\n      </div>\n      <div id=\"anydiff\">\n        <form action=\"/LUCICodeRepository/nomaticIM/diff\" method=\"get\">\n          <div class=\"buttons\">\n            <input type=\"hidden\" name=\"new_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/interfaces.py\" />\n            <input type=\"hidden\" name=\"old_path\" value=\"/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/interfaces.py\" />\n            <input type=\"hidden\" name=\"new_rev\" />\n            <input type=\"hidden\" name=\"old_rev\" />\n            <input type=\"submit\" value=\"View changes...\" title=\"Select paths and revs for Diff\" />\n          </div>\n        </form>\n      </div>\n      <div id=\"help\"><strong>Note:</strong> See <a href=\"/LUCICodeRepository/nomaticIM/wiki/TracBrowser\">TracBrowser</a>\n        for help on using the repository browser.</div>\n    </div>\n    <div id=\"altlinks\">\n      <h3>Download in other formats:</h3>\n      <ul>\n        <li class=\"first\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/browser/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/interfaces.py?format=txt\">Plain Text</a>\n        </li><li class=\"last\">\n          <a rel=\"nofollow\" href=\"/LUCICodeRepository/nomaticIM/export/1312/nomatic/tags/NomaticIM-0.0.5/buddy_bots/src/twisted/internet/interfaces.py\">Original Format</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n    <div id=\"footer\" lang=\"en\" xml:lang=\"en\"><hr />\n      <a id=\"tracpowered\" href=\"http://trac.edgewall.org/\"><img src=\"/LUCICodeRepository/nomaticIM/chrome/common/trac_logo_mini.png\" height=\"30\" width=\"107\" alt=\"Trac Powered\" /></a>\n      <p class=\"left\">Powered by <a href=\"/LUCICodeRepository/nomaticIM/about\"><strong>Trac 1.0.1</strong></a><br />\n        By <a href=\"http://www.edgewall.org/\">Edgewall Software</a>.</p>\n      <p class=\"right\">All content copyright 2007-2008 by LUCI <br /><a href=\"http://luci.ics.uci.edu/\">http://luci.ics.uci.edu/</a></p>\n    </div>\n\t\t<div id=\"sitefooter\">\n\t\t\t<script src=\"http://www.google-analytics.com/urchin.js\" type=\"text/javascript\">\n\t\t\t</script>\n\t\t\t<script type=\"text/javascript\">\n\t\t\t\t_uacct = \"UA-338915-2\";\n\t\t\t\turchinTracker();\n\t\t\t</script>\n\t\t</div>\n\t</body>\n</html>", "id": 44104.0}