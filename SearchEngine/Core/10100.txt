{"text": "Informatics 42 Winter 2 12 David G Kay UC Irvine Ninth and last Homework Get your work checked and signed off by a classmate then show it to your TA in lab by Monday March 12 This assignment is short use the remaining time to complete the lab assignment a Suppose you have an electronic cookbook that contains a list of recipes defined as follows Recipe namedtuple Recipe title ingredients steps The title is a string ingredients is a list of strings and steps is a list of strings For example r Recipe Thai Iced Coffee coffee sugar condensed milk ice brew coffee mix with sugar and condensed milk pour coffee mixture over ice a 1 Define the function is ingredient in recipe as described below def is ingredient in recipe r Recipe ing str bool Return true if the string occurs in the recipe s ingredients list a 2 Define the function are all steps short as described below def are all steps short r Recipe limit int bool Return true if every step in the recipe is no longer than the limit Try to do this using list comprehensions or map filter reduce and remember that reduce has to be imported from the functools library Hint First try defining count words and is step short each of which can be done in one line a 3 Define the function is recipe simple as described below def is recipe simple r Recipe bool Return true if recipe has 1 or fewer steps and each step is no longer than 6 words a 4 The first word of each step is a verb e g bake mix grill we can call that the technique involved in that step Define the function does recipe use technique as described below def does recipe use technique r Recipe technique str bool Return true if at least one step has the specified technique a 5 Now suppose you want to select recipes that will help you practice a particular technique Define the function simple practice recipes as described below using previously defined functions where appropriate Try to use list comprehensions and or map filter reduce def simple practice recipes rList list of Recipe technique str list of Recipe Return a list of the recipes from the input that are simple and that use the specified technique a 6 Most of you probably recognize this problem from a quiz last quarter Now that you ve had some experience in two programming languages what do you think are the advantages and disadvantages of programming in each You don t have to write anything formal for this just spend a little time reflecting on the issues b Be able to give answers to questions like these about the theme park simulator Feel free to talk with your classmates about them but realize that the point isn t to have the answer but to know how to get the answer especially if similar questions should show up on exams The function parseAttractionFile reads attractions into a dictionary then converts the dictionary into a list and passes the list to the AmusementPark What data structure does the AmusementPark useto store the attractions and why The function parseCustomerFile reads customers into a dictionary why then converts the dictionary values into a list and passes it to the AmusementParkSimulation What data structure s does the AmusementParkSimulation use to store the customers and why What other data structures is a customer part of during a day in the park What data structure s does the simulator use to store the rides a customer has visited Written by David G Kay Winter 2 5 modified Winter 2 6 and Winter 2 12 ", "_id": "http://www.ics.uci.edu/~kay/courses/i42/hw/hw9.html", "title": "ninth homework", "html": "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<HTML>\n<HEAD>\n<META HTTP-EQUIV=\"GENERATOR\" CONTENT=\"Globetrotter 1.1.1\">\n<META HTTP-EQUIV=\"AUTHOR\" CONTENT=\"David G. Kay\">\n<META HTTP-EQUIV=\"UPDATED\" CONTENT=\"Tuesday, March 7, 2006 10:58 AM\">\n<TITLE>Ninth Homework</TITLE>\n<META HTTP-EQUIV=\"X-GLOBETROTTERDATA\" CONTENT=\"AD8191AF\">\n<META HTTP-EQUIV=KEYWORDS CONTENT=\"CS 1, CS1, assignment, Scheme\">\n<META HTTP-EQUIV=\"DESCRIPTION\" CONTENT=\"An assignment for ICS H21, an honors first-quarter course in computer science in Information and Computer Science, UC Irvine, using How to Design Programs by Matthias Felleisen et al.\">\n<META HTTP-EQUIV=\"COPYRIGHT\" CONTENT=\"Copyright &#169; 2001 by David G. Kay.  All rights reserved.\">\n<link href=\"/~kay/courses/i42/code.css\" rel=\"stylesheet\" type=\"text/css\" />\n</HEAD>\n<BODY BGCOLOR=\"#FFFFFF\">\n<P><FONT FACE=\"Goudy Old Style\">Informatics 42 &bull; Winter 2012 &bull; David G. Kay\n  &bull; UC Irvine</FONT></P>\n<P> <FONT FACE=\"Goudy Old Style\" SIZE=6><B>Ninth (and last!) Homework</B></FONT></P>\n<P> <FONT FACE=\"Goudy Old Style\">Get your work checked and signed off by a classmate, then show it to your TA in lab by Monday, March 12.   This\nassignment is short; use the remaining time to complete the lab assignment.</FONT></P>\n<P><FONT FACE=\"Goudy Old Style\"><B>(a) </B></FONT>Suppose you have an electronic cookbook that contains a list of\nrecipes defined as follows:</P>\n<pre><code>     Recipe = namedtuple('Recipe', 'title ingredients steps')</code></pre>\nThe title is a string, ingredients is a list of strings, and steps is\na list of strings.  For example:\n<pre><code>     r = Recipe('Thai Iced Coffee', ['coffee', 'sugar', 'condensed milk', 'ice'],\n                ['brew coffee', 'mix with sugar and condensed-milk',\n                 'pour coffee mixture over ice'])</code></pre>\n<p>\n<strong>(a.1)</strong>\nDefine the function <code>is_ingredient_in_recipe</code>\nas described below.\n<pre><code>def is_ingredient_in_recipe(r: Recipe, ing: str) -> bool:\n   \"\"\" Return true if the string occurs in the recipe's ingredients list \"\"\"</code></pre>\n</p>\n<p><strong>(a.2)</strong>\n  Define the function <code>are_all_steps_short</code>\n  as described below.\n<pre><code>def are_all_steps_short(r: Recipe, limit: int) -> bool:\n   \"\"\" Return true if every step in the recipe is no longer than the limit \"\"\"</code>\n</pre>\n<p>Try to do this using list comprehensions or map/filter/reduce (and\n  remember that reduce has to be imported from the\n  <code>functools</code> library). [Hint:  First, try defining <code>count_words</code> and\n<code>is_step_short</code>, each of which can be done in one line.]</p>\n<!-- -->\n<p><strong>(a.3)</strong>\nDefine the function <code>is_recipe_simple</code>\nas described below.\n<pre><code>def is_recipe_simple(r: Recipe) -> bool:\n   \"\"\" Return true if recipe has 10 or fewer steps and each step is\n       no longer than 6 words. \"\"\"</code></pre></p>\n<!-- -->\n<p><strong>(a.4)</strong>\nThe first word of each step is a verb (e.g., bake, mix, grill); we can\ncall that the technique involved in that step. Define the function\n<code>does_recipe_use_technique</code> as described below.\n<pre><code>def does_recipe_use_technique(r: Recipe, technique: str) -> bool:\n   \"\"\" Return true if at least one step has the specified technique \"\"\"</code></pre>\n</p>\n<p>\n  <strong>(a.5)</strong>\n  Now, suppose you want to select recipes that will help you practice a\n  particular technique. Define the function\n  <code>simple_practice_recipes</code> as described below, using\n  previously defined functions where appropriate.  Try to use list\n  comprehensions and/or map/filter/reduce.\n<pre><code>def simple_practice_recipes(rList: 'list of Recipe', technique: str) -> 'list of Recipe':\n   \"\"\" Return a list of the recipes from the input that are simple\n       and that use the specified technique\"\"\"</code></pre>\n</p>\n<p><strong>(a.6)</strong>\n  Most of you probably recognize this problem from a quiz last quarter.\n  Now that you've had some experience in two programming languages,\n  what do you think are the advantages and disadvantages of programming\n  in each?  (You don't have to write anything formal for this; just\n  spend a little time reflecting on the issues.)\n<P><FONT FACE=\"Goudy Old Style\"><B>(b)</B> Be able to give answers to questions\n  like these about the theme park simulator.  Feel free to talk with your classmates about them, but realize\n  that the point isn&#39;t to <I>have</I> the answer but to know <I>how to\n    get</I> the answer, especially if similar questions should show up on exams.</FONT></P>\n<UL><LI>\n<FONT FACE=\"Goudy Old Style\">The function <code>parseAttractionFile</code> reads attractions into a dictionary, then converts the dictionary into a list and passes the list to the AmusementPark. What data structure does the AmusementPark useto store the attractions, and why?</FONT><BR><BR>\n</LI>\n<LI>\n<FONT FACE=\"Goudy Old Style\">The function <code>parseCustomerFile</code> reads customers into a dictionary (why?), then converts the dictionary values into a list and passes it to the AmusementParkSimulation. What data structure(s) does the AmusementParkSimulation use to store the customers, and why? What other data structures is a customer part of during a day in the park? <!-- ***** APS stores customers in Priority queue with arrival time as its priority, to start with (or more literally, as a sorted list). Overall, customers are stored in an unordered list as customers in the park, and they go into and out of queues for rides (inqueued into ride lines, dequeued into ride cars where they're stored as a list, dequeued back into the park's list of customers). Outside of the park's list of customers, it's references that get stored into the rides.--></FONT><BR><BR>\n</LI>\n<LI>\n  <FONT FACE=\"Goudy Old Style\">What data structure(s) does the simulator use\n    to store the rides a customer has visited? <!-- ****a list, ordered, of tuples (queue time, on time, off time, name).--></FONT></LI>\n</UL>\n<BR>\n<P>\n<FONT FACE=\"Helvetica\" SIZE=1>Written by David G. Kay, Winter 2005; modified\nWinter 2006 and Winter 2012.</FONT></P>\n<BR CLEAR=ALL>\n</BODY>\n</HTML>", "id": 10100.0}