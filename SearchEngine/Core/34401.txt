{"text": "1 package swirl workspace common 2 3 import junit framework TestCase 4 5 import org apache commons logging Log 6 import org apache commons logging LogFactory 7 8 9 DOCUMENT ME 1 11 author bpillet 12 13 public class PropertyFileLauncherTest extends TestCase 14 15 16 public static Test suite 17 18 TestSuite suite new TestSuite 19 suite addTestSuite PropertyFileLauncherTest class 2 suite addTest new PropertyFileLauncherTest testExtensions 21 suite addTest new CopyCommandTest testGoodCopyCollection 22 suite addTest new CopyCommandTest testGoodOverwriteCopy 23 suite addTest new CopyCommandTest testBadOverwriteCopy 24 return suite 25 26 27 28 TODO 29 WindowsFileLauncher launcher 3 31 TODO 32 Log log LogFactory getLog this getClass 33 34 35 Creates a new PropertyFileLauncherTest object 36 37 param name TODO 38 39 public PropertyFileLauncherTest String name 4 41 super name 42 43 44 45 TODO 46 47 public void setUp 48 49 launcher WindowsFileLauncher FileLauncherFactory createLauncher 5 51 52 public void testExtToMime 53 54 String doc launcher getExtension somefile doc 55 assertEquals doc doc 56 57 String mime launcher getMime doc 58 assertEquals Word Document 8 mime 59 6 String cmd launcher getCommand mime 61 log debug cmd cmd 62 assertEquals C Program Files Microsoft Office OFFICE11 WINWORD EXE n dde cmd 63 64 This page was automatically generated by Maven", "_id": "http://drzaius.ics.uci.edu/~swirl/impromptu-0.20/xref-test/swirl/workspace/common/PropertyFileLauncherTest.html", "title": "propertyfilelaunchertest xref", "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\" /><title>PropertyFileLauncherTest xref</title>\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../../stylesheet.css\" />\n</head>\n<body>\n<pre>\n\n<a name=\"1\" href=\"#1\">1</a>   <strong>package</strong> <a href=\"../../../swirl/workspace/common/package-summary.html\">swirl.workspace.common</a>;\n<a name=\"2\" href=\"#2\">2</a>   \n<a name=\"3\" href=\"#3\">3</a>   <strong>import</strong> junit.framework.TestCase;\n<a name=\"4\" href=\"#4\">4</a>   \n<a name=\"5\" href=\"#5\">5</a>   <strong>import</strong> org.apache.commons.logging.Log;\n<a name=\"6\" href=\"#6\">6</a>   <strong>import</strong> org.apache.commons.logging.LogFactory;\n<a name=\"7\" href=\"#7\">7</a>   \n<a name=\"8\" href=\"#8\">8</a>   <em>/**<em>*</em></em>\n<a name=\"9\" href=\"#9\">9</a>   <em> * DOCUMENT ME!</em>\n<a name=\"10\" href=\"#10\">10</a>  <em> *</em>\n<a name=\"11\" href=\"#11\">11</a>  <em> * @author bpillet</em>\n<a name=\"12\" href=\"#12\">12</a>  <em> */</em>\n<a name=\"13\" href=\"#13\">13</a>  <strong>public</strong> <strong>class</strong> <a href=\"../../../swirl/workspace/common/PropertyFileLauncherTest.html\">PropertyFileLauncherTest</a> <strong>extends</strong> TestCase\n<a name=\"14\" href=\"#14\">14</a>  {\n<a name=\"15\" href=\"#15\">15</a>      <em class=\"comment\">/*</em>\n<a name=\"16\" href=\"#16\">16</a>  <em class=\"comment\">       public static Test suite()</em>\n<a name=\"17\" href=\"#17\">17</a>  <em class=\"comment\">       {</em>\n<a name=\"18\" href=\"#18\">18</a>  <em class=\"comment\">           TestSuite suite = new TestSuite();</em>\n<a name=\"19\" href=\"#19\">19</a>  <em class=\"comment\">           suite.addTestSuite(PropertyFileLauncherTest.class);</em>\n<a name=\"20\" href=\"#20\">20</a>  <em class=\"comment\">           suite.addTest(new PropertyFileLauncherTest(\"testExtensions\"));</em>\n<a name=\"21\" href=\"#21\">21</a>  <em class=\"comment\">           //suite.addTest(new CopyCommandTest(\"testGoodCopyCollection\"));</em>\n<a name=\"22\" href=\"#22\">22</a>  <em class=\"comment\">           //suite.addTest(new CopyCommandTest(\"testGoodOverwriteCopy\"));</em>\n<a name=\"23\" href=\"#23\">23</a>  <em class=\"comment\">           //suite.addTest(new CopyCommandTest(\"testBadOverwriteCopy\"));</em>\n<a name=\"24\" href=\"#24\">24</a>  <em class=\"comment\">           return suite;</em>\n<a name=\"25\" href=\"#25\">25</a>  <em class=\"comment\">       }</em>\n<a name=\"26\" href=\"#26\">26</a>  <em class=\"comment\">     */</em>\n<a name=\"27\" href=\"#27\">27</a>  \n<a name=\"28\" href=\"#28\">28</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"29\" href=\"#29\">29</a>      WindowsFileLauncher launcher;\n<a name=\"30\" href=\"#30\">30</a>  \n<a name=\"31\" href=\"#31\">31</a>      <em>/**<em>* TODO */</em></em>\n<a name=\"32\" href=\"#32\">32</a>      Log log = LogFactory.getLog(<strong>this</strong>.getClass());\n<a name=\"33\" href=\"#33\">33</a>  \n<a name=\"34\" href=\"#34\">34</a>      <em>/**<em>*</em></em>\n<a name=\"35\" href=\"#35\">35</a>  <em>     * Creates a new PropertyFileLauncherTest object.</em>\n<a name=\"36\" href=\"#36\">36</a>  <em>     *</em>\n<a name=\"37\" href=\"#37\">37</a>  <em>     * @param name TODO</em>\n<a name=\"38\" href=\"#38\">38</a>  <em>     */</em>\n<a name=\"39\" href=\"#39\">39</a>      <strong>public</strong> <a href=\"../../../swirl/workspace/common/PropertyFileLauncherTest.html\">PropertyFileLauncherTest</a>(String name)\n<a name=\"40\" href=\"#40\">40</a>      {\n<a name=\"41\" href=\"#41\">41</a>          <strong>super</strong>(name);\n<a name=\"42\" href=\"#42\">42</a>      }\n<a name=\"43\" href=\"#43\">43</a>  \n<a name=\"44\" href=\"#44\">44</a>      <em>/**<em>*</em></em>\n<a name=\"45\" href=\"#45\">45</a>  <em>     * TODO</em>\n<a name=\"46\" href=\"#46\">46</a>  <em>     */</em>\n<a name=\"47\" href=\"#47\">47</a>      <strong>public</strong> <strong>void</strong> setUp()\n<a name=\"48\" href=\"#48\">48</a>      {\n<a name=\"49\" href=\"#49\">49</a>          launcher = (WindowsFileLauncher)FileLauncherFactory.createLauncher();\n<a name=\"50\" href=\"#50\">50</a>      }\n<a name=\"51\" href=\"#51\">51</a>  \n<a name=\"52\" href=\"#52\">52</a>      <strong>public</strong> <strong>void</strong> testExtToMime()\n<a name=\"53\" href=\"#53\">53</a>      {\n<a name=\"54\" href=\"#54\">54</a>      \tString doc = launcher.getExtension(<span class=\"string\">\"somefile.doc\"</span>);\n<a name=\"55\" href=\"#55\">55</a>      \tassertEquals(<span class=\"string\">\".doc\"</span>, doc);\n<a name=\"56\" href=\"#56\">56</a>      \t\n<a name=\"57\" href=\"#57\">57</a>      \tString mime = launcher.getMime(doc);\n<a name=\"58\" href=\"#58\">58</a>      \tassertEquals(<span class=\"string\">\"Word.Document.8\"</span>, mime);\n<a name=\"59\" href=\"#59\">59</a>      \t\n<a name=\"60\" href=\"#60\">60</a>      \tString cmd = launcher.getCommand(mime);\n<a name=\"61\" href=\"#61\">61</a>      \tlog.debug(<span class=\"string\">\"cmd: + \"</span> + cmd);\n<a name=\"62\" href=\"#62\">62</a>      \tassertEquals(<span class=\"string\">\"\\&quot;C:&#47;&#47;Program Files&#47;&#47;Microsoft Office&#47;&#47;OFFICE11&#47;&#47;WINWORD.EXE\\&quot; /n /dde\"</span>, cmd);\n<a name=\"63\" href=\"#63\">63</a>      }\n<a name=\"64\" href=\"#64\">64</a>  }\n</pre>\n<hr/><div id=\"footer\">This page was automatically generated by <a href=\"http://maven.apache.org/\">Maven</a></div></body>\n</html>\n\n", "id": 34401.0}